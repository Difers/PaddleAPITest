paddle.Tensor.__abs__(Tensor([10, 1024],"complex64"), )
paddle.Tensor.__abs__(Tensor([10, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([104, 8, 33, 33],"float32"), Tensor([33, 33],"float32"), )
paddle.Tensor.__add__(Tensor([144, 8, 24, 24],"float32"), Tensor([24, 24],"float32"), )
paddle.Tensor.__add__(Tensor([1640, 80],"float32"), Tensor([1640, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 202, 256],"float32"), Tensor([2, 202, 256],"float32"), )
paddle.Tensor.__add__(Tensor([1503, 80],"float32"), Tensor([1503, 80],"float32"), )
paddle.Tensor.__add__(Tensor([10, 110, 256],"float32"), Tensor([1, 110, 256],"float32"), )
paddle.Tensor.__add__(Tensor([2, 256, 8, 16],"float32"), Tensor([2, 256, 8, 16],"float32"), )
paddle.Tensor.__add__(Tensor([1, 8, 61236],"float32"), Tensor([1, 8, 61236],"float32"), )
paddle.Tensor.__add__(Tensor([288, 8, 10, 14],"float32"), Tensor([288, 1, 1, 14],"float32"), )
paddle.Tensor.__add__(Tensor([4183, 12],"float32"), Tensor([4183, 12],"float32"), )
paddle.Tensor.__add__(Tensor([3115, 80],"float32"), Tensor([3115, 80],"float32"), )
paddle.Tensor.__add__(Tensor([10, 70, 256],"float32"), Tensor([1, 70, 256],"float32"), )
paddle.Tensor.__add__(Tensor([1, 240, 256],"float32"), Tensor([1, 240, 256],"float32"), )
paddle.Tensor.__add__(Tensor([6, 120, 256],"float32"), Tensor([6, 120, 256],"float32"), )
paddle.Tensor.__add__(Tensor([2567, 80],"float32"), Tensor([2567, 80],"float32"), )
paddle.Tensor.__add__(Tensor([64, 8, 59, 19],"float32"), Tensor([64, 1, 1, 19],"float32"), )
paddle.Tensor.__add__(Tensor([4, 35, 2100],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([1395, 80],"float32"), Tensor([1395, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 209, 256],"float32"), Tensor([1, 209, 256],"float32"), )
paddle.Tensor.__add__(Tensor([5343, 80],"float32"), Tensor([5343, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2143, 80],"float32"), Tensor([2143, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1984, 42],"float32"), Tensor([1984, 42],"float32"), )
paddle.Tensor.__add__(Tensor([1746, 80],"float32"), Tensor([1746, 80],"float32"), )
paddle.Tensor.__add__(Tensor([16, 1],"float32"), Tensor([250656],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1],"float32"), Tensor([227124],"float32"), )
paddle.Tensor.__add__(Tensor([4693, 15],"float32"), Tensor([4693, 15],"float32"), )
paddle.Tensor.__add__(Tensor([],"float32"), Tensor([995655],"float32"), )
paddle.Tensor.__add__(Tensor([5493, 80],"float32"), Tensor([5493, 80],"float32"), )
paddle.Tensor.__add__(Tensor([4920, 80],"float32"), Tensor([4920, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 11, 84, 84],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([5830, 80],"float32"), Tensor([5830, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 62, 2100],"float32"), Tensor([2, 62, 2100],"float32"), )
paddle.Tensor.__add__(Tensor([3477, 80],"float32"), Tensor([3477, 80],"float32"), )
paddle.Tensor.__add__(Tensor([6, 129, 256],"float32"), Tensor([1, 129, 256],"float32"), )
paddle.Tensor.__add__(Tensor([83196, 1],"float32"), Tensor([83196, 1],"float32"), )
paddle.Tensor.__add__(Tensor([2905, 80],"float32"), Tensor([2905, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 40, 3024],"float32"), Tensor([2, 40, 3024],"float32"), )
paddle.Tensor.__add__(Tensor([2220, 80],"float32"), Tensor([2220, 80],"float32"), )
paddle.Tensor.__add__(Tensor([10, 117, 256],"float32"), Tensor([1, 117, 256],"float32"), )
paddle.Tensor.__add__(Tensor([923, 80],"float32"), Tensor([923, 80],"float32"), )
paddle.Tensor.__add__(Tensor([8, 241, 241],"float32"), Tensor([8, 241, 241],"float32"), )
paddle.Tensor.__add__(Tensor([858, 80],"float32"), Tensor([858, 80],"float32"), )
paddle.Tensor.__add__(Tensor([128, 16, 40, 11],"float32"), Tensor([128, 1, 1, 11],"float32"), )
paddle.Tensor.__add__(Tensor([2, 60, 4116],"float32"), Tensor([2, 60, 4116],"float32"), )
paddle.Tensor.__add__(Tensor([8, 107, 256],"float32"), Tensor([1, 107, 256],"float32"), )
paddle.Tensor.__add__(Tensor([6, 159, 256],"float32"), Tensor([6, 159, 256],"float32"), )
paddle.Tensor.__add__(Tensor([7, 143, 256],"float32"), Tensor([7, 143, 256],"float32"), )
paddle.Tensor.__add__(Tensor([2870, 80],"float32"), Tensor([2870, 80],"float32"), )
paddle.Tensor.__add__(Tensor([4094, 80],"float32"), Tensor([4094, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2669, 80],"float32"), Tensor([2669, 80],"float32"), )
paddle.Tensor.__add__(Tensor([256, 8, 15, 15],"float32"), Tensor([256, 1, 1, 15],"float32"), )
paddle.Tensor.__add__(Tensor([1, 15, 44436],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([1996, 27],"float32"), Tensor([1996, 27],"float32"), )
paddle.Tensor.__add__(Tensor([1788, 80],"float32"), Tensor([1788, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1215, 80],"float32"), Tensor([1215, 80],"float32"), )
paddle.Tensor.__add__(Tensor([320739],"float32"), Tensor([320739],"float32"), )
paddle.Tensor.__add__(Tensor([2, 19, 3549],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([2543, 53],"float32"), Tensor([2543, 53],"float32"), )
paddle.Tensor.__add__(Tensor([10, 1],"float32"), Tensor([230202],"float32"), )
paddle.Tensor.__add__(Tensor([3722, 80],"float32"), Tensor([3722, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2125, 80],"float32"), Tensor([2125, 80],"float32"), )
paddle.Tensor.__add__(Tensor([4570, 80],"float32"), Tensor([4570, 80],"float32"), )
paddle.Tensor.__add__(Tensor([10, 1],"float32"), Tensor([249405],"float32"), )
paddle.Tensor.__add__(Tensor([2128, 80],"float32"), Tensor([2128, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 64, 5376],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([8, 84, 256],"float32"), Tensor([1, 84, 256],"float32"), )
paddle.Tensor.__add__(Tensor([244800],"float32"), Tensor([244800],"float32"), )
paddle.Tensor.__add__(Tensor([1, 20, 37044],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([4, 512, 7, 7],"float32"), Tensor([4, 512, 7, 7],"float32"), )
paddle.Tensor.__add__(Tensor([4, 118, 256],"float32"), Tensor([1, 118, 256],"float32"), )
paddle.Tensor.__add__(Tensor([26, 1],"float32"), Tensor([313347],"float32"), )
paddle.Tensor.__add__(Tensor([70560],"float32"), Tensor([70560],"float32"), )
paddle.Tensor.__add__(Tensor([1, 400, 512],"float32"), Tensor([1, 400, 512],"float32"), )
paddle.Tensor.__add__(Tensor([152, 8, 26, 23],"float32"), Tensor([152, 1, 1, 23],"float32"), )
paddle.Tensor.__add__(Tensor([7, 180, 256],"float32"), Tensor([1, 180, 256],"float32"), )
paddle.Tensor.__add__(Tensor([88, 8, 29, 29],"float32"), Tensor([88, 1, 1, 29],"float32"), )
paddle.Tensor.__add__(Tensor([16, 160, 16, 12],"float32"), Tensor([16, 160, 16, 12],"float32"), )
paddle.Tensor.__add__(Tensor([8, 229, 256],"float32"), Tensor([1, 229, 256],"float32"), )
paddle.Tensor.__add__(Tensor([4650, 80],"float32"), Tensor([4650, 80],"float32"), )
paddle.Tensor.__add__(Tensor([5538, 80],"float32"), Tensor([5538, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2021, 80],"float32"), Tensor([2021, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 256, 192],"float32"), Tensor([2, 256, 192],"float32"), )
paddle.Tensor.__add__(Tensor([3873, 80],"float32"), Tensor([3873, 80],"float32"), )
paddle.Tensor.__add__(Tensor([22, 1],"float32"), Tensor([190296],"float32"), )
paddle.Tensor.__add__(Tensor([8, 13, 9261],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([136, 8, 21, 21],"float32"), Tensor([136, 1, 1, 21],"float32"), )
paddle.Tensor.__add__(Tensor([2, 82, 6069],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([2, 41, 5376],"float32"), Tensor([2, 41, 5376],"float32"), )
paddle.Tensor.__add__(Tensor([2458, 80],"float32"), Tensor([2458, 80],"float32"), )
paddle.Tensor.__add__(Tensor([464, 16, 10, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.Tensor.__add__(Tensor([2, 19, 8500],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([29396, 11],"float32"), Tensor([29396, 11],"float32"), )
paddle.Tensor.__add__(Tensor([47616, 1, 4],"float32"), Tensor([1, 3, 4],"float32"), )
paddle.Tensor.__add__(Tensor([5984, 80],"float32"), Tensor([5984, 80],"float32"), )
paddle.Tensor.__add__(Tensor([240, 2541],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([152, 8, 25, 25],"float32"), Tensor([25, 25],"float32"), )
paddle.Tensor.__add__(Tensor([10, 1],"float32"), Tensor([214848],"float32"), )
paddle.Tensor.__add__(Tensor([10, 1024, 2, 20],"float32"), Tensor([10, 1024, 2, 20],"float32"), )
paddle.Tensor.__add__(Tensor([4, 192, 12, 12],"float32"), Tensor([4, 192, 12, 12],"float32"), )
paddle.Tensor.__add__(Tensor([2411, 26],"float32"), Tensor([2411, 26],"float32"), )
paddle.Tensor.__add__(Tensor([2, 6, 10285],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([5, 131, 256],"float32"), Tensor([5, 131, 256],"float32"), )
paddle.Tensor.__add__(Tensor([8, 14, 6069],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([128, 8, 30, 31],"float32"), Tensor([128, 1, 1, 31],"float32"), )
paddle.Tensor.__add__(Tensor([12814, 11],"float32"), Tensor([12814, 11],"float32"), )
paddle.Tensor.__add__(Tensor([8, 293, 256],"float32"), Tensor([1, 293, 256],"float32"), )
paddle.Tensor.__add__(Tensor([3, 1],"float32"), Tensor([302832],"float32"), )
paddle.Tensor.__add__(Tensor([1, 23, 33600],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([2494, 29],"float32"), Tensor([2494, 29],"float32"), )
paddle.Tensor.__add__(Tensor([8, 8, 3549],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([30, 61, 256],"float32"), Tensor([1, 61, 256],"float32"), )
paddle.Tensor.__add__(Tensor([7, 172, 256],"float32"), Tensor([1, 172, 256],"float32"), )
paddle.Tensor.__add__(Tensor([36, 1],"float32"), Tensor([208692],"float32"), )
paddle.Tensor.__add__(Tensor([2, 25, 3598],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([12, 8500],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([2, 201, 256],"float32"), Tensor([2, 201, 256],"float32"), )
paddle.Tensor.__add__(Tensor([4254, 80],"float32"), Tensor([4254, 80],"float32"), )
paddle.Tensor.__add__(Tensor([269586],"float32"), Tensor([269586],"float32"), )
paddle.Tensor.__add__(Tensor([2, 46, 5376],"float32"), Tensor([2, 46, 5376],"float32"), )
paddle.Tensor.__add__(Tensor([3121, 80],"float32"), Tensor([3121, 80],"float32"), )
paddle.Tensor.__add__(Tensor([8, 238, 256],"float32"), Tensor([1, 238, 256],"float32"), )
paddle.Tensor.__add__(Tensor([1358, 128],"float32"), Tensor([1358, 128],"float32"), )
paddle.Tensor.__add__(Tensor([8, 126, 256],"float32"), Tensor([1, 126, 256],"float32"), )
paddle.Tensor.__add__(Tensor([262428],"float32"), Tensor([262428],"float32"), )
paddle.Tensor.__add__(Tensor([2142, 25],"float32"), Tensor([2142, 25],"float32"), )
paddle.Tensor.__add__(Tensor([16, 30, 1],"float32"), Tensor([16, 1, 12096],"float32"), )
paddle.Tensor.__add__(Tensor([1, 11, 70644],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([2, 121, 512],"float32"), Tensor([1, 121, 512],"float32"), )
paddle.Tensor.__add__(Tensor([2898, 80],"float32"), Tensor([2898, 80],"float32"), )
paddle.Tensor.__add__(Tensor([13, 1],"float32"), Tensor([386694],"float32"), )
paddle.Tensor.__add__(Tensor([1630, 80],"float32"), Tensor([1630, 80],"float32"), )
paddle.Tensor.__add__(Tensor([6, 173, 256],"float32"), Tensor([1, 173, 256],"float32"), )
paddle.Tensor.__add__(Tensor([1, 450, 256],"float32"), Tensor([1, 1, 256],"float32"), )
paddle.Tensor.__add__(Tensor([8, 184, 256],"float32"), Tensor([8, 184, 256],"float32"), )
paddle.Tensor.__add__(Tensor([],"float32"), Tensor([865513],"float32"), )
paddle.Tensor.__add__(Tensor([6, 103, 256],"float32"), Tensor([1, 103, 256],"float32"), )
paddle.Tensor.__add__(Tensor([5, 139, 256],"float32"), Tensor([5, 139, 256],"float32"), )
paddle.Tensor.__add__(Tensor([104, 8, 31, 38],"float32"), Tensor([104, 1, 1, 38],"float32"), )
paddle.Tensor.__add__(Tensor([5612, 80],"float32"), Tensor([5612, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 169, 256],"float32"), Tensor([2, 169, 256],"float32"), )
paddle.Tensor.__add__(Tensor([4686, 80],"float32"), Tensor([4686, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1, 234, 256],"float32"), Tensor([1, 234, 256],"float32"), )
paddle.Tensor.__add__(Tensor([8, 59, 256],"float32"), Tensor([1, 59, 256],"float32"), )
paddle.Tensor.__add__(Tensor([4762, 80],"float32"), Tensor([4762, 80],"float32"), )
paddle.Tensor.__add__(Tensor([8, 173, 256],"float32"), Tensor([8, 173, 256],"float32"), )
paddle.Tensor.__add__(Tensor([5348, 80],"float32"), Tensor([5348, 80],"float32"), )
paddle.Tensor.__add__(Tensor([5781, 80],"float32"), Tensor([5781, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 12, 6804],"float32"), Tensor([2, 12, 6804],"float32"), )
paddle.Tensor.__add__(Tensor([78144, 1, 4],"float32"), Tensor([1, 3, 4],"float32"), )
paddle.Tensor.__add__(Tensor([16, 1],"float32"), Tensor([252195],"float32"), )
paddle.Tensor.__add__(Tensor([16, 8, 81, 81],"float32"), Tensor([16, 1, 1, 81],"float32"), )
paddle.Tensor.__add__(Tensor([2, 36, 6804],"float32"), Tensor([2, 36, 6804],"float32"), )
paddle.Tensor.__add__(Tensor([1421, 80],"float32"), Tensor([1421, 80],"float32"), )
paddle.Tensor.__add__(Tensor([6, 1],"float32"), Tensor([257796],"float32"), )
paddle.Tensor.__add__(Tensor([2074, 80],"float32"), Tensor([2074, 80],"float32"), )
paddle.Tensor.__add__(Tensor([13, 1],"float32"), Tensor([205923],"float32"), )
paddle.Tensor.__add__(Tensor([1910, 80],"float32"), Tensor([1910, 80],"float32"), )
paddle.Tensor.__add__(Tensor([16, 1],"float32"), Tensor([408177],"float32"), )
paddle.Tensor.__add__(Tensor([10, 34, 256],"float32"), Tensor([10, 34, 256],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1],"float32"), Tensor([177276],"float32"), )
paddle.Tensor.__add__(Tensor([3633, 80],"float32"), Tensor([3633, 80],"float32"), )
paddle.Tensor.__add__(Tensor([37100, 11],"float32"), Tensor([37100, 11],"float32"), )
paddle.Tensor.__add__(Tensor([3885, 80],"float32"), Tensor([3885, 80],"float32"), )
paddle.Tensor.__add__(Tensor([9, 35, 256],"float32"), Tensor([9, 35, 256],"float32"), )
paddle.Tensor.__add__(Tensor([3056, 80],"float32"), Tensor([3056, 80],"float32"), )
paddle.Tensor.__add__(Tensor([48, 8, 76, 32],"float32"), Tensor([48, 1, 1, 32],"float32"), )
paddle.Tensor.__add__(Tensor([1, 231, 256],"float32"), Tensor([1, 231, 256],"float32"), )
paddle.Tensor.__add__(Tensor([8, 512, 8, 8],"float32"), Tensor([8, 1, 8, 8],"float32"), )
paddle.Tensor.__add__(Tensor([1404, 80],"float32"), Tensor([1404, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 19, 2100],"float32"), Tensor([2, 19, 2100],"float32"), )
paddle.Tensor.__add__(Tensor([32, 8, 60, 60],"float32"), Tensor([32, 1, 1, 60],"float32"), )
paddle.Tensor.__add__(Tensor([677, 80],"float32"), Tensor([677, 80],"float32"), )
paddle.Tensor.__add__(Tensor([5192, 80],"float32"), Tensor([5192, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2443, 45],"float32"), Tensor([2443, 45],"float32"), )
paddle.Tensor.__add__(Tensor([1420, 80],"float32"), Tensor([1420, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 30, 3549],"float32"), Tensor([2, 30, 3549],"float32"), )
paddle.Tensor.__add__(Tensor([],"float32"), Tensor([888312],"float32"), )
paddle.Tensor.__add__(Tensor([2, 80, 2100],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([88, 8, 31, 31],"float32"), Tensor([31, 31],"float32"), )
paddle.Tensor.__add__(Tensor([14, 1],"float32"), Tensor([359613],"float32"), )
paddle.Tensor.__add__(Tensor([5982, 80],"float32"), Tensor([5982, 80],"float32"), )
paddle.Tensor.__add__(Tensor([5878, 80],"float32"), Tensor([5878, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 22, 5376],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([1, 21504, 15],"float32"), Tensor([1, 21504, 15],"float32"), )
paddle.Tensor.__add__(Tensor([5586, 80],"float32"), Tensor([5586, 80],"float32"), )
paddle.Tensor.__add__(Tensor([653, 80],"float32"), Tensor([653, 80],"float32"), )
paddle.Tensor.__add__(Tensor([4072, 80],"float32"), Tensor([4072, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1, 992, 160],"float32"), Tensor([1, 992, 160],"float32"), )
paddle.Tensor.__add__(Tensor([2892, 80],"float32"), Tensor([2892, 80],"float32"), )
paddle.Tensor.__add__(Tensor([144, 672, 1, 1],"float32"), Tensor([144, 672, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([4098, 80],"float32"), Tensor([4098, 80],"float32"), )
paddle.Tensor.__add__(Tensor([5847, 11],"float32"), Tensor([5847, 11],"float32"), )
paddle.Tensor.__add__(Tensor([30, 17, 256],"float32"), Tensor([256],"float32"), )
paddle.Tensor.__add__(Tensor([4, 60, 256],"float32"), Tensor([4, 60, 256],"float32"), )
paddle.Tensor.__add__(Tensor([56, 3024],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([40, 6069],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([311535],"float32"), Tensor([311535],"float32"), )
paddle.Tensor.__add__(Tensor([10, 160, 256],"float32"), Tensor([10, 160, 256],"float32"), )
paddle.Tensor.__add__(Tensor([136, 8, 22, 22],"float32"), Tensor([136, 1, 1, 22],"float32"), )
paddle.Tensor.__add__(Tensor([3060, 21],"float32"), Tensor([3060, 21],"float32"), )
paddle.Tensor.__add__(Tensor([],"float32"), Tensor([810566],"float32"), )
paddle.Tensor.__add__(Tensor([8, 10, 6069],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([3568, 80],"float32"), Tensor([3568, 80],"float32"), )
paddle.Tensor.__add__(Tensor([4, 1],"float32"), Tensor([237360],"float32"), )
paddle.Tensor.__add__(Tensor([5, 71, 256],"float32"), Tensor([1, 71, 256],"float32"), )
paddle.Tensor.__add__(Tensor([],"float32"), Tensor([926920],"float32"), )
paddle.Tensor.__add__(Tensor([16, 13, 3549],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([3904, 80],"float32"), Tensor([3904, 80],"float32"), )
paddle.Tensor.__add__(Tensor([15, 1],"float32"), Tensor([321759],"float32"), )
paddle.Tensor.__add__(Tensor([1, 17, 48384],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([8, 9, 2100],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([17, 1],"float32"), Tensor([253728],"float32"), )
paddle.Tensor.__add__(Tensor([1, 13, 37044],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([75030],"float32"), Tensor([75030],"float32"), )
paddle.Tensor.__add__(Tensor([9, 55, 256],"float32"), Tensor([1, 55, 256],"float32"), )
paddle.Tensor.__add__(Tensor([48, 2541],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([14, 1],"float32"), Tensor([306900],"float32"), )
paddle.Tensor.__add__(Tensor([1151, 80],"float32"), Tensor([1151, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2805, 19],"float32"), Tensor([2805, 19],"float32"), )
paddle.Tensor.__add__(Tensor([2184, 80],"float32"), Tensor([2184, 80],"float32"), )
paddle.Tensor.__add__(Tensor([8500, 11],"float32"), Tensor([8500, 11],"float32"), )
paddle.Tensor.__add__(Tensor([3921, 80],"float32"), Tensor([3921, 80],"float32"), )
paddle.Tensor.__add__(Tensor([3269, 80],"float32"), Tensor([3269, 80],"float32"), )
paddle.Tensor.__add__(Tensor([20, 96, 14, 14],"float32"), Tensor([20, 96, 14, 14],"float32"), )
paddle.Tensor.__add__(Tensor([4719, 80],"float32"), Tensor([4719, 80],"float32"), )
paddle.Tensor.__add__(Tensor([8, 179, 256],"float32"), Tensor([8, 179, 256],"float32"), )
paddle.Tensor.__add__(Tensor([4584, 80],"float32"), Tensor([4584, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1118, 80],"float32"), Tensor([1118, 80],"float32"), )
paddle.Tensor.__add__(Tensor([3092, 80],"float32"), Tensor([3092, 80],"float32"), )
paddle.Tensor.__add__(Tensor([320, 160, 3, 3],"float32"), Tensor([320, 160, 3, 3],"float32"), )
paddle.Tensor.__add__(Tensor([1, 17, 24276],"float32"), Tensor([1, 17, 24276],"float32"), )
paddle.Tensor.__add__(Tensor([30, 33, 256],"float32"), Tensor([30, 33, 256],"float32"), )
paddle.Tensor.__add__(Tensor([3035, 80],"float32"), Tensor([3035, 80],"float32"), )
paddle.Tensor.__add__(Tensor([3, 130, 256],"float32"), Tensor([3, 130, 256],"float32"), )
paddle.Tensor.__add__(Tensor([8, 200, 256],"float32"), Tensor([8, 200, 256],"float32"), )
paddle.Tensor.__add__(Tensor([2, 192, 28, 28],"float32"), Tensor([2, 192, 28, 28],"float32"), )
paddle.Tensor.__add__(Tensor([4, 1],"float32"), Tensor([268569],"float32"), )
paddle.Tensor.__add__(Tensor([136818, 1],"float32"), Tensor([136818, 1],"float32"), )
paddle.Tensor.__add__(Tensor([3732, 80],"float32"), Tensor([3732, 80],"float32"), )
paddle.Tensor.__add__(Tensor([10, 1],"float32"), Tensor([185691],"float32"), )
paddle.Tensor.__add__(Tensor([8, 40, 3024],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([4, 3, 128, 128],"float32"), Tensor([1, 3, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([10, 1],"float32"), Tensor([347820],"float32"), )
paddle.Tensor.__add__(Tensor([1987, 80],"float32"), Tensor([1987, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 101, 256],"float32"), Tensor([2, 101, 256],"float32"), )
paddle.Tensor.__add__(Tensor([8, 173, 256],"float32"), Tensor([1, 173, 256],"float32"), )
paddle.Tensor.__add__(Tensor([7, 129, 256],"float32"), Tensor([1, 129, 256],"float32"), )
paddle.Tensor.__add__(Tensor([5258, 80],"float32"), Tensor([5258, 80],"float32"), )
paddle.Tensor.__add__(Tensor([9, 83, 256],"float32"), Tensor([1, 83, 256],"float32"), )
paddle.Tensor.__add__(Tensor([624, 16, 8, 7],"float32"), Tensor([624, 1, 1, 7],"float32"), )
paddle.Tensor.__add__(Tensor([272, 3549],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([5456, 80],"float32"), Tensor([5456, 80],"float32"), )
paddle.Tensor.__add__(Tensor([288, 8, 11, 11],"float32"), Tensor([11, 11],"float32"), )
paddle.Tensor.__add__(Tensor([8, 10164, 2],"float16"), Tensor([10164, 2],"float32"), )
paddle.Tensor.__add__(Tensor([4740, 18],"float32"), Tensor([4740, 18],"float32"), )
paddle.Tensor.__add__(Tensor([8, 3, 68, 68, 1],"float32"), Tensor([1, 1, 68, 68, 1],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 48384],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([8, 192, 256],"float32"), Tensor([8, 192, 256],"float32"), )
paddle.Tensor.__add__(Tensor([7, 80, 256],"float32"), Tensor([1, 80, 256],"float32"), )
paddle.Tensor.__add__(Tensor([112, 8, 29, 35],"float32"), Tensor([112, 1, 1, 35],"float32"), )
paddle.Tensor.__add__(Tensor([7, 30, 256],"float32"), Tensor([7, 30, 256],"float32"), )
paddle.Tensor.__add__(Tensor([1423, 80],"float32"), Tensor([1423, 80],"float32"), )
paddle.Tensor.__add__(Tensor([9, 101, 256],"float32"), Tensor([1, 101, 256],"float32"), )
paddle.Tensor.__add__(Tensor([2496, 80],"float32"), Tensor([2496, 80],"float32"), )
paddle.Tensor.__add__(Tensor([6, 122, 256],"float32"), Tensor([1, 122, 256],"float32"), )
paddle.Tensor.__add__(Tensor([16, 1],"float32"), Tensor([241731],"float32"), )
paddle.Tensor.__add__(Tensor([2935, 80],"float32"), Tensor([2935, 80],"float32"), )
paddle.Tensor.__add__(Tensor([6, 1],"float32"), Tensor([204624],"float32"), )
paddle.Tensor.__add__(Tensor([480, 960, 1, 1],"float32"), Tensor([480, 960, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([8, 88, 256],"float32"), Tensor([1, 88, 256],"float32"), )
paddle.Tensor.__add__(Tensor([7, 33, 256],"float32"), Tensor([7, 33, 256],"float32"), )
paddle.Tensor.__add__(Tensor([8, 97, 256],"float32"), Tensor([8, 97, 256],"float32"), )
paddle.Tensor.__add__(Tensor([2955, 80],"float32"), Tensor([2955, 80],"float32"), )
paddle.Tensor.__add__(Tensor([16, 64, 20, 20],"float32"), Tensor([16, 64, 20, 20],"float32"), )
paddle.Tensor.__add__(Tensor([95480],"float32"), Tensor([95480],"float32"), )
paddle.Tensor.__add__(Tensor([2181, 80],"float32"), Tensor([2181, 80],"float32"), )
paddle.Tensor.__add__(Tensor([80, 4116],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([312, 16, 8, 8],"float32"), Tensor([312, 1, 1, 8],"float32"), )
paddle.Tensor.__add__(Tensor([272800],"float32"), 1.0, )
paddle.Tensor.__add__(Tensor([10, 163, 256],"float32"), Tensor([10, 163, 256],"float32"), )
paddle.Tensor.__add__(Tensor([27, 1],"float32"), Tensor([313038],"float32"), )
paddle.Tensor.__add__(Tensor([1088, 80],"float32"), Tensor([1088, 80],"float32"), )
paddle.Tensor.__add__(Tensor([64, 8, 40, 40],"float32"), Tensor([64, 1, 1, 40],"float32"), )
paddle.Tensor.__add__(Tensor([4204, 80],"float32"), Tensor([4204, 80],"float32"), )
paddle.Tensor.__add__(Tensor([3918, 16],"float32"), Tensor([3918, 16],"float32"), )
paddle.Tensor.__add__(Tensor([4972, 80],"float32"), Tensor([4972, 80],"float32"), )
paddle.Tensor.__add__(Tensor([61952],"float32"), Tensor([61952],"float32"), )
paddle.Tensor.__add__(Tensor([2676, 80],"float32"), Tensor([2676, 80],"float32"), )
paddle.Tensor.__add__(Tensor([5, 78, 256],"float32"), Tensor([1, 78, 256],"float32"), )
paddle.Tensor.__add__(Tensor([1665, 80],"float32"), Tensor([1665, 80],"float32"), )
paddle.Tensor.__add__(Tensor([3663, 80],"float32"), Tensor([3663, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2073, 66],"float32"), Tensor([2073, 66],"float32"), )
paddle.Tensor.__add__(Tensor([4, 96, 30, 30],"float32"), Tensor([4, 96, 30, 30],"float32"), )
paddle.Tensor.__add__(Tensor([4020, 80],"float32"), Tensor([4020, 80],"float32"), )
paddle.Tensor.__add__(Tensor([9, 103, 256],"float32"), Tensor([9, 103, 256],"float32"), )
paddle.Tensor.__add__(Tensor([69030],"float32"), Tensor([69030],"float32"), )
paddle.Tensor.__add__(Tensor([7, 81, 256],"float32"), Tensor([7, 81, 256],"float32"), )
paddle.Tensor.__add__(Tensor([3890, 17],"float32"), Tensor([3890, 17],"float32"), )
paddle.Tensor.__add__(Tensor([4165, 80],"float32"), Tensor([4165, 80],"float32"), )
paddle.Tensor.__add__(Tensor([5262, 80],"float32"), Tensor([5262, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 26, 4725],"float32"), Tensor([2, 26, 4725],"float32"), )
paddle.Tensor.__add__(Tensor([8475, 15],"float32"), Tensor([8475, 15],"float32"), )
paddle.Tensor.__add__(Tensor([2, 1],"float32"), Tensor([227124],"float32"), )
paddle.Tensor.__add__(Tensor([50176],"float32"), Tensor([50176],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1],"float32"), Tensor([243474],"float32"), )
paddle.Tensor.__add__(Tensor([2, 15, 4725],"float32"), Tensor([2, 15, 4725],"float32"), )
paddle.Tensor.__add__(Tensor([7, 1],"float32"), Tensor([304368],"float32"), )
paddle.Tensor.__add__(Tensor([4868, 80],"float32"), Tensor([4868, 80],"float32"), )
paddle.Tensor.__add__(Tensor([96, 8, 40, 29],"float32"), Tensor([96, 1, 1, 29],"float32"), )
paddle.Tensor.__add__(Tensor([20, 6885],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([6, 1],"float32"), Tensor([319200],"float32"), )
paddle.Tensor.__add__(Tensor([236616],"float32"), Tensor([236616],"float32"), )
paddle.Tensor.__add__(Tensor([5894, 80],"float32"), Tensor([5894, 80],"float32"), )
paddle.Tensor.__add__(Tensor([8, 32, 3024],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([3469, 80],"float32"), Tensor([3469, 80],"float32"), )
paddle.Tensor.__add__(Tensor([30, 119, 256],"float32"), Tensor([1, 119, 256],"float32"), )
paddle.Tensor.__add__(Tensor([1123, 80],"float32"), Tensor([1123, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 11, 9261],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([2, 1],"float32"), Tensor([196416],"float32"), )
paddle.Tensor.__add__(Tensor([1, 1],"float32"), Tensor([220968],"float32"), )
paddle.Tensor.__add__(Tensor([3770, 80],"float32"), Tensor([3770, 80],"float32"), )
paddle.Tensor.__add__(Tensor([8, 5376, 4],"float32"), Tensor([8, 5376, 4],"float32"), )
paddle.Tensor.__add__(Tensor([5, 118, 256],"float32"), Tensor([1, 118, 256],"float32"), )
paddle.Tensor.__add__(Tensor([1425, 80],"float32"), Tensor([1425, 80],"float32"), )
paddle.Tensor.__add__(Tensor([144, 8, 25, 28],"float32"), Tensor([144, 1, 1, 28],"float32"), )
paddle.Tensor.__add__(Tensor([2890, 80],"float32"), Tensor([2890, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1, 229, 256],"float32"), Tensor([1, 229, 256],"float32"), )
paddle.Tensor.__add__(Tensor([3, 153, 256],"float32"), Tensor([1, 153, 256],"float32"), )
paddle.Tensor.__add__(Tensor([8, 96, 256],"float32"), Tensor([1, 96, 256],"float32"), )
paddle.Tensor.__add__(Tensor([192, 128, 3, 3],"float32"), Tensor([192, 128, 3, 3],"float32"), )
paddle.Tensor.__add__(Tensor([3855, 20],"float32"), Tensor([3855, 20],"float32"), )
paddle.Tensor.__add__(Tensor([2450, 80],"float32"), Tensor([2450, 80],"float32"), )
paddle.Tensor.__add__(Tensor([18],"float32"), Tensor([11050, 18],"float32"), )
paddle.Tensor.__add__(Tensor([23, 1],"float32"), Tensor([249405],"float32"), )
paddle.Tensor.__add__(Tensor([4, 1],"float32"), Tensor([269586],"float32"), )
paddle.Tensor.__add__(Tensor([2107, 80],"float32"), Tensor([2107, 80],"float32"), )
paddle.Tensor.__add__(Tensor([8, 22, 4725],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([4491, 80],"float32"), Tensor([4491, 80],"float32"), )
paddle.Tensor.__add__(Tensor([120, 8, 31, 31],"float32"), Tensor([31, 31],"float32"), )
paddle.Tensor.__add__(Tensor([6200, 80],"float32"), Tensor([6200, 80],"float32"), )
paddle.Tensor.__add__(Tensor([8, 121, 256],"float32"), Tensor([8, 121, 256],"float32"), )
paddle.Tensor.__add__(Tensor([1541, 56],"float32"), Tensor([1541, 56],"float32"), )
paddle.Tensor.__add__(Tensor([8, 500, 1, 1, 1, 2],"float32"), Tensor([8, 500, 8, 3, 4, 2],"float32"), )
paddle.Tensor.__add__(Tensor([176, 8, 23, 19],"float32"), Tensor([176, 1, 1, 19],"float32"), )
paddle.Tensor.__add__(Tensor([2444, 21],"float32"), Tensor([2444, 21],"float32"), )
paddle.Tensor.__add__(Tensor([3, 1],"float32"), Tensor([205923],"float32"), )
paddle.Tensor.__add__(Tensor([2102, 26],"float32"), Tensor([2102, 26],"float32"), )
paddle.Tensor.__add__(Tensor([120, 8, 34, 27],"float32"), Tensor([120, 1, 1, 27],"float32"), )
paddle.Tensor.__add__(Tensor([1, 3, 30324],"float32"), Tensor([1, 3, 30324],"float32"), )
paddle.Tensor.__add__(Tensor([8, 41, 256],"float32"), Tensor([8, 41, 256],"float32"), )
paddle.Tensor.__add__(Tensor([8, 105, 256],"float32"), Tensor([8, 105, 256],"float32"), )
paddle.Tensor.__add__(Tensor([2161, 80],"float32"), Tensor([2161, 80],"float32"), )
paddle.Tensor.__add__(Tensor([3318, 80],"float32"), Tensor([3318, 80],"float32"), )
paddle.Tensor.__add__(Tensor([4, 96, 32, 32],"float32"), Tensor([4, 96, 32, 32],"float32"), )
paddle.Tensor.__add__(Tensor([6, 141, 256],"float32"), Tensor([6, 141, 256],"float32"), )
paddle.Tensor.__add__(Tensor([1, 8, 24276],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([2, 25, 10164],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([4179, 80],"float32"), Tensor([4179, 80],"float32"), )
paddle.Tensor.__add__(Tensor([6, 167, 256],"float32"), Tensor([6, 167, 256],"float32"), )
paddle.Tensor.__add__(Tensor([4270, 80],"float32"), Tensor([4270, 80],"float32"), )
paddle.Tensor.__add__(Tensor([765, 80],"float32"), Tensor([765, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 1],"float32"), Tensor([310992],"float32"), )
paddle.Tensor.__add__(Tensor([9, 58, 256],"float32"), Tensor([1, 58, 256],"float32"), )
paddle.Tensor.__add__(Tensor([20, 1],"float32"), Tensor([322272],"float32"), )
paddle.Tensor.__add__(Tensor([2396, 80],"float32"), Tensor([2396, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2889, 80],"float32"), Tensor([2889, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1711, 80],"float32"), Tensor([1711, 80],"float32"), )
paddle.Tensor.__add__(Tensor([4830, 80],"float32"), Tensor([4830, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2588, 80],"float32"), Tensor([2588, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1229, 80],"float32"), Tensor([1229, 80],"float32"), )
paddle.Tensor.__add__(Tensor([18, 1],"float32"), Tensor([248616],"float32"), )
paddle.Tensor.__add__(Tensor([863, 80],"float32"), Tensor([863, 80],"float32"), )
paddle.Tensor.__add__(Tensor([6, 1],"float32"), Tensor([295647],"float32"), )
paddle.Tensor.__add__(Tensor([3807, 26],"float32"), Tensor([3807, 26],"float32"), )
paddle.Tensor.__add__(Tensor([2827, 27],"float32"), Tensor([2827, 27],"float32"), )
paddle.Tensor.__add__(Tensor([6, 1],"float32"), Tensor([350178],"float32"), )
paddle.Tensor.__add__(Tensor([2, 225, 1024],"float32"), Tensor([2, 225, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([2556, 80],"float32"), Tensor([2556, 80],"float32"), )
paddle.Tensor.__add__(Tensor([5045, 80],"float32"), Tensor([5045, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1360, 80],"float32"), Tensor([1360, 80],"float32"), )
paddle.Tensor.__add__(Tensor([6, 68, 256],"float32"), Tensor([1, 68, 256],"float32"), )
paddle.Tensor.__add__(Tensor([8, 7, 6069],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([2, 19, 8400],"float32"), Tensor([2, 19, 8400],"float32"), )
paddle.Tensor.__add__(Tensor([1, 6, 70644],"float32"), Tensor([1, 6, 70644],"float32"), )
paddle.Tensor.__add__(Tensor([75330],"float32"), Tensor([75330],"float32"), )
paddle.Tensor.__add__(Tensor([40, 8, 46, 46],"float32"), Tensor([40, 1, 1, 46],"float32"), )
paddle.Tensor.__add__(Tensor([4, 79, 256],"float32"), Tensor([1, 79, 256],"float32"), )
paddle.Tensor.__add__(Tensor([3927, 80],"float32"), Tensor([3927, 80],"float32"), )
paddle.Tensor.__add__(Tensor([30, 106, 256],"float32"), Tensor([1, 106, 256],"float32"), )
paddle.Tensor.__add__(Tensor([2, 14, 4116],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([256, 1280, 1, 1],"float32"), Tensor([256, 1280, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([4774, 80],"float32"), Tensor([4774, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 47, 8400],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([2149, 80],"float32"), Tensor([2149, 80],"float32"), )
paddle.Tensor.__add__(Tensor([168, 8, 20, 20],"float32"), Tensor([168, 1, 1, 20],"float32"), )
paddle.Tensor.__add__(Tensor([8, 109, 256],"float32"), Tensor([8, 109, 256],"float32"), )
paddle.Tensor.__add__(Tensor([7, 85, 256],"float32"), Tensor([1, 85, 256],"float32"), )
paddle.Tensor.__add__(Tensor([120, 8, 24, 33],"float32"), Tensor([120, 1, 1, 33],"float32"), )
paddle.Tensor.__add__(Tensor([53, 1],"float32"), Tensor([241731],"float32"), )
paddle.Tensor.__add__(Tensor([13, 7168],"float32"), Tensor([13, 7168],"bfloat16"), )
paddle.Tensor.__and__(Tensor([4, 1, 156, 156],"bool"), Tensor([4, 1, 156, 156],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 112, 240],"bool"), Tensor([2, 1, 112, 240],"bool"), )
paddle.Tensor.__and__(Tensor([1, 38367, 4],"bool"), Tensor([1, 38367, 4],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 148, 148],"bool"), Tensor([4, 1, 148, 148],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 110, 238],"bool"), Tensor([2, 1, 110, 238],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 127, 127],"bool"), Tensor([4, 1, 127, 127],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 145, 145],"bool"), Tensor([4, 1, 145, 145],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 302, 302],"bool"), Tensor([2, 1, 302, 302],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 304, 304],"bool"), Tensor([2, 1, 304, 304],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 141, 141],"bool"), Tensor([4, 1, 141, 141],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 288, 288],"bool"), Tensor([2, 1, 288, 288],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 132, 132],"bool"), Tensor([4, 1, 132, 132],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 111, 239],"bool"), Tensor([2, 1, 111, 239],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 152, 152],"bool"), Tensor([4, 1, 152, 152],"bool"), )
paddle.Tensor.__and__(Tensor([1, 36828, 4],"bool"), Tensor([1, 36828, 4],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 346, 346],"bool"), Tensor([2, 1, 346, 346],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 107, 235],"bool"), Tensor([2, 1, 107, 235],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 115, 115],"bool"), Tensor([4, 1, 115, 115],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 158, 158],"bool"), Tensor([4, 1, 158, 158],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 134, 134],"bool"), Tensor([4, 1, 134, 134],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 346, 346],"bool"), Tensor([4, 1, 346, 346],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 172, 172],"bool"), Tensor([4, 1, 172, 172],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 147, 147],"bool"), Tensor([4, 1, 147, 147],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 198, 198],"bool"), Tensor([4, 1, 198, 198],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 304, 304],"bool"), Tensor([4, 1, 304, 304],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 182, 182],"bool"), Tensor([4, 1, 182, 182],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 168, 168],"bool"), Tensor([4, 1, 168, 168],"bool"), )
paddle.Tensor.__and__(Tensor([4, 1, 164, 164],"bool"), Tensor([4, 1, 164, 164],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 109, 237],"bool"), Tensor([2, 1, 109, 237],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 50, 50],"bool"), Tensor([2, 1, 50, 50],"bool"), )
paddle.Tensor.__and__(Tensor([28800],"int32"), Tensor([28800],"int32"), )
paddle.Tensor.__and__(Tensor([2, 1, 57, 57],"bool"), Tensor([2, 1, 57, 57],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 114, 114],"bool"), Tensor([2, 1, 114, 114],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 109, 109],"bool"), Tensor([2, 1, 109, 109],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 79, 207],"bool"), Tensor([2, 1, 79, 207],"bool"), )
paddle.Tensor.__and__(Tensor([6912],"int32"), Tensor([6912],"int32"), )
paddle.Tensor.__and__(Tensor([1, 6380, 4],"bool"), Tensor([1, 6380, 4],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 74, 74],"bool"), Tensor([2, 1, 74, 74],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 82, 82],"bool"), Tensor([2, 1, 82, 82],"bool"), )
paddle.Tensor.__and__(Tensor([1, 8192],"bool"), Tensor([1, 8192],"bool"), )
paddle.Tensor.__and__(Tensor([7200],"int32"), Tensor([7200],"int32"), )
paddle.Tensor.__and__(Tensor([2, 1, 51, 51],"bool"), Tensor([2, 1, 51, 51],"bool"), )
paddle.Tensor.__and__(Tensor([1, 8193],"bool"), Tensor([1, 8193],"bool"), )
paddle.Tensor.__and__(Tensor([6408],"int32"), Tensor([6408],"int32"), )
paddle.Tensor.__and__(Tensor([2, 1, 52, 52],"bool"), Tensor([2, 1, 52, 52],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 74, 202],"bool"), Tensor([2, 1, 74, 202],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 110, 110],"bool"), Tensor([2, 1, 110, 110],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 91, 91],"bool"), Tensor([2, 1, 91, 91],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 107, 107],"bool"), Tensor([2, 1, 107, 107],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 91, 219],"bool"), Tensor([2, 1, 91, 219],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 80, 80],"bool"), Tensor([2, 1, 80, 80],"bool"), )
paddle.Tensor.__and__(Tensor([27648],"int32"), Tensor([27648],"int32"), )
paddle.Tensor.__and__(Tensor([2, 1, 54, 54],"bool"), Tensor([2, 1, 54, 54],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 53, 53],"bool"), Tensor([2, 1, 53, 53],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 82, 210],"bool"), Tensor([2, 1, 82, 210],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 59, 59],"bool"), Tensor([2, 1, 59, 59],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 79, 79],"bool"), Tensor([2, 1, 79, 79],"bool"), )
paddle.Tensor.__and__(Tensor([1, 8550, 4],"bool"), Tensor([1, 8550, 4],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 80, 208],"bool"), Tensor([2, 1, 80, 208],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 111, 111],"bool"), Tensor([2, 1, 111, 111],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 112, 112],"bool"), Tensor([2, 1, 112, 112],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 35, 35],"bool"), Tensor([2, 1, 35, 35],"bool"), )
paddle.Tensor.__and__(Tensor([1200],"int32"), Tensor([1200],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 1, 40, 40],"bool"), Tensor([2, 1, 40, 40],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 21, 21],"bool"), Tensor([2, 1, 21, 21],"bool"), )
paddle.Tensor.__and__(Tensor([1728],"int32"), Tensor([1728],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([1, 1],"bool"), Tensor([1, 8192],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 41, 41],"bool"), Tensor([2, 1, 41, 41],"bool"), )
paddle.Tensor.__and__(Tensor([4800],"int32"), Tensor([4800],"int32"), )
paddle.Tensor.__and__(Tensor([2, 1, 36, 36],"bool"), Tensor([2, 1, 36, 36],"bool"), )
paddle.Tensor.__and__(Tensor([1800],"int32"), Tensor([1800],"int32"), )
paddle.Tensor.__and__(Tensor([1, 1, 58, 58],"bool"), Tensor([1, 1, 58, 58],"bool"), )
paddle.Tensor.__and__(Tensor([900],"bool"), Tensor([900],"bool"), )
paddle.Tensor.__and__(Tensor([1620],"int32"), Tensor([1620],"int32"), )
paddle.Tensor.__and__(Tensor([13, 1, 10, 10],"bool"), Tensor([13, 1, 10, 10],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([28, 28],"bool"), Tensor([28, 28],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 37, 37],"bool"), Tensor([2, 1, 37, 37],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 45, 45],"bool"), Tensor([2, 1, 45, 45],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 1, 39, 39],"bool"), Tensor([2, 1, 39, 39],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 47, 47],"bool"), Tensor([2, 1, 47, 47],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 23, 23],"bool"), Tensor([2, 1, 23, 23],"bool"), )
paddle.Tensor.__and__(Tensor([6, 1, 10, 10],"bool"), Tensor([6, 1, 10, 10],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 20, 20],"bool"), Tensor([2, 1, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([13, 1, 7, 7],"bool"), Tensor([13, 1, 7, 7],"bool"), )
paddle.Tensor.__and__(Tensor([2, 1, 38, 38],"bool"), Tensor([2, 1, 38, 38],"bool"), )
paddle.Tensor.__div__(Tensor([8, 16, 32],"float32"), 2, )
paddle.Tensor.__eq__(Tensor([944052],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([1, 429660],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([3, 66240],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([932645],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([849937],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([3, 38940],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 60390],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([901559],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([223020],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([1, 800, 1200],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([736560],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 5, )
paddle.Tensor.__eq__(Tensor([347820],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([253260],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([7270, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([279720],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([12, 60480],"float32"), Tensor([12, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([717215],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([183000],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([943166],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([10, 75555],"float32"), Tensor([10, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([6831, 32],"int32"), 101029, )
paddle.Tensor.__eq__(Tensor([790612],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([802823],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([253440],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([1, 230202],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([5, 168795],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 72270],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 1, 172, 172],"float16"), Tensor([4, 1, 172, 172],"float16"), )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 82, )
paddle.Tensor.__eq__(Tensor([408921],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([2, 60450],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 68985],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 75615],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([6502, 32],"int32"), 101033, )
paddle.Tensor.__eq__(Tensor([4, 63720],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([409600],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([213000],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([1, 304368],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([9, 51840],"float32"), Tensor([9, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([917016],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([7164, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([158580],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([2, 217689],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([8, 47520],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 75375],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([7, 70080],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 73125],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([907038],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([6805, 32],"int32"), 101033, )
paddle.Tensor.__eq__(Tensor([1, 800, 1203],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([13, 50250],"float32"), Tensor([13, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([15, 57750],"float32"), Tensor([15, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([7710, 32],"int32"), 101033, )
paddle.Tensor.__eq__(Tensor([1, 800, 871],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([920160],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([1, 800, 1207],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([917966],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([1, 800, 645],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([7, 76590],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([6, 61065],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 800, 1211],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([14, 68040],"float32"), Tensor([14, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 217413],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([965701],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([403230],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([292500],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([905414],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([1, 268560],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([5, 70080],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 78120],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 236334],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 236616],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 261681],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([907233],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2, 314595],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([5, 61440],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([7, 57240],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([861660],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([966506],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([3, 51840],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([803365],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([350178],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([860575],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([2, 340176],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 214107],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 16, )
paddle.Tensor.__eq__(Tensor([18, 50250],"float32"), Tensor([18, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([190440],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([1, 800, 1158],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([6870, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([926920],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 139, )
paddle.Tensor.__eq__(Tensor([9, 46305],"float32"), Tensor([9, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([7, 60750],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([853688],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([835357],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([7780, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([844152],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([4, 73920],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([7, 60480],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 42780],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 117, )
paddle.Tensor.__eq__(Tensor([888312],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([5, 56250],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 340686],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([360240],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([936297],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([346560],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 124, )
paddle.Tensor.__eq__(Tensor([4, 68985],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([886248],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([4, 1, 115, 115],"float16"), Tensor([4, 1, 115, 115],"float16"), )
paddle.Tensor.__eq__(Tensor([792996],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([945336],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 12, )
paddle.Tensor.__eq__(Tensor([980291],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([6, 45750],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([973896],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([217080],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([2, 77490],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([894148],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([2, 88200],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([900266],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([944676],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([889717],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([3795, 32],"int32"), 101029, )
paddle.Tensor.__eq__(Tensor([2, 59295],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([790301],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([212400],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([2, 294624],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([946388],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([12, 78120],"float32"), Tensor([12, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([859320],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([6282, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([6, 78120],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([961572],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([10, 61065],"float32"), Tensor([10, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([8, 63000],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([337590],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([6911, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([3783, 32],"int32"), 101029, )
paddle.Tensor.__eq__(Tensor([2, 365211],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([817975],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([3, 78750],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([956773],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([912773],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([388740],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([4843, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([913977],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([491040],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([1, 800, 1166],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([797269],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([1, 204624],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 800, 531],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([15, 62310],"float32"), Tensor([15, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([842480],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([6296, 32],"int32"), 101029, )
paddle.Tensor.__eq__(Tensor([1, 800, 1203],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([4, 1, 148, 148],"float16"), Tensor([4, 1, 148, 148],"float16"), )
paddle.Tensor.__eq__(Tensor([827954],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([821415],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([1, 397467],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([753024],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([934407],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2, 57285],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 800, 1249],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 78, )
paddle.Tensor.__eq__(Tensor([214848],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([988344],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([7183, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 58, )
paddle.Tensor.__eq__(Tensor([285444],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([897440],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2, 257796],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([8, 78660],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([6, 50400],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([899796],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([961515],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([984839],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([291840],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([226920],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([854188],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([938499],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([917016],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([7, 56640],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 800, 1197],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([17, 50250],"float32"), Tensor([17, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([7065, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([870756],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([7, 48000],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 20, )
paddle.Tensor.__eq__(Tensor([1, 345618],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([8, 52920],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([905529],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([14, 60480],"float32"), Tensor([14, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 41, )
paddle.Tensor.__eq__(Tensor([6870, 32],"int32"), 101029, )
paddle.Tensor.__eq__(Tensor([833202],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([4, 1, 127, 127],"float16"), Tensor([4, 1, 127, 127],"float16"), )
paddle.Tensor.__eq__(Tensor([322245],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([7, 64320],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([379050],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([216000],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([900075],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([235200],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([307440],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([409600],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([6, 57000],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([908431],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([946452],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([915887],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 89, )
paddle.Tensor.__eq__(Tensor([3, 208692],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([8, 68400],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 24, )
paddle.Tensor.__eq__(Tensor([1, 369105],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([17, 40320],"float32"), Tensor([17, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 53, )
paddle.Tensor.__eq__(Tensor([8, 84420],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([947132],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([6, 80640],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 202572],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([720537],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([831166],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([969511],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([4, 244800],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([10, 74100],"float32"), Tensor([10, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([932844],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([3, 79680],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([6976, 32],"int32"), 101029, )
paddle.Tensor.__eq__(Tensor([2, 217413],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([6, 77025],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([842436],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([18, 53760],"float32"), Tensor([18, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([241731],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([302460],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([989969],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([3579, 32],"int32"), 101033, )
paddle.Tensor.__eq__(Tensor([306900],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([5, 64170],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([13, 68160],"float32"), Tensor([13, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([12, 52080],"float32"), Tensor([12, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 212784],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([3, 47520],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([14, 56640],"float32"), Tensor([14, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([930253],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([4533, 32],"int32"), 101033, )
paddle.Tensor.__eq__(Tensor([797922],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([5, 51840],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([5, 57000],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 285444],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([983292],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([946295],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([4, 68400],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([289440],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([1, 800, 1208],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([4, 62310],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 68340],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([910109],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([8, 62400],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([5060, 32],"int32"), 101029, )
paddle.Tensor.__eq__(Tensor([841983],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([5, 76380],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 220992],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([3, 59250],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([735573],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([3, 236616],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([231840],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([7, 54870],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([6992, 32],"int32"), 101033, )
paddle.Tensor.__eq__(Tensor([729564],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([293460],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([7, 77625],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 57000],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([3, 57285],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([3438, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([6, 75840],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([303858],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([8, 49680],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([941063],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([347760],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([2, 237360],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([3, 194157],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([8, 43560],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([790972],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([895230],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2, 57960],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([434826],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([1, 800, 1188],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([959543],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([859740],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2, 63000],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([52640, 8],"float32"), Tensor([8],"float32"), )
paddle.Tensor.__eq__(Tensor([413280],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 94, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 86, )
paddle.Tensor.__eq__(Tensor([340176],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([7, 52560],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([819339],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([889134],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([1, 191301],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([966924],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([295647],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 83, )
paddle.Tensor.__eq__(Tensor([1, 302832],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([7200, 32],"int32"), 101033, )
paddle.Tensor.__eq__(Tensor([245220],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([8, 71415],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([882837],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([867771],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([936939],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([3795, 32],"int32"), 101033, )
paddle.Tensor.__eq__(Tensor([2, 278256],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 122, )
paddle.Tensor.__eq__(Tensor([3, 69345],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([952036],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([314595],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([3, 150402],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([907504],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 126, )
paddle.Tensor.__eq__(Tensor([4, 4, 128, 128],"float32"), 1, )
paddle.Tensor.__eq__(Tensor([52640, 7],"float32"), Tensor([7],"float32"), )
paddle.Tensor.__eq__(Tensor([908431],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([3, 268560],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([170628],"int32"), 4, )
paddle.Tensor.__eq__(Tensor([302832],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([5084, 32],"int32"), 101029, )
paddle.Tensor.__eq__(Tensor([4, 230202],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([955839],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([992456],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 65, )
paddle.Tensor.__eq__(Tensor([855961],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([941136],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([892196],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([2, 105840],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([868526],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([10, 48000],"float32"), Tensor([10, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([5, 84375],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([973822],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([3, 241221],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([963948],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([5, 85320],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([283905],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([868526],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([1, 800, 1166],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([345618],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([6, 60480],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([947132],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([743793],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([3, 64320],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([5548, 32],"int32"), 101033, )
paddle.Tensor.__eq__(Tensor([803365],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([3, 313347],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([916011],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([919706],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([14, 44250],"float32"), Tensor([14, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([3, 83220],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 196416],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([8162, 32],"int32"), 101029, )
paddle.Tensor.__eq__(Tensor([12, 48240],"float32"), Tensor([12, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([5, 75375],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([929509],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([4, 1, 304, 304],"float16"), Tensor([4, 1, 304, 304],"float16"), )
paddle.Tensor.__eq__(Tensor([359100],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([720537],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([966506],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([5, 49680],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([889653],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([1, 800, 639],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([6117, 32],"int32"), 101033, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 133, )
paddle.Tensor.__eq__(Tensor([5, 83220],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 185691],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([321600],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([747492],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 56, )
paddle.Tensor.__eq__(Tensor([243000],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([861519],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([15, 40320],"float32"), Tensor([15, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([3, 62160],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 249405],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([802611],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([911980],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([1, 800, 849],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([6753, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([12, 60750],"float32"), Tensor([12, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 78840],"float32"), Tensor([4, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([994032],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([6831, 32],"int32"), 101025, )
paddle.Tensor.__eq__(Tensor([354240],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([14, 56280],"float32"), Tensor([14, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([3, 77760],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2, 79680],"float32"), Tensor([2, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 293622],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([862614],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([890392],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([311040],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([3, 268569],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([623489],"int64"), 85, )
paddle.Tensor.__floordiv__(Tensor([10, 1024],"float32"), Tensor([10, 1024],"float16"), )
paddle.Tensor.__floordiv__(Tensor([10, 1024],"int64"), Tensor([10, 1024],"int64"), )
paddle.Tensor.__floordiv__(Tensor([4, 300],"int64"), 4, )
paddle.Tensor.__ge__(Tensor([305040],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([289080],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([294000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([337500],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([249600],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([307200],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 182391],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([971964],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 229455],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([187680],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([279720],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 260865],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([204800],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([178080],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([988344],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1000, 784],"float32"), -8, )
paddle.Tensor.__ge__(Tensor([301500],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 252681],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([687552],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([237180],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 272649],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 408177],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 212784],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([226560],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 255780],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([222720],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([295680],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([199424],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([209664],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([180540],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([293460],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([328500],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 236313],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([136448],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([220800],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 233244],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 194157],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 293397],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 138120],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([306360],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 176490],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([241200],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 350178],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([258720],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([269040],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 250656],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([121600],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 343728],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 302832],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([736560],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([957528],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([675180],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([184920],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 331722],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([894216],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([235200],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 245520],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([253440],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([183000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 223827],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([729564],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 321759],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([112500],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 327360],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([291840],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([761184],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([945336],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([270000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 330429],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([207360],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([318780],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([273240],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([174080],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([264600],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 388032],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 331251],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([215040],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([119040],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 340686],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 329205],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 349155],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([182391],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 378540],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([810288],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([185220],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 243474],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([315000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([197640],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 180048],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([932976],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([161024],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([201000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([423360],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([100500],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1000, 784],"float32"), -13, )
paddle.Tensor.__ge__(Tensor([111510],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([485982],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([129792],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([250800],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 222012],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 229152],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([797940],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([128000],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([191301],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([870756],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([273600],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 304368],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([171120],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 388740],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([156672],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([208320],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([367920],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([223560],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([138120],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([220968],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([302220],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([204288],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([155904],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([171888],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([319740],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([277200],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([218400],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([225720],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([172800],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 153450],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 269586],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([177276],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 365211],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 246051],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 168795],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([187200],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([302460],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([767340],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 198249],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([201600],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([225000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 379050],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 309255],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([207000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([888048],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([165376],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([300960],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 331452],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([100352],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([231840],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([984204],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([192960],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 322245],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([318720],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([844152],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([211680],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([277380],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([640, 640],"float32"), Tensor([],"float32"), )
paddle.Tensor.__ge__(Tensor([298200],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 272118],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([392832],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 252195],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([204960],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([908496],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([190440],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([851136],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 158580],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 230202],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([303360],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([226800],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([124800],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 347820],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 276210],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([173880],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 306900],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([310500],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([311040],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([946464],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 286464],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([271560],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 239382],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([276120],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([507456],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([153450],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([226920],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 217413],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([2, 107136],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 241221],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([305520],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([341280],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([134400],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([354240],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([638400],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([360240],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([832788],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 296700],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([100440],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([269340],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 227124],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 340176],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([230400],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 313347],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 267030],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([245220],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([227124],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 261681],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 277539],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 278256],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([964884],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([949440],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 166533],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([994464],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([155760],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([945252],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 268569],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 219453],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 279300],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([317520],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 312324],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([286440],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([210000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([300300],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([346560],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([213840],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([225792],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([877812],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([110592],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 313038],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([332880],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([273360],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([177000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 150402],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([275940],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 283905],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([141056],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 295647],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([241800],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([161280],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([165888],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([413280],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([196944],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([383040],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([131328],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 429660],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([195840],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([136000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 205923],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([773472],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([243360],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([248640],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([297000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([284400],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([189696],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 214830],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([337680],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([223380],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([194176],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 202572],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 214107],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 269355],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([174240],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([198720],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([193536],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([308100],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([241920],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 245823],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([951480],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([182784],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 200022],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([237000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 196416],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([244260],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([178560],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([491040],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 346086],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([158580],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([183680],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 268560],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([150784],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([255360],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([228000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 300762],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([236880],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 279279],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([174720],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([188160],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([753024],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([193200],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 244800],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 317160],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([337590],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([347760],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([911676],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([280320],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 196944],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 294624],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 261888],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([249240],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([204672],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 171888],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([268800],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 333018],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([254880],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 257796],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 398487],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([362880],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([920808],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([238080],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 235320],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([102400],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([252540],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 211038],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([917820],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 105840],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 177276],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([172032],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 247086],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 237870],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 242991],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([148740],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([289440],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 278562],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([184832],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 25, 21504],"float32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 185691],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([272640],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([859392],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 367059],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([800088],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([6, 32000],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1, 285444],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([264960],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([324720],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([160512],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([455838],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 335568],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([228960],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 322272],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([285660],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([175104],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 359100],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 184140],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([252000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 356541],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([792996],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 314595],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([920700],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([378000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([115050],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([666132],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([883968],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([742764],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 320739],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([261120],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([223020],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 325113],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([352800],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 311535],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 230175],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([288000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([257280],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([231000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 368280],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 286440],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 369105],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([207360],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([834768],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([120960],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 191301],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([143370],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([282240],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([1, 223554],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1, 339150],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([272160],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 377514],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([219000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 237360],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([219480],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([204120],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([314640],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([189440],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([205923],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 295443],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([234000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 234804],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([4, 157920],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([300804],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([233280],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 262428],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([229140],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([895308],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([225120],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([434826],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 301302],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([123904],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([258420],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([257400],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([321600],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([250920],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([126464],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([296400],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 191835],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([312480],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([274500],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 220968],"float32"), 0.7, )
paddle.Tensor.__gt__(Tensor([15, 57000],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([10670, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 60, 6069],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2749, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4986, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([7341, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 9, 4725],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([8428, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8765, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11125, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1706, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1720, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([16, 7581],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 93, 2100],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([8115, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 76, 5376],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([5428, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 23, 10164],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([4430, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11952, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 22, 3024],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([8, 23, 4116],"float32"), Tensor([8, 23, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1554, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11494, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9, 58800],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2205, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 237870],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1259, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10, 75240],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([7476, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 13, 40656],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([5538, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([107416, 1],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([964440, 1],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([33876, 11],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([12188, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10262, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([13, 50250],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 21, 6069],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2, 39, 3024],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2, 20, 8500],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([8, 9, 2100],"float32"), Tensor([8, 9, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([12254, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([7713, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3745, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11400, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 60, 6804],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([5214, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([7371, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2955, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2635, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6417, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4882, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6414, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 40, 3024],"float32"), Tensor([8, 40, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([2200, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8430, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4, 28, 3549],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2, 60, 5376],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2334, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9, 61305],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4428, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([16, 16, 3549],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2908, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([12012, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4018, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2751, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4846, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 340176],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4789, 35],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 25, 27216],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([6936, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3, 71100],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([7018, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 217413],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([6134, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2648, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4165, 41],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 27, 4116],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2, 26, 4725],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1573, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([5454, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2924, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2944, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 13, 3024],"float32"), Tensor([8, 13, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([2, 40, 7581],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([12363, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([5732, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([7, 76590],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4504, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9536, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2584, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1955, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2768, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9508, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1712, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4977, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 25, 5376],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([7470, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([7675, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6090, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([13125, 10],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4410, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11609, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 322245],"int64"), 0, )
paddle.Tensor.__gt__(Tensor([1, 22, 44436],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([8214, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6838, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2616, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11, 75375],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([9270, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2240, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1467, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 3, 9382],"float32"), Tensor([8, 3, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 19, 48384],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([16, 6804],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 3, 56784],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4, 28, 5376],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([3, 182391],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 4, 56784],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([10731, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2669, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2178, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3, 84420],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 18, 5376],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([12240, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2229, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 78840],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2703, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9644, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 31, 24276],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([5742, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 33, 8400],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([10260, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 15, 10164],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2, 13, 9382],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([5, 69345],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 7, 9382],"float32"), Tensor([2, 7, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([2, 243474],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4616, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 21, 30324],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 333018],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([6, 86640],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([6249, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 212784],"int64"), 0, )
paddle.Tensor.__gt__(Tensor([3884, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3606, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 70, 2100],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2, 70, 6804],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([38808, 11],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1986, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6388, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8449, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([16, 22, 2100],"float32"), Tensor([16, 22, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([6141, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([12296, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4008, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 25, 4116],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2, 40, 6804],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([6, 56730],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 269586],"int64"), 0, )
paddle.Tensor.__gt__(Tensor([3784, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11786, 11],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2493, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4614, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([16, 3, 2125],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2772, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2978, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 8, 9382],"float32"), Tensor([2, 8, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1878, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 30, 4116],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([11961, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8955, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10296, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6422, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9693, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4208, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 79380],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4399, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10510, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6267, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 105, 4116],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([6762, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2625, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10112, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 9, 11109],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([3564, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1976, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 279300],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([3603, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 8, 8500],"float32"), Tensor([2, 8, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([8829, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 62, 7581],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4904, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 17, 4116],"float32"), Tensor([8, 17, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([7600, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 20, 3549],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([50706, 11],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 21, 9261],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([3222, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 58, 2541],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([7292, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 182391],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([2307, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 14, 6804],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([8511, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 40, 12096],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([8, 6, 3024],"float32"), Tensor([8, 6, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([4, 37, 3024],"float32"), Tensor([4, 37, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([5146, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11040, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10062, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3633, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4104, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4630, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1512, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8985, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 15, 4725],"float32"), Tensor([8, 15, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([1, 14, 37044],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2757, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([7050, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10325, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3942, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([5384, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9788, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1475, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 18, 44436],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([10456, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([5474, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 27, 7581],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([7402, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([7188, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9670, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6597, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2277, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([12032, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([5326, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8193, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4, 220992],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([6, 75840],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([3, 234804],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4980, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([5540, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 12, 2541],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([4, 51, 4725],"float32"), Tensor([4, 51, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([2, 58, 3549],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([14346, 11],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3538, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 42, 4116],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2441, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3502, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 322245],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([16660, 41],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([6605, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8738, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11924, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 69345],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([10884, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4492, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9745, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 158580],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([6201, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 16, 3598],"float32"), Tensor([2, 16, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([7231, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9672, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 398487],"int64"), 0, )
paddle.Tensor.__gt__(Tensor([3060, 54],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4970, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([5013, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 4, 33600],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([6212, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4689, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 12, 6885],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([16, 8, 6804],"float32"), Tensor([16, 8, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([5156, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 63, 6069],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([11823, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10732, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6009, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9032, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11885, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2123, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3, 81000],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 46, 21504],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 52, 4725],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([9920, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3661, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 5, 3024],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2, 72, 4116],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([6129, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([5184, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([16, 28, 2100],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([1, 22, 30324],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([12320, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1536, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4, 26, 4725],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([1795, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3110, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([22680, 11],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6798, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6974, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1605, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 18, 6069],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2164, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 261681],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2997, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11241, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10047, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8160, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([170628, 1],"int32"), Tensor([1, 20],"int32"), )
paddle.Tensor.__gt__(Tensor([12192, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2876, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 369303],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([8, 2, 9382],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2150, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 262194],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 29, 4116],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 61, 3549],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([7336, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([5936, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1980, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1844, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3624, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4772, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 26, 7581],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 295443],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([4088, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([12284, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10044, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 81, 6069],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([4046, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 204, 2100],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([16, 13, 4725],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([1, 359613],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2766, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 33, 7581],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([8612, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 214848],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([3159, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4497, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2914, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4216, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([17, 51750],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([11058, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 40, 21504],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2211, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11264, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6072, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 11, 11109],"float32"), Tensor([8, 11, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([4530, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 51, 3024],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2980, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2339, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2517, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([12408, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6960, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9500, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([12240, 20],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 26, 11109],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([1, 14, 9382],"float32"), Tensor([1, 14, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([6850, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([7722, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([41472, 11],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1826, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([5211, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 9, 33600],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 8, 56784],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([11440, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1270, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 304368],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([2, 63840],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1446, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3134, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3, 35280],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([8, 11, 3549],"float32"), Tensor([8, 11, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([6426, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 20, 44436],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([7488, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([4262, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 24, 2100],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([5272, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2213, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2303, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3296, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([8, 13, 4725],"float32"), Tensor([8, 13, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([2, 23, 2541],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 21, 3024],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([6246, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 176490],"float32"), -1, )
paddle.Tensor.__gt__(Tensor([1, 5, 75600],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2, 239382],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4182, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 11, 7581],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([6, 73920],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([7676, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 37, 6069],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([10822, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([6309, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2267, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3311, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5950, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([18204, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3380, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1765, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7088, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7564, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4908, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1356, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12380, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7074, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([20570, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6946, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6363, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11796, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1645, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5634, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4916, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8427, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1371, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1864, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12356, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7425, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2357, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1250, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6070, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9166, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7855, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4095, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1432, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9500, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10788, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1341, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7443, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2309, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4277, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2824, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3315, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11756, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1544, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6027, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8980, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8596, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3405, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3492, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1694, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8463, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9218, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7892, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8468, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3105, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1788, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12093, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9888, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7479, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10290, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1911, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9640, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9324, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([86484, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2562, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9318, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3926, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11202, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7272, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1880, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4505, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8301, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3912, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2617, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4090, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5328, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9944, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1563, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3718, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5684, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6159, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7300, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4808, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7428, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10542, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4445, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1430, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4546, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2107, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6783, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11320, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2343, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3876, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1479, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6902, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6778, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6606, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7340, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11820, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11679, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7370, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6843, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1617, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7520, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2346, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6060, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8797, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([34000, 4],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4778, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4056, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9660, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3278, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6306, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5364, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3582, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11280, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6429, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1676, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2112, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11830, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11636, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9395, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4873, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5420, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3755, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6742, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4645, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([14346, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6936, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3518, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7410, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9758, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8638, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1366, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1334, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1449, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11576, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1878, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1451, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([263436, 1],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6040, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5181, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10968, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10377, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2152, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2410, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1264, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4530, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2237, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5516, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11892, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([119493, 1],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2178, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11984, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1824, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4685, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2011, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1669, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3888, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7076, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9332, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5571, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2720, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12233, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7020, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9909, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11925, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7707, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6940, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5698, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3314, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8535, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8433, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6974, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7810, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6741, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5057, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6231, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6120, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12192, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2730, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6340, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2088, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11224, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5949, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10330, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6632, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12495, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8169, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([31866, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1599, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2400, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3770, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4724, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9685, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([43376, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3085, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7221, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7780, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1916, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6248, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2703, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3766, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11178, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6484, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3354, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9656, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6243, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1753, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6096, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8679, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6434, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7579, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4974, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2133, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4576, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2620, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10440, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3480, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4084, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9843, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3004, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2744, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10934, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3141, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6316, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([30780, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10220, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9222, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11022, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2241, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1760, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7576, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11376, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1812, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1543, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([27400, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3115, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7518, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6996, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11468, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5991, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7078, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11103, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7116, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8154, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4949, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12096, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3519, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4518, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([424375, 1],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([68000, 4],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9370, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7195, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9050, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10725, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([19184, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8905, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2576, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2015, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8965, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([86957, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3642, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8313, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12480, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6519, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5138, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6375, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([700271, 1],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([116640, 1],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2546, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3232, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1539, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3112, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1927, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5715, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1915, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10242, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3525, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8064, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7267, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9163, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2271, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11230, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1662, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2318, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12221, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7375, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1282, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9578, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2629, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9591, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5726, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11156, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1842, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11666, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9105, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9098, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1447, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2753, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8988, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7302, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1718, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2276, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10245, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10854, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4575, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5194, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2862, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4816, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9654, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9515, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1692, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([243474, 1],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9795, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10320, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3036, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3451, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9100, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1979, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10701, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7587, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11816, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3382, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6717, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12035, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5679, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2235, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6630, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2941, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10764, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6604, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12004, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12240, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3842, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8276, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7935, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6370, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12432, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9126, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7712, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([11440, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7890, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3208, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5957, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1734, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8510, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([45198, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4832, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5691, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2048, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5476, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5855, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8523, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3164, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2492, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([24300, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9525, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6687, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3768, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3611, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5495, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2371, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3129, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1738, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9894, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10827, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12400, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([5787, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2992, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6535, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3093, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4404, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10765, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6158, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3282, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3322, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([4478, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8508, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8072, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2775, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8430, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6466, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6260, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3338, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2397, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7312, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7208, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([7176, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9997, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([8036, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9924, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1429, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12050, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2078, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([9180, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2754, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10050, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([1968, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3471, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10840, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6560, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([3829, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([6083, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([10469, 80],"float32"), 0.0, )
paddle.Tensor.__len__(Tensor([860766],"float32"), )
paddle.Tensor.__len__(Tensor([720537],"float32"), )
paddle.Tensor.__len__(Tensor([910774],"float32"), )
paddle.Tensor.__len__(Tensor([946388],"float32"), )
paddle.Tensor.__len__(Tensor([106641],"float32"), )
paddle.Tensor.__len__(Tensor([10, 1, 64, 256],"float32"), )
paddle.Tensor.__len__(Tensor([888865],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1090],"int64"), )
paddle.Tensor.__len__(Tensor([941063],"float32"), )
paddle.Tensor.__len__(Tensor([859740],"float32"), )
paddle.Tensor.__len__(Tensor([851669],"float32"), )
paddle.Tensor.__len__(Tensor([904945],"float32"), )
paddle.Tensor.__len__(Tensor([724723],"float32"), )
paddle.Tensor.__len__(Tensor([976558],"float32"), )
paddle.Tensor.__len__(Tensor([797269],"float32"), )
paddle.Tensor.__len__(Tensor([830677],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 160],"float32"), )
paddle.Tensor.__len__(Tensor([10, 1, 64, 288],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 32, 224],"float32"), )
paddle.Tensor.__len__(Tensor([925379],"float32"), )
paddle.Tensor.__len__(Tensor([747492],"float32"), )
paddle.Tensor.__len__(Tensor([937631],"float32"), )
paddle.Tensor.__len__(Tensor([955839],"float32"), )
paddle.Tensor.__len__(Tensor([830827],"float32"), )
paddle.Tensor.__len__(Tensor([961515],"float32"), )
paddle.Tensor.__len__(Tensor([917966],"float32"), )
paddle.Tensor.__len__(Tensor([8, 1, 64, 448],"float32"), )
paddle.Tensor.__len__(Tensor([916356],"float32"), )
paddle.Tensor.__len__(Tensor([910889],"float32"), )
paddle.Tensor.__len__(Tensor([956773],"float32"), )
paddle.Tensor.__len__(Tensor([935486],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 800],"int64"), )
paddle.Tensor.__len__(Tensor([899796],"float32"), )
paddle.Tensor.__len__(Tensor([1, 544, 544],"float32"), )
paddle.Tensor.__len__(Tensor([913434],"float32"), )
paddle.Tensor.__len__(Tensor([791136],"float32"), )
paddle.Tensor.__len__(Tensor([858907],"float32"), )
paddle.Tensor.__len__(Tensor([944010],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 480],"float32"), )
paddle.Tensor.__len__(Tensor([40000, 4],"float32"), )
paddle.Tensor.__len__(Tensor([907369],"float32"), )
paddle.Tensor.__len__(Tensor([818851],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 288],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1067],"int64"), )
paddle.Tensor.__len__(Tensor([890854],"float32"), )
paddle.Tensor.__len__(Tensor([891361],"float32"), )
paddle.Tensor.__len__(Tensor([841983],"float32"), )
paddle.Tensor.__len__(Tensor([119168],"float32"), )
paddle.Tensor.__len__(Tensor([836381],"float32"), )
paddle.Tensor.__len__(Tensor([871821],"float32"), )
paddle.Tensor.__len__(Tensor([104000],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1081],"int64"), )
paddle.Tensor.__len__(Tensor([940243],"float32"), )
paddle.Tensor.__len__(Tensor([940154],"float32"), )
paddle.Tensor.__len__(Tensor([955230],"float32"), )
paddle.Tensor.__len__(Tensor([786202],"float32"), )
paddle.Tensor.__len__(Tensor([483100, 1],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 871],"int64"), )
paddle.Tensor.__len__(Tensor([894148],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 32, 160],"float32"), )
paddle.Tensor.__len__(Tensor([942039],"float32"), )
paddle.Tensor.__len__(Tensor([929142],"float32"), )
paddle.Tensor.__len__(Tensor([1, 736, 736],"float32"), )
paddle.Tensor.__len__(Tensor([102912, 1],"float32"), )
paddle.Tensor.__len__(Tensor([804637],"float32"), )
paddle.Tensor.__len__(Tensor([905562],"float32"), )
paddle.Tensor.__len__(Tensor([961439],"float32"), )
paddle.Tensor.__len__(Tensor([807549],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 32, 512],"float32"), )
paddle.Tensor.__len__(Tensor([147015, 1],"float32"), )
paddle.Tensor.__len__(Tensor([903681],"float32"), )
paddle.Tensor.__len__(Tensor([113424],"float32"), )
paddle.Tensor.__len__(Tensor([964107],"float32"), )
paddle.Tensor.__len__(Tensor([823810],"float32"), )
paddle.Tensor.__len__(Tensor([882579],"float32"), )
paddle.Tensor.__len__(Tensor([10, 1, 64, 352],"float32"), )
paddle.Tensor.__len__(Tensor([825644],"float32"), )
paddle.Tensor.__len__(Tensor([871263],"float32"), )
paddle.Tensor.__len__(Tensor([968731],"float32"), )
paddle.Tensor.__len__(Tensor([926689],"float32"), )
paddle.Tensor.__len__(Tensor([835629],"float32"), )
paddle.Tensor.__len__(Tensor([8, 1, 64, 480],"float32"), )
paddle.Tensor.__len__(Tensor([986661],"float32"), )
paddle.Tensor.__len__(Tensor([7, 1, 64, 608],"float32"), )
paddle.Tensor.__len__(Tensor([971838],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 384],"float32"), )
paddle.Tensor.__len__(Tensor([934407],"float32"), )
paddle.Tensor.__len__(Tensor([833791],"float32"), )
paddle.Tensor.__len__(Tensor([986636],"float32"), )
paddle.Tensor.__len__(Tensor([1, 704, 704],"float32"), )
paddle.Tensor.__len__(Tensor([863412],"float32"), )
paddle.Tensor.__len__(Tensor([848984],"float32"), )
paddle.Tensor.__len__(Tensor([958929],"float32"), )
paddle.Tensor.__len__(Tensor([803365],"float32"), )
paddle.Tensor.__len__(Tensor([10, 1, 64, 224],"float32"), )
paddle.Tensor.__len__(Tensor([908506],"float32"), )
paddle.Tensor.__len__(Tensor([963948],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 224],"float32"), )
paddle.Tensor.__len__(Tensor([763098],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 32, 352],"float32"), )
paddle.Tensor.__len__(Tensor([889717],"float32"), )
paddle.Tensor.__len__(Tensor([935575],"float32"), )
paddle.Tensor.__len__(Tensor([875320],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 32, 192],"float32"), )
paddle.Tensor.__len__(Tensor([895846],"float32"), )
paddle.Tensor.__len__(Tensor([889134],"float32"), )
paddle.Tensor.__len__(Tensor([808670],"float32"), )
paddle.Tensor.__len__(Tensor([939644],"float32"), )
paddle.Tensor.__len__(Tensor([910109],"float32"), )
paddle.Tensor.__len__(Tensor([822155],"float32"), )
paddle.Tensor.__len__(Tensor([992456],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 448],"float32"), )
paddle.Tensor.__len__(Tensor([109824],"float32"), )
paddle.Tensor.__len__(Tensor([725292],"float32"), )
paddle.Tensor.__len__(Tensor([815795],"float32"), )
paddle.Tensor.__len__(Tensor([842480],"float32"), )
paddle.Tensor.__len__(Tensor([847507],"float32"), )
paddle.Tensor.__len__(Tensor([912939],"float32"), )
paddle.Tensor.__len__(Tensor([906698],"float32"), )
paddle.Tensor.__len__(Tensor([989643],"float32"), )
paddle.Tensor.__len__(Tensor([156816, 1],"float32"), )
paddle.Tensor.__len__(Tensor([852880],"float32"), )
paddle.Tensor.__len__(Tensor([10, 1, 64, 384],"float32"), )
paddle.Tensor.__len__(Tensor([887580],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 32, 256],"float32"), )
paddle.Tensor.__len__(Tensor([840114],"float32"), )
paddle.Tensor.__len__(Tensor([885970],"float32"), )
paddle.Tensor.__len__(Tensor([985929],"float32"), )
paddle.Tensor.__len__(Tensor([122705],"float32"), )
paddle.Tensor.__len__(Tensor([727244],"float32"), )
paddle.Tensor.__len__(Tensor([885007],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 512],"float32"), )
paddle.Tensor.__len__(Tensor([894988],"float32"), )
paddle.Tensor.__len__(Tensor([834985],"float32"), )
paddle.Tensor.__len__(Tensor([941840],"float32"), )
paddle.Tensor.__len__(Tensor([883250],"float32"), )
paddle.Tensor.__len__(Tensor([944052],"float32"), )
paddle.Tensor.__len__(Tensor([790301],"float32"), )
paddle.Tensor.__len__(Tensor([118926],"float32"), )
paddle.Tensor.__len__(Tensor([958738],"float32"), )
paddle.Tensor.__len__(Tensor([947393],"float32"), )
paddle.Tensor.__len__(Tensor([819339],"float32"), )
paddle.Tensor.__len__(Tensor([936685],"float32"), )
paddle.Tensor.__len__(Tensor([943934],"float32"), )
paddle.Tensor.__len__(Tensor([952036],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1200],"int64"), )
paddle.Tensor.__len__(Tensor([878743],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 849],"int64"), )
paddle.Tensor.__len__(Tensor([739406],"float32"), )
paddle.Tensor.__len__(Tensor([797922],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1207],"int64"), )
paddle.Tensor.__len__(Tensor([733968],"float32"), )
paddle.Tensor.__len__(Tensor([112383],"float32"), )
paddle.Tensor.__len__(Tensor([913153],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1119],"int64"), )
paddle.Tensor.__len__(Tensor([926213],"float32"), )
paddle.Tensor.__len__(Tensor([797394],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 256],"float32"), )
paddle.Tensor.__len__(Tensor([973556],"float32"), )
paddle.Tensor.__len__(Tensor([970426],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1249],"int64"), )
paddle.Tensor.__len__(Tensor([849465],"float32"), )
paddle.Tensor.__len__(Tensor([920358],"float32"), )
paddle.Tensor.__len__(Tensor([28224, 4],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1150],"int64"), )
paddle.Tensor.__len__(Tensor([894751],"float32"), )
paddle.Tensor.__len__(Tensor([953556],"float32"), )
paddle.Tensor.__len__(Tensor([865739],"float32"), )
paddle.Tensor.__len__(Tensor([899302],"float32"), )
paddle.Tensor.__len__(Tensor([912236],"float32"), )
paddle.Tensor.__len__(Tensor([920493],"float32"), )
paddle.Tensor.__len__(Tensor([919706],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 645],"int64"), )
paddle.Tensor.__len__(Tensor([30, 1, 32, 384],"float32"), )
paddle.Tensor.__len__(Tensor([898752],"float32"), )
paddle.Tensor.__len__(Tensor([888312],"float32"), )
paddle.Tensor.__len__(Tensor([982059],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1234],"int64"), )
paddle.Tensor.__len__(Tensor([957708],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1500, 512],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 192],"float32"), )
paddle.Tensor.__len__(Tensor([903007],"float32"), )
paddle.Tensor.__len__(Tensor([53824, 4],"float32"), )
paddle.Tensor.__len__(Tensor([945157],"float32"), )
paddle.Tensor.__len__(Tensor([827954],"float32"), )
paddle.Tensor.__len__(Tensor([805830],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1208],"int64"), )
paddle.Tensor.__len__(Tensor([102160],"float32"), )
paddle.Tensor.__len__(Tensor([849937],"float32"), )
paddle.Tensor.__len__(Tensor([895230],"float32"), )
paddle.Tensor.__len__(Tensor([910594],"float32"), )
paddle.Tensor.__len__(Tensor([961565],"float32"), )
paddle.Tensor.__len__(Tensor([990230],"float32"), )
paddle.Tensor.__len__(Tensor([857697],"float32"), )
paddle.Tensor.__len__(Tensor([945343],"float32"), )
paddle.Tensor.__len__(Tensor([865633],"float32"), )
paddle.Tensor.__len__(Tensor([853688],"float32"), )
paddle.Tensor.__len__(Tensor([879741],"float32"), )
paddle.Tensor.__len__(Tensor([103633],"float32"), )
paddle.Tensor.__len__(Tensor([904000],"float32"), )
paddle.Tensor.__len__(Tensor([857322],"float32"), )
paddle.Tensor.__len__(Tensor([946295],"float32"), )
paddle.Tensor.__len__(Tensor([100, 2001, 2],"float32"), )
paddle.Tensor.__len__(Tensor([912645],"float32"), )
paddle.Tensor.__len__(Tensor([895208],"float32"), )
paddle.Tensor.__len__(Tensor([892196],"float32"), )
paddle.Tensor.__len__(Tensor([863823],"float32"), )
paddle.Tensor.__len__(Tensor([100000, 1],"float32"), )
paddle.Tensor.__len__(Tensor([966472],"float32"), )
paddle.Tensor.__len__(Tensor([979079],"float32"), )
paddle.Tensor.__len__(Tensor([859626],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 533],"int64"), )
paddle.Tensor.__len__(Tensor([978997],"float32"), )
paddle.Tensor.__len__(Tensor([817975],"float32"), )
paddle.Tensor.__len__(Tensor([57600, 4],"float32"), )
paddle.Tensor.__len__(Tensor([938269],"float32"), )
paddle.Tensor.__len__(Tensor([835357],"float32"), )
paddle.Tensor.__len__(Tensor([874312],"float32"), )
paddle.Tensor.__len__(Tensor([920264],"float32"), )
paddle.Tensor.__len__(Tensor([854532],"float32"), )
paddle.Tensor.__len__(Tensor([6, 25, 50, 50],"float32"), )
paddle.Tensor.__len__(Tensor([867771],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 96],"float32"), )
paddle.Tensor.__len__(Tensor([929509],"float32"), )
paddle.Tensor.__len__(Tensor([950773],"float32"), )
paddle.Tensor.__len__(Tensor([834803],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 32, 320],"float32"), )
paddle.Tensor.__len__(Tensor([905529],"float32"), )
paddle.Tensor.__len__(Tensor([913677],"float32"), )
paddle.Tensor.__len__(Tensor([996211],"float32"), )
paddle.Tensor.__len__(Tensor([760627],"float32"), )
paddle.Tensor.__len__(Tensor([876793],"float32"), )
paddle.Tensor.__len__(Tensor([932844],"float32"), )
paddle.Tensor.__len__(Tensor([918389],"float32"), )
paddle.Tensor.__len__(Tensor([10, 1, 32, 320],"float32"), )
paddle.Tensor.__len__(Tensor([804701],"float32"), )
paddle.Tensor.__len__(Tensor([859234],"float32"), )
paddle.Tensor.__len__(Tensor([924579],"float32"), )
paddle.Tensor.__len__(Tensor([938499],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1166],"int64"), )
paddle.Tensor.__len__(Tensor([944323],"float32"), )
paddle.Tensor.__len__(Tensor([947132],"float32"), )
paddle.Tensor.__len__(Tensor([969511],"float32"), )
paddle.Tensor.__len__(Tensor([828406],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1037],"int64"), )
paddle.Tensor.__len__(Tensor([965841],"float32"), )
paddle.Tensor.__len__(Tensor([110560],"float32"), )
paddle.Tensor.__len__(Tensor([933492],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 512, 512],"int64"), )
paddle.Tensor.__len__(Tensor([876184],"float32"), )
paddle.Tensor.__len__(Tensor([740342],"float32"), )
paddle.Tensor.__len__(Tensor([919510],"float32"), )
paddle.Tensor.__len__(Tensor([862614],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 640],"int64"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 320],"float32"), )
paddle.Tensor.__len__(Tensor([985372],"float32"), )
paddle.Tensor.__len__(Tensor([112000],"float32"), )
paddle.Tensor.__len__(Tensor([940340],"float32"), )
paddle.Tensor.__len__(Tensor([931692],"float32"), )
paddle.Tensor.__len__(Tensor([855080],"float32"), )
paddle.Tensor.__len__(Tensor([832970],"float32"), )
paddle.Tensor.__len__(Tensor([843279],"float32"), )
paddle.Tensor.__len__(Tensor([942419],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 416],"float32"), )
paddle.Tensor.__len__(Tensor([910472],"float32"), )
paddle.Tensor.__len__(Tensor([884532],"float32"), )
paddle.Tensor.__len__(Tensor([958864],"float32"), )
paddle.Tensor.__len__(Tensor([915353],"float32"), )
paddle.Tensor.__len__(Tensor([925403],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1165],"int64"), )
paddle.Tensor.__len__(Tensor([944676],"float32"), )
paddle.Tensor.__len__(Tensor([867608],"float32"), )
paddle.Tensor.__len__(Tensor([923942],"float32"), )
paddle.Tensor.__len__(Tensor([779371],"float32"), )
paddle.Tensor.__len__(Tensor([138863],"float32"), )
paddle.Tensor.__len__(Tensor([10, 1, 64, 192],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 32, 544],"float32"), )
paddle.Tensor.__len__(Tensor([923067],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1074],"int64"), )
paddle.Tensor.__len__(Tensor([882837],"float32"), )
paddle.Tensor.__len__(Tensor([962740],"float32"), )
paddle.Tensor.__len__(Tensor([228595, 1],"float32"), )
paddle.Tensor.__len__(Tensor([911980],"float32"), )
paddle.Tensor.__len__(Tensor([829317],"float32"), )
paddle.Tensor.__len__(Tensor([856799],"float32"), )
paddle.Tensor.__len__(Tensor([1, 768, 768],"float32"), )
paddle.Tensor.__len__(Tensor([25600, 4],"float32"), )
paddle.Tensor.__len__(Tensor([861660],"float32"), )
paddle.Tensor.__len__(Tensor([838278],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 32, 416],"float32"), )
paddle.Tensor.__len__(Tensor([843950],"float32"), )
paddle.Tensor.__len__(Tensor([826111],"float32"), )
paddle.Tensor.__len__(Tensor([941057],"float32"), )
paddle.Tensor.__len__(Tensor([815298],"float32"), )
paddle.Tensor.__len__(Tensor([282600, 1],"float32"), )
paddle.Tensor.__len__(Tensor([5, 1, 64, 576],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 32, 128],"float32"), )
paddle.Tensor.__len__(Tensor([877310],"float32"), )
paddle.Tensor.__len__(Tensor([902319],"float32"), )
paddle.Tensor.__len__(Tensor([809481],"float32"), )
paddle.Tensor.__len__(Tensor([865513],"float32"), )
paddle.Tensor.__len__(Tensor([817632],"float32"), )
paddle.Tensor.__len__(Tensor([831166],"float32"), )
paddle.Tensor.__len__(Tensor([802611],"float32"), )
paddle.Tensor.__len__(Tensor([926920],"float32"), )
paddle.Tensor.__len__(Tensor([969848],"float32"), )
paddle.Tensor.__len__(Tensor([830606],"float32"), )
paddle.Tensor.__len__(Tensor([850906],"float32"), )
paddle.Tensor.__len__(Tensor([10, 1, 32, 384],"float32"), )
paddle.Tensor.__len__(Tensor([885414],"float32"), )
paddle.Tensor.__len__(Tensor([117135],"float32"), )
paddle.Tensor.__len__(Tensor([256512, 1],"float32"), )
paddle.Tensor.__len__(Tensor([46656, 4],"float32"), )
paddle.Tensor.__len__(Tensor([905197],"float32"), )
paddle.Tensor.__len__(Tensor([929896],"float32"), )
paddle.Tensor.__len__(Tensor([970473],"float32"), )
paddle.Tensor.__len__(Tensor([901715],"float32"), )
paddle.Tensor.__len__(Tensor([117570],"float32"), )
paddle.Tensor.__len__(Tensor([930253],"float32"), )
paddle.Tensor.__len__(Tensor([848715],"float32"), )
paddle.Tensor.__len__(Tensor([920069],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1203],"int64"), )
paddle.Tensor.__len__(Tensor([795938],"float32"), )
paddle.Tensor.__len__(Tensor([43264, 4],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1202],"int64"), )
paddle.Tensor.__len__(Tensor([9, 1, 64, 352],"float32"), )
paddle.Tensor.__len__(Tensor([111312],"float32"), )
paddle.Tensor.__len__(Tensor([844621],"float32"), )
paddle.Tensor.__len__(Tensor([718484],"float32"), )
paddle.Tensor.__len__(Tensor([752583],"float32"), )
paddle.Tensor.__len__(Tensor([972067],"float32"), )
paddle.Tensor.__len__(Tensor([735573],"float32"), )
paddle.Tensor.__len__(Tensor([897440],"float32"), )
paddle.Tensor.__len__(Tensor([829772],"float32"), )
paddle.Tensor.__len__(Tensor([931439],"float32"), )
paddle.Tensor.__len__(Tensor([776379],"float32"), )
paddle.Tensor.__len__(Tensor([917016],"float32"), )
paddle.Tensor.__len__(Tensor([123135],"float32"), )
paddle.Tensor.__len__(Tensor([951834],"float32"), )
paddle.Tensor.__len__(Tensor([792742],"float32"), )
paddle.Tensor.__len__(Tensor([936297],"float32"), )
paddle.Tensor.__len__(Tensor([936939],"float32"), )
paddle.Tensor.__len__(Tensor([10, 1, 64, 512],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1197],"int64"), )
paddle.Tensor.__len__(Tensor([889653],"float32"), )
paddle.Tensor.__len__(Tensor([872239],"float32"), )
paddle.Tensor.__len__(Tensor([883912],"float32"), )
paddle.Tensor.__len__(Tensor([973822],"float32"), )
paddle.Tensor.__len__(Tensor([813649],"float32"), )
paddle.Tensor.__len__(Tensor([961572],"float32"), )
paddle.Tensor.__len__(Tensor([854188],"float32"), )
paddle.Tensor.__len__(Tensor([882763],"float32"), )
paddle.Tensor.__len__(Tensor([915594],"float32"), )
paddle.Tensor.__len__(Tensor([905200],"float32"), )
paddle.Tensor.__len__(Tensor([907504],"float32"), )
paddle.Tensor.__len__(Tensor([912773],"float32"), )
paddle.Tensor.__len__(Tensor([984839],"float32"), )
paddle.Tensor.__len__(Tensor([911929],"float32"), )
paddle.Tensor.__len__(Tensor([817210],"float32"), )
paddle.Tensor.__len__(Tensor([802823],"float32"), )
paddle.Tensor.__len__(Tensor([782767],"float32"), )
paddle.Tensor.__len__(Tensor([914729],"float32"), )
paddle.Tensor.__len__(Tensor([904294],"float32"), )
paddle.Tensor.__len__(Tensor([851411],"float32"), )
paddle.Tensor.__len__(Tensor([957711],"float32"), )
paddle.Tensor.__len__(Tensor([822454],"float32"), )
paddle.Tensor.__len__(Tensor([904803],"float32"), )
paddle.Tensor.__len__(Tensor([799391],"float32"), )
paddle.Tensor.__len__(Tensor([9, 1, 32, 416],"float32"), )
paddle.Tensor.__len__(Tensor([137441],"float32"), )
paddle.Tensor.__len__(Tensor([107230],"float32"), )
paddle.Tensor.__len__(Tensor([917660],"float32"), )
paddle.Tensor.__len__(Tensor([849325],"float32"), )
paddle.Tensor.__len__(Tensor([920160],"float32"), )
paddle.Tensor.__len__(Tensor([809355],"float32"), )
paddle.Tensor.__len__(Tensor([797058],"float32"), )
paddle.Tensor.__len__(Tensor([881672],"float32"), )
paddle.Tensor.__len__(Tensor([870169],"float32"), )
paddle.Tensor.__len__(Tensor([878938],"float32"), )
paddle.Tensor.__len__(Tensor([10, 1, 64, 160],"float32"), )
paddle.Tensor.__len__(Tensor([915856],"float32"), )
paddle.Tensor.__len__(Tensor([926271],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 531],"int64"), )
paddle.Tensor.__len__(Tensor([936705],"float32"), )
paddle.Tensor.__len__(Tensor([906544],"float32"), )
paddle.Tensor.__len__(Tensor([943166],"float32"), )
paddle.Tensor.__len__(Tensor([7, 1, 192, 672],"float32"), )
paddle.Tensor.__len__(Tensor([10, 1, 64, 544],"float32"), )
paddle.Tensor.__len__(Tensor([855961],"float32"), )
paddle.Tensor.__len__(Tensor([860575],"float32"), )
paddle.Tensor.__len__(Tensor([889719],"float32"), )
paddle.Tensor.__len__(Tensor([911146],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1198],"int64"), )
paddle.Tensor.__len__(Tensor([888943],"float32"), )
paddle.Tensor.__len__(Tensor([128512, 1],"float32"), )
paddle.Tensor.__len__(Tensor([965701],"float32"), )
paddle.Tensor.__len__(Tensor([823140],"float32"), )
paddle.Tensor.__len__(Tensor([856982],"float32"), )
paddle.Tensor.__len__(Tensor([959543],"float32"), )
paddle.Tensor.__len__(Tensor([908154],"float32"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"uint8"), Tensor([200, 300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int64"), Tensor([200, 300],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int32"), Tensor([200, 300],"int32"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int16"), Tensor([200, 300],"int16"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int8"), Tensor([200, 300],"int8"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int32"), Tensor([300],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int64"), Tensor([200, 300],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int64"), Tensor([300],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([300],"uint8"), Tensor([200, 300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"uint8"), Tensor([300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int16"), Tensor([300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int16"), Tensor([300],"int16"), )
paddle.Tensor.__lshift__(Tensor([300],"int32"), Tensor([200, 300],"int32"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int32"), Tensor([300],"int32"), )
paddle.Tensor.__lshift__(Tensor([300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([200, 300],"int8"), Tensor([300],"int8"), )
paddle.Tensor.__lshift__(Tensor([300],"int16"), Tensor([200, 300],"int16"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int64"), Tensor([300],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 300],"int8"), Tensor([300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int8"), Tensor([200, 300],"int8"), )
paddle.Tensor.__lshift__(Tensor([300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.__lt__(Tensor([139776],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([156672],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([126464],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 322245],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 236313],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 268569],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([182784],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 322272],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 262194],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 229965],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([500, 500],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([1, 227919],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 168795],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([164928],"int32"), 80, )
paddle.Tensor.__lt__(Tensor([496, 496],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([195840],"int32"), 80, )
paddle.Tensor.__lt__(Tensor([1, 3, 400, 300],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([1, 286464],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 331251],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 223827],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 3, 434, 346],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([1, 200022],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([189440],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 386694],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 3, 352, 407],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([1, 242991],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 230175],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([100352],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 180048],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 217689],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 38367, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([1, 229455],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 354501],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 236616],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([20, 1, 152, 272],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([174080],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 378540],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 264978],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 451143],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 377514],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([174240],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 196416],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 220968],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([204288],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 325113],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 333018],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 158580],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 340686],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 199485],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 211038],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([134784],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 3, 477, 401],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([1, 291555],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 230202],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 236334],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 251676],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 337620],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 246051],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 369303],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 339150],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 269586],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 253728],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 295443],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 250656],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([215040],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 356541],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 208692],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([141056],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 398487],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 329205],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 227124],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([165376],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 346086],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([400, 400],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([1, 188256],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 223554],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([160512],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([498, 498],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([1, 261888],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 105840],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([172800],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 185691],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 198249],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 330429],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 269355],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 306900],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 278256],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 166533],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 255780],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 310992],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([131328],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([170240],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([194560],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([136000],"int32"), 80, )
paddle.Tensor.__lt__(Tensor([243360],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 177276],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 283905],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 294624],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 320739],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([209664],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([155904],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([115200],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([4, 22400],"float32"), Tensor([4, 22400],"float32"), )
paddle.Tensor.__lt__(Tensor([282240],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 234804],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([136448],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([199680],"int64"), 11, )
paddle.Tensor.__lt__(Tensor([1, 233244],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 249405],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([207360],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 217413],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([174720],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 349866],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 359100],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 359613],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 279300],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 388740],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 208197],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 261681],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 184140],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 182391],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 262428],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 283167],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 286977],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 244800],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 212784],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([147456],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 278562],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([184320],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 299250],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 214848],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 248616],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 313347],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([204672],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 408177],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([150784],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 365211],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 388032],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([100, 1000],"float64"), 0.5, )
paddle.Tensor.__lt__(Tensor([179968],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([225792],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 202572],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 176490],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 309255],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([183680],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([188160],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 220992],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 367059],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 272118],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([165888],"int64"), 11, )
paddle.Tensor.__lt__(Tensor([1, 314595],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([189696],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 3, 430, 340],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([4, 94, 311],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([1, 237360],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 150402],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 317160],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([198912],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 260865],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([12, 512, 10, 10],"float32"), 0.017361111111111105, )
paddle.Tensor.__lt__(Tensor([175104],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 345618],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 268560],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 219453],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([161024],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 241221],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 193368],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 190296],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 293622],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 252681],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 331452],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 235320],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([177408],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([110464],"int32"), 80, )
paddle.Tensor.__lt__(Tensor([1, 301302],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([172032],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 245520],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 285444],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 267030],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 194157],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 214107],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([134400],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 3, 280, 350],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([204800],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([492, 492],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([194176],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([128000],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 279279],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 214830],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 319200],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([10, 10, 10, 10, 10],"int64"), Tensor([10, 10, 10, 10, 10],"int64"), )
paddle.Tensor.__lt__(Tensor([169728],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 237870],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 3, 391, 436],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([1, 340176],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 3, 466, 386],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([1, 302832],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 327360],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([124800],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 311535],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 295647],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 379050],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 350178],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 304368],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 229152],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 397467],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 335568],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([123904],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 247086],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 303858],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 36828, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([1, 331722],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 171888],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([193536],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 290052],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 312324],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([199424],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 313038],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 343728],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([102400],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([476, 476],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([1, 296700],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 205923],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 349155],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([150528],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 375984],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 222012],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([184832],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 300762],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 321759],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 204624],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([110592],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([155648],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([324000],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([102400],"int64"), 1, )
paddle.Tensor.__lt__(Tensor([1, 191835],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 270096],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 3, 368, 416],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([121600],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 368280],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 191301],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 239382],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 241731],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 286440],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 429660],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 369105],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([178432],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 103320],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 277539],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([100, 1000],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([1, 276210],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 272649],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([220416],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 138120],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 245823],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 293397],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 257796],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([182400],"int64"), 11, )
paddle.Tensor.__lt__(Tensor([1, 440433],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 243474],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 3, 298, 364],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([129792],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 153450],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 196944],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([4, 4, 128, 128],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([1, 347820],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 252195],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 68310],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([47360],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([40256],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([38402],"int32"), 4, )
paddle.Tensor.__lt__(Tensor([1, 79935],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([10752],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 6069, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([34000],"int32"), 4, )
paddle.Tensor.__lt__(Tensor([1, 80400],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 55890],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 62730],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 56730],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 66960],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 66330],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([17640],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 88560],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([44992],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([11088],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 60450],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 61380],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([12300],"int32"), 11, )
paddle.Tensor.__lt__(Tensor([1, 46230],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 73365],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 55755],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([25600],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 58800],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 53760],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([43776],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([10336],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 46305],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 51840],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 66360],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([15488],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([20250],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 77760],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 6804, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([1, 55200],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 46800],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([25600],"int64"), 1, )
paddle.Tensor.__lt__(Tensor([1, 56430],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([38912],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([20736],"int64"), 1, )
paddle.Tensor.__lt__(Tensor([1, 75840],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([40128],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 72000],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([17000],"int32"), 11, )
paddle.Tensor.__lt__(Tensor([33600],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([19156],"int32"), 4, )
paddle.Tensor.__lt__(Tensor([49856],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([10, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.__lt__(Tensor([1, 69750],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 75375],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 60300],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 63000],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 68160],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([13770],"int32"), 11, )
paddle.Tensor.__lt__(Tensor([1, 55680],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 46920],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([20736],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 6380, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([10032],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([18764],"int32"), 11, )
paddle.Tensor.__lt__(Tensor([4, 22400, 1],"float32"), 0.35, )
paddle.Tensor.__lt__(Tensor([1, 68985],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 63135],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 48000],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 72360],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([61952],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([33696],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 72960],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([37632],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 45135],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 57285],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 40320],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([12240],"int32"), 4, )
paddle.Tensor.__lt__(Tensor([1, 61200],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([32832],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 69930],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([2, 11645, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([51168],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 61440],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 70080],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 88200],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 71415],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 76590],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 11109, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([1, 8400, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([56448],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([44352],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 77025],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([82944],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([30976],"int64"), 1, )
paddle.Tensor.__lt__(Tensor([10064],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([11552],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([48384],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([11480],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([11152],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 57960],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 51030],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 83070],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([10368],"int64"), 11, )
paddle.Tensor.__lt__(Tensor([1, 66150],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 49410],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 91980],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([31616],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 72270],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 63720],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 3, 90, 90],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([48640],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 59250],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([14392],"int32"), 4, )
paddle.Tensor.__lt__(Tensor([1, 68625],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([32000],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([12160],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([30400],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([1, 45540],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1124, 32],"float32"), Tensor([],"float32"), )
paddle.Tensor.__lt__(Tensor([1, 36000],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 77625],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([52640],"float32"), 0.35, )
paddle.Tensor.__lt__(Tensor([1, 64320],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 67335],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 86640],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 60390],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([14112],"int64"), 1, )
paddle.Tensor.__lt__(Tensor([12960],"int64"), 80, )
paddle.Tensor.__lt__(Tensor([10880],"int32"), 11, )
paddle.Tensor.__lt__(Tensor([1, 42780],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 70350],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 64680],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 59220],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([1, 74250],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([11840],"int64"), 80, )
paddle.Tensor.__matmul__(Tensor([2, 8, 256, 32],"float32"), Tensor([2, 8, 32, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 49, 49],"float32"), Tensor([10, 8, 49, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 25, 25],"float32"), Tensor([30, 8, 25, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 181, 32],"float32"), Tensor([2, 8, 32, 181],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 65, 65],"float32"), Tensor([10, 8, 65, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 5, 1024, 64],"float32"), Tensor([2, 5, 64, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 15],"float32"), )
paddle.Tensor.__matmul__(Tensor([9, 8, 89, 32],"float32"), Tensor([9, 8, 32, 89],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 8, 77, 32],"float32"), Tensor([4, 8, 32, 77],"float32"), )
paddle.Tensor.__matmul__(Tensor([8, 8, 33, 32],"float32"), Tensor([8, 8, 32, 33],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 385, 32],"float32"), Tensor([1, 8, 32, 385],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 37, 37],"float32"), Tensor([10, 8, 37, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 57, 57],"float32"), Tensor([10, 8, 57, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 161, 32],"float32"), Tensor([2, 8, 32, 161],"float32"), )
paddle.Tensor.__matmul__(Tensor([3, 8, 169, 169],"float32"), Tensor([3, 8, 169, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([3, 8, 105, 32],"float32"), Tensor([3, 8, 32, 105],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 25],"float32"), Tensor([5, 20, 25, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 65, 32],"float32"), Tensor([5, 8, 32, 65],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 20],"float32"), Tensor([5, 16, 20, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 8, 77, 77],"float32"), Tensor([4, 8, 77, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 16],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 32],"float32"), Tensor([1, 1, 32, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 137, 32],"float32"), Tensor([10, 8, 32, 137],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 113, 113],"float32"), Tensor([1, 8, 113, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 73, 73],"float32"), Tensor([10, 8, 73, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([80, 201],"float32"), Tensor([201, 499],"float32"), )
paddle.Tensor.__matmul__(Tensor([80, 768],"float32"), Tensor([768, 768],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 97, 97],"float32"), Tensor([1, 8, 97, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 24],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 22],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 145, 145],"float32"), Tensor([1, 8, 145, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 13, 13],"float32"), Tensor([30, 8, 13, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 1, 64],"float32"), Tensor([1, 8, 64, 1500],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 25, 32],"float32"), Tensor([10, 8, 32, 25],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 89, 89],"float32"), Tensor([10, 8, 89, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 21],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 24],"float32"), Tensor([5, 20, 24, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([6, 8, 45, 32],"float32"), Tensor([6, 8, 32, 45],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 45, 45],"float32"), Tensor([30, 8, 45, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 161, 161],"float32"), Tensor([2, 8, 161, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 57, 32],"float32"), Tensor([10, 8, 32, 57],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 53, 32],"float32"), Tensor([30, 8, 32, 53],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 768],"float32"), Tensor([768, 768],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 29, 32],"float32"), Tensor([30, 8, 32, 29],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 49, 32],"float32"), Tensor([10, 8, 32, 49],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 5, 1024, 32],"float32"), Tensor([1, 5, 32, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 3968, 32],"float32"), Tensor([1, 2, 32, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 6, 1, 64],"float32"), Tensor([1, 6, 64, 1500],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 19],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 37, 32],"float32"), Tensor([30, 8, 32, 37],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 129, 32],"float32"), Tensor([10, 8, 32, 129],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 25, 25],"float32"), Tensor([10, 8, 25, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 169, 169],"float32"), Tensor([1, 8, 169, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 13, 32],"float32"), Tensor([30, 8, 32, 13],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 17, 17],"float32"), Tensor([30, 8, 17, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 157, 157],"float32"), Tensor([1, 8, 157, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 5, 1024, 32],"float32"), Tensor([2, 5, 32, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 41, 32],"float32"), Tensor([10, 8, 32, 41],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 17],"float32"), Tensor([5, 20, 17, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 3968, 64],"float32"), Tensor([1, 2, 64, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([8, 8, 33, 33],"float32"), Tensor([8, 8, 33, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([8, 8, 121, 32],"float32"), Tensor([8, 8, 32, 121],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 145, 32],"float32"), Tensor([5, 8, 32, 145],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 1, 1500],"float32"), Tensor([1, 8, 1500, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 21, 32],"float32"), Tensor([30, 8, 32, 21],"float32"), )
paddle.Tensor.__matmul__(Tensor([64, 4, 49, 49],"float32"), Tensor([64, 1, 49, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 5, 1024, 64],"float32"), Tensor([1, 5, 64, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 25, 32],"float32"), Tensor([30, 8, 32, 25],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 41, 41],"float32"), Tensor([30, 8, 41, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 81, 32],"float32"), Tensor([10, 8, 32, 81],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 22],"float32"), Tensor([5, 20, 22, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 24],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 768],"float32"), Tensor([768, 1000],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 256, 256],"float32"), Tensor([1, 8, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 256, 64],"float32"), Tensor([1, 8, 64, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 256, 256],"float32"), Tensor([1, 8, 256, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 21],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 57, 32],"float32"), Tensor([30, 8, 32, 57],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 261, 261],"float32"), Tensor([1, 8, 261, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 18],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 768],"float32"), Tensor([768, 768],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 129, 129],"float32"), Tensor([2, 8, 129, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 181, 181],"float32"), Tensor([2, 8, 181, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 49, 49],"float32"), Tensor([30, 8, 49, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 5, 992, 64],"float32"), Tensor([1, 5, 64, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 33, 32],"float32"), Tensor([30, 8, 32, 33],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 19],"float32"), )
paddle.Tensor.__matmul__(Tensor([7, 8, 49, 32],"float32"), Tensor([7, 8, 32, 49],"float32"), )
paddle.Tensor.__matmul__(Tensor([8, 8, 113, 32],"float32"), Tensor([8, 8, 32, 113],"float32"), )
paddle.Tensor.__matmul__(Tensor([6, 8, 97, 32],"float32"), Tensor([6, 8, 32, 97],"float32"), )
paddle.Tensor.__matmul__(Tensor([13, 32],"float32"), Tensor([32, 25600],"float32"), )
paddle.Tensor.__matmul__(Tensor([9, 8, 89, 89],"float32"), Tensor([9, 8, 89, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 33, 33],"float32"), Tensor([30, 8, 33, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([6, 8, 57, 57],"float32"), Tensor([6, 8, 57, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 20],"float32"), Tensor([5, 20, 20, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 21],"float32"), Tensor([5, 16, 21, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([7, 8, 49, 49],"float32"), Tensor([7, 8, 49, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 33, 33],"float32"), Tensor([10, 8, 33, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 22],"float32"), Tensor([5, 16, 22, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 24],"float32"), Tensor([5, 16, 24, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 256, 64],"float32"), Tensor([2, 8, 64, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 89, 32],"float32"), Tensor([10, 8, 32, 89],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 29, 32],"float32"), Tensor([10, 8, 32, 29],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 20],"float32"), )
paddle.Tensor.__matmul__(Tensor([9, 8, 53, 32],"float32"), Tensor([9, 8, 32, 53],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 105, 32],"float32"), Tensor([10, 8, 32, 105],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 5, 992, 32],"float32"), Tensor([1, 5, 32, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([9, 8, 53, 53],"float32"), Tensor([9, 8, 53, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 17],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 49, 32],"float32"), Tensor([30, 8, 32, 49],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 20],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 121, 121],"float32"), Tensor([2, 8, 121, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 65, 32],"float32"), Tensor([30, 8, 32, 65],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 121, 32],"float32"), Tensor([2, 8, 32, 121],"float32"), )
paddle.Tensor.__matmul__(Tensor([3, 8, 169, 32],"float32"), Tensor([3, 8, 32, 169],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 33, 32],"float32"), Tensor([10, 8, 32, 33],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 8, 61, 61],"float32"), Tensor([4, 8, 61, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 61, 32],"float32"), Tensor([30, 8, 32, 61],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 85, 85],"float32"), Tensor([2, 8, 85, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 37, 32],"float32"), Tensor([10, 8, 32, 37],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 73, 32],"float32"), Tensor([10, 8, 32, 73],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 81, 81],"float32"), Tensor([2, 8, 81, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 229, 229],"float32"), Tensor([1, 8, 229, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 229, 32],"float32"), Tensor([1, 8, 32, 229],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 17, 32],"float32"), Tensor([30, 8, 32, 17],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 217, 32],"float32"), Tensor([1, 8, 32, 217],"float32"), )
paddle.Tensor.__matmul__(Tensor([6, 8, 97, 97],"float32"), Tensor([6, 8, 97, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 37, 37],"float32"), Tensor([30, 8, 37, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 41, 41],"float32"), Tensor([10, 8, 41, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 41, 32],"float32"), Tensor([30, 8, 32, 41],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 241, 32],"float32"), Tensor([1, 8, 32, 241],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 129, 32],"float32"), Tensor([2, 8, 32, 129],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 21, 32],"float32"), Tensor([10, 8, 32, 21],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 23],"float32"), Tensor([5, 20, 23, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 6, 1, 1500],"float32"), Tensor([1, 6, 1500, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 1024, 32],"float32"), Tensor([1, 8, 32, 1024],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 217, 217],"float32"), Tensor([1, 8, 217, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 97, 32],"float32"), Tensor([10, 8, 32, 97],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 23],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 81, 81],"float32"), Tensor([10, 8, 81, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 256, 32],"float32"), Tensor([1, 8, 32, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 241, 241],"float32"), Tensor([1, 8, 241, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 23],"float32"), )
paddle.Tensor.__matmul__(Tensor([3, 8, 105, 105],"float32"), Tensor([3, 8, 105, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 4096, 64],"float32"), Tensor([1, 2, 64, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 2, 4096, 32],"float32"), Tensor([2, 2, 32, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([6, 8, 57, 32],"float32"), Tensor([6, 8, 32, 57],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 65, 32],"float32"), Tensor([10, 8, 32, 65],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 9, 32],"float32"), Tensor([30, 8, 32, 9],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 29, 29],"float32"), Tensor([30, 8, 29, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 109, 109],"float32"), Tensor([1, 8, 109, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([6, 8, 45, 45],"float32"), Tensor([6, 8, 45, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 22],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 25],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 5, 4096, 32],"float32"), Tensor([1, 5, 32, 1024],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 21],"float32"), Tensor([5, 20, 21, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 8, 61, 32],"float32"), Tensor([4, 8, 32, 61],"float32"), )
paddle.Tensor.__matmul__(Tensor([7, 8, 153, 32],"float32"), Tensor([7, 8, 32, 153],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 23],"float32"), Tensor([5, 16, 23, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 21, 21],"float32"), Tensor([30, 8, 21, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 18],"float32"), Tensor([5, 20, 18, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 261, 32],"float32"), Tensor([1, 8, 32, 261],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 19],"float32"), Tensor([5, 20, 19, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 16],"float32"), Tensor([5, 20, 16, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 29, 29],"float32"), Tensor([10, 8, 29, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 45, 32],"float32"), Tensor([30, 8, 32, 45],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 65, 65],"float32"), Tensor([5, 8, 65, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 4096, 32],"float32"), Tensor([1, 2, 32, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 69, 32],"float32"), Tensor([1, 8, 32, 69],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 4],"float32"), Tensor([5, 12, 4, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 24],"float32"), Tensor([5, 12, 24, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 14],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 6],"float32"), Tensor([5, 12, 6, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 8],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 97, 32],"float32"), Tensor([1, 8, 32, 97],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 14],"float32"), Tensor([5, 12, 14, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 12],"float32"), Tensor([5, 16, 12, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 6],"float32"), Tensor([5, 8, 6, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 23],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 12],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 17],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 18],"float32"), Tensor([5, 12, 18, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 13, 32],"float32"), Tensor([10, 8, 32, 13],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 17],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 5],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 8, 25, 32],"float32"), Tensor([4, 8, 32, 25],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 7],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 16],"float32"), Tensor([5, 12, 16, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([512, 8],"float32"), Tensor([8, 1024],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 14],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 85, 32],"float32"), Tensor([2, 8, 32, 85],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 20],"float32"), Tensor([5, 12, 20, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 13],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 13],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 10],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 7],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 15],"float32"), Tensor([5, 16, 15, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 6],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 5],"float32"), Tensor([5, 8, 5, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 9],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 17],"float32"), Tensor([5, 6, 17, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 11],"float32"), Tensor([5, 8, 11, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 3, 64],"float32"), Tensor([5, 6, 64, 3],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 22],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 17, 32],"float32"), Tensor([2, 8, 32, 17],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 8, 5, 32],"float32"), Tensor([4, 8, 32, 5],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 21],"float32"), )
paddle.Tensor.__matmul__(Tensor([6, 8, 25, 25],"float32"), Tensor([6, 8, 25, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 11],"float32"), Tensor([5, 6, 11, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 12],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 20],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 21, 21],"float32"), Tensor([10, 8, 21, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 8],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 14],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 7],"float32"), Tensor([5, 6, 7, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 18],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 13],"float32"), Tensor([5, 16, 13, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([8, 8],"float32"), Tensor([8, 11008],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 145, 32],"float32"), Tensor([1, 8, 32, 145],"float32"), )
paddle.Tensor.__matmul__(Tensor([3, 8, 21, 21],"float32"), Tensor([3, 8, 21, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 9],"float32"), Tensor([5, 16, 9, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([11008, 8],"float32"), Tensor([8, 768],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 10],"float32"), Tensor([5, 12, 10, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 19],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 18],"float32"), Tensor([5, 16, 18, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 65, 65],"float32"), Tensor([1, 8, 65, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 11],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 15],"float32"), Tensor([5, 12, 15, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([8192, 3],"float32"), Tensor([3, 128],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 9, 9],"float32"), Tensor([30, 8, 9, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 17],"float32"), Tensor([5, 8, 17, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([4096, 3],"float32"), Tensor([3, 128],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 3, 3],"float32"), Tensor([5, 20, 3, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 11],"float32"), Tensor([5, 20, 11, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 11],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 18],"float32"), Tensor([5, 8, 18, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 157, 32],"float32"), Tensor([1, 8, 32, 157],"float32"), )
paddle.Tensor.__matmul__(Tensor([768, 8],"float32"), Tensor([8, 11008],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 23],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 6],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 24],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 4],"float32"), Tensor([5, 20, 4, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 13],"float32"), Tensor([5, 12, 13, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 18],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 10],"float32"), Tensor([5, 6, 10, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 12],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 6],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 10],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 5],"float32"), Tensor([5, 12, 5, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 7],"float32"), Tensor([5, 8, 7, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 19],"float32"), Tensor([5, 8, 19, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 3, 64],"float32"), Tensor([5, 20, 64, 3],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 9],"float32"), Tensor([5, 8, 9, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 17],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 8],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 17],"float32"), Tensor([5, 16, 17, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 22],"float32"), )
paddle.Tensor.__matmul__(Tensor([768, 8],"float32"), Tensor([8, 768],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 5, 5],"float32"), Tensor([30, 8, 5, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 18],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 10],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 22],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 19],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 17, 17],"float32"), Tensor([10, 8, 17, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 16],"float32"), Tensor([5, 16, 16, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 12],"float32"), Tensor([5, 12, 12, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 3, 64],"float32"), Tensor([5, 16, 64, 3],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 10],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 20],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 73, 73],"float32"), Tensor([1, 8, 73, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([3, 8, 9, 32],"float32"), Tensor([3, 8, 32, 9],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 13],"float32"), Tensor([5, 8, 13, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 13],"float32"), Tensor([5, 20, 13, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 17, 32],"float32"), Tensor([10, 8, 32, 17],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 17],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 19],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 6],"float32"), Tensor([5, 6, 6, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 5, 32],"float32"), Tensor([30, 8, 32, 5],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 9],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 65, 32],"float32"), Tensor([1, 8, 32, 65],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 41, 32],"float32"), Tensor([2, 8, 32, 41],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 109, 32],"float32"), Tensor([1, 8, 32, 109],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 21],"float32"), Tensor([5, 6, 21, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 9],"float32"), Tensor([5, 6, 9, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 12],"float32"), Tensor([5, 6, 12, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 17, 17],"float32"), Tensor([2, 8, 17, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 15],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 14],"float32"), Tensor([5, 6, 14, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 8],"float32"), Tensor([5, 16, 8, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 15],"float32"), Tensor([5, 6, 15, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 13],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 61, 32],"float32"), Tensor([1, 8, 32, 61],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 57, 57],"float32"), Tensor([2, 8, 57, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 5],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 4],"float32"), Tensor([5, 8, 4, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 8],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 5],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 14],"float32"), Tensor([5, 20, 14, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 9],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 6],"float32"), Tensor([5, 20, 6, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 16],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 69, 69],"float32"), Tensor([1, 8, 69, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 12],"float32"), Tensor([5, 8, 12, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 8],"float32"), Tensor([5, 6, 8, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 85, 85],"float32"), Tensor([1, 8, 85, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 13],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 12],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 23],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 3, 64],"float32"), Tensor([5, 8, 64, 3],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 14],"float32"), Tensor([5, 16, 14, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 20],"float32"), Tensor([5, 6, 20, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 13, 13],"float32"), Tensor([10, 8, 13, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 7],"float32"), )
paddle.Tensor.__matmul__(Tensor([11008, 8],"float32"), Tensor([8, 8],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 3, 3],"float32"), Tensor([5, 12, 3, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 3, 64],"float32"), Tensor([5, 12, 64, 3],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 8, 25, 25],"float32"), Tensor([4, 8, 25, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 12],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 22],"float32"), Tensor([5, 6, 22, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 5],"float32"), Tensor([5, 16, 5, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 15],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 23],"float32"), Tensor([5, 6, 23, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 7],"float32"), Tensor([5, 16, 7, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 8],"float32"), Tensor([5, 8, 8, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 13],"float32"), Tensor([5, 6, 13, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 19],"float32"), Tensor([5, 16, 19, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 8],"float32"), Tensor([5, 12, 8, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 8, 37, 32],"float32"), Tensor([4, 8, 32, 37],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 5],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 7],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 11],"float32"), Tensor([5, 16, 11, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 9, 9],"float32"), Tensor([10, 8, 9, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 113, 32],"float32"), Tensor([1, 8, 32, 113],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 15],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 10],"float32"), Tensor([5, 20, 10, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 21],"float32"), Tensor([5, 8, 21, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([3, 8, 21, 32],"float32"), Tensor([3, 8, 32, 21],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 6],"float32"), Tensor([5, 16, 6, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([6, 8, 25, 32],"float32"), Tensor([6, 8, 32, 25],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 20],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 12],"float32"), Tensor([5, 20, 12, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 14],"float32"), Tensor([5, 8, 14, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 19],"float32"), Tensor([5, 6, 19, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 13],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 14],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 5],"float32"), Tensor([5, 20, 5, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 7],"float32"), Tensor([5, 12, 7, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 41, 41],"float32"), Tensor([2, 8, 41, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 10],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 4],"float32"), Tensor([5, 16, 4, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 18],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 9, 32],"float32"), Tensor([10, 8, 32, 9],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 57, 32],"float32"), Tensor([2, 8, 32, 57],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 9],"float32"), Tensor([5, 12, 9, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 20],"float32"), Tensor([5, 8, 20, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 15],"float32"), Tensor([5, 20, 15, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 23],"float32"), Tensor([5, 12, 23, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 11],"float32"), Tensor([5, 12, 11, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 8, 13, 32],"float32"), Tensor([4, 8, 32, 13],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 15],"float32"), Tensor([5, 8, 15, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 9],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 8],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 10],"float32"), Tensor([5, 16, 10, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 73, 32],"float32"), Tensor([1, 8, 32, 73],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 16],"float32"), Tensor([5, 8, 16, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 768],"float32"), Tensor([768, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 11],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 14],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 5],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 85, 32],"float32"), Tensor([1, 8, 32, 85],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 15],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 11],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 3, 3],"float32"), Tensor([5, 16, 3, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 8, 37, 37],"float32"), Tensor([4, 8, 37, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 16],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 7],"float32"), Tensor([5, 20, 7, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 11],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 8, 13, 13],"float32"), Tensor([4, 8, 13, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 8],"float32"), Tensor([5, 20, 8, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 16],"float32"), Tensor([5, 6, 16, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 33, 33],"float32"), Tensor([5, 8, 33, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 33, 32],"float32"), Tensor([5, 8, 32, 33],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 9],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 64],"float32"), Tensor([5, 8, 64, 21],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 81, 32],"float32"), Tensor([2, 8, 32, 81],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 18],"float32"), Tensor([5, 6, 18, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 64],"float32"), Tensor([5, 16, 64, 6],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 7],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 9],"float32"), Tensor([5, 20, 9, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 61, 61],"float32"), Tensor([1, 8, 61, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 21],"float32"), Tensor([5, 12, 21, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 17],"float32"), Tensor([5, 12, 17, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 64],"float32"), Tensor([5, 6, 64, 6],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 23],"float32"), Tensor([5, 8, 23, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 22],"float32"), Tensor([5, 12, 22, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 8, 1, 22],"float32"), Tensor([5, 8, 22, 64],"float32"), )
paddle.Tensor.__mod__(Tensor([10, 1024],"int64"), Tensor([10, 1024],"int64"), )
paddle.Tensor.__mod__(Tensor([4, 300],"int64"), 4, )
paddle.Tensor.__mod__(Tensor([26, 64],"int64"), 64, )
paddle.Tensor.__mod__(Tensor([13, 2, 64],"int64"), 16, )
paddle.Tensor.__mul__(Tensor([1572, 80],"float32"), Tensor([1572, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2102, 80],"float32"), Tensor([2102, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 73, 49],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2307, 80],"float32"), Tensor([2307, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 8, 74, 74],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([16, 10, 1024],"float32"), Tensor([16, 10, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([3794, 80],"float32"), Tensor([3794, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1535, 80],"float32"), Tensor([1535, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2874, 80],"float32"), Tensor([2874, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([4395, 16],"float32"), Tensor([4395, 16],"float32"), )
paddle.Tensor.__mul__(Tensor([4457, 17],"float32"), Tensor([4457, 17],"float32"), )
paddle.Tensor.__mul__(Tensor([5, 8, 65, 65],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 118, 73],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([6, 8, 101, 97],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([3858, 80],"float32"), Tensor([3858, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1953, 80],"float32"), Tensor([1953, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([6, 1, 24576],"float32"), Tensor([6, 1, 24576],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 5, 7581],"float32"), Tensor([4, 5, 7581],"float32"), )
paddle.Tensor.__mul__(Tensor([2026, 80],"float32"), Tensor([2026, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 8, 4725],"float32"), Tensor([8, 8, 4725],"float32"), )
paddle.Tensor.__mul__(Tensor([5232, 80],"float32"), Tensor([5232, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 45, 3024],"float32"), Tensor([2, 45, 3024],"float32"), )
paddle.Tensor.__mul__(Tensor([70290],"float32"), Tensor([70290],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 59, 137],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([8, 8, 79, 113],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([5482, 80],"float32"), Tensor([5482, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 8, 167, 167],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([3, 8, 152, 169],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 392, 392],"float32"), Tensor([2, 392, 392],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 10, 75600],"float32"), Tensor([1, 10, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([5421, 80],"float32"), Tensor([5421, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([66240],"float32"), Tensor([66240],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 128, 128, 3, 3],"float32"), Tensor([1, 128, 128, 3, 3],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 17, 2116],"float32"), Tensor([4, 17, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1666, 80],"float32"), Tensor([1666, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2444, 80],"float32"), Tensor([2444, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([3855, 20],"float32"), Tensor([3855, 20],"float32"), )
paddle.Tensor.__mul__(Tensor([64, 26, 484],"float32"), Tensor([64, 26, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([96, 8, 16, 64],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 6150, 11],"float32"), Tensor([2, 6150, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2200, 80],"float32"), Tensor([2200, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([3295, 80],"float32"), Tensor([3295, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 97, 1024],"float32"), Tensor([2, 97, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([7, 8, 26, 153],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 104, 105],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 21, 6069],"float32"), Tensor([2, 21, 6069],"float32"), )
paddle.Tensor.__mul__(Tensor([2358, 80],"float32"), Tensor([2358, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2252, 80],"float32"), Tensor([2252, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([3528, 80],"float32"), Tensor([3528, 80],"float16"), )
paddle.Tensor.__mul__(Tensor([9, 8, 1024],"float32"), Tensor([9, 8, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 71, 105],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([16, 36, 441],"float32"), Tensor([16, 36, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 32, 1600],"float32"), Tensor([8, 32, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 8, 134, 169],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 30, 6150],"float32"), Tensor([2, 30, 6150],"float32"), )
paddle.Tensor.__mul__(Tensor([4966, 80],"float32"), Tensor([4966, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 73, 81],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1],"float32"), Tensor([6284, 25],"float32"), )
paddle.Tensor.__mul__(Tensor([6, 8, 88, 45],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([9, 8, 87, 89],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([3294, 80],"float32"), Tensor([3294, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 11, 61236],"float32"), Tensor([1, 11, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 8, 123, 123],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([3, 8, 30, 169],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4183, 30],"float32"), Tensor([4183, 30],"float32"), )
paddle.Tensor.__mul__(Tensor([2435, 80],"float32"), Tensor([2435, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 24, 676],"float32"), Tensor([8, 24, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 187, 1024],"float32"), Tensor([2, 187, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([3, 8, 33, 169],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([8, 8, 4116],"float32"), Tensor([8, 8, 4116],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 54, 2100],"float32"), Tensor([2, 54, 2100],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 24, 129],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 8, 133, 241],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 8, 163, 385],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([5012, 80],"float32"), Tensor([5012, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2862, 80],"float32"), Tensor([2862, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1076, 80],"float32"), Tensor([1076, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([3241, 80],"float32"), Tensor([3241, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 31, 2704],"float32"), Tensor([8, 31, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([6569, 13],"float32"), Tensor([6569, 13],"float32"), )
paddle.Tensor.__mul__(Tensor([3190, 80],"float32"), Tensor([3190, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 38, 3549],"float32"), Tensor([2, 38, 3549],"float32"), )
paddle.Tensor.__mul__(Tensor([2061, 99],"float32"), 100000000, )
paddle.Tensor.__mul__(Tensor([2, 54, 2100],"float32"), Tensor([2, 54, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 15, 2304],"float32"), Tensor([4, 15, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 24, 8400],"float32"), Tensor([4, 24, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 576, 14, 14],"float32"), Tensor([8, 576, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2265, 80],"float32"), Tensor([2265, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([55104],"float32"), Tensor([55104],"float32"), )
paddle.Tensor.__mul__(Tensor([30, 8, 41, 41],"float32"), 0.1767766952966369, )
paddle.Tensor.__mul__(Tensor([6156, 80],"float32"), Tensor([6156, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 8, 131, 77],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 8, 100, 81],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 34, 57],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 4, 27216],"float32"), Tensor([1, 4, 27216],"float32"), )
paddle.Tensor.__mul__(Tensor([4119, 80],"float32"), Tensor([4119, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2021, 80],"float32"), Tensor([2021, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1618, 80],"float32"), Tensor([1618, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 8, 159, 385],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 498, 8, 3, 4, 2],"float32"), Tensor([2, 498, 1, 1, 1, 2],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 3, 32, 32, 4],"float32"), Tensor([8, 3, 32, 32, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([5, 66, 1024],"float32"), Tensor([5, 66, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 4, 144, 176],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 192, 38, 38],"float32"), Tensor([2, 192, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 27, 1296],"float32"), Tensor([8, 27, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 8, 100, 157],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([8, 20, 1156],"float32"), Tensor([8, 20, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([3253, 24],"float32"), Tensor([3253, 24],"float32"), )
paddle.Tensor.__mul__(Tensor([30, 8, 88, 25],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([20570, 11],"float32"), Tensor([20570, 11],"float32"), )
paddle.Tensor.__mul__(Tensor([5992, 80],"float32"), Tensor([5992, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([9, 8, 83, 83],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 40656, 10],"float32"), Tensor([1, 40656, 10],"float32"), )
paddle.Tensor.__mul__(Tensor([2980, 80],"float32"), Tensor([2980, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([5, 8, 79, 79],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 38, 9261],"float32"), Tensor([2, 38, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 82, 4725],"float32"), Tensor([2, 82, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([3, 8, 80, 80],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([5212, 80],"float32"), Tensor([5212, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2384, 80],"float32"), Tensor([2384, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([849, 80],"float32"), Tensor([849, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([6502, 32, 1],"int32"), Tensor([6502, 32, 1],"int32"), )
paddle.Tensor.__mul__(Tensor([2460, 80],"float32"), Tensor([2460, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([3, 8, 34, 169],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([240064],"float32"), Tensor([240064],"float32"), )
paddle.Tensor.__mul__(Tensor([1273, 80],"float32"), Tensor([1273, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1410, 80],"float32"), Tensor([1410, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2141, 25],"float32"), Tensor([2141, 25],"float32"), )
paddle.Tensor.__mul__(Tensor([3, 73, 1024],"float32"), Tensor([3, 73, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([2064, 80],"float32"), Tensor([2064, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 8, 167, 261],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 92, 81],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([208692],"float32"), Tensor([208692],"float32"), )
paddle.Tensor.__mul__(Tensor([5436, 80],"float32"), Tensor([5436, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 7, 10164],"float32"), Tensor([8, 7, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([5, 8, 130, 145],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2767, 19],"float32"), Tensor([2767, 19],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 27, 6069],"float32"), Tensor([2, 27, 6069],"float32"), )
paddle.Tensor.__mul__(Tensor([7, 8, 85, 153],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 46, 46],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 91, 129],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([6, 8, 87, 57],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 8, 142, 229],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 3, 60, 60, 4],"float32"), Tensor([2, 3, 60, 60, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([30, 8, 21, 21],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4263, 13],"float32"), Tensor([4263, 13],"float32"), )
paddle.Tensor.__mul__(Tensor([5338, 80],"float32"), Tensor([5338, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([4668, 80],"float32"), Tensor([4668, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 114, 2100],"float32"), Tensor([2, 114, 2100],"float32"), )
paddle.Tensor.__mul__(Tensor([766, 80],"float32"), Tensor([766, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 32, 784],"float32"), Tensor([16, 32, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2620, 80],"float32"), Tensor([2620, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([4268, 80],"float32"), Tensor([4268, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2337, 80],"float32"), Tensor([2337, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 168, 1024],"float32"), Tensor([2, 168, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 45, 1024],"float32"), Tensor([10, 45, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([9, 17, 1024],"float32"), Tensor([9, 17, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([52560],"float32"), Tensor([52560],"float32"), )
paddle.Tensor.__mul__(Tensor([6, 8, 98, 57],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 31, 7581],"float32"), Tensor([2, 31, 7581],"float32"), )
paddle.Tensor.__mul__(Tensor([3064, 80],"float32"), Tensor([3064, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([6044, 80],"float32"), Tensor([6044, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 130, 181],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([16, 30, 784],"float32"), Tensor([16, 30, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 62, 784],"float32"), Tensor([4, 62, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2604, 80],"float32"), Tensor([2604, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1939, 80],"float32"), Tensor([1939, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 27, 484],"float32"), Tensor([16, 27, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([5810, 11],"float32"), Tensor([5810, 11],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 142, 129],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 8, 79, 207],"float32"), 32, )
paddle.Tensor.__mul__(Tensor([7, 8, 42, 49],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1852, 58],"float32"), Tensor([1852, 58],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 48, 49],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 53, 1024],"float32"), Tensor([2, 53, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 41, 2541],"float32"), Tensor([2, 41, 2541],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 25, 33600],"float32"), Tensor([1, 25, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([9, 8, 50, 89],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1144, 80],"float32"), Tensor([1144, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([6296, 32, 1],"int32"), Tensor([6296, 32, 1],"int32"), )
paddle.Tensor.__mul__(Tensor([16, 17, 2541],"float32"), Tensor([16, 17, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 124, 97],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([7, 7, 1024],"float32"), Tensor([7, 7, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 8, 19, 121],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1475, 80],"float32"), Tensor([1475, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 256, 24, 24],"float32"), Tensor([1, 256, 24, 24],"float32"), )
paddle.Tensor.__mul__(Tensor([1358, 80],"float32"), Tensor([1358, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 36, 10164],"float32"), Tensor([2, 36, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 52, 89],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4183, 30],"float32"), 1.0, )
paddle.Tensor.__mul__(Tensor([10, 8, 96, 105],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 8, 134, 129],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([5589, 80],"float32"), Tensor([5589, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 25, 1764],"float32"), Tensor([8, 25, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([64, 39, 121],"float32"), Tensor([64, 39, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([6, 8, 122, 97],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4, 8, 81, 81],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2648, 80],"float32"), Tensor([2648, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 25, 6069],"float32"), Tensor([4, 25, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([5, 8, 127, 127],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4, 16, 1024],"float32"), Tensor([4, 16, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([4824, 80],"float32"), Tensor([4824, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1156, 80],"float32"), Tensor([1156, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 8, 61, 241],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([5847, 80],"float32"), Tensor([5847, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 50, 3024],"float32"), Tensor([2, 50, 3024],"float32"), )
paddle.Tensor.__mul__(Tensor([2991, 38],"float32"), 1.0, )
paddle.Tensor.__mul__(Tensor([19184, 11],"float32"), Tensor([19184, 11],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 39, 169],"float32"), Tensor([16, 39, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 196, 1024],"float32"), Tensor([2, 196, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 8, 161, 161],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([64, 43, 36],"float32"), Tensor([64, 43, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([5, 8, 122, 145],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 31, 30324],"float32"), Tensor([1, 31, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([5096, 80],"float32"), Tensor([5096, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1661, 80],"float32"), Tensor([1661, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 18, 1444],"float32"), Tensor([8, 18, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([9, 8, 53, 89],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([8, 32, 900],"float32"), Tensor([8, 32, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([4224, 80],"float32"), Tensor([4224, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 96, 161],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 8, 202, 169],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 8, 94, 385],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([30, 8, 44, 44],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 122, 2541],"float32"), Tensor([2, 122, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 8, 126, 126],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 21504, 4],"float32"), Tensor([21504, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 45, 2100],"float32"), Tensor([2, 45, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([6, 8, 95, 45],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 5, 14336],"float32"), Tensor([2, 5, 14336],"float32"), )
paddle.Tensor.__mul__(Tensor([4093, 22],"float32"), Tensor([4093, 22],"float32"), )
paddle.Tensor.__mul__(Tensor([2414, 80],"float32"), Tensor([2414, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 58, 1024],"float32"), Tensor([2, 58, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([136818, 1],"float32"), Tensor([136818, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 8, 158, 85],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 31, 49],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([7, 8, 129, 129],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4, 12096, 4],"float32"), Tensor([4, 12096, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1219, 80],"float32"), Tensor([1219, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([30, 8, 29, 29],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([100, 1, 1, 38],"float32"), Tensor([100, 4, 38, 38],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 17, 400],"float32"), Tensor([16, 17, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([5, 8, 73, 73],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([5225, 80],"float32"), Tensor([5225, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1149, 80],"float32"), Tensor([1149, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 54, 1024],"float32"), Tensor([2, 54, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([2973, 80],"float32"), Tensor([2973, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 19, 3024],"float32"), Tensor([2, 19, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 32, 49, 32],"float32"), 0.1767766952966369, )
paddle.Tensor.__mul__(Tensor([1, 24, 21504],"float32"), Tensor([1, 24, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1107, 80],"float32"), Tensor([1107, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 384, 20, 20],"float32"), Tensor([4, 384, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([7196, 11],"float32"), Tensor([7196, 11],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 8, 164, 77],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2875, 80],"float32"), Tensor([2875, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([5, 8, 125, 125],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4710, 63],"float32"), 100000000, )
paddle.Tensor.__mul__(Tensor([1, 11, 70644],"float32"), Tensor([1, 11, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([3359, 54],"float32"), 6, )
paddle.Tensor.__mul__(Tensor([9, 8, 113, 113],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 39, 97],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 5, 33600],"float32"), Tensor([1, 5, 33600],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 77, 57],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([16, 13, 4725],"float32"), Tensor([16, 13, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 56, 7581],"float32"), Tensor([2, 56, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([6, 8, 123, 123],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1250, 80],"float32"), Tensor([1250, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1267, 80],"float32"), Tensor([1267, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2907, 80],"float32"), Tensor([2907, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1605, 80],"float32"), Tensor([1605, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 68, 37, 38],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__mul__(Tensor([2745, 80],"float32"), Tensor([2745, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([3, 8, 129, 169],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4024, 80],"float32"), Tensor([4024, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 52, 2304],"float32"), Tensor([8, 52, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([5372, 80],"float32"), Tensor([5372, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([30, 8, 55, 55],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4, 8, 62, 62],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 8, 108, 129],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 115, 89],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([13, 160, 160],"float32"), Tensor([13, 160, 160],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 59, 81],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4, 8, 122, 61],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2122, 24],"float32"), Tensor([2122, 24],"float32"), )
paddle.Tensor.__mul__(Tensor([3590, 18],"float32"), Tensor([3590, 18],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 8, 44436],"float32"), Tensor([1, 8, 44436],"float32"), )
paddle.Tensor.__mul__(Tensor([1215, 80],"float32"), Tensor([1215, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 177, 1024],"float32"), Tensor([2, 177, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 141, 141],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 8, 173, 173],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 49, 37],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([8, 8, 27, 121],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([64, 15, 256],"float32"), Tensor([64, 15, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([3, 63, 1024],"float32"), Tensor([3, 63, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([12, 4800],"float32"), Tensor([12, 4800],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 8, 89, 145],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4, 30, 2100],"float32"), Tensor([4, 30, 2100],"float32"), )
paddle.Tensor.__mul__(Tensor([3975, 80],"float32"), Tensor([3975, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([64, 28, 400],"float32"), Tensor([64, 28, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 78, 73],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 72, 1, 1],"float32"), Tensor([2, 72, 28, 28],"float32"), )
paddle.Tensor.__mul__(Tensor([2997, 80],"float32"), Tensor([2997, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1182, 80],"float32"), Tensor([1182, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 28, 1024],"float32"), Tensor([8, 28, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([57960],"float32"), Tensor([57960],"float32"), )
paddle.Tensor.__mul__(Tensor([222720],"float32"), Tensor([222720],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 12, 23, 23],"float16"), 0.1767766952966369, )
paddle.Tensor.__mul__(Tensor([8, 8, 122, 113],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([3746, 80],"float32"), Tensor([3746, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 11, 4116],"float32"), Tensor([2, 11, 4116],"float32"), )
paddle.Tensor.__mul__(Tensor([220968, 1],"float32"), Tensor([220968, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([7270, 32, 1],"int32"), Tensor([7270, 32, 1],"int32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 36, 181],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2936, 31],"float32"), Tensor([2936, 31],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 6, 10164],"float32"), Tensor([2, 6, 10164],"float32"), )
paddle.Tensor.__mul__(Tensor([5, 8, 83, 83],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([627, 80],"float32"), Tensor([627, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([5048, 80],"float32"), Tensor([5048, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([64, 25, 256],"float32"), Tensor([64, 25, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 89, 33],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 58, 4116],"float32"), Tensor([2, 58, 4116],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 90, 81],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([8, 8, 67, 67],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([726, 80],"float32"), Tensor([726, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([3, 151, 1024],"float32"), Tensor([3, 151, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 8, 96, 145],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([3890, 17],"float32"), Tensor([3890, 17],"float32"), )
paddle.Tensor.__mul__(Tensor([9, 8, 101, 53],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4550, 15],"float32"), Tensor([4550, 15],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 19, 44436],"float32"), Tensor([1, 19, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([4456, 80],"float32"), Tensor([4456, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 71, 41],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([7, 8, 33, 96],"float32"), 0.10206207261596575, )
paddle.Tensor.__mul__(Tensor([6095, 80],"float32"), Tensor([6095, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 8, 98, 98],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([5661, 80],"float32"), Tensor([5661, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2919, 80],"float32"), Tensor([2919, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 32, 129],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2, 8, 195, 195],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([3, 116, 1024],"float32"), Tensor([3, 116, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 5376, 4],"float32"), Tensor([5376, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 87, 81],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([2622, 35],"float32"), Tensor([2622, 35],"float32"), )
paddle.Tensor.__mul__(Tensor([125764, 1],"float32"), Tensor([125764, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 8, 125, 77],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1],"float32"), Tensor([8, 288, 20, 20],"float32"), )
paddle.Tensor.__mul__(Tensor([4875, 80],"float32"), Tensor([4875, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([5792, 80],"float32"), Tensor([5792, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 8, 163, 77],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 94, 129],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 2, 33600],"float32"), Tensor([1, 2, 33600],"float32"), )
paddle.Tensor.__mul__(Tensor([1316, 80],"float32"), Tensor([1316, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([5846, 80],"float32"), Tensor([5846, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([4158, 81],"float32"), Tensor([4158, 81],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 131, 81],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([64, 33, 121],"float32"), Tensor([64, 33, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([5220, 12],"float32"), Tensor([5220, 12],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 93, 129],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 73, 33],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1393, 80],"float32"), Tensor([1393, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([21924, 11],"float32"), Tensor([21924, 11],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 90, 90],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([13, 160, 160],"bool"), Tensor([13, 160, 1],"bool"), )
paddle.Tensor.__mul__(Tensor([10, 7, 1024],"float32"), Tensor([10, 7, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([1260, 80],"float32"), Tensor([1260, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 40, 10164],"float32"), Tensor([2, 40, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 112, 65],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([8, 8112],"float32"), Tensor([8, 8112],"float32"), )
paddle.Tensor.__mul__(Tensor([2247, 80],"float32"), Tensor([2247, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([4822, 80],"float32"), Tensor([4822, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 12, 4725],"float32"), Tensor([2, 12, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2708, 80],"float32"), Tensor([2708, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1792, 80],"float32"), Tensor([1792, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2262, 26],"float32"), Tensor([2262, 26],"float32"), )
paddle.Tensor.__mul__(Tensor([87, 5776],"float32"), Tensor([5776],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 20, 784],"float32"), Tensor([8, 20, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 48, 80, 80],"float32"), Tensor([2, 48, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([6134, 80],"float32"), Tensor([6134, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([32, 8, 60, 64],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([64, 24, 256],"float32"), Tensor([64, 24, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 78, 181],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4, 8, 118, 77],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1473, 80],"float32"), Tensor([1473, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([76800],"float32"), Tensor([76800],"float32"), )
paddle.Tensor.__mul__(Tensor([9, 8, 94, 94],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 53, 57],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([3077, 80],"float32"), Tensor([3077, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([853, 80],"float32"), Tensor([853, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 20, 2100],"float32"), Tensor([8, 20, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 92, 92],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 8, 54, 385],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([4136, 80],"float32"), Tensor([4136, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 23, 2704],"float32"), Tensor([16, 23, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([69930],"float32"), Tensor([69930],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 10, 4096],"float32"), Tensor([8, 10, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([7, 68, 1024],"float32"), Tensor([7, 68, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([5822, 80],"float32"), Tensor([5822, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([2, 8, 110, 85],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([10, 8, 74, 37],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([128, 8, 40, 15],"float16"), 0.25819888974716115, )
paddle.Tensor.__ne__(Tensor([278256],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([269355],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([182391],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([236334],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([4148, 30],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([245520],"float32"), -100, )
paddle.Tensor.__ne__(Tensor([220992],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([138120],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([249405],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([3702, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([222012],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([295443],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([193368],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([312324],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([378540],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([313038],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 800, 1073],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([7164, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([6976, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([283905],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([7175, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([330429],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([365211],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([199485],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([6880, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([208692],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([1, 496, 512],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([4843, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([5840, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([3345, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([272649],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([229152],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([4816, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([343728],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6084, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([268560],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([3702, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([388740],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([367059],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([191835],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([269355],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([4359, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([108, 49, 49],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([5657, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([4293, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([246051],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([365211],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([279279],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([233244],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([350178],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([4293, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([269586],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6117, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([220992],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([214848],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([1, 800, 639],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([398487],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([397467],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([340686],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([241221],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([5566, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([379050],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([237870],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([300080],"float32"), -100, )
paddle.Tensor.__ne__(Tensor([320739],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([309255],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([230175],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([414, 49, 49],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 800, 1198],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([261681],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([303858],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 800, 1037],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([180048],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([5876, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([5835, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([5818, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([235320],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([304368],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([286464],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([1, 800, 645],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([191835],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([6954, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([291555],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([5670, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([5566, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([4059, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([236313],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([7052, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([6410, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([217689],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([5084, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([290052],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([4, 392, 392],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([219453],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([176490],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([3411, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([5842, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([239382],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([322245],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([302832],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([313347],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([5060, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([4533, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([190296],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([1, 800, 533],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([262428],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([214107],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([177276],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([3831, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([248616],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([1, 800, 1081],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([6410, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([4533, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([388032],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6474, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([230202],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([1, 800, 1231],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([242991],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([251676],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([327360],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([3200, 20],"float32"), Tensor([3200, 20],"float32"), )
paddle.Tensor.__ne__(Tensor([340, 25, 25],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([6369, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([257796],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([16, 11109],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([313038],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([337620],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([153450],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([234804],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([339150],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([325113],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([330429],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([8162, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([229455],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([294624],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([5544, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([124032],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([5619, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([6502, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([1, 800, 1067],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([356541],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([7270, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([1, 800, 534],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([198249],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([150402],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([350178],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([303858],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([171888],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([220968],"float32"), -100, )
paddle.Tensor.__ne__(Tensor([251676],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([230202],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 800, 1197],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([354501],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([239382],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([1, 800, 1207],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([3399, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([7573, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([3795, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([6248, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([2, 512, 512],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([153450],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([278256],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([250656],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([171888],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([196944],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([5735, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([340176],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([122760],"float32"), -100, )
paddle.Tensor.__ne__(Tensor([329205],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([253728],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([5800, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([6098, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([272649],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([347820],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([6098, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([6950, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([211038],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([359100],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([375984],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([3438, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([5825, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([293397],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([291555],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([379050],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([306900],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([6291, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([237360],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([16, 7581],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([205923],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([343728],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([220968],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([244800],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([7780, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([306900],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([48, 144, 144],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([310992],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([272800],"float32"), -100, )
paddle.Tensor.__ne__(Tensor([244800],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([296700],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([319200],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([199485],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([233244],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([198249],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([188256],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([196944],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([293397],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([6502, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([252195],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([4, 157920, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([321759],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([229455],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([110484],"float32"), -100, )
paddle.Tensor.__ne__(Tensor([219453],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([7015, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([180048],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6976, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([124032, 1],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([208197],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([5514, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([4554, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([283905],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([7052, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([208197],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([6911, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([210056],"float32"), -100, )
paddle.Tensor.__ne__(Tensor([211038],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([3699, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([6391, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([249405],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([7164, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([241221],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([440433],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([7290, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([295647],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([331722],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([105840],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([190296],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([236313],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([64, 49, 49],"float16"), 0, )
paddle.Tensor.__ne__(Tensor([7780, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([237870],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([246051],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([286977],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([158580],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([4554, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([191301],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([5583, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([279300],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([103320],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([1, 512, 512],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([331452],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([333018],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([3438, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([262194],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([3783, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([2, 392, 392],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([5807, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([7290, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([5488, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([6960, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([6544, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([255780],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([1, 800, 1158],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([245823],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([177276],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([214272, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([311535],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([276210],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([230175],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([218240],"float32"), -100, )
paddle.Tensor.__ne__(Tensor([329205],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([6255, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([242991],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([264978],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([451143],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([3783, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([293622],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([378540],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 800, 1211],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([227124],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([190960],"float32"), -100, )
paddle.Tensor.__ne__(Tensor([185691],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 800, 1150],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([333018],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([300762],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([16, 9261],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([429660],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([217689],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([264978],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([356541],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([285444],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([220968],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([321759],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([451143],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([241731],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([3534, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([200022],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([7065, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([6122, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([5976, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([283167],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6880, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([6870, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([6935, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([3831, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([368280],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([346086],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([7573, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([397467],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([188256],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 800, 1234],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([6753, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([205923],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([202572],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([168795],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([3534, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([6351, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([295443],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([314595],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([440433],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([234804],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([322272],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([4843, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([398487],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([217413],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([105840],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([196416],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([6117, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([5976, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([229965],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6474, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([408177],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([200022],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([296700],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([293622],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([262428],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([7710, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([330088],"float32"), -100, )
paddle.Tensor.__ne__(Tensor([4458, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([267030],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([214107],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([1, 800, 640],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 800, 896],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([309255],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([331722],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([7200, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([4458, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([166533],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([5548, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([369105],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([375984],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([5842, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([158580],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([261888],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([6870, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([5953, 32],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([1, 800, 1203],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([212784],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([269586],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([335568],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([369105],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([192, 49, 49],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([6929, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([331452],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([286464],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([301302],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([193368],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([229965],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([176490],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([2, 512, 512, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([272118],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([302832],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([7270, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([214830],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([3699, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([312324],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([261681],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6296, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([279300],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([7183, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([260865],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([354501],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([4816, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([247086],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([320739],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([6992, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([6960, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([4359, 32, 1],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([48, 49, 49],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([278562],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([16, 8400],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([290052],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([64, 49, 49],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([285444],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([339150],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([16, 144, 144],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([194157],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([5060, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([7175, 32],"int32"), -100, )
paddle.Tensor.__ne__(Tensor([5824, 32],"float32"), 0.0, )
paddle.Tensor.__neg__(Tensor([1, 75600, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 4116, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([2280, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([401899],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 304, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 9261, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 346, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 63, 8, 48],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 304, 3, 153],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 377, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([64, 1936, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([16, 5376, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4800, 101],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 6069, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 56784, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 61236, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([10, 200, 300],"int64"), )
paddle.Tensor.__neg__(Tensor([1, 52500, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([10, 200, 300],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 346, 3, 153],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 12096, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([380086],"float32"), )
paddle.Tensor.__neg__(Tensor([128, 1000],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 9261, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([228595, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([406580],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 2304, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([16, 12096, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 396, 7, 55],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 304, 7, 55],"float16"), )
paddle.Tensor.__neg__(Tensor([50000, 2],"float64"), )
paddle.Tensor.__neg__(Tensor([3040, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([4, 346, 7, 55],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 377, 7, 55],"float16"), )
paddle.Tensor.__neg__(Tensor([64, 1024, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([16, 10164, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 2304, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 7581, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([1912, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([16, 8400, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([16, 6804, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([384, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([3064, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([16, 3549, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([144, 1000],"float32"), )
paddle.Tensor.__neg__(Tensor([403187],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 65856, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 6400, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([256, 1000],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 396, 3, 153],"float16"), )
paddle.Tensor.__neg__(Tensor([20000, 2, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 10164, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 11109, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([16, 10164, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([154, 1000],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 7581, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 377, 3, 153],"float16"), )
paddle.Tensor.__neg__(Tensor([256, 1000],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 11109, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 6069, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 302, 8, 48],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([8, 12096, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2952, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([8, 11109, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 11109, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([512, 1000],"float32"), )
paddle.Tensor.__neg__(Tensor([640, 1000],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 1600, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([64, 1600, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 1296, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 8500, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 6804, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 7056, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([3072, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([512, 1000],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 16, 256, 32],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 10164, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([16, 8400, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 7581, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 6804, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 8400, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([16, 4725, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 70644, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 6804, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 3549, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([10, 200, 300],"int32"), )
paddle.Tensor.__neg__(Tensor([2, 107136, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([640, 1000],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 396, 4, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 2048, 8, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 2048, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 7744, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 4116, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([128, 1000],"float16"), )
paddle.Tensor.__neg__(Tensor([2816, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([4, 396, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 8, 48],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([8, 8400, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 7581, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 1936, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 9261, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([16, 4725, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 5376, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([16, 12096, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 9261, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([64, 1024, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([384, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([64, 1296, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([154, 1000],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 400, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8550, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 110, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 3024, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 276, 45],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 1000],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 3024, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 2304, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 152, 2, 16],"float16"), )
paddle.Tensor.__neg__(Tensor([2400, 8],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 172, 8, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 182, 2, 16],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 8400, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 576, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 11109, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 100, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 132, 2, 16],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 1764, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([20000],"float32"), )
paddle.Tensor.__neg__(Tensor([3066, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 5776, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 1600, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 5776, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 7744, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([6380, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 1000],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 182, 1, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 164, 8, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([64, 1000],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 1444, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 2541, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([16, 576, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 4116, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 3600, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 37632],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 7056, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 27216, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 5184, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 115, 2, 16],"float16"), )
paddle.Tensor.__neg__(Tensor([2591, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 2541, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 8400, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 9261, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 3136, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 33600, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 5376, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 128, 128],"int64"), )
paddle.Tensor.__neg__(Tensor([2, 10164, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 198, 8, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 5184, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 107, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 5, 16, 128],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 2541, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 3549, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 81, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([64, 100, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 3, 256, 32],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 6400, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([128, 102],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 3549, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([6, 5, 16, 128],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 484, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 132, 3, 14],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 8500, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([10, 1024],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 37632],"float32"), )
paddle.Tensor.__neg__(Tensor([4506, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 112, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 132, 2, 14],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 5776, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 144, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 44436, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 256, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 8, 64, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 2100, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 484, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16384],"float32"), )
paddle.Tensor.__neg__(Tensor([124, 102],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 79, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 1936, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 2541, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 1936, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 32, 6, 64],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 6069, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 132, 1, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 7581, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 5376, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 156, 3, 14],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 21504, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 4096, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1000, 2, 2, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 127, 2, 16],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 1, 272, 49],"float32"), )
paddle.Tensor.__neg__(Tensor([10000],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 30324, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([128, 159],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 3024, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 2100, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 400, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 10, 16, 128],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 132, 2, 22],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 148, 3, 14],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 164, 2, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 172, 2, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 12096, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 156, 2, 22],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 37044, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 4725, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 8, 8],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([16, 2541, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 7744, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 3136, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 3024, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 91, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 2541, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 2100, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 3549, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 144, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 2304, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 3, 256, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 148, 2, 16],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 182, 3, 14],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 3549, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2048, 2, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 80, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 346, 1, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([3240, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 148, 2, 22],"float16"), )
paddle.Tensor.__neg__(Tensor([256, 102],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 5376, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 148, 8, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([64, 121, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 7581, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 256, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 2704, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([35968],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 304, 1, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 147, 2, 16],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 74, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([1833, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 1600, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 4116, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 2100, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 156, 2, 14],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 182, 2, 22],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 9261, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 11109, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 24276, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 1296, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 7056, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([154, 102],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 3024, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 324, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 2704, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 5376, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 156, 2, 16],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 48384, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 2, 8],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([6, 1, 16, 128],"float32"), )
paddle.Tensor.__neg__(Tensor([1763, 7],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 6069, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 12096, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 288, 1, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 3600, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 6400, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 148, 2, 14],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 6804, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 4116, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([64, 121, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 156, 1, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 40656, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 10164, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 6804, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 2, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 4624, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 111, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 5184, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 128, 256],"int64"), )
paddle.Tensor.__neg__(Tensor([4, 182, 2, 14],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 6069, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 4116, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4101, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 4725, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([20000, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([5, 10, 8, 48],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 8400, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 81, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([3801, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 2100, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 5, 16, 128],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 324, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 82, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 302, 1, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 109, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 2048, 1, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([64, 400, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([4, 148, 1, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 4725, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 198, 2, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([16, 3024, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2654, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 8, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([8, 6069, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 576, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 4725, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([752, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([475, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([616, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([288, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([479, 9],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 196, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([400, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([462, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([1155, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([366, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([350, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 81, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([469, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 289, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 20],"float32"), )
paddle.Tensor.__neg__(Tensor([405, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 144, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([8, 441, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 36, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([590, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([401, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([52, 7, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([384, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 4096, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 400, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([263, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([564, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([1000, 2, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([556, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([35, 2, 1, 16],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 441, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([4, 5, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([1082, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([710, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([293, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([536, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 1936, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1388, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([351, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 1764, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 3600, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([16, 102],"float32"), )
paddle.Tensor.__neg__(Tensor([14, 10, 4, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([870, 10],"float32"), )
paddle.Tensor.__neg__(Tensor([723, 9],"float32"), )
paddle.Tensor.__neg__(Tensor([1078, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([617, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([377, 7],"float32"), )
paddle.Tensor.__neg__(Tensor([596, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([373, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([2419, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([450, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([558, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2704, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1041, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([385, 7],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 52, 1, 32],"float16"), )
paddle.Tensor.__neg__(Tensor([827, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 36, 2],"float16"), )
paddle.Tensor.__neg__(Tensor([2, 1444, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([32, 102],"float32"), )
paddle.Tensor.__neg__(Tensor([900, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2048],"float32"), )
paddle.Tensor.__neg__(Tensor([492, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([540, 7],"float32"), )
paddle.Tensor.__neg__(Tensor([539, 8],"float32"), )
paddle.Tensor.__neg__(Tensor([518, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([60, 102],"float32"), )
paddle.Tensor.__neg__(Tensor([64, 64, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([367, 9],"float32"), )
paddle.Tensor.__neg__(Tensor([600, 4],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 1936, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([77, 102],"float32"), )
paddle.Tensor.__neg__(Tensor([1119, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([298, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([414, 5],"float32"), )
paddle.Tensor.__neg__(Tensor([1662, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([2, 676, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1296, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([13, 2, 4, 16, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([434, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([520, 10],"float32"), )
paddle.Tensor.__neg__(Tensor([2112],"float32"), )
paddle.Tensor.__neg__(Tensor([600, 16],"float32"), )
paddle.Tensor.__neg__(Tensor([233, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([562, 5],"float32"), )
paddle.Tensor.__or__(Tensor([2, 26, 9261],"bool"), Tensor([2, 26, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([1, 7, 56784],"bool"), Tensor([1, 7, 56784],"bool"), )
paddle.Tensor.__or__(Tensor([2, 58, 2541],"bool"), Tensor([2, 58, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 38, 4725],"bool"), Tensor([2, 38, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 25, 8400],"bool"), Tensor([2, 25, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([2, 17, 6804],"bool"), Tensor([2, 17, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 23, 5376],"bool"), Tensor([2, 23, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([1, 12, 30324],"bool"), Tensor([1, 12, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([2, 80, 2100],"bool"), Tensor([2, 80, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 30, 2100],"bool"), Tensor([2, 30, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 45, 2541],"bool"), Tensor([2, 45, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 8, 4725],"bool"), Tensor([2, 8, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 41, 5376],"bool"), Tensor([2, 41, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 6, 10164],"bool"), Tensor([2, 6, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([1, 8, 61236],"bool"), Tensor([1, 8, 61236],"bool"), )
paddle.Tensor.__or__(Tensor([2, 13, 6804],"bool"), Tensor([2, 13, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 29, 2541],"bool"), Tensor([2, 29, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 26, 3024],"bool"), Tensor([2, 26, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([1, 17, 27216],"bool"), Tensor([1, 17, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 46, 3024],"bool"), Tensor([2, 46, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 16, 3549],"bool"), Tensor([2, 16, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 12, 3024],"bool"), Tensor([2, 12, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 55, 3549],"bool"), Tensor([2, 55, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 25, 3549],"bool"), Tensor([2, 25, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([1, 6, 52500],"bool"), Tensor([1, 6, 52500],"bool"), )
paddle.Tensor.__or__(Tensor([2, 18, 3024],"bool"), Tensor([2, 18, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 6, 5376],"bool"), Tensor([2, 6, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 18, 6069],"bool"), Tensor([2, 18, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 96, 2100],"bool"), Tensor([2, 96, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 27, 3024],"bool"), Tensor([2, 27, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 9, 7581],"bool"), Tensor([2, 9, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([2, 11, 9261],"bool"), Tensor([2, 11, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([2, 70, 3024],"bool"), Tensor([2, 70, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 27, 7581],"bool"), Tensor([2, 27, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([2, 9, 3024],"bool"), Tensor([2, 9, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 19, 7581],"bool"), Tensor([2, 19, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([1, 22, 21504],"bool"), Tensor([1, 22, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([2, 12, 10164],"bool"), Tensor([2, 12, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([2, 10, 6804],"bool"), Tensor([2, 10, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 11, 7581],"bool"), Tensor([2, 11, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([2, 13, 5376],"bool"), Tensor([2, 13, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 23, 2541],"bool"), Tensor([2, 23, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 114, 2100],"bool"), Tensor([2, 114, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([1, 3, 75600],"bool"), Tensor([1, 3, 75600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 6, 24276],"bool"), Tensor([1, 6, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([2, 9, 5376],"bool"), Tensor([2, 9, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 46, 5376],"bool"), Tensor([2, 46, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 23, 8400],"bool"), Tensor([2, 23, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([1, 2, 44436],"bool"), Tensor([1, 2, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([1, 9, 52500],"bool"), Tensor([1, 9, 52500],"bool"), )
paddle.Tensor.__or__(Tensor([2, 48, 2100],"bool"), Tensor([2, 48, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([1, 7, 33600],"bool"), Tensor([1, 7, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([2, 72, 3024],"bool"), Tensor([2, 72, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 23, 4725],"bool"), Tensor([2, 23, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([1, 7, 21504],"bool"), Tensor([1, 7, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([2, 76, 2541],"bool"), Tensor([2, 76, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([1, 2, 48384],"bool"), Tensor([1, 2, 48384],"bool"), )
paddle.Tensor.__or__(Tensor([1, 12, 40656],"bool"), Tensor([1, 12, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([2, 71, 2100],"bool"), Tensor([2, 71, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 18, 5376],"bool"), Tensor([2, 18, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 31, 7581],"bool"), Tensor([2, 31, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([2, 31, 3024],"bool"), Tensor([2, 31, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 60, 4116],"bool"), Tensor([2, 60, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 4, 11109],"bool"), Tensor([2, 4, 11109],"bool"), )
paddle.Tensor.__or__(Tensor([1, 9, 48384],"bool"), Tensor([1, 9, 48384],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 75600],"bool"), Tensor([1, 1, 75600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 5, 24276],"bool"), Tensor([1, 5, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([2, 15, 3024],"bool"), Tensor([2, 15, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([1, 11, 21504],"bool"), Tensor([1, 11, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([2, 54, 3549],"bool"), Tensor([2, 54, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 30, 7581],"bool"), Tensor([2, 30, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([2, 32, 3024],"bool"), Tensor([2, 32, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 32, 3549],"bool"), Tensor([2, 32, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 37, 4725],"bool"), Tensor([2, 37, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 16, 4116],"bool"), Tensor([2, 16, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 9, 12096],"bool"), Tensor([2, 9, 12096],"bool"), )
paddle.Tensor.__or__(Tensor([1, 3, 70644],"bool"), Tensor([1, 3, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([1, 5, 44436],"bool"), Tensor([1, 5, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([1, 13, 33600],"bool"), Tensor([1, 13, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([2, 17, 10164],"bool"), Tensor([2, 17, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([1, 14, 27216],"bool"), Tensor([1, 14, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 20, 4725],"bool"), Tensor([2, 20, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 108, 2100],"bool"), Tensor([2, 108, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 20, 10164],"bool"), Tensor([2, 20, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([2, 14, 8400],"bool"), Tensor([2, 14, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([2, 35, 5376],"bool"), Tensor([2, 35, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 23, 4116],"bool"), Tensor([2, 23, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 56, 2100],"bool"), Tensor([2, 56, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 33, 3549],"bool"), Tensor([2, 33, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 37, 2541],"bool"), Tensor([2, 37, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 50, 2541],"bool"), Tensor([2, 50, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 19, 11109],"bool"), Tensor([2, 19, 11109],"bool"), )
paddle.Tensor.__or__(Tensor([2, 13, 3024],"bool"), Tensor([2, 13, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([1, 12, 24276],"bool"), Tensor([1, 12, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([2, 30, 6069],"bool"), Tensor([2, 30, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 54, 2541],"bool"), Tensor([2, 54, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 37, 3549],"bool"), Tensor([2, 37, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 59, 2100],"bool"), Tensor([2, 59, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 66, 3549],"bool"), Tensor([2, 66, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 37, 6069],"bool"), Tensor([2, 37, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 31, 3549],"bool"), Tensor([2, 31, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 49, 4725],"bool"), Tensor([2, 49, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 26, 8400],"bool"), Tensor([2, 26, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([2, 32, 4116],"bool"), Tensor([2, 32, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 29, 6804],"bool"), Tensor([2, 29, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 10, 11109],"bool"), Tensor([2, 10, 11109],"bool"), )
paddle.Tensor.__or__(Tensor([2, 32, 2541],"bool"), Tensor([2, 32, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 31, 2541],"bool"), Tensor([2, 31, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([1, 5, 27216],"bool"), Tensor([1, 5, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 27, 6804],"bool"), Tensor([2, 27, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([1, 7, 65856],"bool"), Tensor([1, 7, 65856],"bool"), )
paddle.Tensor.__or__(Tensor([1, 17, 21504],"bool"), Tensor([1, 17, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([1, 16, 27216],"bool"), Tensor([1, 16, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 11, 6804],"bool"), Tensor([2, 11, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 9, 3549],"bool"), Tensor([2, 9, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 22, 10164],"bool"), Tensor([2, 22, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([2, 16, 9261],"bool"), Tensor([2, 16, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([1, 3, 48384],"bool"), Tensor([1, 3, 48384],"bool"), )
paddle.Tensor.__or__(Tensor([2, 47, 3549],"bool"), Tensor([2, 47, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([1, 6, 37044],"bool"), Tensor([1, 6, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([2, 30, 5376],"bool"), Tensor([2, 30, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 7, 10164],"bool"), Tensor([2, 7, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([2, 33, 6069],"bool"), Tensor([2, 33, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 42, 5376],"bool"), Tensor([2, 42, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 56, 4116],"bool"), Tensor([2, 56, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 51, 4116],"bool"), Tensor([2, 51, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 34, 6069],"bool"), Tensor([2, 34, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 13, 9261],"bool"), Tensor([2, 13, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([2, 26, 4725],"bool"), Tensor([2, 26, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 13, 4116],"bool"), Tensor([2, 13, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 45, 3024],"bool"), Tensor([2, 45, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 29, 6069],"bool"), Tensor([2, 29, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 18, 7581],"bool"), Tensor([2, 18, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([1, 4, 37044],"bool"), Tensor([1, 4, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([1, 7, 52500],"bool"), Tensor([1, 7, 52500],"bool"), )
paddle.Tensor.__or__(Tensor([2, 65, 2100],"bool"), Tensor([2, 65, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 66, 3024],"bool"), Tensor([2, 66, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([1, 3, 27216],"bool"), Tensor([1, 3, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 20, 8400],"bool"), Tensor([2, 20, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([2, 30, 4116],"bool"), Tensor([2, 30, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 38, 3024],"bool"), Tensor([2, 38, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 51, 3549],"bool"), Tensor([2, 51, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([1, 6, 70644],"bool"), Tensor([1, 6, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([2, 59, 4116],"bool"), Tensor([2, 59, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 40, 3024],"bool"), Tensor([2, 40, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 53, 2100],"bool"), Tensor([2, 53, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 12, 9261],"bool"), Tensor([2, 12, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([1, 14, 24276],"bool"), Tensor([1, 14, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([2, 76, 3024],"bool"), Tensor([2, 76, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 28, 4116],"bool"), Tensor([2, 28, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 18, 9261],"bool"), Tensor([2, 18, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([2, 65, 2541],"bool"), Tensor([2, 65, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 52, 4725],"bool"), Tensor([2, 52, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 8, 10164],"bool"), Tensor([2, 8, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([2, 51, 2541],"bool"), Tensor([2, 51, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 38, 5376],"bool"), Tensor([2, 38, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 36, 2541],"bool"), Tensor([2, 36, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([1, 9, 40656],"bool"), Tensor([1, 9, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([2, 16, 8400],"bool"), Tensor([2, 16, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([2, 43, 2100],"bool"), Tensor([2, 43, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 43, 5376],"bool"), Tensor([2, 43, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 14, 10164],"bool"), Tensor([2, 14, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([2, 53, 4116],"bool"), Tensor([2, 53, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 10, 4725],"bool"), Tensor([2, 10, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 13, 6069],"bool"), Tensor([2, 13, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 49, 3024],"bool"), Tensor([2, 49, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 26, 4116],"bool"), Tensor([2, 26, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 35, 3549],"bool"), Tensor([2, 35, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 24, 8400],"bool"), Tensor([2, 24, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([2, 29, 4116],"bool"), Tensor([2, 29, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 44, 3024],"bool"), Tensor([2, 44, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 14, 4725],"bool"), Tensor([2, 14, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([1, 3, 30324],"bool"), Tensor([1, 3, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 52500],"bool"), Tensor([1, 1, 52500],"bool"), )
paddle.Tensor.__or__(Tensor([2, 45, 3549],"bool"), Tensor([2, 45, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 46, 4116],"bool"), Tensor([2, 46, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 28, 5376],"bool"), Tensor([2, 28, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([1, 3, 21504],"bool"), Tensor([1, 3, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([2, 10, 3024],"bool"), Tensor([2, 10, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 24, 10164],"bool"), Tensor([2, 24, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([1, 9, 30324],"bool"), Tensor([1, 9, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([1, 18, 27216],"bool"), Tensor([1, 18, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 63, 2541],"bool"), Tensor([2, 63, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([1, 2, 52500],"bool"), Tensor([1, 2, 52500],"bool"), )
paddle.Tensor.__or__(Tensor([2, 10, 3549],"bool"), Tensor([2, 10, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 14, 6804],"bool"), Tensor([2, 14, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 25, 2541],"bool"), Tensor([2, 25, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 61, 3024],"bool"), Tensor([2, 61, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 27, 8400],"bool"), Tensor([2, 27, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([2, 24, 9261],"bool"), Tensor([2, 24, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([2, 28, 6804],"bool"), Tensor([2, 28, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([1, 9, 21504],"bool"), Tensor([1, 9, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([1, 4, 33600],"bool"), Tensor([1, 4, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([2, 23, 3024],"bool"), Tensor([2, 23, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 14, 2541],"bool"), Tensor([2, 14, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 45, 4725],"bool"), Tensor([2, 45, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([1, 19, 21504],"bool"), Tensor([1, 19, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([2, 43, 4725],"bool"), Tensor([2, 43, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 12, 2541],"bool"), Tensor([2, 12, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 70644],"bool"), Tensor([1, 1, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([2, 35, 3024],"bool"), Tensor([2, 35, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 41, 4116],"bool"), Tensor([2, 41, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 65856],"bool"), Tensor([1, 1, 65856],"bool"), )
paddle.Tensor.__or__(Tensor([2, 39, 4116],"bool"), Tensor([2, 39, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 13, 12096],"bool"), Tensor([2, 13, 12096],"bool"), )
paddle.Tensor.__or__(Tensor([2, 14, 12096],"bool"), Tensor([2, 14, 12096],"bool"), )
paddle.Tensor.__or__(Tensor([1, 5, 70644],"bool"), Tensor([1, 5, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([2, 79, 2100],"bool"), Tensor([2, 79, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 16, 6069],"bool"), Tensor([2, 16, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([1, 2, 70644],"bool"), Tensor([1, 2, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([2, 24, 6804],"bool"), Tensor([2, 24, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([1, 17, 24276],"bool"), Tensor([1, 17, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([2, 16, 2541],"bool"), Tensor([2, 16, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 34, 2541],"bool"), Tensor([2, 34, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([1, 7, 48384],"bool"), Tensor([1, 7, 48384],"bool"), )
paddle.Tensor.__or__(Tensor([2, 41, 3024],"bool"), Tensor([2, 41, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 20, 3024],"bool"), Tensor([2, 20, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 6, 6069],"bool"), Tensor([2, 6, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 39, 5376],"bool"), Tensor([2, 39, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 11, 4725],"bool"), Tensor([2, 11, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 22, 2541],"bool"), Tensor([2, 22, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([1, 19, 24276],"bool"), Tensor([1, 19, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([2, 35, 2541],"bool"), Tensor([2, 35, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 26, 7581],"bool"), Tensor([2, 26, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([2, 54, 4116],"bool"), Tensor([2, 54, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 12, 6069],"bool"), Tensor([2, 12, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 16, 11109],"bool"), Tensor([2, 16, 11109],"bool"), )
paddle.Tensor.__or__(Tensor([1, 3, 65856],"bool"), Tensor([1, 3, 65856],"bool"), )
paddle.Tensor.__or__(Tensor([2, 31, 4116],"bool"), Tensor([2, 31, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 87, 2541],"bool"), Tensor([2, 87, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 27, 4116],"bool"), Tensor([2, 27, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 20, 4116],"bool"), Tensor([2, 20, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([1, 11, 27216],"bool"), Tensor([1, 11, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 32, 2100],"bool"), Tensor([2, 32, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 31, 4725],"bool"), Tensor([2, 31, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 19, 2100],"bool"), Tensor([2, 19, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 64, 2541],"bool"), Tensor([2, 64, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 17, 9261],"bool"), Tensor([2, 17, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([2, 15, 11109],"bool"), Tensor([2, 15, 11109],"bool"), )
paddle.Tensor.__or__(Tensor([2, 45, 5376],"bool"), Tensor([2, 45, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([1, 5, 61236],"bool"), Tensor([1, 5, 61236],"bool"), )
paddle.Tensor.__or__(Tensor([2, 5, 12096],"bool"), Tensor([2, 5, 12096],"bool"), )
paddle.Tensor.__or__(Tensor([1, 2, 40656],"bool"), Tensor([1, 2, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([1, 8, 40656],"bool"), Tensor([1, 8, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([1, 7, 44436],"bool"), Tensor([1, 7, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([1, 3, 24276],"bool"), Tensor([1, 3, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([1, 2, 56784],"bool"), Tensor([1, 2, 56784],"bool"), )
paddle.Tensor.__or__(Tensor([2, 14, 3549],"bool"), Tensor([2, 14, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 48, 3549],"bool"), Tensor([2, 48, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 60, 3549],"bool"), Tensor([2, 60, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 43, 4116],"bool"), Tensor([2, 43, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 82, 2541],"bool"), Tensor([2, 82, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 27, 4725],"bool"), Tensor([2, 27, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 36, 6804],"bool"), Tensor([2, 36, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([1, 7, 27216],"bool"), Tensor([1, 7, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 17, 4116],"bool"), Tensor([2, 17, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 24, 3549],"bool"), Tensor([2, 24, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 35, 6069],"bool"), Tensor([2, 35, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 119, 2100],"bool"), Tensor([2, 119, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 48, 2541],"bool"), Tensor([2, 48, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 38, 2100],"bool"), Tensor([2, 38, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 25, 5376],"bool"), Tensor([2, 25, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([1, 2, 37044],"bool"), Tensor([1, 2, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([2, 32, 6069],"bool"), Tensor([2, 32, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 60, 3024],"bool"), Tensor([2, 60, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([1, 18, 21504],"bool"), Tensor([1, 18, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([2, 22, 7581],"bool"), Tensor([2, 22, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([2, 30, 6804],"bool"), Tensor([2, 30, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 117, 2100],"bool"), Tensor([2, 117, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 42, 2541],"bool"), Tensor([2, 42, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 21, 3024],"bool"), Tensor([2, 21, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 10, 5376],"bool"), Tensor([2, 10, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 73, 2100],"bool"), Tensor([2, 73, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 91, 2541],"bool"), Tensor([2, 91, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 41, 6069],"bool"), Tensor([2, 41, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 36, 4725],"bool"), Tensor([2, 36, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 25, 4116],"bool"), Tensor([2, 25, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 31, 6804],"bool"), Tensor([2, 31, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 49, 2100],"bool"), Tensor([2, 49, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 15, 10164],"bool"), Tensor([2, 15, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([2, 7, 4725],"bool"), Tensor([2, 7, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([1, 4, 48384],"bool"), Tensor([1, 4, 48384],"bool"), )
paddle.Tensor.__or__(Tensor([2, 30, 4725],"bool"), Tensor([2, 30, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 62, 2541],"bool"), Tensor([2, 62, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 27, 2100],"bool"), Tensor([2, 27, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 24, 4725],"bool"), Tensor([2, 24, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 13, 8400],"bool"), Tensor([2, 13, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([2, 41, 2100],"bool"), Tensor([2, 41, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 30, 3024],"bool"), Tensor([2, 30, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([1, 5, 75600],"bool"), Tensor([1, 5, 75600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 3, 44436],"bool"), Tensor([1, 3, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([2, 21, 4116],"bool"), Tensor([2, 21, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 10, 12096],"bool"), Tensor([2, 10, 12096],"bool"), )
paddle.Tensor.__or__(Tensor([2, 23, 2100],"bool"), Tensor([2, 23, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([1, 11, 24276],"bool"), Tensor([1, 11, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([2, 36, 3549],"bool"), Tensor([2, 36, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([4, 94, 311],"bool"), Tensor([4, 94, 311],"bool"), )
paddle.Tensor.__or__(Tensor([2, 10, 9261],"bool"), Tensor([2, 10, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([2, 60, 2100],"bool"), Tensor([2, 60, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 43, 2541],"bool"), Tensor([2, 43, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 22, 5376],"bool"), Tensor([2, 22, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 14, 3024],"bool"), Tensor([2, 14, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 12, 7581],"bool"), Tensor([2, 12, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([2, 91, 2100],"bool"), Tensor([2, 91, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 20, 5376],"bool"), Tensor([2, 20, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([1, 8, 56784],"bool"), Tensor([1, 8, 56784],"bool"), )
paddle.Tensor.__or__(Tensor([2, 42, 3024],"bool"), Tensor([2, 42, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 34, 4116],"bool"), Tensor([2, 34, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 75, 2541],"bool"), Tensor([2, 75, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 27, 6069],"bool"), Tensor([2, 27, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 29, 3024],"bool"), Tensor([2, 29, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 7, 11109],"bool"), Tensor([2, 7, 11109],"bool"), )
paddle.Tensor.__or__(Tensor([1, 18, 24276],"bool"), Tensor([1, 18, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([2, 13, 7581],"bool"), Tensor([2, 13, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([2, 19, 4725],"bool"), Tensor([2, 19, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 14, 5376],"bool"), Tensor([2, 14, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 27, 5376],"bool"), Tensor([2, 27, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([1, 9, 27216],"bool"), Tensor([1, 9, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([1, 6, 27216],"bool"), Tensor([1, 6, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 22, 2100],"bool"), Tensor([2, 22, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 43, 3024],"bool"), Tensor([2, 43, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([1, 7, 30324],"bool"), Tensor([1, 7, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([2, 28, 3549],"bool"), Tensor([2, 28, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 13, 3549],"bool"), Tensor([2, 13, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 32, 6804],"bool"), Tensor([2, 32, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 34, 4725],"bool"), Tensor([2, 34, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 20, 2100],"bool"), Tensor([2, 20, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 29, 2100],"bool"), Tensor([2, 29, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 48, 4116],"bool"), Tensor([2, 48, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 26, 6069],"bool"), Tensor([2, 26, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([1, 10, 21504],"bool"), Tensor([1, 10, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([2, 48, 3024],"bool"), Tensor([2, 48, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 66, 2100],"bool"), Tensor([2, 66, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 30, 2541],"bool"), Tensor([2, 30, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 22, 4725],"bool"), Tensor([2, 22, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([1, 23, 21504],"bool"), Tensor([1, 23, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([2, 25, 9261],"bool"), Tensor([2, 25, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([2, 73, 3024],"bool"), Tensor([2, 73, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 13, 11109],"bool"), Tensor([2, 13, 11109],"bool"), )
paddle.Tensor.__or__(Tensor([1, 8, 24276],"bool"), Tensor([1, 8, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([2, 24, 2541],"bool"), Tensor([2, 24, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 34, 6804],"bool"), Tensor([2, 34, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 41, 3549],"bool"), Tensor([2, 41, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 54, 3024],"bool"), Tensor([2, 54, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 26, 5376],"bool"), Tensor([2, 26, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 67, 3024],"bool"), Tensor([2, 67, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([1, 16, 24276],"bool"), Tensor([1, 16, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([1, 12, 27216],"bool"), Tensor([1, 12, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 59, 2541],"bool"), Tensor([2, 59, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 39, 3024],"bool"), Tensor([2, 39, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 72, 2541],"bool"), Tensor([2, 72, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 58, 2100],"bool"), Tensor([2, 58, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 65, 3024],"bool"), Tensor([2, 65, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 8, 9261],"bool"), Tensor([2, 8, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([2, 16, 2100],"bool"), Tensor([2, 16, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 29, 3549],"bool"), Tensor([2, 29, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 47, 3024],"bool"), Tensor([2, 47, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([1, 4, 27216],"bool"), Tensor([1, 4, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 12, 6804],"bool"), Tensor([2, 12, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 47, 2541],"bool"), Tensor([2, 47, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 41, 2541],"bool"), Tensor([2, 41, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([1, 5, 21504],"bool"), Tensor([1, 5, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([2, 50, 4725],"bool"), Tensor([2, 50, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 42, 4725],"bool"), Tensor([2, 42, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([1, 2, 61236],"bool"), Tensor([1, 2, 61236],"bool"), )
paddle.Tensor.__or__(Tensor([2, 57, 3549],"bool"), Tensor([2, 57, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([1, 13, 27216],"bool"), Tensor([1, 13, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 17, 5376],"bool"), Tensor([2, 17, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 48, 4725],"bool"), Tensor([2, 48, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 14, 2100],"bool"), Tensor([2, 14, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 70, 2100],"bool"), Tensor([2, 70, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 52, 3024],"bool"), Tensor([2, 52, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 29, 5376],"bool"), Tensor([2, 29, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 9, 11109],"bool"), Tensor([2, 9, 11109],"bool"), )
paddle.Tensor.__or__(Tensor([2, 24, 3024],"bool"), Tensor([2, 24, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([1, 14, 33600],"bool"), Tensor([1, 14, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([2, 42, 4116],"bool"), Tensor([2, 42, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 45, 4116],"bool"), Tensor([2, 45, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 62, 2100],"bool"), Tensor([2, 62, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([1, 12, 37044],"bool"), Tensor([1, 12, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([2, 46, 4725],"bool"), Tensor([2, 46, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([1, 8, 37044],"bool"), Tensor([1, 8, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([2, 9, 10164],"bool"), Tensor([2, 9, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([2, 35, 4725],"bool"), Tensor([2, 35, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 6, 11109],"bool"), Tensor([2, 6, 11109],"bool"), )
paddle.Tensor.__or__(Tensor([2, 57, 2541],"bool"), Tensor([2, 57, 2541],"bool"), )
paddle.Tensor.__or__(Tensor([2, 35, 6804],"bool"), Tensor([2, 35, 6804],"bool"), )
paddle.Tensor.__or__(Tensor([2, 15, 4725],"bool"), Tensor([2, 15, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 14, 6069],"bool"), Tensor([2, 14, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 18, 4725],"bool"), Tensor([2, 18, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([2, 17, 6069],"bool"), Tensor([2, 17, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 63, 2100],"bool"), Tensor([2, 63, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 52, 2100],"bool"), Tensor([2, 52, 2100],"bool"), )
paddle.Tensor.__or__(Tensor([2, 15, 8400],"bool"), Tensor([2, 15, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([2, 79, 3024],"bool"), Tensor([2, 79, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([2, 19, 8400],"bool"), Tensor([2, 19, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 56784],"bool"), Tensor([1, 1, 56784],"bool"), )
paddle.Tensor.__or__(Tensor([2, 7, 6069],"bool"), Tensor([2, 7, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 37, 5376],"bool"), Tensor([2, 37, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 22, 8400],"bool"), Tensor([2, 22, 8400],"bool"), )
paddle.Tensor.__pow__(Tensor([201, 499],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2, 900, 80],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([4800, 101],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([1, 64, 64, 64],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([64, 1, 172, 79],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 128, 32, 32],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([256512, 1],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 256, 16, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2, 300, 80],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 200, 80],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([17320, 1],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16800, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2400, 8],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([128, 200],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([69278, 1],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([93401, 1],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16800, 1],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([13, 2, 16, 4, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 1, 276, 49],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([10, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.__pow__(Tensor([300, 7],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([600, 2],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([1800, 4],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([516, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([4800, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 1, 19, 84],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([300, 8],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([4800, 1],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 3, 24, 24],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([600, 4],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([300, 5],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([600, 16],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([1000, 1],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1200, 4],"float32"), 2.0, )
paddle.Tensor.__radd__(Tensor([4, 128, 16, 80],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([4, 64, 16, 160],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([8, 1, 241, 241],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([8, 192, 20, 20],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([4, 480, 4, 80],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([4, 94, 311],"float32"), -0.5, )
paddle.Tensor.__radd__(Tensor([512, 256],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([4, 240, 8, 80],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([4, 16, 32, 160],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([4, 32, 32, 160],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([8, 192, 20, 20],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([8, 1, 128, 128],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([8192, 20],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([9801, 20],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([4, 94, 311],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([13, 56, 56],"int64"), 0, )
paddle.Tensor.__radd__(Tensor([2, 36, 256],"float16"), 1.0, )
paddle.Tensor.__radd__(Tensor([52, 8, 37],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 39, 256],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([2, 59, 256],"float16"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 50, 256],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([2, 51, 256],"float16"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 39, 256],"float16"), 1.0, )
paddle.Tensor.__radd__(Tensor([1, 128, 256],"int32"), 0, )
paddle.Tensor.__radd__(Tensor([2, 47, 256],"float16"), 1.0, )
paddle.Tensor.__radd__(Tensor([14, 8, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 52, 256],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([2, 52, 256],"float16"), 1.0, )
paddle.Tensor.__radd__(Tensor([13, 56, 56],"int64"), 16, )
paddle.Tensor.__radd__(Tensor([2, 47, 256],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([39, 7, 64],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 38, 256],"float16"), 1.0, )
paddle.Tensor.__radd__(Tensor([1024, 1, 5, 5],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([1, 128, 128],"int32"), 0, )
paddle.Tensor.__radd__(Tensor([52, 4, 7, 7],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([14, 7, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 50, 256],"float16"), 1.0, )
paddle.Tensor.__radd__(Tensor([512, 1, 5, 5],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([2, 38, 256],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([13, 56, 56],"int64"), 8, )
paddle.Tensor.__radd__(Tensor([2, 59, 256],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([1, 128, 128],"float32"), 4, )
paddle.Tensor.__radd__(Tensor([10, 1024],"float32"), 0.1, )
paddle.Tensor.__radd__(Tensor([1609, 20],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([1, 128, 256],"float32"), 4, )
paddle.Tensor.__radd__(Tensor([2, 51, 256],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([2, 36, 256],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([14, 10, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([6, 3, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([4, 10, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([2, 20, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([13, 4, 7, 7],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([2, 23, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([6, 10, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([14, 1, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([4, 3, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([1, 58, 64],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([400, 20],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([1, 58, 64],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([13, 8, 37],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([14, 3, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 21, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 10, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 23, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([1024],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([13, 4, 32],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 21, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([6, 10, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([1, 20, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([2, 10, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([13, 7, 64],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([13, 10, 37],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([13, 3, 37],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([13, 9, 37],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([13, 7, 37],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([1, 20, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([2, 20, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([13, 8, 32],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([13, 7, 32],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([256, 1, 5, 5],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([4, 10, 128],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([64, 20],"float32"), 1, )
paddle.Tensor.__rlshift__(Tensor([200, 300],"uint8"), 24, )
paddle.Tensor.__rlshift__(Tensor([200, 300],"int8"), 61, )
paddle.Tensor.__rlshift__(Tensor([200, 300],"int16"), -212, )
paddle.Tensor.__rlshift__(Tensor([200, 300],"int32"), -223, )
paddle.Tensor.__rlshift__(Tensor([200, 300],"int64"), -125, )
paddle.Tensor.__rlshift__(Tensor([200, 300],"uint8"), 22, )
paddle.Tensor.__rlshift__(Tensor([200, 300],"int16"), 63, )
paddle.Tensor.__rlshift__(Tensor([200, 300],"int64"), -79, )
paddle.Tensor.__rlshift__(Tensor([200, 300],"int8"), -24, )
paddle.Tensor.__rlshift__(Tensor([200, 300],"int32"), 93, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.012729844413012725, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.04390243902439028, )
paddle.Tensor.__rmul__(Tensor([192, 896, 1, 1],"float32"), 0.01836734693877551, )
paddle.Tensor.__rmul__(Tensor([512, 512],"float32"), 0.976, )
paddle.Tensor.__rmul__(Tensor([192, 896, 1, 1],"float32"), 0.009193054136874323, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.009719222462203025, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.020179372197309364, )
paddle.Tensor.__rmul__(Tensor([9828, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.006241331484049928, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.018218623481781382, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.030716723549488067, )
paddle.Tensor.__rmul__(Tensor([1280, 640, 1, 1],"float32"), 0.9526315789473684, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.9929797191887676, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.012016021361815787, )
paddle.Tensor.__rmul__(Tensor([384, 1536, 1, 1],"float32"), 0.9877717391304348, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.9727272727272728, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.007009345794392496, )
paddle.Tensor.__rmul__(Tensor([192, 896, 1, 1],"float32"), 0.8953488372093024, )
paddle.Tensor.__rmul__(Tensor([88, 384, 3, 3],"float32"), 0.040000000000000036, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.9706840390879479, )
paddle.Tensor.__rmul__(Tensor([512, 512],"float32"), 0.10588235294117643, )
paddle.Tensor.__rmul__(Tensor([256, 1024, 1, 1],"float32"), 0.71875, )
paddle.Tensor.__rmul__(Tensor([640, 640, 1, 1],"float32"), 0.972809667673716, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.014563106796116498, )
paddle.Tensor.__rmul__(Tensor([160, 640, 1, 1],"float32"), 0.29032258064516125, )
paddle.Tensor.__rmul__(Tensor([160, 640, 1, 1],"float32"), 0.8656716417910447, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.9861963190184049, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.960352422907489, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.04500000000000004, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.024324324324324298, )
paddle.Tensor.__rmul__(Tensor([192, 896, 1, 1],"float32"), 0.9895953757225433, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.0064239828693790635, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.9886075949367089, )
paddle.Tensor.__rmul__(Tensor([1280, 640, 1, 1],"float32"), 0.0714285714285714, )
paddle.Tensor.__rmul__(Tensor([320, 320, 1, 1],"float32"), 0.9940185622575299, )
paddle.Tensor.__rmul__(Tensor([384, 1152, 1, 1],"float32"), 0.009336099585062207, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.9873239436619718, )
paddle.Tensor.__rmul__(Tensor([320, 320, 1, 1],"float32"), 0.07086614173228345, )
paddle.Tensor.__rmul__(Tensor([88, 192, 3, 3],"float32"), 0.03260869565217395, )
paddle.Tensor.__rmul__(Tensor([512, 1536],"float32"), 0.011406844106463865, )
paddle.Tensor.__rmul__(Tensor([384, 1152, 1, 1],"float32"), 0.02670623145400597, )
paddle.Tensor.__rmul__(Tensor([640, 320, 1, 1],"float32"), 0.05882352941176472, )
paddle.Tensor.__rmul__(Tensor([2048, 32, 3, 3],"float32"), 0.28125, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.9896313364055299, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.9893617021276596, )
paddle.Tensor.__rmul__(Tensor([40, 384, 3, 3],"float32"), 0.2647058823529411, )
paddle.Tensor.__rmul__(Tensor([40, 384, 3, 3],"float32"), 0.018181818181818188, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.02631578947368418, )
paddle.Tensor.__rmul__(Tensor([9186, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([3432, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.007075471698113178, )
paddle.Tensor.__rmul__(Tensor([6324, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([768, 768, 1, 1],"float32"), 0.9872881355932204, )
paddle.Tensor.__rmul__(Tensor([384, 1152, 1, 1],"float32"), 0.018750000000000044, )
paddle.Tensor.__rmul__(Tensor([40, 768, 3, 3],"float32"), 0.987688098495212, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.9900771775082691, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.9872701555869873, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.9440993788819876, )
paddle.Tensor.__rmul__(Tensor([640, 160, 1, 1],"float32"), 0.0461538461538461, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.9838129496402878, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.006559766763848396, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.9856459330143541, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.15254237288135597, )
paddle.Tensor.__rmul__(Tensor([192, 896, 1, 1],"float32"), 0.19565217391304346, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.9936350777934936, )
paddle.Tensor.__rmul__(Tensor([128, 1280, 1, 1],"float32"), 0.03600000000000003, )
paddle.Tensor.__rmul__(Tensor([88, 192, 3, 3],"float32"), 0.01740812379110257, )
paddle.Tensor.__rmul__(Tensor([512, 512],"float32"), 0.026239067055393583, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.006854531607006886, )
paddle.Tensor.__rmul__(Tensor([512, 512],"float32"), 0.03191489361702127, )
paddle.Tensor.__rmul__(Tensor([384, 768, 1, 1],"float32"), 0.9880952380952381, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.9783132530120482, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.9802197802197802, )
paddle.Tensor.__rmul__(Tensor([1879, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([512, 256, 1, 1],"float32"), 0.6666666666666666, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.9876543209876543, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.07964601769911506, )
paddle.Tensor.__rmul__(Tensor([384, 1024, 1, 1],"float32"), 0.012362637362637319, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.9727272727272728, )
paddle.Tensor.__rmul__(Tensor([40, 384, 3, 3],"float32"), 0.011811023622047223, )
paddle.Tensor.__rmul__(Tensor([88, 384, 3, 3],"float32"), 0.9803063457330415, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.008137432188065064, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.009879253567508184, )
paddle.Tensor.__rmul__(Tensor([40, 384, 3, 3],"float32"), 0.01814516129032262, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.01982378854625555, )
paddle.Tensor.__rmul__(Tensor([68, 768, 3, 3],"float32"), 0.024793388429752095, )
paddle.Tensor.__rmul__(Tensor([160, 640, 1, 1],"float32"), 0.9605263157894737, )
paddle.Tensor.__rmul__(Tensor([512, 512],"float32"), 0.9887076537013801, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.008379888268156388, )
paddle.Tensor.__rmul__(Tensor([384, 768, 1, 1],"float32"), 0.9823529411764705, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.9523809523809523, )
paddle.Tensor.__rmul__(Tensor([40, 384, 3, 3],"float32"), 0.9854604200323102, )
paddle.Tensor.__rmul__(Tensor([68, 384, 3, 3],"float32"), 0.00983606557377048, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.015202702702702742, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.01182654402102501, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.976, )
paddle.Tensor.__rmul__(Tensor([3834, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([1489, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.9921807124239791, )
paddle.Tensor.__rmul__(Tensor([40, 384, 3, 3],"float32"), 0.10344827586206895, )
paddle.Tensor.__rmul__(Tensor([640, 160, 1, 1],"float32"), 0.051724137931034475, )
paddle.Tensor.__rmul__(Tensor([512, 1536],"float32"), 0.01143583227445999, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.99361249112846, )
paddle.Tensor.__rmul__(Tensor([9968, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([240, 1120, 1, 1],"float32"), 0.6086956521739131, )
paddle.Tensor.__rmul__(Tensor([88, 192, 3, 3],"float32"), 0.9901960784313726, )
paddle.Tensor.__rmul__(Tensor([384, 768, 1, 1],"float32"), 0.8043478260869565, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.012968299711815567, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.9817444219066938, )
paddle.Tensor.__rmul__(Tensor([384, 1536, 1, 1],"float32"), 0.9908906882591093, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.8636363636363636, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.04500000000000004, )
paddle.Tensor.__rmul__(Tensor([68, 768, 3, 3],"float32"), 0.981404958677686, )
paddle.Tensor.__rmul__(Tensor([512, 512],"float32"), 0.022332506203473934, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.9921052631578947, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.007698887938408894, )
paddle.Tensor.__rmul__(Tensor([40, 768, 3, 3],"float32"), 0.9878048780487805, )
paddle.Tensor.__rmul__(Tensor([768, 384, 1, 1],"float32"), 0.040723981900452455, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.006245662734212343, )
paddle.Tensor.__rmul__(Tensor([8130, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([256, 512, 1, 1],"float32"), 0.005484354200811821, )
paddle.Tensor.__rmul__(Tensor([88, 384, 3, 3],"float32"), 0.026162790697674465, )
paddle.Tensor.__rmul__(Tensor([512, 512, 1, 1],"float32"), 0.8783783783783784, )
paddle.Tensor.__rmul__(Tensor([384, 1152, 1, 1],"float32"), 0.9891172914147521, )
paddle.Tensor.__rmul__(Tensor([288, 288, 3, 3],"float32"), 0.5294117647058824, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.7, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.9901960784313726, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.9839285714285714, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.013698630136986356, )
paddle.Tensor.__rmul__(Tensor([768, 768, 1, 1],"float32"), 0.9905163329820864, )
paddle.Tensor.__rmul__(Tensor([68, 768, 3, 3],"float32"), 0.016274864376130238, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.014778325123152691, )
paddle.Tensor.__rmul__(Tensor([384, 1536, 1, 1],"float32"), 0.9862595419847329, )
paddle.Tensor.__rmul__(Tensor([40, 384, 3, 3],"float32"), 0.018255578093306246, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.008364312267657992, )
paddle.Tensor.__rmul__(Tensor([512, 1536],"float32"), 0.050561797752809, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.5263157894736842, )
paddle.Tensor.__rmul__(Tensor([512, 1536],"float32"), 0.0189473684210526, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.022058823529411797, )
paddle.Tensor.__rmul__(Tensor([68, 480, 3, 3],"float32"), 0.4736842105263158, )
paddle.Tensor.__rmul__(Tensor([384, 1536, 1, 1],"float32"), 0.9868995633187773, )
paddle.Tensor.__rmul__(Tensor([80, 768, 3, 3],"float32"), 0.972972972972973, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.9933969185619956, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.0128571428571429, )
paddle.Tensor.__rmul__(Tensor([512, 512],"float32"), 0.015332197614991494, )
paddle.Tensor.__rmul__(Tensor([68, 768, 3, 3],"float32"), 0.022277227722772297, )
paddle.Tensor.__rmul__(Tensor([192, 896, 1, 1],"float32"), 0.07199999999999995, )
paddle.Tensor.__rmul__(Tensor([68, 384, 3, 3],"float32"), 0.7906976744186046, )
paddle.Tensor.__rmul__(Tensor([88, 384, 3, 3],"float32"), 0.9901315789473685, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.9931818181818182, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.017013232514177745, )
paddle.Tensor.__rmul__(Tensor([384, 1536, 1, 1],"float32"), 0.9723926380368099, )
paddle.Tensor.__rmul__(Tensor([80, 768, 3, 3],"float32"), 0.9243697478991597, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.013615733736762503, )
paddle.Tensor.__rmul__(Tensor([893, 512],"float32"), 7.568670356258612, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.9710610932475884, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.03396226415094339, )
paddle.Tensor.__rmul__(Tensor([88, 192, 3, 3],"float32"), 0.02639296187683282, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.02848101265822789, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.009782608695652173, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.024657534246575352, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.012587412587412583, )
paddle.Tensor.__rmul__(Tensor([5364, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.009793253536452662, )
paddle.Tensor.__rmul__(Tensor([4053, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([288, 1152, 1, 1],"float32"), 0.25, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.01143583227445999, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.15517241379310343, )
paddle.Tensor.__rmul__(Tensor([512, 256, 1, 1],"float32"), 0.11688311688311692, )
paddle.Tensor.__rmul__(Tensor([256, 896, 1, 1],"float32"), 0.5263157894736842, )
paddle.Tensor.__rmul__(Tensor([3101, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([68, 384, 3, 3],"float32"), 0.009554140127388533, )
paddle.Tensor.__rmul__(Tensor([88, 384, 3, 3],"float32"), 0.96484375, )
paddle.Tensor.__rmul__(Tensor([128, 1280, 1, 1],"float32"), 0.03982300884955747, )
paddle.Tensor.__rmul__(Tensor([11085, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([6965, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.375, )
paddle.Tensor.__rmul__(Tensor([68, 384, 3, 3],"float32"), 0.9840989399293286, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.01044083526682138, )
paddle.Tensor.__rmul__(Tensor([128, 1280, 1, 1],"float32"), 0.03688524590163933, )
paddle.Tensor.__rmul__(Tensor([512, 512],"float32"), 0.015410958904109595, )
paddle.Tensor.__rmul__(Tensor([384, 1024, 1, 1],"float32"), 0.010663507109004766, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.967741935483871, )
paddle.Tensor.__rmul__(Tensor([640, 320, 1, 1],"float32"), 0.06474820143884896, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.016544117647058876, )
paddle.Tensor.__rmul__(Tensor([1024, 256, 1, 1],"float32"), 0.2142857142857143, )
paddle.Tensor.__rmul__(Tensor([68, 384, 3, 3],"float32"), 0.985691573926868, )
paddle.Tensor.__rmul__(Tensor([68, 384, 3, 3],"float32"), 0.9934876989869754, )
paddle.Tensor.__rmul__(Tensor([1280, 320, 1, 1],"float32"), 0.03964757709251099, )
paddle.Tensor.__rmul__(Tensor([320, 320, 1, 1],"float32"), 0.03629032258064513, )
paddle.Tensor.__rmul__(Tensor([160, 640, 1, 1],"float32"), 0.8783783783783784, )
paddle.Tensor.__rmul__(Tensor([384, 1024, 1, 1],"float32"), 0.9822834645669292, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.9932533733133433, )
paddle.Tensor.__rmul__(Tensor([68, 384, 3, 3],"float32"), 0.9939475453934096, )
paddle.Tensor.__rmul__(Tensor([40, 768, 3, 3],"float32"), 0.95, )
paddle.Tensor.__rmul__(Tensor([40, 768, 3, 3],"float32"), 0.030927835051546393, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.9935897435897436, )
paddle.Tensor.__rmul__(Tensor([640, 160, 1, 1],"float32"), 0.9652509652509652, )
paddle.Tensor.__rmul__(Tensor([384, 1152, 1, 1],"float32"), 0.99079754601227, )
paddle.Tensor.__rmul__(Tensor([384, 1536, 1, 1],"float32"), 0.19148936170212771, )
paddle.Tensor.__rmul__(Tensor([1851, 512],"float32"), 7.568670356258612, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.006637168141592875, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.006405693950177982, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.007171314741035828, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.9497206703910615, )
paddle.Tensor.__rmul__(Tensor([384, 1152, 1, 1],"float32"), 0.9863013698630136, )
paddle.Tensor.__rmul__(Tensor([320, 1280, 1, 1],"float32"), 0.972972972972973, )
paddle.Tensor.__rmul__(Tensor([512, 1536],"float32"), 0.02950819672131144, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.03396226415094339, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.046875, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.9461077844311377, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.012162162162162149, )
paddle.Tensor.__rmul__(Tensor([384, 1536, 1, 1],"float32"), 0.009677419354838679, )
paddle.Tensor.__rmul__(Tensor([640, 160, 1, 1],"float32"), 0.9447852760736196, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.71875, )
paddle.Tensor.__rmul__(Tensor([128, 1280, 1, 1],"float32"), 0.14516129032258063, )
paddle.Tensor.__rmul__(Tensor([192, 896, 1, 1],"float32"), 0.013235294117647012, )
paddle.Tensor.__rmul__(Tensor([384, 288, 1, 1],"float32"), 0.35714285714285715, )
paddle.Tensor.__rmul__(Tensor([68, 768, 3, 3],"float32"), 0.976, )
paddle.Tensor.__rmul__(Tensor([192, 896, 1, 1],"float32"), 0.9302325581395349, )
paddle.Tensor.__rmul__(Tensor([40, 384, 3, 3],"float32"), 0.6086956521739131, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.007880910683012221, )
paddle.Tensor.__rmul__(Tensor([11956, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([768, 768, 1, 1],"float32"), 0.9898762654668166, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.9845094664371773, )
paddle.Tensor.__rmul__(Tensor([384, 1536, 1, 1],"float32"), 0.8043478260869565, )
paddle.Tensor.__rmul__(Tensor([384, 1536, 1, 1],"float32"), 0.013996889580093264, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.9832402234636871, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.008893280632411016, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.05882352941176472, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.9464285714285714, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.9754098360655737, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.6923076923076923, )
paddle.Tensor.__rmul__(Tensor([4840, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([2793, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.928, )
paddle.Tensor.__rmul__(Tensor([1280, 320, 1, 1],"float32"), 0.07894736842105265, )
paddle.Tensor.__rmul__(Tensor([512, 512],"float32"), 0.023017902813299185, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.9908256880733946, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.9933135215453195, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.006849315068493178, )
paddle.Tensor.__rmul__(Tensor([160, 640, 1, 1],"float32"), 0.9543147208121827, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.9709677419354839, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.01882845188284521, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.9782608695652174, )
paddle.Tensor.__rmul__(Tensor([11316, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([1024, 256, 1, 1],"float32"), 0.375, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.020134228187919434, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.010663507109004766, )
paddle.Tensor.__rmul__(Tensor([88, 384, 3, 3],"float32"), 0.009483667017913588, )
paddle.Tensor.__rmul__(Tensor([191835],"float32"), 0.5, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.982725527831094, )
paddle.Tensor.__rmul__(Tensor([512, 512],"float32"), 0.033333333333333326, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.006446991404011504, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.966789667896679, )
paddle.Tensor.__rmul__(Tensor([3085, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.625, )
paddle.Tensor.__rmul__(Tensor([768, 768, 1, 1],"float32"), 0.986046511627907, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.9615384615384616, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.966542750929368, )
paddle.Tensor.__rmul__(Tensor([384, 768, 1, 1],"float32"), 0.9893867924528302, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.006696428571428603, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.009063444108761365, )
paddle.Tensor.__rmul__(Tensor([295443],"float32"), 1.0, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.9881889763779528, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.976063829787234, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.9875173370319001, )
paddle.Tensor.__rmul__(Tensor([1024, 256, 1, 1],"float32"), 0.7352941176470589, )
paddle.Tensor.__rmul__(Tensor([5736, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.9924874791318865, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.9937543372657877, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.018036072144288595, )
paddle.Tensor.__rmul__(Tensor([11272, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.012875536480686733, )
paddle.Tensor.__rmul__(Tensor([7714, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.03296703296703296, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.9886075949367089, )
paddle.Tensor.__rmul__(Tensor([256, 2048, 1, 1],"float32"), 0.7428571428571429, )
paddle.Tensor.__rmul__(Tensor([768, 384, 1, 1],"float32"), 0.05555555555555558, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.9880794701986755, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.9921465968586387, )
paddle.Tensor.__rmul__(Tensor([269355],"float32"), 0.5, )
paddle.Tensor.__rmul__(Tensor([768, 768, 1, 1],"float32"), 0.9601769911504425, )
paddle.Tensor.__rmul__(Tensor([384, 384, 1, 1],"float32"), 0.024657534246575352, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.02931596091205213, )
paddle.Tensor.__rmul__(Tensor([88, 384, 3, 3],"float32"), 0.00965665236051505, )
paddle.Tensor.__rmul__(Tensor([1280, 320, 1, 1],"float32"), 0.9567307692307693, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.1097560975609756, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.025568181818181768, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.015410958904109595, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.9838420107719928, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.9938101788170564, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.008579599618684486, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.013313609467455634, )
paddle.Tensor.__rmul__(Tensor([88, 384, 3, 3],"float32"), 0.018907563025210128, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.010791366906474864, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.019911504424778736, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.9816700610997964, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.08256880733944949, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.8714285714285714, )
paddle.Tensor.__rmul__(Tensor([68, 384, 3, 3],"float32"), 0.034220532319391594, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.006696428571428603, )
paddle.Tensor.__rmul__(Tensor([768, 192, 1, 1],"float32"), 0.08411214953271029, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.9900442477876106, )
paddle.Tensor.__rmul__(Tensor([160, 640, 1, 1],"float32"), 0.96484375, )
paddle.Tensor.__rmul__(Tensor([640, 320, 1, 1],"float32"), 0.9669117647058824, )
paddle.Tensor.__rmul__(Tensor([384, 1024, 1, 1],"float32"), 0.8902439024390244, )
paddle.Tensor.__rmul__(Tensor([320, 1280, 1, 1],"float32"), 0.9565217391304348, )
paddle.Tensor.__rmul__(Tensor([384, 1024, 1, 1],"float32"), 0.011936339522546469, )
paddle.Tensor.__rmul__(Tensor([512, 512, 1, 1],"float32"), 0.08108108108108103, )
paddle.Tensor.__rmul__(Tensor([512, 512],"float32"), 0.9818181818181818, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.008695652173912993, )
paddle.Tensor.__rmul__(Tensor([4270, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.9927360774818402, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.03688524590163933, )
paddle.Tensor.__rmul__(Tensor([5031, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([512, 512, 1, 1],"float32"), 0.1578947368421053, )
paddle.Tensor.__rmul__(Tensor([384, 1024, 1, 1],"float32"), 0.01490066225165565, )
paddle.Tensor.__rmul__(Tensor([1283, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([128, 1280, 1, 1],"float32"), 0.966789667896679, )
paddle.Tensor.__rmul__(Tensor([10338, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([68, 768, 3, 3],"float32"), 0.045685279187817285, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.0071258907363420665, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.007633587786259555, )
paddle.Tensor.__rmul__(Tensor([384, 1024, 1, 1],"float32"), 0.0461538461538461, )
paddle.Tensor.__rmul__(Tensor([1280, 640, 1, 1],"float32"), 0.03125, )
paddle.Tensor.__rmul__(Tensor([160640, 1],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.9867256637168141, )
paddle.Tensor.__rmul__(Tensor([88, 192, 3, 3],"float32"), 0.9661654135338346, )
paddle.Tensor.__rmul__(Tensor([126464],"float32"), 1.0, )
paddle.Tensor.__rmul__(Tensor([6306, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([40, 384, 3, 3],"float32"), 0.9871060171919771, )
paddle.Tensor.__rmul__(Tensor([40, 768, 3, 3],"float32"), 0.048648648648648596, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.01224489795918371, )
paddle.Tensor.__rmul__(Tensor([192, 896, 1, 1],"float32"), 0.9803921568627451, )
paddle.Tensor.__rmul__(Tensor([9604, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.992918961447679, )
paddle.Tensor.__rmul__(Tensor([256, 256, 3, 3],"float32"), 0.2571428571428571, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.01590106007067138, )
paddle.Tensor.__rmul__(Tensor([512, 1536],"float32"), 0.03260869565217395, )
paddle.Tensor.__rmul__(Tensor([384, 1152, 1, 1],"float32"), 0.045454545454545414, )
paddle.Tensor.__rmul__(Tensor([2223, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([384, 1024, 1, 1],"float32"), 0.3214285714285714, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.9893238434163701, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.7692307692307693, )
paddle.Tensor.__rmul__(Tensor([512, 256, 1, 1],"float32"), 0.09090909090909094, )
paddle.Tensor.__rmul__(Tensor([68, 768, 3, 3],"float32"), 0.025423728813559365, )
paddle.Tensor.__rmul__(Tensor([80, 384, 3, 3],"float32"), 0.03879310344827591, )
paddle.Tensor.__rmul__(Tensor([40, 384, 3, 3],"float32"), 0.9634146341463414, )
paddle.Tensor.__rmul__(Tensor([10469, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([512, 1536],"float32"), 0.9150943396226415, )
paddle.Tensor.__rmul__(Tensor([768, 768, 1, 1],"float32"), 0.017892644135188873, )
paddle.Tensor.__rmul__(Tensor([88, 192, 3, 3],"float32"), 0.009825327510917026, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.984873949579832, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.9021739130434783, )
paddle.Tensor.__rmul__(Tensor([768, 768, 1, 1],"float32"), 0.9892729439809297, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.9801762114537445, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.00924024640657084, )
paddle.Tensor.__rmul__(Tensor([88, 768, 3, 3],"float32"), 0.03082191780821919, )
paddle.Tensor.__rmul__(Tensor([34000, 12],"float32"), 2.5, )
paddle.Tensor.__rmul__(Tensor([88, 384, 3, 3],"float32"), 0.027190332326283984, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.006401137980085347, )
paddle.Tensor.__rmul__(Tensor([6008, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.9521276595744681, )
paddle.Tensor.__rmul__(Tensor([40, 384, 3, 3],"float32"), 0.035573122529644285, )
paddle.Tensor.__rmul__(Tensor([2590, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.9889570552147239, )
paddle.Tensor.__rmul__(Tensor([11158, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([192, 896, 1, 1],"float32"), 0.009922822491730932, )
paddle.Tensor.__rmul__(Tensor([4186, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([192, 768, 1, 1],"float32"), 0.012569832402234637, )
paddle.Tensor.__rmul__(Tensor([512, 384, 1, 1],"float32"), 0.006833712984054663, )
paddle.Tensor.__rmul__(Tensor([1280, 320, 1, 1],"float32"), 0.07563025210084029, )
paddle.Tensor.__rmul__(Tensor([192, 896, 1, 1],"float32"), 0.9834862385321101, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.972809667673716, )
paddle.Tensor.__rmul__(Tensor([68, 192, 3, 3],"float32"), 0.00622837370242213, )
paddle.Tensor.__rmul__(Tensor([68, 384, 3, 3],"float32"), 0.05294117647058827, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.01490066225165565, )
paddle.Tensor.__rmul__(Tensor([1280, 320, 1, 1],"float32"), 0.1875, )
paddle.Tensor.__rmul__(Tensor([88, 192, 3, 3],"float32"), 0.983271375464684, )
paddle.Tensor.__rmul__(Tensor([384, 1536, 1, 1],"float32"), 0.9899777282850779, )
paddle.Tensor.__rmul__(Tensor([80, 768, 3, 3],"float32"), 0.019565217391304346, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.008302583025830312, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.9461077844311377, )
paddle.Tensor.__rmul__(Tensor([3088, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([192, 128, 3, 3],"float32"), 0.9892215568862276, )
paddle.Tensor.__rmul__(Tensor([192, 576, 1, 1],"float32"), 0.9874125874125874, )
paddle.Tensor.__rmul__(Tensor([128, 1280, 1, 1],"float32"), 0.7352941176470589, )
paddle.Tensor.__rmul__(Tensor([88, 192, 3, 3],"float32"), 0.03703703703703709, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.009966777408637828, )
paddle.Tensor.__rmul__(Tensor([80, 192, 3, 3],"float32"), 0.006864988558352381, )
paddle.Tensor.__rmul__(Tensor([68, 384, 3, 3],"float32"), 0.007964601769911539, )
paddle.Tensor.__rmul__(Tensor([320, 320, 1, 1],"float32"), 0.918918918918919, )
paddle.Tensor.__rmul__(Tensor([384, 256, 3, 3],"float32"), 0.9902491874322861, )
paddle.Tensor.__rmul__(Tensor([192, 192, 3, 3],"float32"), 0.9683098591549296, )
paddle.Tensor.__rmul__(Tensor([1024, 768, 1, 1],"float32"), 0.9904357066950054, )
paddle.Tensor.__rmul__(Tensor([68, 768, 3, 3],"float32"), 0.9612068965517241, )
paddle.Tensor.__rmul__(Tensor([640, 320, 1, 1],"float32"), 0.9702970297029703, )
paddle.Tensor.__rmul__(Tensor([384, 1024, 1, 1],"float32"), 0.1097560975609756, )
paddle.Tensor.__rmul__(Tensor([320, 320, 1, 1],"float32"), 0.05084745762711862, )
paddle.Tensor.__rrshift__(Tensor([200, 300],"int64"), 155, )
paddle.Tensor.__rrshift__(Tensor([200, 300],"uint8"), 57, )
paddle.Tensor.__rrshift__(Tensor([200, 300],"int16"), -255, )
paddle.Tensor.__rrshift__(Tensor([200, 300],"int32"), 72, )
paddle.Tensor.__rrshift__(Tensor([200, 300],"int8"), 3, )
paddle.Tensor.__rrshift__(Tensor([200, 300],"int32"), 232, )
paddle.Tensor.__rrshift__(Tensor([200, 300],"int16"), 11, )
paddle.Tensor.__rrshift__(Tensor([200, 300],"uint8"), 45, )
paddle.Tensor.__rrshift__(Tensor([200, 300],"int64"), -43, )
paddle.Tensor.__rrshift__(Tensor([200, 300],"int8"), -24, )
paddle.Tensor.__rshift__(Tensor([200, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"uint8"), Tensor([200, 300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"int32"), Tensor([200, 300],"int32"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int64"), Tensor([200, 300],"int64"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"int8"), Tensor([200, 300],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int16"), Tensor([200, 300],"int16"), )
paddle.Tensor.__rshift__(Tensor([300],"int8"), Tensor([200, 300],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"uint8"), Tensor([300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int64"), Tensor([300],"int64"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"int32"), Tensor([300],"int32"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int8"), Tensor([300],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int32"), Tensor([300],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.Tensor.__rshift__(Tensor([200, 300],"int16"), Tensor([300],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int32"), Tensor([200, 300],"int32"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int8"), Tensor([300],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int64"), Tensor([200, 300],"int64"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int64"), Tensor([300],"int64"), )
paddle.Tensor.__rshift__(Tensor([200, 300],"int16"), Tensor([300],"int16"), )
paddle.Tensor.__rshift__(Tensor([300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([300],"uint8"), Tensor([200, 300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([300],"int16"), Tensor([200, 300],"int16"), )
paddle.Tensor.__rsub__(Tensor([848984],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([827954],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([4, 7581, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([942419],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([725292],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([7, 1, 220, 220],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2670, 48],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([912645],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([913434],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([3270, 53],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([905744],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([3908, 89],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([892196],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([956773],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([881672],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4562, 45],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([8, 11109, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([973556],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2450, 223],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([810566],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([4542, 58],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([844621],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([822669],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([879741],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([898090],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2073, 66],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([894751],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([3635, 95],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([922233],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([848715],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([803365],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([982059],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([862614],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([849325],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([913153],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([911146],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([919706],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([859740],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([959543],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([799391],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([918389],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3427, 78],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2, 8400, 10],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([877310],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([937631],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([795938],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([906544],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([218240],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([936297],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4133, 34],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([7, 1, 186, 186],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2, 6069, 10],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([958864],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([815795],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([923942],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([727244],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([8, 1, 128, 128],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([935575],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([935486],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([939644],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([717215],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([968690],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([957708],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([925403],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([802335],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([857697],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 40656, 10],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([888312],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([910594],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([941840],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([897440],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2846, 77],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([908506],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([943934],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([837723],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([986636],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([865513],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 24276, 10],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([943166],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([995655],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([804637],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([818851],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([903681],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([725292],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([762435],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([760627],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([910109],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([951834],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([941840],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([917966],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([792742],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([805830],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([4897, 143],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([881672],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([272800],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([910774],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([899774],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([944010],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([911663],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([931439],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([793034],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([797394],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([855080],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([961439],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([916356],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([815298],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([945343],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([883250],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4789, 24],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([838278],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 27216, 10],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([865739],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([868526],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([724723],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([3060, 43],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([985372],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([4788, 21],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([966455],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([817975],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([908431],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([854188],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([965841],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([917016],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([961565],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1852, 58],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4166, 26],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([717326],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([894988],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3198, 55],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2, 7581, 10],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([940340],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([911980],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([854188],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([720537],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([990386],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([894148],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([986636],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([860976],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([623489],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([4, 10164, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([888865],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([920264],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([860364],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([797394],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([6432, 139],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([855961],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3950, 37],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([890649],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([973822],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([964107],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4157, 26],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([965701],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3223, 49],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([15083, 7],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([850906],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([6936, 21],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([952036],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([913677],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([904803],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([970473],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3162, 77],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([970426],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([866066],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([907233],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([972067],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([4710, 63],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([961572],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([900266],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([871263],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([739406],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([955839],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([3060, 39],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([910774],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 3, 298, 364],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 48384, 10],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([946388],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([901715],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([924014],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([935575],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([818851],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([914729],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([882763],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([8, 13872],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 65856, 10],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2546, 48],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([5468, 131],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([945157],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([913977],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([863823],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4201, 26],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([958738],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([962740],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([623489],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([790301],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([5358, 180],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([778392],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([843950],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3146, 36],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2, 107136, 1],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([875320],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([875320],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([4115, 143],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([920264],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([831166],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2734, 46],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([718484],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([859169],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([779371],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([924579],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([926213],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([994466],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([886248],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([889717],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([809355],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([870169],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2459, 64],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([809481],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([849654],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([911929],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([855961],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([899774],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([961572],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([873305],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([778392],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([912939],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([941057],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3598, 43],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([837723],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([925379],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([967354],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([834985],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([802335],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([810566],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([920160],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([972067],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([52, 6629],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([969848],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([916011],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([936939],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([926271],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2, 107136, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([270072],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([923373],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([807549],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4284, 38],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 512, 10, 10],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([947132],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([965841],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([854532],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([809481],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([805559],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([884750],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([915594],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([4148, 34],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([976558],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([912773],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([3239, 32],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([876793],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([5221, 30],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2443, 45],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([3849, 38],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4386, 29],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([747492],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([989643],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([830827],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3364, 39],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([790612],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([894988],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([915887],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([900266],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2458, 41],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([959358],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([992456],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([826111],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4, 4, 128, 128],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([995434],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 56784, 10],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([919706],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([802611],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([717326],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([944323],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([3708, 38],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([895230],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([7, 1, 165, 165],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([865513],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([878743],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([958699],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([841983],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([908506],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([3433, 65],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([979558],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([762435],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([917016],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2983, 39],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([905562],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([833791],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([823140],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([849937],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([848984],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([852880],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([823810],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3904, 28],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([7, 1, 209, 209],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([924579],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([864278],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([822454],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([842436],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([955230],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([966506],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2675, 52],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([920358],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([947132],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([962872],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([857697],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([757880],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([910889],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([885918],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([818738],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([828406],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([946452],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([959358],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([790972],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2758, 80],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4158, 81],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([904000],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([804637],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([931692],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([822155],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([908154],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([816181],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([859169],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([4, 6804, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([995434],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([823140],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([944052],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([917660],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 33600, 10],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([907369],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2815, 64],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([847066],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([940154],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([842480],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([6235, 18],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([816181],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([210056],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([920069],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([910889],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([843950],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([808670],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([920493],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([961422],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([945343],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([989969],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([830677],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([4183, 30],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([829317],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([894537],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([943234],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([929142],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([932844],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([776379],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2636, 54],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([986661],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1837, 83],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([8, 8400, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2061, 99],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([962740],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([958929],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([922233],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([920889],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([915353],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([763098],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([926213],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([865633],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3649, 48],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([220968],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([914729],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2333, 51],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([851411],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([941136],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([889653],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([739406],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([911146],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([889134],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([853688],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([989969],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([929509],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([941136],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([3923, 39],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([821415],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2023, 77],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([966506],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3885, 31],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([992456],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([797922],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([863412],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([917660],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([859626],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([854532],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([951555],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([512, 256],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([1, 1444, 1, 1],"float32"), 1, )
paddle.Tensor.__sub__(Tensor([2, 89, 4116, 1],"float32"), Tensor([1, 1, 4116, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 34, 6804, 1],"float32"), Tensor([1, 1, 6804, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1847, 16, 2],"float32"), Tensor([1847, 16, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([232, 2100],"float32"), Tensor([232, 2100],"float32"), )
paddle.Tensor.__sub__(Tensor([10105, 6],"float32"), Tensor([10105, 6],"float32"), )
paddle.Tensor.__sub__(Tensor([24, 2541],"float32"), Tensor([24, 2541],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 11109, 1],"float32"), Tensor([2, 16, 11109, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([8, 7, 5376],"float32"), Tensor([8, 7, 5376],"float32"), )
paddle.Tensor.__sub__(Tensor([1505, 27, 2],"float32"), Tensor([1505, 27, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 6069, 1],"float32"), Tensor([2, 16, 6069, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 21, 2100, 2],"float32"), Tensor([2, 21, 2100, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 369303],"float32"), Tensor([1, 369303],"float32"), )
paddle.Tensor.__sub__(Tensor([2417, 14, 2],"float32"), Tensor([2417, 14, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([],"float32"), Tensor([795938],"float32"), )
paddle.Tensor.__sub__(Tensor([5631, 80],"float32"), Tensor([5631, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1144, 30, 2],"float32"), Tensor([1144, 30, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([6, 60480],"float32"), Tensor([6, 60480],"float32"), )
paddle.Tensor.__sub__(Tensor([2208, 80],"float32"), Tensor([2208, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2890, 9, 2],"float32"), Tensor([2890, 9, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2630, 80],"float32"), Tensor([2630, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 28, 4725],"float32"), Tensor([2, 28, 4725],"float32"), )
paddle.Tensor.__sub__(Tensor([2986, 80],"float32"), Tensor([2986, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1310, 34, 2],"float32"), Tensor([1310, 34, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 68, 4116, 1],"float32"), Tensor([1, 1, 4116, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([4926, 80],"float32"), Tensor([4926, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([6104, 80],"float32"), Tensor([6104, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([4743, 80],"float32"), Tensor([4743, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 27216, 1],"float32"), Tensor([1, 9, 27216, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 70644, 1],"float32"), Tensor([1, 5, 70644, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1049, 80],"float32"), Tensor([1049, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2428, 12, 2],"float32"), Tensor([2428, 12, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([705, 80],"float32"), Tensor([705, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 77, 6069, 1],"float32"), Tensor([1, 1, 6069, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 21, 5376, 2],"float32"), Tensor([2, 21, 5376, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1284, 80],"float32"), Tensor([1284, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 12, 10164, 2],"float32"), Tensor([2, 12, 10164, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 6804, 1],"float32"), Tensor([2, 11, 6804, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1597, 80],"float32"), Tensor([1597, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 77625],"float32"), Tensor([2, 77625],"float32"), )
paddle.Tensor.__sub__(Tensor([2547, 37],"float32"), Tensor([2547, 37],"float32"), )
paddle.Tensor.__sub__(Tensor([18534, 11],"float32"), Tensor([18534, 11],"float32"), )
paddle.Tensor.__sub__(Tensor([319200],"float32"), Tensor([319200],"float32"), )
paddle.Tensor.__sub__(Tensor([4062, 80],"float32"), Tensor([4062, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([5814, 80],"float32"), Tensor([5814, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3292, 80],"float32"), Tensor([3292, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 11109, 1],"float32"), Tensor([2, 31, 11109, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2141, 22, 2],"float32"), Tensor([2141, 22, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 4725, 1],"float32"), Tensor([2, 55, 4725, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([3832, 80],"float32"), Tensor([3832, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1480, 18, 2],"float32"), Tensor([1480, 18, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 8, 6804, 2],"float32"), Tensor([2, 8, 6804, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2230, 80],"float32"), Tensor([2230, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 52500, 1],"float32"), Tensor([1, 16, 52500, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([5026, 80],"float32"), Tensor([5026, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([6140, 80],"float32"), Tensor([6140, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([45],"float32"), Tensor([4789, 45],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 35, 3024, 2],"float32"), Tensor([2, 35, 3024, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3427, 78],"float32"), Tensor([3427, 78],"float32"), )
paddle.Tensor.__sub__(Tensor([3159, 80],"float32"), Tensor([3159, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1603, 80],"float32"), Tensor([1603, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2996, 9, 2],"float32"), Tensor([2996, 9, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 10, 2100, 2],"float32"), Tensor([2, 10, 2100, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 34, 2541],"float32"), Tensor([2, 34, 2541],"float32"), )
paddle.Tensor.__sub__(Tensor([3977, 10, 2],"float32"), Tensor([3977, 10, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 6804, 1],"float32"), Tensor([2, 12, 6804, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([4620, 80],"float32"), Tensor([4620, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 7, 44436, 1],"float32"), Tensor([1, 1, 44436, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1739, 80],"float32"), Tensor([1739, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([19184, 11],"float32"), Tensor([19184, 11],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 61500, 2],"float32"), Tensor([1, 61500, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([11892, 11],"float32"), Tensor([11892, 11],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 27, 10164, 1],"float32"), Tensor([1, 1, 10164, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([5, 46230, 2],"float32"), Tensor([5, 46230, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([70875],"float32"), Tensor([70875],"float32"), )
paddle.Tensor.__sub__(Tensor([24, 9382, 2],"float32"), Tensor([24, 9382, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([16, 6069],"float32"), Tensor([16, 6069],"float32"), )
paddle.Tensor.__sub__(Tensor([3, 52560, 2],"float32"), Tensor([3, 52560, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 33600, 1],"float32"), Tensor([1, 20, 33600, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([4315, 80],"float32"), Tensor([4315, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([160640, 1],"float32"), Tensor([160640, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([32, 3549],"float32"), Tensor([32, 3549],"float32"), )
paddle.Tensor.__sub__(Tensor([2186, 16, 2],"float32"), Tensor([2186, 16, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 3024, 1],"float32"), Tensor([2, 76, 3024, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([881, 80],"float32"), Tensor([881, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2816, 9, 2],"float32"), Tensor([2816, 9, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([63360],"float32"), Tensor([63360],"float32"), )
paddle.Tensor.__sub__(Tensor([4051, 16, 2],"float32"), Tensor([4051, 16, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3354, 10, 2],"float32"), Tensor([3354, 10, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([721, 80],"float32"), Tensor([721, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2231, 80],"float32"), Tensor([2231, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 17, 10164],"float32"), Tensor([2, 17, 10164],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 35, 3549],"float32"), Tensor([4, 35, 3549],"float32"), )
paddle.Tensor.__sub__(Tensor([3141, 80],"float32"), Tensor([3141, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3, 76380, 2],"float32"), Tensor([3, 76380, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([16660, 15],"float32"), Tensor([15],"float32"), )
paddle.Tensor.__sub__(Tensor([4446, 80],"float32"), Tensor([4446, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([],"float32"), Tensor([885918],"float32"), )
paddle.Tensor.__sub__(Tensor([4081, 19],"float32"), Tensor([4081, 19],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 11109, 1],"float32"), Tensor([2, 24, 11109, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([77625],"float32"), Tensor([77625],"float32"), )
paddle.Tensor.__sub__(Tensor([32, 2100, 2],"float32"), Tensor([32, 2100, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 4, 48384, 2],"float32"), Tensor([1, 4, 48384, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 90060, 2],"float32"), Tensor([1, 90060, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([8, 8400, 2],"float32"), Tensor([8, 8400, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2866, 23, 2],"float32"), Tensor([2866, 23, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3752, 80],"float32"), Tensor([3752, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([8, 3, 68, 68, 1],"float32"), 0.0, )
paddle.Tensor.__sub__(Tensor([4, 56430],"float32"), Tensor([4, 56430],"float32"), )
paddle.Tensor.__sub__(Tensor([3811, 7, 2],"float32"), Tensor([3811, 7, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([],"float32"), Tensor([849465],"float32"), )
paddle.Tensor.__sub__(Tensor([5768, 80],"float32"), Tensor([5768, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3, 47610],"float32"), Tensor([3, 47610],"float32"), )
paddle.Tensor.__sub__(Tensor([3424, 80],"float32"), Tensor([3424, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([6235, 18],"float32"), Tensor([6235, 18],"float32"), )
paddle.Tensor.__sub__(Tensor([1360, 38],"float32"), Tensor([1360, 38],"float32"), )
paddle.Tensor.__sub__(Tensor([2028, 18, 2],"float32"), Tensor([2028, 18, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([960, 80],"float32"), Tensor([960, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([16, 14, 2100],"float32"), Tensor([16, 14, 2100],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 202572],"float32"), Tensor([2, 202572],"float32"), )
paddle.Tensor.__sub__(Tensor([4138, 80],"float32"), Tensor([4138, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([26, 2026, 2],"float32"), Tensor([26, 2026, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1886, 80],"float32"), Tensor([1886, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 50250, 2],"float32"), Tensor([4, 50250, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2207, 80],"float32"), Tensor([2207, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([5020, 80],"float32"), Tensor([5020, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2649, 16, 2],"float32"), Tensor([2649, 16, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([8, 7, 4116, 2],"float32"), Tensor([8, 7, 4116, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1736, 18, 2],"float32"), Tensor([1736, 18, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1845, 80],"float32"), Tensor([1845, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([8816, 3, 2],"float32"), Tensor([8816, 3, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([770, 33, 2],"float32"), Tensor([770, 33, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([627, 80],"float32"), Tensor([627, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([],"float32"), Tensor([895208],"float32"), )
paddle.Tensor.__sub__(Tensor([3, 44220, 2],"float32"), Tensor([3, 44220, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1112, 80],"float32"), Tensor([1112, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 20, 6069, 2],"float32"), Tensor([2, 20, 6069, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([74100],"float32"), Tensor([74100],"float32"), )
paddle.Tensor.__sub__(Tensor([21618, 11],"float32"), Tensor([21618, 11],"float32"), )
paddle.Tensor.__sub__(Tensor([5896, 80],"float32"), Tensor([5896, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1720, 80],"float32"), Tensor([1720, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2939, 21, 2],"float32"), Tensor([2939, 21, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2728, 12, 2],"float32"), Tensor([2728, 12, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([160, 160, 2],"float32"), Tensor([160, 160, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([176, 1, 392],"float32"), Tensor([176, 392, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2846, 77],"float32"), Tensor([2846, 77],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 33600, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3201, 9, 2],"float32"), Tensor([3201, 9, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([4716, 80],"float32"), Tensor([4716, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1694, 80],"float32"), Tensor([1694, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 7581, 1],"float32"), Tensor([2, 56, 7581, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1803, 80],"float32"), Tensor([1803, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1803, 22, 2],"float32"), Tensor([1803, 22, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2232, 31, 2],"float32"), Tensor([2232, 31, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 4, 27216],"float32"), Tensor([1, 4, 27216],"float32"), )
paddle.Tensor.__sub__(Tensor([70560],"float32"), Tensor([70560],"float32"), )
paddle.Tensor.__sub__(Tensor([2983, 39],"float32"), Tensor([2983, 39],"float32"), )
paddle.Tensor.__sub__(Tensor([4443, 80],"float32"), Tensor([4443, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1489, 80],"float32"), Tensor([1489, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3, 68400],"float32"), Tensor([3, 68400],"float32"), )
paddle.Tensor.__sub__(Tensor([2476, 22],"float32"), Tensor([2476, 22],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 89, 2100],"float32"), Tensor([2, 89, 2100],"float32"), )
paddle.Tensor.__sub__(Tensor([2459, 42],"float32"), Tensor([2459, 42],"float32"), )
paddle.Tensor.__sub__(Tensor([831, 80],"float32"), Tensor([831, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2110, 80],"float32"), Tensor([2110, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2932, 30],"float32"), Tensor([2932, 30],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 3024, 1],"float32"), Tensor([2, 21, 3024, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 327360],"float32"), Tensor([1, 327360],"float32"), )
paddle.Tensor.__sub__(Tensor([1495, 22, 2],"float32"), Tensor([1495, 22, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3818, 7, 2],"float32"), Tensor([3818, 7, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1748, 30, 2],"float32"), Tensor([1748, 30, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1609, 80],"float32"), Tensor([1609, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 74550, 2],"float32"), Tensor([1, 74550, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([4932, 80],"float32"), Tensor([4932, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2093, 80],"float32"), Tensor([2093, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2496, 80],"float32"), Tensor([2496, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2790, 80],"float32"), Tensor([2790, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([56700],"float32"), Tensor([56700],"float32"), )
paddle.Tensor.__sub__(Tensor([1904, 16, 2],"float32"), Tensor([1904, 16, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 21, 7581],"float32"), Tensor([2, 21, 7581],"float32"), )
paddle.Tensor.__sub__(Tensor([1208, 80],"float32"), Tensor([1208, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([709, 80],"float32"), Tensor([709, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2502, 80],"float32"), Tensor([2502, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2018, 13, 2],"float32"), Tensor([2018, 13, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3662, 80],"float32"), Tensor([3662, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 60300, 2],"float32"), Tensor([4, 60300, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1068, 80],"float32"), Tensor([1068, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 23, 2541, 1],"float32"), Tensor([1, 1, 2541, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2842, 19, 2],"float32"), Tensor([2842, 19, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1278, 80],"float32"), Tensor([1278, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1302, 80],"float32"), Tensor([1302, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([347812, 1],"float32"), Tensor([347812, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 78120],"float32"), Tensor([4, 78120],"float32"), )
paddle.Tensor.__sub__(Tensor([3256, 80],"float32"), Tensor([3256, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 12096, 1],"float32"), Tensor([2, 24, 12096, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([5, 53760],"float32"), Tensor([5, 53760],"float32"), )
paddle.Tensor.__sub__(Tensor([5109, 80],"float32"), Tensor([5109, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1542, 37],"float32"), Tensor([1542, 37],"float32"), )
paddle.Tensor.__sub__(Tensor([2059, 24, 2],"float32"), Tensor([2059, 24, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([5250, 80],"float32"), Tensor([5250, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3108, 13, 2],"float32"), Tensor([3108, 13, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3152, 9, 2],"float32"), Tensor([3152, 9, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2967, 80],"float32"), Tensor([2967, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([5613, 80],"float32"), Tensor([5613, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2454, 80],"float32"), Tensor([2454, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 68625, 2],"float32"), Tensor([2, 68625, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([6057, 80],"float32"), Tensor([6057, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2304, 13, 2],"float32"), Tensor([2304, 13, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3033, 9, 2],"float32"), Tensor([3033, 9, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3451, 14, 2],"float32"), Tensor([3451, 14, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1961, 80],"float32"), Tensor([1961, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([6040, 80],"float32"), Tensor([6040, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 55680, 2],"float32"), Tensor([2, 55680, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 10, 8400],"float32"), Tensor([2, 10, 8400],"float32"), )
paddle.Tensor.__sub__(Tensor([5241, 80],"float32"), Tensor([5241, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([4378, 15],"float32"), Tensor([4378, 15],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 20, 6804, 1],"float32"), Tensor([1, 1, 6804, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 49, 2100, 2],"float32"), Tensor([2, 49, 2100, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([],"float32"), Tensor([863412],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 12, 7581],"float32"), Tensor([2, 12, 7581],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 11, 5376, 2],"float32"), Tensor([2, 11, 5376, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 65856, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2482, 12, 2],"float32"), Tensor([2482, 12, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 377514],"float32"), Tensor([1, 377514],"float32"), )
paddle.Tensor.__sub__(Tensor([3131, 10, 2],"float32"), Tensor([3131, 10, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3477, 80],"float32"), Tensor([3477, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([],"float32"), Tensor([916011],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 14, 21504],"float32"), Tensor([1, 14, 21504],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 77, 4116, 1],"float32"), Tensor([1, 1, 4116, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([100, 722, 2, 2],"float32"), Tensor([100, 722, 2, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2915, 42],"float32"), Tensor([2915, 42],"float32"), )
paddle.Tensor.__sub__(Tensor([3386, 80],"float32"), Tensor([3386, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 21, 3549, 1],"float32"), Tensor([1, 1, 3549, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 51, 3549, 1],"float32"), Tensor([1, 1, 3549, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([6008, 80],"float32"), Tensor([6008, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3360, 15, 2],"float32"), Tensor([3360, 15, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([16660, 10],"float32"), Tensor([10],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 22, 7581],"float32"), Tensor([2, 22, 7581],"float32"), )
paddle.Tensor.__sub__(Tensor([3008, 11, 2],"float32"), Tensor([3008, 11, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3844, 80],"float32"), Tensor([3844, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([14],"float32"), Tensor([10285, 14],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 58, 2100],"float32"), Tensor([2, 58, 2100],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 30, 24276, 1],"float32"), Tensor([1, 1, 24276, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([3255, 80],"float32"), Tensor([3255, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([16, 4725, 2],"float32"), Tensor([4725, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3716, 17, 2],"float32"), Tensor([3716, 17, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([4182, 80],"float32"), Tensor([4182, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 7, 9261],"float32"), Tensor([2, 7, 9261],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 44, 9261, 1],"float32"), Tensor([1, 1, 9261, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([4286, 80],"float32"), Tensor([4286, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 3, 52500],"float32"), Tensor([1, 3, 52500],"float32"), )
paddle.Tensor.__sub__(Tensor([1824, 80],"float32"), Tensor([1824, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 5376, 1],"float32"), Tensor([2, 62, 5376, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2469, 23, 2],"float32"), Tensor([2469, 23, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([4340, 80],"float32"), Tensor([4340, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3625, 80],"float32"), Tensor([3625, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([],"float32"), Tensor([963948],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 236616],"float32"), Tensor([1, 236616],"float32"), )
paddle.Tensor.__sub__(Tensor([1533, 20, 2],"float32"), Tensor([1533, 20, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1707, 24, 2],"float32"), Tensor([1707, 24, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3826, 15],"float32"), Tensor([3826, 15],"float32"), )
paddle.Tensor.__sub__(Tensor([152, 3024],"float32"), Tensor([152, 3024],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 1728, 50, 2],"float32"), Tensor([2, 1728, 50, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 16, 6885, 2],"float32"), Tensor([1, 16, 6885, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([3352, 14, 2],"float32"), Tensor([3352, 14, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([13395, 11],"float32"), Tensor([13395, 11],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 15, 44436, 1],"float32"), Tensor([1, 1, 44436, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2506, 80],"float32"), Tensor([2506, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([5688, 80],"float32"), Tensor([5688, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([10285, 14],"float32"), Tensor([10285, 14],"float32"), )
paddle.Tensor.__sub__(Tensor([5, 60480],"float32"), Tensor([5, 60480],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 5, 3549, 2],"float32"), Tensor([2, 5, 3549, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 75030, 2],"float32"), Tensor([2, 75030, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([43],"float32"), Tensor([19125, 43],"float32"), )
paddle.Tensor.__sub__(Tensor([4562, 45],"float32"), Tensor([4562, 45],"float32"), )
paddle.Tensor.__sub__(Tensor([1623, 30, 2],"float32"), Tensor([1623, 30, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 388740],"float32"), Tensor([1, 388740],"float32"), )
paddle.Tensor.__sub__(Tensor([2470, 80],"float32"), Tensor([2470, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2834, 12, 2],"float32"), Tensor([2834, 12, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 34, 2100, 2],"float32"), Tensor([2, 34, 2100, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1512, 80],"float32"), Tensor([1512, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1108, 38, 2],"float32"), Tensor([1108, 38, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1274, 80],"float32"), Tensor([1274, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([4165, 27],"float32"), Tensor([4165, 27],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 4725, 1],"float32"), Tensor([2, 30, 4725, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([3035, 10, 2],"float32"), Tensor([3035, 10, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 9, 52500, 1],"float32"), Tensor([1, 1, 52500, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 4116, 1],"float32"), Tensor([2, 13, 4116, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2328, 33],"float32"), Tensor([2328, 33],"float32"), )
paddle.Tensor.__sub__(Tensor([4428, 80],"float32"), Tensor([4428, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3, 56250],"float32"), Tensor([3, 56250],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 158580, 2],"float32"), Tensor([1, 158580, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([4016, 14],"float32"), Tensor([4016, 14],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 588, 50],"float32"), Tensor([2, 588, 50],"float32"), )
paddle.Tensor.__sub__(Tensor([1472, 40, 2],"float32"), Tensor([1472, 40, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2316, 80],"float32"), Tensor([2316, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 65856, 1],"float32"), Tensor([1, 14, 65856, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([16660, 15],"float32"), Tensor([16660, 15],"float32"), )
paddle.Tensor.__sub__(Tensor([2217, 12, 2],"float32"), Tensor([2217, 12, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 214830],"float32"), Tensor([1, 214830],"float32"), )
paddle.Tensor.__sub__(Tensor([5756, 80],"float32"), Tensor([5756, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3542, 8, 2],"float32"), Tensor([3542, 8, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([4258, 15, 2],"float32"), Tensor([4258, 15, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1994, 22, 2],"float32"), Tensor([1994, 22, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 6, 2100, 2],"float32"), Tensor([2, 6, 2100, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([845, 80],"float32"), Tensor([845, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 10164, 1],"float32"), Tensor([2, 32, 10164, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([4794, 80],"float32"), Tensor([4794, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 63, 4725, 1],"float32"), Tensor([1, 1, 4725, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([16660, 27],"float32"), Tensor([27],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 18, 27216, 1],"float32"), Tensor([1, 1, 27216, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2152, 80],"float32"), Tensor([2152, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2472, 24, 2],"float32"), Tensor([2472, 24, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([25],"float32"), Tensor([10285, 25],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 56640],"float32"), Tensor([1, 56640],"float32"), )
paddle.Tensor.__sub__(Tensor([10285, 35],"float32"), Tensor([10285, 35],"float32"), )
paddle.Tensor.__sub__(Tensor([4273, 6, 2],"float32"), Tensor([4273, 6, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([8, 47520],"float32"), Tensor([8, 47520],"float32"), )
paddle.Tensor.__sub__(Tensor([2494, 29, 2],"float32"), Tensor([2494, 29, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([7, 54870],"float32"), Tensor([7, 54870],"float32"), )
paddle.Tensor.__sub__(Tensor([5698, 80],"float32"), Tensor([5698, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2588, 18, 2],"float32"), Tensor([2588, 18, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 11109, 1],"float32"), Tensor([2, 19, 11109, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([40, 5376, 2],"float32"), Tensor([40, 5376, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([4414, 80],"float32"), Tensor([4414, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([643, 80],"float32"), Tensor([643, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([4341, 80],"float32"), Tensor([4341, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([679, 80],"float32"), Tensor([679, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([4898, 80],"float32"), Tensor([4898, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([269355],"float32"), Tensor([269355],"float32"), )
paddle.Tensor.__sub__(Tensor([56, 5440],"float32"), Tensor([56, 5440],"float32"), )
paddle.Tensor.__sub__(Tensor([1929, 90],"float32"), Tensor([1929, 90],"float32"), )
paddle.Tensor.__sub__(Tensor([2618, 35],"float32"), Tensor([2618, 35],"float32"), )
paddle.Tensor.__sub__(Tensor([1414, 18, 2],"float32"), Tensor([1414, 18, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 53760],"float32"), Tensor([2, 53760],"float32"), )
paddle.Tensor.__sub__(Tensor([69405, 1],"float32"), Tensor([69405, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 27216, 1],"float32"), Tensor([1, 17, 27216, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([24565, 17],"float32"), Tensor([17],"float32"), )
paddle.Tensor.__sub__(Tensor([1863, 80],"float32"), Tensor([1863, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([4780, 13, 2],"float32"), Tensor([4780, 13, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 67260],"float32"), Tensor([4, 67260],"float32"), )
paddle.Tensor.__sub__(Tensor([440433],"float32"), Tensor([440433],"float32"), )
paddle.Tensor.__sub__(Tensor([882, 80],"float32"), Tensor([882, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3585, 9, 2],"float32"), Tensor([3585, 9, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 74520, 2],"float32"), Tensor([2, 74520, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([6, 46305],"float32"), Tensor([6, 46305],"float32"), )
paddle.Tensor.__sub__(Tensor([8, 24, 2100],"float32"), Tensor([8, 24, 2100],"float32"), )
paddle.Tensor.__sub__(Tensor([4294, 80],"float32"), Tensor([4294, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([27540, 32],"float32"), Tensor([32],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 15, 4116, 1],"float32"), Tensor([1, 1, 4116, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 56700],"float32"), Tensor([2, 56700],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 9, 8500],"float32"), Tensor([1, 9, 8500],"float32"), )
paddle.Tensor.__sub__(Tensor([4582, 7, 2],"float32"), Tensor([4582, 7, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2069, 26],"float32"), Tensor([2069, 26],"float32"), )
paddle.Tensor.__sub__(Tensor([24, 2100, 2],"float32"), Tensor([24, 2100, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 77625],"float32"), Tensor([1, 77625],"float32"), )
paddle.Tensor.__sub__(Tensor([2726, 80],"float32"), Tensor([2726, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 2100, 1],"float32"), Tensor([2, 71, 2100, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([44],"float32"), Tensor([2577, 44],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 37044, 1],"float32"), Tensor([1, 4, 37044, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 72000],"float32"), Tensor([4, 72000],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 18, 4725, 1],"float32"), Tensor([1, 1, 4725, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 14, 6885],"float32"), Tensor([2, 14, 6885],"float32"), )
paddle.Tensor.__sub__(Tensor([5440, 11],"float32"), Tensor([5440, 11],"float32"), )
paddle.Tensor.__sub__(Tensor([3891, 13, 2],"float32"), Tensor([3891, 13, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2611, 80],"float32"), Tensor([2611, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([10285, 23],"float32"), Tensor([10285, 23],"float32"), )
paddle.Tensor.__sub__(Tensor([803, 80],"float32"), Tensor([803, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([8, 3, 7581],"float32"), Tensor([8, 3, 7581],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 48, 3024],"float32"), Tensor([2, 48, 3024],"float32"), )
paddle.Tensor.__sub__(Tensor([1593, 80],"float32"), Tensor([1593, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 21504, 1],"float32"), Tensor([1, 24, 21504, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([2504, 80],"float32"), Tensor([2504, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3808, 16],"float32"), Tensor([3808, 16],"float32"), )
paddle.Tensor.__sub__(Tensor([2147, 28, 2],"float32"), Tensor([2147, 28, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 8400, 1],"float32"), Tensor([2, 16, 8400, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1569, 19, 2],"float32"), Tensor([1569, 19, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1065, 80],"float32"), Tensor([1065, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2365, 11, 2],"float32"), Tensor([2365, 11, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2597, 14, 2],"float32"), Tensor([2597, 14, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1468, 22, 2],"float32"), Tensor([1468, 22, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2619, 12, 2],"float32"), Tensor([2619, 12, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([16, 6150, 2],"float32"), Tensor([16, 6150, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([4119, 13, 2],"float32"), Tensor([4119, 13, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([27, 2027, 2],"float32"), Tensor([27, 2027, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 24, 3024, 1],"float32"), Tensor([1, 1, 3024, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([1855, 80],"float32"), Tensor([1855, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 331251],"float32"), Tensor([1, 331251],"float32"), )
paddle.Tensor.__sub__(Tensor([3, 81000],"float32"), Tensor([3, 81000],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 10164, 1],"float32"), Tensor([2, 41, 10164, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([3830, 13, 2],"float32"), Tensor([3830, 13, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([32],"float32"), Tensor([4789, 32],"float32"), )
paddle.Tensor.__sub__(Tensor([2082, 80],"float32"), Tensor([2082, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([3060, 80],"float32"), Tensor([3060, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1814, 80],"float32"), Tensor([1814, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 13, 12096],"float32"), Tensor([2, 13, 12096],"float32"), )
paddle.Tensor.__sub__(Tensor([18, 6150],"float32"), Tensor([18, 6150],"float32"), )
paddle.Tensor.__sub__(Tensor([829, 80],"float32"), Tensor([829, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2350, 26, 2],"float32"), Tensor([2350, 26, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([35],"float32"), Tensor([3060, 35],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 5, 11109],"float32"), Tensor([2, 5, 11109],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 64170],"float32"), Tensor([1, 64170],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 40, 3024],"float32"), Tensor([2, 40, 3024],"float32"), )
paddle.Tensor.__truediv__(Tensor([3369, 52],"float32"), Tensor([3369, 52],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 15, 4116],"float32"), Tensor([2, 15, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([88, 2100],"float32"), Tensor([88, 2100],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 13125, 4],"float32"), Tensor([13125, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([20, 6150],"float32"), Tensor([20, 6150],"float32"), )
paddle.Tensor.__truediv__(Tensor([16, 3549, 4],"float32"), Tensor([3549, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([5685, 14],"float32"), Tensor([5685, 14],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 19, 24276],"float32"), Tensor([1, 19, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1680, 512],"float32"), Tensor([1680, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([68, 768, 3, 3],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([3396, 28],"float32"), Tensor([3396, 28],"float32"), )
paddle.Tensor.__truediv__(Tensor([2096, 24],"float32"), Tensor([2096, 24],"float32"), )
paddle.Tensor.__truediv__(Tensor([5, 69030],"float32"), Tensor([5, 69030],"float32"), )
paddle.Tensor.__truediv__(Tensor([3, 69345],"float32"), Tensor([3, 69345],"float32"), )
paddle.Tensor.__truediv__(Tensor([20, 6629],"float32"), 6628, )
paddle.Tensor.__truediv__(Tensor([1, 2, 27216],"float32"), Tensor([1, 2, 27216],"float32"), )
paddle.Tensor.__truediv__(Tensor([6, 72360],"float32"), Tensor([6, 72360],"float32"), )
paddle.Tensor.__truediv__(Tensor([68, 192, 3, 3],"float32"), 0.9998554356700223, )
paddle.Tensor.__truediv__(Tensor([356541],"float32"), Tensor([356541],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 17, 3024],"float32"), Tensor([2, 17, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 8, 6150],"float32"), Tensor([2, 8, 6150],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 55890],"float32"), Tensor([8, 55890],"float32"), )
paddle.Tensor.__truediv__(Tensor([4693, 15],"float32"), Tensor([4693, 15],"float32"), )
paddle.Tensor.__truediv__(Tensor([210056],"float32"), Tensor([],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 177276],"float32"), Tensor([1, 177276],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 239382],"float32"), Tensor([2, 239382],"float32"), )
paddle.Tensor.__truediv__(Tensor([1553, 512],"float32"), Tensor([1553, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3430, 21],"float32"), Tensor([3430, 21],"float32"), )
paddle.Tensor.__truediv__(Tensor([2989, 19],"float32"), Tensor([2989, 19],"float32"), )
paddle.Tensor.__truediv__(Tensor([128, 128, 3, 3],"float32"), 0.9991326382620116, )
paddle.Tensor.__truediv__(Tensor([2, 5, 5376],"float32"), Tensor([2, 5, 5376],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 18, 5376],"float32"), Tensor([2, 18, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([135036],"float32"), Tensor([135036],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 32, 4725],"float32"), Tensor([2, 32, 4725],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 314595],"float32"), Tensor([1, 314595],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 6, 9261],"float32"), Tensor([2, 6, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 24, 6069],"float32"), Tensor([2, 24, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3, 64170],"float32"), Tensor([3, 64170],"float32"), )
paddle.Tensor.__truediv__(Tensor([484, 512],"float32"), Tensor([484, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([5, 49680],"float32"), Tensor([5, 49680],"float32"), )
paddle.Tensor.__truediv__(Tensor([850, 128],"float32"), Tensor([850, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1024, 512, 1, 1],"float32"), 0.9992704001300187, )
paddle.Tensor.__truediv__(Tensor([2, 28, 10164],"float32"), Tensor([2, 28, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 48384, 4],"float32"), Tensor([48384, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 8, 2100],"float32"), Tensor([8, 8, 2100],"float32"), )
paddle.Tensor.__truediv__(Tensor([5316, 14],"float32"), Tensor([5316, 14],"float32"), )
paddle.Tensor.__truediv__(Tensor([68, 384, 3, 3],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([52640, 8],"float32"), Tensor([52640, 8],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 49, 2100],"float32"), Tensor([2, 49, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 35, 2100],"float32"), Tensor([4, 35, 2100],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 96, 3024],"float32"), Tensor([2, 96, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2002, 37],"float32"), Tensor([2002, 37],"float32"), )
paddle.Tensor.__truediv__(Tensor([4080, 34],"float32"), Tensor([4080, 34],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 34, 3024],"float32"), Tensor([2, 34, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([901, 128],"float32"), Tensor([901, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3358, 16],"float32"), Tensor([3358, 16],"float32"), )
paddle.Tensor.__truediv__(Tensor([3596, 21],"float32"), Tensor([3596, 21],"float32"), )
paddle.Tensor.__truediv__(Tensor([28, 8500],"float32"), Tensor([28, 8500],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 6, 27216],"float32"), Tensor([1, 6, 27216],"float32"), )
paddle.Tensor.__truediv__(Tensor([1024, 384],"float32"), Tensor([1024, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3294, 26],"float32"), Tensor([3294, 26],"float32"), )
paddle.Tensor.__truediv__(Tensor([384, 384, 1, 1],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([2, 28, 3549],"float32"), Tensor([2, 28, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2381, 27],"float32"), Tensor([2381, 27],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 42, 3024],"float32"), Tensor([2, 42, 3024],"float32"), )
paddle.Tensor.__truediv__(Tensor([3307, 20],"float32"), Tensor([3307, 20],"float32"), )
paddle.Tensor.__truediv__(Tensor([2278, 36],"float32"), Tensor([2278, 36],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 65, 6069],"float32"), Tensor([2, 65, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 82, 3549],"float32"), Tensor([2, 82, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 10, 9261],"float32"), Tensor([2, 10, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([408177],"float32"), Tensor([408177],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 19, 12096],"float32"), Tensor([2, 19, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1051, 512],"float32"), Tensor([1051, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 62400],"float32"), Tensor([8, 62400],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 9, 44436],"float32"), Tensor([1, 9, 44436],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 2, 9261],"float32"), Tensor([4, 2, 9261],"float32"), )
paddle.Tensor.__truediv__(Tensor([16, 3060, 4],"float32"), Tensor([3060, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([5, 72000],"float32"), Tensor([5, 72000],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 8, 37044],"float32"), Tensor([1, 8, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 77025],"float32"), Tensor([2, 77025],"float32"), )
paddle.Tensor.__truediv__(Tensor([974, 512],"float32"), Tensor([974, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3523, 31],"float32"), Tensor([3523, 31],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 60, 2100],"float32"), Tensor([2, 60, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([6006, 10],"float32"), Tensor([6006, 10],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 60, 4116],"float32"), Tensor([2, 60, 4116],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 60, 2541],"float32"), Tensor([2, 60, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 9, 40656],"float32"), Tensor([1, 9, 40656],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 19, 27216],"float32"), Tensor([1, 19, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 37, 2541],"float32"), Tensor([2, 37, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([201, 512],"float32"), Tensor([201, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([48, 3024],"float32"), Tensor([48, 3024],"float32"), )
paddle.Tensor.__truediv__(Tensor([5, 85320],"float32"), Tensor([5, 85320],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 4, 2541],"float32"), Tensor([8, 4, 2541],"float32"), )
paddle.Tensor.__truediv__(Tensor([64, 4116],"float32"), Tensor([64, 4116],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 15, 9261],"float32"), Tensor([2, 15, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 69300],"float32"), Tensor([1, 69300],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 32, 7581],"float32"), Tensor([2, 32, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1270, 512],"float32"), Tensor([1270, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([4029, 19],"float32"), Tensor([4029, 19],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 14, 27216],"float32"), Tensor([1, 14, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1126, 54],"float32"), Tensor([1126, 54],"float32"), )
paddle.Tensor.__truediv__(Tensor([28, 7681],"float32"), Tensor([28, 7681],"float32"), )
paddle.Tensor.__truediv__(Tensor([112, 2100],"float32"), Tensor([112, 2100],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 24, 9261],"float32"), Tensor([2, 24, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 16, 12096],"float32"), Tensor([2, 16, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([6, 51030],"float32"), Tensor([6, 51030],"float32"), )
paddle.Tensor.__truediv__(Tensor([88, 4116],"float32"), Tensor([88, 4116],"float32"), )
paddle.Tensor.__truediv__(Tensor([50, 3598],"float32"), Tensor([50, 3598],"float32"), )
paddle.Tensor.__truediv__(Tensor([70644, 2],"float32"), Tensor([70644, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3, 68340],"float32"), Tensor([3, 68340],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 331722],"float32"), Tensor([1, 331722],"float32"), )
paddle.Tensor.__truediv__(Tensor([2338, 26],"float32"), Tensor([2338, 26],"float32"), )
paddle.Tensor.__truediv__(Tensor([2985, 30],"float32"), Tensor([2985, 30],"float32"), )
paddle.Tensor.__truediv__(Tensor([70350],"float32"), Tensor([70350],"float32"), )
paddle.Tensor.__truediv__(Tensor([6, 80640],"float32"), Tensor([6, 80640],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 9, 6804],"float32"), Tensor([8, 9, 6804],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 38, 3549],"float32"), Tensor([2, 38, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 43560],"float32"), Tensor([8, 43560],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 94, 311],"float32"), 0.01382716049382716, )
paddle.Tensor.__truediv__(Tensor([4017, 17],"float32"), Tensor([4017, 17],"float32"), )
paddle.Tensor.__truediv__(Tensor([3, 77025],"float32"), Tensor([3, 77025],"float32"), )
paddle.Tensor.__truediv__(Tensor([2546, 48],"float32"), Tensor([2546, 48],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 7, 6069],"float32"), Tensor([8, 7, 6069],"float32"), )
paddle.Tensor.__truediv__(Tensor([331452],"float32"), Tensor([331452],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 29, 7581],"float32"), Tensor([2, 29, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 11, 5376],"float32"), Tensor([2, 11, 5376],"float32"), )
paddle.Tensor.__truediv__(Tensor([7, 50250],"float32"), Tensor([7, 50250],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 20, 6069],"float32"), Tensor([2, 20, 6069],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 60672],"float64"), Tensor([60672],"float64"), )
paddle.Tensor.__truediv__(Tensor([2, 196416],"float32"), Tensor([2, 196416],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 4, 33600],"float32"), Tensor([1, 4, 33600],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 38, 4116],"float32"), Tensor([2, 38, 4116],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 13, 2100],"float32"), Tensor([8, 13, 2100],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 6, 9382],"float32"), Tensor([2, 6, 9382],"float32"), )
paddle.Tensor.__truediv__(Tensor([63720],"float32"), Tensor([63720],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 39690],"float32"), Tensor([4, 39690],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 50, 8400],"float32"), Tensor([2, 50, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 76380],"float32"), Tensor([2, 76380],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 13, 21504],"float32"), Tensor([1, 13, 21504],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 72000],"float32"), Tensor([2, 72000],"float32"), )
paddle.Tensor.__truediv__(Tensor([84375],"float32"), Tensor([84375],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 18, 11109],"float32"), Tensor([2, 18, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 15, 9261],"float32"), Tensor([2, 15, 9261],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 22, 2541],"float32"), Tensor([8, 22, 2541],"float32"), )
paddle.Tensor.__truediv__(Tensor([68400],"float32"), Tensor([68400],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 42, 3549],"float32"), Tensor([2, 42, 3549],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 68985],"float32"), Tensor([1, 68985],"float32"), )
paddle.Tensor.__truediv__(Tensor([736, 512],"float32"), Tensor([736, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([768, 2, 16, 16],"float32"), 4.0, )
paddle.Tensor.__truediv__(Tensor([1, 38, 21504],"float32"), Tensor([1, 38, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 61236, 4],"float32"), Tensor([61236, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 15, 2541],"float32"), Tensor([8, 15, 2541],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 69930],"float32"), Tensor([1, 69930],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 76380],"float32"), Tensor([1, 76380],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 261888],"float32"), Tensor([1, 261888],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 58, 3549],"float32"), Tensor([2, 58, 3549],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 270096],"float32"), Tensor([1, 270096],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 52560],"float32"), Tensor([8, 52560],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 26, 2541],"float32"), Tensor([2, 26, 2541],"float32"), )
paddle.Tensor.__truediv__(Tensor([2611, 20],"float32"), Tensor([2611, 20],"float32"), )
paddle.Tensor.__truediv__(Tensor([2870, 20],"float32"), Tensor([2870, 20],"float32"), )
paddle.Tensor.__truediv__(Tensor([138120],"float32"), Tensor([138120],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 15, 27216],"float32"), Tensor([1, 15, 27216],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 46, 4725],"float32"), Tensor([2, 46, 4725],"float32"), )
paddle.Tensor.__truediv__(Tensor([288, 192, 3, 3],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([2, 15, 7681],"float32"), Tensor([2, 15, 7681],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 245823],"float32"), Tensor([2, 245823],"float32"), )
paddle.Tensor.__truediv__(Tensor([4763, 18],"float32"), Tensor([4763, 18],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 4, 8400],"float32"), Tensor([2, 4, 8400],"float32"), )
paddle.Tensor.__truediv__(Tensor([1662, 35],"float32"), Tensor([1662, 35],"float32"), )
paddle.Tensor.__truediv__(Tensor([6, 75030],"float32"), Tensor([6, 75030],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 294624],"float32"), Tensor([1, 294624],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 3888, 50],"float32"), Tensor([2, 3888, 50],"float32"), )
paddle.Tensor.__truediv__(Tensor([4789, 23],"float32"), Tensor([4789, 23],"float32"), )
paddle.Tensor.__truediv__(Tensor([10, 9382],"float32"), Tensor([10, 9382],"float32"), )
paddle.Tensor.__truediv__(Tensor([69930],"float32"), Tensor([69930],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 63720],"float32"), Tensor([2, 63720],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 7, 33600],"float32"), Tensor([1, 7, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([4786, 12],"float32"), Tensor([4786, 12],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 12, 10164],"float32"), Tensor([2, 12, 10164],"float32"), )
paddle.Tensor.__truediv__(Tensor([59250],"float32"), Tensor([59250],"float32"), )
paddle.Tensor.__truediv__(Tensor([3, 63720],"float32"), Tensor([3, 63720],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 24, 6804],"float32"), Tensor([2, 24, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 64, 4116],"float32"), Tensor([2, 64, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3904, 28],"float32"), Tensor([3904, 28],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 5, 33600],"float32"), Tensor([1, 5, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 38, 12096],"float32"), Tensor([2, 38, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 43, 2541],"float32"), Tensor([2, 43, 2541],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 14, 48384],"float32"), Tensor([1, 14, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 63, 2541],"float32"), Tensor([2, 63, 2541],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 322245],"float32"), Tensor([1, 322245],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 32, 1792],"float32"), 3, )
paddle.Tensor.__truediv__(Tensor([50, 1050],"float32"), Tensor([50, 1050],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 3, 37044],"float32"), Tensor([1, 3, 37044],"float32"), )
paddle.Tensor.__truediv__(Tensor([74100],"float32"), Tensor([74100],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 46, 7581],"float32"), Tensor([2, 46, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([30000, 2],"float32"), Tensor([30000, 2],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 2, 52500],"float32"), Tensor([1, 2, 52500],"float32"), )
paddle.Tensor.__truediv__(Tensor([5, 53460],"float32"), Tensor([5, 53460],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 8, 52500],"float32"), Tensor([1, 8, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([929, 128],"float32"), Tensor([929, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3072, 42],"float32"), Tensor([3072, 42],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 4, 7581],"float32"), Tensor([8, 4, 7581],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 227919],"float32"), Tensor([2, 227919],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 80400],"float32"), Tensor([4, 80400],"float32"), )
paddle.Tensor.__truediv__(Tensor([248616],"float32"), Tensor([248616],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 17, 4116],"float32"), Tensor([2, 17, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1943, 512],"float32"), Tensor([1943, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([12, 5440],"float32"), Tensor([12, 5440],"float32"), )
paddle.Tensor.__truediv__(Tensor([2218, 47],"float32"), Tensor([2218, 47],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 16, 6804],"float32"), Tensor([2, 16, 6804],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 150402],"float32"), Tensor([2, 150402],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 72360],"float32"), Tensor([2, 72360],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 1, 241, 241],"float32"), 4.49996, )
paddle.Tensor.__truediv__(Tensor([1, 2, 56784],"float32"), Tensor([1, 2, 56784],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 39, 3024],"float32"), Tensor([2, 39, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([87600],"float32"), Tensor([87600],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 2, 11109],"float32"), Tensor([8, 2, 11109],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 223827],"float32"), Tensor([2, 223827],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 42, 9261],"float32"), Tensor([2, 42, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3025, 17],"float32"), Tensor([3025, 17],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 62310],"float32"), Tensor([4, 62310],"float32"), )
paddle.Tensor.__truediv__(Tensor([61380],"float32"), Tensor([61380],"float32"), )
paddle.Tensor.__truediv__(Tensor([136, 3024],"float32"), Tensor([136, 3024],"float32"), )
paddle.Tensor.__truediv__(Tensor([3887, 128],"float32"), Tensor([3887, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3708, 38],"float32"), Tensor([3708, 38],"float32"), )
paddle.Tensor.__truediv__(Tensor([2844, 20],"float32"), Tensor([2844, 20],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 36, 12096],"float32"), Tensor([2, 36, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 377514],"float32"), Tensor([1, 377514],"float32"), )
paddle.Tensor.__truediv__(Tensor([52500],"float32"), Tensor([52500],"float32"), )
paddle.Tensor.__truediv__(Tensor([296700],"float32"), Tensor([296700],"float32"), )
paddle.Tensor.__truediv__(Tensor([240, 960, 1, 1],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([1, 91980],"float32"), Tensor([1, 91980],"float32"), )
paddle.Tensor.__truediv__(Tensor([277539],"float32"), Tensor([277539],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 21, 33600],"float32"), Tensor([1, 21, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([15083, 7],"float32"), Tensor([15083, 7],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 32, 3024],"float32"), Tensor([2, 32, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 20, 4116],"float32"), Tensor([2, 20, 4116],"float32"), )
paddle.Tensor.__truediv__(Tensor([640, 640, 1, 1],"float32"), 0.9998318674381506, )
paddle.Tensor.__truediv__(Tensor([16, 14, 2100],"float32"), Tensor([16, 14, 2100],"float32"), )
paddle.Tensor.__truediv__(Tensor([260865],"float32"), Tensor([260865],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 16, 40656],"float32"), Tensor([1, 16, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 47, 2100],"float32"), Tensor([2, 47, 2100],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 61, 2100],"float32"), Tensor([2, 61, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2721, 19],"float32"), Tensor([2721, 19],"float32"), )
paddle.Tensor.__truediv__(Tensor([7, 64320],"float32"), Tensor([7, 64320],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 58, 2541],"float32"), Tensor([2, 58, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 19, 24276],"float32"), Tensor([1, 19, 24276],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 63000],"float32"), Tensor([1, 63000],"float32"), )
paddle.Tensor.__truediv__(Tensor([301302],"float32"), Tensor([301302],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 11, 21504],"float32"), Tensor([1, 11, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([226, 226],"float32"), Tensor([226, 226],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 32, 6804],"float32"), Tensor([2, 32, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([384, 1536, 1, 1],"float32"), 0.9998554356700223, )
paddle.Tensor.__truediv__(Tensor([1, 15, 61236],"float32"), Tensor([1, 15, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 6, 5440],"float32"), Tensor([2, 6, 5440],"float32"), )
paddle.Tensor.__truediv__(Tensor([2061, 99],"float32"), Tensor([2061, 99],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 11, 4725],"float32"), Tensor([2, 11, 4725],"float32"), )
paddle.Tensor.__truediv__(Tensor([3060, 21],"float32"), Tensor([3060, 21],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 18, 6804],"float32"), Tensor([2, 18, 6804],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 17, 44436],"float32"), Tensor([1, 17, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 32, 3549],"float32"), Tensor([2, 32, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 73125],"float32"), Tensor([1, 73125],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 100, 3024],"float32"), Tensor([2, 100, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 5, 75600],"float32"), Tensor([1, 5, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 22, 44436],"float32"), Tensor([1, 22, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 63315],"float32"), Tensor([1, 63315],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 47610],"float32"), Tensor([2, 47610],"float32"), )
paddle.Tensor.__truediv__(Tensor([75030],"float32"), Tensor([75030],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 24, 2100],"float32"), Tensor([8, 24, 2100],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 73500],"float32"), Tensor([4, 73500],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 77490],"float32"), Tensor([2, 77490],"float32"), )
paddle.Tensor.__truediv__(Tensor([3, 86940],"float32"), Tensor([3, 86940],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 25, 24276],"float32"), Tensor([1, 25, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 62, 6804],"float32"), Tensor([2, 62, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 14, 11109],"float32"), Tensor([2, 14, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 56, 8400],"float32"), Tensor([2, 56, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 23, 8400],"float32"), Tensor([2, 23, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 227919],"float32"), Tensor([1, 227919],"float32"), )
paddle.Tensor.__truediv__(Tensor([7, 69345],"float32"), Tensor([7, 69345],"float32"), )
paddle.Tensor.__truediv__(Tensor([1856, 512],"float32"), Tensor([1856, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([241731],"float32"), Tensor([241731],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 9261, 4],"float32"), Tensor([9261, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3398, 15],"float32"), Tensor([3398, 15],"float32"), )
paddle.Tensor.__truediv__(Tensor([2379, 30],"float32"), Tensor([2379, 30],"float32"), )
paddle.Tensor.__truediv__(Tensor([5, 76590],"float32"), Tensor([5, 76590],"float32"), )
paddle.Tensor.__truediv__(Tensor([4016, 14],"float32"), Tensor([4016, 14],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 11, 52500],"float32"), Tensor([1, 11, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 68160],"float32"), Tensor([2, 68160],"float32"), )
paddle.Tensor.__truediv__(Tensor([16, 4789],"float32"), Tensor([16, 4789],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 14, 6150],"float32"), Tensor([1, 14, 6150],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 212784],"float32"), Tensor([1, 212784],"float32"), )
paddle.Tensor.__truediv__(Tensor([53, 2053],"float32"), Tensor([53, 2053],"float32"), )
paddle.Tensor.__truediv__(Tensor([261888],"float32"), Tensor([261888],"float32"), )
paddle.Tensor.__truediv__(Tensor([2476, 22],"float32"), Tensor([2476, 22],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 53, 4116],"float32"), Tensor([2, 53, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 13, 3549],"float32"), Tensor([8, 13, 3549],"float32"), )
paddle.Tensor.__truediv__(Tensor([160, 1024, 1, 1],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([256, 1280, 1, 1],"float32"), 0.9975949255486735, )
paddle.Tensor.__truediv__(Tensor([2, 4, 7581],"float32"), Tensor([2, 4, 7581],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 237360],"float32"), Tensor([1, 237360],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 217689],"float32"), Tensor([1, 217689],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 38, 5376],"float32"), Tensor([2, 38, 5376],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 66, 2100],"float32"), Tensor([2, 66, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 22, 10164],"float32"), Tensor([2, 22, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 24, 27216],"float32"), Tensor([1, 24, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 65280],"float32"), Tensor([2, 65280],"float32"), )
paddle.Tensor.__truediv__(Tensor([320, 320, 1, 1],"float32"), 0.9997265714068944, )
paddle.Tensor.__truediv__(Tensor([1893, 33],"float32"), Tensor([1893, 33],"float32"), )
paddle.Tensor.__truediv__(Tensor([5447, 73],"float32"), Tensor([5447, 73],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 67200],"float32"), Tensor([2, 67200],"float32"), )
paddle.Tensor.__truediv__(Tensor([10, 8500],"float32"), Tensor([10, 8500],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 64350],"float32"), Tensor([2, 64350],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 20, 6804],"float32"), Tensor([2, 20, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1177, 512],"float32"), Tensor([1177, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([4057, 15],"float32"), Tensor([4057, 15],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 52080],"float32"), Tensor([2, 52080],"float32"), )
paddle.Tensor.__truediv__(Tensor([4779, 11],"float32"), Tensor([4779, 11],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 67335],"float32"), Tensor([4, 67335],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 41, 6069],"float32"), Tensor([2, 41, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 59, 6804],"float32"), Tensor([2, 59, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([33600, 2],"float32"), Tensor([33600, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 16, 3549],"float32"), Tensor([8, 16, 3549],"float32"), )
paddle.Tensor.__truediv__(Tensor([48, 2048],"float32"), Tensor([48, 2048],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 4, 37044],"float32"), Tensor([1, 4, 37044],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 331452],"float32"), Tensor([1, 331452],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 48, 3549],"float32"), Tensor([2, 48, 3549],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 47, 2541],"float32"), Tensor([2, 47, 2541],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 27, 6804],"float32"), Tensor([2, 27, 6804],"float32"), )
paddle.Tensor.__truediv__(Tensor([4049, 18],"float32"), Tensor([4049, 18],"float32"), )
paddle.Tensor.__truediv__(Tensor([20, 6885],"float32"), Tensor([20, 6885],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 14, 3549],"float32"), Tensor([8, 14, 3549],"float32"), )
paddle.Tensor.__truediv__(Tensor([3, 76800],"float32"), Tensor([3, 76800],"float32"), )
paddle.Tensor.__truediv__(Tensor([1192, 512],"float32"), Tensor([1192, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([440433],"float32"), Tensor([440433],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 286464],"float32"), Tensor([1, 286464],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 22, 8400],"float32"), Tensor([2, 22, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([16, 7, 2541],"float32"), Tensor([16, 7, 2541],"float32"), )
paddle.Tensor.__truediv__(Tensor([2541, 28],"float32"), Tensor([2541, 28],"float32"), )
paddle.Tensor.__truediv__(Tensor([68985],"float32"), Tensor([68985],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 10, 7581],"float32"), Tensor([4, 10, 7581],"float32"), )
paddle.Tensor.__truediv__(Tensor([64, 6804],"float32"), Tensor([64, 6804],"float32"), )
paddle.Tensor.__truediv__(Tensor([104, 4116],"float32"), Tensor([104, 4116],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 365211],"float32"), Tensor([1, 365211],"float32"), )
paddle.Tensor.__truediv__(Tensor([72, 4116],"float32"), Tensor([72, 4116],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 25, 4116],"float32"), Tensor([2, 25, 4116],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 84420],"float32"), Tensor([4, 84420],"float32"), )
paddle.Tensor.__truediv__(Tensor([2328, 33],"float32"), Tensor([2328, 33],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 13, 4725],"float32"), Tensor([2, 13, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([3849, 38],"float32"), Tensor([3849, 38],"float32"), )
paddle.Tensor.__truediv__(Tensor([1910, 27],"float32"), Tensor([1910, 27],"float32"), )
paddle.Tensor.__truediv__(Tensor([2616, 35],"float32"), Tensor([2616, 35],"float32"), )
paddle.Tensor.__truediv__(Tensor([6, 39690],"float32"), Tensor([6, 39690],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 57960],"float32"), Tensor([1, 57960],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 66, 6069],"float32"), Tensor([2, 66, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 6, 6069],"float32"), Tensor([2, 6, 6069],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 369105],"float32"), Tensor([1, 369105],"float32"), )
paddle.Tensor.__truediv__(Tensor([5, 64170],"float32"), Tensor([5, 64170],"float32"), )
paddle.Tensor.__truediv__(Tensor([1796, 512],"float32"), Tensor([1796, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 7, 6150],"float32"), Tensor([2, 7, 6150],"float32"), )
paddle.Tensor.__truediv__(Tensor([4293, 14],"float32"), Tensor([4293, 14],"float32"), )
paddle.Tensor.__truediv__(Tensor([57600],"float32"), Tensor([57600],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 75375],"float32"), Tensor([4, 75375],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 12, 5376],"float32"), Tensor([2, 12, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 48, 6804],"float32"), Tensor([2, 48, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([512, 256, 1, 1],"float32"), 0.9992704001300187, )
paddle.Tensor.__truediv__(Tensor([2, 113, 2541],"float32"), Tensor([2, 113, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 2, 37044],"float32"), Tensor([1, 2, 37044],"float32"), )
paddle.Tensor.__truediv__(Tensor([3003, 24],"float32"), Tensor([3003, 24],"float32"), )
paddle.Tensor.__truediv__(Tensor([3425, 19],"float32"), Tensor([3425, 19],"float32"), )
paddle.Tensor.__truediv__(Tensor([1123, 512],"float32"), Tensor([1123, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 57, 2541],"float32"), Tensor([2, 57, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([5, 81000],"float32"), Tensor([5, 81000],"float32"), )
paddle.Tensor.__truediv__(Tensor([12, 8500],"float32"), Tensor([12, 8500],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 3, 9382],"float32"), Tensor([2, 3, 9382],"float32"), )
paddle.Tensor.__truediv__(Tensor([4551, 29],"float32"), Tensor([4551, 29],"float32"), )
paddle.Tensor.__truediv__(Tensor([2415, 22],"float32"), Tensor([2415, 22],"float32"), )
paddle.Tensor.__truediv__(Tensor([56, 7681],"float32"), Tensor([56, 7681],"float32"), )
paddle.Tensor.__truediv__(Tensor([386694],"float32"), Tensor([386694],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 68, 4116],"float32"), Tensor([2, 68, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([278562],"float32"), Tensor([278562],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 36, 4725],"float32"), Tensor([2, 36, 4725],"float32"), )
paddle.Tensor.__truediv__(Tensor([1326, 77],"float32"), Tensor([1326, 77],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 41, 3024],"float32"), Tensor([2, 41, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([346086],"float32"), Tensor([346086],"float32"), )
paddle.Tensor.__truediv__(Tensor([3, 50250],"float32"), Tensor([3, 50250],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 18, 27216],"float32"), Tensor([1, 18, 27216],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 117, 4116],"float32"), Tensor([2, 117, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([7, 51750],"float32"), Tensor([7, 51750],"float32"), )
paddle.Tensor.__truediv__(Tensor([220968],"float32"), Tensor([],"float32"), )
paddle.Tensor.__truediv__(Tensor([3351, 67],"float32"), Tensor([3351, 67],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 64, 2541],"float32"), Tensor([2, 64, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([10, 38940],"float32"), Tensor([10, 38940],"float32"), )
paddle.Tensor.__truediv__(Tensor([2517, 27],"float32"), Tensor([2517, 27],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 5, 37044],"float32"), Tensor([1, 5, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 40, 2541],"float32"), Tensor([2, 40, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 8, 10285],"float32"), Tensor([1, 8, 10285],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 302832],"float32"), Tensor([1, 302832],"float32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.abs(Tensor([1844, 80],"float32"), )
paddle.Tensor.abs(Tensor([11232, 80],"float32"), )
paddle.Tensor.abs(Tensor([6466, 80],"float32"), )
paddle.Tensor.abs(Tensor([2863, 80],"float32"), )
paddle.Tensor.abs(Tensor([6522, 80],"float32"), )
paddle.Tensor.abs(Tensor([2408, 80],"float32"), )
paddle.Tensor.abs(Tensor([1796, 80],"float32"), )
paddle.Tensor.abs(Tensor([2518, 80],"float32"), )
paddle.Tensor.abs(Tensor([1605, 80],"float32"), )
paddle.Tensor.abs(Tensor([3515, 80],"float32"), )
paddle.Tensor.abs(Tensor([9219, 80],"float32"), )
paddle.Tensor.abs(Tensor([2836, 80],"float32"), )
paddle.Tensor.abs(Tensor([1748, 80],"float32"), )
paddle.Tensor.abs(Tensor([2639, 80],"float32"), )
paddle.Tensor.abs(Tensor([9412, 80],"float32"), )
paddle.Tensor.abs(Tensor([3826, 80],"float32"), )
paddle.Tensor.abs(Tensor([2760, 80],"float32"), )
paddle.Tensor.abs(Tensor([2738, 80],"float32"), )
paddle.Tensor.abs(Tensor([9505, 80],"float32"), )
paddle.Tensor.abs(Tensor([10355, 80],"float32"), )
paddle.Tensor.abs(Tensor([10024, 80],"float32"), )
paddle.Tensor.abs(Tensor([10269, 80],"float32"), )
paddle.Tensor.abs(Tensor([7180, 80],"float32"), )
paddle.Tensor.abs(Tensor([7230, 80],"float32"), )
paddle.Tensor.abs(Tensor([2004, 80],"float32"), )
paddle.Tensor.abs(Tensor([3134, 80],"float32"), )
paddle.Tensor.abs(Tensor([50706, 11],"float32"), )
paddle.Tensor.abs(Tensor([6974, 80],"float32"), )
paddle.Tensor.abs(Tensor([9520, 80],"float32"), )
paddle.Tensor.abs(Tensor([1486, 80],"float32"), )
paddle.Tensor.abs(Tensor([7701, 80],"float32"), )
paddle.Tensor.abs(Tensor([1438, 80],"float32"), )
paddle.Tensor.abs(Tensor([4935, 80],"float32"), )
paddle.Tensor.abs(Tensor([1892, 80],"float32"), )
paddle.Tensor.abs(Tensor([12045, 80],"float32"), )
paddle.Tensor.abs(Tensor([3577, 80],"float32"), )
paddle.Tensor.abs(Tensor([5884, 80],"float32"), )
paddle.Tensor.abs(Tensor([8230, 80],"float32"), )
paddle.Tensor.abs(Tensor([3361, 80],"float32"), )
paddle.Tensor.abs(Tensor([6798, 80],"float32"), )
paddle.Tensor.abs(Tensor([3458, 80],"float32"), )
paddle.Tensor.abs(Tensor([11640, 80],"float32"), )
paddle.Tensor.abs(Tensor([11400, 11],"float32"), )
paddle.Tensor.abs(Tensor([4342, 80],"float32"), )
paddle.Tensor.abs(Tensor([11930, 80],"float32"), )
paddle.Tensor.abs(Tensor([1442, 80],"float32"), )
paddle.Tensor.abs(Tensor([3228, 80],"float32"), )
paddle.Tensor.abs(Tensor([3208, 80],"float32"), )
paddle.Tensor.abs(Tensor([8079, 80],"float32"), )
paddle.Tensor.abs(Tensor([1495, 80],"float32"), )
paddle.Tensor.abs(Tensor([2680, 80],"float32"), )
paddle.Tensor.abs(Tensor([5504, 80],"float32"), )
paddle.Tensor.abs(Tensor([6772, 80],"float32"), )
paddle.Tensor.abs(Tensor([4452, 80],"float32"), )
paddle.Tensor.abs(Tensor([1575, 80],"float32"), )
paddle.Tensor.abs(Tensor([6276, 80],"float32"), )
paddle.Tensor.abs(Tensor([2294, 80],"float32"), )
paddle.Tensor.abs(Tensor([11373, 80],"float32"), )
paddle.Tensor.abs(Tensor([11920, 80],"float32"), )
paddle.Tensor.abs(Tensor([6822, 80],"float32"), )
paddle.Tensor.abs(Tensor([3330, 80],"float32"), )
paddle.Tensor.abs(Tensor([3618, 80],"float32"), )
paddle.Tensor.abs(Tensor([2181, 80],"float32"), )
paddle.Tensor.abs(Tensor([7422, 80],"float32"), )
paddle.Tensor.abs(Tensor([4470, 80],"float32"), )
paddle.Tensor.abs(Tensor([1317, 80],"float32"), )
paddle.Tensor.abs(Tensor([6807, 80],"float32"), )
paddle.Tensor.abs(Tensor([2883, 80],"float32"), )
paddle.Tensor.abs(Tensor([6771, 80],"float32"), )
paddle.Tensor.abs(Tensor([9308, 80],"float32"), )
paddle.Tensor.abs(Tensor([2272, 80],"float32"), )
paddle.Tensor.abs(Tensor([9084, 80],"float32"), )
paddle.Tensor.abs(Tensor([6044, 80],"float32"), )
paddle.Tensor.abs(Tensor([3936, 80],"float32"), )
paddle.Tensor.abs(Tensor([8608, 80],"float32"), )
paddle.Tensor.abs(Tensor([11204, 80],"float32"), )
paddle.Tensor.abs(Tensor([5871, 80],"float32"), )
paddle.Tensor.abs(Tensor([3316, 80],"float32"), )
paddle.Tensor.abs(Tensor([3100, 80],"float32"), )
paddle.Tensor.abs(Tensor([7766, 80],"float32"), )
paddle.Tensor.abs(Tensor([5964, 80],"float32"), )
paddle.Tensor.abs(Tensor([5870, 80],"float32"), )
paddle.Tensor.abs(Tensor([3278, 80],"float32"), )
paddle.Tensor.abs(Tensor([1403, 80],"float32"), )
paddle.Tensor.abs(Tensor([8496, 80],"float32"), )
paddle.Tensor.abs(Tensor([4846, 80],"float32"), )
paddle.Tensor.abs(Tensor([9175, 80],"float32"), )
paddle.Tensor.abs(Tensor([6486, 80],"float32"), )
paddle.Tensor.abs(Tensor([7565, 80],"float32"), )
paddle.Tensor.abs(Tensor([6905, 80],"float32"), )
paddle.Tensor.abs(Tensor([1357, 80],"float32"), )
paddle.Tensor.abs(Tensor([48960, 4],"float32"), )
paddle.Tensor.abs(Tensor([1520, 80],"float32"), )
paddle.Tensor.abs(Tensor([3614, 80],"float32"), )
paddle.Tensor.abs(Tensor([3336, 80],"float32"), )
paddle.Tensor.abs(Tensor([11236, 80],"float32"), )
paddle.Tensor.abs(Tensor([1737, 80],"float32"), )
paddle.Tensor.abs(Tensor([4367, 80],"float32"), )
paddle.Tensor.abs(Tensor([4990, 80],"float32"), )
paddle.Tensor.abs(Tensor([7950, 80],"float32"), )
paddle.Tensor.abs(Tensor([8698, 80],"float32"), )
paddle.Tensor.abs(Tensor([11297, 80],"float32"), )
paddle.Tensor.abs(Tensor([4262, 80],"float32"), )
paddle.Tensor.abs(Tensor([8290, 80],"float32"), )
paddle.Tensor.abs(Tensor([3766, 80],"float32"), )
paddle.Tensor.abs(Tensor([11892, 80],"float32"), )
paddle.Tensor.abs(Tensor([8755, 80],"float32"), )
paddle.Tensor.abs(Tensor([2981, 80],"float32"), )
paddle.Tensor.abs(Tensor([2732, 80],"float32"), )
paddle.Tensor.abs(Tensor([11913, 80],"float32"), )
paddle.Tensor.abs(Tensor([11552, 80],"float32"), )
paddle.Tensor.abs(Tensor([7609, 80],"float32"), )
paddle.Tensor.abs(Tensor([6528, 80],"float32"), )
paddle.Tensor.abs(Tensor([8097, 80],"float32"), )
paddle.Tensor.abs(Tensor([1971, 80],"float32"), )
paddle.Tensor.abs(Tensor([10648, 80],"float32"), )
paddle.Tensor.abs(Tensor([5905, 80],"float32"), )
paddle.Tensor.abs(Tensor([3982, 80],"float32"), )
paddle.Tensor.abs(Tensor([2539, 80],"float32"), )
paddle.Tensor.abs(Tensor([5334, 80],"float32"), )
paddle.Tensor.abs(Tensor([8430, 80],"float32"), )
paddle.Tensor.abs(Tensor([2093, 80],"float32"), )
paddle.Tensor.abs(Tensor([2566, 80],"float32"), )
paddle.Tensor.abs(Tensor([2392, 80],"float32"), )
paddle.Tensor.abs(Tensor([9669, 80],"float32"), )
paddle.Tensor.abs(Tensor([9135, 80],"float32"), )
paddle.Tensor.abs(Tensor([2634, 80],"float32"), )
paddle.Tensor.abs(Tensor([7929, 80],"float32"), )
paddle.Tensor.abs(Tensor([3981, 80],"float32"), )
paddle.Tensor.abs(Tensor([5972, 80],"float32"), )
paddle.Tensor.abs(Tensor([9269, 80],"float32"), )
paddle.Tensor.abs(Tensor([4770, 80],"float32"), )
paddle.Tensor.abs(Tensor([3213, 80],"float32"), )
paddle.Tensor.abs(Tensor([5732, 80],"float32"), )
paddle.Tensor.abs(Tensor([1743, 80],"float32"), )
paddle.Tensor.abs(Tensor([8008, 80],"float32"), )
paddle.Tensor.abs(Tensor([8168, 80],"float32"), )
paddle.Tensor.abs(Tensor([3511, 80],"float32"), )
paddle.Tensor.abs(Tensor([3646, 80],"float32"), )
paddle.Tensor.abs(Tensor([2056, 80],"float32"), )
paddle.Tensor.abs(Tensor([8134, 80],"float32"), )
paddle.Tensor.abs(Tensor([7404, 80],"float32"), )
paddle.Tensor.abs(Tensor([6942, 80],"float32"), )
paddle.Tensor.abs(Tensor([3183, 80],"float32"), )
paddle.Tensor.abs(Tensor([5704, 80],"float32"), )
paddle.Tensor.abs(Tensor([102400, 1],"float32"), )
paddle.Tensor.abs(Tensor([2370, 80],"float32"), )
paddle.Tensor.abs(Tensor([3453, 80],"float32"), )
paddle.Tensor.abs(Tensor([1502, 80],"float32"), )
paddle.Tensor.abs(Tensor([1445, 80],"float32"), )
paddle.Tensor.abs(Tensor([1855, 80],"float32"), )
paddle.Tensor.abs(Tensor([2204, 80],"float32"), )
paddle.Tensor.abs(Tensor([7492, 80],"float32"), )
paddle.Tensor.abs(Tensor([4521, 80],"float32"), )
paddle.Tensor.abs(Tensor([4586, 80],"float32"), )
paddle.Tensor.abs(Tensor([6698, 80],"float32"), )
paddle.Tensor.abs(Tensor([3382, 80],"float32"), )
paddle.Tensor.abs(Tensor([2125, 80],"float32"), )
paddle.Tensor.abs(Tensor([2267, 80],"float32"), )
paddle.Tensor.abs(Tensor([5760, 80],"float32"), )
paddle.Tensor.abs(Tensor([9052, 80],"float32"), )
paddle.Tensor.abs(Tensor([7638, 80],"float32"), )
paddle.Tensor.abs(Tensor([182328, 1],"float32"), )
paddle.Tensor.abs(Tensor([8724, 80],"float32"), )
paddle.Tensor.abs(Tensor([7256, 80],"float32"), )
paddle.Tensor.abs(Tensor([3900, 80],"float32"), )
paddle.Tensor.abs(Tensor([5572, 80],"float32"), )
paddle.Tensor.abs(Tensor([6242, 80],"float32"), )
paddle.Tensor.abs(Tensor([5792, 80],"float32"), )
paddle.Tensor.abs(Tensor([5024, 80],"float32"), )
paddle.Tensor.abs(Tensor([1997, 80],"float32"), )
paddle.Tensor.abs(Tensor([8778, 80],"float32"), )
paddle.Tensor.abs(Tensor([10509, 80],"float32"), )
paddle.Tensor.abs(Tensor([3585, 80],"float32"), )
paddle.Tensor.abs(Tensor([8004, 80],"float32"), )
paddle.Tensor.abs(Tensor([9092, 80],"float32"), )
paddle.Tensor.abs(Tensor([6769, 80],"float32"), )
paddle.Tensor.abs(Tensor([7050, 80],"float32"), )
paddle.Tensor.abs(Tensor([5335, 80],"float32"), )
paddle.Tensor.abs(Tensor([4155, 80],"float32"), )
paddle.Tensor.abs(Tensor([1784, 80],"float32"), )
paddle.Tensor.abs(Tensor([10242, 80],"float32"), )
paddle.Tensor.abs(Tensor([4833, 80],"float32"), )
paddle.Tensor.abs(Tensor([9282, 80],"float32"), )
paddle.Tensor.abs(Tensor([2602, 80],"float32"), )
paddle.Tensor.abs(Tensor([5289, 80],"float32"), )
paddle.Tensor.abs(Tensor([12320, 80],"float32"), )
paddle.Tensor.abs(Tensor([2640, 80],"float32"), )
paddle.Tensor.abs(Tensor([12128, 80],"float32"), )
paddle.Tensor.abs(Tensor([2778, 80],"float32"), )
paddle.Tensor.abs(Tensor([5509, 80],"float32"), )
paddle.Tensor.abs(Tensor([6424, 80],"float32"), )
paddle.Tensor.abs(Tensor([8410, 80],"float32"), )
paddle.Tensor.abs(Tensor([6608, 80],"float32"), )
paddle.Tensor.abs(Tensor([5781, 80],"float32"), )
paddle.Tensor.abs(Tensor([2806, 80],"float32"), )
paddle.Tensor.abs(Tensor([2542, 80],"float32"), )
paddle.Tensor.abs(Tensor([3908, 80],"float32"), )
paddle.Tensor.abs(Tensor([10985, 80],"float32"), )
paddle.Tensor.abs(Tensor([2856, 80],"float32"), )
paddle.Tensor.abs(Tensor([9800, 80],"float32"), )
paddle.Tensor.abs(Tensor([9264, 80],"float32"), )
paddle.Tensor.abs(Tensor([4899, 80],"float32"), )
paddle.Tensor.abs(Tensor([2036, 80],"float32"), )
paddle.Tensor.abs(Tensor([3626, 80],"float32"), )
paddle.Tensor.abs(Tensor([5125, 80],"float32"), )
paddle.Tensor.abs(Tensor([2434, 80],"float32"), )
paddle.Tensor.abs(Tensor([8720, 80],"float32"), )
paddle.Tensor.abs(Tensor([5958, 80],"float32"), )
paddle.Tensor.abs(Tensor([10365, 80],"float32"), )
paddle.Tensor.abs(Tensor([11408, 80],"float32"), )
paddle.Tensor.abs(Tensor([2188, 80],"float32"), )
paddle.Tensor.abs(Tensor([2312, 80],"float32"), )
paddle.Tensor.abs(Tensor([11156, 80],"float32"), )
paddle.Tensor.abs(Tensor([8412, 80],"float32"), )
paddle.Tensor.abs(Tensor([8800, 80],"float32"), )
paddle.Tensor.abs(Tensor([8848, 80],"float32"), )
paddle.Tensor.abs(Tensor([4675, 80],"float32"), )
paddle.Tensor.abs(Tensor([5116, 80],"float32"), )
paddle.Tensor.abs(Tensor([1790, 80],"float32"), )
paddle.Tensor.abs(Tensor([4994, 80],"float32"), )
paddle.Tensor.abs(Tensor([1989, 80],"float32"), )
paddle.Tensor.abs(Tensor([1700, 80],"float32"), )
paddle.Tensor.abs(Tensor([4110, 80],"float32"), )
paddle.Tensor.abs(Tensor([5725, 80],"float32"), )
paddle.Tensor.abs(Tensor([12369, 80],"float32"), )
paddle.Tensor.abs(Tensor([2375, 80],"float32"), )
paddle.Tensor.abs(Tensor([6926, 80],"float32"), )
paddle.Tensor.abs(Tensor([6576, 80],"float32"), )
paddle.Tensor.abs(Tensor([1290, 80],"float32"), )
paddle.Tensor.abs(Tensor([3020, 80],"float32"), )
paddle.Tensor.abs(Tensor([2992, 80],"float32"), )
paddle.Tensor.abs(Tensor([6196, 80],"float32"), )
paddle.Tensor.abs(Tensor([2412, 80],"float32"), )
paddle.Tensor.abs(Tensor([10072, 80],"float32"), )
paddle.Tensor.abs(Tensor([2300, 80],"float32"), )
paddle.Tensor.abs(Tensor([5901, 80],"float32"), )
paddle.Tensor.abs(Tensor([3692, 80],"float32"), )
paddle.Tensor.abs(Tensor([39325, 11],"float32"), )
paddle.Tensor.abs(Tensor([12341, 80],"float32"), )
paddle.Tensor.abs(Tensor([2178, 80],"float32"), )
paddle.Tensor.abs(Tensor([7188, 80],"float32"), )
paddle.Tensor.abs(Tensor([4008, 80],"float32"), )
paddle.Tensor.abs(Tensor([5806, 80],"float32"), )
paddle.Tensor.abs(Tensor([9540, 80],"float32"), )
paddle.Tensor.abs(Tensor([3160, 80],"float32"), )
paddle.Tensor.abs(Tensor([9066, 80],"float32"), )
paddle.Tensor.abs(Tensor([9344, 80],"float32"), )
paddle.Tensor.abs(Tensor([11300, 80],"float32"), )
paddle.Tensor.abs(Tensor([3638, 80],"float32"), )
paddle.Tensor.abs(Tensor([2987, 80],"float32"), )
paddle.Tensor.abs(Tensor([11475, 80],"float32"), )
paddle.Tensor.abs(Tensor([3755, 80],"float32"), )
paddle.Tensor.abs(Tensor([4463, 80],"float32"), )
paddle.Tensor.abs(Tensor([6325, 80],"float32"), )
paddle.Tensor.abs(Tensor([4648, 80],"float32"), )
paddle.Tensor.abs(Tensor([152471, 1],"float32"), )
paddle.Tensor.abs(Tensor([4352, 80],"float32"), )
paddle.Tensor.abs(Tensor([4413, 80],"float32"), )
paddle.Tensor.abs(Tensor([5734, 80],"float32"), )
paddle.Tensor.abs(Tensor([11937, 80],"float32"), )
paddle.Tensor.abs(Tensor([9378, 80],"float32"), )
paddle.Tensor.abs(Tensor([3993, 80],"float32"), )
paddle.Tensor.abs(Tensor([3298, 80],"float32"), )
paddle.Tensor.abs(Tensor([1567, 80],"float32"), )
paddle.Tensor.abs(Tensor([11485, 80],"float32"), )
paddle.Tensor.abs(Tensor([12155, 80],"float32"), )
paddle.Tensor.abs(Tensor([12300, 11],"float32"), )
paddle.Tensor.abs(Tensor([10926, 80],"float32"), )
paddle.Tensor.abs(Tensor([6092, 80],"float32"), )
paddle.Tensor.abs(Tensor([10053, 80],"float32"), )
paddle.Tensor.abs(Tensor([4576, 80],"float32"), )
paddle.Tensor.abs(Tensor([2007, 80],"float32"), )
paddle.Tensor.abs(Tensor([11924, 80],"float32"), )
paddle.Tensor.abs(Tensor([5754, 80],"float32"), )
paddle.Tensor.abs(Tensor([8653, 80],"float32"), )
paddle.Tensor.abs(Tensor([3528, 80],"float32"), )
paddle.Tensor.abs(Tensor([6790, 80],"float32"), )
paddle.Tensor.abs(Tensor([5542, 80],"float32"), )
paddle.Tensor.abs(Tensor([2781, 80],"float32"), )
paddle.Tensor.abs(Tensor([9208, 80],"float32"), )
paddle.Tensor.abs(Tensor([5838, 80],"float32"), )
paddle.Tensor.abs(Tensor([7084, 80],"float32"), )
paddle.Tensor.abs(Tensor([9522, 80],"float32"), )
paddle.Tensor.abs(Tensor([12293, 80],"float32"), )
paddle.Tensor.abs(Tensor([6168, 80],"float32"), )
paddle.Tensor.abs(Tensor([3148, 80],"float32"), )
paddle.Tensor.abs(Tensor([9267, 80],"float32"), )
paddle.Tensor.abs(Tensor([1973, 80],"float32"), )
paddle.Tensor.abs(Tensor([3050, 80],"float32"), )
paddle.Tensor.abs(Tensor([2805, 80],"float32"), )
paddle.Tensor.abs(Tensor([7932, 80],"float32"), )
paddle.Tensor.abs(Tensor([3669, 80],"float32"), )
paddle.Tensor.abs(Tensor([4844, 80],"float32"), )
paddle.Tensor.abs(Tensor([6040, 80],"float32"), )
paddle.Tensor.abs(Tensor([3015, 80],"float32"), )
paddle.Tensor.abs(Tensor([5646, 80],"float32"), )
paddle.Tensor.abs(Tensor([3267, 80],"float32"), )
paddle.Tensor.abs(Tensor([5769, 80],"float32"), )
paddle.Tensor.abs(Tensor([6050, 80],"float32"), )
paddle.Tensor.abs(Tensor([11945, 80],"float32"), )
paddle.Tensor.abs(Tensor([4284, 80],"float32"), )
paddle.Tensor.abs(Tensor([1770, 80],"float32"), )
paddle.Tensor.abs(Tensor([11028, 80],"float32"), )
paddle.Tensor.abs(Tensor([6762, 80],"float32"), )
paddle.Tensor.abs(Tensor([6516, 80],"float32"), )
paddle.Tensor.abs(Tensor([4886, 80],"float32"), )
paddle.Tensor.abs(Tensor([8743, 80],"float32"), )
paddle.Tensor.abs(Tensor([2173, 80],"float32"), )
paddle.Tensor.abs(Tensor([7216, 80],"float32"), )
paddle.Tensor.abs(Tensor([4388, 80],"float32"), )
paddle.Tensor.abs(Tensor([10995, 80],"float32"), )
paddle.Tensor.abs(Tensor([11099, 80],"float32"), )
paddle.Tensor.abs(Tensor([20277, 11],"float32"), )
paddle.Tensor.abs(Tensor([3768, 80],"float32"), )
paddle.Tensor.abs(Tensor([6227, 80],"float32"), )
paddle.Tensor.abs(Tensor([3032, 80],"float32"), )
paddle.Tensor.abs(Tensor([9496, 80],"float32"), )
paddle.Tensor.abs(Tensor([6616, 80],"float32"), )
paddle.Tensor.abs(Tensor([119493, 1],"float32"), )
paddle.Tensor.abs(Tensor([11604, 80],"float32"), )
paddle.Tensor.abs(Tensor([4218, 80],"float32"), )
paddle.Tensor.abs(Tensor([20526, 11],"float32"), )
paddle.Tensor.abs(Tensor([3731, 80],"float32"), )
paddle.Tensor.abs(Tensor([2508, 80],"float32"), )
paddle.Tensor.abs(Tensor([6224, 80],"float32"), )
paddle.Tensor.abs(Tensor([43376, 11],"float32"), )
paddle.Tensor.abs(Tensor([1405, 80],"float32"), )
paddle.Tensor.abs(Tensor([5915, 80],"float32"), )
paddle.Tensor.abs(Tensor([10840, 80],"float32"), )
paddle.Tensor.abs(Tensor([10836, 80],"float32"), )
paddle.Tensor.abs(Tensor([4822, 80],"float32"), )
paddle.Tensor.abs(Tensor([11217, 80],"float32"), )
paddle.Tensor.abs(Tensor([15440, 11],"float32"), )
paddle.Tensor.abs(Tensor([2996, 80],"float32"), )
paddle.Tensor.abs(Tensor([240640],"float64"), )
paddle.Tensor.abs(Tensor([6492, 80],"float32"), )
paddle.Tensor.abs(Tensor([6600, 80],"float32"), )
paddle.Tensor.abs(Tensor([6676, 80],"float32"), )
paddle.Tensor.abs(Tensor([1947, 80],"float32"), )
paddle.Tensor.abs(Tensor([8524, 80],"float32"), )
paddle.Tensor.abs(Tensor([6765, 80],"float32"), )
paddle.Tensor.abs(Tensor([7372, 80],"float32"), )
paddle.Tensor.abs(Tensor([2986, 80],"float32"), )
paddle.Tensor.abs(Tensor([10608, 80],"float32"), )
paddle.Tensor.abs(Tensor([4341, 80],"float32"), )
paddle.Tensor.abs(Tensor([5991, 80],"float32"), )
paddle.Tensor.abs(Tensor([8199, 80],"float32"), )
paddle.Tensor.abs(Tensor([11890, 80],"float32"), )
paddle.Tensor.abs(Tensor([5428, 80],"float32"), )
paddle.Tensor.abs(Tensor([1392, 80],"float32"), )
paddle.Tensor.abs(Tensor([6524, 80],"float32"), )
paddle.Tensor.abs(Tensor([1695, 80],"float32"), )
paddle.Tensor.abs(Tensor([6696, 80],"float32"), )
paddle.Tensor.abs(Tensor([11589, 80],"float32"), )
paddle.Tensor.abs(Tensor([2728, 80],"float32"), )
paddle.Tensor.abs(Tensor([8665, 80],"float32"), )
paddle.Tensor.abs(Tensor([8256, 80],"float32"), )
paddle.Tensor.abs(Tensor([8593, 80],"float32"), )
paddle.Tensor.abs(Tensor([10677, 80],"float32"), )
paddle.Tensor.abs(Tensor([7413, 80],"float32"), )
paddle.Tensor.abs(Tensor([7004, 80],"float32"), )
paddle.Tensor.abs(Tensor([3844, 80],"float32"), )
paddle.Tensor.abs(Tensor([7588, 80],"float32"), )
paddle.Tensor.abs(Tensor([8025, 80],"float32"), )
paddle.Tensor.abs(Tensor([10389, 80],"float32"), )
paddle.Tensor.abs(Tensor([3603, 80],"float32"), )
paddle.Tensor.abs(Tensor([11780, 80],"float32"), )
paddle.Tensor.abs(Tensor([3675, 80],"float32"), )
paddle.Tensor.abs(Tensor([1436, 80],"float32"), )
paddle.Tensor.abs(Tensor([2607, 80],"float32"), )
paddle.Tensor.abs(Tensor([11000, 80],"float32"), )
paddle.Tensor.abs(Tensor([7324, 80],"float32"), )
paddle.Tensor.abs(Tensor([11130, 80],"float32"), )
paddle.Tensor.abs(Tensor([8036, 80],"float32"), )
paddle.Tensor.abs(Tensor([3114, 80],"float32"), )
paddle.Tensor.abs(Tensor([7599, 80],"float32"), )
paddle.Tensor.abs(Tensor([10518, 80],"float32"), )
paddle.Tensor.abs(Tensor([6580, 80],"float32"), )
paddle.Tensor.abs(Tensor([3492, 80],"float32"), )
paddle.Tensor.abs(Tensor([2124, 80],"float32"), )
paddle.Tensor.abs(Tensor([6952, 80],"float32"), )
paddle.Tensor.abs(Tensor([10931, 80],"float32"), )
paddle.Tensor.abs(Tensor([7682, 80],"float32"), )
paddle.Tensor.abs(Tensor([9125, 80],"float32"), )
paddle.Tensor.abs(Tensor([1889, 80],"float32"), )
paddle.Tensor.abs(Tensor([9247, 80],"float32"), )
paddle.Tensor.abs(Tensor([4216, 80],"float32"), )
paddle.Tensor.abs(Tensor([1943, 80],"float32"), )
paddle.Tensor.abs(Tensor([4840, 80],"float32"), )
paddle.Tensor.abs(Tensor([35370, 11],"float32"), )
paddle.Tensor.abs(Tensor([10348, 80],"float32"), )
paddle.Tensor.abs(Tensor([9988, 80],"float32"), )
paddle.Tensor.abs(Tensor([6960, 80],"float32"), )
paddle.Tensor.abs(Tensor([3400, 80],"float32"), )
paddle.Tensor.abs(Tensor([2194, 80],"float32"), )
paddle.Tensor.abs(Tensor([6706, 80],"float32"), )
paddle.Tensor.abs(Tensor([2567, 80],"float32"), )
paddle.Tensor.abs(Tensor([11960, 80],"float32"), )
paddle.Tensor.abs(Tensor([10367, 80],"float32"), )
paddle.Tensor.add(Tensor([66244],"float32"), Tensor([66244],"float32"), )
paddle.Tensor.add(Tensor([7953],"float32"), Tensor([7953],"float32"), )
paddle.Tensor.add(Tensor([90, 90],"float32"), Tensor([90, 90],"float32"), )
paddle.Tensor.add(Tensor([17157],"float32"), Tensor([17157],"float32"), )
paddle.Tensor.add(Tensor([23619],"float32"), Tensor([23619],"float32"), )
paddle.Tensor.add(Tensor([50, 50],"float32"), Tensor([50, 50],"float32"), )
paddle.Tensor.add(Tensor([48, 48],"float32"), Tensor([48, 48],"float32"), )
paddle.Tensor.add(Tensor([15, 48],"float32"), Tensor([15, 48],"float32"), )
paddle.Tensor.add(Tensor([1861],"float32"), Tensor([1861],"float32"), )
paddle.Tensor.add(Tensor([64, 64],"float32"), Tensor([64, 64],"float32"), )
paddle.Tensor.all(Tensor([4843, 32],"bool"), )
paddle.Tensor.all(Tensor([6544, 32],"bool"), )
paddle.Tensor.all(Tensor([1, 64, 40, 40],"bool"), )
paddle.Tensor.all(Tensor([1, 36828, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([6369, 32],"bool"), )
paddle.Tensor.all(Tensor([3831, 32],"bool"), )
paddle.Tensor.all(Tensor([3702, 32],"bool"), )
paddle.Tensor.all(Tensor([6880, 32],"bool"), )
paddle.Tensor.all(Tensor([6474, 32],"bool"), )
paddle.Tensor.all(Tensor([6954, 32],"bool"), )
paddle.Tensor.all(Tensor([6122, 32],"bool"), )
paddle.Tensor.all(Tensor([7015, 32],"bool"), )
paddle.Tensor.all(Tensor([5084, 32],"bool"), )
paddle.Tensor.all(Tensor([3699, 32],"bool"), )
paddle.Tensor.all(Tensor([3399, 32],"bool"), )
paddle.Tensor.all(Tensor([4533, 32],"bool"), )
paddle.Tensor.all(Tensor([7200, 32],"bool"), )
paddle.Tensor.all(Tensor([6935, 32],"bool"), )
paddle.Tensor.all(Tensor([4, 1, 377, 377],"bool"), )
paddle.Tensor.all(Tensor([7065, 32],"bool"), )
paddle.Tensor.all(Tensor([4, 1, 164, 164],"bool"), )
paddle.Tensor.all(Tensor([6870, 32],"bool"), )
paddle.Tensor.all(Tensor([6929, 32],"bool"), )
paddle.Tensor.all(Tensor([2, 10, 32000],"bool"), )
paddle.Tensor.all(Tensor([6410, 32],"bool"), )
paddle.Tensor.all(Tensor([4, 1, 172, 172],"bool"), )
paddle.Tensor.all(Tensor([7020, 32],"bool"), )
paddle.Tensor.all(Tensor([6282, 32],"bool"), )
paddle.Tensor.all(Tensor([7164, 32],"bool"), )
paddle.Tensor.all(Tensor([7175, 32],"bool"), )
paddle.Tensor.all(Tensor([5735, 32],"bool"), )
paddle.Tensor.all(Tensor([5842, 32],"bool"), )
paddle.Tensor.all(Tensor([7165, 32],"bool"), )
paddle.Tensor.all(Tensor([6753, 32],"bool"), )
paddle.Tensor.all(Tensor([7573, 32],"bool"), )
paddle.Tensor.all(Tensor([3411, 32],"bool"), )
paddle.Tensor.all(Tensor([4458, 32],"bool"), )
paddle.Tensor.all(Tensor([6351, 32],"bool"), )
paddle.Tensor.all(Tensor([6291, 32],"bool"), )
paddle.Tensor.all(Tensor([4816, 32],"bool"), )
paddle.Tensor.all(Tensor([7183, 32],"bool"), )
paddle.Tensor.all(Tensor([6805, 32],"bool"), )
paddle.Tensor.all(Tensor([6502, 32],"bool"), )
paddle.Tensor.all(Tensor([4, 1, 304, 304],"bool"), )
paddle.Tensor.all(Tensor([6391, 32],"bool"), )
paddle.Tensor.all(Tensor([6950, 32],"bool"), )
paddle.Tensor.all(Tensor([6960, 32],"bool"), )
paddle.Tensor.all(Tensor([4, 1, 396, 396],"bool"), )
paddle.Tensor.all(Tensor([6255, 32],"bool"), )
paddle.Tensor.all(Tensor([6248, 32],"bool"), )
paddle.Tensor.all(Tensor([7052, 32],"bool"), )
paddle.Tensor.all(Tensor([5060, 32],"bool"), )
paddle.Tensor.all(Tensor([4359, 32],"bool"), )
paddle.Tensor.all(Tensor([3783, 32],"bool"), )
paddle.Tensor.all(Tensor([7780, 32],"bool"), )
paddle.Tensor.all(Tensor([4293, 32],"bool"), )
paddle.Tensor.all(Tensor([4554, 32],"bool"), )
paddle.Tensor.all(Tensor([3579, 32],"bool"), )
paddle.Tensor.all(Tensor([5566, 32],"bool"), )
paddle.Tensor.all(Tensor([4059, 32],"bool"), )
paddle.Tensor.all(Tensor([6296, 32],"bool"), )
paddle.Tensor.all(Tensor([5976, 32],"bool"), )
paddle.Tensor.all(Tensor([6911, 32],"bool"), )
paddle.Tensor.all(Tensor([7270, 32],"bool"), )
paddle.Tensor.all(Tensor([6117, 32],"bool"), )
paddle.Tensor.all(Tensor([6992, 32],"bool"), )
paddle.Tensor.all(Tensor([6098, 32],"bool"), )
paddle.Tensor.all(Tensor([1, 38367, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([7290, 32],"bool"), )
paddle.Tensor.all(Tensor([3534, 32],"bool"), )
paddle.Tensor.all(Tensor([8162, 32],"bool"), )
paddle.Tensor.all(Tensor([4, 1, 198, 198],"bool"), )
paddle.Tensor.all(Tensor([3795, 32],"bool"), )
paddle.Tensor.all(Tensor([7710, 32],"bool"), )
paddle.Tensor.all(Tensor([6084, 32],"bool"), )
paddle.Tensor.all(Tensor([3658, 32],"bool"), )
paddle.Tensor.all(Tensor([5548, 32],"bool"), )
paddle.Tensor.all(Tensor([4, 1, 346, 346],"bool"), )
paddle.Tensor.all(Tensor([3345, 32],"bool"), )
paddle.Tensor.all(Tensor([6831, 32],"bool"), )
paddle.Tensor.all(Tensor([6976, 32],"bool"), )
paddle.Tensor.all(Tensor([3438, 32],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 80, 80],"bool"), )
paddle.Tensor.all(Tensor([1, 8550, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 11109, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 1, 107, 107],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 111, 111],"bool"), )
paddle.Tensor.all(Tensor([383, 32],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 79, 79],"bool"), )
paddle.Tensor.all(Tensor([1, 6069, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 1, 112, 112],"bool"), )
paddle.Tensor.all(Tensor([100, 500],"bool"), )
paddle.Tensor.all(Tensor([2, 10, 10, 123],"bool"), )
paddle.Tensor.all(Tensor([4, 1, 148, 148],"bool"), )
paddle.Tensor.all(Tensor([1906, 32],"bool"), )
paddle.Tensor.all(Tensor([2811, 32],"bool"), )
paddle.Tensor.all(Tensor([2277, 32],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 82, 82],"bool"), )
paddle.Tensor.all(Tensor([1, 128, 10, 10],"bool"), )
paddle.Tensor.all(Tensor([4, 1, 152, 152],"bool"), )
paddle.Tensor.all(Tensor([2, 11645, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([4, 1, 147, 147],"bool"), )
paddle.Tensor.all(Tensor([1, 12096, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 1, 91, 91],"bool"), )
paddle.Tensor.all(Tensor([100, 300],"bool"), )
paddle.Tensor.all(Tensor([4, 1, 115, 115],"bool"), )
paddle.Tensor.all(Tensor([4, 1, 127, 127],"bool"), )
paddle.Tensor.all(Tensor([1, 4725, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 8400, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 10, 10, 64],"bool"), )
paddle.Tensor.all(Tensor([1, 6804, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 5376, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([3060, 32],"bool"), )
paddle.Tensor.all(Tensor([1, 16, 40, 40],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 74, 74],"bool"), )
paddle.Tensor.all(Tensor([1, 6380, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 1, 110, 110],"bool"), )
paddle.Tensor.all(Tensor([3036, 32],"bool"), )
paddle.Tensor.all(Tensor([1, 24, 40, 40],"bool"), )
paddle.Tensor.all(Tensor([2, 20, 20, 32],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 109, 109],"bool"), )
paddle.Tensor.all(Tensor([2946, 32],"bool"), )
paddle.Tensor.all(Tensor([1, 10164, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 8192, 3],"bool"), )
paddle.Tensor.all(Tensor([3072, 32],"bool"), )
paddle.Tensor.all(Tensor([5555],"bool"), )
paddle.Tensor.all(Tensor([5833],"bool"), )
paddle.Tensor.all(Tensor([5800],"bool"), )
paddle.Tensor.all(Tensor([5824],"bool"), )
paddle.Tensor.all(Tensor([5619],"bool"), )
paddle.Tensor.all(Tensor([5876],"bool"), )
paddle.Tensor.all(Tensor([5544],"bool"), )
paddle.Tensor.all(Tensor([1, 1024, 2, 2],"bool"), )
paddle.Tensor.all(Tensor([5741],"bool"), )
paddle.Tensor.all(Tensor([1, 8192],"bool"), )
paddle.Tensor.all(Tensor([5953],"bool"), )
paddle.Tensor.all(Tensor([5585],"bool"), )
paddle.Tensor.all(Tensor([5657],"bool"), )
paddle.Tensor.all(Tensor([5859],"bool"), )
paddle.Tensor.all(Tensor([5831],"bool"), )
paddle.Tensor.all(Tensor([5514],"bool"), )
paddle.Tensor.all(Tensor([5670],"bool"), )
paddle.Tensor.all(Tensor([1, 4096],"bool"), )
paddle.Tensor.all(Tensor([1, 1000],"bool"), )
paddle.Tensor.all(Tensor([5818],"bool"), )
paddle.Tensor.all(Tensor([5837],"bool"), )
paddle.Tensor.all(Tensor([5583],"bool"), )
paddle.Tensor.all(Tensor([5849],"bool"), )
paddle.Tensor.all(Tensor([5761],"bool"), )
paddle.Tensor.all(Tensor([5488],"bool"), )
paddle.Tensor.all(Tensor([5814],"bool"), )
paddle.Tensor.all(Tensor([1, 48, 5, 5],"bool"), )
paddle.Tensor.all(Tensor([5788],"bool"), )
paddle.Tensor.all(Tensor([40, 40],"bool"), )
paddle.Tensor.all(Tensor([5801],"bool"), )
paddle.Tensor.all(Tensor([5807],"bool"), )
paddle.Tensor.all(Tensor([5572],"bool"), )
paddle.Tensor.all(Tensor([5835],"bool"), )
paddle.Tensor.all(Tensor([5840],"bool"), )
paddle.Tensor.all(Tensor([1, 1024, 1, 1],"bool"), )
paddle.Tensor.all(Tensor([5825],"bool"), )
paddle.Tensor.all(Tensor([1, 512, 2, 2],"bool"), )
paddle.Tensor.any(Tensor([16384],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([38402],"bool"), )
paddle.Tensor.any(Tensor([35968],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([14, 64, 16],"bool"), )
paddle.Tensor.any(Tensor([8550, 4],"bool"), )
paddle.Tensor.any(Tensor([6380, 4],"bool"), )
paddle.Tensor.any(Tensor([36858],"bool"), )
paddle.Tensor.any(Tensor([14, 64, 4],"bool"), )
paddle.Tensor.any(Tensor([1, 8192],"bool"), )
paddle.Tensor.any(Tensor([1, 8192],"bool"), -1, )
paddle.Tensor.any(Tensor([4, 501],"bool"), -1, )
paddle.Tensor.any(Tensor([14, 7, 32],"bool"), )
paddle.Tensor.any(Tensor([8580],"bool"), )
paddle.Tensor.any(Tensor([6400],"bool"), )
paddle.Tensor.any(Tensor([1, 8193],"bool"), -1, )
paddle.Tensor.any(Tensor([8, 501],"bool"), -1, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([8400],"bool"), )
paddle.Tensor.any(Tensor([1184],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([300, 4],"bool"), )
paddle.Tensor.any(Tensor([14, 7, 99],"bool"), )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([2160],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([900, 4],"bool"), )
paddle.Tensor.any(Tensor([1024],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.argmax(Tensor([1, 5, 37044],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 63, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 22, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 61, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 9, 21504],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 17, 40656],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 22, 44436],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 13, 21504],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 21, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 11, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 12, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 16, 27216],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 12, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 16, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 11, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 19, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 19, 30324],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 25, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 24, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 9, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 36, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 6, 70644],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 68, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 7, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 6, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 43, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 40, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 10, 5440],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 16, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 43, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 34, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 139, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 2, 52500],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 26, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 38, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 37, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 35, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 53, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 14, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 29, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 37, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 20, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 30, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 13, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 87, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 17, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 12, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 35, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 55, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 10, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 30, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 23, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 123, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 8, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 43, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 6, 37044],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 11, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 8, 40656],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 50, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 26, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 39, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 9, 33600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 12, 40656],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 54, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 47, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 9, 70644],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 8, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 10, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 34, 27216],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 89, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 8, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 43, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 98, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 11, 10285],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 31, 30324],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 7, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 20, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 6, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 14, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 23, 6885],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 35, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 38, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 2, 8500],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 8, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 2, 9382],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 19, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 48, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 47, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 23, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 5, 3060],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 20, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 31, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 16, 37044],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 12, 27216],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 37, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 69, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 13, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 35, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 12, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 79, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 17, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 28, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 15, 40656],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 22, 40656],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 38, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 30, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 14, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 17, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 16, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 81, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 47, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 122, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 10, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 14, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 92, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 46, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 22, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 56, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 27, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 103, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 12, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 12, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 29, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 17, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 22, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 16, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 66, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 14, 10285],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 7, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 11, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 13, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 8, 75600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 12, 21504],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 6, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 8, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 10, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 21, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 26, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 20, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 15, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 57, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 8, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 11, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 57, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 19, 7681],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 32, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 45, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 77, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 27, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 62, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 24, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 28, 7681],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 18, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 12, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 19, 33600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 8, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 44, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 48, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 24, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 18, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 113, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 20, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 55, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 19, 37044],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 28, 21504],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 10, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 18, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 53, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 12, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 66, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 79, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 30, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 9, 7681],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 16, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 8, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 42, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 3, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 26, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 22, 4165],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 52, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 24, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 23, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 65, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 25, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 23, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 42, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 16, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 55, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 9, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 105, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 75, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 64, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 33, 27216],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 22, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 23, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 9, 40656],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 209, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 75, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 20, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 14, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 32, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 16, 3598],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 14, 4789],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 25, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 9, 48384],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 35, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 21, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 5, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 74, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 58, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 12, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 3, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 58, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 46, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 15, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 20, 44436],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 15, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 12, 52500],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 22, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 69, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 64, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 23, 21504],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 41, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 8, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 32, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 25, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 38, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 13, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 24, 27216],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 12, 33600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 6, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 4, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 72, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 37, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 18, 21504],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 49, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 41, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 113, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 62, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 30, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 2, 7681],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 26, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 12, 48384],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 11, 44436],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 17, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 22, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 13, 30324],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 60, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 42, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 24, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 37, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 16, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 16, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 8, 65856],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 43, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 30, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 19, 44436],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 5, 75600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 15, 61236],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 15, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 7, 27216],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 43, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 63, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 19, 27216],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 2, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 63, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 37, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 20, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 16, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 10, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 88, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 30, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 50, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 76, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 23, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 31, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 26, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 31, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 30, 30324],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 7, 56784],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 26, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 6, 9382],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 35, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 38, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 4, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 17, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 19, 52500],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 10, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 20, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 15, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 18, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 10, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 6, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 50, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 11, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 21, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 101, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 40, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 9, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 72, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 14, 7681],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 44, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 24, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 6, 75600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 40, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 34, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 32, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 7, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 28, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 31, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 41, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 12, 10285],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 5, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 33, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 34, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 10, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 76, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 16, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 34, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 17, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 13, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 26, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 13, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 20, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 44, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 17, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 36, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 60, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 38, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 110, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 34, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 25, 33600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 20, 48384],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 9, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 22, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 12, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 6, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 19, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 11, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 6, 27216],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 48, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 105, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 27, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 30, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 81, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 33, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 52, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 7, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 59, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 19, 21504],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 16, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 11, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 3, 9382],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 52, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 40, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 7, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 8, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 32, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 59, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 8, 56784],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 21, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 6, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 22, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 30, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 17, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 19, 4165],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 30, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 28, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 22, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 24, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 43, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 16, 61236],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 27, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 11, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 72, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 59, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 29, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 14, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 5, 33600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 43, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 17, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 12, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 65, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 108, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 18, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 23, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 19, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 34, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 21, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 25, 2100],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 48, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 8, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 10, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 13, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 88, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 13, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 24, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 5, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 12, 30324],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 58, 2100],"float32"), axis=-2, )
paddle.Tensor.astype(Tensor([2, 32, 6069],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([6410, 32, 2],"bfloat16"), "float32", )
paddle.Tensor.astype(Tensor([64, 34, 256],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 12, 10164],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([256, 768, 1, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 29, 3549],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([68, 480, 3, 3],"float32"), "float32", )
paddle.Tensor.astype(Tensor([16, 36, 400],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 15, 4725],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 23, 2100],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 40, 12096],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([768, 768],"float16"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 11, 7744],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([384, 288, 1, 1],"float32"), "float32", )
paddle.Tensor.astype(Tensor([8, 25, 3136],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 50, 4116],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 5, 5376],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 8, 6804],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 3024, 40],"int32"), "bool", )
paddle.Tensor.astype(Tensor([16, 18, 784],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 73, 4725],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 23, 2100],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 255, 10, 10],"float32"), "float32", )
paddle.Tensor.astype(Tensor([4, 119, 400],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 27, 7581],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 36, 2100],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 54, 5376],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 3, 9261],"int32"), "bool", )
paddle.Tensor.astype(Tensor([64, 46, 81],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 36, 900],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 1, 12096],"bool"), "int32", )
paddle.Tensor.astype(Tensor([2, 47, 8400],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 800, 1203],"uint8"), "int64", )
paddle.Tensor.astype(Tensor([64, 37, 324],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 27, 2100],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 29, 144],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 10, 5776],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([768, 384, 1, 1],"float32"), "float32", )
paddle.Tensor.astype(Tensor([2, 92, 3549],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 73, 900],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 48, 1296],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 12, 6069],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 4, 145, 145],"float32"), "float32", )
paddle.Tensor.astype(Tensor([16, 18, 1936],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([384, 1024, 1, 1],"float32"), "float32", )
paddle.Tensor.astype(Tensor([2, 27, 52, 52],"float32"), "float32", )
paddle.Tensor.astype(Tensor([8, 18, 2304],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 31, 4725],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([6, 22, 50, 50],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 16, 52500],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 30, 1600],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 11, 7581],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([5859, 32],"bool"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([4, 90, 289],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 255, 16, 16],"float16"), "float32", )
paddle.Tensor.astype(Tensor([4554, 32, 2],"bfloat16"), "float32", )
paddle.Tensor.astype(Tensor([2, 18, 4725],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 8, 7056],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 26, 3549],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 3, 44436],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 15, 27216],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 15, 40656],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 40, 5376],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 13, 3549],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2048, 81],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([2, 68, 2100],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 33, 7581],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 8, 5376],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 7, 5184],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 13, 9261],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 12, 3549],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 11, 3136],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 5, 65856],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([384, 1152, 1, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 10, 70644],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 63, 6069],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 15, 24276],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 21, 1156],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 20, 1296],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 37, 1600],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 40, 5376],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 31, 900],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 21, 1024],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 20, 37044],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 34, 8400],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 70, 2100],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 19, 784],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 9, 6069],"int32"), "bool", )
paddle.Tensor.astype(Tensor([64, 39, 100],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 19, 3549],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 3024, 4],"int32"), "bool", )
paddle.Tensor.astype(Tensor([2, 39, 7581],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 17, 3600],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 14, 144],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([6960, 32, 2],"bfloat16"), "float32", )
paddle.Tensor.astype(Tensor([8, 26, 1764],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 38, 2704],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 512, 512],"uint8"), "int64", )
paddle.Tensor.astype(Tensor([8, 9, 7056],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 20, 676],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 42, 10164],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 14, 7056],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 800, 1202],"uint8"), "int64", )
paddle.Tensor.astype(Tensor([288, 1152, 1, 1],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 1, 800, 871],"uint8"), "int64", )
paddle.Tensor.astype(Tensor([64, 37, 121],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 19, 900],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 20, 44436],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 22, 10164],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([68, 192, 3, 3],"float32"), "float32", )
paddle.Tensor.astype(Tensor([2, 51, 8400],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 5, 52500],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 16, 7, 8, 768],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([8, 255, 12, 12],"float32"), "float32", )
paddle.Tensor.astype(Tensor([16, 15, 2100],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4, 25, 7056],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 30, 12096],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 44, 11109],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 19, 3024],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 35, 2100],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 13, 5376],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 11, 5376],"int32"), "bool", )
paddle.Tensor.astype(Tensor([16, 23, 2704],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 21, 2100],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 21, 8400],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 8, 4624],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 37, 9261],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 15, 1764],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 800, 1165],"uint8"), "int64", )
paddle.Tensor.astype(Tensor([2, 14, 7581],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 63, 3024],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 20, 4116],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 24, 33600],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 30, 441],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 255, 17, 17],"float16"), "float32", )
paddle.Tensor.astype(Tensor([2, 30, 6069],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 30, 10164],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 7, 5376],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 7, 2304],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([5800, 32],"bool"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([2, 57, 7581],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 112, 3024],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 17, 3024],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 81, 6069],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 49, 6804],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 12, 4096],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 54, 7581],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 4, 145, 145],"float32"), "float16", )
paddle.Tensor.astype(Tensor([145, 4, 512],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([8, 15, 2541],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 14, 2541],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([128, 1024],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([8, 3, 5376],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 19, 2541],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 22, 33600],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 22, 676],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([320, 320, 3, 3],"float32"), "float32", )
paddle.Tensor.astype(Tensor([4, 36, 5776],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([512, 1216, 1, 1],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([8, 5, 12096],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 7, 2541],"int32"), "bool", )
paddle.Tensor.astype(Tensor([8, 9, 2541],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 34, 4725],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([256, 256, 3, 3],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([1024, 512],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([2, 117, 4116],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 49, 3024],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 15, 529],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 19, 2100],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 16, 7, 10, 768],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([8, 13, 6804],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 8, 21504],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 53, 3549],"int32"), "bool", )
paddle.Tensor.astype(Tensor([4, 30, 7744],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([192, 768, 1, 1],"float32"), "float32", )
paddle.Tensor.astype(Tensor([16, 8, 1444],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 34, 9261],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 5, 11109],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 20, 2100],"int32"), "bool", )
paddle.Tensor.astype(Tensor([8, 15, 6804],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 6, 5376],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 19, 144],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 30, 1600],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 87, 2541],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 89, 484],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 28, 27216],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 27, 1296],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 9, 2541],"int32"), "bool", )
paddle.Tensor.astype(Tensor([8, 15, 6069],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 17, 1764],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 10, 1444],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 9, 12096],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 6804, 4],"int32"), "bool", )
paddle.Tensor.astype(Tensor([16, 9, 2100],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 19, 8500],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 31, 11109],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 52, 2116],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 18, 3549],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 7, 11109],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 10, 6069],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 42, 9261],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 26, 7056],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 8, 6069],"int32"), "bool", )
paddle.Tensor.astype(Tensor([16, 40, 169],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 27, 400],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4816, 32, 2],"bfloat16"), "float32", )
paddle.Tensor.astype(Tensor([2, 51, 7581],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 60, 6069],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 28, 1296],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 42, 6804],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 45, 2541],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 56, 4725],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 54, 784],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 35, 1600],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 33, 6069],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 63, 6804],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([108, 49, 49],"bool"), "float32", )
paddle.Tensor.astype(Tensor([2, 47, 9261],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 54, 289],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 2, 7681],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 103, 2541],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 18, 2541],"int32"), "bool", )
paddle.Tensor.astype(Tensor([2, 54, 3549],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 35, 8400],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 19, 3024],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([5488, 32],"bool"), Dtype(bfloat16), )
paddle.Tensor.astype(Tensor([8, 5, 8464],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 130, 3549],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 6, 33600],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 22, 4725],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8162, 32, 2],"bfloat16"), "float32", )
paddle.Tensor.astype(Tensor([4, 120, 1600],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1000, 784],"float32"), Dtype(complex64), )
paddle.Tensor.astype(Tensor([2, 18, 12096],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 30, 3549],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 7581, 4],"int32"), "bool", )
paddle.Tensor.astype(Tensor([8, 14, 3024],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([255, 512, 1, 1],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([2, 26, 9261],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 7, 3024],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([192, 576, 1, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 10, 8400],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 15, 4725],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 15, 1444],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 7, 40656],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 36, 12096],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 31, 3600],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 14, 70644],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 11, 11109],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 2, 56784],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 35, 6069],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 14, 3024],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 26, 2541],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 50, 4116],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 17, 2541],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 10, 1024],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([640, 160, 1, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 37, 3024],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 57, 3549],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 34, 324],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([3060, 32, 2],"bfloat16"), "float32", )
paddle.Tensor.astype(Tensor([8, 4, 9261],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 22, 3024],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 12096, 1],"bool"), "int32", )
paddle.Tensor.astype(Tensor([8, 23, 1600],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 11, 4116],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 19, 4116],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 17, 3549],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 21, 81],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([10032, 80],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4, 121, 361],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 3, 10164],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 28, 144],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([7183, 32, 2],"bfloat16"), "float32", )
paddle.Tensor.astype(Tensor([8, 15, 5184],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 16, 6069],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 22, 2541],"int32"), "bool", )
paddle.Tensor.astype(Tensor([11088, 80],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 42, 8400],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 77, 4116],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 40, 3549],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 3, 6804],"int32"), "bool", )
paddle.Tensor.astype(Tensor([16, 43, 1156],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 19, 7681],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 41, 2541],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 13, 5184],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 26, 10164],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 76, 3024],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([27, 512, 3, 3],"float32"), "float32", )
paddle.Tensor.astype(Tensor([2, 209, 2100],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 7, 2100],"int32"), "bool", )
paddle.Tensor.astype(Tensor([3036, 32, 2],"bfloat16"), "float32", )
paddle.Tensor.astype(Tensor([16, 10, 5376],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 8, 3549],"int32"), "bool", )
paddle.Tensor.astype(Tensor([16, 8, 4725],"int32"), "bool", )
paddle.Tensor.astype(Tensor([8, 5, 5184],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 80, 6069],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 42, 676],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 68, 6069],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 5, 5376],"int32"), "bool", )
paddle.Tensor.astype(Tensor([2, 61, 6804],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([384, 384, 1, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 37, 2100],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 18, 6069],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 25, 6069],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 52, 6804],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([256, 2048, 1, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 8192, 64],"float32"), "float32", )
paddle.Tensor.astype(Tensor([8, 46, 361],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 6, 10285],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 8, 4725],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 19, 4725],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 117, 4116],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 8, 91, 219],"float16"), "float32", )
paddle.Tensor.astype(Tensor([2048, 32, 3, 3],"float32"), "float32", )
paddle.Tensor.astype(Tensor([2, 27, 4725],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 17, 3024],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 22, 5376],"int32"), "bool", )
paddle.Tensor.astype(Tensor([4, 39, 1444],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 35, 2541],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 19, 900],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 12, 4096],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 12, 4624],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 80, 3549],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 800, 1133],"uint8"), "int64", )
paddle.Tensor.astype(Tensor([384, 256, 3, 3],"float32"), "float32", )
paddle.Tensor.astype(Tensor([16, 14, 784],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 26, 100],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 24, 441],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 22, 1156],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 18, 576],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 67, 3024],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 68, 2100],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 9, 5776],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 37044, 4],"int32"), "bool", )
paddle.Tensor.astype(Tensor([8, 13, 1296],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([256, 768],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([2, 14, 4624],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 45, 6804],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 3, 6069],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 24, 2116],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 18, 7581],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 12, 10164],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([64, 19, 576],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 12, 12096],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 4, 6069],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 18, 2704],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 30, 64],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 40, 3024],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4, 41, 1936],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 72, 3549],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([1000, 784],"float32"), Dtype(complex128), )
paddle.Tensor.astype(Tensor([1, 21, 37044],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 39, 1156],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 13, 9261],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 96, 3024],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8208, 80],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 23, 1156],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 27, 5376],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 18, 6069],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 10, 4725],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 2, 65856],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 24, 24276],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 12, 6069],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 54, 484],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([7200, 32],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([2, 53, 4725],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 35, 361],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([7052, 32],"float32"), "bfloat16", )
paddle.Tensor.astype(Tensor([4, 20, 4116],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 8, 12096],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 30, 2541],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([256, 768, 1, 1],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([8, 10, 1936],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 27216, 4],"int32"), "bool", )
paddle.Tensor.astype(Tensor([16, 18, 484],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 25, 2100],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 8, 8400],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 26, 1600],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 16, 5376],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 46, 400],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([11480, 80],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 23, 3024],"int32"), "bool", )
paddle.Tensor.astype(Tensor([4, 1, 182, 182],"float32"), Dtype(float16), )
paddle.Tensor.astype(Tensor([2, 14, 4096],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([240, 960, 1, 1],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 10, 65856],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([64, 40, 100],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 47, 3024],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 29, 3549],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 37, 4725],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 13, 12096],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 15, 4725],"int32"), "bool", )
paddle.Tensor.astype(Tensor([2, 47, 2541],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 9, 12096],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([32, 16, 1024],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 29, 24276],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 16, 3549],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 81, 3024],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 19, 4725],"float32"), VarType(float32), )
paddle.Tensor.bmm(Tensor([1, 179876, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 98000, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 170476, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 108472, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 153088, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 143264, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 120000, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 191277, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 146200, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 150164, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 8100, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 4096, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 5776, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 1156, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 784, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 832, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.cast(Tensor([44732, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([8253, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([38600, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([18444, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([14882, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([33622, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([29432, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([7473, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([17450, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([26574, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([51395, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([18060, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([16400, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([19857, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([27089, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([14118, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([6475, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([2, 53100],"bool"), "int32", )
paddle.Tensor.cast(Tensor([32098, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([52869, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([55729, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([4227, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([13997, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([34211, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2546, 48],"bool"), "float32", )
paddle.Tensor.cast(Tensor([19010, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([18476, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([24609, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([16594, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([13116, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([301115, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([20399, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([32602, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([31002, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([17217, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([22756, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([9669, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([24860, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([50344, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([35393, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([10602, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([3060, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([23058, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([32841, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1675, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([12790, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([1707, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([8665, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([5188, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([35348, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([13495, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([314457, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([42028, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([6108, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([11256, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([39946, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([23801, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([3768, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2148, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([17269, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([24129, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([30, 1, 130, 130],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([48067, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([50776, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([3353, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([2268, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([11796, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([409, 28, 28],"int32"), "float32", )
paddle.Tensor.cast(Tensor([3, 63000],"bool"), "int32", )
paddle.Tensor.cast(Tensor([1545, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([29049, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([42433, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([9087, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([11536, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([36309, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([16974, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([11464, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([27182, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([4472, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([13478, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([13116, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([27746, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([24039, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([27219, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([8550, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([23393, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([26408, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([12686, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([51567, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2812, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([25861, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([25141, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([25582, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([16740, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([6940, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([37266, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([408046, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([14549, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([32602, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([47755, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([39739, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([42528, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([27619, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([4564, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([8384, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([23615, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([4240, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([14742, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([52197, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([44140, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([49925, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([16915, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([44485, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([16564, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([5907, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([26281, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([41850, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([45933, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([243800, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([44026, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([34681, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([26099, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([21686, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([7825, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([7986, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([12694, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([288298, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([25702, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([51334, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([24746, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([19559, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([10248, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1890, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([16179, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([857322],"float32"), "float32", )
paddle.Tensor.cast(Tensor([7, 1, 126, 153],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([24588, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([14913, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([7268, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([22283, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([22879, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([8616, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([5932, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([15793, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([11347, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([22260, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([393, 28, 28],"int32"), "float32", )
paddle.Tensor.cast(Tensor([240216, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([19653, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([15559, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([312966, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([22936, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([14492, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([6083, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2678, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([36150, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([37740, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([29185, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([5822, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([36717, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([39448, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([22990, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([1995, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2088, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([20853, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1401, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([36984, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([384212, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([25280, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([4, 1, 169, 169],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([15903, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([320360, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([20283, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([86484, 11],"bool"), "float32", )
paddle.Tensor.cast(Tensor([25280, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([2387, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([40769, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([22115, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([8386, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([7120, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([37213, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([16411, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([31093, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([13213, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1731, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([15972, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([2061, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([48756, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([16579, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([16887, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([32750, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([44247, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([19518, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([768095],"float32"), "float32", )
paddle.Tensor.cast(Tensor([8271, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([36117, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([319959, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([17441, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([47816, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([20498, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([23765, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([340011, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([14621, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([12754, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1934, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([14300, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([32733, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([324110, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([15292, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([23688, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([284776, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([8475, 15],"bool"), "float32", )
paddle.Tensor.cast(Tensor([38348, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([40402, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([33408, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([8186, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([310829, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([247, 28, 28],"int32"), "float32", )
paddle.Tensor.cast(Tensor([25007, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([356111, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([5742, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([22009, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([14848, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([21556, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([367123, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([14934, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([40744, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([20023, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([28098, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([35378, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([8, 1, 220, 113],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([4308, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([22619, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([5790, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([8, 1, 158, 113],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([37593, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([24869, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([108273, 1],"bool"), "float32", )
paddle.Tensor.cast(Tensor([39044, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([7224, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([52901, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([24857, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([298681, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([25597, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([3060, 35],"bool"), "int", )
paddle.Tensor.cast(Tensor([5196, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([267910, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([2918, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([32300, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([21592, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([15208, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([42166, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([14052, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([20940, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([16346, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([196165, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([1417, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([44002, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([25797, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([16119, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([45957, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([32042, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([13556, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([17524, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([19925, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([26305, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([22874, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([848984],"float32"), "float32", )
paddle.Tensor.cast(Tensor([43778, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([22954, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([44984, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([284727, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([22520, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([56137, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([35240, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([22521, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([4, 60480],"bool"), "int32", )
paddle.Tensor.cast(Tensor([19703, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([41185, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([42818, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([24692, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([22810, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([19817, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([4724, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([18114, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([374322, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([16093, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([34075, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([36386, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([14722, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([9027, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([217161, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([20181, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([7086, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([17896, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([28448, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([24915, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([7892, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([38497, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([26199, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([21788, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([1967, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([27595, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([36721, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([32923, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([5536, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([62390, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([47503, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([4330, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([128, 2048, 1, 3],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([10, 60480],"bool"), "int32", )
paddle.Tensor.cast(Tensor([378, 28, 28],"int32"), "float32", )
paddle.Tensor.cast(Tensor([29305, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([20227, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([33060, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([33273, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([20794, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([10084, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([26512, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([13130, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([31751, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([24038, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([20029, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([18447, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([28806, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([20204, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([22481, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([28816, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([16118, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([239821, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([26348, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([10, 1, 136, 89],"bool"), VarType(bool), )
paddle.Tensor.cast(Tensor([32147, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([23257, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([43925, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([21191, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([31367, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([15356, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([242230, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([29738, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([22555, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([14573, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([30335, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([317281, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([7764, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([15017, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([29408, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([28369, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([38421, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([34969, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([36989, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([157472, 1],"float64"), VarType(float32), )
paddle.Tensor.cast(Tensor([23091, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([46653, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([16838, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([9580, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([25508, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([4277, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([25074, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([27905, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([15569, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([19483, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([29867, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([25739, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([29459, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([25078, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([52377, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([17611, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([6282, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([5421, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([4528, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([17658, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([20011, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([3361, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([7980, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([5577, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([18474, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([7880, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([23482, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([375322, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([12537, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([10405, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([18924, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([15370, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([9852, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2792, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([22171, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([13361, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([291210, 1],"int64"), "int32", )
paddle.Tensor.cast(Tensor([15774, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([30011, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([40857, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2, 208692],"bool"), "int32", )
paddle.Tensor.cast(Tensor([12654, 8],"int64"), dtype=Dtype(int32), )
paddle.Tensor.cast(Tensor([31437, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([19975, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([1024, 728, 1, 1],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([32977, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([29726, 8],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([12285, 80],"float64"), Dtype(float32), )
paddle.Tensor.chunk(Tensor([9, 38, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 181, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 249, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 109, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 20, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 100, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 21, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 77, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 38, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 41, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 219, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 43, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 41, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 46, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 25, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 175, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 20, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 27, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 47, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 22, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 44, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 38, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 66, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 47, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 157, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 101, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 29, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 44, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 97, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 65, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 62, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 169, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 182, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 77, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 222, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 208, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 53, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 17, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 85, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 37, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 32, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 74, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 32, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 30, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 136, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 18, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 43, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 57, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 122, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 17, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 135, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 80, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 105, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 49, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 210, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 133, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 74, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 118, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 40, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 11, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 5, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 76, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 147, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 25, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 137, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 143, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 106, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 39, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 12, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 32, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 103, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 66, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 54, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 93, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 46, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 15, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 231, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 43, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 14, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 110, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 45, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 24, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 45, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 151, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 38, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 58, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 42, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 57, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 203, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 71, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 229, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 168, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 92, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 34, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 82, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 209, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 84, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 73, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 88, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 17, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 113, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 82, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 228, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 13, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 226, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 78, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 239, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 67, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 89, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 103, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 28, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 79, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 60, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 53, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 38, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 50, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 94, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 10, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 99, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 165, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 12, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 107, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 83, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 33, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 29, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 83, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 167, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 52, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 138, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 36, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 194, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 31, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 12, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 51, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 44, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([16, 300, 101],"float32"), 16, )
paddle.Tensor.chunk(Tensor([9, 46, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 139, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 93, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 150, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 19, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 31, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 35, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 48, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([100, 1444, 2, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([9, 40, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 146, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 66, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 41, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 44, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 50, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 193, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 69, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 144, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 21, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 185, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 122, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 47, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 154, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 48, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 69, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 85, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 181, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 61, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 55, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 26, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 59, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 112, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 81, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 44, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 82, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 61, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 150, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 240, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 57, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 18, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 83, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 60, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 157, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 52, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 94, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 168, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 40, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 65, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 148, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 73, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 66, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 95, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 58, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 104, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 161, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 79, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 90, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 232, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 237, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 128, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 54, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 171, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 57, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 152, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 25, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 32, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 105, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 60, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 7, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 24, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 44, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 87, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 119, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 6, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 31, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 162, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 50, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 36, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 108, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 41, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 45, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 86, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 197, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 50, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 96, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 127, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 68, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 126, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 62, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 111, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 10, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 118, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 60, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 171, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 14, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 47, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 177, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 155, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 22, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 7, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 106, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 40, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 36, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 71, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 36, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 19, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 23, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 58, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 187, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 94, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 130, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 30, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 209, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 50, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 33, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 116, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 113, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 176, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 86, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 53, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 19, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 33, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 121, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 127, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 9, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 147, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 180, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 79, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 115, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 131, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([87, 1444, 2, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([1, 1, 61236, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 71, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 129, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 88, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 146, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 43, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 206, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 67, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 45, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 66, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 141, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 14, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 42, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 134, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 77, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 41, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 90, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 35, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 74, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 42, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 24, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 117, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 53, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 116, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 63, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 167, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 75, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 51, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 34, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 94, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 124, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 143, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 175, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 112, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 37, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 21, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 48, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 57, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 80, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 73, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 96, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 98, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 107, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 154, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 138, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 76, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 40, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 81, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 37, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 199, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 110, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 58, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 221, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 16, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 59, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 49, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 120, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 78, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 176, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 45, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 23, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 56, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 37, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 44, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 114, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 45, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 75600, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 34, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 13, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 152, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 247, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 49, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 76, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 80, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 131, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 135, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 35, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 63, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 188, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 11, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 133, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 155, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 61, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 65856, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 37, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 62, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 120, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 216, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 11, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 202, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 46, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 15, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 177, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 36, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 144, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 20, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 180, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 166, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 103, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 62, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 122, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 19, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 10, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 220, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 41, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 125, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 74, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 30, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 73, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 16, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 162, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 158, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 110, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 27, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 111, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 107, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([3, 134, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 163, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 16, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 160, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 11, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 55, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 46, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 20, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 7, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 50, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 43, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 59, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 233, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 61, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 92, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 165, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([2, 207, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.clip(Tensor([2, 75, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3060, 20, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2131, 50, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([7, 50250, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([6593, 18, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 4, 5376, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 11, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 12, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 5, 12096, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 1, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([29, 1935, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 55, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 19, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 3, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3691, 14, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2755, 24, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 212784, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 78750, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([16, 8500, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 63, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 4, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 15, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 171888, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 77760, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([32, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([16, 12, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 62400, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 48, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 76590, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 68310, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([6, 50250, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3258, 32, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([16, 5, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 4, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1439, 69, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 2028, 50, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2092, 42, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3198, 55, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 72, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 59, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 28, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 52500, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 15, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 55890, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([14, 6150, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3602, 19, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 60300, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([12, 9382, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([16, 1, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 19, 21504, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3130, 18, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 52560, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 60480, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 7, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2131, 35, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([6, 78120, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([6424, 11, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 24, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 290052, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([30, 6150, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 56784, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([2002, 37, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 45, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 64170, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 7, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 34, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 432, 50, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([5, 75615, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 158580, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 19, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([104, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([192, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 10285, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 21, 5376, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 343728, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 15, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 14, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([7, 44520, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 26, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 35, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 16, 10164, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 13, 21504, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 768, 50, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4719, 16, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 33, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2828, 28, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 16, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([16, 5, 3060, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([11, 40320, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 293397, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 10, 30324, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 57960, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2343, 51, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4780, 15, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3589, 25, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4154, 15, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 8, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 5, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3, 82080, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([50, 8500, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 61500, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 63840, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([56, 5376, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 42, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 14, 5440, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([14, 7681, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 27, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 4, 61236, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3950, 37, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([40, 2040, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([120, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 20, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 13, 10285, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 13, 6069, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 14, 21504, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 68625, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 73125, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3653, 14, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 27, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1984, 42, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 20, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 23, 6885, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3, 76260, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 24, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 64, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4375, 97, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 3, 9382, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3030, 26, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 9, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 10, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 40, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 95760, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 79, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([28, 10285, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3199, 18, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 68400, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 196416, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2634, 21, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 76800, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 17, 11109, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 347820, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 6, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3469, 15, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 10800, 1, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 61440, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 25, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 73, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 217413, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 8, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 10, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 77625, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 429660, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2459, 64, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 42, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 15, 6069, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 6, 37044, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3, 63000, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3998, 20, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 15, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3398, 15, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 80, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 14, 6150, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 15, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 200022, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 4800, 50, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3, 46080, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 5, 9382, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 68310, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 54000, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 3, 30324, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 9, 52500, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([40, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([5, 71100, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 68160, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 56280, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 73500, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4201, 26, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 16, 24276, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([24, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2366, 31, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3979, 13, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 50250, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 11, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3596, 21, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([9, 54750, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([96, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 62310, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2675, 52, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 56640, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 13, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 214848, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 47, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 4, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([80, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2803, 18, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3270, 53, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([42, 4165, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 19, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4048, 14, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 17, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 72360, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([96, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 322272, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 507, 50, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1857, 28, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 22, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3, 42780, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2932, 30, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([176, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 7, 6885, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([6, 74250, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2522, 39, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 279279, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 37, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1538, 43, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 7, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 3, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([7, 43560, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([7, 46230, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 6, 6069, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 317160, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([14, 5440, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3152, 19, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3904, 28, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([28, 6150, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3080, 35, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 12, 10164, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2942, 27, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2599, 23, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 73920, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2494, 29, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3598, 14, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2431, 24, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 2, 40656, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2764, 19, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 72, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 22, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1360, 43, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2814, 19, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 14, 6150, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3598, 17, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1517, 34, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 51840, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4115, 13, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 26, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 70644, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 79680, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 16, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 14, 9261, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1768, 29, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 70290, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 2, 27216, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 55, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 196416, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 2, 7681, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 61305, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2328, 33, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 9, 12096, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([48, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 10, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3682, 14, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 25, 6150, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 57750, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 3, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([56, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2443, 45, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 4, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 14, 5376, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2611, 20, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 28, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([28, 3598, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 23, 4165, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4631, 12, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([6, 79935, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 22, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([5, 61200, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 57960, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4397, 19, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4284, 38, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 5, 4789, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3, 44220, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 67, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 9, 10285, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2130, 27, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([96, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4571, 12, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 43, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 42780, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 5, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 3, 4789, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([51, 2051, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 26, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 11, 4789, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3584, 21, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 327360, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([48, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2608, 21, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 26, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 94620, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 73365, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 1, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 11, 27216, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2246, 23, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3379, 30, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 6, 70644, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2742, 20, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 285444, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 388032, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 236334, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 62400, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 6804, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([2, 7, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 12, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 14, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([96, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 4, 9261, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([16, 9261, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2604, 26, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2096, 24, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 6, 44436, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3423, 15, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 75375, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 66240, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4437, 21, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 17, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([144, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 63315, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3687, 22, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 69345, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3688, 16, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 29, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([6, 61065, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 300762, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([28, 4789, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3, 64320, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3763, 20, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 7, 9382, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3134, 18, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 48, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 68040, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 6, 10164, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([7, 7681, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 59520, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3211, 16, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4786, 16, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 314595, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([56, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([6, 75030, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 260865, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 3, 9382, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([72, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([7207, 12, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4163, 16, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2890, 28, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 19, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 72000, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 177276, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 313038, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 13, 5376, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 43, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 29, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 31, 5376, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3046, 29, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 16, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 83070, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 40, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([10, 47610, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1541, 45, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 53, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2475, 27, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3084, 18, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([16, 5, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 4, 6069, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 295443, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 66, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3292, 31, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2169, 31, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([64, 1, 3060, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 18, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 71820, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([5775, 9, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 88560, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([7298, 9, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([56, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 39, 4116, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([56, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 16, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 91, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1360, 42, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 168795, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3060, 22, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([32, 2032, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 82080, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([16, 11, 2100, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3253, 24, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 252195, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3060, 43, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 38940, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([16, 1, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3186, 22, 2],"float32"), min=0, )
paddle.Tensor.clone(Tensor([10, 8, 63, 129],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 68, 68],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 105, 113],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 134, 134],"float32"), )
paddle.Tensor.clone(Tensor([1000, 1, 16, 16],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 70, 65],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 67, 261],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 120, 229],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 64, 169],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 128, 81],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 147, 121],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 139, 229],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 153, 85],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 50, 50],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 47, 77],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 135, 129],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 150, 150],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 134, 161],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 50, 50],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 35, 41],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 55, 121],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 77, 77],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 94, 121],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 103, 37],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 100, 65],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 225, 225],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 60, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 39, 81],"float32"), )
paddle.Tensor.clone(Tensor([7780, 32],"int32"), )
paddle.Tensor.clone(Tensor([6, 8, 99, 99],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 104, 73],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 103, 81],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 48, 385],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 38, 89],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 83, 241],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 55, 55],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 59, 97],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 133, 241],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 199, 181],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 88, 45],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 67, 89],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 107, 107],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 209, 209],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 118, 118],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 63, 97],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 128, 89],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 45, 81],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 131, 131],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 75, 261],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 55, 33],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 85, 129],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 85, 81],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 139, 139],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 49, 385],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 143, 57],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 211, 211],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 110, 113],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 57, 21],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 197, 197],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 175, 85],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 68, 229],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 88, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 58, 29],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 35, 73],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 108, 73],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 32, 89],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 164, 129],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 114, 145],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 136, 136],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 69, 73],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 138, 241],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 73, 49],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 130, 73],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 59, 385],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 86, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 53, 33],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 53, 57],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 116, 116],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 136, 145],"float32"), )
paddle.Tensor.clone(Tensor([3399, 32],"int32"), )
paddle.Tensor.clone(Tensor([8, 8, 98, 98],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 119, 85],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 120, 120],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 40, 105],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 68, 145],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 101, 145],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 51, 51],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 39, 39],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 196, 16],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 98, 81],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 60, 241],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 106, 73],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 92, 121],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 84, 137],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 13, 129],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 99, 53],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 51, 51],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 50, 50],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 72, 261],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 105, 105],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 131, 77],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 90, 129],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 111, 111],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 34, 89],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 143, 143],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 39, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 39, 73],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 65, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 116, 65],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 39, 49],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 80, 80],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 61, 89],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 77, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 24, 73],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 80, 241],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 132, 132],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 31, 97],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 127, 73],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 124, 85],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 33, 97],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 81, 129],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 34, 105],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 118, 181],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 109, 121],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 83, 217],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 91, 137],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 227, 227],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 49, 113],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 133, 169],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 44, 53],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 64, 65],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 68, 41],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 78, 25],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 157, 241],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 111, 111],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 35, 97],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 127, 89],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 88, 88],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 123, 81],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 163, 241],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 107, 181],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 146, 57],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 41, 181],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 63, 45],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 37, 97],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 67, 67],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 92, 57],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 156, 169],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 181, 241],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 49, 53],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 44, 29],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 85, 169],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 107, 107],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 143, 241],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 21, 97],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 144, 261],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 140, 385],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 113, 113],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 129, 145],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 119, 169],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 130, 130],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 39, 41],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 129, 81],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 118, 77],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 85, 53],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 231, 169],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 227, 261],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 145, 241],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 78, 45],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 96, 65],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 87, 65],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 159, 385],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 111, 105],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 44, 89],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 52, 53],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 40, 89],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 117, 81],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 108, 108],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 72, 37],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 80, 261],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 69, 49],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 108, 169],"float32"), )
paddle.Tensor.clone(Tensor([5168, 128],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 54, 81],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 79, 97],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 111, 85],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 131, 81],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 119, 57],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 167, 85],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 47, 37],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 170, 170],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 48, 169],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 74, 121],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 80, 85],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 143, 261],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 94, 181],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 51, 385],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 129, 121],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 94, 65],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 144, 144],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 100, 100],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 128, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 100, 37],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 91, 89],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 78, 105],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 41, 81],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 58, 241],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 73, 73],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 71, 261],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 85, 85],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 50, 45],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 53, 105],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 101, 89],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 49, 49],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 193, 193],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 167, 167],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 78, 81],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 41, 89],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 58, 89],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 174, 174],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 67, 121],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 137, 385],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 91, 49],"float32"), )
paddle.Tensor.clone(Tensor([22, 16, 384],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 118, 65],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 89, 229],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 86, 65],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 76, 81],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 45, 113],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 87, 57],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 128, 241],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 63, 161],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 59, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 84, 81],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 58, 65],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 87, 217],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 34, 385],"float32"), )
paddle.Tensor.clone(Tensor([7015, 32],"bfloat16"), )
paddle.Tensor.clone(Tensor([10, 8, 38, 137],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 86, 161],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 53, 37],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 125, 125],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 56, 56],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 96, 81],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 75, 129],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 113, 105],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 104, 37],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 144, 169],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 57, 65],"float32"), )
paddle.Tensor.clone(Tensor([6391, 32],"int32"), )
paddle.Tensor.clone(Tensor([1, 8, 245, 245],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 40, 37],"float32"), )
paddle.Tensor.clone(Tensor([3702, 32],"int32"), )
paddle.Tensor.clone(Tensor([2, 8, 123, 123],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 104, 153],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 47, 129],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 131, 169],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 97, 61],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 122, 169],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 81, 29],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 126, 126],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 110, 110],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 89, 45],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 89, 169],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 56, 77],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 68, 37],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 113, 73],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 46, 53],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 112, 53],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 77, 77],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 87, 181],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 104, 104],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 153, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 78, 49],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 225, 169],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 131, 81],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 28, 49],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 135, 135],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 48, 129],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 167, 77],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 107, 153],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 125, 241],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 105, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 57, 105],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 90, 181],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 43, 49],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 54, 17],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 31, 31],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 112, 161],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 19, 113],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 61, 81],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 137, 113],"float32"), )
paddle.Tensor.clone(Tensor([6870, 32],"int32"), )
paddle.Tensor.clone(Tensor([2, 8, 138, 121],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 70, 37],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 89, 161],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 33, 129],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 139, 57],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 110, 89],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 19, 129],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 112, 57],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 108, 108],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 67, 37],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 73, 53],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 89, 33],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 141, 141],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 146, 77],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 85, 157],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 97, 261],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 41, 77],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 100, 157],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 73, 65],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 128, 77],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 92, 45],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 108, 57],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 91, 29],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 173, 261],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 75, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 55, 29],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 90, 90],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 74, 105],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 110, 110],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 40, 97],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 100, 89],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 118, 89],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 133, 133],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 88, 181],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 114, 114],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 70, 57],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 87, 45],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 95, 181],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 186, 241],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 107, 97],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 69, 105],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 187, 385],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 46, 46],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 45, 49],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 98, 98],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 246, 246],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 122, 65],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 73, 37],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 124, 181],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 137, 137],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 47, 153],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 39, 121],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 95, 65],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 62, 153],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 131, 229],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 138, 129],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 99, 113],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 218, 261],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 87, 105],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 115, 81],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 164, 164],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 19, 137],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 162, 85],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 79, 385],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 144, 129],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 122, 121],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 43, 53],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 42, 57],"float32"), )
paddle.Tensor.clone(Tensor([9, 8, 114, 53],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 94, 129],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 122, 145],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 112, 181],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 130, 121],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 82, 85],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 89, 57],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 105, 241],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 123, 123],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 111, 81],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 140, 169],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 65, 129],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 163, 163],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 63, 81],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 26, 89],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 113, 113],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 42, 89],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 92, 92],"float32"), )
paddle.Tensor.clone(Tensor([5, 8, 100, 100],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 27, 57],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 201, 201],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 25, 113],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 81, 81],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 70, 70],"float32"), )
paddle.Tensor.clone(Tensor([3, 8, 163, 163],"float32"), )
paddle.Tensor.clone(Tensor([1, 8, 167, 169],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 68, 77],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 45, 57],"float32"), )
paddle.Tensor.clone(Tensor([4, 8, 96, 61],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 139, 81],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 56, 89],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 50, 33],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 116, 57],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 70, 73],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 68, 121],"float32"), )
paddle.Tensor.clone(Tensor([2, 8, 111, 111],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 85, 97],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 53, 153],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 43, 113],"float32"), )
paddle.Tensor.cos(Tensor([1, 48, 36, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 1100, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 80, 60, 64],"float32"), )
paddle.Tensor.cos(Tensor([2048, 64],"float32"), )
paddle.Tensor.cos(Tensor([2048, 128],"float32"), )
paddle.Tensor.cos(Tensor([4096, 128],"float32"), )
paddle.Tensor.cos(Tensor([2, 38, 58, 64],"float32"), )
paddle.Tensor.cos(Tensor([4096, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 96, 72, 64],"float32"), )
paddle.Tensor.cos(Tensor([2048, 96],"float32"), )
paddle.Tensor.cos(Tensor([1, 72, 100, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 89, 72, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 36, 50, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 45, 36, 64],"float32"), )
paddle.Tensor.cos(Tensor([4, 25, 29, 64],"float32"), )
paddle.Tensor.cos(Tensor([16, 16, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 20, 15, 64],"float32"), )
paddle.Tensor.cos(Tensor([8192, 4],"float32"), )
paddle.Tensor.cos(Tensor([264, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 18, 25, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 24, 18, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 19, 29, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 23, 18, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 300, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([512, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 1100, 64],"float32"), )
paddle.Tensor.cos(Tensor([24, 24, 64],"float32"), )
paddle.Tensor.cos(Tensor([2048, 8],"float32"), )
paddle.Tensor.cos(Tensor([1, 40, 30, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 10, 15, 64],"float32"), )
paddle.Tensor.cos(Tensor([8192, 8],"float32"), )
paddle.Tensor.cos(Tensor([2048, 32],"float32"), )
paddle.Tensor.cos(Tensor([142, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 21, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 11, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 18, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 9, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 12, 9, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 10, 8, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 21, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([10, 256],"float32"), )
paddle.Tensor.cos(Tensor([6, 256],"float32"), )
paddle.Tensor.cos(Tensor([512, 2],"float32"), )
paddle.Tensor.cos(Tensor([1, 22, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 18, 64],"float32"), )
paddle.Tensor.cos(Tensor([34, 32],"float32"), )
paddle.Tensor.cos(Tensor([2048, 4],"float32"), )
paddle.Tensor.cos(Tensor([7, 256],"float32"), )
paddle.Tensor.cos(Tensor([5, 256],"float32"), )
paddle.Tensor.cos(Tensor([70, 64],"float32"), )
paddle.Tensor.cos(Tensor([512, 4],"float32"), )
paddle.Tensor.cos(Tensor([1, 22, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([512, 8],"float32"), )
paddle.Tensor.cos(Tensor([1, 9, 13, 64],"float32"), )
paddle.Tensor.cumsum(Tensor([300, 40],"int64"), )
paddle.Tensor.cumsum(Tensor([1, 144, 200],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([300, 120],"int64"), )
paddle.Tensor.cumsum(Tensor([1, 144, 200],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 192, 144],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 76, 115],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 192, 144],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 76, 115],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 38, 58],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 36, 50],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 89, 72],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 80, 60],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 19, 29],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 40, 30],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 40, 30],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 45, 36],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 72, 100],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([6, 8, 9, 18],"int64"), )
paddle.Tensor.cumsum(Tensor([1, 72, 100],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 96, 72],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 38, 58],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 36, 50],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 48, 36],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 80, 60],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 48, 36],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 96, 72],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 19, 29],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([4, 25, 29],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 89, 72],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 45, 36],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([4, 25, 29],"float32"), 1, )
paddle.Tensor.detach(Tensor([11760, 80],"float32"), )
paddle.Tensor.detach(Tensor([1, 6, 256, 256],"float32"), )
paddle.Tensor.detach(Tensor([524288],"float16"), )
paddle.Tensor.detach(Tensor([10880, 80],"float16"), )
paddle.Tensor.detach(Tensor([8, 3549, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 300, 256],"float32"), )
paddle.Tensor.detach(Tensor([2688, 80],"float16"), )
paddle.Tensor.detach(Tensor([10890, 80],"float32"), )
paddle.Tensor.detach(Tensor([2880, 80],"float32"), )
paddle.Tensor.detach(Tensor([4096, 64],"bool"), )
paddle.Tensor.detach(Tensor([8, 8500, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 70644, 10],"float32"), )
paddle.Tensor.detach(Tensor([3072, 80],"float32"), )
paddle.Tensor.detach(Tensor([12160, 80],"float32"), )
paddle.Tensor.detach(Tensor([12300, 11],"float32"), )
paddle.Tensor.detach(Tensor([7168, 64],"bfloat16"), )
paddle.Tensor.detach(Tensor([12432, 80],"float16"), )
paddle.Tensor.detach(Tensor([16, 300, 80],"float32"), )
paddle.Tensor.detach(Tensor([32, 2577, 4],"float32"), )
paddle.Tensor.detach(Tensor([4, 27540, 4],"float32"), )
paddle.Tensor.detach(Tensor([8400, 80],"float16"), )
paddle.Tensor.detach(Tensor([3040, 80],"float16"), )
paddle.Tensor.detach(Tensor([11760, 80],"float16"), )
paddle.Tensor.detach(Tensor([5, 21, 1024],"float32"), )
paddle.Tensor.detach(Tensor([6880, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([6870, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([18764, 11],"float32"), )
paddle.Tensor.detach(Tensor([2520, 80],"float16"), )
paddle.Tensor.detach(Tensor([4, 16660, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 70644, 4],"float32"), )
paddle.Tensor.detach(Tensor([3, 389, 330],"uint8"), )
paddle.Tensor.detach(Tensor([17000, 11],"float32"), )
paddle.Tensor.detach(Tensor([3040, 80],"float32"), )
paddle.Tensor.detach(Tensor([2888, 80],"float16"), )
paddle.Tensor.detach(Tensor([1, 56784, 4],"float32"), )
paddle.Tensor.detach(Tensor([3200, 80],"float16"), )
paddle.Tensor.detach(Tensor([8736, 80],"float16"), )
paddle.Tensor.detach(Tensor([4, 6804, 4],"float32"), )
paddle.Tensor.detach(Tensor([2688, 80],"float32"), )
paddle.Tensor.detach(Tensor([3, 370, 235],"uint8"), )
paddle.Tensor.detach(Tensor([8, 8400, 4],"float32"), )
paddle.Tensor.detach(Tensor([1568, 80],"float32"), )
paddle.Tensor.detach(Tensor([8192, 32],"int32"), )
paddle.Tensor.detach(Tensor([3, 193, 214],"uint8"), )
paddle.Tensor.detach(Tensor([12136, 80],"float32"), )
paddle.Tensor.detach(Tensor([3528, 80],"float16"), )
paddle.Tensor.detach(Tensor([5, 22, 1024],"float32"), )
paddle.Tensor.detach(Tensor([2448, 80],"float16"), )
paddle.Tensor.detach(Tensor([16, 8400, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 12096, 10],"float32"), )
paddle.Tensor.detach(Tensor([1, 33600, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 61236, 10],"float32"), )
paddle.Tensor.detach(Tensor([6272, 80],"float32"), )
paddle.Tensor.detach(Tensor([9728, 80],"float32"), )
paddle.Tensor.detach(Tensor([2, 5376, 10],"float32"), )
paddle.Tensor.detach(Tensor([524288],"float32"), )
paddle.Tensor.detach(Tensor([3528, 80],"float32"), )
paddle.Tensor.detach(Tensor([10640, 80],"float16"), )
paddle.Tensor.detach(Tensor([16, 2100, 4],"float32"), )
paddle.Tensor.detach(Tensor([10752, 80],"float16"), )
paddle.Tensor.detach(Tensor([7015, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([10640, 80],"float32"), )
paddle.Tensor.detach(Tensor([7800, 80],"float16"), )
paddle.Tensor.detach(Tensor([2080, 80],"float16"), )
paddle.Tensor.detach(Tensor([75056, 4],"float32"), )
paddle.Tensor.detach(Tensor([7744, 80],"float32"), )
paddle.Tensor.detach(Tensor([8, 10285, 4],"float32"), )
paddle.Tensor.detach(Tensor([64, 2125, 4],"float32"), )
paddle.Tensor.detach(Tensor([6912, 80],"float32"), )
paddle.Tensor.detach(Tensor([8, 12096, 4],"float32"), )
paddle.Tensor.detach(Tensor([256, 1280],"bfloat16"), )
paddle.Tensor.detach(Tensor([5, 23, 1280],"float32"), )
paddle.Tensor.detach(Tensor([11856, 80],"float32"), )
paddle.Tensor.detach(Tensor([11840, 80],"float16"), )
paddle.Tensor.detach(Tensor([10944, 80],"float32"), )
paddle.Tensor.detach(Tensor([9728, 80],"float16"), )
paddle.Tensor.detach(Tensor([2280, 80],"float16"), )
paddle.Tensor.detach(Tensor([7270, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([2856, 80],"float16"), )
paddle.Tensor.detach(Tensor([11552, 80],"float16"), )
paddle.Tensor.detach(Tensor([82280, 4],"float32"), )
paddle.Tensor.detach(Tensor([12136, 80],"float16"), )
paddle.Tensor.detach(Tensor([12464, 80],"float32"), )
paddle.Tensor.detach(Tensor([55080, 4],"float32"), )
paddle.Tensor.detach(Tensor([16, 4116, 4],"float32"), )
paddle.Tensor.detach(Tensor([16, 3549, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 6804, 10],"float32"), )
paddle.Tensor.detach(Tensor([11856, 80],"float16"), )
paddle.Tensor.detach(Tensor([4096, 64],"float32"), )
paddle.Tensor.detach(Tensor([8, 6804, 4],"float32"), )
paddle.Tensor.detach(Tensor([6929, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([11424, 80],"float16"), )
paddle.Tensor.detach(Tensor([16, 256, 8, 8],"float32"), )
paddle.Tensor.detach(Tensor([1, 48384, 10],"float32"), )
paddle.Tensor.detach(Tensor([4, 300, 256],"float32"), )
paddle.Tensor.detach(Tensor([4, 10285, 4],"float32"), )
paddle.Tensor.detach(Tensor([5, 23, 1024],"float32"), )
paddle.Tensor.detach(Tensor([10608, 80],"float16"), )
paddle.Tensor.detach(Tensor([2880, 80],"float16"), )
paddle.Tensor.detach(Tensor([1, 52500, 10],"float32"), )
paddle.Tensor.detach(Tensor([6976, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([1, 21504, 10],"float32"), )
paddle.Tensor.detach(Tensor([2304, 80],"float32"), )
paddle.Tensor.detach(Tensor([10800, 80],"float32"), )
paddle.Tensor.detach(Tensor([8, 4725, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 21504, 15],"float32"), )
paddle.Tensor.detach(Tensor([10920, 80],"float32"), )
paddle.Tensor.detach(Tensor([9578, 11],"float32"), )
paddle.Tensor.detach(Tensor([8112, 80],"float32"), )
paddle.Tensor.detach(Tensor([7020, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([1, 75600, 10],"float32"), )
paddle.Tensor.detach(Tensor([8, 9382, 4],"float32"), )
paddle.Tensor.detach(Tensor([3192, 80],"float16"), )
paddle.Tensor.detach(Tensor([4608, 80],"float32"), )
paddle.Tensor.detach(Tensor([1, 48384, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 30324, 10],"float32"), )
paddle.Tensor.detach(Tensor([48960, 4],"float32"), )
paddle.Tensor.detach(Tensor([6950, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([10032, 80],"float16"), )
paddle.Tensor.detach(Tensor([2128, 80],"float16"), )
paddle.Tensor.detach(Tensor([11248, 80],"float32"), )
paddle.Tensor.detach(Tensor([8208, 80],"float16"), )
paddle.Tensor.detach(Tensor([8, 11109, 4],"float32"), )
paddle.Tensor.detach(Tensor([4096, 80],"float32"), )
paddle.Tensor.detach(Tensor([5, 17, 1280],"float32"), )
paddle.Tensor.detach(Tensor([12432, 80],"float32"), )
paddle.Tensor.detach(Tensor([1, 20, 32000],"float32"), )
paddle.Tensor.detach(Tensor([3192, 80],"float32"), )
paddle.Tensor.detach(Tensor([4, 12096, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 52500, 4],"float32"), )
paddle.Tensor.detach(Tensor([5760, 80],"float32"), )
paddle.Tensor.detach(Tensor([12160, 80],"float16"), )
paddle.Tensor.detach(Tensor([7165, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([3360, 80],"float16"), )
paddle.Tensor.detach(Tensor([2048, 80],"float32"), )
paddle.Tensor.detach(Tensor([100000, 1],"float32"), )
paddle.Tensor.detach(Tensor([1, 33600, 10],"float32"), )
paddle.Tensor.detach(Tensor([128, 1000],"float32"), )
paddle.Tensor.detach(Tensor([4, 27540, 1],"float32"), )
paddle.Tensor.detach(Tensor([128512, 1],"float32"), )
paddle.Tensor.detach(Tensor([4410, 80],"float32"), )
paddle.Tensor.detach(Tensor([11520, 80],"float16"), )
paddle.Tensor.detach(Tensor([7780, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([16, 11109, 4],"float32"), )
paddle.Tensor.detach(Tensor([2720, 80],"float32"), )
paddle.Tensor.detach(Tensor([100, 4, 38, 38],"float32"), )
paddle.Tensor.detach(Tensor([32, 3598, 4],"float32"), )
paddle.Tensor.detach(Tensor([8736, 80],"float32"), )
paddle.Tensor.detach(Tensor([2432, 80],"float16"), )
paddle.Tensor.detach(Tensor([3240, 80],"float32"), )
paddle.Tensor.detach(Tensor([9792, 80],"float16"), )
paddle.Tensor.detach(Tensor([2584, 80],"float32"), )
paddle.Tensor.detach(Tensor([11400, 11],"float32"), )
paddle.Tensor.detach(Tensor([64, 12, 170, 1],"float32"), )
paddle.Tensor.detach(Tensor([9216, 80],"float32"), )
paddle.Tensor.detach(Tensor([2, 10164, 10],"float32"), )
paddle.Tensor.detach(Tensor([3360, 80],"float32"), )
paddle.Tensor.detach(Tensor([5, 20, 1024],"float32"), )
paddle.Tensor.detach(Tensor([32, 4789, 4],"float32"), )
paddle.Tensor.detach(Tensor([48, 3598, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 75600, 4],"float32"), )
paddle.Tensor.detach(Tensor([16, 5376, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 40656, 10],"float32"), )
paddle.Tensor.detach(Tensor([90, 2577, 4],"float32"), )
paddle.Tensor.detach(Tensor([8528, 80],"float16"), )
paddle.Tensor.detach(Tensor([7600, 80],"float16"), )
paddle.Tensor.detach(Tensor([4, 10164, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 40656, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 44436, 4],"float32"), )
paddle.Tensor.detach(Tensor([8208, 80],"float32"), )
paddle.Tensor.detach(Tensor([5408, 80],"float32"), )
paddle.Tensor.detach(Tensor([16, 6069, 4],"float32"), )
paddle.Tensor.detach(Tensor([20, 32100],"float32"), )
paddle.Tensor.detach(Tensor([6960, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([1, 44436, 10],"float32"), )
paddle.Tensor.detach(Tensor([11480, 80],"float16"), )
paddle.Tensor.detach(Tensor([1, 37044, 4],"float32"), )
paddle.Tensor.detach(Tensor([2856, 80],"float32"), )
paddle.Tensor.detach(Tensor([64, 1360, 4],"float32"), )
paddle.Tensor.detach(Tensor([10336, 80],"float32"), )
paddle.Tensor.detach(Tensor([4, 9261, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 56784, 10],"float32"), )
paddle.Tensor.detach(Tensor([4, 11109, 4],"float32"), )
paddle.Tensor.detach(Tensor([5, 21, 1280],"float32"), )
paddle.Tensor.detach(Tensor([64, 1726, 4],"float32"), )
paddle.Tensor.detach(Tensor([2584, 80],"float16"), )
paddle.Tensor.detach(Tensor([3024, 80],"float16"), )
paddle.Tensor.detach(Tensor([8528, 80],"float32"), )
paddle.Tensor.detach(Tensor([3024, 80],"float32"), )
paddle.Tensor.detach(Tensor([2184, 80],"float32"), )
paddle.Tensor.detach(Tensor([24, 10105, 4],"float32"), )
paddle.Tensor.detach(Tensor([10880, 11],"float32"), )
paddle.Tensor.detach(Tensor([12096, 80],"float32"), )
paddle.Tensor.detach(Tensor([4, 24565, 4],"float32"), )
paddle.Tensor.detach(Tensor([5, 24, 1280],"float32"), )
paddle.Tensor.detach(Tensor([2, 11109, 10],"float32"), )
paddle.Tensor.detach(Tensor([1, 21504, 5],"float32"), )
paddle.Tensor.detach(Tensor([6992, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([48, 4165, 4],"float32"), )
paddle.Tensor.detach(Tensor([16, 2541, 4],"float32"), )
paddle.Tensor.detach(Tensor([8, 5376, 4],"float32"), )
paddle.Tensor.detach(Tensor([5, 20, 1280],"float32"), )
paddle.Tensor.detach(Tensor([5, 19, 1280],"float32"), )
paddle.Tensor.detach(Tensor([10064, 80],"float16"), )
paddle.Tensor.detach(Tensor([8, 7581, 4],"float32"), )
paddle.Tensor.detach(Tensor([50, 39, 14, 14, 1],"float32"), )
paddle.Tensor.detach(Tensor([49920, 11],"float32"), )
paddle.Tensor.detach(Tensor([48, 4789, 4],"float32"), )
paddle.Tensor.detach(Tensor([1600, 80],"float32"), )
paddle.Tensor.detach(Tensor([160, 1280],"bfloat16"), )
paddle.Tensor.detach(Tensor([16, 3060, 4],"float32"), )
paddle.Tensor.detach(Tensor([500000],"float32"), )
paddle.Tensor.detach(Tensor([1024, 2, 1, 256],"float16"), )
paddle.Tensor.detach(Tensor([9744, 80],"float16"), )
paddle.Tensor.detach(Tensor([45600, 11],"float32"), )
paddle.Tensor.detach(Tensor([5, 18, 1280],"float32"), )
paddle.Tensor.detach(Tensor([1, 65856, 10],"float32"), )
paddle.Tensor.detach(Tensor([8, 10164, 4],"float32"), )
paddle.Tensor.detach(Tensor([8, 6885, 4],"float32"), )
paddle.Tensor.detach(Tensor([8, 6069, 4],"float32"), )
paddle.Tensor.detach(Tensor([7175, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([500032],"float16"), )
paddle.Tensor.detach(Tensor([1, 27216, 4],"float32"), )
paddle.Tensor.detach(Tensor([68000, 4],"float32"), )
paddle.Tensor.detach(Tensor([41472, 11],"float32"), )
paddle.Tensor.detach(Tensor([360, 592],"float32"), )
paddle.Tensor.detach(Tensor([7290, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([10285, 11],"float32"), )
paddle.Tensor.detach(Tensor([11552, 80],"float32"), )
paddle.Tensor.detach(Tensor([7904, 80],"float16"), )
paddle.Tensor.detach(Tensor([1976, 80],"float32"), )
paddle.Tensor.detach(Tensor([1, 61236, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 8192, 32],"float32"), )
paddle.Tensor.detach(Tensor([27648, 4],"float32"), )
paddle.Tensor.detach(Tensor([20570, 11],"float32"), )
paddle.Tensor.detach(Tensor([8424, 80],"float16"), )
paddle.Tensor.detach(Tensor([8000, 80],"float16"), )
paddle.Tensor.detach(Tensor([102400, 1],"float32"), )
paddle.Tensor.detach(Tensor([5, 22, 1280],"float32"), )
paddle.Tensor.detach(Tensor([6935, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([1024, 2, 2, 64],"float16"), )
paddle.Tensor.detach(Tensor([11088, 80],"float16"), )
paddle.Tensor.detach(Tensor([4, 34000, 1],"float32"), )
paddle.Tensor.detach(Tensor([64, 2577, 4],"float32"), )
paddle.Tensor.detach(Tensor([24, 9180, 4],"float32"), )
paddle.Tensor.detach(Tensor([16, 9261, 4],"float32"), )
paddle.Tensor.detach(Tensor([7904, 80],"float32"), )
paddle.Tensor.detach(Tensor([5, 24, 1024],"float32"), )
paddle.Tensor.detach(Tensor([4, 8400, 4],"float32"), )
paddle.Tensor.detach(Tensor([11152, 80],"float16"), )
paddle.Tensor.detach(Tensor([3872, 80],"float32"), )
paddle.Tensor.detach(Tensor([1280, 320],"bfloat16"), )
paddle.Tensor.detach(Tensor([4, 12240, 4],"float32"), )
paddle.Tensor.detach(Tensor([11088, 80],"float32"), )
paddle.Tensor.detach(Tensor([1, 65856, 4],"float32"), )
paddle.Tensor.detach(Tensor([4, 7581, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 30324, 4],"float32"), )
paddle.Tensor.detach(Tensor([11248, 80],"float16"), )
paddle.Tensor.detach(Tensor([2888, 80],"float32"), )
paddle.Tensor.detach(Tensor([8, 7681, 4],"float32"), )
paddle.Tensor.detach(Tensor([6296, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([1728, 80],"float32"), )
paddle.Tensor.detach(Tensor([10920, 80],"float16"), )
paddle.Tensor.detach(Tensor([6400, 80],"float32"), )
paddle.Tensor.detach(Tensor([12480, 11],"float32"), )
paddle.Tensor.detach(Tensor([6954, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([10032, 80],"float32"), )
paddle.Tensor.detach(Tensor([2184, 80],"float16"), )
paddle.Tensor.detach(Tensor([10752, 80],"float32"), )
paddle.Tensor.detach(Tensor([9382, 11],"float32"), )
paddle.Tensor.detach(Tensor([11152, 80],"float32"), )
paddle.Tensor.detach(Tensor([48, 2577, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 1024, 1, 256],"float16"), )
paddle.Tensor.detach(Tensor([48, 3060, 4],"float32"), )
paddle.Tensor.detach(Tensor([5808, 80],"float32"), )
paddle.Tensor.detach(Tensor([8816, 80],"float16"), )
paddle.Tensor.detach(Tensor([8400, 80],"float32"), )
paddle.Tensor.detach(Tensor([2352, 80],"float32"), )
paddle.Tensor.detach(Tensor([4, 34000, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 9261, 10],"float32"), )
paddle.Tensor.detach(Tensor([1976, 80],"float16"), )
paddle.Tensor.detach(Tensor([8192, 64],"float32"), )
paddle.Tensor.detach(Tensor([28800, 4],"float32"), )
paddle.Tensor.detach(Tensor([5, 16, 1280],"float32"), )
paddle.Tensor.detach(Tensor([7600, 80],"float32"), )
paddle.Tensor.detach(Tensor([2, 7581, 10],"float32"), )
paddle.Tensor.detach(Tensor([5184, 80],"float32"), )
paddle.Tensor.detach(Tensor([16, 512, 4, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 3, 256, 256],"float32"), )
paddle.Tensor.detach(Tensor([16, 12096, 4],"float32"), )
paddle.Tensor.detach(Tensor([2128, 80],"float32"), )
paddle.Tensor.detach(Tensor([3200, 80],"float32"), )
paddle.Tensor.detach(Tensor([7200, 80],"float32"), )
paddle.Tensor.detach(Tensor([10336, 80],"float16"), )
paddle.Tensor.detach(Tensor([7065, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([2736, 80],"float16"), )
paddle.Tensor.detach(Tensor([32, 4165, 4],"float32"), )
paddle.Tensor.detach(Tensor([8, 9261, 4],"float32"), )
paddle.Tensor.detach(Tensor([16, 6804, 4],"float32"), )
paddle.Tensor.detach(Tensor([11424, 80],"float32"), )
paddle.Tensor.detach(Tensor([2, 1024, 2, 64],"float16"), )
paddle.Tensor.detach(Tensor([5, 25, 1280],"float32"), )
paddle.Tensor.detach(Tensor([16, 7581, 4],"float32"), )
paddle.Tensor.detach(Tensor([10608, 80],"float32"), )
paddle.Tensor.detach(Tensor([16, 10164, 4],"float32"), )
paddle.Tensor.detach(Tensor([12096, 80],"float16"), )
paddle.Tensor.detach(Tensor([7052, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([2720, 80],"float16"), )
paddle.Tensor.detach(Tensor([9424, 80],"float16"), )
paddle.Tensor.detach(Tensor([192, 896],"bfloat16"), )
paddle.Tensor.detach(Tensor([2432, 80],"float32"), )
paddle.Tensor.detach(Tensor([13770, 11],"float32"), )
paddle.Tensor.detach(Tensor([10944, 80],"float16"), )
paddle.Tensor.detach(Tensor([11520, 80],"float32"), )
paddle.Tensor.detach(Tensor([15362, 11],"float32"), )
paddle.Tensor.detach(Tensor([2, 8400, 10],"float32"), )
paddle.Tensor.detach(Tensor([1, 24276, 10],"float32"), )
paddle.Tensor.detach(Tensor([8192, 32],"int64"), )
paddle.Tensor.detach(Tensor([12464, 80],"float16"), )
paddle.Tensor.detach(Tensor([61448, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 27216, 10],"float32"), )
paddle.Tensor.detach(Tensor([2240, 80],"float16"), )
paddle.Tensor.detach(Tensor([2, 900, 80],"float32"), )
paddle.Tensor.detach(Tensor([8, 300, 256],"float32"), )
paddle.Tensor.detach(Tensor([512, 30, 20],"float32"), )
paddle.Tensor.detach(Tensor([64, 3060, 4],"float32"), )
paddle.Tensor.detach(Tensor([9408, 80],"float32"), )
paddle.Tensor.detach(Tensor([1, 37044, 10],"float32"), )
paddle.Tensor.detach(Tensor([569, 305],"float32"), )
paddle.Tensor.detach(Tensor([2, 6069, 10],"float32"), )
paddle.Tensor.detach(Tensor([32, 3060, 4],"float32"), )
paddle.Tensor.detach(Tensor([34000, 4],"float32"), )
paddle.Tensor.detach(Tensor([16, 3024, 4],"float32"), )
paddle.Tensor.detach(Tensor([16, 512, 8, 8],"float32"), )
paddle.Tensor.detach(Tensor([16, 2125, 4],"float32"), )
paddle.Tensor.detach(Tensor([2736, 80],"float32"), )
paddle.Tensor.detach(Tensor([10368, 11],"float32"), )
paddle.Tensor.detach(Tensor([7200, 32],"bfloat16"), )
paddle.Tensor.detach(Tensor([16, 128, 16, 16],"float32"), )
paddle.Tensor.detach(Tensor([16, 4725, 4],"float32"), )
paddle.Tensor.detach(Tensor([8, 13125, 4],"float32"), )
paddle.Tensor.detach(Tensor([187679, 1],"float32"), )
paddle.Tensor.detach(Tensor([4, 19125, 4],"float32"), )
paddle.Tensor.detach(Tensor([3, 390, 288],"uint8"), )
paddle.Tensor.detach(Tensor([8, 4116, 4],"float32"), )
paddle.Tensor.detach(Tensor([5, 24, 768],"float32"), )
paddle.Tensor.detach(Tensor([3, 49, 71],"uint8"), )
paddle.Tensor.detach(Tensor([640, 80],"float32"), )
paddle.Tensor.detach(Tensor([73984, 1],"float32"), )
paddle.Tensor.detach(Tensor([2, 11109, 1],"float32"), )
paddle.Tensor.detach(Tensor([20736, 1],"float32"), )
paddle.Tensor.detach(Tensor([5, 13, 768],"float32"), )
paddle.Tensor.detach(Tensor([16384],"float16"), )
paddle.Tensor.detach(Tensor([50, 1501, 1],"float32"), )
paddle.Tensor.detach(Tensor([616, 80],"float16"), )
paddle.Tensor.detach(Tensor([11552, 1],"float32"), )
paddle.Tensor.detach(Tensor([4, 24565, 1],"float32"), )
paddle.Tensor.detach(Tensor([8, 3024, 4],"float32"), )
paddle.Tensor.detach(Tensor([4, 2100, 4],"float32"), )
paddle.Tensor.detach(Tensor([1152, 80],"float32"), )
paddle.Tensor.detach(Tensor([5, 5, 512],"float32"), )
paddle.Tensor.detach(Tensor([5, 20, 768],"float32"), )
paddle.Tensor.detach(Tensor([4165, 11],"float32"), )
paddle.Tensor.detach(Tensor([19806],"float32"), )
paddle.Tensor.detach(Tensor([5440, 11],"float32"), )
paddle.Tensor.detach(Tensor([2, 3024, 4],"float32"), )
paddle.Tensor.detach(Tensor([4, 3060, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 3024, 10],"float32"), )
paddle.Tensor.detach(Tensor([16, 176, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 4725, 4],"float32"), )
paddle.Tensor.detach(Tensor([4004, 24],"float32"), )
paddle.Tensor.detach(Tensor([2, 4116, 4],"float32"), )
paddle.Tensor.detach(Tensor([8330, 11],"float32"), )
paddle.Tensor.detach(Tensor([100, 38, 10],"float32"), )
paddle.Tensor.detach(Tensor([6408, 4],"float32"), )
paddle.Tensor.detach(Tensor([20, 1024],"float32"), )
paddle.Tensor.detach(Tensor([704, 80],"float16"), )
paddle.Tensor.detach(Tensor([1, 5440, 4],"float32"), )
paddle.Tensor.detach(Tensor([18496, 1],"float32"), )
paddle.Tensor.detach(Tensor([52, 30, 20],"float32"), )
paddle.Tensor.detach(Tensor([2, 8500, 1],"float32"), )
paddle.Tensor.detach(Tensor([5, 11, 384],"float32"), )
paddle.Tensor.detach(Tensor([5, 6, 768],"float32"), )
paddle.Tensor.detach(Tensor([1, 24276, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 6804, 4],"float32"), )
paddle.Tensor.detach(Tensor([28, 12, 170, 1],"float32"), )
paddle.Tensor.detach(Tensor([5, 10, 768],"float32"), )
paddle.Tensor.detach(Tensor([1, 4789, 4],"float32"), )
paddle.Tensor.detach(Tensor([5, 7, 384],"float32"), )
paddle.Tensor.detach(Tensor([5, 8, 1024],"float32"), )
paddle.Tensor.detach(Tensor([616, 80],"float32"), )
paddle.Tensor.detach(Tensor([4, 10285, 1],"float32"), )
paddle.Tensor.detach(Tensor([5, 7, 1280],"float32"), )
paddle.Tensor.detach(Tensor([5, 16, 512],"float32"), )
paddle.Tensor.detach(Tensor([5, 7, 768],"float32"), )
paddle.Tensor.detach(Tensor([1, 9382, 4],"float32"), )
paddle.Tensor.detach(Tensor([4, 3024, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 10285, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 6150, 4],"float32"), )
paddle.Tensor.detach(Tensor([2, 9382, 1],"float32"), )
paddle.Tensor.digamma(Tensor([5, 7, 8, 10],"float64"), )
paddle.Tensor.dim(Tensor([6784, 64],"float32"), )
paddle.Tensor.dim(Tensor([16640, 56],"float32"), )
paddle.Tensor.dim(Tensor([28160, 28],"float32"), )
paddle.Tensor.dim(Tensor([4096, 64],"float32"), )
paddle.Tensor.dim(Tensor([14464, 64],"float32"), )
paddle.Tensor.dim(Tensor([8064, 28],"float32"), )
paddle.Tensor.dim(Tensor([11008, 28],"float32"), )
paddle.Tensor.dim(Tensor([15616, 56],"float32"), )
paddle.Tensor.dim(Tensor([13312, 56],"float32"), )
paddle.Tensor.dim(Tensor([18432, 28],"float32"), )
paddle.Tensor.dim(Tensor([3840, 28],"float32"), )
paddle.Tensor.dim(Tensor([19456, 28],"float32"), )
paddle.Tensor.dim(Tensor([4608, 64],"float32"), )
paddle.Tensor.dim(Tensor([17536, 28],"float32"), )
paddle.Tensor.dim(Tensor([5120, 28],"float32"), )
paddle.Tensor.dim(Tensor([4352, 64],"float32"), )
paddle.Tensor.dim(Tensor([11648, 64],"float32"), )
paddle.Tensor.dim(Tensor([14720, 28],"float32"), )
paddle.Tensor.dim(Tensor([2304, 64],"float32"), )
paddle.Tensor.dim(Tensor([4224, 56],"float32"), )
paddle.Tensor.dim(Tensor([2432, 64],"float32"), )
paddle.Tensor.dim(Tensor([27136, 28],"float32"), )
paddle.Tensor.dim(Tensor([7296, 56],"float32"), )
paddle.Tensor.dim(Tensor([10112, 64],"float32"), )
paddle.Tensor.dim(Tensor([26624, 28],"float32"), )
paddle.Tensor.dim(Tensor([9216, 56],"float32"), )
paddle.Tensor.dim(Tensor([8704, 28],"float32"), )
paddle.Tensor.dim(Tensor([20992, 28],"float32"), )
paddle.Tensor.dim(Tensor([5376, 56],"float32"), )
paddle.Tensor.dim(Tensor([122705],"float32"), )
paddle.Tensor.dim(Tensor([117135],"float32"), )
paddle.Tensor.dim(Tensor([11776, 56],"float32"), )
paddle.Tensor.dim(Tensor([21376, 28],"float32"), )
paddle.Tensor.dim(Tensor([6016, 56],"float32"), )
paddle.Tensor.dim(Tensor([5504, 28],"float32"), )
paddle.Tensor.dim(Tensor([4736, 28],"float32"), )
paddle.Tensor.dim(Tensor([10112, 56],"float32"), )
paddle.Tensor.dim(Tensor([6016, 28],"float32"), )
paddle.Tensor.dim(Tensor([12928, 64],"float32"), )
paddle.Tensor.dim(Tensor([5760, 28],"float32"), )
paddle.Tensor.dim(Tensor([9472, 64],"float32"), )
paddle.Tensor.dim(Tensor([25472, 28],"float32"), )
paddle.Tensor.dim(Tensor([5888, 64],"float32"), )
paddle.Tensor.dim(Tensor([14464, 56],"float32"), )
paddle.Tensor.dim(Tensor([9600, 28],"float32"), )
paddle.Tensor.dim(Tensor([14080, 64],"float32"), )
paddle.Tensor.dim(Tensor([20480, 28],"float32"), )
paddle.Tensor.dim(Tensor([9216, 28],"float32"), )
paddle.Tensor.dim(Tensor([5632, 56],"float32"), )
paddle.Tensor.dim(Tensor([38402, 4],"float32"), )
paddle.Tensor.dim(Tensor([19840, 28],"float32"), )
paddle.Tensor.dim(Tensor([27392, 28],"float32"), )
paddle.Tensor.dim(Tensor([31232, 28],"float32"), )
paddle.Tensor.dim(Tensor([12160, 64],"float32"), )
paddle.Tensor.dim(Tensor([13696, 56],"float32"), )
paddle.Tensor.dim(Tensor([14720, 64],"float32"), )
paddle.Tensor.dim(Tensor([10368, 64],"float32"), )
paddle.Tensor.dim(Tensor([9856, 64],"float32"), )
paddle.Tensor.dim(Tensor([6016, 64],"float32"), )
paddle.Tensor.dim(Tensor([13568, 64],"float32"), )
paddle.Tensor.dim(Tensor([9728, 56],"float32"), )
paddle.Tensor.dim(Tensor([33280, 28],"float32"), )
paddle.Tensor.dim(Tensor([10112, 28],"float32"), )
paddle.Tensor.dim(Tensor([10368, 28],"float32"), )
paddle.Tensor.dim(Tensor([16256, 56],"float32"), )
paddle.Tensor.dim(Tensor([30080, 28],"float32"), )
paddle.Tensor.dim(Tensor([1664, 64],"float32"), )
paddle.Tensor.dim(Tensor([8192, 64],"float32"), )
paddle.Tensor.dim(Tensor([24192, 28],"float32"), )
paddle.Tensor.dim(Tensor([13440, 28],"float32"), )
paddle.Tensor.dim(Tensor([28160, 28],"float32"), )
paddle.Tensor.dim(Tensor([19072, 28],"float32"), )
paddle.Tensor.dim(Tensor([11904, 28],"float32"), )
paddle.Tensor.dim(Tensor([12672, 56],"float32"), )
paddle.Tensor.dim(Tensor([17792, 56],"float32"), )
paddle.Tensor.dim(Tensor([32000, 28],"float32"), )
paddle.Tensor.dim(Tensor([6272, 64],"float32"), )
paddle.Tensor.dim(Tensor([12800, 56],"float32"), )
paddle.Tensor.dim(Tensor([33792, 28],"float32"), )
paddle.Tensor.dim(Tensor([16768, 56],"float32"), )
paddle.Tensor.dim(Tensor([34560, 28],"float32"), )
paddle.Tensor.dim(Tensor([15872, 28],"float32"), )
paddle.Tensor.dim(Tensor([4096, 56],"float32"), )
paddle.Tensor.dim(Tensor([5504, 64],"float32"), )
paddle.Tensor.dim(Tensor([104000],"float32"), )
paddle.Tensor.dim(Tensor([9728, 56],"float32"), )
paddle.Tensor.dim(Tensor([9216, 64],"float32"), )
paddle.Tensor.dim(Tensor([5248, 56],"float32"), )
paddle.Tensor.dim(Tensor([24576, 28],"float32"), )
paddle.Tensor.dim(Tensor([7168, 56],"float32"), )
paddle.Tensor.dim(Tensor([34048, 28],"float32"), )
paddle.Tensor.dim(Tensor([15360, 64],"float32"), )
paddle.Tensor.dim(Tensor([6656, 56],"float32"), )
paddle.Tensor.dim(Tensor([4992, 56],"float32"), )
paddle.Tensor.dim(Tensor([7040, 64],"float32"), )
paddle.Tensor.dim(Tensor([13056, 56],"float32"), )
paddle.Tensor.dim(Tensor([17408, 56],"float32"), )
paddle.Tensor.dim(Tensor([11264, 28],"float32"), )
paddle.Tensor.dim(Tensor([25344, 28],"float32"), )
paddle.Tensor.dim(Tensor([14336, 56],"float32"), )
paddle.Tensor.dim(Tensor([3712, 28],"float32"), )
paddle.Tensor.dim(Tensor([8192, 56],"float32"), )
paddle.Tensor.dim(Tensor([28544, 28],"float32"), )
paddle.Tensor.dim(Tensor([107230],"float32"), )
paddle.Tensor.dim(Tensor([14080, 28],"float32"), )
paddle.Tensor.dim(Tensor([10496, 56],"float32"), )
paddle.Tensor.dim(Tensor([14080, 56],"float32"), )
paddle.Tensor.dim(Tensor([113406],"float32"), )
paddle.Tensor.dim(Tensor([6656, 28],"float32"), )
paddle.Tensor.dim(Tensor([31616, 28],"float32"), )
paddle.Tensor.dim(Tensor([14336, 28],"float32"), )
paddle.Tensor.dim(Tensor([10240, 28],"float32"), )
paddle.Tensor.dim(Tensor([10240, 28],"float32"), )
paddle.Tensor.dim(Tensor([9600, 64],"float32"), )
paddle.Tensor.dim(Tensor([7168, 28],"float32"), )
paddle.Tensor.dim(Tensor([12416, 56],"float32"), )
paddle.Tensor.dim(Tensor([8576, 64],"float32"), )
paddle.Tensor.dim(Tensor([25088, 28],"float32"), )
paddle.Tensor.dim(Tensor([10624, 64],"float32"), )
paddle.Tensor.dim(Tensor([256, 768],"float32"), )
paddle.Tensor.dim(Tensor([17024, 28],"float32"), )
paddle.Tensor.dim(Tensor([11776, 28],"float32"), )
paddle.Tensor.dim(Tensor([17280, 56],"float32"), )
paddle.Tensor.dim(Tensor([33536, 28],"float32"), )
paddle.Tensor.dim(Tensor([8320, 56],"float32"), )
paddle.Tensor.dim(Tensor([9984, 28],"float32"), )
paddle.Tensor.dim(Tensor([5888, 56],"float32"), )
paddle.Tensor.dim(Tensor([1792, 64],"float32"), )
paddle.Tensor.dim(Tensor([256, 2048, 1, 1],"float32"), )
paddle.Tensor.dim(Tensor([6656, 56],"float32"), )
paddle.Tensor.dim(Tensor([9984, 56],"float32"), )
paddle.Tensor.dim(Tensor([15872, 56],"float32"), )
paddle.Tensor.dim(Tensor([30208, 28],"float32"), )
paddle.Tensor.dim(Tensor([24320, 28],"float32"), )
paddle.Tensor.dim(Tensor([15872, 28],"float32"), )
paddle.Tensor.dim(Tensor([8704, 64],"float32"), )
paddle.Tensor.dim(Tensor([4992, 28],"float32"), )
paddle.Tensor.dim(Tensor([20608, 28],"float32"), )
paddle.Tensor.dim(Tensor([35712, 28],"float32"), )
paddle.Tensor.dim(Tensor([19584, 28],"float32"), )
paddle.Tensor.dim(Tensor([11904, 56],"float32"), )
paddle.Tensor.dim(Tensor([4224, 28],"float32"), )
paddle.Tensor.dim(Tensor([14848, 64],"float32"), )
paddle.Tensor.dim(Tensor([23040, 28],"float32"), )
paddle.Tensor.dim(Tensor([11648, 56],"float32"), )
paddle.Tensor.dim(Tensor([12928, 28],"float32"), )
paddle.Tensor.dim(Tensor([30848, 28],"float32"), )
paddle.Tensor.dim(Tensor([8448, 28],"float32"), )
paddle.Tensor.dim(Tensor([14848, 56],"float32"), )
paddle.Tensor.dim(Tensor([17024, 56],"float32"), )
paddle.Tensor.dim(Tensor([16640, 28],"float32"), )
paddle.Tensor.dim(Tensor([9216, 56],"float32"), )
paddle.Tensor.dim(Tensor([2304, 56],"float32"), )
paddle.Tensor.dim(Tensor([9088, 28],"float32"), )
paddle.Tensor.dim(Tensor([23424, 28],"float32"), )
paddle.Tensor.dim(Tensor([22016, 28],"float32"), )
paddle.Tensor.dim(Tensor([6144, 28],"float32"), )
paddle.Tensor.dim(Tensor([4352, 56],"float32"), )
paddle.Tensor.dim(Tensor([2176, 56],"float32"), )
paddle.Tensor.dim(Tensor([11648, 28],"float32"), )
paddle.Tensor.dim(Tensor([15360, 28],"float32"), )
paddle.Tensor.dim(Tensor([1920, 56],"float32"), )
paddle.Tensor.dim(Tensor([35456, 28],"float32"), )
paddle.Tensor.dim(Tensor([23168, 28],"float32"), )
paddle.Tensor.dim(Tensor([27904, 28],"float32"), )
paddle.Tensor.dim(Tensor([11392, 56],"float32"), )
paddle.Tensor.dim(Tensor([102464],"float32"), )
paddle.Tensor.dim(Tensor([14976, 28],"float32"), )
paddle.Tensor.dim(Tensor([2048, 256],"float32"), )
paddle.Tensor.dim(Tensor([7168, 64],"float32"), )
paddle.Tensor.dim(Tensor([21632, 28],"float32"), )
paddle.Tensor.dim(Tensor([28928, 28],"float32"), )
paddle.Tensor.dim(Tensor([20736, 28],"float32"), )
paddle.Tensor.dim(Tensor([14464, 28],"float32"), )
paddle.Tensor.dim(Tensor([20096, 28],"float32"), )
paddle.Tensor.dim(Tensor([2048, 64],"float32"), )
paddle.Tensor.dim(Tensor([7168, 28],"float32"), )
paddle.Tensor.dim(Tensor([33408, 28],"float32"), )
paddle.Tensor.dim(Tensor([10496, 28],"float32"), )
paddle.Tensor.dim(Tensor([7808, 64],"float32"), )
paddle.Tensor.dim(Tensor([22528, 28],"float32"), )
paddle.Tensor.dim(Tensor([22400, 28],"float32"), )
paddle.Tensor.dim(Tensor([15360, 56],"float32"), )
paddle.Tensor.dim(Tensor([35328, 28],"float32"), )
paddle.Tensor.dim(Tensor([12800, 28],"float32"), )
paddle.Tensor.dim(Tensor([33664, 28],"float32"), )
paddle.Tensor.dim(Tensor([10752, 56],"float32"), )
paddle.Tensor.dim(Tensor([9344, 28],"float32"), )
paddle.Tensor.dim(Tensor([25728, 28],"float32"), )
paddle.Tensor.dim(Tensor([8960, 64],"float32"), )
paddle.Tensor.dim(Tensor([25216, 28],"float32"), )
paddle.Tensor.dim(Tensor([28288, 28],"float32"), )
paddle.Tensor.dim(Tensor([7040, 56],"float32"), )
paddle.Tensor.dim(Tensor([26368, 28],"float32"), )
paddle.Tensor.dim(Tensor([3584, 64],"float32"), )
paddle.Tensor.dim(Tensor([29184, 28],"float32"), )
paddle.Tensor.dim(Tensor([12544, 28],"float32"), )
paddle.Tensor.dim(Tensor([13312, 28],"float32"), )
paddle.Tensor.dim(Tensor([30720, 28],"float32"), )
paddle.Tensor.dim(Tensor([13696, 28],"float32"), )
paddle.Tensor.dim(Tensor([4864, 56],"float32"), )
paddle.Tensor.dim(Tensor([20480, 28],"float32"), )
paddle.Tensor.dim(Tensor([15104, 64],"float32"), )
paddle.Tensor.dim(Tensor([13696, 64],"float32"), )
paddle.Tensor.dim(Tensor([22016, 28],"float32"), )
paddle.Tensor.dim(Tensor([27776, 28],"float32"), )
paddle.Tensor.dim(Tensor([13824, 56],"float32"), )
paddle.Tensor.dim(Tensor([27136, 28],"float32"), )
paddle.Tensor.dim(Tensor([20224, 28],"float32"), )
paddle.Tensor.dim(Tensor([14336, 56],"float32"), )
paddle.Tensor.dim(Tensor([12288, 56],"float32"), )
paddle.Tensor.dim(Tensor([18176, 28],"float32"), )
paddle.Tensor.dim(Tensor([21248, 28],"float32"), )
paddle.Tensor.dim(Tensor([4096, 224],"float32"), )
paddle.Tensor.dim(Tensor([13440, 64],"float32"), )
paddle.Tensor.dim(Tensor([19328, 28],"float32"), )
paddle.Tensor.dim(Tensor([5376, 28],"float32"), )
paddle.Tensor.dim(Tensor([3328, 56],"float32"), )
paddle.Tensor.dim(Tensor([18816, 28],"float32"), )
paddle.Tensor.dim(Tensor([30208, 28],"float32"), )
paddle.Tensor.dim(Tensor([13824, 28],"float32"), )
paddle.Tensor.dim(Tensor([118926],"float32"), )
paddle.Tensor.dim(Tensor([12288, 28],"float32"), )
paddle.Tensor.dim(Tensor([2560, 56],"float32"), )
paddle.Tensor.dim(Tensor([26240, 28],"float32"), )
paddle.Tensor.dim(Tensor([16896, 28],"float32"), )
paddle.Tensor.dim(Tensor([6144, 28],"float32"), )
paddle.Tensor.dim(Tensor([6912, 64],"float32"), )
paddle.Tensor.dim(Tensor([31744, 28],"float32"), )
paddle.Tensor.dim(Tensor([8832, 56],"float32"), )
paddle.Tensor.dim(Tensor([29696, 28],"float32"), )
paddle.Tensor.dim(Tensor([34304, 28],"float32"), )
paddle.Tensor.dim(Tensor([7680, 28],"float32"), )
paddle.Tensor.dim(Tensor([16384, 56],"float32"), )
paddle.Tensor.dim(Tensor([3840, 64],"float32"), )
paddle.Tensor.dim(Tensor([11264, 56],"float32"), )
paddle.Tensor.dim(Tensor([2688, 64],"float32"), )
paddle.Tensor.dim(Tensor([5888, 28],"float32"), )
paddle.Tensor.dim(Tensor([29184, 28],"float32"), )
paddle.Tensor.dim(Tensor([2944, 64],"float32"), )
paddle.Tensor.dim(Tensor([10240, 56],"float32"), )
paddle.Tensor.dim(Tensor([7296, 28],"float32"), )
paddle.Tensor.dim(Tensor([2816, 56],"float32"), )
paddle.Tensor.dim(Tensor([22144, 28],"float32"), )
paddle.Tensor.dim(Tensor([12160, 56],"float32"), )
paddle.Tensor.dim(Tensor([15616, 64],"float32"), )
paddle.Tensor.dim(Tensor([14976, 64],"float32"), )
paddle.Tensor.dim(Tensor([13184, 56],"float32"), )
paddle.Tensor.dim(Tensor([4736, 64],"float32"), )
paddle.Tensor.dim(Tensor([33024, 28],"float32"), )
paddle.Tensor.dim(Tensor([4480, 28],"float32"), )
paddle.Tensor.dim(Tensor([5632, 28],"float32"), )
paddle.Tensor.dim(Tensor([34176, 28],"float32"), )
paddle.Tensor.dim(Tensor([17152, 56],"float32"), )
paddle.Tensor.dim(Tensor([9728, 28],"float32"), )
paddle.Tensor.dim(Tensor([13184, 28],"float32"), )
paddle.Tensor.dim(Tensor([29952, 28],"float32"), )
paddle.Tensor.dim(Tensor([23552, 28],"float32"), )
paddle.Tensor.dim(Tensor([9088, 56],"float32"), )
paddle.Tensor.dim(Tensor([110560],"float32"), )
paddle.Tensor.dim(Tensor([18048, 28],"float32"), )
paddle.Tensor.dim(Tensor([32768, 28],"float32"), )
paddle.Tensor.dim(Tensor([32768, 28],"float32"), )
paddle.Tensor.dim(Tensor([8320, 28],"float32"), )
paddle.Tensor.dim(Tensor([24064, 28],"float32"), )
paddle.Tensor.dim(Tensor([104464],"float32"), )
paddle.Tensor.dim(Tensor([117570],"float32"), )
paddle.Tensor.dim(Tensor([2944, 56],"float32"), )
paddle.Tensor.dim(Tensor([24704, 28],"float32"), )
paddle.Tensor.dim(Tensor([8576, 28],"float32"), )
paddle.Tensor.dim(Tensor([17792, 28],"float32"), )
paddle.Tensor.dim(Tensor([33920, 28],"float32"), )
paddle.Tensor.dim(Tensor([6144, 56],"float32"), )
paddle.Tensor.dim(Tensor([2560, 56],"float32"), )
paddle.Tensor.dim(Tensor([24576, 28],"float32"), )
paddle.Tensor.dim(Tensor([13824, 56],"float32"), )
paddle.Tensor.dim(Tensor([3584, 56],"float32"), )
paddle.Tensor.dim(Tensor([5632, 28],"float32"), )
paddle.Tensor.dim(Tensor([10880, 56],"float32"), )
paddle.Tensor.dim(Tensor([12288, 56],"float32"), )
paddle.Tensor.dim(Tensor([8832, 28],"float32"), )
paddle.Tensor.dim(Tensor([5248, 28],"float32"), )
paddle.Tensor.dim(Tensor([26496, 28],"float32"), )
paddle.Tensor.dim(Tensor([13568, 56],"float32"), )
paddle.Tensor.dim(Tensor([122160],"float32"), )
paddle.Tensor.dim(Tensor([4864, 64],"float32"), )
paddle.Tensor.dim(Tensor([3328, 64],"float32"), )
paddle.Tensor.dim(Tensor([4096, 28],"float32"), )
paddle.Tensor.dim(Tensor([10880, 64],"float32"), )
paddle.Tensor.dim(Tensor([4864, 28],"float32"), )
paddle.Tensor.dim(Tensor([9088, 64],"float32"), )
paddle.Tensor.dim(Tensor([5632, 64],"float32"), )
paddle.Tensor.dim(Tensor([12800, 28],"float32"), )
paddle.Tensor.dim(Tensor([12288, 64],"float32"), )
paddle.Tensor.dim(Tensor([26880, 28],"float32"), )
paddle.Tensor.dim(Tensor([15488, 28],"float32"), )
paddle.Tensor.dim(Tensor([9728, 28],"float32"), )
paddle.Tensor.dim(Tensor([32512, 28],"float32"), )
paddle.Tensor.dim(Tensor([27264, 28],"float32"), )
paddle.Tensor.dim(Tensor([4480, 56],"float32"), )
paddle.Tensor.dim(Tensor([7296, 64],"float32"), )
paddle.Tensor.dim(Tensor([28672, 28],"float32"), )
paddle.Tensor.dim(Tensor([15488, 64],"float32"), )
paddle.Tensor.dim(Tensor([13440, 56],"float32"), )
paddle.Tensor.dim(Tensor([256, 2048],"float32"), )
paddle.Tensor.dim(Tensor([12032, 28],"float32"), )
paddle.Tensor.dim(Tensor([4992, 64],"float32"), )
paddle.Tensor.dim(Tensor([9856, 56],"float32"), )
paddle.Tensor.dim(Tensor([34816, 28],"float32"), )
paddle.Tensor.dim(Tensor([111312],"float32"), )
paddle.Tensor.dim(Tensor([512, 1536],"float32"), )
paddle.Tensor.dim(Tensor([15232, 28],"float32"), )
paddle.Tensor.dim(Tensor([5504, 56],"float32"), )
paddle.Tensor.dim(Tensor([14592, 56],"float32"), )
paddle.Tensor.dim(Tensor([11264, 28],"float32"), )
paddle.Tensor.dim(Tensor([12544, 56],"float32"), )
paddle.Tensor.dim(Tensor([4352, 28],"float32"), )
paddle.Tensor.dim(Tensor([27520, 28],"float32"), )
paddle.Tensor.dim(Tensor([12416, 64],"float32"), )
paddle.Tensor.dim(Tensor([9472, 56],"float32"), )
paddle.Tensor.dim(Tensor([16512, 28],"float32"), )
paddle.Tensor.dim(Tensor([16384, 56],"float32"), )
paddle.Tensor.dim(Tensor([14592, 28],"float32"), )
paddle.Tensor.dim(Tensor([3456, 56],"float32"), )
paddle.Tensor.dim(Tensor([30464, 28],"float32"), )
paddle.Tensor.dim(Tensor([6144, 56],"float32"), )
paddle.Tensor.dim(Tensor([7424, 64],"float32"), )
paddle.Tensor.dim(Tensor([6656, 28],"float32"), )
paddle.Tensor.dim(Tensor([384, 1152],"float32"), )
paddle.Tensor.dim(Tensor([12800, 64],"float32"), )
paddle.Tensor.dim(Tensor([20864, 28],"float32"), )
paddle.Tensor.dim(Tensor([7808, 28],"float32"), )
paddle.Tensor.dim(Tensor([29312, 28],"float32"), )
paddle.Tensor.dim(Tensor([4608, 56],"float32"), )
paddle.Tensor.dim(Tensor([112000],"float32"), )
paddle.Tensor.dim(Tensor([17664, 28],"float32"), )
paddle.Tensor.dim(Tensor([16896, 28],"float32"), )
paddle.Tensor.dim(Tensor([6784, 28],"float32"), )
paddle.Tensor.dim(Tensor([12160, 28],"float32"), )
paddle.Tensor.dim(Tensor([137441],"float32"), )
paddle.Tensor.dim(Tensor([11392, 64],"float32"), )
paddle.Tensor.dim(Tensor([17920, 28],"float32"), )
paddle.Tensor.dim(Tensor([6528, 56],"float32"), )
paddle.Tensor.dim(Tensor([7424, 28],"float32"), )
paddle.Tensor.dim(Tensor([23552, 28],"float32"), )
paddle.Tensor.dim(Tensor([7680, 64],"float32"), )
paddle.Tensor.dim(Tensor([6528, 28],"float32"), )
paddle.Tensor.dim(Tensor([30336, 28],"float32"), )
paddle.Tensor.dim(Tensor([11904, 64],"float32"), )
paddle.Tensor.dim(Tensor([28416, 28],"float32"), )
paddle.Tensor.dim(Tensor([11008, 64],"float32"), )
paddle.Tensor.dim(Tensor([13056, 28],"float32"), )
paddle.Tensor.dim(Tensor([8192, 56],"float32"), )
paddle.Tensor.dim(Tensor([11392, 28],"float32"), )
paddle.Tensor.dim(Tensor([14848, 28],"float32"), )
paddle.Tensor.dim(Tensor([27648, 28],"float32"), )
paddle.Tensor.dim(Tensor([9216, 28],"float32"), )
paddle.Tensor.dim(Tensor([23680, 28],"float32"), )
paddle.Tensor.dim(Tensor([23040, 28],"float32"), )
paddle.Tensor.dim(Tensor([2688, 56],"float32"), )
paddle.Tensor.dim(Tensor([12032, 56],"float32"), )
paddle.Tensor.dim(Tensor([26752, 28],"float32"), )
paddle.Tensor.dim(Tensor([10624, 56],"float32"), )
paddle.Tensor.dim(Tensor([12416, 28],"float32"), )
paddle.Tensor.dim(Tensor([3456, 64],"float32"), )
paddle.Tensor.dim(Tensor([11776, 28],"float32"), )
paddle.Tensor.dim(Tensor([7424, 56],"float32"), )
paddle.Tensor.dim(Tensor([30592, 28],"float32"), )
paddle.Tensor.dim(Tensor([12032, 64],"float32"), )
paddle.Tensor.dim(Tensor([8448, 64],"float32"), )
paddle.Tensor.dim(Tensor([129152],"float32"), )
paddle.Tensor.dim(Tensor([25984, 28],"float32"), )
paddle.Tensor.dim(Tensor([5632, 56],"float32"), )
paddle.Tensor.dim(Tensor([19968, 28],"float32"), )
paddle.Tensor.dim(Tensor([3584, 28],"float32"), )
paddle.Tensor.dim(Tensor([28800, 28],"float32"), )
paddle.Tensor.dim(Tensor([16128, 28],"float32"), )
paddle.Tensor.dim(Tensor([31872, 28],"float32"), )
paddle.Tensor.dim(Tensor([6400, 64],"float32"), )
paddle.Tensor.dim(Tensor([10752, 64],"float32"), )
paddle.Tensor.dim(Tensor([11136, 64],"float32"), )
paddle.Tensor.dim(Tensor([18560, 28],"float32"), )
paddle.Tensor.dim(Tensor([11776, 64],"float32"), )
paddle.Tensor.dim(Tensor([11520, 28],"float32"), )
paddle.Tensor.dim(Tensor([7808, 56],"float32"), )
paddle.Tensor.dim(Tensor([18944, 28],"float32"), )
paddle.Tensor.dim(Tensor([25600, 28],"float32"), )
paddle.Tensor.dim(Tensor([3712, 56],"float32"), )
paddle.Tensor.dim(Tensor([29696, 28],"float32"), )
paddle.Tensor.dim(Tensor([26112, 28],"float32"), )
paddle.Tensor.dim(Tensor([3584, 56],"float32"), )
paddle.Tensor.dim(Tensor([32896, 28],"float32"), )
paddle.Tensor.dim(Tensor([11264, 56],"float32"), )
paddle.Tensor.dim(Tensor([15744, 56],"float32"), )
paddle.Tensor.dim(Tensor([10624, 28],"float32"), )
paddle.Tensor.dim(Tensor([8, 1, 241, 241],"float32"), )
paddle.Tensor.dim(Tensor([11136, 56],"float32"), )
paddle.Tensor.dim(Tensor([13312, 64],"float32"), )
paddle.Tensor.dim(Tensor([16896, 56],"float32"), )
paddle.Tensor.dim(Tensor([6912, 28],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 9, 7, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 432, 1536],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 4096, 64],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 8, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 9, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 144, 1024],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 1024, 320],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 192, 16, 16],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 8, 7, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 320, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 10, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 144, 1536],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 128, 16, 80],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 4800, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 1200, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 588, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 256, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 1024, 160],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 256, 512],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 640, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 49, 1536],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 300, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([12, 49, 1024],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 256, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 1280, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 49, 1536],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 128, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 128, 32, 32],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 7, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 49, 1024],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 256, 8, 80],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 196, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([512, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([192, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.equal(Tensor([128, 128],"int64"), Tensor([128, 128],"int64"), )
paddle.Tensor.exp(Tensor([2800],"float32"), )
paddle.Tensor.exp(Tensor([64, 20],"float32"), )
paddle.Tensor.expand(Tensor([184832, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([204672, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([189440, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([174720, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([194560, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([194176, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([174080, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([141056, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([198912, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([193536, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 435, 435],"float32"), list[7,1,435,435,], )
paddle.Tensor.expand(Tensor([128000, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([204288, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([134400, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 900, 256],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([215040, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([156672, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 500, 400],"float64"), list[3,500,400,], )
paddle.Tensor.expand(Tensor([1, 1, 396, 396],"bool"), list[4,1,396,396,], )
paddle.Tensor.expand(Tensor([204800, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([220416, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([165376, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([199424, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([170240, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 197, 768],"float16"), list[16,-1,-1,], )
paddle.Tensor.expand(Tensor([126464, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 346, 346],"bool"), list[2,1,346,346,], )
paddle.Tensor.expand(Tensor([188160, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([161024, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([179968, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 377, 377],"bool"), list[4,1,377,377,], )
paddle.Tensor.expand(Tensor([150784, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([124800, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([182784, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([155648, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([13, 2, 1, 1007, 8],"float32"), list[13,2,2,1007,8,], )
paddle.Tensor.expand(Tensor([1, 400, 300],"float32"), list[1,400,300,], )
paddle.Tensor.expand(Tensor([1, 197, 768],"float32"), list[16,-1,-1,], )
paddle.Tensor.expand(Tensor([183680, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([131328, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([139776, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([209664, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([136448, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([172032, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([225792, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 512, 512],"bool"), list[8,1,512,512,], )
paddle.Tensor.expand(Tensor([169728, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([177408, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([121600, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([178432, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([155904, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([160512, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([134784, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([512, 512],"float32"), list[16,16,512,512,], )
paddle.Tensor.expand(Tensor([184320, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([175104, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([189696, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 346, 346],"bool"), list[4,1,346,346,], )
paddle.Tensor.expand(Tensor([1, 500, 400],"float64"), list[1,500,400,], )
paddle.Tensor.expand(Tensor([1, 1, 286, 286],"float32"), list[7,1,286,286,], )
paddle.Tensor.expand(Tensor([49728, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([32832, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 141, 141],"bool"), list[4,1,141,141,], )
paddle.Tensor.expand(Tensor([33600, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([10752, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 107, 235],"bool"), list[2,1,107,235,], )
paddle.Tensor.expand(Tensor([1, 1, 288, 288],"bool"), list[2,1,288,288,], )
paddle.Tensor.expand(Tensor([37696, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([10285, 1],"float32"), list[8,10285,1,], )
paddle.Tensor.expand(Tensor([11480, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 13, 1007, 1],"float32"), tuple(2,13,1007,16,), )
paddle.Tensor.expand(Tensor([10285, 2],"float32"), list[2,10285,2,], )
paddle.Tensor.expand(Tensor([53760, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 144, 200, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([13104, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([47040, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 111, 239],"bool"), list[2,1,111,239,], )
paddle.Tensor.expand(Tensor([10880, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([12136, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([7681, 2],"float32"), list[1,7681,2,], )
paddle.Tensor.expand(Tensor([13440, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([9382, 2],"float32"), list[8,9382,2,], )
paddle.Tensor.expand(Tensor([6150, 2],"float32"), list[1,6150,2,], )
paddle.Tensor.expand(Tensor([2, 8, 1, 6, 128],"float32"), list[2,8,4,6,128,], )
paddle.Tensor.expand(Tensor([10032, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([46080, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 115, 115],"bool"), list[4,1,115,115,], )
paddle.Tensor.expand(Tensor([7681, 2],"float32"), list[8,7681,2,], )
paddle.Tensor.expand(Tensor([52416, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([43520, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 111, 111],"bool"), list[2,1,111,111,], )
paddle.Tensor.expand(Tensor([38912, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 110, 110],"bool"), list[2,1,110,110,], )
paddle.Tensor.expand(Tensor([1, 192, 144, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([10640, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([12768, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([49856, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([44608, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([43008, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([10608, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 302, 302],"bool"), list[2,1,302,302,], )
paddle.Tensor.expand(Tensor([1, 1, 186, 186],"float32"), list[7,1,186,186,], )
paddle.Tensor.expand(Tensor([35264, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([11520, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([44352, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 74, 202],"bool"), list[2,1,74,202,], )
paddle.Tensor.expand(Tensor([10920, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 209, 209],"float32"), list[7,1,209,209,], )
paddle.Tensor.expand(Tensor([12792, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([43776, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([33696, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 112, 240],"bool"), list[2,1,112,240,], )
paddle.Tensor.expand(Tensor([51168, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([31616, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([55104, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 152, 152],"bool"), list[4,1,152,152,], )
paddle.Tensor.expand(Tensor([5440, 2],"float32"), list[2,5440,2,], )
paddle.Tensor.expand(Tensor([5440, 2],"float32"), list[1,5440,2,], )
paddle.Tensor.expand(Tensor([6150, 2],"float32"), list[2,6150,2,], )
paddle.Tensor.expand(Tensor([11840, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([7681, 2],"float32"), list[2,7681,2,], )
paddle.Tensor.expand(Tensor([11248, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 304, 304],"bool"), list[2,1,304,304,], )
paddle.Tensor.expand(Tensor([34944, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([41344, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 172, 172],"bool"), list[4,1,172,172,], )
paddle.Tensor.expand(Tensor([11088, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 304, 304],"bool"), list[4,1,304,304,], )
paddle.Tensor.expand(Tensor([6885, 2],"float32"), list[1,6885,2,], )
paddle.Tensor.expand(Tensor([1, 13, 1007, 1, 1],"float32"), tuple(2,13,1007,2,16,), )
paddle.Tensor.expand(Tensor([44992, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([13, 1, 1, 1024],"int32"), list[13,1,1024,1024,], )
paddle.Tensor.expand(Tensor([10285, 1],"float32"), list[2,10285,1,], )
paddle.Tensor.expand(Tensor([8500, 2],"float32"), list[1,8500,2,], )
paddle.Tensor.expand(Tensor([1, 1, 109, 237],"bool"), list[2,1,109,237,], )
paddle.Tensor.expand(Tensor([56448, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 165, 165],"float32"), list[7,1,165,165,], )
paddle.Tensor.expand(Tensor([1, 1, 147, 147],"bool"), list[4,1,147,147,], )
paddle.Tensor.expand(Tensor([14112, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([38976, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([10285, 1],"float32"), list[1,10285,1,], )
paddle.Tensor.expand(Tensor([10944, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([30400, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 209, 209],"float32"), list[14,1,209,209,], )
paddle.Tensor.expand(Tensor([8500, 2],"float32"), list[8,8500,2,], )
paddle.Tensor.expand(Tensor([10064, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([11552, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([43680, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([48544, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([51072, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([13776, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([32000, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 206, 206],"float32"), list[7,1,206,206,], )
paddle.Tensor.expand(Tensor([1, 72, 100, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([45696, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([34112, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 114, 114],"bool"), list[2,1,114,114,], )
paddle.Tensor.expand(Tensor([39168, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 107, 107],"bool"), list[2,1,107,107,], )
paddle.Tensor.expand(Tensor([12800, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([47424, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([47360, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([13, 1, 1, 1007],"bool"), list[13,1,1007,1007,], )
paddle.Tensor.expand(Tensor([1, 1, 198, 198],"bool"), list[4,1,198,198,], )
paddle.Tensor.expand(Tensor([8500, 2],"float32"), list[2,8500,2,], )
paddle.Tensor.expand(Tensor([1, 1, 148, 148],"bool"), list[4,1,148,148,], )
paddle.Tensor.expand(Tensor([9382, 2],"float32"), list[1,9382,2,], )
paddle.Tensor.expand(Tensor([1, 300, 256],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([45920, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([40256, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 280, 350],"float32"), list[1,280,350,], )
paddle.Tensor.expand(Tensor([42560, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([10285, 2],"float32"), list[1,10285,2,], )
paddle.Tensor.expand(Tensor([6885, 2],"float32"), list[8,6885,2,], )
paddle.Tensor.expand(Tensor([1, 128, 256],"float32"), list[256,-1,-1,], )
paddle.Tensor.expand(Tensor([12096, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 220, 220],"float32"), list[7,1,220,220,], )
paddle.Tensor.expand(Tensor([11152, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([10336, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 127, 127],"bool"), list[4,1,127,127,], )
paddle.Tensor.expand(Tensor([1, 1, 79, 207],"bool"), list[2,1,79,207,], )
paddle.Tensor.expand(Tensor([10285, 2],"float32"), list[8,10285,2,], )
paddle.Tensor.expand(Tensor([48384, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 89, 72, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([11760, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([46208, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 82, 210],"bool"), list[2,1,82,210,], )
paddle.Tensor.expand(Tensor([4, 1, 141, 141],"bool"), list[4,1,141,141,], )
paddle.Tensor.expand(Tensor([48640, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 110, 238],"bool"), list[2,1,110,238,], )
paddle.Tensor.expand(Tensor([1, 1, 91, 219],"bool"), list[2,1,91,219,], )
paddle.Tensor.expand(Tensor([1, 96, 72, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 1, 164, 164],"bool"), list[4,1,164,164,], )
paddle.Tensor.expand(Tensor([1, 1, 109, 109],"bool"), list[2,1,109,109,], )
paddle.Tensor.expand(Tensor([128, 128],"float32"), list[16,16,128,128,], )
paddle.Tensor.expand(Tensor([12432, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 112, 112],"bool"), list[2,1,112,112,], )
paddle.Tensor.expand(Tensor([31200, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([42432, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([12160, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([11424, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([11856, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 80, 208],"bool"), list[2,1,80,208,], )
paddle.Tensor.expand(Tensor([6885, 2],"float32"), list[2,6885,2,], )
paddle.Tensor.expand(Tensor([12464, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([9382, 2],"float32"), list[2,9382,2,], )
paddle.Tensor.expand(Tensor([40128, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([51200, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1980, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1881, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1011, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1851, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2125, 1],"float32"), list[64,2125,1,], )
paddle.Tensor.expand(Tensor([1, 1, 38, 38],"bool"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([1734, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([4789, 2],"float32"), list[4,4789,2,], )
paddle.Tensor.expand(Tensor([1801, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1001, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1360, 2],"float32"), list[64,1360,2,], )
paddle.Tensor.expand(Tensor([2023, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1782, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1349, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([7600, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1700, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1824, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1821, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1770, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1855, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([5440, 1],"float32"), list[2,5440,1,], )
paddle.Tensor.expand(Tensor([2086, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2125, 2],"float32"), list[64,2125,2,], )
paddle.Tensor.expand(Tensor([1864, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1297, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2, 1, 23, 23],"bool"), list[2,8,23,23,], )
paddle.Tensor.expand(Tensor([1499, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([3528, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([7800, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([2289, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1508, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1867, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2350, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([8424, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1608, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2185, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2422, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1407, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1443, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1775, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1829, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([4, 1, 1, 396],"bool"), list[4,1,396,396,], )
paddle.Tensor.expand(Tensor([1726, 1],"float32"), list[64,1726,1,], )
paddle.Tensor.expand(Tensor([2, 1, 36, 36],"bool"), list[2,1,36,36,], )
paddle.Tensor.expand(Tensor([2106, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1846, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([3060, 1],"float32"), list[16,3060,1,], )
paddle.Tensor.expand(Tensor([1597, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1852, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2280, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1, 1, 79, 79],"bool"), list[2,1,79,79,], )
paddle.Tensor.expand(Tensor([2271, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([8, 1, 1, 512],"bool"), list[8,1,512,512,], )
paddle.Tensor.expand(Tensor([1024],"float32"), list[4,1024,], )
paddle.Tensor.expand(Tensor([1025, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([6885, 1],"float32"), list[8,6885,1,], )
paddle.Tensor.expand(Tensor([2490, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1767, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1624, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1763, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2180, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1671, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1635, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([7904, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([7, 1, 1, 209],"int64"), list[7,1,209,209,], )
paddle.Tensor.expand(Tensor([1010, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1997, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2856, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1889, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([7, 1, 1, 286],"int64"), list[7,1,286,286,], )
paddle.Tensor.expand(Tensor([2183, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([3598, 1],"float32"), list[4,3598,1,], )
paddle.Tensor.expand(Tensor([1774, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([4789, 2],"float32"), list[2,4789,2,], )
paddle.Tensor.expand(Tensor([2029, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1841, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1842, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1431, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([3192, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([2130, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1849, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1780, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1606, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1793, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1945, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1828, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1814, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1687, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2113, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1157, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1680, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([4789, 1],"float32"), list[1,4789,1,], )
paddle.Tensor.expand(Tensor([1417, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1839, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([3060, 2],"float32"), list[4,3060,2,], )
paddle.Tensor.expand(Tensor([1190, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1404, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1982, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1832, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1642, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2502, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1785, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1973, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1940, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1976, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([10, 10, 10, 2],"float64"), tuple(10,10,10,2,), )
paddle.Tensor.expand(Tensor([1031, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([3715, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1857, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([3598, 1],"float32"), list[1,3598,1,], )
paddle.Tensor.expand(Tensor([2577, 2],"float32"), list[4,2577,2,], )
paddle.Tensor.expand(Tensor([1569, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1907, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1, 1, 80, 80],"bool"), list[2,1,80,80,], )
paddle.Tensor.expand(Tensor([7681, 1],"float32"), list[1,7681,1,], )
paddle.Tensor.expand(Tensor([1703, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2256, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([4165, 1],"float32"), list[1,4165,1,], )
paddle.Tensor.expand(Tensor([1868, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2240, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([32, 32],"float32"), list[512,32,32,], )
paddle.Tensor.expand(Tensor([1751, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1628, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1732, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1017, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1948, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1016, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2290, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2268, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1675, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1946, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2448, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1716, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2158, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2059, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2184, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([2222, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1893, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2, 1, 52, 52],"bool"), list[2,1,52,52,], )
paddle.Tensor.expand(Tensor([1360, 1],"float32"), list[64,1360,1,], )
paddle.Tensor.expand(Tensor([1, 1, 1024],"float32"), tuple(128,-1,-1,), )
paddle.Tensor.expand(Tensor([2, 1, 39, 39],"bool"), list[2,1,39,39,], )
paddle.Tensor.expand(Tensor([3360, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1563, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1873, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1515, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1641, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1482, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1002, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1858, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1487, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1113, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([5, 1, 18, 18],"float32"), tuple(-1,-1,18,-1,), )
paddle.Tensor.expand(Tensor([1795, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1724, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1520, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2880, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([9382, 1],"float32"), list[8,9382,1,], )
paddle.Tensor.expand(Tensor([1553, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2099, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2053, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([10, 10, 10, 2],"float64"), tuple(2,3,10,10,10,2,), )
paddle.Tensor.expand(Tensor([2, 1, 38, 38],"bool"), list[2,1,38,38,], )
paddle.Tensor.expand(Tensor([2, 1, 50, 50],"bool"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([1472, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1, 40, 30, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([1359, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([8500, 1],"float32"), list[2,8500,1,], )
paddle.Tensor.expand(Tensor([2396, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2114, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1805, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1971, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1921, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2020, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([13, 2, 1, 10, 8],"float32"), list[13,2,2,10,8,], )
paddle.Tensor.expand(Tensor([1726, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1741, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1454, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1401, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2577, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1787, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1559, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1, 1, 50, 50],"bool"), list[2,1,50,50,], )
paddle.Tensor.expand(Tensor([1112, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1899, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1262, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1758, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1339, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2171, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1561, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1393, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2346, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2040, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2272, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1644, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([8816, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([2016, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1823, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1, 1, 2048],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([1789, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1728, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([8400, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1584, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2584, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1894, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([7, 1, 1, 206],"int64"), list[7,1,206,206,], )
paddle.Tensor.expand(Tensor([2432, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1739, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1617, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([30, 60, 1],"bool"), list[30,60,30,], )
paddle.Tensor.expand(Tensor([2220, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1746, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1429, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1813, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2148, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1455, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1, 1, 58, 58],"bool"), list[1,2,58,58,], )
paddle.Tensor.expand(Tensor([8736, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([2688, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([2314, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1505, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1717, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1859, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([8528, 1],"float64"), list[-1,80,], )
paddle.Tensor.expand(Tensor([1954, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2215, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1911, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1, 1, 58, 58],"bool"), list[1,1,58,58,], )
paddle.Tensor.expand(Tensor([1975, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1550, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1989, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([2214, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 430, 340],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 391, 436],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 466, 386],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 352, 407],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 400, 300],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 368, 416],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 434, 346],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 298, 364],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 477, 401],"float32"), )
paddle.Tensor.expand_as(Tensor([4, 1],"float32"), Tensor([4, 22400],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 64, 64],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 76, 76],"float32"), )
paddle.Tensor.expand_as(Tensor([13, 2, 1, 64],"int64"), Tensor([13, 2, 16, 64],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 90, 90],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 64],"int64"), Tensor([26, 64],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 16],"float32"), Tensor([64, 16],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 32, 26],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 3, 1, 1],"float32"), Tensor([1, 3, 32, 26],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 34, 34],"float32"), )
paddle.Tensor.expand_as(Tensor([13, 1, 1, 16],"int32"), Tensor([13, 2, 4, 16],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 28, 28],"float32"), )
paddle.Tensor.fill_(Tensor([32, 32],"int32"), 1.0, )
paddle.Tensor.fill_(x=Tensor([10, 16, 16],"float64"), value=41.2, )
paddle.Tensor.fill_(Tensor([32, 32],"float32"), 1, )
paddle.Tensor.fill_(Tensor([2048],"float32"), 0, )
paddle.Tensor.fill_(Tensor([77, 77],"float32"), value=-math.inf, )
paddle.Tensor.fill_(Tensor([32, 32],"float64"), 1.0, )
paddle.Tensor.fill_(Tensor([1024],"float32"), 0, )
paddle.Tensor.fill_(Tensor([32, 32],"float16"), 1.0, )
paddle.Tensor.fill_(Tensor([32, 32],"float32"), 1.0, )
paddle.Tensor.fill_(Tensor([32, 32],"int64"), 1.0, )
paddle.Tensor.fill_diagonal_(Tensor([128, 128],"float32"), 0, wrap=False, )
paddle.Tensor.flatten(Tensor([153286, 1],"int32"), )
paddle.Tensor.flatten(Tensor([253575, 1],"int32"), )
paddle.Tensor.flatten(Tensor([319953, 1],"int32"), )
paddle.Tensor.flatten(Tensor([346273, 1],"int32"), )
paddle.Tensor.flatten(Tensor([286250, 1],"int32"), )
paddle.Tensor.flatten(Tensor([221565, 1],"int32"), )
paddle.Tensor.flatten(Tensor([182178, 1],"int32"), )
paddle.Tensor.flatten(Tensor([278653, 1],"int32"), )
paddle.Tensor.flatten(Tensor([408031, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 22, 2100],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([312629, 1],"int32"), )
paddle.Tensor.flatten(Tensor([266164, 1],"int32"), )
paddle.Tensor.flatten(Tensor([286693, 1],"int32"), )
paddle.Tensor.flatten(Tensor([374622, 1],"int32"), )
paddle.Tensor.flatten(Tensor([330175, 1],"int32"), )
paddle.Tensor.flatten(Tensor([304228, 1],"int32"), )
paddle.Tensor.flatten(Tensor([300746, 1],"int32"), )
paddle.Tensor.flatten(Tensor([300267, 1],"int32"), )
paddle.Tensor.flatten(Tensor([328269, 1],"int32"), )
paddle.Tensor.flatten(Tensor([330042, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 80, 28, 28],"float32"), 2, )
paddle.Tensor.flatten(Tensor([375688, 1],"int32"), )
paddle.Tensor.flatten(Tensor([355853, 1],"int32"), )
paddle.Tensor.flatten(Tensor([340124, 1],"int32"), )
paddle.Tensor.flatten(Tensor([16, 13, 4116],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([240318, 1],"int32"), )
paddle.Tensor.flatten(Tensor([252382, 1],"int32"), )
paddle.Tensor.flatten(Tensor([242875, 1],"int32"), )
paddle.Tensor.flatten(Tensor([165833, 1],"int32"), )
paddle.Tensor.flatten(Tensor([153288, 1],"int32"), )
paddle.Tensor.flatten(Tensor([217280, 1],"int32"), )
paddle.Tensor.flatten(Tensor([315689, 1],"int32"), )
paddle.Tensor.flatten(Tensor([330478, 1],"int32"), )
paddle.Tensor.flatten(Tensor([337405, 1],"int32"), )
paddle.Tensor.flatten(Tensor([337279, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 303858],"int64"), )
paddle.Tensor.flatten(Tensor([187807, 1],"int32"), )
paddle.Tensor.flatten(Tensor([386176, 1],"int32"), )
paddle.Tensor.flatten(Tensor([375257, 1],"int32"), )
paddle.Tensor.flatten(Tensor([294622, 1],"int32"), )
paddle.Tensor.flatten(Tensor([358505, 1],"int32"), )
paddle.Tensor.flatten(Tensor([339835, 1],"int32"), )
paddle.Tensor.flatten(Tensor([267965, 1],"int32"), )
paddle.Tensor.flatten(Tensor([349363, 1],"int32"), )
paddle.Tensor.flatten(Tensor([171752, 1],"int32"), )
paddle.Tensor.flatten(Tensor([191016, 1],"int32"), )
paddle.Tensor.flatten(Tensor([348036, 1],"int32"), )
paddle.Tensor.flatten(Tensor([2, 900, 8, 32],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 160, 64, 64],"float32"), 2, )
paddle.Tensor.flatten(Tensor([367742, 1],"int32"), )
paddle.Tensor.flatten(Tensor([330832, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 256, 46, 46],"float32"), 2, )
paddle.Tensor.flatten(Tensor([377635, 1],"int32"), )
paddle.Tensor.flatten(Tensor([2, 40, 64, 64],"float32"), 2, )
paddle.Tensor.flatten(Tensor([8, 68, 17, 17],"float16"), 2, )
paddle.Tensor.flatten(Tensor([310029, 1],"int32"), )
paddle.Tensor.flatten(Tensor([272208, 1],"int32"), )
paddle.Tensor.flatten(Tensor([268360, 1],"int32"), )
paddle.Tensor.flatten(Tensor([2, 18, 9382],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([295515, 1],"int32"), )
paddle.Tensor.flatten(Tensor([272271, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 10, 160, 160],"float32"), 2, )
paddle.Tensor.flatten(Tensor([338598, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 223554],"int32"), )
paddle.Tensor.flatten(Tensor([4, 19, 4725],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([293021, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 236616],"int32"), )
paddle.Tensor.flatten(Tensor([4, 20, 6804],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([242699, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 80, 60, 64, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([240934, 1],"int32"), )
paddle.Tensor.flatten(Tensor([295458, 1],"int32"), )
paddle.Tensor.flatten(Tensor([332873, 1],"int32"), )
paddle.Tensor.flatten(Tensor([362297, 1],"int32"), )
paddle.Tensor.flatten(Tensor([16, 9, 2541],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([242737, 1],"int32"), )
paddle.Tensor.flatten(Tensor([215460, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 10, 128, 128],"float32"), 2, )
paddle.Tensor.flatten(Tensor([267773, 1],"int32"), )
paddle.Tensor.flatten(Tensor([283346, 1],"int32"), )
paddle.Tensor.flatten(Tensor([342325, 1],"int32"), )
paddle.Tensor.flatten(Tensor([375550, 1],"int32"), )
paddle.Tensor.flatten(Tensor([269503, 1],"int32"), )
paddle.Tensor.flatten(Tensor([332428, 1],"int32"), )
paddle.Tensor.flatten(Tensor([286309, 1],"int32"), )
paddle.Tensor.flatten(Tensor([320908, 1],"int32"), )
paddle.Tensor.flatten(Tensor([339852, 1],"int32"), )
paddle.Tensor.flatten(Tensor([364395, 1],"int32"), )
paddle.Tensor.flatten(Tensor([404132, 1],"int32"), )
paddle.Tensor.flatten(Tensor([216091, 1],"int32"), )
paddle.Tensor.flatten(Tensor([364784, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 9, 5376],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([253904, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 29, 2100],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([8, 68, 18, 18],"float32"), 2, )
paddle.Tensor.flatten(Tensor([269598, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 247086],"int64"), )
paddle.Tensor.flatten(Tensor([196086, 1],"int32"), )
paddle.Tensor.flatten(Tensor([227798, 1],"int32"), )
paddle.Tensor.flatten(Tensor([292732, 1],"int32"), )
paddle.Tensor.flatten(Tensor([449586, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 6, 4725],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([299072, 1],"int32"), )
paddle.Tensor.flatten(Tensor([369042, 1],"int32"), )
paddle.Tensor.flatten(Tensor([347075, 1],"int32"), )
paddle.Tensor.flatten(Tensor([331168, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 23, 2100],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 331722],"int32"), )
paddle.Tensor.flatten(Tensor([321576, 1],"int32"), )
paddle.Tensor.flatten(Tensor([328260, 1],"int32"), )
paddle.Tensor.flatten(Tensor([217261, 1],"int32"), )
paddle.Tensor.flatten(Tensor([4, 41, 2541],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([349378, 1],"int32"), )
paddle.Tensor.flatten(Tensor([214205, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 440433],"int32"), )
paddle.Tensor.flatten(Tensor([241400, 1],"int32"), )
paddle.Tensor.flatten(Tensor([207491, 1],"int32"), )
paddle.Tensor.flatten(Tensor([364760, 1],"int32"), )
paddle.Tensor.flatten(Tensor([215576, 1],"int32"), )
paddle.Tensor.flatten(Tensor([283155, 1],"int32"), )
paddle.Tensor.flatten(Tensor([277584, 1],"int32"), )
paddle.Tensor.flatten(Tensor([324452, 1],"int32"), )
paddle.Tensor.flatten(Tensor([437523, 1],"int32"), )
paddle.Tensor.flatten(Tensor([242342, 1],"int32"), )
paddle.Tensor.flatten(Tensor([343083, 1],"int32"), )
paddle.Tensor.flatten(Tensor([309935, 1],"int32"), )
paddle.Tensor.flatten(Tensor([366664, 1],"int32"), )
paddle.Tensor.flatten(Tensor([357683, 1],"int32"), )
paddle.Tensor.flatten(Tensor([244840, 1],"int32"), )
paddle.Tensor.flatten(Tensor([375597, 1],"int32"), )
paddle.Tensor.flatten(Tensor([269442, 1],"int32"), )
paddle.Tensor.flatten(Tensor([251861, 1],"int32"), )
paddle.Tensor.flatten(Tensor([242662, 1],"int32"), )
paddle.Tensor.flatten(Tensor([243159, 1],"int32"), )
paddle.Tensor.flatten(Tensor([204327, 1],"int32"), )
paddle.Tensor.flatten(Tensor([366621, 1],"int32"), )
paddle.Tensor.flatten(Tensor([204397, 1],"int32"), )
paddle.Tensor.flatten(Tensor([330874, 1],"int32"), )
paddle.Tensor.flatten(Tensor([283075, 1],"int32"), )
paddle.Tensor.flatten(Tensor([196199, 1],"int32"), )
paddle.Tensor.flatten(Tensor([320615, 1],"int32"), )
paddle.Tensor.flatten(Tensor([367693, 1],"int32"), )
paddle.Tensor.flatten(Tensor([299151, 1],"int32"), )
paddle.Tensor.flatten(Tensor([268327, 1],"int32"), )
paddle.Tensor.flatten(Tensor([300757, 1],"int32"), )
paddle.Tensor.flatten(Tensor([295407, 1],"int32"), )
paddle.Tensor.flatten(Tensor([311688, 1],"int32"), )
paddle.Tensor.flatten(Tensor([339931, 1],"int32"), )
paddle.Tensor.flatten(Tensor([285323, 1],"int32"), )
paddle.Tensor.flatten(Tensor([241373, 1],"int32"), )
paddle.Tensor.flatten(Tensor([257316, 1],"int32"), )
paddle.Tensor.flatten(Tensor([2, 68, 34, 34],"float32"), 2, )
paddle.Tensor.flatten(Tensor([313217, 1],"int32"), )
paddle.Tensor.flatten(Tensor([16, 3, 2125],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([221779, 1],"int32"), )
paddle.Tensor.flatten(Tensor([347573, 1],"int32"), )
paddle.Tensor.flatten(Tensor([186157, 1],"int32"), )
paddle.Tensor.flatten(Tensor([196192, 1],"int32"), )
paddle.Tensor.flatten(Tensor([216989, 1],"int32"), )
paddle.Tensor.flatten(Tensor([357383, 1],"int32"), )
paddle.Tensor.flatten(Tensor([345896, 1],"int32"), )
paddle.Tensor.flatten(Tensor([329288, 1],"int32"), )
paddle.Tensor.flatten(Tensor([375851, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 24, 3549],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([367933, 1],"int32"), )
paddle.Tensor.flatten(Tensor([248721, 1],"int32"), )
paddle.Tensor.flatten(Tensor([16, 68, 14, 14],"float32"), 2, )
paddle.Tensor.flatten(Tensor([248297, 1],"int32"), )
paddle.Tensor.flatten(Tensor([221577, 1],"int32"), )
paddle.Tensor.flatten(Tensor([337946, 1],"int32"), )
paddle.Tensor.flatten(Tensor([249412, 1],"int32"), )
paddle.Tensor.flatten(Tensor([261424, 1],"int32"), )
paddle.Tensor.flatten(Tensor([16, 68, 15, 15],"float32"), 2, )
paddle.Tensor.flatten(Tensor([229004, 1],"int32"), )
paddle.Tensor.flatten(Tensor([16, 9, 4116],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([2, 256, 30, 30],"float32"), 2, )
paddle.Tensor.flatten(Tensor([367149, 1],"int32"), )
paddle.Tensor.flatten(Tensor([438164, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 5, 10164],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([278115, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 229965],"int32"), )
paddle.Tensor.flatten(Tensor([264217, 1],"int32"), )
paddle.Tensor.flatten(Tensor([304218, 1],"int32"), )
paddle.Tensor.flatten(Tensor([312500, 1],"int32"), )
paddle.Tensor.flatten(Tensor([253272, 1],"int32"), )
paddle.Tensor.flatten(Tensor([375641, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 352, 352],"float32"), 1, )
paddle.Tensor.flatten(Tensor([226142, 1],"int32"), )
paddle.Tensor.flatten(Tensor([285248, 1],"int32"), )
paddle.Tensor.flatten(Tensor([332287, 1],"int32"), )
paddle.Tensor.flatten(Tensor([339131, 1],"int32"), )
paddle.Tensor.flatten(Tensor([245180, 1],"int32"), )
paddle.Tensor.flatten(Tensor([330163, 1],"int32"), )
paddle.Tensor.flatten(Tensor([242380, 1],"int32"), )
paddle.Tensor.flatten(Tensor([359187, 1],"int32"), )
paddle.Tensor.flatten(Tensor([234125, 1],"int32"), )
paddle.Tensor.flatten(Tensor([337237, 1],"int32"), )
paddle.Tensor.flatten(Tensor([339972, 1],"int32"), )
paddle.Tensor.flatten(Tensor([16, 23, 2541],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([8, 32, 2100],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([4, 15, 12096],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([245675, 1],"int32"), )
paddle.Tensor.flatten(Tensor([216384, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 20, 2100],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([254816, 1],"int32"), )
paddle.Tensor.flatten(Tensor([309232, 1],"int32"), )
paddle.Tensor.flatten(Tensor([330176, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 356541],"int64"), )
paddle.Tensor.flatten(Tensor([346493, 1],"int32"), )
paddle.Tensor.flatten(Tensor([4, 32, 60, 60],"float32"), 2, )
paddle.Tensor.flatten(Tensor([257234, 1],"int32"), )
paddle.Tensor.flatten(Tensor([349482, 1],"int32"), )
paddle.Tensor.flatten(Tensor([260165, 1],"int32"), )
paddle.Tensor.flatten(Tensor([206991, 1],"int32"), )
paddle.Tensor.flatten(Tensor([16, 8, 6069],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([396765, 1],"int32"), )
paddle.Tensor.flatten(Tensor([213978, 1],"int32"), )
paddle.Tensor.flatten(Tensor([308602, 1],"int32"), )
paddle.Tensor.flatten(Tensor([329733, 1],"int32"), )
paddle.Tensor.flatten(Tensor([303734, 1],"int32"), )
paddle.Tensor.flatten(Tensor([267836, 1],"int32"), )
paddle.Tensor.flatten(Tensor([269025, 1],"int32"), )
paddle.Tensor.flatten(Tensor([281828, 1],"int32"), )
paddle.Tensor.flatten(Tensor([308136, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 286977],"int64"), )
paddle.Tensor.flatten(Tensor([348136, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 150402],"int64"), )
paddle.Tensor.flatten(Tensor([358944, 1],"int32"), )
paddle.Tensor.flatten(Tensor([216994, 1],"int32"), )
paddle.Tensor.flatten(Tensor([348805, 1],"int32"), )
paddle.Tensor.flatten(Tensor([200721, 1],"int32"), )
paddle.Tensor.flatten(Tensor([277291, 1],"int32"), )
paddle.Tensor.flatten(Tensor([190946, 1],"int32"), )
paddle.Tensor.flatten(Tensor([407694, 1],"int32"), )
paddle.Tensor.flatten(Tensor([260455, 1],"int32"), )
paddle.Tensor.flatten(Tensor([293524, 1],"int32"), )
paddle.Tensor.flatten(Tensor([321361, 1],"int32"), )
paddle.Tensor.flatten(Tensor([340033, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 8, 6804],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([230057, 1],"int32"), )
paddle.Tensor.flatten(Tensor([228907, 1],"int32"), )
paddle.Tensor.flatten(Tensor([259869, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 18, 5376],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([329072, 1],"int32"), )
paddle.Tensor.flatten(Tensor([299126, 1],"int32"), )
paddle.Tensor.flatten(Tensor([408039, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 13, 6804],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([367765, 1],"int32"), )
paddle.Tensor.flatten(Tensor([285339, 1],"int32"), )
paddle.Tensor.flatten(Tensor([302672, 1],"int32"), )
paddle.Tensor.flatten(Tensor([348018, 1],"int32"), )
paddle.Tensor.flatten(Tensor([269433, 1],"int32"), )
paddle.Tensor.flatten(Tensor([255574, 1],"int32"), )
paddle.Tensor.flatten(Tensor([297628, 1],"int32"), )
paddle.Tensor.flatten(Tensor([317523, 1],"int32"), )
paddle.Tensor.flatten(Tensor([369214, 1],"int32"), )
paddle.Tensor.flatten(Tensor([216546, 1],"int32"), )
paddle.Tensor.flatten(Tensor([196234, 1],"int32"), )
paddle.Tensor.flatten(Tensor([277206, 1],"int32"), )
paddle.Tensor.flatten(Tensor([290696, 1],"int32"), )
paddle.Tensor.flatten(Tensor([405258, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 256, 18, 25],"float32"), 2, )
paddle.Tensor.flatten(Tensor([291406, 1],"int32"), )
paddle.Tensor.flatten(Tensor([199496, 1],"int32"), )
paddle.Tensor.flatten(Tensor([269329, 1],"int32"), )
paddle.Tensor.flatten(Tensor([220507, 1],"int32"), )
paddle.Tensor.flatten(Tensor([356239, 1],"int32"), )
paddle.Tensor.flatten(Tensor([310302, 1],"int32"), )
paddle.Tensor.flatten(Tensor([278205, 1],"int32"), )
paddle.Tensor.flatten(Tensor([257393, 1],"int32"), )
paddle.Tensor.flatten(Tensor([211064, 1],"int32"), )
paddle.Tensor.flatten(Tensor([298451, 1],"int32"), )
paddle.Tensor.flatten(Tensor([290244, 1],"int32"), )
paddle.Tensor.flatten(Tensor([310013, 1],"int32"), )
paddle.Tensor.flatten(Tensor([191488, 1],"int32"), )
paddle.Tensor.flatten(Tensor([294150, 1],"int32"), )
paddle.Tensor.flatten(Tensor([216610, 1],"int32"), )
paddle.Tensor.flatten(Tensor([217119, 1],"int32"), )
paddle.Tensor.flatten(Tensor([271137, 1],"int32"), )
paddle.Tensor.flatten(Tensor([4, 30, 2100],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([241562, 1],"int32"), )
paddle.Tensor.flatten(Tensor([288948, 1],"int32"), )
paddle.Tensor.flatten(Tensor([260777, 1],"int32"), )
paddle.Tensor.flatten(Tensor([284593, 1],"int32"), )
paddle.Tensor.flatten(Tensor([303694, 1],"int32"), )
paddle.Tensor.flatten(Tensor([357661, 1],"int32"), )
paddle.Tensor.flatten(Tensor([228880, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 322245],"int64"), )
paddle.Tensor.flatten(Tensor([224880, 1],"int32"), )
paddle.Tensor.flatten(Tensor([260544, 1],"int32"), )
paddle.Tensor.flatten(Tensor([275130, 1],"int32"), )
paddle.Tensor.flatten(Tensor([317679, 1],"int32"), )
paddle.Tensor.flatten(Tensor([219851, 1],"int32"), )
paddle.Tensor.flatten(Tensor([310721, 1],"int32"), )
paddle.Tensor.flatten(Tensor([329943, 1],"int32"), )
paddle.Tensor.flatten(Tensor([284133, 1],"int32"), )
paddle.Tensor.flatten(Tensor([284873, 1],"int32"), )
paddle.Tensor.flatten(Tensor([284957, 1],"int32"), )
paddle.Tensor.flatten(Tensor([242715, 1],"int32"), )
paddle.Tensor.flatten(Tensor([370712, 1],"int32"), )
paddle.Tensor.flatten(Tensor([276502, 1],"int32"), )
paddle.Tensor.flatten(Tensor([268012, 1],"int32"), )
paddle.Tensor.flatten(Tensor([356045, 1],"int32"), )
paddle.Tensor.flatten(Tensor([321534, 1],"int32"), )
paddle.Tensor.flatten(Tensor([199330, 1],"int32"), )
paddle.Tensor.flatten(Tensor([335268, 1],"int32"), )
paddle.Tensor.flatten(Tensor([300745, 1],"int32"), )
paddle.Tensor.flatten(Tensor([292630, 1],"int32"), )
paddle.Tensor.flatten(Tensor([260075, 1],"int32"), )
paddle.Tensor.flatten(Tensor([339940, 1],"int32"), )
paddle.Tensor.flatten(Tensor([327176, 1],"int32"), )
paddle.Tensor.flatten(Tensor([374236, 1],"int32"), )
paddle.Tensor.flatten(Tensor([304002, 1],"int32"), )
paddle.Tensor.flatten(Tensor([388437, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 252681],"int32"), )
paddle.Tensor.flatten(Tensor([387878, 1],"int32"), )
paddle.Tensor.flatten(Tensor([284622, 1],"int32"), )
paddle.Tensor.flatten(Tensor([268904, 1],"int32"), )
paddle.Tensor.flatten(Tensor([236310, 1],"int32"), )
paddle.Tensor.flatten(Tensor([339680, 1],"int32"), )
paddle.Tensor.flatten(Tensor([289703, 1],"int32"), )
paddle.Tensor.flatten(Tensor([268072, 1],"int32"), )
paddle.Tensor.flatten(Tensor([378081, 1],"int32"), )
paddle.Tensor.flatten(Tensor([309149, 1],"int32"), )
paddle.Tensor.flatten(Tensor([10, 256, 4, 10],"float32"), 2, )
paddle.Tensor.flatten(Tensor([315870, 1],"int32"), )
paddle.Tensor.flatten(Tensor([241438, 1],"int32"), )
paddle.Tensor.flatten(Tensor([303639, 1],"int32"), )
paddle.Tensor.flatten(Tensor([286075, 1],"int32"), )
paddle.Tensor.flatten(Tensor([294249, 1],"int32"), )
paddle.Tensor.flatten(Tensor([209964, 1],"int32"), )
paddle.Tensor.flatten(Tensor([216420, 1],"int32"), )
paddle.Tensor.flatten(Tensor([228608, 1],"int32"), )
paddle.Tensor.flatten(Tensor([202102, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 312324],"int64"), )
paddle.Tensor.flatten(Tensor([8, 12, 6069],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([228109, 1],"int32"), )
paddle.Tensor.flatten(Tensor([289692, 1],"int32"), )
paddle.Tensor.flatten(Tensor([358491, 1],"int32"), )
paddle.Tensor.flatten(Tensor([235565, 1],"int32"), )
paddle.Tensor.flatten(Tensor([375627, 1],"int32"), )
paddle.Tensor.flatten(Tensor([345382, 1],"int32"), )
paddle.Tensor.flatten(Tensor([231697, 1],"int32"), )
paddle.Tensor.flatten(Tensor([185529, 1],"int32"), )
paddle.Tensor.flatten(Tensor([262009, 1],"int32"), )
paddle.Tensor.flatten(Tensor([241297, 1],"int32"), )
paddle.Tensor.flatten(Tensor([8, 4, 88, 88],"float32"), 2, )
paddle.Tensor.flatten(Tensor([2, 9, 9382],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([384996, 1],"int32"), )
paddle.Tensor.flatten(Tensor([251986, 1],"int32"), )
paddle.Tensor.flatten(Tensor([236220, 1],"int32"), )
paddle.Tensor.flatten(Tensor([320126, 1],"int32"), )
paddle.Tensor.flatten(Tensor([245670, 1],"int32"), )
paddle.Tensor.flatten(Tensor([303124, 1],"int32"), )
paddle.Tensor.flatten(Tensor([226853, 1],"int32"), )
paddle.Tensor.flatten(Tensor([242955, 1],"int32"), )
paddle.Tensor.flatten(Tensor([386461, 1],"int32"), )
paddle.Tensor.flatten(Tensor([366990, 1],"int32"), )
paddle.Tensor.flatten(Tensor([220817, 1],"int32"), )
paddle.Tensor.flatten(Tensor([220176, 1],"int32"), )
paddle.Tensor.flatten(Tensor([304241, 1],"int32"), )
paddle.Tensor.flatten(Tensor([217041, 1],"int32"), )
paddle.Tensor.flatten(Tensor([234550, 1],"int32"), )
paddle.Tensor.flatten(Tensor([284727, 1],"int32"), )
paddle.Tensor.flatten(Tensor([394202, 1],"int32"), )
paddle.Tensor.flatten(Tensor([244717, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 138120],"int64"), )
paddle.Tensor.flatten(Tensor([198911, 1],"int32"), )
paddle.Tensor.flatten(Tensor([242320, 1],"int32"), )
paddle.Tensor.flatten(Tensor([257465, 1],"int32"), )
paddle.Tensor.flatten(Tensor([267108, 1],"int32"), )
paddle.Tensor.flatten(Tensor([268316, 1],"int32"), )
paddle.Tensor.flatten(Tensor([316807, 1],"int32"), )
paddle.Tensor.flatten(Tensor([212232, 1],"int32"), )
paddle.Tensor.flatten(Tensor([343384, 1],"int32"), )
paddle.Tensor.flatten(Tensor([171533, 1],"int32"), )
paddle.Tensor.flatten(Tensor([310252, 1],"int32"), )
paddle.Tensor.flatten(Tensor([312208, 1],"int32"), )
paddle.Tensor.flatten(Tensor([260733, 1],"int32"), )
paddle.Tensor.flatten(Tensor([314696, 1],"int32"), )
paddle.Tensor.flatten(Tensor([242910, 1],"int32"), )
paddle.Tensor.flatten(Tensor([286311, 1],"int32"), )
paddle.Tensor.flatten(Tensor([378240, 1],"int32"), )
paddle.Tensor.flatten(Tensor([1, 235320],"int64"), )
paddle.Tensor.flatten(Tensor([398329, 1],"int32"), )
paddle.Tensor.flatten(Tensor([196007, 1],"int32"), )
paddle.Tensor.flatten(Tensor([330237, 1],"int32"), )
paddle.Tensor.flatten(Tensor([368869, 1],"int32"), )
paddle.Tensor.flatten(Tensor([317281, 1],"int32"), )
paddle.Tensor.flatten(Tensor([229409, 1],"int32"), )
paddle.Tensor.flatten(Tensor([234596, 1],"int32"), )
paddle.Tensor.flatten(Tensor([266803, 1],"int32"), )
paddle.Tensor.flatten(Tensor([293337, 1],"int32"), )
paddle.Tensor.flatten(Tensor([347712, 1],"int32"), )
paddle.Tensor.flatten(Tensor([284448, 1],"int32"), )
paddle.Tensor.flatten(Tensor([6, 256, 4, 24],"float32"), 2, )
paddle.Tensor.flatten(Tensor([358813, 1],"int32"), )
paddle.Tensor.flatten(Tensor([321512, 1],"int32"), )
paddle.Tensor.flatten(Tensor([329976, 1],"int32"), )
paddle.Tensor.flatten(Tensor([260360, 1],"int32"), )
paddle.Tensor.flip(Tensor([3, 224, 224],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 400, 300],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 400, 300],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 280, 350],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 280, 350],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 64, 64],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([4, 2, 64, 64],"float32"), 1, )
paddle.Tensor.flip(Tensor([3, 64, 64],"float32"), axis=list[-1,], )
paddle.Tensor.floor(Tensor([554, 4],"float32"), )
paddle.Tensor.floor(Tensor([591, 4],"float32"), )
paddle.Tensor.floor(Tensor([1089, 4],"float32"), )
paddle.Tensor.floor(Tensor([703, 4],"float32"), )
paddle.Tensor.floor(Tensor([546, 4],"float32"), )
paddle.Tensor.floor(Tensor([406, 4],"float32"), )
paddle.Tensor.floor(Tensor([453, 4],"float32"), )
paddle.Tensor.floor(Tensor([611, 4],"float32"), )
paddle.Tensor.floor(Tensor([387, 4],"float32"), )
paddle.Tensor.floor(Tensor([772, 4],"float32"), )
paddle.Tensor.floor(Tensor([557, 4],"float32"), )
paddle.Tensor.floor(Tensor([383, 4],"float32"), )
paddle.Tensor.floor(Tensor([575, 4],"float32"), )
paddle.Tensor.floor(Tensor([631, 4],"float32"), )
paddle.Tensor.floor(Tensor([613, 4],"float32"), )
paddle.Tensor.floor(Tensor([869, 4],"float32"), )
paddle.Tensor.floor(Tensor([257, 4],"float32"), )
paddle.Tensor.floor(Tensor([692, 4],"float32"), )
paddle.Tensor.floor(Tensor([597, 4],"float32"), )
paddle.Tensor.floor(Tensor([687, 4],"float32"), )
paddle.Tensor.floor(Tensor([430, 4],"float32"), )
paddle.Tensor.floor(Tensor([535, 4],"float32"), )
paddle.Tensor.floor(Tensor([490, 4],"float32"), )
paddle.Tensor.floor(Tensor([609, 4],"float32"), )
paddle.Tensor.floor(Tensor([481, 4],"float32"), )
paddle.Tensor.floor(Tensor([730, 4],"float32"), )
paddle.Tensor.floor(Tensor([1159, 4],"float32"), )
paddle.Tensor.floor(Tensor([464, 4],"float32"), )
paddle.Tensor.floor(Tensor([452, 4],"float32"), )
paddle.Tensor.floor(Tensor([486, 4],"float32"), )
paddle.Tensor.floor(Tensor([742, 4],"float32"), )
paddle.Tensor.floor(Tensor([260, 4],"float32"), )
paddle.Tensor.floor(Tensor([1721, 4],"float32"), )
paddle.Tensor.floor(Tensor([294, 4],"float32"), )
paddle.Tensor.floor(Tensor([318, 4],"float32"), )
paddle.Tensor.floor(Tensor([618, 4],"float32"), )
paddle.Tensor.floor(Tensor([549, 4],"float32"), )
paddle.Tensor.floor(Tensor([793, 4],"float32"), )
paddle.Tensor.floor(Tensor([428, 4],"float32"), )
paddle.Tensor.floor(Tensor([492, 4],"float32"), )
paddle.Tensor.floor(Tensor([606, 4],"float32"), )
paddle.Tensor.floor(Tensor([917, 4],"float32"), )
paddle.Tensor.floor(Tensor([1296, 4],"float32"), )
paddle.Tensor.floor(Tensor([407, 4],"float32"), )
paddle.Tensor.floor(Tensor([394, 4],"float32"), )
paddle.Tensor.floor(Tensor([691, 4],"float32"), )
paddle.Tensor.floor(Tensor([365, 4],"float32"), )
paddle.Tensor.floor(Tensor([279, 4],"float32"), )
paddle.Tensor.floor(Tensor([518, 4],"float32"), )
paddle.Tensor.floor(Tensor([262, 4],"float32"), )
paddle.Tensor.floor(Tensor([250, 4],"float32"), )
paddle.Tensor.floor(Tensor([1113, 4],"float32"), )
paddle.Tensor.floor(Tensor([336, 4],"float32"), )
paddle.Tensor.floor(Tensor([371, 4],"float32"), )
paddle.Tensor.floor(Tensor([398, 4],"float32"), )
paddle.Tensor.floor(Tensor([1456, 4],"float32"), )
paddle.Tensor.floor(Tensor([302, 4],"float32"), )
paddle.Tensor.floor(Tensor([470, 4],"float32"), )
paddle.Tensor.floor(Tensor([883, 4],"float32"), )
paddle.Tensor.floor(Tensor([627, 4],"float32"), )
paddle.Tensor.floor(Tensor([372, 4],"float32"), )
paddle.Tensor.floor(Tensor([1069, 4],"float32"), )
paddle.Tensor.floor(Tensor([701, 4],"float32"), )
paddle.Tensor.floor(Tensor([505, 4],"float32"), )
paddle.Tensor.floor(Tensor([254, 4],"float32"), )
paddle.Tensor.floor(Tensor([473, 4],"float32"), )
paddle.Tensor.floor(Tensor([775, 4],"float32"), )
paddle.Tensor.floor(Tensor([506, 4],"float32"), )
paddle.Tensor.floor(Tensor([527, 4],"float32"), )
paddle.Tensor.floor(Tensor([818, 4],"float32"), )
paddle.Tensor.floor(Tensor([309, 4],"float32"), )
paddle.Tensor.floor(Tensor([645, 4],"float32"), )
paddle.Tensor.floor(Tensor([403, 4],"float32"), )
paddle.Tensor.floor(Tensor([261, 4],"float32"), )
paddle.Tensor.floor(Tensor([480, 4],"float32"), )
paddle.Tensor.floor(Tensor([340, 4],"float32"), )
paddle.Tensor.floor(Tensor([355, 4],"float32"), )
paddle.Tensor.floor(Tensor([926, 4],"float32"), )
paddle.Tensor.floor(Tensor([621, 4],"float32"), )
paddle.Tensor.floor(Tensor([532, 4],"float32"), )
paddle.Tensor.floor(Tensor([628, 4],"float32"), )
paddle.Tensor.floor(Tensor([676, 4],"float32"), )
paddle.Tensor.floor(Tensor([662, 4],"float32"), )
paddle.Tensor.floor(Tensor([313, 4],"float32"), )
paddle.Tensor.floor(Tensor([478, 4],"float32"), )
paddle.Tensor.floor(Tensor([270, 4],"float32"), )
paddle.Tensor.floor(Tensor([415, 4],"float32"), )
paddle.Tensor.floor(Tensor([880, 4],"float32"), )
paddle.Tensor.floor(Tensor([300, 4],"float32"), )
paddle.Tensor.floor(Tensor([487, 4],"float32"), )
paddle.Tensor.floor(Tensor([306, 4],"float32"), )
paddle.Tensor.floor(Tensor([345, 4],"float32"), )
paddle.Tensor.floor(Tensor([418, 4],"float32"), )
paddle.Tensor.floor(Tensor([656, 4],"float32"), )
paddle.Tensor.floor(Tensor([779, 4],"float32"), )
paddle.Tensor.floor(Tensor([416, 4],"float32"), )
paddle.Tensor.floor(Tensor([330, 4],"float32"), )
paddle.Tensor.floor(Tensor([728, 4],"float32"), )
paddle.Tensor.floor(Tensor([289, 4],"float32"), )
paddle.Tensor.floor(Tensor([578, 4],"float32"), )
paddle.Tensor.floor(Tensor([484, 4],"float32"), )
paddle.Tensor.floor(Tensor([616, 4],"float32"), )
paddle.Tensor.floor(Tensor([474, 4],"float32"), )
paddle.Tensor.floor(Tensor([663, 4],"float32"), )
paddle.Tensor.floor(Tensor([441, 4],"float32"), )
paddle.Tensor.floor(Tensor([375, 4],"float32"), )
paddle.Tensor.floor(Tensor([737, 4],"float32"), )
paddle.Tensor.floor(Tensor([498, 4],"float32"), )
paddle.Tensor.floor(Tensor([356, 4],"float32"), )
paddle.Tensor.floor(Tensor([421, 4],"float32"), )
paddle.Tensor.floor(Tensor([541, 4],"float32"), )
paddle.Tensor.floor(Tensor([545, 4],"float32"), )
paddle.Tensor.floor(Tensor([420, 4],"float32"), )
paddle.Tensor.floor(Tensor([590, 4],"float32"), )
paddle.Tensor.floor(Tensor([507, 4],"float32"), )
paddle.Tensor.floor(Tensor([881, 4],"float32"), )
paddle.Tensor.floor(Tensor([359, 4],"float32"), )
paddle.Tensor.floor(Tensor([827, 4],"float32"), )
paddle.Tensor.floor(Tensor([544, 4],"float32"), )
paddle.Tensor.floor(Tensor([263, 4],"float32"), )
paddle.Tensor.floor(Tensor([385, 4],"float32"), )
paddle.Tensor.floor(Tensor([1915, 4],"float32"), )
paddle.Tensor.floor(Tensor([562, 4],"float32"), )
paddle.Tensor.floor(Tensor([564, 4],"float32"), )
paddle.Tensor.floor(Tensor([378, 4],"float32"), )
paddle.Tensor.floor(Tensor([523, 4],"float32"), )
paddle.Tensor.floor(Tensor([516, 4],"float32"), )
paddle.Tensor.floor(Tensor([560, 4],"float32"), )
paddle.Tensor.floor(Tensor([389, 4],"float32"), )
paddle.Tensor.floor(Tensor([273, 4],"float32"), )
paddle.Tensor.floor(Tensor([581, 4],"float32"), )
paddle.Tensor.floor(Tensor([716, 4],"float32"), )
paddle.Tensor.floor(Tensor([463, 4],"float32"), )
paddle.Tensor.floor(Tensor([276, 4],"float32"), )
paddle.Tensor.floor(Tensor([408, 4],"float32"), )
paddle.Tensor.floor(Tensor([390, 4],"float32"), )
paddle.Tensor.floor(Tensor([446, 4],"float32"), )
paddle.Tensor.floor(Tensor([819, 4],"float32"), )
paddle.Tensor.floor(Tensor([271, 4],"float32"), )
paddle.Tensor.floor(Tensor([636, 4],"float32"), )
paddle.Tensor.floor(Tensor([835, 4],"float32"), )
paddle.Tensor.floor(Tensor([522, 4],"float32"), )
paddle.Tensor.floor(Tensor([565, 4],"float32"), )
paddle.Tensor.floor(Tensor([493, 4],"float32"), )
paddle.Tensor.floor(Tensor([321, 4],"float32"), )
paddle.Tensor.floor(Tensor([722, 4],"float32"), )
paddle.Tensor.floor(Tensor([601, 4],"float32"), )
paddle.Tensor.floor(Tensor([288, 4],"float32"), )
paddle.Tensor.floor(Tensor([1336, 4],"float32"), )
paddle.Tensor.floor(Tensor([633, 4],"float32"), )
paddle.Tensor.floor(Tensor([333, 4],"float32"), )
paddle.Tensor.floor(Tensor([539, 4],"float32"), )
paddle.Tensor.floor(Tensor([896, 4],"float32"), )
paddle.Tensor.floor(Tensor([346, 4],"float32"), )
paddle.Tensor.floor(Tensor([624, 4],"float32"), )
paddle.Tensor.floor(Tensor([256, 4],"float32"), )
paddle.Tensor.floor(Tensor([305, 4],"float32"), )
paddle.Tensor.floor(Tensor([343, 4],"float32"), )
paddle.Tensor.floor(Tensor([349, 4],"float32"), )
paddle.Tensor.floor(Tensor([801, 4],"float32"), )
paddle.Tensor.floor(Tensor([400, 4],"float32"), )
paddle.Tensor.floor(Tensor([919, 4],"float32"), )
paddle.Tensor.floor(Tensor([582, 4],"float32"), )
paddle.Tensor.floor(Tensor([379, 4],"float32"), )
paddle.Tensor.floor(Tensor([427, 4],"float32"), )
paddle.Tensor.floor(Tensor([388, 4],"float32"), )
paddle.Tensor.floor(Tensor([617, 4],"float32"), )
paddle.Tensor.floor(Tensor([392, 4],"float32"), )
paddle.Tensor.floor(Tensor([348, 4],"float32"), )
paddle.Tensor.floor(Tensor([815, 4],"float32"), )
paddle.Tensor.floor(Tensor([630, 4],"float32"), )
paddle.Tensor.floor(Tensor([782, 4],"float32"), )
paddle.Tensor.floor(Tensor([475, 4],"float32"), )
paddle.Tensor.floor(Tensor([290, 4],"float32"), )
paddle.Tensor.floor(Tensor([740, 4],"float32"), )
paddle.Tensor.floor(Tensor([296, 4],"float32"), )
paddle.Tensor.floor(Tensor([368, 4],"float32"), )
paddle.Tensor.floor(Tensor([584, 4],"float32"), )
paddle.Tensor.floor(Tensor([1271, 4],"float32"), )
paddle.Tensor.floor(Tensor([573, 4],"float32"), )
paddle.Tensor.floor(Tensor([284, 4],"float32"), )
paddle.Tensor.floor(Tensor([426, 4],"float32"), )
paddle.Tensor.floor(Tensor([393, 4],"float32"), )
paddle.Tensor.floor(Tensor([572, 4],"float32"), )
paddle.Tensor.floor(Tensor([576, 4],"float32"), )
paddle.Tensor.floor(Tensor([434, 4],"float32"), )
paddle.Tensor.floor(Tensor([266, 4],"float32"), )
paddle.Tensor.floor(Tensor([574, 4],"float32"), )
paddle.Tensor.floor(Tensor([833, 4],"float32"), )
paddle.Tensor.floor(Tensor([451, 4],"float32"), )
paddle.Tensor.floor(Tensor([1090, 4],"float32"), )
paddle.Tensor.floor(Tensor([258, 4],"float32"), )
paddle.Tensor.floor(Tensor([520, 4],"float32"), )
paddle.Tensor.floor(Tensor([1065, 4],"float32"), )
paddle.Tensor.floor(Tensor([361, 4],"float32"), )
paddle.Tensor.floor(Tensor([735, 4],"float32"), )
paddle.Tensor.floor(Tensor([517, 4],"float32"), )
paddle.Tensor.floor(Tensor([521, 4],"float32"), )
paddle.Tensor.floor(Tensor([423, 4],"float32"), )
paddle.Tensor.floor(Tensor([312, 4],"float32"), )
paddle.Tensor.floor(Tensor([477, 4],"float32"), )
paddle.Tensor.floor(Tensor([512, 4],"float32"), )
paddle.Tensor.floor(Tensor([331, 4],"float32"), )
paddle.Tensor.floor(Tensor([395, 4],"float32"), )
paddle.Tensor.floor(Tensor([530, 4],"float32"), )
paddle.Tensor.floor(Tensor([1857, 4],"float32"), )
paddle.Tensor.floor(Tensor([810, 4],"float32"), )
paddle.Tensor.floor(Tensor([377, 4],"float32"), )
paddle.Tensor.floor(Tensor([460, 4],"float32"), )
paddle.Tensor.floor(Tensor([278, 4],"float32"), )
paddle.Tensor.floor(Tensor([491, 4],"float32"), )
paddle.Tensor.floor(Tensor([754, 4],"float32"), )
paddle.Tensor.floor(Tensor([354, 4],"float32"), )
paddle.Tensor.floor(Tensor([721, 4],"float32"), )
paddle.Tensor.floor(Tensor([644, 4],"float32"), )
paddle.Tensor.floor(Tensor([643, 4],"float32"), )
paddle.Tensor.floor(Tensor([765, 4],"float32"), )
paddle.Tensor.floor(Tensor([712, 4],"float32"), )
paddle.Tensor.floor(Tensor([559, 4],"float32"), )
paddle.Tensor.floor(Tensor([251, 4],"float32"), )
paddle.Tensor.floor(Tensor([542, 4],"float32"), )
paddle.Tensor.floor(Tensor([717, 4],"float32"), )
paddle.Tensor.floor(Tensor([424, 4],"float32"), )
paddle.Tensor.floor(Tensor([488, 4],"float32"), )
paddle.Tensor.floor(Tensor([438, 4],"float32"), )
paddle.Tensor.floor(Tensor([552, 4],"float32"), )
paddle.Tensor.floor(Tensor([341, 4],"float32"), )
paddle.Tensor.floor(Tensor([472, 4],"float32"), )
paddle.Tensor.floor(Tensor([332, 4],"float32"), )
paddle.Tensor.floor(Tensor([876, 4],"float32"), )
paddle.Tensor.floor(Tensor([598, 4],"float32"), )
paddle.Tensor.floor(Tensor([531, 4],"float32"), )
paddle.Tensor.floor(Tensor([739, 4],"float32"), )
paddle.Tensor.floor(Tensor([555, 4],"float32"), )
paddle.Tensor.floor(Tensor([537, 4],"float32"), )
paddle.Tensor.floor(Tensor([513, 4],"float32"), )
paddle.Tensor.floor(Tensor([267, 4],"float32"), )
paddle.Tensor.floor(Tensor([654, 4],"float32"), )
paddle.Tensor.floor(Tensor([707, 4],"float32"), )
paddle.Tensor.floor(Tensor([1435, 4],"float32"), )
paddle.Tensor.floor(Tensor([677, 4],"float32"), )
paddle.Tensor.floor(Tensor([1230, 4],"float32"), )
paddle.Tensor.floor(Tensor([738, 4],"float32"), )
paddle.Tensor.floor(Tensor([422, 4],"float32"), )
paddle.Tensor.floor(Tensor([369, 4],"float32"), )
paddle.Tensor.floor(Tensor([587, 4],"float32"), )
paddle.Tensor.floor(Tensor([625, 4],"float32"), )
paddle.Tensor.floor(Tensor([367, 4],"float32"), )
paddle.Tensor.floor(Tensor([672, 4],"float32"), )
paddle.Tensor.floor(Tensor([285, 4],"float32"), )
paddle.Tensor.floor(Tensor([715, 4],"float32"), )
paddle.Tensor.floor(Tensor([571, 4],"float32"), )
paddle.Tensor.floor(Tensor([311, 4],"float32"), )
paddle.Tensor.floor(Tensor([719, 4],"float32"), )
paddle.Tensor.floor(Tensor([339, 4],"float32"), )
paddle.Tensor.floor(Tensor([538, 4],"float32"), )
paddle.Tensor.floor(Tensor([411, 4],"float32"), )
paddle.Tensor.floor(Tensor([622, 4],"float32"), )
paddle.Tensor.floor(Tensor([629, 4],"float32"), )
paddle.Tensor.floor(Tensor([265, 4],"float32"), )
paddle.Tensor.floor(Tensor([1610, 4],"float32"), )
paddle.Tensor.floor(Tensor([449, 4],"float32"), )
paddle.Tensor.floor(Tensor([315, 4],"float32"), )
paddle.Tensor.floor(Tensor([323, 4],"float32"), )
paddle.Tensor.floor(Tensor([695, 4],"float32"), )
paddle.Tensor.floor(Tensor([895, 4],"float32"), )
paddle.Tensor.floor(Tensor([269, 4],"float32"), )
paddle.Tensor.floor(Tensor([364, 4],"float32"), )
paddle.Tensor.floor(Tensor([639, 4],"float32"), )
paddle.Tensor.floor(Tensor([316, 4],"float32"), )
paddle.Tensor.floor(Tensor([469, 4],"float32"), )
paddle.Tensor.floor(Tensor([713, 4],"float32"), )
paddle.Tensor.floor(Tensor([440, 4],"float32"), )
paddle.Tensor.floor(Tensor([528, 4],"float32"), )
paddle.Tensor.floor(Tensor([694, 4],"float32"), )
paddle.Tensor.floor(Tensor([497, 4],"float32"), )
paddle.Tensor.floor(Tensor([417, 4],"float32"), )
paddle.Tensor.floor(Tensor([580, 4],"float32"), )
paddle.Tensor.floor(Tensor([447, 4],"float32"), )
paddle.Tensor.floor(Tensor([324, 4],"float32"), )
paddle.Tensor.floor(Tensor([425, 4],"float32"), )
paddle.Tensor.floor(Tensor([1163, 4],"float32"), )
paddle.Tensor.floor(Tensor([466, 4],"float32"), )
paddle.Tensor.floor(Tensor([293, 4],"float32"), )
paddle.Tensor.floor(Tensor([450, 4],"float32"), )
paddle.Tensor.floor(Tensor([702, 4],"float32"), )
paddle.Tensor.floor(Tensor([569, 4],"float32"), )
paddle.Tensor.floor(Tensor([720, 4],"float32"), )
paddle.Tensor.floor(Tensor([259, 4],"float32"), )
paddle.Tensor.floor(Tensor([399, 4],"float32"), )
paddle.Tensor.floor(Tensor([344, 4],"float32"), )
paddle.Tensor.floor(Tensor([678, 4],"float32"), )
paddle.Tensor.floor(Tensor([800, 4],"float32"), )
paddle.Tensor.floor(Tensor([280, 4],"float32"), )
paddle.Tensor.floor(Tensor([693, 4],"float32"), )
paddle.Tensor.floor(Tensor([499, 4],"float32"), )
paddle.Tensor.floor(Tensor([391, 4],"float32"), )
paddle.Tensor.floor(Tensor([579, 4],"float32"), )
paddle.Tensor.floor(Tensor([732, 4],"float32"), )
paddle.Tensor.floor(Tensor([479, 4],"float32"), )
paddle.Tensor.floor(Tensor([442, 4],"float32"), )
paddle.Tensor.floor(Tensor([596, 4],"float32"), )
paddle.Tensor.floor(Tensor([454, 4],"float32"), )
paddle.Tensor.floor(Tensor([297, 4],"float32"), )
paddle.Tensor.floor(Tensor([763, 4],"float32"), )
paddle.Tensor.floor(Tensor([632, 4],"float32"), )
paddle.Tensor.floor(Tensor([353, 4],"float32"), )
paddle.Tensor.floor(Tensor([781, 4],"float32"), )
paddle.Tensor.floor(Tensor([588, 4],"float32"), )
paddle.Tensor.floor(Tensor([291, 4],"float32"), )
paddle.Tensor.floor(Tensor([325, 4],"float32"), )
paddle.Tensor.floor(Tensor([604, 4],"float32"), )
paddle.Tensor.floor(Tensor([509, 4],"float32"), )
paddle.Tensor.floor(Tensor([482, 4],"float32"), )
paddle.Tensor.floor(Tensor([465, 4],"float32"), )
paddle.Tensor.floor(Tensor([298, 4],"float32"), )
paddle.Tensor.floor(Tensor([1248, 4],"float32"), )
paddle.Tensor.floor(Tensor([381, 4],"float32"), )
paddle.Tensor.floor(Tensor([461, 4],"float32"), )
paddle.Tensor.floor(Tensor([357, 4],"float32"), )
paddle.Tensor.floor(Tensor([405, 4],"float32"), )
paddle.Tensor.floor(Tensor([380, 4],"float32"), )
paddle.Tensor.floor(Tensor([700, 4],"float32"), )
paddle.Tensor.floor(Tensor([690, 4],"float32"), )
paddle.Tensor.floor(Tensor([275, 4],"float32"), )
paddle.Tensor.floor(Tensor([494, 4],"float32"), )
paddle.Tensor.floor(Tensor([326, 4],"float32"), )
paddle.Tensor.floor(Tensor([457, 4],"float32"), )
paddle.Tensor.floor(Tensor([589, 4],"float32"), )
paddle.Tensor.floor(Tensor([350, 4],"float32"), )
paddle.Tensor.floor(Tensor([637, 4],"float32"), )
paddle.Tensor.floor(Tensor([626, 4],"float32"), )
paddle.Tensor.floor(Tensor([412, 4],"float32"), )
paddle.Tensor.floor(Tensor([773, 4],"float32"), )
paddle.Tensor.floor(Tensor([468, 4],"float32"), )
paddle.Tensor.floor(Tensor([940, 4],"float32"), )
paddle.Tensor.floor(Tensor([274, 4],"float32"), )
paddle.Tensor.floor(Tensor([651, 4],"float32"), )
paddle.Tensor.floor(Tensor([999, 4],"float32"), )
paddle.Tensor.floor(Tensor([570, 4],"float32"), )
paddle.Tensor.floor(Tensor([1042, 4],"float32"), )
paddle.Tensor.floor(Tensor([652, 4],"float32"), )
paddle.Tensor.floor(Tensor([286, 4],"float32"), )
paddle.Tensor.floor(Tensor([595, 4],"float32"), )
paddle.Tensor.floor(Tensor([567, 4],"float32"), )
paddle.Tensor.floor(Tensor([295, 4],"float32"), )
paddle.Tensor.floor(Tensor([307, 4],"float32"), )
paddle.Tensor.floor(Tensor([504, 4],"float32"), )
paddle.Tensor.floor(Tensor([335, 4],"float32"), )
paddle.Tensor.floor(Tensor([362, 4],"float32"), )
paddle.Tensor.floor(Tensor([370, 4],"float32"), )
paddle.Tensor.floor(Tensor([414, 4],"float32"), )
paddle.Tensor.floor(Tensor([485, 4],"float32"), )
paddle.Tensor.floor(Tensor([432, 4],"float32"), )
paddle.Tensor.floor(Tensor([1060, 4],"float32"), )
paddle.Tensor.floor(Tensor([374, 4],"float32"), )
paddle.Tensor.floor(Tensor([593, 4],"float32"), )
paddle.Tensor.floor(Tensor([612, 4],"float32"), )
paddle.Tensor.floor(Tensor([396, 4],"float32"), )
paddle.Tensor.floor(Tensor([338, 4],"float32"), )
paddle.Tensor.floor(Tensor([317, 4],"float32"), )
paddle.Tensor.floor(Tensor([320, 4],"float32"), )
paddle.Tensor.floor(Tensor([500, 4],"float32"), )
paddle.Tensor.floor(Tensor([634, 4],"float32"), )
paddle.Tensor.floor(Tensor([648, 4],"float32"), )
paddle.Tensor.floor(Tensor([443, 4],"float32"), )
paddle.Tensor.floor(Tensor([786, 4],"float32"), )
paddle.Tensor.floor(Tensor([771, 4],"float32"), )
paddle.Tensor.floor(Tensor([410, 4],"float32"), )
paddle.Tensor.floor(Tensor([360, 4],"float32"), )
paddle.Tensor.floor(Tensor([647, 4],"float32"), )
paddle.Tensor.floor(Tensor([1282, 4],"float32"), )
paddle.Tensor.floor(Tensor([508, 4],"float32"), )
paddle.Tensor.floor(Tensor([614, 4],"float32"), )
paddle.Tensor.floor(Tensor([1171, 4],"float32"), )
paddle.Tensor.floor(Tensor([471, 4],"float32"), )
paddle.Tensor.floor(Tensor([253, 4],"float32"), )
paddle.Tensor.floor(Tensor([594, 4],"float32"), )
paddle.Tensor.floor(Tensor([308, 4],"float32"), )
paddle.Tensor.floor(Tensor([503, 4],"float32"), )
paddle.Tensor.floor(Tensor([439, 4],"float32"), )
paddle.Tensor.floor(Tensor([529, 4],"float32"), )
paddle.Tensor.floor(Tensor([366, 4],"float32"), )
paddle.Tensor.floor(Tensor([413, 4],"float32"), )
paddle.Tensor.floor(Tensor([301, 4],"float32"), )
paddle.Tensor.floor(Tensor([794, 4],"float32"), )
paddle.Tensor.floor(Tensor([1131, 4],"float32"), )
paddle.Tensor.floor(Tensor([859, 4],"float32"), )
paddle.Tensor.floor(Tensor([585, 4],"float32"), )
paddle.Tensor.floor(Tensor([264, 4],"float32"), )
paddle.Tensor.floor(Tensor([558, 4],"float32"), )
paddle.Tensor.floor(Tensor([620, 4],"float32"), )
paddle.Tensor.floor(Tensor([619, 4],"float32"), )
paddle.Tensor.floor(Tensor([342, 4],"float32"), )
paddle.Tensor.floor(Tensor([445, 4],"float32"), )
paddle.Tensor.floor(Tensor([252, 4],"float32"), )
paddle.Tensor.floor(Tensor([384, 4],"float32"), )
paddle.Tensor.floor(Tensor([373, 4],"float32"), )
paddle.Tensor.floor(Tensor([809, 4],"float32"), )
paddle.Tensor.floor(Tensor([435, 4],"float32"), )
paddle.Tensor.gather_nd(Tensor([4, 53568, 1],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 2],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 10],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 53568, 2],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 2],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 1],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 500, 1],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 1],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 500, 2],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 500, 2],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([12, 7, 32],"float32"), Tensor([12, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([4, 500, 1],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.imag(Tensor([100000],"complex128"), )
paddle.Tensor.imag(Tensor([16, 96, 16, 9],"complex64"), )
paddle.Tensor.imag(Tensor([100000, 4],"complex128"), )
paddle.Tensor.imag(Tensor([32, 15, 8, 8, 32],"complex64"), )
paddle.Tensor.imag(Tensor([16, 64, 16, 9],"complex64"), )
paddle.Tensor.imag(Tensor([1000, 784],"complex64"), )
paddle.Tensor.imag(Tensor([4, 32, 32, 16],"complex64"), )
paddle.Tensor.imag(Tensor([20, 64, 64],"complex64"), )
paddle.Tensor.imag(Tensor([16, 32, 16, 9],"complex64"), )
paddle.Tensor.imag(Tensor([16, 32, 8, 5],"complex64"), )
paddle.Tensor.imag(Tensor([16, 128, 8, 5],"complex64"), )
paddle.Tensor.imag(Tensor([16, 64, 8, 5],"complex64"), )
paddle.Tensor.index_select(Tensor([454, 24],"float32"), axis=0, index=Tensor([130],"int64"), )
paddle.Tensor.index_select(Tensor([454, 24],"float32"), axis=0, index=Tensor([39],"int64"), )
paddle.Tensor.index_select(Tensor([4004, 24],"float32"), axis=0, index=Tensor([182],"int64"), )
paddle.Tensor.index_select(Tensor([454, 24],"float32"), axis=0, index=Tensor([91],"int64"), )
paddle.Tensor.index_select(Tensor([128, 16],"float32"), Tensor([30],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([3, 1, 500],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([128, 16],"float32"), Tensor([38],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([128, 16],"float32"), Tensor([28],"int64"), axis=0, )
paddle.Tensor.inverse(Tensor([36, 36],"float32"), )
paddle.Tensor.is_complex(Tensor([3, 100, 40],"float64"), )
paddle.Tensor.is_complex(Tensor([3, 40, 100],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 100, 40],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 40, 100],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 40, 12],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 100, 4],"float64"), )
paddle.Tensor.is_complex(Tensor([3, 100, 4],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 100, 6],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 100, 2],"float64"), )
paddle.Tensor.is_complex(Tensor([3, 40, 12],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 40, 6],"float64"), )
paddle.Tensor.is_complex(Tensor([3, 100, 6],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 40, 8],"float64"), )
paddle.Tensor.is_complex(Tensor([40, 100],"float64"), )
paddle.Tensor.is_complex(Tensor([100, 12],"float64"), )
paddle.Tensor.is_complex(Tensor([100, 40],"float64"), )
paddle.Tensor.is_complex(Tensor([3, 4, 100],"float64"), )
paddle.Tensor.is_complex(Tensor([1, 100, 12],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 100, 8],"float64"), )
paddle.Tensor.is_complex(Tensor([3, 100, 12],"float64"), )
paddle.Tensor.is_complex(Tensor([1, 40, 100],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 100, 12],"float64"), )
paddle.Tensor.is_complex(Tensor([3, 100, 8],"float64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 4, 100],"float64"), )
paddle.Tensor.is_complex(Tensor([1, 100, 40],"float64"), )
paddle.Tensor.isnan(Tensor([16384],"float32"), )
paddle.Tensor.isnan(Tensor([35968],"float32"), )
paddle.Tensor.isnan(Tensor([2160],"float64"), )
paddle.Tensor.isnan(Tensor([1024],"float32"), )
paddle.Tensor.isnan(Tensor([1184],"float32"), )
paddle.Tensor.isnan(Tensor([3, 6, 3, 4, 2, 5],"float64"), )
paddle.Tensor.kthvalue(Tensor([2, 200, 10],"float32"), k=200, axis=1, )
paddle.Tensor.less(Tensor([10, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.Tensor.lgamma(Tensor([5, 7, 8, 10],"float64"), )
paddle.Tensor.log(Tensor([4800, 101],"float32"), )
paddle.Tensor.log(Tensor([10000, 5, 3],"float64"), )
paddle.Tensor.log(Tensor([8550, 4],"float32"), )
paddle.Tensor.log(Tensor([2400, 8],"float32"), )
paddle.Tensor.log(Tensor([10000, 4],"float64"), )
paddle.Tensor.log(Tensor([6380, 4],"float32"), )
paddle.Tensor.log(Tensor([300, 8],"float32"), )
paddle.Tensor.log(Tensor([900, 4],"float32"), )
paddle.Tensor.log(Tensor([1200, 4],"float32"), )
paddle.Tensor.log(Tensor([600, 2],"float32"), )
paddle.Tensor.log(Tensor([300, 4],"float32"), )
paddle.Tensor.log(Tensor([300, 7],"float32"), )
paddle.Tensor.log(Tensor([1800, 4],"float32"), )
paddle.Tensor.log(Tensor([300, 5],"float32"), )
paddle.Tensor.log(Tensor([600, 4],"float32"), )
paddle.Tensor.log(Tensor([600, 16],"float32"), )
paddle.Tensor.log10(Tensor([80, 499],"float32"), )
paddle.Tensor.logical_and(Tensor([403230],"bool"), Tensor([403230],"bool"), )
paddle.Tensor.logical_and(Tensor([409600],"bool"), Tensor([409600],"bool"), )
paddle.Tensor.logical_and(Tensor([393448],"bool"), Tensor([393448],"bool"), )
paddle.Tensor.logical_and(Tensor([408910],"bool"), Tensor([408910],"bool"), )
paddle.Tensor.logical_and(Tensor([405960],"bool"), Tensor([405960],"bool"), )
paddle.Tensor.logical_and(Tensor([408921],"bool"), Tensor([408921],"bool"), )
paddle.Tensor.logical_and(Tensor([402297],"bool"), Tensor([402297],"bool"), )
paddle.Tensor.logical_and(Tensor([28913],"bool"), Tensor([28913],"bool"), )
paddle.Tensor.logical_and(Tensor([1697],"bool"), Tensor([1697],"bool"), )
paddle.Tensor.logical_and(Tensor([1038],"bool"), Tensor([1038],"bool"), )
paddle.Tensor.logical_not(Tensor([16384],"bool"), )
paddle.Tensor.logical_not(Tensor([15000],"bool"), )
paddle.Tensor.logical_not(Tensor([35968],"bool"), )
paddle.Tensor.logical_not(Tensor([60000],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 6, 3, 4, 2, 5],"bool"), )
paddle.Tensor.logical_not(Tensor([1024],"bool"), )
paddle.Tensor.logical_not(Tensor([3750],"bool"), )
paddle.Tensor.logical_not(Tensor([1500],"bool"), )
paddle.Tensor.logical_not(Tensor([2160],"bool"), )
paddle.Tensor.logical_not(Tensor([1184],"bool"), )
paddle.Tensor.logical_or(Tensor([403230],"bool"), Tensor([403230],"bool"), )
paddle.Tensor.logical_or(Tensor([393448],"bool"), Tensor([393448],"bool"), )
paddle.Tensor.logical_or(Tensor([402297],"bool"), Tensor([402297],"bool"), )
paddle.Tensor.logical_or(Tensor([408921],"bool"), Tensor([408921],"bool"), )
paddle.Tensor.logical_or(Tensor([408910],"bool"), Tensor([408910],"bool"), )
paddle.Tensor.logical_or(Tensor([405960],"bool"), Tensor([405960],"bool"), )
paddle.Tensor.logical_or(Tensor([409600],"bool"), Tensor([409600],"bool"), )
paddle.Tensor.logical_or(Tensor([28913],"bool"), Tensor([28913],"bool"), )
paddle.Tensor.logical_or(Tensor([1697],"bool"), Tensor([1697],"bool"), )
paddle.Tensor.logical_or(Tensor([1038],"bool"), Tensor([1038],"bool"), )
paddle.Tensor.masked_fill(Tensor([340, 25, 25],"float32"), Tensor([340, 25, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 4],"float32"), Tensor([1, 38367, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([85, 25, 25],"float32"), Tensor([85, 25, 25],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 4],"float32"), Tensor([1, 36828, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([85, 25, 25],"float32"), Tensor([85, 25, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([340, 25, 25],"float32"), Tensor([340, 25, 25],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([52, 4, 7, 7],"float32"), Tensor([52, 4, 7, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([27, 25, 25],"float32"), Tensor([27, 25, 25],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([10, 25, 25],"float32"), Tensor([10, 25, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([1, 8550, 4],"float32"), Tensor([1, 8550, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([52, 7, 32],"float32"), Tensor([52, 7, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([10, 25, 25],"float32"), Tensor([10, 25, 25],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 6380, 4],"float32"), Tensor([1, 6380, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([27, 25, 25],"float32"), Tensor([27, 25, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([13, 4, 7, 7],"float32"), Tensor([13, 4, 7, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 7, 32],"float32"), Tensor([13, 7, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 32],"float32"), Tensor([52, 32],"bool"), 0, )
paddle.Tensor.masked_select(Tensor([409600],"float32"), Tensor([409600],"bool"), )
paddle.Tensor.masked_select(Tensor([60000, 2],"float32"), Tensor([60000, 2],"bool"), )
paddle.Tensor.masked_select(Tensor([409600],"int64"), Tensor([409600],"bool"), )
paddle.Tensor.masked_select(Tensor([60000],"float32"), Tensor([60000],"bool"), )
paddle.Tensor.masked_select(Tensor([10, 10, 10, 10, 10],"float64"), Tensor([10, 10, 10, 10, 10],"bool"), )
paddle.Tensor.masked_select(Tensor([15000],"float32"), Tensor([15000],"bool"), )
paddle.Tensor.masked_select(Tensor([3750, 2],"float32"), Tensor([3750, 2],"bool"), )
paddle.Tensor.masked_select(Tensor([15000, 2],"float32"), Tensor([15000, 2],"bool"), )
paddle.Tensor.masked_select(Tensor([2112],"float32"), Tensor([2112],"bool"), )
paddle.Tensor.masked_select(Tensor([13, 7, 16],"float32"), Tensor([13, 7, 16],"bool"), )
paddle.Tensor.masked_select(Tensor([2944],"float32"), Tensor([2944],"bool"), )
paddle.Tensor.masked_select(Tensor([3750],"float32"), Tensor([3750],"bool"), )
paddle.Tensor.masked_select(Tensor([4224],"float32"), Tensor([4224],"bool"), )
paddle.Tensor.masked_select(Tensor([13, 7, 24],"float32"), Tensor([13, 7, 24],"bool"), )
paddle.Tensor.matmul(Tensor([96, 8, 40, 15],"float32"), Tensor([96, 8, 15, 40],"float32"), )
paddle.Tensor.matmul(Tensor([4, 12, 320, 32],"float32"), Tensor([4, 12, 32, 320],"float32"), )
paddle.Tensor.matmul(Tensor([64, 8, 40, 15],"float32"), Tensor([64, 8, 15, 40],"float32"), )
paddle.Tensor.matmul(Tensor([8, 8, 40, 40],"float32"), Tensor([8, 8, 40, 15],"float32"), )
paddle.Tensor.matmul(Tensor([8, 8, 40, 15],"float32"), Tensor([8, 8, 15, 40],"float32"), )
paddle.Tensor.matmul(Tensor([4, 12, 13, 40],"float32"), Tensor([4, 12, 40, 32],"float32"), )
paddle.Tensor.matmul(Tensor([4, 12, 13, 32],"float32"), Tensor([4, 12, 32, 40],"float32"), )
paddle.Tensor.matmul(Tensor([4, 12, 5, 32],"float32"), Tensor([4, 12, 32, 5],"float32"), )
paddle.Tensor.matmul(Tensor([4, 12, 13, 13],"float32"), Tensor([4, 12, 13, 32],"float32"), )
paddle.Tensor.matmul(Tensor([4, 8, 40, 32],"float32"), Tensor([4, 8, 32, 40],"float32"), )
paddle.Tensor.matmul(Tensor([4, 12, 5, 40],"float32"), Tensor([4, 12, 40, 32],"float32"), )
paddle.Tensor.matmul(Tensor([2, 3, 40, 12],"float64"), Tensor([2, 3, 12, 100],"float64"), )
paddle.Tensor.matmul(Tensor([4, 8, 40, 40],"float32"), Tensor([4, 8, 40, 32],"float32"), )
paddle.Tensor.matmul(Tensor([4, 8, 40, 15],"float32"), Tensor([4, 8, 15, 40],"float32"), )
paddle.Tensor.matmul(Tensor([4, 12, 5, 32],"float32"), Tensor([4, 12, 32, 40],"float32"), )
paddle.Tensor.matmul(Tensor([4, 8, 40, 40],"float32"), Tensor([4, 8, 40, 15],"float32"), )
paddle.Tensor.matmul(Tensor([2, 3, 100, 12],"float64"), Tensor([2, 3, 12, 40],"float64"), )
paddle.Tensor.matmul(Tensor([4, 12, 13, 32],"float32"), Tensor([4, 12, 32, 13],"float32"), )
paddle.Tensor.matmul(Tensor([1, 40, 12],"float64"), Tensor([1, 12, 100],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 100, 8],"float64"), Tensor([2, 3, 8, 8],"float64"), )
paddle.Tensor.matmul(Tensor([5, 125],"float32"), Tensor([125, 5],"float32"), )
paddle.Tensor.matmul(Tensor([1, 625],"float64"), Tensor([625, 1],"float64"), )
paddle.Tensor.matmul(Tensor([3, 40, 12],"float64"), Tensor([3, 12, 12],"float64"), )
paddle.Tensor.matmul(Tensor([100, 21],"float64"), Tensor([21, 21],"float64"), )
paddle.Tensor.matmul(Tensor([3, 40, 8],"float64"), Tensor([3, 8, 100],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 40, 6],"float64"), Tensor([2, 3, 6, 6],"float64"), )
paddle.Tensor.matmul(Tensor([1, 625],"float32"), Tensor([625, 1],"float32"), )
paddle.Tensor.matmul(Tensor([2, 3, 100, 12],"float64"), Tensor([2, 3, 12, 12],"float64"), )
paddle.Tensor.matmul(Tensor([100, 21],"float64"), Tensor([21, 40],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 100, 8],"float64"), Tensor([2, 3, 8, 40],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 40, 12],"float64"), Tensor([2, 3, 12, 12],"float64"), )
paddle.Tensor.matmul(Tensor([4, 120],"float64"), Tensor([120, 8],"float64"), )
paddle.Tensor.matmul(Tensor([3, 40, 6],"float64"), Tensor([3, 6, 100],"float64"), )
paddle.Tensor.matmul(Tensor([3, 40, 12],"float64"), Tensor([3, 12, 100],"float64"), )
paddle.Tensor.matmul(Tensor([1, 100, 8],"float64"), Tensor([1, 8, 40],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 100, 2],"float64"), Tensor([2, 3, 2, 4],"float64"), )
paddle.Tensor.matmul(Tensor([3, 100, 8],"float64"), Tensor([3, 8, 40],"float64"), )
paddle.Tensor.matmul(Tensor([40, 8],"float64"), Tensor([8, 100],"float64"), )
paddle.Tensor.matmul(Tensor([25, 25],"float64"), Tensor([25, 25],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 100, 2],"float64"), Tensor([2, 3, 2, 2],"float64"), )
paddle.Tensor.matmul(Tensor([40, 21],"float64"), Tensor([21, 21],"float64"), )
paddle.Tensor.matmul(Tensor([3, 100, 6],"float64"), Tensor([3, 6, 40],"float64"), )
paddle.Tensor.matmul(Tensor([25, 25],"float32"), Tensor([25, 25],"float32"), )
paddle.Tensor.matmul(Tensor([5, 125],"float64"), Tensor([125, 5],"float64"), )
paddle.Tensor.matmul(Tensor([3, 100, 12],"float64"), Tensor([3, 12, 12],"float64"), )
paddle.Tensor.matmul(Tensor([100, 12],"float64"), Tensor([12, 40],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 100, 6],"float64"), Tensor([2, 3, 6, 6],"float64"), )
paddle.Tensor.matmul(Tensor([125, 5],"float64"), Tensor([5, 125],"float64"), )
paddle.Tensor.matmul(Tensor([3, 100, 6],"float64"), Tensor([3, 6, 6],"float64"), )
paddle.Tensor.matmul(Tensor([3, 40, 8],"float64"), Tensor([3, 8, 8],"float64"), )
paddle.Tensor.matmul(Tensor([4, 12, 5, 5],"float32"), Tensor([4, 12, 5, 32],"float32"), )
paddle.Tensor.matmul(Tensor([125, 5],"float32"), Tensor([5, 125],"float32"), )
paddle.Tensor.matmul(Tensor([100, 12],"float64"), Tensor([12, 12],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 100, 4],"float64"), Tensor([2, 3, 4, 4],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 40, 8],"float64"), Tensor([2, 3, 8, 8],"float64"), )
paddle.Tensor.matmul(Tensor([1, 100, 12],"float64"), Tensor([1, 12, 40],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 100, 6],"float64"), Tensor([2, 3, 6, 40],"float64"), )
paddle.Tensor.matmul(Tensor([40, 12],"float64"), Tensor([12, 100],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 40, 8],"float64"), Tensor([2, 3, 8, 100],"float64"), )
paddle.Tensor.matmul(Tensor([3, 100, 8],"float64"), Tensor([3, 8, 8],"float64"), )
paddle.Tensor.matmul(Tensor([1, 100, 12],"float64"), Tensor([1, 12, 12],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 4, 4],"float64"), Tensor([2, 3, 4, 100],"float64"), )
paddle.Tensor.matmul(Tensor([3, 4, 4],"float64"), Tensor([3, 4, 100],"float64"), )
paddle.Tensor.matmul(Tensor([3, 100, 12],"float64"), Tensor([3, 12, 40],"float64"), )
paddle.Tensor.matmul(Tensor([1, 40, 8],"float64"), Tensor([1, 8, 100],"float64"), )
paddle.Tensor.matmul(Tensor([100, 8],"float64"), Tensor([8, 40],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 40, 6],"float64"), Tensor([2, 3, 6, 100],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 4, 2],"float64"), Tensor([2, 3, 2, 100],"float64"), )
paddle.Tensor.matmul(Tensor([3, 100, 4],"float64"), Tensor([3, 4, 4],"float64"), )
paddle.Tensor.max(Tensor([1, 20, 33600],"float32"), -2, )
paddle.Tensor.max(Tensor([2184, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 53, 5376],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 29, 12096],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 21, 4116],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([13, 48240],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 10, 2100],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([8, 5, 4725],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 42, 5376],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 65, 2541],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([9, 57960],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 168795],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 20, 6069],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 8, 9261],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 82, 2541],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 270096],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 123, 3024],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 73, 4116],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 22, 4116],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([5, 75615],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 41, 3549],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 47, 2100],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 149, 2541],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 8, 7581],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 28, 30324],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 40, 7581],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 15, 10164],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 81, 6069],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 55, 8400],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 35, 3024],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 108, 2100],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 359100],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 31, 12096],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 45, 4725],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([7, 64170],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([13, 69750],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 42, 9261],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 66, 2100],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 17, 3549],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 13, 75600],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 47, 2541],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 26, 5376],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 354501],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 33, 9261],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 37, 2100],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 24, 21504],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 15, 3549],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([11, 56640],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 11, 44436],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([16, 21, 2541],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 19, 27216],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 14, 5376],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([4, 26, 9261],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 71, 3549],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 4, 3549],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 306900],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([18, 50250],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 15, 40656],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 22, 44436],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 6, 75600],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 12, 6069],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 269586],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 28, 30324],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 21, 2541],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 33, 3549],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 82, 3549],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 6912, 50],"float32"), 2, )
paddle.Tensor.max(Tensor([2, 59, 4116],"float32"), -2, )
paddle.Tensor.max(Tensor([4, 56430],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 28, 5440],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 43, 4725],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 14, 6885],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 10, 48384],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 138120],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([12, 46080],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 17, 4116],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 59250],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 105, 4116],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 14, 3598],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 26, 3549],"float32"), -2, )
paddle.Tensor.max(Tensor([16, 6, 4116],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 24, 4116],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 261681],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 234804],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 65, 2100],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 15, 4116],"float32"), -2, )
paddle.Tensor.max(Tensor([6, 52560],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 11, 70644],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 76, 5376],"float32"), -2, )
paddle.Tensor.max(Tensor([5, 44640],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 397467],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 14, 52500],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 74100],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 53, 4116],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 27, 7581],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 3, 44436],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 47, 2100],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 41, 5376],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 82, 6069],"float32"), -2, )
paddle.Tensor.max(Tensor([14, 64170],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 28, 33600],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 44220],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 23, 4725],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 63, 4725],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 22, 2541],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 171888],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 58, 8400],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 64, 6069],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 43, 4116],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 6, 44436],"float32"), -2, )
paddle.Tensor.max(Tensor([8, 12, 3024],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([4, 211038],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 20, 4116],"float32"), -2, )
paddle.Tensor.max(Tensor([5, 67890],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 24, 3024],"float32"), -2, )
paddle.Tensor.max(Tensor([3, 248616],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 10, 75600],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([16, 11, 3549],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([4, 78120],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 41, 4116],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 34, 6069],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 19, 4116],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 20, 8400],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 21, 5376],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 9, 70644],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 42, 10164],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 81, 3024],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 79, 3549],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 60390],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 17, 5376],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 18, 5376],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 5, 6069],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 68400],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 36, 10164],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 41, 3024],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([6, 94500],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 29, 3549],"float32"), -2, )
paddle.Tensor.max(Tensor([11760, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([5, 79695],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 62, 6804],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 50, 2541],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 19, 5376],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([10, 74100],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 75375],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 44, 8400],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 14, 5376],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 19, 44436],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 62700],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 205923],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 270096],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 9, 40656],"float32"), -2, )
paddle.Tensor.max(Tensor([8, 5, 9261],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([8, 20, 6069],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 59, 2541],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 14, 4116],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([6, 54000],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 75, 2541],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 25, 3024],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 52, 3024],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 12, 7681],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 37, 4725],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 26, 2100],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 42, 3024],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 7, 44436],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([12, 69750],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 293397],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 13, 37044],"float32"), -2, )
paddle.Tensor.max(Tensor([8, 1083, 50],"float32"), 2, )
paddle.Tensor.max(Tensor([12136, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([6, 50250],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([7, 76590],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 31, 5376],"float32"), -2, )
paddle.Tensor.max(Tensor([8, 13, 9261],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 13, 11109],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 38, 10164],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 12, 9261],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 110, 3549],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 94620],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 7, 27216],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 36, 3024],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([6, 46080],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 8, 44436],"float32"), -2, )
paddle.Tensor.max(Tensor([3, 50250],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([61448, 4],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 61, 3024],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 73500],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 176490],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8208, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 80, 3549],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 41, 7581],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 14, 10164],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 6, 4725],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 41, 6804],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 60480],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 14, 11109],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 55, 6804],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 29, 12096],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 79, 3024],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 33, 4116],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 64350],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 51840],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 6, 48384],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 359613],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 36, 2541],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 7, 9261],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 10, 5440],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 48, 2541],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 45, 10164],"float32"), -2, )
paddle.Tensor.max(Tensor([18, 54000],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 25, 6069],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 26, 21504],"float32"), -2, )
paddle.Tensor.max(Tensor([16, 17, 2100],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 63, 2100],"float32"), -2, )
paddle.Tensor.max(Tensor([14, 71415],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([11, 81900],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 18, 44436],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 45, 3549],"float32"), -2, )
paddle.Tensor.max(Tensor([4, 43470],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 294624],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 322272],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 18, 21504],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([102400, 1],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 41, 2100],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 66, 4725],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 39, 4116],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([7, 83220],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 3, 56784],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 18, 10164],"float32"), -2, )
paddle.Tensor.max(Tensor([4096, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 43560],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 17, 7581],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 75, 6069],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 11, 6804],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 17, 37044],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 8, 24276],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 39, 12096],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 229152],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([11, 60750],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 588, 50],"float32"), 2, )
paddle.Tensor.max(Tensor([17, 56730],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 293622],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 7, 30324],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 10, 10285],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([8, 45135],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 67335],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 52920],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 75330],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 321759],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 62, 2541],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 52, 6069],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 10, 70644],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 126, 3549],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 188256],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 72, 4725],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 70, 6069],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 8, 56784],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 24, 33600],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 43, 2100],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 45, 3024],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 10, 3549],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 59, 5376],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 20, 11109],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 69, 6804],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([7, 43470],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 193368],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 325113],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 27, 33600],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([15, 54000],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 46, 5376],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 88, 4725],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 10, 65856],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 25, 30324],"float32"), -2, )
paddle.Tensor.max(Tensor([3, 59295],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 13, 3024],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([6272, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 14, 4725],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 16, 8400],"float32"), -2, )
paddle.Tensor.max(Tensor([6, 45750],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 29, 6069],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([5, 70080],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 379050],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 200022],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 64, 4116],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 48, 7581],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 184140],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2352, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 16, 27216],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 196416],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([14, 50250],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 72, 3024],"float32"), -2, )
paddle.Tensor.max(Tensor([8, 11, 2541],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 3, 75600],"float32"), -2, )
paddle.Tensor.max(Tensor([16, 50250],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 76590],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([6, 72360],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 30, 4116],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 15, 44436],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 24, 24276],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 39, 4116],"float32"), -2, )
paddle.Tensor.max(Tensor([8, 12, 4725],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 88, 2541],"float32"), -2, )
paddle.Tensor.max(Tensor([8, 6069, 4],"float32"), -1, )
paddle.Tensor.max(Tensor([2, 29, 4725],"float32"), -2, )
paddle.Tensor.max(Tensor([4, 68625],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([12, 75375],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 286977],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 37, 6804],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 25, 3549],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 285444],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 16, 2541],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 21, 30324],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([14, 68040],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 10, 65856],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 99, 4725],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 61, 3549],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 22, 4725],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([4608, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 246051],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 54270],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 79, 3024],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([10, 71100],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 42, 21504],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 33, 5376],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 26, 12096],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 302832],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([10, 75240],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 32, 6804],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 325113],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 61200],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 25, 33600],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 65, 5376],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 21, 3024],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 388032],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 237870],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 66, 3024],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 4332, 50],"float32"), 2, )
paddle.Tensor.max(Tensor([16, 10, 2541],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([8, 10, 2541],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 30, 11109],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 77760],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 18, 27216],"float32"), -2, )
paddle.Tensor.max(Tensor([3, 71820],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 13, 8400],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 176490],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 243474],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 245823],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 11, 5376],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 17, 6069],"float32"), -2, )
paddle.Tensor.max(Tensor([3, 236334],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 53, 8400],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 49, 9261],"float32"), -2, )
paddle.Tensor.max(Tensor([16, 46305],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 53, 5376],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 21, 37044],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 72, 2100],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 30, 2100],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 47, 7581],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 6, 10285],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 13, 70644],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 11109, 11],"float32"), -1, )
paddle.Tensor.max(Tensor([2, 34, 4725],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 31, 3549],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 10, 9261],"float32"), -2, )
paddle.Tensor.max(Tensor([5, 76590],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 63, 6069],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([5, 71100],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 100, 3024],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 6, 3024],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([16, 10, 4725],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([8, 24, 4725],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 42, 11109],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 214848],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 294624],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 45, 4116],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([9, 46800],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 26, 4116],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 25, 2541],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([13, 50250],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 7, 6069],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([2, 65, 3024],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 214830],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 7, 3549],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([3, 69750],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 20, 3024],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 16, 4725],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 45, 4116],"float32"), -2, )
paddle.Tensor.max(Tensor([8, 61500],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 37, 12096],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 24, 12096],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 82080],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 62310],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 57000],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 2, 65856],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 64350],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 35, 11109],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 19, 12096],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 87, 5376],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 76, 3024],"float32"), -2, )
paddle.Tensor.max(Tensor([4, 15, 2100],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([3, 52920],"float32"), axis=1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 68, 44, 44],"float32"), )
paddle.Tensor.mean(Tensor([2, 192, 26, 26],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 20, 20],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([156816, 1],"float32"), )
paddle.Tensor.mean(Tensor([2, 384, 14, 14],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 256, 16, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 16, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 16, 16],"float32"), -2, )
paddle.Tensor.mean(Tensor([4, 384, 14, 14],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 23, 23],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([22, 196, 128],"float32"), )
paddle.Tensor.mean(Tensor([2, 96, 64, 64],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 768, 32, 32],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 22, 22],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 192, 20, 20],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 48, 88, 88],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 82, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 80, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 4, 80],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 192, 48, 48],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 15, 15],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([13, 160, 160],"float32"), axis=tuple(1,2,), )
paddle.Tensor.mean(Tensor([64, 47, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 22, 22],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 768, 18, 18],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([64, 52, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 480, 22, 22],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 12, 12],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1936, 80],"float32"), )
paddle.Tensor.mean(Tensor([1, 96, 80, 80],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([11, 24, 56, 56],"float32"), )
paddle.Tensor.mean(Tensor([1, 256, 24, 36],"float32"), )
paddle.Tensor.mean(Tensor([4, 384, 24, 24],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([6, 24, 24, 192],"float32"), )
paddle.Tensor.mean(Tensor([4, 384, 16, 16],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 192, 38, 38],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([64, 48, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 256, 48, 72],"float32"), )
paddle.Tensor.mean(Tensor([4, 192, 26, 26],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 19, 19],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 21504, 15],"float32"), )
paddle.Tensor.mean(Tensor([64, 46, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([8, 192, 20, 20],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 384, 12, 12],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 768, 32, 32],"float32"), )
paddle.Tensor.mean(Tensor([128, 1000],"float32"), axis=-1, )
paddle.Tensor.mean(Tensor([2, 768, 19, 19],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([16, 256, 8, 8],"float32"), )
paddle.Tensor.mean(Tensor([2, 768, 22, 22],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([16, 300, 80],"float32"), 1, )
paddle.Tensor.mean(Tensor([64, 77, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 96, 48, 48],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 96, 40, 40],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 384, 18, 18],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 34, 34],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 96, 44, 44],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 96, 68, 68],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 192, 34, 34],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 2048, 128],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([512, 256, 7],"float32"), -1, )
paddle.Tensor.mean(Tensor([2, 79, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([8, 576, 14, 14],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 63, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 192, 30, 30],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 19, 19],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([16, 128, 16, 16],"float32"), )
paddle.Tensor.mean(Tensor([2, 384, 16, 16],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 576, 11, 11],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([22, 49, 256],"float32"), )
paddle.Tensor.mean(Tensor([4, 192, 20, 20],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([64, 44, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 15, 15],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 171888, 4],"float32"), )
paddle.Tensor.mean(Tensor([8, 384, 10, 10],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 192, 32, 32],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([13, 1007, 16],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([145, 4, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([187679, 3],"float32"), )
paddle.Tensor.mean(Tensor([2, 768, 15, 15],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 960, 14, 14],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 171888, 1],"float32"), )
paddle.Tensor.mean(Tensor([2, 192, 42, 42],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 768, 16, 16],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([10, 36, 28, 28],"float32"), )
paddle.Tensor.mean(Tensor([10000, 10],"float32"), )
paddle.Tensor.mean(Tensor([1, 256, 21, 32],"float32"), )
paddle.Tensor.mean(Tensor([4, 384, 13, 13],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([228595, 1],"float32"), )
paddle.Tensor.mean(Tensor([100000, 4],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([134, 4, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 40, 40],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 192, 44, 44],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([16, 512, 8, 8],"float32"), )
paddle.Tensor.mean(Tensor([1, 80, 50, 50],"float32"), )
paddle.Tensor.mean(Tensor([4, 192, 36, 36],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 96, 60, 60],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 107, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 10, 10],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 21504, 5],"float32"), )
paddle.Tensor.mean(Tensor([2, 192, 28, 28],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 30, 30],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 192, 28, 28],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([168, 4, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([8, 384, 16, 16],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 192, 34, 34],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 384, 17, 17],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1000, 784],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([1, 80, 44, 44],"float32"), )
paddle.Tensor.mean(Tensor([4, 384, 18, 18],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 18, 18],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 112, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([10, 49, 512],"float32"), )
paddle.Tensor.mean(Tensor([1, 1936, 68],"float32"), )
paddle.Tensor.mean(Tensor([2, 192, 24, 24],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([304794, 1],"float32"), )
paddle.Tensor.mean(Tensor([2, 109, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 768, 11, 11],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([192, 3, 14, 14],"float32"), )
paddle.Tensor.mean(Tensor([192, 1024],"float32"), )
paddle.Tensor.mean(Tensor([2, 384, 21, 21],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 192, 22, 22],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([100000, 1],"float32"), )
paddle.Tensor.mean(Tensor([1, 1024, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([8, 384, 13, 13],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1024, 128],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([50000, 2, 3],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([22, 28, 28, 28],"float32"), )
paddle.Tensor.mean(Tensor([2, 768, 24, 24],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 768, 34, 34],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 768, 17, 17],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 304, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 176, 80],"float32"), 1, )
paddle.Tensor.mean(Tensor([512, 1024],"float32"), )
paddle.Tensor.mean(Tensor([4, 192, 22, 22],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([171888],"float32"), )
paddle.Tensor.mean(Tensor([2, 384, 20, 20],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 288, 20, 20],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 192, 32, 32],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([64, 51, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 96, 40, 40],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 384, 14, 14],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 91, 64, 64],"float32"), )
paddle.Tensor.mean(Tensor([4, 960, 11, 11],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 192, 30, 30],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([64, 53, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 192, 36, 36],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 128, 256],"float32"), )
paddle.Tensor.mean(Tensor([4, 192, 24, 24],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 192, 22, 22],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 11, 11],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 768, 11, 11],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 48, 80, 80],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 384, 11, 11],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 74, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([10, 8, 196, 16],"float32"), )
paddle.Tensor.mean(Tensor([2, 192, 46, 46],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 17, 17],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 96, 48, 48],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 576, 10, 10],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 302, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 54, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([282600, 1],"float32"), )
paddle.Tensor.mean(Tensor([2, 48, 96, 96],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 2500, 80],"float32"), )
paddle.Tensor.mean(Tensor([2, 192, 40, 40],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 110, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 64, 64, 1],"float32"), )
paddle.Tensor.mean(Tensor([50000, 2],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([2, 900, 80],"float32"), 1, )
paddle.Tensor.mean(Tensor([2, 96, 56, 56],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([158, 4, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 96, 52, 52],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 12, 12],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 384, 15, 15],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 96, 72, 72],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 384, 20, 20],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([187679, 1],"float32"), )
paddle.Tensor.mean(Tensor([4, 384, 17, 17],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 13, 13],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 91, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 23, 23],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 768, 23, 23],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 256, 42, 64],"float32"), )
paddle.Tensor.mean(Tensor([2, 768, 12, 12],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 36, 36],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([100000, 4],"complex128"), axis=0, )
paddle.Tensor.mean(Tensor([4, 198, 128],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 28, 28],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([64, 50, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([13, 1007, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 8192, 32],"float32"), -1, )
paddle.Tensor.mean(Tensor([8, 192, 24, 24],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([171888, 4],"float32"), )
paddle.Tensor.mean(Tensor([1, 2048, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 24, 24],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 768, 21, 21],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 96, 44, 44],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 768, 36, 36],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 26, 26],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 768, 14, 14],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 192, 8, 80],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 960, 15, 15],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([11, 488, 7, 7],"float32"), )
paddle.Tensor.mean(Tensor([2, 384, 32, 32],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 768, 13, 13],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 4096, 91],"float32"), )
paddle.Tensor.mean(Tensor([16, 512, 4, 4],"float32"), )
paddle.Tensor.mean(Tensor([2, 768, 20, 20],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 21, 21],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 960, 16, 16],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([483100, 1],"float32"), )
paddle.Tensor.mean(Tensor([4, 96, 16, 80],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 768, 10, 10],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([256, 256, 5],"float32"), )
paddle.Tensor.mean(Tensor([2, 111, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([10, 256, 14, 14],"float32"), )
paddle.Tensor.mean(Tensor([16, 45, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 4096, 15],"float32"), )
paddle.Tensor.mean(Tensor([64, 19, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 33, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([10000, 1],"float32"), )
paddle.Tensor.mean(Tensor([16, 39, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 41, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([20600, 1],"float32"), )
paddle.Tensor.mean(Tensor([64, 13, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([13125, 2],"float32"), )
paddle.Tensor.mean(Tensor([16, 24, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 27, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 28, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([53, 2, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 21504, 1],"float32"), )
paddle.Tensor.mean(Tensor([4, 120, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 54, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([52, 7, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 15, 64, 64],"float32"), )
paddle.Tensor.mean(Tensor([8, 52, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([256, 16, 3],"float32"), )
paddle.Tensor.mean(Tensor([20267, 1],"float32"), )
paddle.Tensor.mean(Tensor([3800, 4],"float32"), )
paddle.Tensor.mean(Tensor([1, 100, 256],"float32"), )
paddle.Tensor.mean(Tensor([256, 20, 5],"float32"), )
paddle.Tensor.mean(Tensor([4, 156, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 32, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 12544],"float32"), 1, )
paddle.Tensor.mean(Tensor([10000],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([2, 3, 40, 100],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 97, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 42, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 33, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([3, 100, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([256, 256],"float32"), )
paddle.Tensor.mean(Tensor([10000, 2, 3],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([64, 26, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([512, 192],"float32"), )
paddle.Tensor.mean(Tensor([2, 384, 10, 10],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([16, 28, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([93401, 1],"float32"), )
paddle.Tensor.mean(Tensor([536, 24],"float32"), )
paddle.Tensor.mean(Tensor([4, 127, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([13, 49, 24],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([64, 15, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([10000, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 4096, 4],"float32"), )
paddle.Tensor.mean(Tensor([16, 27, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 152, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([86, 1000],"float32"), )
paddle.Tensor.mean(Tensor([16, 37, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 38, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([8550, 4],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 20, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([54, 2, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 167, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 49, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 24, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 21504, 2],"float32"), )
paddle.Tensor.mean(Tensor([4, 5, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 288, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([57, 2, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 50, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([256, 128, 1],"float32"), )
paddle.Tensor.mean(Tensor([4, 119, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 164, 128],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 43, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([3, 40, 100],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 465, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 182, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([80, 1000],"float32"), axis=-1, )
paddle.Tensor.mean(Tensor([16, 55, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 180, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 8, 8],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 418, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 500, 128],"float32"), )
paddle.Tensor.mean(Tensor([4, 95, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 100, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 26, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([13, 1007, 2],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 25, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 13125, 4],"float32"), )
paddle.Tensor.mean(Tensor([16, 31, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([192, 192],"float32"), )
paddle.Tensor.mean(Tensor([4, 132, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 148, 128],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 98, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 2500, 4],"float32"), )
paddle.Tensor.mean(Tensor([10240, 1],"float32"), )
paddle.Tensor.mean(Tensor([64, 170, 1],"float32"), )
paddle.Tensor.mean(Tensor([4, 130, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 17, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([512, 32],"float32"), )
paddle.Tensor.mean(Tensor([16, 36, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([5, 256, 7, 7],"float32"), )
paddle.Tensor.mean(Tensor([20267, 4],"float32"), )
paddle.Tensor.mean(Tensor([22, 1000],"float32"), )
paddle.Tensor.mean(Tensor([4, 135, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 40, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2541, 4],"float32"), )
paddle.Tensor.mean(Tensor([4, 525, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 1000],"float32"), )
paddle.Tensor.mean(Tensor([2048, 32],"float32"), )
paddle.Tensor.mean(Tensor([64, 22, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([38, 2, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 113, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([32, 13, 13, 12],"float64"), )
paddle.Tensor.mean(Tensor([16, 48, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 176, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([47, 2, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([512, 16, 3],"float32"), )
paddle.Tensor.mean(Tensor([4, 127, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 35, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 37, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([9, 1280],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([22, 480, 1, 1],"float32"), )
paddle.Tensor.mean(Tensor([20569, 1],"float32"), )
paddle.Tensor.mean(Tensor([4, 174, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 43, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 35, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 34, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 29, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([20, 256, 5],"float32"), )
paddle.Tensor.mean(Tensor([22, 1024, 1, 1],"float32"), )
paddle.Tensor.mean(Tensor([4, 166, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([15200, 4],"float32"), )
paddle.Tensor.mean(Tensor([51, 2, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([39, 2, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([10, 1000],"float32"), )
paddle.Tensor.mean(Tensor([4, 192, 8, 8],"float32"), -1, )
paddle.Tensor.mean(Tensor([100, 100],"float32"), )
paddle.Tensor.mean(Tensor([64, 29, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([8, 48, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([8, 53, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([7, 256, 7, 7],"float32"), )
paddle.Tensor.mean(Tensor([38, 2560],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([64, 39, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 42, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 234, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 115, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 114, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([13, 49, 32],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([16, 40, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([192, 512],"float32"), )
paddle.Tensor.mean(Tensor([16384, 5],"float32"), )
paddle.Tensor.mean(Tensor([5000, 2],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([64, 25, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 6, 4096],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 36, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 148, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 171, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 302, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 1, 512, 4, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([64, 32, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([41, 2, 512],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 30, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 14, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 211, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 31, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 16, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 200, 80],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 256, 10, 16],"float32"), )
paddle.Tensor.mean(Tensor([4, 272, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 30, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 192, 8, 8],"float32"), -2, )
paddle.Tensor.mean(Tensor([1, 13125, 1],"float32"), )
paddle.Tensor.mean(Tensor([64, 18, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([10000, 2, 3],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([2, 304, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 300, 80],"float32"), 1, )
paddle.Tensor.mean(Tensor([64, 21, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([8, 47, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([10201, 1],"float32"), )
paddle.Tensor.mean(Tensor([4, 172, 128],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 147, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 346, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([13125, 1],"float32"), )
paddle.Tensor.mean(Tensor([8, 54, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([5, 10, 768],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 2541, 4],"float32"), )
paddle.Tensor.mean(Tensor([6380, 4],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 23, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 384, 11, 11],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([36, 2304],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 12, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 49],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2577, 4, 25],"float32"), axis=1, )
paddle.Tensor.min(Tensor([12240, 4, 10],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4789, 4, 21],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 4, 10285, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3060, 4, 29],"float32"), axis=1, )
paddle.Tensor.min(Tensor([9261, 4, 7],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 18, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 9, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 9, 8500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 3, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 17, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 2, 6885, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 13, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 75600, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([9180, 4, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 5, 24276, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 3, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4, 2, 4789, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 29, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2125, 4, 38],"float32"), axis=1, )
paddle.Tensor.min(Tensor([19125, 4, 11],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 7, 5440, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 37, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 6, 6804, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 40, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 19, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 53],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1726, 4, 17],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 7, 9382, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 20, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 23, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 9, 11109, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 9, 8400, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([9180, 4, 6],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4165, 4, 11],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 39, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([19125, 4, 12],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 3, 10285, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 2, 65856, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 3, 56784, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 7, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4789, 4, 48],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 8, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 24, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 35, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 18, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 10, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([19125, 4, 9],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4789, 4, 15],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 7, 8500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 20, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4789, 4, 11],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 9, 7681, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1726, 4, 36],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 4, 10285, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2577, 4, 40],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 4, 8],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 25, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2577, 4, 44],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 29, 4116, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2577, 4, 32],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 14, 5440, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([11050, 4, 8],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 77],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 4, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3060, 4, 34],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 47, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 34, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4165, 4, 19],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 4, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 4, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 3, 9382, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([10105, 4, 6],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 28, 4116, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 41, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 10, 10164, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 9, 5440, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 10, 9382, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2577, 4, 24],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2577, 4, 30],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 44, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 18, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 10, 6150, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([10285, 4, 9],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 8, 8500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 34, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 4, 7681, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 40656, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4165, 4, 10],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 19, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 9],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 10, 8400, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 1, 8400, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([11050, 4, 13],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 5, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([9382, 4, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 12, 7681, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4, 3, 6804, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 12, 10164, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 48, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([34000, 4, 2],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1360, 4, 33],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 32, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 17, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 3, 30324, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 9, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 12, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 19, 4789, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 2, 56784, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 7, 27216, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 3, 70644, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 8, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 5, 6885, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 10, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 22, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 11, 11109, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([27540, 4, 9],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10285, 4, 11],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1360, 4, 38],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 9, 12096, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 8, 7681, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3060, 4, 19],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 7, 4789, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 4, 7681, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3060, 4, 27],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 2, 9382, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1726, 4, 30],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 6, 8400, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 31],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4165, 4, 55],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3598, 4, 40],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3598, 4, 11],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 2, 24276, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([10285, 4, 4],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 5, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 37],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 6, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 5, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([13125, 4, 4],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4, 2, 4165, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2577, 4, 52],"float32"), axis=1, )
paddle.Tensor.min(Tensor([16, 6, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4165, 4, 43],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4789, 4, 33],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4165, 4, 42],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4165, 4, 9],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 15, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4789, 4, 19],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4165, 4, 39],"float32"), axis=1, )
paddle.Tensor.min(Tensor([12240, 4, 18],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 22, 4116, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 14, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 6, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([34000, 4, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1726, 4, 33],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 4, 9],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 14, 7681, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 13, 7581, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 5, 7681, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2125, 4, 15],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 8, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([9382, 4, 3],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 6, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1726, 4, 31],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 4, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4789, 4, 32],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 1, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 9, 5440, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4789, 4, 18],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4165, 4, 8],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 19, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([19125, 4, 7],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 13, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([24565, 4, 3],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 9, 9382, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 10, 8500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([9261, 4, 3],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3598, 4, 42],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 14, 6150, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 22, 4165, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 4, 27216, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4165, 4, 14],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 4, 4789, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 18, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 4, 52500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4, 2, 10164, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 4, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 2, 6804, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4165, 4, 18],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 24],"float32"), axis=1, )
paddle.Tensor.min(Tensor([6804, 4, 7],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 29],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 1, 7681, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1726, 4, 15],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4, 22, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 13, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2577, 4, 29],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 13, 3598, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 29],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4725, 4, 10],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3060, 4, 38],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 6, 5440, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 50],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 24, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 14],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 10, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 8, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4789, 4, 40],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 7, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 2, 61236, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 2, 11109, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4789, 4, 7],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 45],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2577, 4, 21],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4165, 4, 21],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 20, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1360, 4, 25],"float32"), axis=1, )
paddle.Tensor.min(Tensor([12240, 4, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 2, 10285, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 30, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([10105, 4, 11],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 8, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4789, 4, 8],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 32],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 22, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4165, 4, 22],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3060, 4, 54],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 21, 4116, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 33],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 5, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 16, 3598, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 36, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([6885, 4, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 8, 4165, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 7, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([34000, 4, 6],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3598, 4, 47],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10105, 4, 3],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1726, 4, 22],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 8, 8400, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([10285, 4, 23],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 3, 10285, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 12, 4116, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4789, 4, 22],"float32"), axis=1, )
paddle.Tensor.min(Tensor([9180, 4, 11],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 16, 6804, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2577, 4, 36],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 8, 6804, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 2, 37044, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 40, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 12, 10285, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 7, 21504, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 15, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 5, 9382, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 13],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 29, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 2, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 9, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 41, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([10105, 4, 18],"float32"), axis=1, )
paddle.Tensor.min(Tensor([11050, 4, 18],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3060, 4, 53],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3598, 4, 10],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3598, 4, 41],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 2, 52500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 18, 6804, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 7, 4116, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4, 5, 4789, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 3, 8500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 7, 10164, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 8, 3598, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([11050, 4, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2577, 4, 17],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 1, 56784, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1360, 4, 34],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 7, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 15, 7681, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2577, 4, 33],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 16, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 11, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 6, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([24565, 4, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([10285, 4, 21],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 15, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 16, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 6, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([11050, 4, 9],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 11, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3060, 4, 43],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2577, 4, 27],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 3, 12096, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3060, 4, 22],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 15, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1726, 4, 29],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 6, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 10, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2125, 4, 23],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 5, 21504, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4, 3, 3598, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4725, 4, 9],"float32"), axis=1, )
paddle.Tensor.min(Tensor([19125, 4, 8],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 8, 10164, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1360, 4, 28],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 27],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 37, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 57, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3060, 4, 32],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 7, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 31, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 4, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4165, 4, 12],"float32"), axis=1, )
paddle.Tensor.min(Tensor([13125, 4, 10],"float32"), axis=1, )
paddle.Tensor.min(Tensor([5376, 4, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 26],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4165, 4, 16],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2577, 4, 34],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 6, 24276, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 2, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 23, 4116, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3060, 4, 20],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 9, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 4, 33600, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 29, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 22, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4165, 4, 33],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 11, 4789, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 25],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 21],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 3, 48384, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4789, 4, 25],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4165, 4, 23],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2577, 4, 28],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 2, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 16, 3598, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 12, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 2, 6804, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([24565, 4, 4],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 26, 3024, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 6, 6885, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([27540, 4, 4],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 34, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 15, 7581, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4, 10, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 30],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 3, 10164, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 5, 6150, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 8, 6885, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 19, 5440, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 16, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([11050, 4, 4],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 14, 4789, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 21, 4165, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 8, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 11, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 8, 4165, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([9180, 4, 19],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 4, 48384, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 3, 11109, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 10, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 2, 12096, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 37044, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 5, 4116, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([9180, 4, 13],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3598, 4, 24],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 1, 52500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 3, 52500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 3, 9382, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([3598, 4, 17],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 19],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 20],"float32"), axis=1, )
paddle.Tensor.min(Tensor([3060, 4, 45],"float32"), axis=1, )
paddle.Tensor.min(Tensor([4165, 4, 31],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 34],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 14, 6150, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 12, 7581, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4789, 4, 24],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2577, 4, 22],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1360, 4, 35],"float32"), axis=1, )
paddle.Tensor.min(Tensor([16660, 4, 4],"float32"), axis=1, )
paddle.Tensor.min(Tensor([12240, 4, 19],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2125, 4, 31],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 7, 4789, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4165, 4, 41],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 3, 21504, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([13125, 4, 5],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 5, 44436, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([24565, 4, 2],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 8, 6150, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 4, 5440, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([27540, 4, 6],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 10, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([24565, 4, 6],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 2, 21504, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4165, 4, 29],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 9, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 6, 37044, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([9180, 4, 10],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 5, 3598, 4],"float32"), axis=-1, )
paddle.Tensor.multiply(Tensor([160, 3072],"float32"), Tensor([160, 1],"float32"), )
paddle.Tensor.multiply(Tensor([160, 3072],"float16"), Tensor([160, 1],"float32"), )
paddle.Tensor.multiply(Tensor([512, 768],"float32"), Tensor([512, 1],"float32"), )
paddle.Tensor.multiply(Tensor([512, 768],"float16"), Tensor([512, 1],"float32"), )
paddle.Tensor.multiply(Tensor([66244],"float32"), Tensor([],"float32"), )
paddle.Tensor.multiply(Tensor([16, 768],"float32"), Tensor([16, 1],"float32"), )
paddle.Tensor.multiply(Tensor([23619],"float32"), Tensor([],"float32"), )
paddle.Tensor.multiply(Tensor([16, 3072],"float32"), Tensor([16, 1],"float32"), )
paddle.Tensor.multiply(Tensor([17157],"float32"), Tensor([],"float32"), )
paddle.Tensor.multiply(Tensor([7953],"float32"), Tensor([],"float32"), )
paddle.Tensor.multiply(Tensor([1861],"float32"), Tensor([],"float32"), )
paddle.Tensor.neg(Tensor([23619],"float32"), )
paddle.Tensor.neg(Tensor([17157],"float32"), )
paddle.Tensor.neg(Tensor([66244],"float32"), )
paddle.Tensor.neg(Tensor([1861],"float32"), )
paddle.Tensor.neg(Tensor([7953],"float32"), )
paddle.Tensor.nonzero(Tensor([188160],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 4],"bool"), )
paddle.Tensor.nonzero(Tensor([121600],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 9],"bool"), )
paddle.Tensor.nonzero(Tensor([177408],"bool"), )
paddle.Tensor.nonzero(Tensor([175104],"bool"), )
paddle.Tensor.nonzero(Tensor([178432],"bool"), )
paddle.Tensor.nonzero(Tensor([165376],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 2],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 7],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 8],"bool"), )
paddle.Tensor.nonzero(Tensor([194176],"bool"), )
paddle.Tensor.nonzero(Tensor([184832],"bool"), )
paddle.Tensor.nonzero(Tensor([139776],"bool"), )
paddle.Tensor.nonzero(Tensor([204800],"bool"), )
paddle.Tensor.nonzero(Tensor([225792],"bool"), )
paddle.Tensor.nonzero(Tensor([198912],"bool"), )
paddle.Tensor.nonzero(Tensor([156672],"bool"), )
paddle.Tensor.nonzero(Tensor([193536],"bool"), )
paddle.Tensor.nonzero(Tensor([150784],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 14],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 13],"bool"), )
paddle.Tensor.nonzero(Tensor([183680],"bool"), )
paddle.Tensor.nonzero(Tensor([161024],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 3],"bool"), )
paddle.Tensor.nonzero(Tensor([189696],"bool"), )
paddle.Tensor.nonzero(Tensor([155648],"bool"), )
paddle.Tensor.nonzero(Tensor([128000],"bool"), )
paddle.Tensor.nonzero(Tensor([220416],"bool"), )
paddle.Tensor.nonzero(Tensor([209664],"bool"), )
paddle.Tensor.nonzero(Tensor([199424],"bool"), )
paddle.Tensor.nonzero(Tensor([179968],"bool"), )
paddle.Tensor.nonzero(Tensor([155904],"bool"), )
paddle.Tensor.nonzero(Tensor([160512],"bool"), )
paddle.Tensor.nonzero(Tensor([170240],"bool"), )
paddle.Tensor.nonzero(Tensor([134400],"bool"), )
paddle.Tensor.nonzero(Tensor([182784],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 10],"bool"), )
paddle.Tensor.nonzero(Tensor([169728],"bool"), )
paddle.Tensor.nonzero(Tensor([174720],"bool"), )
paddle.Tensor.nonzero(Tensor([136448],"bool"), )
paddle.Tensor.nonzero(Tensor([141056],"bool"), )
paddle.Tensor.nonzero(Tensor([172032],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 6],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 5],"bool"), )
paddle.Tensor.nonzero(Tensor([131328],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 11],"bool"), )
paddle.Tensor.nonzero(Tensor([194560],"bool"), )
paddle.Tensor.nonzero(Tensor([215040],"bool"), )
paddle.Tensor.nonzero(Tensor([204288],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 12],"bool"), )
paddle.Tensor.nonzero(Tensor([174080],"bool"), )
paddle.Tensor.nonzero(Tensor([184320],"bool"), )
paddle.Tensor.nonzero(Tensor([134784],"bool"), )
paddle.Tensor.nonzero(Tensor([126464],"bool"), )
paddle.Tensor.nonzero(Tensor([124800],"bool"), )
paddle.Tensor.nonzero(Tensor([204672],"bool"), )
paddle.Tensor.nonzero(Tensor([189440],"bool"), )
paddle.Tensor.nonzero(Tensor([10752],"bool"), )
paddle.Tensor.nonzero(Tensor([12432],"bool"), )
paddle.Tensor.nonzero(Tensor([11520],"bool"), )
paddle.Tensor.nonzero(Tensor([37696],"bool"), )
paddle.Tensor.nonzero(Tensor([31616],"bool"), )
paddle.Tensor.nonzero(Tensor([56448],"bool"), )
paddle.Tensor.nonzero(Tensor([55104],"bool"), )
paddle.Tensor.nonzero(Tensor([49728],"bool"), )
paddle.Tensor.nonzero(Tensor([12792],"bool"), )
paddle.Tensor.nonzero(Tensor([42560],"bool"), )
paddle.Tensor.nonzero(Tensor([10032],"bool"), )
paddle.Tensor.nonzero(Tensor([46208],"bool"), )
paddle.Tensor.nonzero(Tensor([10336],"bool"), )
paddle.Tensor.nonzero(Tensor([11152],"bool"), )
paddle.Tensor.nonzero(Tensor([11840],"bool"), )
paddle.Tensor.nonzero(Tensor([12768],"bool"), )
paddle.Tensor.nonzero(Tensor([39168],"bool"), )
paddle.Tensor.nonzero(Tensor([51168],"bool"), )
paddle.Tensor.nonzero(Tensor([43008],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 1],"bool"), )
paddle.Tensor.nonzero(Tensor([33696],"bool"), )
paddle.Tensor.nonzero(Tensor([13104],"bool"), )
paddle.Tensor.nonzero(Tensor([30400],"bool"), )
paddle.Tensor.nonzero(Tensor([52640],"bool"), )
paddle.Tensor.nonzero(Tensor([12800],"bool"), )
paddle.Tensor.nonzero(Tensor([12096],"bool"), )
paddle.Tensor.nonzero(Tensor([48384],"bool"), )
paddle.Tensor.nonzero(Tensor([43520],"bool"), )
paddle.Tensor.nonzero(Tensor([51200],"bool"), )
paddle.Tensor.nonzero(Tensor([38912],"bool"), )
paddle.Tensor.nonzero(Tensor([10064],"bool"), )
paddle.Tensor.nonzero(Tensor([13440],"bool"), )
paddle.Tensor.nonzero(Tensor([12160],"bool"), )
paddle.Tensor.nonzero(Tensor([47424],"bool"), )
paddle.Tensor.nonzero(Tensor([34112],"bool"), )
paddle.Tensor.nonzero(Tensor([10920],"bool"), )
paddle.Tensor.nonzero(Tensor([43776],"bool"), )
paddle.Tensor.nonzero(Tensor([47040],"bool"), )
paddle.Tensor.nonzero(Tensor([10944],"bool"), )
paddle.Tensor.nonzero(Tensor([40128],"bool"), )
paddle.Tensor.nonzero(Tensor([13776],"bool"), )
paddle.Tensor.nonzero(Tensor([47360],"bool"), )
paddle.Tensor.nonzero(Tensor([11760],"bool"), )
paddle.Tensor.nonzero(Tensor([11424],"bool"), )
paddle.Tensor.nonzero(Tensor([53760],"bool"), )
paddle.Tensor.nonzero(Tensor([36858],"bool"), )
paddle.Tensor.nonzero(Tensor([45696],"bool"), )
paddle.Tensor.nonzero(Tensor([51072],"bool"), )
paddle.Tensor.nonzero(Tensor([43680],"bool"), )
paddle.Tensor.nonzero(Tensor([12136],"bool"), )
paddle.Tensor.nonzero(Tensor([35264],"bool"), )
paddle.Tensor.nonzero(Tensor([48640],"bool"), )
paddle.Tensor.nonzero(Tensor([44608],"bool"), )
paddle.Tensor.nonzero(Tensor([32832],"bool"), )
paddle.Tensor.nonzero(Tensor([45920],"bool"), )
paddle.Tensor.nonzero(Tensor([41344],"bool"), )
paddle.Tensor.nonzero(Tensor([44352],"bool"), )
paddle.Tensor.nonzero(Tensor([14112],"bool"), )
paddle.Tensor.nonzero(Tensor([11088],"bool"), )
paddle.Tensor.nonzero(Tensor([32000],"bool"), )
paddle.Tensor.nonzero(Tensor([11552],"bool"), )
paddle.Tensor.nonzero(Tensor([12464],"bool"), )
paddle.Tensor.nonzero(Tensor([48544],"bool"), )
paddle.Tensor.nonzero(Tensor([11248],"bool"), )
paddle.Tensor.nonzero(Tensor([40256],"bool"), )
paddle.Tensor.nonzero(Tensor([11856],"bool"), )
paddle.Tensor.nonzero(Tensor([10608],"bool"), )
paddle.Tensor.nonzero(Tensor([31200],"bool"), )
paddle.Tensor.nonzero(Tensor([38402],"bool"), )
paddle.Tensor.nonzero(Tensor([11480],"bool"), )
paddle.Tensor.nonzero(Tensor([49856],"bool"), )
paddle.Tensor.nonzero(Tensor([10880],"bool"), )
paddle.Tensor.nonzero(Tensor([42432],"bool"), )
paddle.Tensor.nonzero(Tensor([44992],"bool"), )
paddle.Tensor.nonzero(Tensor([46080],"bool"), )
paddle.Tensor.nonzero(Tensor([38976],"bool"), )
paddle.Tensor.nonzero(Tensor([10640],"bool"), )
paddle.Tensor.nonzero(Tensor([33600],"bool"), )
paddle.Tensor.nonzero(Tensor([34944],"bool"), )
paddle.Tensor.nonzero(Tensor([52416],"bool"), )
paddle.Tensor.nonzero(Tensor([7904],"bool"), )
paddle.Tensor.nonzero(Tensor([1976],"bool"), )
paddle.Tensor.nonzero(Tensor([3024],"bool"), )
paddle.Tensor.nonzero(Tensor([3200],"bool"), )
paddle.Tensor.nonzero(Tensor([2080],"bool"), )
paddle.Tensor.nonzero(Tensor([2520],"bool"), )
paddle.Tensor.nonzero(Tensor([2888],"bool"), )
paddle.Tensor.nonzero(Tensor([7600],"bool"), )
paddle.Tensor.nonzero(Tensor([8000],"bool"), )
paddle.Tensor.nonzero(Tensor([2184],"bool"), )
paddle.Tensor.nonzero(Tensor([9728],"bool"), )
paddle.Tensor.nonzero(Tensor([2720],"bool"), )
paddle.Tensor.nonzero(Tensor([3192],"bool"), )
paddle.Tensor.nonzero(Tensor([9792],"bool"), )
paddle.Tensor.nonzero(Tensor([2432],"bool"), )
paddle.Tensor.nonzero(Tensor([8400],"bool"), )
paddle.Tensor.nonzero(Tensor([2128],"bool"), )
paddle.Tensor.nonzero(Tensor([8736],"bool"), )
paddle.Tensor.nonzero(Tensor([8424],"bool"), )
paddle.Tensor.nonzero(Tensor([3528],"bool"), )
paddle.Tensor.nonzero(Tensor([3040],"bool"), )
paddle.Tensor.nonzero(Tensor([9424],"bool"), )
paddle.Tensor.nonzero(Tensor([2880],"bool"), )
paddle.Tensor.nonzero(Tensor([7800],"bool"), )
paddle.Tensor.nonzero(Tensor([9744],"bool"), )
paddle.Tensor.nonzero(Tensor([2280],"bool"), )
paddle.Tensor.nonzero(Tensor([8580],"bool"), )
paddle.Tensor.nonzero(Tensor([3360],"bool"), )
paddle.Tensor.nonzero(Tensor([2240],"bool"), )
paddle.Tensor.nonzero(Tensor([2448],"bool"), )
paddle.Tensor.nonzero(Tensor([2856],"bool"), )
paddle.Tensor.nonzero(Tensor([8208],"bool"), )
paddle.Tensor.nonzero(Tensor([2688],"bool"), )
paddle.Tensor.nonzero(Tensor([6400],"bool"), )
paddle.Tensor.nonzero(Tensor([8816],"bool"), )
paddle.Tensor.nonzero(Tensor([8528],"bool"), )
paddle.Tensor.nonzero(Tensor([2736],"bool"), )
paddle.Tensor.nonzero(Tensor([2584],"bool"), )
paddle.Tensor.norm(Tensor([12, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([216, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 3060, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([26, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([22, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([64, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([64, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([72, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([184, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([20, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([28, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([136, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([128, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([72, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([160, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([96, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([20, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([88, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([14, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([64, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([20, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([7, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([18, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([80, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([12, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([13, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([64, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([168, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([14, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([164, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([28, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([20, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([18, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([96, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([88, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([9, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([22, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([22, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([38, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([12, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([80, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([120, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([64, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([152, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8192, 64],"float32"), )
paddle.Tensor.norm(Tensor([10, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([26, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([64, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([14, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([192, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1280, 320],"float32"), )
paddle.Tensor.norm(Tensor([120, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([14, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([12, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([92, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([9, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([30, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([512, 522],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([40, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([60, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([144, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([38, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([14, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([80, 3060, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([26, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([92, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([120, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([80, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([38, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([152, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([120, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([11, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([50, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([12, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([88, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([6, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([512, 362],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([88, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([72, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([38, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([22, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([152, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([144, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([36, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([144, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([80, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([12, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([9, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([512, 512],"float32"), p=2, axis=0, keepdim=True, )
paddle.Tensor.norm(Tensor([512, 207],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([46, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([64, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([224, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([20, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([160, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([28, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([64, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([200, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([96, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([72, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([208, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([20, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([46, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([72, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([30, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([192, 896],"float32"), )
paddle.Tensor.norm(Tensor([42, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([80, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([18, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([72, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([88, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([28, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([60, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 2125, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([28, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([136, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([38, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([96, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([50, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([128, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([12, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([12, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([72, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([148, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([72, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([50, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([136, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([160, 1280],"float32"), )
paddle.Tensor.norm(Tensor([18, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([184, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([28, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([18, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([176, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([38, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([26, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([28, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([14, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([120, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([26, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([64, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([116, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([7, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([36, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([128, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([256, 1280],"float32"), )
paddle.Tensor.norm(Tensor([104, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([80, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([128, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([60, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([6, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([18, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([88, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([9, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([44, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([72, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([232, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([76, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([192, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([96, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([20, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([28, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([28, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([176, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([6, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([140, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([26, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([136, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([80, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([7168, 64],"float32"), )
paddle.Tensor.norm(Tensor([64, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 2125, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([14, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([512, 471],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([8, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([80, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([96, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([24, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([88, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([20, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([168, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 2100, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([140, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([30, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([20, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([40, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([14, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([6, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([6, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([16, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 8580, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 36858, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([12, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([3, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([6, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([2, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 3060, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([5, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 2577, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([5, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([7, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([2, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([512, 102],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([3, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([10, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([12, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([6, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([2, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([512, 63],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([256, 258],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([8, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([13, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 7168],"float32"), )
paddle.Tensor.norm(Tensor([8, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([9, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([2, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([128, 130],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([4, 3060, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([32, 896],"float32"), )
paddle.Tensor.norm(Tensor([4, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 2577, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([512, 100],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([4, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([6, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([12, 2577, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([6, 7681, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([5, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([2, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 4789, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 6400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 38402, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 8500, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([7, 6885, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([3, 5440, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([512, 34],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([10, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([4, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 4165, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([128, 22],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([1, 3598, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([512, 9],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([512, 3],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([512, 2],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([256, 7],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([3, 512],"float32"), p=2, axis=0, keepdim=True, )
paddle.Tensor.not_equal(Tensor([128, 128],"int64"), Tensor([128, 128],"int64"), )
paddle.Tensor.pow(Tensor([2712, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1433, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6446, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10470, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 69, 6804],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([7805, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7950, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1954, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10976, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11704, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5974, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3033, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11469, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6501, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1253, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10195, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3376, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4952, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 44, 8400],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([1, 5, 44436],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([5612, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 18, 37044],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([8351, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3560, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4438, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4948, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6554, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8013, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11240, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6454, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 9, 6804],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2111, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 28, 4116],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([7180, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10518, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10880, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([12130, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6604, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3016, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 110, 3549],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2, 41, 11109],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([4443, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 35, 7581],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([8435, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7381, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7080, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1525, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([243474, 1],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8300, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9696, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9780, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 27, 11109],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([8449, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([12465, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10395, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6711, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3795, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([25143, 11],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 46, 4116],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([9356, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 30, 3024],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2210, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 4, 52500],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([7401, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9039, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8112, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1476, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4258, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6804, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6088, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6807, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 54, 6804],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([3304, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5052, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 14, 33600],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([7922, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([20570, 11],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7740, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 33, 5376],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([5049, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7449, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6310, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2858, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 87, 2541],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([11792, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2454, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 5, 52500],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([8796, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7464, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 93, 2100],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([11164, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([12288, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6171, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7135, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 58, 3024],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([9975, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5700, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6836, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6567, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3714, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7182, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11795, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 6, 52500],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([3242, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2152, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 27, 3024],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([8992, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8605, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4175, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5320, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3578, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9492, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7392, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 50, 9261],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2280, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9100, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2251, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 12, 6069],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([4260, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8799, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1812, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4250, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 12, 75600],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([9320, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1754, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 62, 2100],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([3830, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11804, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5047, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 91, 2100],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([3236, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3966, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 45, 2100],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([2, 21, 2541],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2048, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11400, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11070, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4104, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 8, 21504],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2212, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 38, 8400],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([2, 45, 2100],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2988, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3598, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8062, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1327, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1318, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 47, 8400],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([3556, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5290, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 11, 70644],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([1590, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 23, 4116],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2, 43, 6804],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([7088, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3116, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 5, 21504],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2, 23, 11109],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([6152, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6776, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6786, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7484, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1967, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1605, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9465, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2816, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 13, 4116],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([8, 4116, 4],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1602, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6902, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 10, 6804],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([6214, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6522, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3533, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11956, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7352, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6325, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6064, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3871, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11267, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6900, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 29, 4116],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([5658, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1855, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2146, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 33, 6069],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([8654, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2027, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1388, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 31, 21504],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([4082, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6530, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6792, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5132, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6270, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10620, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6462, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 82, 3024],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([7953, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 32, 3549],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([10316, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10653, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7595, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2430, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1667, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10675, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 20, 37044],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([7644, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3755, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11888, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7956, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4598, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 87, 3024],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([5495, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3466, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5884, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5296, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 38, 3549],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([2644, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4067, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5985, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3146, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2711, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5144, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8784, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4392, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4398, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9960, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7702, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([12341, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6426, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1334, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10905, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10374, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4106, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1764, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8433, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5793, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6984, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 75, 2541],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([7656, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 24, 6069],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([6909, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 14, 27216],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([7834, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11000, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4170, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2672, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10556, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3534, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4543, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7005, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8283, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8980, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7485, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 77, 4116],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([5266, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7638, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8682, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2032, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2829, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11912, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4446, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 18, 10164],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([1653, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5705, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7068, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5725, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10152, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2471, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4779, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 25, 11109],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([11241, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2216, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 37, 2541],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([5624, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 33, 3549],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([2682, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 47, 2541],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([1921, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2386, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9984, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3225, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9894, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4743, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6843, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3616, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1742, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 39, 4725],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([11439, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11772, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10149, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 31, 9261],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2, 18, 8400],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2092, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9244, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5766, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 66, 4725],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2, 113, 2541],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2, 51, 6069],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([11352, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5630, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5038, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3056, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3807, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7548, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5160, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([43312, 11],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([70664, 11],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9018, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7800, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2733, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1927, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3441, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5130, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3219, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5853, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 31, 2100],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([2, 10, 11109],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([6759, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2883, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4665, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10348, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([12176, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8372, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9066, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2602, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9095, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2011, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 25, 6804],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([2367, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 40, 3549],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([1503, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8922, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3077, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7986, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4018, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7100, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8393, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 9, 30324],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([12402, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8750, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5589, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1950, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 44, 2541],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([1301, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4756, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6102, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2387, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2836, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4341, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8617, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2312, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3876, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 60, 3024],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([1, 9, 33600],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([5831, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10020, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2254, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([6655, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7036, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([3189, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8247, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8687, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1760, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4826, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8612, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7338, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4524, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 15, 8400],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([6640, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5880, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10128, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 19, 44436],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([9810, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([7408, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9352, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1290, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4110, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 34, 6804],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([1, 61236, 10],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 13, 65856],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([2, 78, 2541],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([4986, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4340, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4864, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2305, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8403, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1317, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8676, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([5907, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([8, 6804, 4],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4240, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([12396, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([12030, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([9327, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11952, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([4775, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([10779, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([11270, 80],"float32"), 2.0, )
paddle.Tensor.prod(Tensor([3, 66240, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 15, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 14, 33600, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 79695, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 12, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 49680, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([3, 71685, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([12, 4800, 1, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 20, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 17, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 59295, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([4, 75555, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 30, 6150, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 13, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 46, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 67200, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 9, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 1, 9261, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([40, 12096, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([29, 1942, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 40, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 182391, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 9, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([3, 90720, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 12, 37044, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 45, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 22, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 55845, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 63, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 13, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 26, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 11, 4789, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 245823, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 10, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([12, 8500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 75615, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 15, 7681, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([10, 9382, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 10, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([9, 49680, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 32, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([3, 61065, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 972, 50, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 6, 24276, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([6, 67200, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 7, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([10, 8500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([128, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 44250, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 193368, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 27, 6804, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([6, 51750, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 9, 7681, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 37, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 3, 9382, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 23, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 74250, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 9, 40656, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([64, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 54, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 15, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 1, 9382, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 9, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 198249, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([16, 9, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([64, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 35, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 56250, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 300, 50, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 507, 50, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 46230, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([6, 78120, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 72960, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([96, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([16, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([3, 72270, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 26, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 41, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 20, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([168, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([16, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 261681, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 24, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 11, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([6, 57000, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([4, 54270, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 13, 27216, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 63135, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 4, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 43560, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 16, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 588, 50, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 171888, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 70, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 9, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 7, 24276, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 35, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([20, 6150, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 211038, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([116, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([40, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 236334, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([48, 2125, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([32, 11109, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 26, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 13, 3598, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 13, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 239382, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 1728, 50, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([148, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([88, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 340686, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([3, 70290, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 220992, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 20, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 46, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 34, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 8, 52500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 279300, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 3, 70644, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([9, 51840, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 37, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 15, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([32, 2125, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 14, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([80, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 14, 27216, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 24, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([20, 6885, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 50, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 7, 44436, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 9, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 4, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([128, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 32, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 20, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 67200, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 4, 12096, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([56, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 229152, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 26, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 14, 5440, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([29, 1935, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([40, 8500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([50, 8500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 10, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 16, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 19, 9261, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 5, 12096, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 260865, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 9, 6804, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 80, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 19, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 54600, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([3, 52920, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 53760, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 18, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 9, 21504, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([55, 1055, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 7, 6885, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 73500, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 2, 27216, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([3, 68340, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 47, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([3, 79935, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 6, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 386694, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 6, 5440, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 60390, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([88, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([96, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 4, 9261, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 83220, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 242991, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 6, 11109, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 75075, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 11, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([18, 8500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([16, 1, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 65, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 66, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([56, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 57, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([6, 56250, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 219453, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 76590, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 398487, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 24, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 108, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 16, 11109, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 75615, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 45, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 6, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([7, 7681, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 35, 6804, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 2, 7681, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 16, 3598, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 239382, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([72, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 1, 11109, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 52560, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([3, 85320, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 60, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 30, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 268560, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 243474, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 28, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 6, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 7, 5440, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([7, 57000, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([3, 75375, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 8, 6885, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 53760, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([64, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 320739, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 53460, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([16, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([49, 1049, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 5, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([3, 51030, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 82, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 58, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([24, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 62400, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([5, 63000, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([4, 59520, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 61440, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 4332, 50, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 10, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 29, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 16, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 8, 4789, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 12, 6804, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([38, 8500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([3, 74520, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([10, 46080, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 5, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 22, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 223554, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([88, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([26, 3598, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 10285, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 91980, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 10, 48384, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 11, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 4, 37044, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 10, 10285, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 299250, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 6, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 49, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 588, 50, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 28, 7681, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 200022, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 13, 6150, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 28, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 12, 27216, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 6, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 233244, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([6, 59250, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 76800, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 18, 6804, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 43560, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 58, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 45, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([26, 2026, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 63360, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 13, 11109, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([60, 6804, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 70080, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([28, 6885, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 49, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 19, 7681, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 6, 56784, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 14, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 59250, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([3, 76800, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 17, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 267030, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([40, 9261, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([6, 8500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 11, 10285, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([16, 12, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 26, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 50, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([48, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 51, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([10, 48000, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 61305, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 16, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 46080, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 48, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 388740, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 262194, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 17, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 12, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 69300, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 301302, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([48, 9261, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([30, 6150, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([7, 65280, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 30, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([6, 68310, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 9, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([7, 59520, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([28, 10285, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 363, 50, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 69300, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 11, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([3, 84420, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 2, 52500, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 56730, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 31, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 16, 6804, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 77625, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([48, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([22, 4165, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 14, 6150, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 61500, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 27, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 220992, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 4, 56784, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 67890, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 62, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 9, 10285, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 4, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 20, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 52920, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 25, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 176490, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 79695, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([3, 78120, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 88, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 29, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([80, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([80, 3060, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 217413, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 27, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 77220, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 63000, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([64, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([16, 6150, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 229152, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 5, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([7, 70080, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 77, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 41, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 45, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 67890, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 26, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([48, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 31, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 47520, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 9, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([7, 58800, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 22, 11109, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 56640, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([9, 54750, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 27, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([3, 59520, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 57285, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([4, 26, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 23, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 60480, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([64, 1, 2577, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 4, 61236, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 29, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 9, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 86640, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 47, 3024, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 83220, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([4, 77490, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 5, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([22, 5440, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 10, 7681, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 18, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([18, 7681, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([14, 4165, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 69750, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 5, 21504, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 34, 4725, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 24, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 83070, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 56640, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 247086, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([72, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 3, 9261, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 1, 6804, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 11, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 21, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 62700, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([5, 51840, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([72, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 53, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 68310, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([26, 4165, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 3, 12096, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 13, 2541, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 21, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([7, 51750, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 10, 3024, 2],"float32"), -1, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 5],"float64"), q=0.75, axis=3, keepdim=True, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 5],"float64"), q=0.75, axis=5, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 5],"float64"), q=0.5, )
paddle.Tensor.real(Tensor([32, 15, 8, 8, 32],"complex64"), )
paddle.Tensor.real(Tensor([16, 96, 16, 9],"complex64"), )
paddle.Tensor.real(Tensor([16, 64, 16, 9],"complex64"), )
paddle.Tensor.real(Tensor([100000],"complex128"), )
paddle.Tensor.real(Tensor([1000, 784],"complex64"), )
paddle.Tensor.real(Tensor([100000, 4],"complex128"), )
paddle.Tensor.real(Tensor([16, 32, 8, 5],"complex64"), )
paddle.Tensor.real(Tensor([16, 128, 8, 5],"complex64"), )
paddle.Tensor.real(Tensor([16, 64, 8, 5],"complex64"), )
paddle.Tensor.real(Tensor([16, 32, 16, 9],"complex64"), )
paddle.Tensor.real(Tensor([4, 32, 32, 16],"complex64"), )
paddle.Tensor.real(Tensor([20, 64, 64],"complex64"), )
paddle.Tensor.real(Tensor([13, 7, 32],"complex64"), )
paddle.Tensor.real(Tensor([39, 7, 32],"complex64"), )
paddle.Tensor.repeat_interleave(Tensor([1, 3, 64, 128],"float64"), 256, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([1, 1, 64, 128],"float64"), 3, axis=1, )
paddle.Tensor.reshape(Tensor([6, 175, 8, 64],"float32"), list[6,175,512,], )
paddle.Tensor.reshape(Tensor([687, 15, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4259, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3605, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1332, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1515, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1464, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 37, 42, 68],"float16"), list[-1,68,], )
paddle.Tensor.reshape(Tensor([2, 91, 768],"float16"), shape=list[0,0,8,96,], )
paddle.Tensor.reshape(Tensor([6, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1318, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3685, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([6, 117, 8, 64],"float32"), list[6,117,512,], )
paddle.Tensor.reshape(Tensor([4155, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3342, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4494, 39],"int32"), list[-1,], )
paddle.Tensor.reshape(Tensor([716, 9, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([792, 10, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([526, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1351, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3187, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([278, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4, 150, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 63, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([663, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4564, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([627, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1555, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([979, 8, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1353, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2119, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2469, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2465, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([390, 14, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([32, 12, 12, 32],"float32"), list[32,-1,32,], )
paddle.Tensor.reshape(Tensor([3183, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 57, 8, 64],"float32"), list[8,57,512,], )
paddle.Tensor.reshape(Tensor([1818, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3042, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1042, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1, 261, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([982, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2079, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1583, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3213, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([72, 7581],"float32"), list[8,-1,7581,], )
paddle.Tensor.reshape(Tensor([1209, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2409, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2149, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([6, 72, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1339, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2, 9382, 11],"float32"), list[-1,11,], )
paddle.Tensor.reshape(Tensor([3116, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4233, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1314, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1744, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1982, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([10, 92, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1599, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([32, 32, 500],"float32"), list[4,256,500,], )
paddle.Tensor.reshape(Tensor([1880, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([10, 116, 8, 64],"float32"), list[10,116,512,], )
paddle.Tensor.reshape(Tensor([4304, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2172, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1769, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2, 148, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2557, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([887, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 21280, 4],"float32"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([768, 4, 4, 32],"float32"), list[-1,16,32,], )
paddle.Tensor.reshape(Tensor([807, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1820, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([13, 1024, 24],"float32"), list[13,-1,2,12,], )
paddle.Tensor.reshape(Tensor([2648, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([478, 18, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1087, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 202, 8, 64],"float32"), list[8,202,512,], )
paddle.Tensor.reshape(Tensor([452, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([766, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3499, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([337, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1373, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1373, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([647, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([412, 9, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([641, 10, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4762, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1067, 8, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1363, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([621, 12, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3706, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2015, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([474, 19, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([830, 11, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4, 140, 8, 64],"float32"), list[4,140,512,], )
paddle.Tensor.reshape(Tensor([2764, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([335, 14, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1652, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1038, 11, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1597, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3927, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([30324, 4],"float32"), list[1,30324,4,], )
paddle.Tensor.reshape(Tensor([239, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3045, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2197, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3318, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([49920, 4],"float32"), list[24,-1,4,], )
paddle.Tensor.reshape(Tensor([1550, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([96, 10164],"float32"), list[4,-1,10164,], )
paddle.Tensor.reshape(Tensor([8, 27552],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([10, 24, 8, 64],"float32"), list[10,24,512,], )
paddle.Tensor.reshape(Tensor([8, 26, 38, 80],"float16"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([368, 2100],"float32"), list[16,-1,2100,], )
paddle.Tensor.reshape(Tensor([90, 2304],"int64"), list[-1,], )
paddle.Tensor.reshape(Tensor([3396, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2, 110, 8, 96],"float16"), list[2,110,768,], )
paddle.Tensor.reshape(Tensor([3833, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2459, 64],"int32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1998, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1719, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1200, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([979, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 33, 42, 80],"float16"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([6, 171, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3189, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 57, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([522, 14, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3239, 32],"int32"), list[-1,], )
paddle.Tensor.reshape(Tensor([128, 2100],"float32"), list[16,-1,2100,], )
paddle.Tensor.reshape(Tensor([389, 15, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3069, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3, 114, 8, 64],"float32"), list[3,114,512,], )
paddle.Tensor.reshape(Tensor([3035, 35],"int32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1525, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([6, 48, 8, 64],"float32"), list[6,48,512,], )
paddle.Tensor.reshape(Tensor([2942, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([689, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([867, 9, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2744, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1146, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([421, 8, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2006, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([620, 19, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1431, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1870, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 168, 8, 64],"float32"), list[8,168,512,], )
paddle.Tensor.reshape(Tensor([589, 14, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([914, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1498, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 3, 72, 72, 4],"float32"), tuple(8,-1,4,), )
paddle.Tensor.reshape(Tensor([1332, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([494, 13, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1516, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([797, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([7, 170, 8, 64],"float32"), list[7,170,512,], )
paddle.Tensor.reshape(Tensor([1683, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2075, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1206, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1901, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1496, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([577, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2048, 1, 17, 1, 17, 1],"float32"), tuple(-1,1,17,17,), )
paddle.Tensor.reshape(Tensor([715, 12, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1095, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1819, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 31, 38, 68],"float16"), list[-1,68,], )
paddle.Tensor.reshape(Tensor([542, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 38, 35, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([308, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1578, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([7, 41, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2550, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([6432, 139, 1],"float32"), list[-1,1,], )
paddle.Tensor.reshape(Tensor([2020, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([511, 9, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([623, 19, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3, 112, 8, 64],"float32"), list[3,112,512,], )
paddle.Tensor.reshape(Tensor([1006, 10, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([87, 38, 64],"float32"), list[-1,64,], )
paddle.Tensor.reshape(Tensor([2632, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3, 159, 8, 64],"float32"), list[3,159,512,], )
paddle.Tensor.reshape(Tensor([2225, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([936, 9, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([7, 36, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2454, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1397, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1574, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1734, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3589, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1658, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3, 66, 8, 64],"float32"), list[3,66,512,], )
paddle.Tensor.reshape(Tensor([307, 10, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 21, 20, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1185, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2748, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([374, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2, 144, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([410, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4003, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1256, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2, 82, 8, 96],"float16"), list[2,82,768,], )
paddle.Tensor.reshape(Tensor([1517, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1475, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1194, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2070, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([868, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([256, 256, 3, 3],"float32"), list[1,256,-1,], )
paddle.Tensor.reshape(Tensor([1722, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([395, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1892, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 176, 8, 64],"float32"), list[8,176,512,], )
paddle.Tensor.reshape(Tensor([10, 52, 8, 64],"float32"), list[10,52,512,], )
paddle.Tensor.reshape(Tensor([1193, 9, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4284, 38],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([184832],"float32"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([4, 88, 8, 64],"float32"), list[4,88,512,], )
paddle.Tensor.reshape(Tensor([8, 20128],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1606, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1745, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([7, 109, 8, 64],"float32"), list[7,109,512,], )
paddle.Tensor.reshape(Tensor([1386, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 6885, 4],"float32"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([1717, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4465, 3, 11],"float32"), list[-1,11,], )
paddle.Tensor.reshape(Tensor([4, 12544, 4],"float32"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([1917, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1813, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2380, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([506, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1389, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([883, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 19, 17, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([807, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([12, 1024, 32],"float32"), list[12,32,32,32,], )
paddle.Tensor.reshape(Tensor([1537, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2150, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 43, 8, 64],"float32"), list[8,43,512,], )
paddle.Tensor.reshape(Tensor([9, 49, 768],"float32"), list[9,7,7,768,], )
paddle.Tensor.reshape(Tensor([8, 23712, 4],"float32"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([1080, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([7, 83, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 76, 76, 32],"float32"), list[2,-1,32,], )
paddle.Tensor.reshape(Tensor([953, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1315, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([393, 9, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3124, 58],"float32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1478, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([505, 13, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1, 8, 6380, 4, 4],"float32"), list[8,1,6380,16,], )
paddle.Tensor.reshape(Tensor([8, 36, 38, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([5, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3927, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1172, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([528, 15, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([743, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2480, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([20736, 32],"float32"), list[144,144,-1,], )
paddle.Tensor.reshape(Tensor([5, 124, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([208, 4116],"float32"), list[16,-1,4116,], )
paddle.Tensor.reshape(Tensor([1576, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1733, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 74, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1712, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([669, 15, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([10, 181, 8, 64],"float32"), list[10,181,512,], )
paddle.Tensor.reshape(Tensor([10, 102, 8, 64],"float32"), list[10,102,512,], )
paddle.Tensor.reshape(Tensor([913, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1956, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([372, 12, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1475, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3379, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([7, 66, 8, 64],"float32"), list[7,66,512,], )
paddle.Tensor.reshape(Tensor([2048, 9, 9, 1, 1, 1],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([8, 32, 500],"float32"), list[1,256,500,], )
paddle.Tensor.reshape(Tensor([602112],"float32"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([713, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([64, 16, 16, 32],"float16"), list[-1,8,], )
paddle.Tensor.reshape(Tensor([5, 132, 8, 64],"float32"), list[5,132,512,], )
paddle.Tensor.reshape(Tensor([3080, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 25600],"int64"), list[-1,], )
paddle.Tensor.reshape(Tensor([1418, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1008, 10, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([5458, 14, 11],"float32"), list[-1,11,], )
paddle.Tensor.reshape(Tensor([8, 158, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([791, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1721, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4349, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([630, 8, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1621, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2356, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1022, 8, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2, 8500, 11],"float32"), list[-1,11,], )
paddle.Tensor.reshape(Tensor([1101, 9, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([7610, 3, 11],"float32"), list[-1,11,], )
paddle.Tensor.reshape(Tensor([1312, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1330, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2, 128, 32, 32],"float32"), list[2,128,-1,], )
paddle.Tensor.reshape(Tensor([3822, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2042, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([102400],"float32"), list[2048,50,], )
paddle.Tensor.reshape(Tensor([3, 161, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1118, 8, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1992, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([599, 13, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3068, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1015, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([623, 11, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2551, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1110, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([5772, 97],"int32"), list[-1,], )
paddle.Tensor.reshape(Tensor([1747, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([841, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([261, 13, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([50, 39, 14, 14, 1],"float32"), tuple(50,-1,), )
paddle.Tensor.reshape(Tensor([10, 41, 8, 32],"float32"), list[10,41,256,], )
paddle.Tensor.reshape(Tensor([3197, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([56, 12096],"float32"), list[8,-1,12096,], )
paddle.Tensor.reshape(Tensor([3596, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([800, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2, 2541, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([485, 11, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1844, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2676, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2431, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([168, 4, 2, 2, 128],"float16"), list[168,4,4,128,], )
paddle.Tensor.reshape(Tensor([1330, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2205, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([12, 128, 128, 1, 1, 1],"float32"), tuple(-1,1,1,1,), )
paddle.Tensor.reshape(Tensor([372, 8, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1690, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([389, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([943, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1266, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([383, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1501, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([5, 71, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1150, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4, 1, 304, 304],"float16"), list[4,1,304,304,], )
paddle.Tensor.reshape(Tensor([6, 106, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([64, 3060],"int32"), list[-1,], )
paddle.Tensor.reshape(Tensor([2734, 46],"int32"), list[-1,], )
paddle.Tensor.reshape(Tensor([337, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([721, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2322, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2542, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4052, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1011, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 199, 8, 64],"float32"), list[8,199,512,], )
paddle.Tensor.reshape(Tensor([7, 177, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2856, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2, 105, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1336, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([465, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([10, 150, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3186, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1359, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([512, 22, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3800, 64],"float32"), tuple(100,38,64,), )
paddle.Tensor.reshape(Tensor([2009, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([880, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2443, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 27, 52, 52],"float32"), tuple(8,3,-1,52,52,), )
paddle.Tensor.reshape(Tensor([705, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1497, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1360, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1606, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1, 1200, 384],"float32"), tuple(-1,40,30,384,), )
paddle.Tensor.reshape(Tensor([2254, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([128000],"float32"), list[4,32000,], )
paddle.Tensor.reshape(Tensor([3533, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([978, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([9, 85, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([895, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1800, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([831232, 1],"float32"), list[-1,64,1,], )
paddle.Tensor.reshape(Tensor([518, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2, 256, 320],"float32"), list[2,-1,2,5,32,], )
paddle.Tensor.reshape(Tensor([208, 3549],"float32"), list[8,-1,3549,], )
paddle.Tensor.reshape(Tensor([2, 320, 32, 32],"float32"), list[2,320,-1,], )
paddle.Tensor.reshape(Tensor([2410, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 21504],"int64"), list[-1,], )
paddle.Tensor.reshape(Tensor([3912, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([7, 179, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3427, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([651, 19, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([354, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1136, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1395, 1, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([6, 62, 8, 64],"float32"), list[6,62,512,], )
paddle.Tensor.reshape(Tensor([4, 3549, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([1764, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3, 99, 8, 64],"float32"), list[3,99,512,], )
paddle.Tensor.reshape(Tensor([8, 112, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 35, 39, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1083, 10, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1248, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3755, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3778, 2, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([48, 2304, 4],"float32"), list[-1,4,], )
paddle.Tensor.reshape(Tensor([604, 13, 80],"float32"), list[-1,80,], )
paddle.Tensor.scale(Tensor([2, 1, 1024, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([160, 1280],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([256, 384, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([192, 64, 5, 5],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([192, 896],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([1280, 320],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([8192, 64],"float32"), 0.006378560586546936, )
paddle.Tensor.scale(Tensor([256, 1280],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([2, 2, 1024, 64],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([7, 16, 128, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([256, 256, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([384, 192, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([7168, 64],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([1, 16, 13, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([8, 7168],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([32, 896],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([1, 16, 1, 167],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 172],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 184],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 101],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 106],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 158],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 173],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 185],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 152],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 187],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 119],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 178],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 153],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 148],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 190],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 191],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 123],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 163],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 199],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 200],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 78],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 194],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 149],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 151],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 208],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 99],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 161],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 154],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 67],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 145],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 111],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 162],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 175],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 140],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 138],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 201],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 76],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 81],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 109],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 73],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 85],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 75],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 93],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 77],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 132],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 127],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 118],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 137],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 94],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 150],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 63],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 103],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 198],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 192],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 64],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 90],"float32"), 24, )
paddle.Tensor.scale(Tensor([64, 1, 11, 11],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([1, 16, 1, 155],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 186],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 176],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 130],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 212],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 131],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 89],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 107],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 177],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 13, 13],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 117],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 112],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 82],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 125],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 135],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 207],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 206],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 121],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 110],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 116],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 157],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 65],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 196],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 166],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 188],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 129],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 100],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 104],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 69],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 165],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 68],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 133],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 189],"float32"), 24, )
paddle.Tensor.scale(Tensor([256, 10],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([1, 16, 1, 74],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 159],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 136],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 98],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 88],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 120],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 169],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 183],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 209],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 139],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 134],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 168],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 197],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 124],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 97],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 92],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 87],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 79],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 179],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 164],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 141],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 84],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 70],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 80],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1, 16, 1, 126],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 144],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 147],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 210],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 143],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 86],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 114],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 91],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 142],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 160],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 66],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 113],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 128],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 71],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 180],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 195],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 170],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 182],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 171],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 181],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 102],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 96],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 193],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 204],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 202],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 146],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 203],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 115],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 156],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 105],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 83],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 122],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 174],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 211],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 72],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 205],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 108],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1, 95],"float32"), 24, )
paddle.Tensor.sigmoid(Tensor([1, 8550, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 6380, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 900, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 1100, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 300, 4],"float32"), )
paddle.Tensor.sign(Tensor([50000, 2],"float64"), )
paddle.Tensor.sign(Tensor([20000],"float32"), )
paddle.Tensor.sign(Tensor([1124, 32],"float32"), )
paddle.Tensor.sign(Tensor([512, 32],"float32"), )
paddle.Tensor.sign(Tensor([32, 32],"float32"), )
paddle.Tensor.sign(Tensor([32, 37],"float32"), )
paddle.Tensor.sign(Tensor([37, 32],"float32"), )
paddle.Tensor.sin(Tensor([1, 45, 36, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 96, 72, 64],"float32"), )
paddle.Tensor.sin(Tensor([2, 1100, 64],"float32"), )
paddle.Tensor.sin(Tensor([2, 38, 58, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 80, 60, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 72, 100, 64],"float32"), )
paddle.Tensor.sin(Tensor([4096, 64],"float32"), )
paddle.Tensor.sin(Tensor([2048, 128],"float32"), )
paddle.Tensor.sin(Tensor([1, 89, 72, 64],"float32"), )
paddle.Tensor.sin(Tensor([2048, 96],"float32"), )
paddle.Tensor.sin(Tensor([1, 48, 36, 64],"float32"), )
paddle.Tensor.sin(Tensor([2048, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 36, 50, 64],"float32"), )
paddle.Tensor.sin(Tensor([4096, 128],"float32"), )
paddle.Tensor.sin(Tensor([4, 25, 29, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 1100, 64],"float32"), )
paddle.Tensor.sin(Tensor([264, 64],"float32"), )
paddle.Tensor.sin(Tensor([8192, 8],"float32"), )
paddle.Tensor.sin(Tensor([24, 24, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 20, 15, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 40, 30, 64],"float32"), )
paddle.Tensor.sin(Tensor([2048, 32],"float32"), )
paddle.Tensor.sin(Tensor([8192, 4],"float32"), )
paddle.Tensor.sin(Tensor([2, 10, 15, 64],"float32"), )
paddle.Tensor.sin(Tensor([2048, 8],"float32"), )
paddle.Tensor.sin(Tensor([1, 18, 25, 64],"float32"), )
paddle.Tensor.sin(Tensor([16, 16, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 300, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([2, 19, 29, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 24, 18, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 23, 18, 64],"float32"), )
paddle.Tensor.sin(Tensor([512, 64],"float32"), )
paddle.Tensor.sin(Tensor([512, 8],"float32"), )
paddle.Tensor.sin(Tensor([142, 64],"float32"), )
paddle.Tensor.sin(Tensor([2048, 4],"float32"), )
paddle.Tensor.sin(Tensor([1, 12, 9, 64],"float32"), )
paddle.Tensor.sin(Tensor([512, 2],"float32"), )
paddle.Tensor.sin(Tensor([70, 64],"float32"), )
paddle.Tensor.sin(Tensor([512, 4],"float32"), )
paddle.Tensor.sin(Tensor([1, 10, 8, 64],"float32"), )
paddle.Tensor.sin(Tensor([10, 256],"float32"), )
paddle.Tensor.sin(Tensor([5, 256],"float32"), )
paddle.Tensor.sin(Tensor([16, 64],"float32"), )
paddle.Tensor.sin(Tensor([34, 32],"float32"), )
paddle.Tensor.sin(Tensor([7, 256],"float32"), )
paddle.Tensor.sin(Tensor([1, 22, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 21, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 21, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 11, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 9, 13, 64],"float32"), )
paddle.Tensor.sin(Tensor([6, 256],"float32"), )
paddle.Tensor.sin(Tensor([1, 22, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([16, 64],"float64"), )
paddle.Tensor.sin(Tensor([1, 18, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 9, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 18, 64],"float32"), )
paddle.Tensor.split(Tensor([145, 4, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([278528],"int32"), list[16384,16384,16384,16384,16384,16384,16384,16384,16384,16384,16384,16384,16384,16384,16384,16384,16384,], axis=0, )
paddle.Tensor.split(Tensor([524288],"int32"), list[262144,262144,], axis=0, )
paddle.Tensor.split(Tensor([16, 17, 768],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([234272],"bfloat16"), list[6144,32,32,6144,221920,], axis=0, )
paddle.Tensor.split(Tensor([245632],"bfloat16"), list[6144,32,233280,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([168, 4, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([238016],"bfloat16"), list[6144,32,32,6144,225664,], axis=0, )
paddle.Tensor.split(Tensor([262176],"int64"), list[8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,8193,], axis=0, )
paddle.Tensor.split(Tensor([236992],"bfloat16"), list[6144,32,224640,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([54, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([235584],"bfloat16"), list[6144,32,32,6144,223232,], axis=0, )
paddle.Tensor.split(Tensor([241632],"bfloat16"), list[6144,32,229280,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([261312],"bfloat16"), list[6144,32,32,6144,248960,], axis=0, )
paddle.Tensor.split(Tensor([236832],"bfloat16"), list[6144,32,224480,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([51, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([213824],"bfloat16"), list[6144,32,32,6144,201472,], axis=0, )
paddle.Tensor.split(Tensor([242752],"bfloat16"), list[6144,32,230400,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([262148],"int64"), list[1,1,1,1,262144,], axis=0, )
paddle.Tensor.split(Tensor([232512],"bfloat16"), list[6144,32,220160,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([524288],"int64"), list[262144,262144,], axis=0, )
paddle.Tensor.split(Tensor([232192],"bfloat16"), list[6144,32,219840,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([4, 2, 128, 8, 96],"float16"), 2, )
paddle.Tensor.split(Tensor([234880],"bfloat16"), list[6144,32,32,6144,222528,], axis=0, )
paddle.Tensor.split(Tensor([236096],"bfloat16"), list[6144,32,32,6144,223744,], axis=0, )
paddle.Tensor.split(Tensor([262145],"int64"), list[262144,1,], axis=0, )
paddle.Tensor.split(Tensor([134, 4, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([234752],"bfloat16"), list[6144,32,222400,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([234080],"bfloat16"), list[6144,32,32,6144,221728,], axis=0, )
paddle.Tensor.split(Tensor([244992],"bfloat16"), list[6144,32,232640,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([158, 4, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([53, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([57, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([261504],"bfloat16"), list[6144,32,32,6144,249152,], axis=0, )
paddle.Tensor.split(Tensor([180224],"int32"), list[16384,16384,16384,16384,16384,16384,16384,16384,16384,16384,16384,], axis=0, )
paddle.Tensor.split(Tensor([16, 17, 3072],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([235072],"bfloat16"), list[6144,32,222720,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([241952],"bfloat16"), list[6144,32,229600,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([238432],"bfloat16"), list[6144,32,32,6144,226080,], axis=0, )
paddle.Tensor.split(Tensor([41, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([300, 101],"float32"), list[1,2,2,5,8,22,5,5,18,3,9,4,1,2,11,3,], -1, )
paddle.Tensor.split(Tensor([12384],"bfloat16"), list[6144,32,32,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([40, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([32768],"int32"), list[16384,8192,8192,], axis=0, )
paddle.Tensor.split(Tensor([38, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([47, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([39, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([16387],"int64"), list[1,8193,8193,], axis=0, )
paddle.Tensor.split(Tensor([16, 176, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([400, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([300, 5],"float32"), list[5,], -1, )
paddle.Tensor.split(Tensor([1, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([300, 8],"float32"), list[1,1,1,1,1,1,1,1,], -1, )
paddle.Tensor.split(Tensor([900, 4],"float32"), list[2,2,], -1, )
paddle.Tensor.split(Tensor([58, 1, 96],"float32"), list[64,16,16,], axis=-1, )
paddle.Tensor.split(Tensor([4, 200, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([2, 1100, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([800, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([8, 200, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([20, 1, 64],"float32"), list[32,16,16,], axis=-1, )
paddle.Tensor.split(Tensor([300, 8],"float32"), list[8,], -1, )
paddle.Tensor.split(Tensor([2, 198, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 300, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([512, 4],"float32"), list[512,], )
paddle.Tensor.split(Tensor([300, 4],"float32"), list[2,2,], -1, )
paddle.Tensor.split(Tensor([264, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([2, 192, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 1100, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([2, 300, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([2, 200, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([300, 4],"float32"), list[1,1,1,1,], -1, )
paddle.Tensor.split(Tensor([300, 4],"float32"), list[1,3,], -1, )
paddle.Tensor.split(Tensor([2048, 4],"float32"), list[512,512,512,512,], )
paddle.Tensor.split(Tensor([6240],"bfloat16"), list[32,32,6144,32,], axis=0, )
paddle.Tensor.split(Tensor([404, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([300, 7],"float32"), list[7,], -1, )
paddle.Tensor.split(Tensor([300, 16],"float32"), list[12,4,], -1, )
paddle.Tensor.split(Tensor([262, 4],"float32"), 4, axis=-1, )
paddle.Tensor.sqrt(Tensor([64, 80, 11, 11],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 84, 84],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 13125, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 6804, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 10, 10],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 80, 80],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 68, 68],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 5, 5],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 6, 6],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4116, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 9, 9],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 84, 84],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 80, 80],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 72, 72],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 12, 12],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 8, 8],"float32"), )
paddle.Tensor.sqrt(Tensor([16, 4, 40, 40],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4725, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([16, 4, 48, 48],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 88, 88],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 72, 72],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 76, 76],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 88, 88],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 76, 76],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 9261, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 44, 44],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 76, 76],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 26, 26],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 21, 21],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 60, 60],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 56, 56],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 20, 20],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 52, 52],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 28, 28],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 56, 56],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 36, 36],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 64, 64],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 56, 56],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 52, 52],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 38, 38],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 60, 60],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 5376, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 30, 30],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 48, 48],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 44, 44],"float32"), )
paddle.Tensor.sqrt(Tensor([16, 4, 20, 20],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 28, 28],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 22, 22],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 34, 34],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 52, 52],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 44, 44],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 32, 32],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 26, 26],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 2100, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 42, 42],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 68, 68],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 40, 40],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 38, 38],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 4, 40, 40],"float32"), )
paddle.Tensor.sqrt(Tensor([16, 4, 24, 24],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 34, 34],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 36, 36],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 44, 44],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 36, 36],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 4, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 4725, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 30, 30],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 42, 42],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 40, 40],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 40, 40],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 32, 32],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 42, 42],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 88, 88],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 22, 22],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 72, 72],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 84, 84],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 64, 64],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 19, 19],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 18, 18],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 4, 80, 80],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 80, 80],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 60, 60],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 38, 38],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 21, 21],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 9, 9],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 11, 11],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 28, 28],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 15, 15],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 17, 17],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 19, 19],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 8, 8],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 14, 14],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 11, 11],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 19, 19],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 18, 18],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 18, 18],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 11, 11],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 11, 11],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 4, 10, 10],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 4, 20, 20],"float32"), )
paddle.Tensor.sqrt(Tensor([16, 4, 12, 12],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 8, 8],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 14, 14],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 20, 20],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 13, 13],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 13, 13],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 16, 16],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 13, 13],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 17, 17],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 22, 22],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 10, 10],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 5, 7, 7],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 16, 16],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 24, 24],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 10, 10],"float32"), )
paddle.Tensor.sqrt(Tensor([16, 4, 10, 10],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 9, 9],"float32"), )
paddle.Tensor.sqrt(Tensor([4, 4, 12, 12],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 7, 7],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 26, 26],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 21, 21],"float32"), )
paddle.Tensor.sqrt(Tensor([16, 4, 5, 5],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 20, 20],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 30, 30],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 15, 15],"float32"), )
paddle.Tensor.sqrt(Tensor([1024],"float32"), )
paddle.Tensor.sqrt(Tensor([16, 4, 6, 6],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 15, 15],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 11, 14, 14],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 22, 22],"float32"), )
paddle.Tensor.square(Tensor([1024],"float32"), )
paddle.Tensor.square(Tensor([8, 128],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 16128, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 11109, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([1, 29696, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 16000],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([8, 21760],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 4896, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 9472, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([4, 14400, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 5504, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 5376, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10240, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10496, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 3024, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([1, 2176, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10368, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 22176, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 32768, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 4725, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([1, 7424, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 11392, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 16848],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 8704, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2, 272, 272],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([48, 784, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 24272],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([6291, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 12032, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([6255, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 12160, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 25536, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 4116, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([8, 21888],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([64, 1936],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([3411, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 20128],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([6369, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 10752, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 24064, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 21504, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 25584],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([8, 25536],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 7168, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 9600, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([64, 576, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([3658, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 11136, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 17280, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 7040, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 4864, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3, 212, 158],"float64"), 0, )
paddle.Tensor.squeeze(Tensor([90, 2304],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([8, 1, 7581, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([8, 25600, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 9216, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([3783, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 15600, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10240, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 44436, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 12544, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 14976, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 15488, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 1, 7581, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 16384, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 6048, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 4200, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 24320],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([48, 2704],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2176, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3840, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([32, 3136],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 13312, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 6144, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 16896, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 5632, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 5440, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 17664, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 5460, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 25600, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 9216, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 18432, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 9344, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 23552, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([6950, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([3438, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 26880],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 8064, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 8448, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([6929, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 1, 27216, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([64, 1600],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 14976, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3, 264, 308],"float64"), 0, )
paddle.Tensor.squeeze(Tensor([8, 1, 6069, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([48, 900, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([48, 676, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([7020, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([3345, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 23520],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 14336, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 33600, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 13952, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 6232, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([5060, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 17408, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 17632],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 15104, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3, 280, 280],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 23680],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([8, 6216, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 22304, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2560, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 25584],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3, 300, 375],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 13824, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 25088, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([6410, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 4224, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 40656, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([32, 3600, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([2, 1, 37632, 2],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 11776, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 21216],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 12288, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([90, 1936, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3, 466, 386],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 19584, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 14464, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 6400, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([7290, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 1, 6069, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([1, 3072, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 16416],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2304, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 21216],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 24864, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 28224],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([96, 120, 1, 40],"float32"), axis=2, )
paddle.Tensor.squeeze(Tensor([1, 3328, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 15600],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3200, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 21504],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 4480, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 1, 6804, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 27648, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10112, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([7573, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 24320],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([24, 6912],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 12928, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([90, 784, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 1, 12096, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 22016, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([48, 3136],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([48, 3136, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([7164, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 18848],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 21888, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 5120, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10752, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 5120, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 5120, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 10164, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([1, 3, 477, 401],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 22848],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 5712, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([6084, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 12288, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([4359, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([16, 1, 10164, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 13312, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 15360, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([6282, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 1920, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 28800, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3840, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3, 284, 354],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 7168, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 36858, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([4554, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 160512, 1],"float64"), -1, )
paddle.Tensor.squeeze(Tensor([1, 9856, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([64, 64, 1, 40],"float32"), axis=2, )
paddle.Tensor.squeeze(Tensor([1, 9728, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([64, 1936],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([24, 7600, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 6656, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([24, 1900, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 1, 3549, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([1, 9216, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 17056],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 6400, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 20992, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([12988, 1, 64],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 7680, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 27548, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 24192],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 11136, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([90, 3136],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2560, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 11008, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 2100, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([1, 13184, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 28224, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 21504, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 5304, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10752, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([3029, 1, 128],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([64, 1600],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([5548, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([32, 1936, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 26880],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 13824, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 5376, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([3795, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 13568, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2048, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([6502, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([4, 1, 8400, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 9344, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 21840],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([8, 24192, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 6068, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 220500],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 22304],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 23680, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 8400, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([4, 7744, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([4843, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 4096, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([3702, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 15600],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([8, 4408, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 33792, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([4, 1, 12096, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 1, 56784, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 3712, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 6784, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([7270, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([90, 2304, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3968, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 8704, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 14848, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 4608, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 8192, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([4, 1, 11109, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([3399, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 17472],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10368, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 26012, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([4816, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([48, 2704],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([8, 19456],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 5120, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 21280],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 7808, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([24, 8320],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([8, 15808, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2560, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([7183, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 24272],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 5032, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 17408, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 7424, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 8192, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 4224, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 7808, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([6391, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([7175, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([6976, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 10624, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 15232, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 6384, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 9261, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([1, 26624, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3584, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 3900, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 23040, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 13440, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 12288, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 4608, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 8704, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 13312, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([32, 3136],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 15360, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 34304, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 12032, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2816, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 75600, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 6016, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 3800, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 9856, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([7710, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([24, 7600],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 14336, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 19456, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10112, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 4712, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 16848, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 5504, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10496, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3, 224, 224],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 4736, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10240, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 14336, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 26208, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 7581, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([1, 11648, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 10240, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 6888, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 1, 4116, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([8, 6720, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3328, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 13952, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 1, 8400, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([1, 4736, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 2541, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 2048, 1, 96],"float16"), axis=list[0,2,], )
paddle.Tensor.squeeze(Tensor([1, 4992, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 6016, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([32, 3600],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 6912, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 6080, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 23104, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2816, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 23712, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 21280],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 6272, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 26880, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([64, 1936, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 12800, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 1, 6804, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([1, 17024, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([32, 2304, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 12800, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 4352, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 27552, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 6144, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 6656, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 512, 1, 40],"float32"), 2, )
paddle.Tensor.squeeze(Tensor([16, 1, 11109, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([64, 2304],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 65856, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 11904, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([4293, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 12800, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 12160, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([48, 3136],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 4864, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([90, 900, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([6351, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 7056, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([512, 1, 768],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 3584, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([32, 3600],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([3887, 1, 128],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([4, 12544, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([64, 64, 1, 40],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([8, 26208],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 26112, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 70644, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([8, 20672],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([192, 120, 1, 40],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([48, 576, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 5168, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([512, 1, 768],"float16"), )
paddle.Tensor.squeeze(Tensor([8, 23712],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([1, 32256, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 38402, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 17472, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 4992, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 6400, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 3549, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([8, 1, 5376, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([8, 19488],"int64"), 0, )
paddle.Tensor.squeeze(Tensor([8, 21840, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 21280, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([8, 6396, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 3584, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 13824, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 12096, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([4800, 101, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 11904, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 26524, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 2688, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([4, 20736, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 7168, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([160, 1, 3072],"float16"), )
paddle.Tensor.squeeze(Tensor([4059, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 17792, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([6684, 1, 128],"float32"), -2, )
paddle.Tensor.squeeze(Tensor([8, 5576, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 14080, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 11264, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 61236, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([6474, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 1, 52500, 4],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([8, 5624, 4],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([6098, 32, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([8, 1, 5376, 4],"float16"), 1, )
paddle.Tensor.squeeze(Tensor([8, 3952, 4],"float32"), 0, )
paddle.Tensor.std(Tensor([64, 46, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 47, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 51, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 52, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 77, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 53, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 48, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 54, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 44, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 50, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 34, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 32, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 113, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 29, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 38, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 135, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 48, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 163, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 24, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 18, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 37, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 42, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 77, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([9, 1280],"float32"), axis=1, )
paddle.Tensor.std(Tensor([16, 32, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 211, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 17, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 40, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 42, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 121, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 95, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 23, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 418, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 35, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 333, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([38, 2560],"float32"), axis=1, )
paddle.Tensor.std(Tensor([64, 20, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 52, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 39, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 24, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 272, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 176, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 16, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 130, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 50, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 97, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 28, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 54, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 13, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 38, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 27, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 171, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 15, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 34, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 33, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 36, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 50, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 525, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 43, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 52, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 127, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 30, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 167, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 465, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 28, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 49, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 26, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([36, 2304],"float32"), axis=1, )
paddle.Tensor.std(Tensor([64, 41, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 40, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 35, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 30, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 29, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 394, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 166, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 14, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 47, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 22, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 27, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 37, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 119, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 26, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 45, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 43, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 25, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 25, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 120, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 55, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 54, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 53, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 31, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 98, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 31, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 36, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 234, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 48, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 19, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([64, 21, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 180, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 33, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 173, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 39, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 174, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 99, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 43, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 43, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 27, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 18, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 14, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 40, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 31, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 6, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 25, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 23, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 89, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 83, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 23, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 12, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 47, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 77, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 16, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 39, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 26, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 28, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 21, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 16, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 40, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 22, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 64, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 34, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 29, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 90, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 13, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 42, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 19, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 24, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 80, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 44, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 9, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 92, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 17, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 56, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 9, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 21, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 13, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 28, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 36, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 3, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 31, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 65, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 10, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 30, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 20, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 46, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 15, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 20, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 19, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 35, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 30, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 78, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 37, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 34, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 19, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 39, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 16, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 17, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 22, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 7, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 53, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 48, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 5, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 17, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 11, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 11, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 24, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 29, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 45, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 2, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 46, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 22, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 12, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 18, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 73, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 26, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 14, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 62, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 21, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 22, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 27, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 45, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 25, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 38, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 28, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 33, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 5, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 16, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 25, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 18, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 51, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 23, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 32, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 36, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 12, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 41, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 10, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 50, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 8, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 33, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 7, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 20, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 52, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 19, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2, 15, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 58, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 63, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 30, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 10, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 15, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 6, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 23, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 15, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 8, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 5, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 37, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 35, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 20, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8, 14, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4, 41, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.subtract(Tensor([66244],"float32"), Tensor([66244],"float32"), )
paddle.Tensor.subtract(Tensor([23619],"float32"), Tensor([23619],"float32"), )
paddle.Tensor.subtract(Tensor([7953],"float32"), Tensor([7953],"float32"), )
paddle.Tensor.subtract(Tensor([17157],"float32"), Tensor([17157],"float32"), )
paddle.Tensor.subtract(Tensor([1861],"float32"), Tensor([1861],"float32"), )
paddle.Tensor.sum(Tensor([17, 51750],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([9306, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([114991],"float32"), )
paddle.Tensor.sum(Tensor([2090, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8528, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16660, 28],"bool"), axis=1, )
paddle.Tensor.sum(Tensor([9975, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([9360, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([34000, 4],"float32"), )
paddle.Tensor.sum(Tensor([7700, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 14, 56784],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([19498, 11],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 50, 2541],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1323, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([804701],"float32"), )
paddle.Tensor.sum(Tensor([5050, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([6870, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([7684, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([12, 46800],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([4669, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8907, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 10, 48384],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 22, 7581],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([9936, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([9372, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2549, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 46, 21504],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([6674, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4662, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 19, 27216],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([4376, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5846, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8276, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 56, 5376],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([8919, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 138120],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([899796],"float32"), )
paddle.Tensor.sum(Tensor([6128, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2601, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 19, 21504],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1736, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([10596, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2500, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 37044, 10],"float32"), -1, )
paddle.Tensor.sum(Tensor([8, 15, 9, 144],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2537, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4, 28, 9, 196],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([5925, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8844, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4, 94, 311],"int64"), )
paddle.Tensor.sum(Tensor([3864, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5349, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 7, 9, 6400],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([763098],"float32"), )
paddle.Tensor.sum(Tensor([10521, 11],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([10242, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8654, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5946, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([7749, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 2, 65856],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([6237, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([11401, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2503, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([12369, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4, 103320],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([11619, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2508, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4, 23, 9, 400],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 60, 6804],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 34, 2541],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([347812, 1],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2112, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 75, 4116],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([4789, 34],"bool"), axis=1, )
paddle.Tensor.sum(Tensor([6033, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4, 1, 9, 4624],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 4, 9, 361],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([996211],"float32"), )
paddle.Tensor.sum(Tensor([6, 51030],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 7, 30324],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([4770, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4653, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([6766, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5038, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 5376, 10],"float32"), -1, )
paddle.Tensor.sum(Tensor([4308, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4, 41, 9, 121],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1317, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([9741, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 5, 37044],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([3891, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5840, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 33, 11109],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([6082, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2596, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([101126],"float32"), )
paddle.Tensor.sum(Tensor([5757, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8, 10, 11109],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([34000, 14],"bool"), axis=1, )
paddle.Tensor.sum(Tensor([2, 19, 6885],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 13, 6069],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 44640],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([8, 20, 9, 441],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([5340, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2008, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5759, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3826, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([64, 22, 9, 64],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8080, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([27540, 21],"bool"), axis=1, )
paddle.Tensor.sum(Tensor([8, 13, 9, 169],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2651, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4286, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4138, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4796, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([10215, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([222528],"float32"), )
paddle.Tensor.sum(Tensor([2, 45, 9261],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 19, 9, 1600],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1629, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([7719, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 293397],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 117, 2100],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([5631, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2416, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([7372, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([12294, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3896, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 14, 4725],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 36, 4725],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 31, 10164],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([7940, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([9, 73365],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([5800, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([9955, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 247086],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([1270, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([6565, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1688, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3282, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 25, 27216],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([3, 74550],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 92, 3549],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([11228, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3980, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 26, 3024],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 60, 2100],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 15, 4116],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([9174, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1835, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3, 283905],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 44, 9261],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1785, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([49920, 11],"float32"), )
paddle.Tensor.sum(Tensor([1, 9, 48384],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 26, 4725],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1641, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2636, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 70644, 10],"float32"), -1, )
paddle.Tensor.sum(Tensor([6332, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([6450, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5676, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2135, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([835629],"float32"), )
paddle.Tensor.sum(Tensor([757880],"float32"), )
paddle.Tensor.sum(Tensor([4, 83415],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 9, 21504],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([898090],"float32"), )
paddle.Tensor.sum(Tensor([110832],"float32"), )
paddle.Tensor.sum(Tensor([2602, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([6516, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 15, 9, 121],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([970473],"float32"), )
paddle.Tensor.sum(Tensor([7002, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 39, 7581],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([64, 22, 9, 16],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([5040, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 34, 4116],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 11, 9, 529],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 26, 37044],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 11, 9, 1936],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 34, 4116],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 75330],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([101931],"float32"), )
paddle.Tensor.sum(Tensor([4776, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([64, 37, 9, 16],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([3318, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2211, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 11, 6804],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 19, 5440],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 15, 9, 441],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1869, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3678, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([10360, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3063, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 30, 6069],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2418, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8982, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4018, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 64320],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([8757, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3295, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3801, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3525, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([6172, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4186, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3979, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([9628, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([10, 38940],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 42, 3549],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2674, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3651, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5536, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([10275, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([7419, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3159, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3936, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 9, 27216],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2613, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 9, 9, 225],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([9037, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([6930, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([11580, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([7180, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 11, 7581],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 386694],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 28, 4725],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([6506, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([7010, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 18, 9, 1764],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8508, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([15, 56700],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 18, 11109],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 39, 3549],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([9960, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2302, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([10176, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5952, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3542, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2639, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([930253],"float32"), )
paddle.Tensor.sum(Tensor([3613, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2577, 43],"bool"), axis=1, )
paddle.Tensor.sum(Tensor([4910, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3124, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 19, 7681],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2432, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8, 30, 9, 400],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 14, 48384],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([859169],"float32"), )
paddle.Tensor.sum(Tensor([9723, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([7965, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([907233],"float32"), )
paddle.Tensor.sum(Tensor([8, 32, 21, 20],"float32"), -1, )
paddle.Tensor.sum(Tensor([2, 13, 4116],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 59295],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([5859, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3054, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 35, 4116],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([12308, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([920264],"float32"), )
paddle.Tensor.sum(Tensor([8, 11109, 4],"float32"), )
paddle.Tensor.sum(Tensor([7780, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([8, 79695],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([8, 7581, 4],"float32"), -1, )
paddle.Tensor.sum(Tensor([2, 50, 4725],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([6377, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4, 15, 9, 1296],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1561, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8, 51840],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([12404, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3181, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 69, 4725],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2615, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4, 5, 9, 1444],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([7120, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 63000],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 32, 2541],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8523, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4090, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8428, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3182, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2497, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([10976, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2781, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 26, 9, 169],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 14, 52500],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([3, 76380],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([16, 5, 3060],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([11905, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2686, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3654, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5240, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5409, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1960, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 28, 30324],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([16, 28, 9, 121],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 63, 7581],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([6544, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([64, 26, 9, 16],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 77, 4116],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8376, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5184, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3, 331452],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 13, 12096],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 77490],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([4524, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 38, 4725],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([5018, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8229, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 19, 6804],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([7568, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([76152, 11],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3152, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2250, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 204, 2100],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([16, 8, 2541],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([5643, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16660, 41],"bool"), axis=1, )
paddle.Tensor.sum(Tensor([3598, 37],"bool"), axis=1, )
paddle.Tensor.sum(Tensor([2965, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8028, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 22, 8400],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 19, 9, 169],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 29, 2541],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 41, 2541],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 13, 7581],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 262428],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([2, 25, 5376],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 347820],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([2158, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1696, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 46, 5376],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([5476, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3, 70080],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([10165, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([9785, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([9024, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 33, 12096],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([5858, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([9005, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4137, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8, 61500],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([16, 25, 9, 100],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8730, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1443, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([879741],"float32"), )
paddle.Tensor.sum(Tensor([3787, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1607, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 41, 6804],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([6824, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1976, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2022, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([12, 78750],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([4680, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([19125, 24],"bool"), axis=1, )
paddle.Tensor.sum(Tensor([6, 73920],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 1, 9, 28800],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 30, 8400],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([8535, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([3988, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1674, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([860364],"float32"), )
paddle.Tensor.sum(Tensor([8679, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([961515],"float32"), )
paddle.Tensor.sum(Tensor([2525, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([9130, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2634, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([6640, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1356, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 8, 8400],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 56, 4725],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([9860, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1432, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([18874, 11],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1726, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8435, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 23, 6885],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([16, 7, 4725],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([872239],"float32"), )
paddle.Tensor.sum(Tensor([7407, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4086, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([10878, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([5190, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([19125, 7],"bool"), axis=1, )
paddle.Tensor.sum(Tensor([4098, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2268, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([6175, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 37, 10164],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 108, 4116],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 1, 248, 216],"float32"), )
paddle.Tensor.sum(Tensor([1953, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4, 20, 9, 196],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8833, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([908431],"float32"), )
paddle.Tensor.sum(Tensor([2385, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 45, 4116],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([943234],"float32"), )
paddle.Tensor.sum(Tensor([12060, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([10491, 80],"float32"), axis=1, )
paddle.Tensor.tile(Tensor([2513, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1263, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3165, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1790, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([3157, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2346, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2662, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2676, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2056, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2211, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1315, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([16, 1, 11109],"int32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([3068, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1840, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1285, 1, 80],"float32"), list[1,15,1,], )
paddle.Tensor.tile(Tensor([1826, 1, 80],"float32"), list[1,21,1,], )
paddle.Tensor.tile(Tensor([1592, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3829, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([4190, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1498, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([2690, 1, 80],"float32"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([1538, 1, 80],"float32"), list[1,13,1,], )
paddle.Tensor.tile(Tensor([1954, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([64, 1, 3060],"int32"), list[1,37,1,], )
paddle.Tensor.tile(Tensor([2544, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1747, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([3327, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1496, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([1895, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2690, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([4056, 1, 80],"float32"), list[1,13,1,], )
paddle.Tensor.tile(Tensor([2752, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([3255, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1464, 1, 80],"float32"), list[1,13,1,], )
paddle.Tensor.tile(Tensor([2110, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([1699, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3436, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1360, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([2052, 1, 80],"float32"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([4783, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2421, 1, 80],"float32"), list[1,20,1,], )
paddle.Tensor.tile(Tensor([2017, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([4785, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([4675, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([2484, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2268, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([1403, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1602, 1, 80],"float32"), list[1,28,1,], )
paddle.Tensor.tile(Tensor([1864, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([4327, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([3349, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2650, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3096, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([3847, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([1985, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([2034, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([1945, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2208, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1715, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1481, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2559, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2922, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2415, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([2799, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([3872, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2063, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([2743, 1, 80],"float32"), list[1,24,1,], )
paddle.Tensor.tile(Tensor([2099, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([3593, 1, 80],"float32"), list[1,16,1,], )
paddle.Tensor.tile(Tensor([1761, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([1513, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([1462, 1, 80],"float32"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([1650, 1, 80],"float32"), list[1,17,1,], )
paddle.Tensor.tile(Tensor([2984, 1, 80],"float32"), list[1,21,1,], )
paddle.Tensor.tile(Tensor([16, 1, 10164],"int32"), list[1,35,1,], )
paddle.Tensor.tile(Tensor([1267, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([3543, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1684, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2217, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([2326, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([4761, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2226, 1, 80],"float32"), list[1,24,1,], )
paddle.Tensor.tile(Tensor([1951, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3492, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2450, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2441, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([1605, 1, 80],"float32"), list[1,25,1,], )
paddle.Tensor.tile(Tensor([3030, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1614, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([2653, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([2237, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1619, 1, 80],"float32"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([3562, 1, 80],"float32"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([2093, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2023, 1, 80],"float32"), list[1,19,1,], )
paddle.Tensor.tile(Tensor([2518, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1332, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([3739, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2250, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2733, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1404, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1399, 1, 80],"float32"), list[1,36,1,], )
paddle.Tensor.tile(Tensor([1558, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([2571, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1662, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1651, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([2162, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1494, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([4093, 1, 80],"float32"), list[1,22,1,], )
paddle.Tensor.tile(Tensor([3506, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1972, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2129, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2675, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2951, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([2535, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([1695, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([3513, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([4304, 1, 80],"float32"), list[1,18,1,], )
paddle.Tensor.tile(Tensor([1349, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2574, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([3335, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1491, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([2714, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2555, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2640, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1369, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1489, 1, 80],"float32"), list[1,18,1,], )
paddle.Tensor.tile(Tensor([1746, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1384, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2224, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2412, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([4110, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([1298, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([4592, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1627, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1668, 1, 80],"float32"), list[1,31,1,], )
paddle.Tensor.tile(Tensor([1406, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1770, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([3203, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([4482, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([4052, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2368, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2439, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2145, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1518, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([2055, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([1373, 1, 80],"float32"), list[1,17,1,], )
paddle.Tensor.tile(Tensor([2221, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([2398, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([4220, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1344, 1, 80],"float32"), list[1,28,1,], )
paddle.Tensor.tile(Tensor([1423, 1, 80],"float32"), list[1,15,1,], )
paddle.Tensor.tile(Tensor([1279, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([64, 1, 2125],"int32"), list[1,16,1,], )
paddle.Tensor.tile(Tensor([1985, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([2068, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([2615, 1, 80],"float32"), list[1,17,1,], )
paddle.Tensor.tile(Tensor([1968, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([1437, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1663, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([3363, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2207, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([2062, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2437, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([3302, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2830, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2188, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2835, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([1816, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([1603, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([2437, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2575, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([1563, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3139, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([4261, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1747, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2295, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1765, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3409, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1309, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1290, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([4247, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2168, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2832, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3622, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3108, 1, 80],"float32"), list[1,13,1,], )
paddle.Tensor.tile(Tensor([1582, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1349, 1, 80],"float32"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([2982, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([3595, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([2172, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1461, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1426, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([1658, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1492, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2474, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([1491, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([4155, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2748, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2909, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([4465, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([3795, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1658, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([2029, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2738, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1823, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2384, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([4684, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([3435, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([2301, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1795, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1790, 1, 80],"float32"), list[1,22,1,], )
paddle.Tensor.tile(Tensor([3166, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3033, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([2163, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2671, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([3739, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2771, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2066, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([2179, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1396, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2205, 1, 80],"float32"), list[1,15,1,], )
paddle.Tensor.tile(Tensor([3760, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2571, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([3660, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2933, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([1606, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([2408, 1, 80],"float32"), list[1,16,1,], )
paddle.Tensor.tile(Tensor([1864, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2767, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2963, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([64, 1, 3060],"int32"), list[1,27,1,], )
paddle.Tensor.tile(Tensor([2518, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2975, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2504, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([4779, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([3103, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2988, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([3028, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1996, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1594, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2324, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1921, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3066, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2324, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([2434, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1489, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3117, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2238, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([4752, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3992, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2174, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1856, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([2548, 1, 80],"float32"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([2086, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([4029, 1, 80],"float32"), list[1,19,1,], )
paddle.Tensor.tile(Tensor([2248, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([2994, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3643, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2675, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1872, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2627, 1, 80],"float32"), list[1,17,1,], )
paddle.Tensor.tile(Tensor([3023, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2378, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2288, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2186, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([4020, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([4140, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1716, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2391, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([1590, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([1810, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1891, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([4386, 1, 80],"float32"), list[1,29,1,], )
paddle.Tensor.tile(Tensor([4342, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1539, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([1445, 1, 80],"float32"), list[1,37,1,], )
paddle.Tensor.tile(Tensor([3790, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1712, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2549, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1736, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([4011, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2136, 1, 80],"float32"), list[1,16,1,], )
paddle.Tensor.tile(Tensor([2018, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2884, 1, 80],"float32"), list[1,17,1,], )
paddle.Tensor.tile(Tensor([1913, 1, 80],"float32"), list[1,23,1,], )
paddle.Tensor.tile(Tensor([2135, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2669, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2508, 1, 80],"float32"), list[1,35,1,], )
paddle.Tensor.tile(Tensor([1361, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1930, 1, 80],"float32"), list[1,31,1,], )
paddle.Tensor.tile(Tensor([2066, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([1514, 1, 80],"float32"), list[1,31,1,], )
paddle.Tensor.tile(Tensor([3517, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2338, 1, 80],"float32"), list[1,13,1,], )
paddle.Tensor.tile(Tensor([2677, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1682, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([4133, 1, 80],"float32"), list[1,34,1,], )
paddle.Tensor.tile(Tensor([2025, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([2359, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([2160, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2133, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([3199, 1, 80],"float32"), list[1,18,1,], )
paddle.Tensor.tile(Tensor([1266, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([3012, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([3189, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([2074, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1358, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2188, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([1667, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1600, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([1550, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([4025, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([3392, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1921, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2877, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([4011, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([4090, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([2391, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3595, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2018, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3154, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([1529, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3230, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3293, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2792, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([64, 1, 2577],"int32"), list[1,13,1,], )
paddle.Tensor.tile(Tensor([2885, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1829, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([4137, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1831, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1430, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2052, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2094, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([4077, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([3468, 1, 80],"float32"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([2085, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([3048, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([4094, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([2777, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1473, 1, 80],"float32"), list[1,19,1,], )
paddle.Tensor.tile(Tensor([2950, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1623, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3864, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3011, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1456, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([1395, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1516, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1643, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2350, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3055, 1, 80],"float32"), list[1,13,1,], )
paddle.Tensor.tile(Tensor([2278, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([2304, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2300, 1, 80],"float32"), list[1,52,1,], )
paddle.Tensor.tile(Tensor([3145, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([2324, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2550, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2233, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([1535, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1547, 1, 80],"float32"), list[1,13,1,], )
paddle.Tensor.tile(Tensor([2179, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([3582, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([1781, 1, 80],"float32"), list[1,16,1,], )
paddle.Tensor.tile(Tensor([1298, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1268, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([1436, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([2266, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2913, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([1575, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1958, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([1936, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([3706, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1665, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2611, 1, 80],"float32"), list[1,20,1,], )
paddle.Tensor.tile(Tensor([3060, 1, 80],"float32"), list[1,21,1,], )
paddle.Tensor.tile(Tensor([2452, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1888, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([3400, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([1859, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([1367, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1439, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1990, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([1815, 1, 80],"float32"), list[1,13,1,], )
paddle.Tensor.tile(Tensor([4663, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3417, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([2171, 1, 80],"float32"), list[1,20,1,], )
paddle.Tensor.tile(Tensor([3434, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([2347, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([2813, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3180, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([16, 1, 12096],"int32"), list[1,21,1,], )
paddle.Tensor.tile(Tensor([1938, 1, 80],"float32"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([2128, 1, 80],"float32"), list[1,15,1,], )
paddle.Tensor.tile(Tensor([2308, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([3223, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2615, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([4429, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2379, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([3793, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2014, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1414, 1, 80],"float32"), list[1,19,1,], )
paddle.Tensor.tile(Tensor([1481, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([1689, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3969, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1983, 1, 80],"float32"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([2585, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([3303, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([1408, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([3661, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([1558, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([1711, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([1324, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2901, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2424, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3012, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([4035, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2616, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([3919, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2549, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([16, 1, 11109],"int32"), list[1,21,1,], )
paddle.Tensor.tile(Tensor([1333, 1, 80],"float32"), list[1,32,1,], )
paddle.Tensor.tile(Tensor([3565, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([1569, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([1675, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([2526, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2030, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2550, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1997, 1, 80],"float32"), list[1,13,1,], )
paddle.Tensor.tile(Tensor([1624, 1, 80],"float32"), list[1,6,1,], )
paddle.Tensor.tile(Tensor([2100, 1, 80],"float32"), list[1,10,1,], )
paddle.Tensor.tile(Tensor([3038, 1, 80],"float32"), list[1,15,1,], )
paddle.Tensor.tile(Tensor([3151, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1411, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1430, 1, 80],"float32"), list[1,8,1,], )
paddle.Tensor.tile(Tensor([2680, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([1629, 1, 80],"float32"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([1616, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([3497, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([3798, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([1294, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([4014, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tile(Tensor([2818, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([1546, 1, 80],"float32"), list[1,33,1,], )
paddle.Tensor.tile(Tensor([3414, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2703, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([2781, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([2755, 1, 80],"float32"), list[1,24,1,], )
paddle.Tensor.tile(Tensor([3597, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([1625, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([2220, 1, 80],"float32"), list[1,4,1,], )
paddle.Tensor.tile(Tensor([2045, 1, 80],"float32"), list[1,9,1,], )
paddle.Tensor.tile(Tensor([3291, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([4392, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([3177, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([1571, 1, 80],"float32"), list[1,5,1,], )
paddle.Tensor.tile(Tensor([4160, 1, 80],"float32"), list[1,2,1,], )
paddle.Tensor.tile(Tensor([2916, 1, 80],"float32"), list[1,21,1,], )
paddle.Tensor.tile(Tensor([3200, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1934, 1, 80],"float32"), list[1,25,1,], )
paddle.Tensor.tile(Tensor([1693, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([2447, 1, 80],"float32"), list[1,17,1,], )
paddle.Tensor.tile(Tensor([1924, 1, 80],"float32"), list[1,1,1,], )
paddle.Tensor.tile(Tensor([2097, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1430, 1, 80],"float32"), list[1,16,1,], )
paddle.Tensor.tile(Tensor([1689, 1, 80],"float32"), list[1,16,1,], )
paddle.Tensor.tile(Tensor([2857, 1, 80],"float32"), list[1,12,1,], )
paddle.Tensor.tile(Tensor([1773, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([1, 256, 256, 2],"float32"), list[4,1,1,1,], )
paddle.Tensor.tile(Tensor([2990, 1, 80],"float32"), list[1,3,1,], )
paddle.Tensor.tile(Tensor([4578, 1, 80],"float32"), list[1,7,1,], )
paddle.Tensor.tolist(Tensor([11, 25, 32, 43],"int64"), )
paddle.Tensor.tolist(Tensor([5392],"bool"), )
paddle.Tensor.tolist(Tensor([1436],"bool"), )
paddle.Tensor.tolist(Tensor([5514],"bool"), )
paddle.Tensor.topk(Tensor([128, 1000],"float32"), 5, 1, True, True, )
paddle.Tensor.topk(Tensor([1024, 8, 48],"float32"), 2, axis=-1, )
paddle.Tensor.topk(Tensor([1, 1000],"float32"), 5, 1, True, True, )
paddle.Tensor.transpose(Tensor([2, 441, 512],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 8, 61, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 8, 57, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 40, 6400],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([9, 63, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([90, 32, 11, 11],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([1, 197, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 163, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 8, 70, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 79, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 80, 784],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 8, 150, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 1024, 289],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([6, 139, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 165, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 97, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 4116, 55],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 10, 50176],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8400, 52],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 5, 1024, 32],"float32"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([2, 3024, 51],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([192, 2, 16, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 189, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([6, 34, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([5, 8, 98, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 4116, 80],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 117, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([8, 8, 243, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([1, 68, 1600],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 12096, 10],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([7, 42, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([30, 8, 42, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 3024, 45],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 9261, 44],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([4, 4, 9216],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 6069, 4],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 130, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 11109, 45],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 6069, 13],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 151, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 2100, 24],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 4725, 56],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([30, 8, 113, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([1, 496, 8, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([1, 8, 229, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([7, 132, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([5, 43, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([7, 158, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 55, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 4725, 57],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([48, 32, 11, 11],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([8, 244, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 7581, 25],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([7, 8, 111, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([6, 8, 164, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([9, 8, 100, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8, 225, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([7, 152, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([30, 8, 19, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([3, 400, 300],"float32"), tuple(2,0,1,), )
paddle.Tensor.transpose(Tensor([9, 60, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 8, 136, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([3, 67, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([32, 144, 1, 64],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 39, 34],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([10, 23, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([87, 4, 2, 19, 2, 19],"float32"), perm=list[0,1,3,5,2,4,], )
paddle.Tensor.transpose(Tensor([8, 68, 19, 18],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([7, 155, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([5, 125, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([6, 167, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 145, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([16, 80, 121],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([5, 8, 125, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 142, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 68, 3600],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([30, 62, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([1, 246, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8400, 31],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 48384, 11],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 169, 4, 256],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([9, 32, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([6, 8, 180, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 4116, 38],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([392, 392, 3],"float32"), list[2,0,1,], )
paddle.Tensor.transpose(Tensor([6, 54, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([5, 65, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 8, 195, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 2100, 119],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([30, 5, 3, 8, 32],"float32"), list[2,0,3,1,4,], )
paddle.Tensor.transpose(Tensor([2, 6069, 48],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 3, 85, 19, 19],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([5, 65, 3, 8, 32],"float32"), list[2,0,3,1,4,], )
paddle.Tensor.transpose(Tensor([4, 8, 104, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 86, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 40, 3136],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 126, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([64, 80, 64],"float16"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 33600, 9],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 8, 105, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 5376, 64],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([7, 8, 124, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8, 120, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([2, 4116, 29],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 6069, 33],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 3, 9, 32, 32],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([2, 7581, 27],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([16, 68, 484],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([7, 8, 114, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 172, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 9261, 6],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 149, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8, 143, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 80, 361],"float16"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([4, 4, 134, 128],"float16"), list[2,0,1,3,], )
paddle.Tensor.transpose(Tensor([30, 256, 68],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([9, 8, 57, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([3, 8, 103, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([9, 57, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 68, 1600],"float16"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 6069, 8],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 484, 512],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 268, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([1, 24276, 33],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 8, 137, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 85, 3, 8, 32],"float32"), list[2,0,3,1,4,], )
paddle.Tensor.transpose(Tensor([8, 51, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([7, 8, 109, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 4725, 16],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 67, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([6, 141, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 80, 21, 20],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 35, 41],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([48, 80, 14, 14],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([12, 4, 6, 19, 34],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([7, 153, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([9, 8, 47, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 171, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 68, 26, 42],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([2, 2541, 58],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 145, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([2, 5376, 28],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 289, 8, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 184, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8, 277, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([5, 8, 126, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 68, 34, 38],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([2, 492, 8, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([9, 256, 52],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([7, 47, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 5376, 88],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 21, 20],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([5, 8, 100, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 68, 484],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 324, 512],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([64, 7, 7, 256],"float32"), list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([3, 147, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 12096, 16],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 121, 512],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 784],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 8, 1024, 16],"float16"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 48, 144, 32],"float32"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([197, 197, 12],"float32"), list[2,0,1,], )
paddle.Tensor.transpose(Tensor([6, 8, 97, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8, 197, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 5376, 58],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 4725, 7],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([6, 8, 77, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 3024, 20],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 74, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([9, 8, 78, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 80, 19, 20],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([96, 8, 40, 15],"float32"), tuple(0,1,3,2,), )
paddle.Tensor.transpose(Tensor([30, 8, 34, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 68, 484],"float16"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 1251, 257],"complex128"), perm=list[0,2,1,], )
paddle.Tensor.transpose(Tensor([16, 4725, 7],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 60, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([7, 8, 52, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 217, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([3, 102, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 3549, 48],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([5, 8, 119, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 81, 3, 8, 32],"float32"), list[2,0,3,1,4,], )
paddle.Tensor.transpose(Tensor([10, 8, 171, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([1, 10, 16384],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([4, 8, 62, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 160, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([9, 69, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 3, 9, 56, 56],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([64, 80, 5, 5],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([6, 181, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 361, 1024],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 992, 320],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 361, 4, 256],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 140, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 12096, 31],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([6, 8, 149, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 3549, 24],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 256, 96],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([4, 8, 106, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([16, 2100, 11],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 256, 1024],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([9, 82, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([6, 69, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([1, 8, 241, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 68, 33, 38],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([6, 145, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 8, 71, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 68, 2704],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 8, 37, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8400, 15],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([9, 8, 115, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([1, 24, 18, 256],"float32"), tuple(0,3,1,2,), )
paddle.Tensor.transpose(Tensor([3, 280, 350],"float32"), tuple(2,0,1,), )
paddle.Tensor.transpose(Tensor([3, 8, 87, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([7, 40, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 3549, 53],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 2, 3968, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 8, 121, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 512, 400],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 44, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 3, 10, 34, 34],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([1, 44436, 18],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([64, 32, 18, 18],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([2, 8400, 11],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 16, 9, 7, 768],"float16"), list[0,4,1,2,3,], )
paddle.Tensor.transpose(Tensor([2, 3549, 61],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([3, 8, 76, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 80, 38, 37],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([30, 8, 47, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8400, 20],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([3, 8, 154, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([5, 8, 103, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([9, 8, 37, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([30, 8, 54, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 158, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([5, 141, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 7581, 60],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 256, 64],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8400, 56],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 8400, 4, 17],"float32"), list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([2, 12096, 23],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([6, 8, 93, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([5, 45, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([128, 49, 2, 1, 64],"float32"), list[2,0,3,1,4,], )
paddle.Tensor.transpose(Tensor([8, 2541, 10],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([7, 8, 110, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([30, 256, 104],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([9, 47, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([9, 8, 102, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 8, 103, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 16, 257, 88],"float16"), perm=list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 4116, 24],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 6069, 13],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 213, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([4, 8, 180, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 137, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 124, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([7, 156, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([7, 125, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 8, 58, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 6804, 59],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 34, 38],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([2, 11, 68, 68],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([10, 8, 20, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([32, 32, 12, 12],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([7, 8, 92, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 256, 400],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([6, 67, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([1, 196, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 80, 41, 38],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([8, 164, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 109, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 5376, 83],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 93, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([2, 8, 151, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8, 183, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 3549, 36],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 211, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([6, 8, 150, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 4116, 20],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 206, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([9, 8, 25, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 8, 108, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 10164, 43],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 80, 20, 19],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([1, 8, 249, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([98, 8, 128],"float16"), list[1,2,0,], )
paddle.Tensor.transpose(Tensor([7, 8, 132, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 179, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([16, 4725, 12],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([4, 134, 512],"float16"), list[1,0,2,], )
paddle.Tensor.transpose(Tensor([5, 8, 68, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8, 98, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 4725, 82],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 169, 3, 8, 32],"float32"), list[2,0,3,1,4,], )
paddle.Tensor.transpose(Tensor([2, 133, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 9261, 11],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([30, 256, 40],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 42, 42],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([7, 126, 1024],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 300, 8, 32],"float16"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([1, 216, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 10164, 13],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([32, 80, 8, 8],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([2048, 1, 8, 8],"float32"), tuple(0,2,3,1,), )
paddle.Tensor.transpose(Tensor([8, 5376, 5],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 151, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([8, 3024, 21],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 3549, 77],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 5376, 22],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 3024, 61],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([30, 8, 33, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([7, 8, 82, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([9, 56, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 7581, 4, 10],"float32"), list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([8, 6804, 16],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 284, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([8, 80, 38, 40],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([7, 122, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 8, 170, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([6, 8, 98, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 8, 94, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 3549, 130],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 8, 36, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8, 219, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([7, 8, 103, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 8, 51, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 8, 56, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([7, 32, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([7, 81, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 7581, 10],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 8, 76, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 80, 576],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([5, 8, 123, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 441, 4, 128],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([5, 8, 105, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 8, 60, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 225, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([7, 8, 152, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 32, 7056],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([99, 2, 4, 128],"float16"), list[1,0,2,3,], )
paddle.Tensor.transpose(Tensor([3, 95, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 1280, 128],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([82, 9, 64, 4],"float32"), perm=list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([4, 12, 320, 32],"float32"), tuple(0,2,1,3,), )
paddle.Tensor.transpose(Tensor([8, 3, 85, 16, 16],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([2, 8400, 46],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([6, 80, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 80, 33, 38],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([1, 32, 56, 56],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([8, 2100, 30],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 132, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([9, 31, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 141, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([6, 8, 177, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 68, 400],"float16"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([13, 2, 1024, 12],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 3024, 12],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8400, 42],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 33, 42],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([64, 32, 22, 22],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([4, 32, 900],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([4, 77, 3, 8, 32],"float32"), list[2,0,3,1,4,], )
paddle.Tensor.transpose(Tensor([8, 203, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([134, 16, 128],"float16"), list[1,2,0,], )
paddle.Tensor.transpose(Tensor([8, 80, 26, 41],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([2, 8400, 55],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([3, 8, 130, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([6, 121, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 6804, 17],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 400, 512],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([10, 8, 97, 32],"float32"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([1, 768, 16, 8, 7],"float32"), list[0,2,3,4,1,], )
paddle.Tensor.transpose(Tensor([256, 9, 64, 4],"float32"), perm=list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([4, 8, 114, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([5, 105, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8, 181, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 7581, 5],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 193, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 80, 13, 21],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([6, 79, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 5376, 71],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 206, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 111, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([52, 30, 4, 64],"float32"), perm=list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([5, 8, 93, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 10164, 30],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([6, 39, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([98, 8, 128],"float16"), list[1,0,2,], )
paddle.Tensor.transpose(Tensor([8, 80, 13, 19],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([7, 8, 46, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 8, 139, 96],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([8, 7581, 15],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 8, 184, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 111, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 8, 131, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([10, 8, 49, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([4, 100, 8, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.unbind(Tensor([1, 60, 30, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 385, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 65, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 6, 8, 57, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 261, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 73, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 21, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 21, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 17, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 2, 8, 121, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 5, 8, 145, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 2, 8, 85, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 5, 8, 33, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 29, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 8, 8, 33, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 13, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 2, 8, 161, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 5, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 37, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 3, 8, 105, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 25, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 37, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 81, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 29, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 2, 8, 81, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 229, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 4, 8, 61, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 217, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 2, 8, 129, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 7, 8, 153, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 169, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 57, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 9, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 17, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 4, 8, 77, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 5, 8, 65, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 41, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 89, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 9, 8, 53, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 105, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 25, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 6, 8, 97, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 129, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 6, 8, 45, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 49, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 241, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 4, 8, 37, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 3, 8, 169, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 97, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 9, 8, 89, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([1, 16, 256, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 157, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 33, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 7, 8, 49, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 33, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 8, 8, 121, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 41, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 145, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 2, 8, 181, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 6, 8, 25, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 8, 8, 113, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 4, 8, 13, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 65, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 69, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([1, 60, 10, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 4, 8, 25, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 2, 8, 17, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([2, 3, 256, 32, 2],"float16"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 85, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 4, 8, 5, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 2, 8, 41, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 3, 8, 21, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 9, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([1, 60, 20, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 6, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 2, 8, 9, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 113, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 3, 8, 9, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 2, 8, 57, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([2, 3, 256, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 97, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 73, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([1, 60, 4, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 109, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 13, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 61, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([1, 60, 2, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 28, 28],"float32"), axis=-3, )
paddle.Tensor.unique(Tensor([36840],"int64"), )
paddle.Tensor.unique(Tensor([38393],"int64"), )
paddle.Tensor.unique(Tensor([6391],"int64"), )
paddle.Tensor.unique(Tensor([8571],"int64"), )
paddle.Tensor.unsqueeze(Tensor([3379, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2162, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2839, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4570, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([9088, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1523, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1768, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3824, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([5120, 28],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2102, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4693, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2705, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([14848, 28],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2845, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2331, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([20480, 28],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([6122, 32],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([4735, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4293, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([10240, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([4359, 32],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([4095, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3513, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1669, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1595, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3991, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1527, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2880, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3487, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4718, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4774, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1684, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3759, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2075, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([5120, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1993, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2366, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3943, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1477, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3957, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2164, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([7020, 32],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([3412, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2229, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3337, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1655, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1604, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([9344, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([3017, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3916, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3144, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1761, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2498, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2283, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4678, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2210, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4, 304, 96],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([1414, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2295, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3201, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2606, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2924, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2078, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2754, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2089, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1343, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2677, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2302, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([5824, 32],"bfloat16"), 2, )
paddle.Tensor.unsqueeze(Tensor([48, 1, 144, 144],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2073, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4190, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3324, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 6804],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1428, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3294, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1328, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 10164, 4],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1955, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2039, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 7581, 4],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2731, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1850, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([8, 5808, 4],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([4033, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2223, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1287, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2502, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2367, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4261, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3952, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2977, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2384, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([70644, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([3314, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([8, 512, 128],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([11776, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1555, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2738, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1459, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2886, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4256, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4569, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([5504, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([3331, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2824, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2755, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1311, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([15232, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2855, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1519, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2218, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([9856, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1735, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4439, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([17408, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2872, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2411, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3751, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2701, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2388, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2139, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3882, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2492, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3964, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2742, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2517, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2126, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2138, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 8400],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([2129, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3399, 32],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([2757, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([6, 392, 392],"float16"), 0, )
paddle.Tensor.unsqueeze(Tensor([3029, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([6400, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([4203, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 4096, 128],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([3221, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1314, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1609, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2526, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2358, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4391, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1928, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3320, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3528, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2241, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3, 368, 416],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1352, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2551, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3, 392, 392],"float16"), 0, )
paddle.Tensor.unsqueeze(Tensor([3504, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3239, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1653, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1713, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2516, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1613, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1465, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3512, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2956, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2313, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([106496],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([3910, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4062, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2386, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1820, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3418, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3962, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4196, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3949, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1475, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4561, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2917, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2365, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3990, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 25500],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3781, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4747, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2418, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2651, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2740, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1621, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3003, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3987, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3888, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([56784, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([1409, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3448, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2084, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3585, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4427, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2033, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 2048, 96],"float16"), 2, )
paddle.Tensor.unsqueeze(Tensor([1438, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4092, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4703, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3135, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2604, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2772, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16256, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1875, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2174, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3942, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3672, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1952, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1464, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 6804],"bool"), -1, )
paddle.Tensor.unsqueeze(Tensor([3402, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1483, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1616, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1876, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4708, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3812, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1978, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3096, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2503, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2389, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2040, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3652, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1301, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1280, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4051, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([9216, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2076, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([6935, 32],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([4, 9261, 4],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1567, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([5927, 32],"bfloat16"), 2, )
paddle.Tensor.unsqueeze(Tensor([3787, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2345, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1251, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2311, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4104, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3386, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2173, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4268, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2965, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([5818, 32],"bfloat16"), 2, )
paddle.Tensor.unsqueeze(Tensor([3218, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([8, 4332, 4],"float32"), 2, )
paddle.Tensor.unsqueeze(Tensor([3417, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([8, 11109, 4],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2789, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2986, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4584, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2601, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3568, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2884, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2871, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4083, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([9216, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2390, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2343, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2220, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1821, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([194176],"float64"), -1, )
paddle.Tensor.unsqueeze(Tensor([3434, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3831, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4432, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3099, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2833, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 11109],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3743, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([128000],"float64"), -1, )
paddle.Tensor.unsqueeze(Tensor([3477, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4144, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2565, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1863, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([5741, 32],"bfloat16"), 2, )
paddle.Tensor.unsqueeze(Tensor([1349, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3389, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3556, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4689, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2560, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([3725, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2918, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4487, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3968, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3670, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4405, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3383, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([6248, 32],"int32"), -1, )
paddle.Tensor.unsqueeze(Tensor([2202, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1503, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1694, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([17280, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([3775, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2842, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2979, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2805, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1278, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4156, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 4725, 4],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4270, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1636, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3397, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3140, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2574, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1842, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2186, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4627, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2426, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1322, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3628, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1420, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2294, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2471, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2026, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3034, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1317, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2521, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3610, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3310, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4424, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3036, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([48, 1, 49, 49],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2577, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2377, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2476, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2992, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2629, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2548, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3112, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 11109],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([7680, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([3347, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1568, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1718, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2155, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4352, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2490, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1721, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1357, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4452, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1914, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1728, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4745, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2399, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1700, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1422, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1531, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4179, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2642, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([12, 144, 144],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3178, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4098, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1823, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1720, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([16, 3024, 4],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([14976, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2027, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1958, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2686, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3594, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2803, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3934, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([12288, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([136448],"float64"), -1, )
paddle.Tensor.unsqueeze(Tensor([2709, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4072, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1650, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1579, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4199, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1970, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3277, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1610, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([188160],"float64"), -1, )
paddle.Tensor.unsqueeze(Tensor([2697, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1670, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2427, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3330, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4496, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([5787, 32],"bfloat16"), 2, )
paddle.Tensor.unsqueeze(Tensor([3490, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2119, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2692, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3527, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([194560],"float64"), -1, )
paddle.Tensor.unsqueeze(Tensor([1543, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4118, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3852, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3508, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1793, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1954, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1518, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2582, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1810, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1598, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([209664],"float64"), -1, )
paddle.Tensor.unsqueeze(Tensor([3589, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2912, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3832, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1634, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2350, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3188, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2053, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1549, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([3692, 80],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([4166, 80],"float32"), 1, )
paddle.Tensor.var(Tensor([50000, 2],"float32"), axis=0, )
paddle.Tensor.var(Tensor([1000, 784],"float32"), axis=0, )
paddle.Tensor.var(Tensor([50000, 2, 3],"float64"), axis=0, )
paddle.Tensor.var(Tensor([100000, 4],"float64"), axis=0, )
paddle.Tensor.var(Tensor([10000, 2, 3],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000],"float32"), axis=0, )
paddle.Tensor.var(Tensor([5000, 2],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000, 2, 3],"float64"), axis=0, )
paddle.Tensor.var(Tensor([5000, 1],"float64"), axis=0, )
paddle.Tensor.var(Tensor([5000],"float64"), axis=0, )
paddle.Tensor.zero_(Tensor([1280, 320],"float32"), )
paddle.Tensor.zero_(Tensor([192, 896],"float32"), )
paddle.Tensor.zero_(Tensor([147456],"float16"), )
paddle.Tensor.zero_(Tensor([160, 1280],"float32"), )
paddle.Tensor.zero_(Tensor([7168, 64],"float32"), )
paddle.Tensor.zero_(Tensor([8192, 64],"float32"), )
paddle.Tensor.zero_(Tensor([256, 1280],"float32"), )
paddle.Tensor.zero_(Tensor([12160],"float32"), )
paddle.Tensor.zero_(Tensor([12800],"float32"), )
paddle.Tensor.zero_(Tensor([32, 896],"float32"), )
paddle.Tensor.zero_(Tensor([36864],"float32"), )
paddle.Tensor.zero_(Tensor([12288],"float16"), )
paddle.Tensor.zero_(Tensor([12352],"float32"), )
paddle.Tensor.zero_(Tensor([14, 64, 16],"float32"), )
paddle.Tensor.zero_(Tensor([73728],"float32"), )
paddle.Tensor.zero_(Tensor([12416],"float16"), )
paddle.Tensor.zero_(Tensor([8, 7168],"float32"), )
paddle.Tensor.zero_(Tensor([32, 32],"float16"), )
paddle.Tensor.zero_(Tensor([32, 32],"float32"), )
paddle.Tensor.zero_(Tensor([1280],"float32"), )
paddle.Tensor.zero_(Tensor([7168],"float32"), )
paddle.Tensor.zero_(x=Tensor([10, 16, 16],"float64"), )
paddle.Tensor.zero_(Tensor([32, 32],"int64"), )
paddle.Tensor.zero_(Tensor([14, 64, 4],"float32"), )
paddle.Tensor.zero_(Tensor([8192],"float32"), )
paddle.Tensor.zero_(Tensor([8192],"float32"), )
paddle.Tensor.zero_(Tensor([1152],"float32"), )
paddle.Tensor.zero_(Tensor([6144],"float16"), )
paddle.Tensor.zero_(Tensor([6144],"float32"), )
paddle.Tensor.zero_(Tensor([32, 32],"int32"), )
paddle.Tensor.zero_(Tensor([32, 32],"float64"), )
paddle.abs(Tensor([858907],"float32"), )
paddle.abs(Tensor([891361],"float32"), )
paddle.abs(Tensor([900266],"float32"), )
paddle.abs(Tensor([873305],"float32"), )
paddle.abs(Tensor([8, 1, 128, 128],"float32"), )
paddle.abs(Tensor([778392],"float32"), )
paddle.abs(Tensor([823810],"float32"), )
paddle.abs(Tensor([841983],"float32"), )
paddle.abs(Tensor([968731],"float32"), )
paddle.abs(Tensor([889134],"float32"), )
paddle.abs(Tensor([912773],"float32"), )
paddle.abs(Tensor([815795],"float32"), )
paddle.abs(Tensor([779371],"float32"), )
paddle.abs(Tensor([944676],"float32"), )
paddle.abs(Tensor([735573],"float32"), )
paddle.abs(Tensor([887580],"float32"), )
paddle.abs(Tensor([915887],"float32"), )
paddle.abs(Tensor([805559],"float32"), )
paddle.abs(Tensor([920069],"float32"), )
paddle.abs(Tensor([727244],"float32"), )
paddle.abs(Tensor([855961],"float32"), )
paddle.abs(Tensor([906698],"float32"), )
paddle.abs(Tensor([913434],"float32"), )
paddle.abs(Tensor([962740],"float32"), )
paddle.abs(Tensor([788071],"float32"), )
paddle.abs(Tensor([920889],"float32"), )
paddle.abs(Tensor([973556],"float32"), )
paddle.abs(Tensor([978997],"float32"), )
paddle.abs(Tensor([940154],"float32"), )
paddle.abs(Tensor([849465],"float32"), )
paddle.abs(Tensor([8, 3, 68, 68, 1],"float32"), )
paddle.abs(Tensor([867608],"float32"), )
paddle.abs(Tensor([895846],"float32"), )
paddle.abs(Tensor([861519],"float32"), )
paddle.abs(Tensor([901559],"float32"), )
paddle.abs(Tensor([859169],"float32"), )
paddle.abs(Tensor([823140],"float32"), )
paddle.abs(Tensor([910109],"float32"), )
paddle.abs(Tensor([757880],"float32"), )
paddle.abs(Tensor([795938],"float32"), )
paddle.abs(Tensor([943234],"float32"), )
paddle.abs(Tensor([865633],"float32"), )
paddle.abs(Tensor([875320],"float32"), )
paddle.abs(Tensor([939644],"float32"), )
paddle.abs(Tensor([847066],"float32"), )
paddle.abs(Tensor([857697],"float32"), )
paddle.abs(Tensor([720537],"float32"), )
paddle.abs(Tensor([923373],"float32"), )
paddle.abs(Tensor([10, 200, 300],"int64"), )
paddle.abs(Tensor([856982],"float32"), )
paddle.abs(Tensor([768095],"float32"), )
paddle.abs(Tensor([961572],"float32"), )
paddle.abs(Tensor([817210],"float32"), )
paddle.abs(Tensor([944010],"float32"), )
paddle.abs(Tensor([740342],"float32"), )
paddle.abs(Tensor([994032],"float32"), )
paddle.abs(Tensor([917966],"float32"), )
paddle.abs(Tensor([899796],"float32"), )
paddle.abs(Tensor([945343],"float32"), )
paddle.abs(Tensor([883912],"float32"), )
paddle.abs(Tensor([990386],"float32"), )
paddle.abs(Tensor([884532],"float32"), )
paddle.abs(Tensor([854188],"float32"), )
paddle.abs(Tensor([717215],"float32"), )
paddle.abs(Tensor([922233],"float32"), )
paddle.abs(Tensor([894148],"float32"), )
paddle.abs(Tensor([989969],"float32"), )
paddle.abs(Tensor([849654],"float32"), )
paddle.abs(Tensor([957708],"float32"), )
paddle.abs(Tensor([859234],"float32"), )
paddle.abs(Tensor([762435],"float32"), )
paddle.abs(Tensor([905562],"float32"), )
paddle.abs(Tensor([792604],"float32"), )
paddle.abs(Tensor([888312],"float32"), )
paddle.abs(Tensor([830677],"float32"), )
paddle.abs(Tensor([985372],"float32"), )
paddle.abs(Tensor([938499],"float32"), )
paddle.abs(Tensor([961439],"float32"), )
paddle.abs(Tensor([831166],"float32"), )
paddle.abs(Tensor([970473],"float32"), )
paddle.abs(Tensor([936939],"float32"), )
paddle.abs(Tensor([912236],"float32"), )
paddle.abs(Tensor([782767],"float32"), )
paddle.abs(Tensor([870169],"float32"), )
paddle.abs(Tensor([808670],"float32"), )
paddle.abs(Tensor([868526],"float32"), )
paddle.abs(Tensor([950773],"float32"), )
paddle.abs(Tensor([889719],"float32"), )
paddle.abs(Tensor([951555],"float32"), )
paddle.abs(Tensor([931692],"float32"), )
paddle.abs(Tensor([797394],"float32"), )
paddle.abs(Tensor([835629],"float32"), )
paddle.abs(Tensor([822669],"float32"), )
paddle.abs(Tensor([907369],"float32"), )
paddle.abs(Tensor([895208],"float32"), )
paddle.abs(Tensor([913977],"float32"), )
paddle.abs(Tensor([953556],"float32"), )
paddle.abs(Tensor([16, 512, 8, 8],"float32"), )
paddle.abs(Tensor([851411],"float32"), )
paddle.abs(Tensor([910774],"float32"), )
paddle.abs(Tensor([899774],"float32"), )
paddle.abs(Tensor([883250],"float32"), )
paddle.abs(Tensor([860976],"float32"), )
paddle.abs(Tensor([967354],"float32"), )
paddle.abs(Tensor([837723],"float32"), )
paddle.abs(Tensor([929896],"float32"), )
paddle.abs(Tensor([844621],"float32"), )
paddle.abs(Tensor([890854],"float32"), )
paddle.abs(Tensor([916356],"float32"), )
paddle.abs(Tensor([994466],"float32"), )
paddle.abs(Tensor([930253],"float32"), )
paddle.abs(Tensor([914729],"float32"), )
paddle.abs(Tensor([966506],"float32"), )
paddle.abs(Tensor([952616],"float32"), )
paddle.abs(Tensor([912645],"float32"), )
paddle.abs(Tensor([760627],"float32"), )
paddle.abs(Tensor([790301],"float32"), )
paddle.abs(Tensor([843950],"float32"), )
paddle.abs(Tensor([10, 200, 300],"float32"), )
paddle.abs(Tensor([961515],"float32"), )
paddle.abs(Tensor([797269],"float32"), )
paddle.abs(Tensor([904945],"float32"), )
paddle.abs(Tensor([959543],"float32"), )
paddle.abs(Tensor([852880],"float32"), )
paddle.abs(Tensor([962872],"float32"), )
paddle.abs(Tensor([901715],"float32"), )
paddle.abs(Tensor([942039],"float32"), )
paddle.abs(Tensor([826111],"float32"), )
paddle.abs(Tensor([956773],"float32"), )
paddle.abs(Tensor([892196],"float32"), )
paddle.abs(Tensor([926920],"float32"), )
paddle.abs(Tensor([846218],"float32"), )
paddle.abs(Tensor([888943],"float32"), )
paddle.abs(Tensor([857322],"float32"), )
paddle.abs(Tensor([969511],"float32"), )
paddle.abs(Tensor([834803],"float32"), )
paddle.abs(Tensor([836381],"float32"), )
paddle.abs(Tensor([848715],"float32"), )
paddle.abs(Tensor([984839],"float32"), )
paddle.abs(Tensor([919706],"float32"), )
paddle.abs(Tensor([863412],"float32"), )
paddle.abs(Tensor([876793],"float32"), )
paddle.abs(Tensor([936297],"float32"), )
paddle.abs(Tensor([799391],"float32"), )
paddle.abs(Tensor([733968],"float32"), )
paddle.abs(Tensor([945157],"float32"), )
paddle.abs(Tensor([818851],"float32"), )
paddle.abs(Tensor([848984],"float32"), )
paddle.abs(Tensor([982059],"float32"), )
paddle.abs(Tensor([825644],"float32"), )
paddle.abs(Tensor([623489],"float32"), )
paddle.abs(Tensor([815298],"float32"), )
paddle.abs(Tensor([844320],"float32"), )
paddle.abs(Tensor([905529],"float32"), )
paddle.abs(Tensor([903681],"float32"), )
paddle.abs(Tensor([952036],"float32"), )
paddle.abs(Tensor([908506],"float32"), )
paddle.abs(Tensor([966472],"float32"), )
paddle.abs(Tensor([797922],"float32"), )
paddle.abs(Tensor([911146],"float32"), )
paddle.abs(Tensor([862614],"float32"), )
paddle.abs(Tensor([907504],"float32"), )
paddle.abs(Tensor([853688],"float32"), )
paddle.abs(Tensor([955839],"float32"), )
paddle.abs(Tensor([957711],"float32"), )
paddle.abs(Tensor([920264],"float32"), )
paddle.abs(Tensor([951834],"float32"), )
paddle.abs(Tensor([856799],"float32"), )
paddle.abs(Tensor([860575],"float32"), )
paddle.abs(Tensor([842436],"float32"), )
paddle.abs(Tensor([924579],"float32"), )
paddle.abs(Tensor([889717],"float32"), )
paddle.abs(Tensor([955230],"float32"), )
paddle.abs(Tensor([941057],"float32"), )
paddle.abs(Tensor([819889],"float32"), )
paddle.abs(Tensor([903007],"float32"), )
paddle.abs(Tensor([797058],"float32"), )
paddle.abs(Tensor([854532],"float32"), )
paddle.abs(Tensor([976558],"float32"), )
paddle.abs(Tensor([915856],"float32"), )
paddle.abs(Tensor([969848],"float32"), )
paddle.abs(Tensor([958699],"float32"), )
paddle.abs(Tensor([829317],"float32"), )
paddle.abs(Tensor([861660],"float32"), )
paddle.abs(x=Tensor([256, 722, 2, 2],"float32"), )
paddle.abs(Tensor([940340],"float32"), )
paddle.abs(Tensor([907038],"float32"), )
paddle.abs(Tensor([920160],"float32"), )
paddle.abs(Tensor([905200],"float32"), )
paddle.abs(Tensor([905414],"float32"), )
paddle.abs(Tensor([790972],"float32"), )
paddle.abs(Tensor([885007],"float32"), )
paddle.abs(Tensor([986661],"float32"), )
paddle.abs(Tensor([906544],"float32"), )
paddle.abs(Tensor([818738],"float32"), )
paddle.abs(Tensor([910889],"float32"), )
paddle.abs(Tensor([850906],"float32"), )
paddle.abs(Tensor([911980],"float32"), )
paddle.abs(Tensor([876184],"float32"), )
paddle.abs(Tensor([918389],"float32"), )
paddle.abs(Tensor([995434],"float32"), )
paddle.abs(Tensor([933492],"float32"), )
paddle.abs(Tensor([817975],"float32"), )
paddle.abs(Tensor([817632],"float32"), )
paddle.abs(Tensor([107136],"float32"), )
paddle.abs(Tensor([935575],"float32"), )
paddle.abs(Tensor([859740],"float32"), )
paddle.abs(Tensor([966455],"float32"), )
paddle.abs(Tensor([931719],"float32"), )
paddle.abs(Tensor([936705],"float32"), )
paddle.abs(Tensor([802335],"float32"), )
paddle.abs(Tensor([786202],"float32"), )
paddle.abs(Tensor([843279],"float32"), )
paddle.abs(Tensor([936685],"float32"), )
paddle.abs(Tensor([989643],"float32"), )
paddle.abs(Tensor([872239],"float32"), )
paddle.abs(Tensor([882579],"float32"), )
paddle.abs(Tensor([890649],"float32"), )
paddle.abs(Tensor([912939],"float32"), )
paddle.abs(Tensor([863823],"float32"), )
paddle.abs(Tensor([882763],"float32"), )
paddle.abs(Tensor([886248],"float32"), )
paddle.abs(Tensor([911929],"float32"), )
paddle.abs(Tensor([899302],"float32"), )
paddle.abs(Tensor([877310],"float32"), )
paddle.abs(Tensor([916011],"float32"), )
paddle.abs(Tensor([917479],"float32"), )
paddle.abs(Tensor([16, 256, 8, 8],"float32"), )
paddle.abs(x=Tensor([56, 722, 2, 2],"float32"), )
paddle.abs(Tensor([925403],"float32"), )
paddle.abs(Tensor([717326],"float32"), )
paddle.abs(Tensor([926271],"float32"), )
paddle.abs(Tensor([894537],"float32"), )
paddle.abs(Tensor([752583],"float32"), )
paddle.abs(Tensor([859626],"float32"), )
paddle.abs(Tensor([804701],"float32"), )
paddle.abs(Tensor([8, 1, 241, 241],"float32"), )
paddle.abs(Tensor([790612],"float32"), )
paddle.abs(Tensor([938269],"float32"), )
paddle.abs(Tensor([973822],"float32"), )
paddle.abs(Tensor([832970],"float32"), )
paddle.abs(Tensor([854590],"float32"), )
paddle.abs(Tensor([739406],"float32"), )
paddle.abs(Tensor([884750],"float32"), )
paddle.abs(Tensor([895230],"float32"), )
paddle.abs(Tensor([986636],"float32"), )
paddle.abs(Tensor([855080],"float32"), )
paddle.abs(Tensor([849325],"float32"), )
paddle.abs(Tensor([907233],"float32"), )
paddle.abs(Tensor([910472],"float32"), )
paddle.abs(Tensor([830606],"float32"), )
paddle.abs(Tensor([882837],"float32"), )
paddle.abs(Tensor([910594],"float32"), )
paddle.abs(Tensor([849937],"float32"), )
paddle.abs(Tensor([995655],"float32"), )
paddle.abs(Tensor([904294],"float32"), )
paddle.abs(Tensor([899981],"float32"), )
paddle.abs(Tensor([793034],"float32"), )
paddle.abs(Tensor([864278],"float32"), )
paddle.abs(Tensor([915353],"float32"), )
paddle.abs(Tensor([913677],"float32"), )
paddle.abs(Tensor([829772],"float32"), )
paddle.abs(Tensor([804637],"float32"), )
paddle.abs(Tensor([802823],"float32"), )
paddle.abs(Tensor([979079],"float32"), )
paddle.abs(Tensor([776379],"float32"), )
paddle.abs(Tensor([833202],"float32"), )
paddle.abs(Tensor([941840],"float32"), )
paddle.abs(Tensor([851669],"float32"), )
paddle.abs(Tensor([923067],"float32"), )
paddle.abs(Tensor([937631],"float32"), )
paddle.abs(Tensor([833791],"float32"), )
paddle.abs(Tensor([879741],"float32"), )
paddle.abs(Tensor([946295],"float32"), )
paddle.abs(Tensor([878743],"float32"), )
paddle.abs(Tensor([929142],"float32"), )
paddle.abs(Tensor([810566],"float32"), )
paddle.abs(Tensor([935486],"float32"), )
paddle.abs(Tensor([805830],"float32"), )
paddle.abs(Tensor([904357],"float32"), )
paddle.abs(Tensor([816181],"float32"), )
paddle.abs(Tensor([830827],"float32"), )
paddle.abs(Tensor([958929],"float32"), )
paddle.abs(Tensor([10, 200, 300],"int32"), )
paddle.abs(Tensor([894751],"float32"), )
paddle.abs(Tensor([860766],"float32"), )
paddle.abs(Tensor([743793],"float32"), )
paddle.abs(Tensor([8, 3, 76, 76, 1],"float32"), )
paddle.abs(Tensor([890392],"float32"), )
paddle.abs(Tensor([828406],"float32"), )
paddle.abs(Tensor([996211],"float32"), )
paddle.abs(Tensor([895990],"float32"), )
paddle.abs(Tensor([904000],"float32"), )
paddle.abs(Tensor([911663],"float32"), )
paddle.abs(Tensor([809481],"float32"), )
paddle.abs(Tensor([807549],"float32"), )
paddle.abs(Tensor([819339],"float32"), )
paddle.abs(Tensor([905197],"float32"), )
paddle.abs(Tensor([813649],"float32"), )
paddle.abs(Tensor([889653],"float32"), )
paddle.abs(Tensor([747492],"float32"), )
paddle.abs(Tensor([894988],"float32"), )
paddle.abs(Tensor([847507],"float32"), )
paddle.abs(Tensor([941063],"float32"), )
paddle.abs(Tensor([934407],"float32"), )
paddle.abs(Tensor([946452],"float32"), )
paddle.abs(Tensor([8, 3, 72, 72, 1],"float32"), )
paddle.abs(Tensor([792742],"float32"), )
paddle.abs(Tensor([1, 3, 256, 256],"float32"), )
paddle.abs(Tensor([924014],"float32"), )
paddle.abs(Tensor([908431],"float32"), )
paddle.abs(Tensor([885414],"float32"), )
paddle.abs(Tensor([970426],"float32"), )
paddle.abs(Tensor([842480],"float32"), )
paddle.abs(Tensor([803365],"float32"), )
paddle.abs(Tensor([932645],"float32"), )
paddle.abs(Tensor([838278],"float32"), )
paddle.abs(Tensor([878938],"float32"), )
paddle.abs(Tensor([835357],"float32"), )
paddle.abs(Tensor([944323],"float32"), )
paddle.abs(Tensor([961422],"float32"), )
paddle.abs(Tensor([865739],"float32"), )
paddle.abs(Tensor([931439],"float32"), )
paddle.abs(Tensor([874312],"float32"), )
paddle.abs(Tensor([942419],"float32"), )
paddle.abs(Tensor([840114],"float32"), )
paddle.abs(Tensor([866066],"float32"), )
paddle.abs(Tensor([16, 512, 4, 4],"float32"), )
paddle.abs(Tensor([926213],"float32"), )
paddle.abs(Tensor([985929],"float32"), )
paddle.abs(Tensor([920493],"float32"), )
paddle.abs(Tensor([963948],"float32"), )
paddle.abs(Tensor([947393],"float32"), )
paddle.abs(x=Tensor([100, 722, 2, 2],"float32"), )
paddle.abs(Tensor([867771],"float32"), )
paddle.abs(Tensor([964107],"float32"), )
paddle.abs(Tensor([802611],"float32"), )
paddle.abs(Tensor([959358],"float32"), )
paddle.abs(Tensor([943934],"float32"), )
paddle.abs(Tensor([957158],"float32"), )
paddle.abs(Tensor([871821],"float32"), )
paddle.abs(x=Tensor([87, 722, 2, 2],"float32"), )
paddle.abs(Tensor([827954],"float32"), )
paddle.abs(Tensor([900075],"float32"), )
paddle.abs(Tensor([940243],"float32"), )
paddle.abs(Tensor([904803],"float32"), )
paddle.abs(Tensor([16, 128, 16, 16],"float32"), )
paddle.abs(Tensor([917016],"float32"), )
paddle.abs(Tensor([958864],"float32"), )
paddle.abs(Tensor([888865],"float32"), )
paddle.abs(Tensor([724723],"float32"), )
paddle.abs(Tensor([913153],"float32"), )
paddle.abs(Tensor([979558],"float32"), )
paddle.abs(Tensor([929509],"float32"), )
paddle.abs(Tensor([944052],"float32"), )
paddle.abs(Tensor([968690],"float32"), )
paddle.abs(Tensor([860364],"float32"), )
paddle.abs(Tensor([961565],"float32"), )
paddle.abs(Tensor([905744],"float32"), )
paddle.abs(Tensor([990230],"float32"), )
paddle.abs(Tensor([834985],"float32"), )
paddle.abs(Tensor([947132],"float32"), )
paddle.abs(Tensor([946388],"float32"), )
paddle.abs(Tensor([871263],"float32"), )
paddle.abs(Tensor([881672],"float32"), )
paddle.abs(Tensor([885918],"float32"), )
paddle.abs(Tensor([943166],"float32"), )
paddle.abs(Tensor([941136],"float32"), )
paddle.abs(Tensor([898090],"float32"), )
paddle.abs(Tensor([718484],"float32"), )
paddle.abs(Tensor([919510],"float32"), )
paddle.abs(Tensor([898752],"float32"), )
paddle.abs(Tensor([821415],"float32"), )
paddle.abs(Tensor([2, 107136, 1],"float32"), )
paddle.abs(Tensor([923942],"float32"), )
paddle.abs(Tensor([980291],"float32"), )
paddle.abs(Tensor([932844],"float32"), )
paddle.abs(Tensor([972067],"float32"), )
paddle.abs(Tensor([926689],"float32"), )
paddle.abs(Tensor([763098],"float32"), )
paddle.abs(Tensor([917660],"float32"), )
paddle.abs(Tensor([925379],"float32"), )
paddle.abs(Tensor([822155],"float32"), )
paddle.abs(Tensor([885970],"float32"), )
paddle.abs(Tensor([897440],"float32"), )
paddle.abs(Tensor([725292],"float32"), )
paddle.abs(Tensor([822454],"float32"), )
paddle.abs(Tensor([865513],"float32"), )
paddle.abs(Tensor([809355],"float32"), )
paddle.abs(Tensor([971838],"float32"), )
paddle.abs(Tensor([902319],"float32"), )
paddle.abs(Tensor([958738],"float32"), )
paddle.abs(Tensor([965701],"float32"), )
paddle.abs(Tensor([992456],"float32"), )
paddle.abs(Tensor([791136],"float32"), )
paddle.abs(Tensor([908154],"float32"), )
paddle.abs(Tensor([915594],"float32"), )
paddle.abs(Tensor([965841],"float32"), )
paddle.abs(Tensor([920358],"float32"), )
paddle.abs(Tensor([1124, 32],"float32"), )
paddle.add(Tensor([2, 192, 14, 14],"float32"), Tensor([2, 192, 14, 14],"float32"), )
paddle.add(Tensor([8, 192, 18, 18],"float32"), Tensor([8, 192, 18, 18],"float32"), )
paddle.add(Tensor([4, 192, 22, 22],"float32"), Tensor([4, 192, 22, 22],"float32"), )
paddle.add(Tensor([2, 192, 20, 20],"float32"), Tensor([2, 192, 20, 20],"float32"), )
paddle.add(Tensor([2, 384, 12, 12],"float32"), Tensor([2, 384, 12, 12],"float32"), )
paddle.add(Tensor([8, 144, 20, 20],"float32"), Tensor([8, 144, 20, 20],"float32"), )
paddle.add(Tensor([8, 80, 22, 22],"float32"), Tensor([8, 80, 22, 22],"float32"), )
paddle.add(Tensor([4, 384, 8, 8],"float32"), Tensor([4, 384, 8, 8],"float32"), )
paddle.add(x=Tensor([64, 144, 7, 7],"float32"), y=Tensor([64, 144, 7, 7],"float32"), )
paddle.add(Tensor([2, 384, 17, 17],"float32"), Tensor([2, 384, 17, 17],"float32"), )
paddle.add(Tensor([2, 384, 18, 18],"float32"), Tensor([2, 384, 18, 18],"float32"), )
paddle.add(Tensor([4, 96, 36, 36],"float32"), Tensor([4, 96, 36, 36],"float32"), )
paddle.add(Tensor([2, 48, 60, 60],"float32"), Tensor([2, 48, 60, 60],"float32"), )
paddle.add(Tensor([2, 192, 22, 22],"float32"), Tensor([2, 192, 22, 22],"float32"), )
paddle.add(Tensor([18211, 30],"float32"), Tensor([1, 30],"float32"), )
paddle.add(x=Tensor([2, 1024, 15, 15],"float32"), y=Tensor([2, 1024, 15, 15],"float32"), )
paddle.add(Tensor([2, 192, 19, 19],"float32"), Tensor([2, 192, 19, 19],"float32"), )
paddle.add(Tensor([100000, 4],"complex128"), Tensor([4],"complex64"), name="Normal_sample", )
paddle.add(Tensor([8, 160, 13, 13],"float32"), Tensor([8, 160, 13, 13],"float32"), )
paddle.add(Tensor([4, 96, 34, 34],"float32"), Tensor([4, 96, 34, 34],"float32"), )
paddle.add(x=Tensor([1, 1024, 14, 14],"float32"), y=Tensor([1, 1024, 14, 14],"float32"), )
paddle.add(Tensor([1, 48, 80, 80],"float32"), Tensor([1, 48, 80, 80],"float32"), )
paddle.add(Tensor([2, 192, 24, 24],"float32"), Tensor([2, 192, 24, 24],"float32"), )
paddle.add(Tensor([6284, 20],"float32"), Tensor([1, 20],"float32"), )
paddle.add(Tensor([4, 160, 16, 32],"float32"), Tensor([4, 160, 16, 32],"float32"), )
paddle.add(Tensor([4, 192, 24, 24],"float32"), Tensor([4, 192, 24, 24],"float32"), )
paddle.add(Tensor([2, 48, 48, 48],"float32"), Tensor([2, 48, 48, 48],"float32"), )
paddle.add(Tensor([2, 384, 22, 22],"float32"), Tensor([2, 384, 22, 22],"float32"), )
paddle.add(Tensor([384, 8, 2, 80],"float32"), Tensor([384, 8, 2, 80],"float32"), )
paddle.add(Tensor([8, 160, 16, 16],"float32"), Tensor([8, 160, 16, 16],"float32"), )
paddle.add(Tensor([2, 192, 36, 36],"float32"), Tensor([2, 192, 36, 36],"float32"), )
paddle.add(Tensor([2, 96, 38, 38],"float32"), Tensor([2, 96, 38, 38],"float32"), )
paddle.add(x=Tensor([2, 1024, 10, 10],"float32"), y=Tensor([2, 1024, 10, 10],"float32"), )
paddle.add(Tensor([2, 96, 24, 24],"float32"), Tensor([2, 96, 24, 24],"float32"), )
paddle.add(Tensor([4, 192, 15, 15],"float32"), Tensor([4, 192, 15, 15],"float32"), )
paddle.add(Tensor([2, 96, 42, 42],"float32"), Tensor([2, 96, 42, 42],"float32"), )
paddle.add(Tensor([60, 40, 14, 14],"float32"), Tensor([60, 40, 14, 14],"float32"), )
paddle.add(Tensor([4, 96, 28, 28],"float32"), Tensor([4, 96, 28, 28],"float32"), )
paddle.add(x=Tensor([2, 1024, 14, 14],"float32"), y=Tensor([2, 1024, 14, 14],"float32"), )
paddle.add(Tensor([2, 16, 112, 112],"float32"), Tensor([2, 16, 112, 112],"float32"), )
paddle.add(Tensor([2, 96, 26, 26],"float32"), Tensor([2, 96, 26, 26],"float32"), )
paddle.add(Tensor([4, 256, 16, 16],"float32"), Tensor([4, 256, 16, 16],"float32"), )
paddle.add(Tensor([1, 96, 40, 40],"float32"), Tensor([1, 96, 40, 40],"float32"), )
paddle.add(Tensor([2, 48, 68, 68],"float32"), Tensor([2, 48, 68, 68],"float32"), )
paddle.add(Tensor([8, 192, 17, 17],"float32"), Tensor([8, 192, 17, 17],"float32"), )
paddle.add(x=Tensor([2, 2048, 7, 7],"float32"), y=Tensor([2, 2048, 7, 7],"float32"), )
paddle.add(Tensor([2, 192, 16, 16],"float32"), Tensor([2, 192, 16, 16],"float32"), )
paddle.add(Tensor([4, 192, 17, 17],"float32"), Tensor([4, 192, 17, 17],"float32"), )
paddle.add(Tensor([2, 96, 48, 48],"float32"), Tensor([2, 96, 48, 48],"float32"), )
paddle.add(Tensor([2, 96, 36, 36],"float32"), Tensor([2, 96, 36, 36],"float32"), )
paddle.add(Tensor([2, 192, 34, 34],"float32"), Tensor([2, 192, 34, 34],"float32"), )
paddle.add(Tensor([8, 192, 16, 16],"float32"), Tensor([8, 192, 16, 16],"float32"), )
paddle.add(Tensor([1, 80, 32, 64],"float32"), Tensor([1, 80, 32, 64],"float32"), )
paddle.add(Tensor([8, 384, 11, 11],"float32"), Tensor([8, 384, 11, 11],"float32"), )
paddle.add(x=Tensor([2, 1024, 11, 11],"float32"), y=Tensor([2, 1024, 11, 11],"float32"), )
paddle.add(Tensor([1, 24, 56, 56],"float32"), Tensor([1, 24, 56, 56],"float32"), )
paddle.add(Tensor([4, 96, 24, 24],"float32"), Tensor([4, 96, 24, 24],"float32"), )
paddle.add(Tensor([100000, 4],"float64"), Tensor([4],"float64"), name="Normal_sample", )
paddle.add(Tensor([4, 192, 21, 21],"float32"), Tensor([4, 192, 21, 21],"float32"), )
paddle.add(Tensor([2, 192, 26, 26],"float32"), Tensor([2, 192, 26, 26],"float32"), )
paddle.add(Tensor([2, 384, 11, 11],"float32"), Tensor([2, 384, 11, 11],"float32"), )
paddle.add(Tensor([4, 80, 30, 30],"float32"), Tensor([4, 80, 30, 30],"float32"), )
paddle.add(Tensor([8, 96, 24, 24],"float32"), Tensor([8, 96, 24, 24],"float32"), )
paddle.add(Tensor([8, 112, 22, 22],"float32"), Tensor([8, 112, 22, 22],"float32"), )
paddle.add(Tensor([8, 192, 13, 13],"float32"), Tensor([8, 192, 13, 13],"float32"), )
paddle.add(Tensor([8, 160, 18, 18],"float32"), Tensor([8, 160, 18, 18],"float32"), )
paddle.add(Tensor([2, 96, 44, 44],"float32"), Tensor([2, 96, 44, 44],"float32"), )
paddle.add(Tensor([2, 24, 56, 56],"float32"), Tensor([2, 24, 56, 56],"float32"), )
paddle.add(Tensor([2, 192, 17, 17],"float32"), Tensor([2, 192, 17, 17],"float32"), )
paddle.add(Tensor([1, 384, 32, 32],"float32"), Tensor([1, 384, 32, 32],"float32"), )
paddle.add(Tensor([2, 24, 80, 80],"float32"), Tensor([2, 24, 80, 80],"float32"), )
paddle.add(Tensor([8, 1, 512, 1, 40],"float32"), Tensor([8, 26, 512, 1, 1],"float32"), )
paddle.add(Tensor([4, 192, 20, 20],"float32"), Tensor([4, 192, 20, 20],"float32"), )
paddle.add(x=Tensor([2, 1024, 12, 12],"float32"), y=Tensor([2, 1024, 12, 12],"float32"), )
paddle.add(Tensor([1, 40, 64, 128],"float32"), Tensor([1, 40, 64, 128],"float32"), )
paddle.add(Tensor([2, 24, 88, 88],"float32"), Tensor([2, 24, 88, 88],"float32"), )
paddle.add(Tensor([60, 80, 7, 7],"float32"), Tensor([60, 80, 7, 7],"float32"), )
paddle.add(Tensor([64, 80, 7, 7],"float32"), Tensor([64, 80, 7, 7],"float32"), )
paddle.add(Tensor([2, 192, 15, 15],"float32"), Tensor([2, 192, 15, 15],"float32"), )
paddle.add(Tensor([4, 192, 16, 16],"float32"), Tensor([4, 192, 16, 16],"float32"), )
paddle.add(Tensor([4, 48, 48, 48],"float32"), Tensor([4, 48, 48, 48],"float32"), )
paddle.add(Tensor([1, 112, 32, 64],"float32"), Tensor([1, 112, 32, 64],"float32"), )
paddle.add(Tensor([2, 384, 13, 13],"float32"), Tensor([2, 384, 13, 13],"float32"), )
paddle.add(Tensor([4, 96, 26, 26],"float32"), Tensor([4, 96, 26, 26],"float32"), )
paddle.add(Tensor([2, 96, 28, 28],"float32"), Tensor([2, 96, 28, 28],"float32"), )
paddle.add(Tensor([8, 80, 26, 26],"float32"), Tensor([8, 80, 26, 26],"float32"), )
paddle.add(Tensor([8, 192, 14, 14],"float32"), Tensor([8, 192, 14, 14],"float32"), )
paddle.add(Tensor([4, 480, 16, 16],"float32"), Tensor([4, 480, 16, 16],"float32"), )
paddle.add(Tensor([4, 96, 20, 20],"float32"), Tensor([4, 96, 20, 20],"float32"), )
paddle.add(Tensor([2, 48, 72, 72],"float32"), Tensor([2, 48, 72, 72],"float32"), )
paddle.add(Tensor([2, 384, 20, 20],"float32"), Tensor([2, 384, 20, 20],"float32"), )
paddle.add(Tensor([8, 192, 15, 15],"float32"), Tensor([8, 192, 15, 15],"float32"), )
paddle.add(Tensor([6284, 25],"float32"), Tensor([1, 25],"float32"), )
paddle.add(Tensor([384, 8, 1, 80],"float32"), Tensor([384, 8, 1, 80],"float32"), )
paddle.add(Tensor([8, 192, 10, 10],"float32"), Tensor([8, 192, 10, 10],"float32"), )
paddle.add(x=Tensor([1, 2048, 7, 7],"float32"), y=Tensor([1, 2048, 7, 7],"float32"), )
paddle.add(Tensor([4, 192, 19, 19],"float32"), Tensor([4, 192, 19, 19],"float32"), )
paddle.add(Tensor([2, 96, 20, 20],"float32"), Tensor([2, 96, 20, 20],"float32"), )
paddle.add(Tensor([4, 96, 30, 30],"float32"), Tensor([4, 96, 30, 30],"float32"), )
paddle.add(Tensor([4, 192, 10, 10],"float32"), Tensor([4, 192, 10, 10],"float32"), )
paddle.add(Tensor([5000, 30],"float32"), Tensor([1, 30],"float32"), )
paddle.add(Tensor([4, 192, 12, 12],"float32"), Tensor([4, 192, 12, 12],"float32"), )
paddle.add(Tensor([2, 192, 12, 12],"float32"), Tensor([2, 192, 12, 12],"float32"), )
paddle.add(Tensor([2, 192, 23, 23],"float32"), Tensor([2, 192, 23, 23],"float32"), )
paddle.add(Tensor([8, 160, 19, 19],"float32"), Tensor([8, 160, 19, 19],"float32"), )
paddle.add(Tensor([8, 192, 11, 11],"float32"), Tensor([8, 192, 11, 11],"float32"), )
paddle.add(Tensor([2, 96, 30, 30],"float32"), Tensor([2, 96, 30, 30],"float32"), )
paddle.add(Tensor([2, 48, 40, 40],"float32"), Tensor([2, 48, 40, 40],"float32"), )
paddle.add(Tensor([2, 384, 19, 19],"float32"), Tensor([2, 384, 19, 19],"float32"), )
paddle.add(Tensor([128, 56, 7, 7],"float32"), Tensor([128, 56, 7, 7],"float32"), )
paddle.add(Tensor([1, 192, 20, 20],"float32"), Tensor([1, 192, 20, 20],"float32"), )
paddle.add(Tensor([4, 48, 40, 40],"float32"), Tensor([4, 48, 40, 40],"float32"), )
paddle.add(x=Tensor([2, 1024, 13, 13],"float32"), y=Tensor([2, 1024, 13, 13],"float32"), )
paddle.add(Tensor([4, 480, 11, 11],"float32"), Tensor([4, 480, 11, 11],"float32"), )
paddle.add(Tensor([2, 96, 32, 32],"float32"), Tensor([2, 96, 32, 32],"float32"), )
paddle.add(Tensor([2, 96, 46, 46],"float32"), Tensor([2, 96, 46, 46],"float32"), )
paddle.add(Tensor([2, 40, 28, 28],"float32"), Tensor([2, 40, 28, 28],"float32"), )
paddle.add(Tensor([2, 192, 32, 32],"float32"), Tensor([2, 192, 32, 32],"float32"), )
paddle.add(Tensor([2, 384, 16, 16],"float32"), Tensor([2, 384, 16, 16],"float32"), )
paddle.add(Tensor([4, 96, 22, 22],"float32"), Tensor([4, 96, 22, 22],"float32"), )
paddle.add(Tensor([2, 384, 10, 10],"float32"), Tensor([2, 384, 10, 10],"float32"), )
paddle.add(Tensor([8, 96, 22, 22],"float32"), Tensor([8, 96, 22, 22],"float32"), )
paddle.add(x=Tensor([2, 512, 20, 20],"float32"), y=Tensor([2, 512, 20, 20],"float32"), )
paddle.add(Tensor([4, 32, 28, 28],"float32"), Tensor([4, 32, 28, 28],"float32"), )
paddle.add(Tensor([4, 96, 14, 14],"float32"), Tensor([4, 96, 14, 14],"float32"), )
paddle.add(x=Tensor([2, 512, 22, 22],"float32"), y=Tensor([2, 512, 22, 22],"float32"), )
paddle.add(Tensor([2, 384, 24, 24],"float32"), Tensor([2, 384, 24, 24],"float32"), )
paddle.add(Tensor([1, 384, 36, 36],"float32"), Tensor([1, 384, 36, 36],"float32"), )
paddle.add(Tensor([2, 48, 64, 64],"float32"), Tensor([2, 48, 64, 64],"float32"), )
paddle.add(x=Tensor([1, 512, 28, 28],"float32"), y=Tensor([1, 512, 28, 28],"float32"), )
paddle.add(Tensor([1, 384, 34, 34],"float32"), Tensor([1, 384, 34, 34],"float32"), )
paddle.add(Tensor([4, 192, 23, 23],"float32"), Tensor([4, 192, 23, 23],"float32"), )
paddle.add(Tensor([256, 32, 7, 7],"float32"), Tensor([256, 32, 7, 7],"float32"), )
paddle.add(Tensor([2, 24, 96, 96],"float32"), Tensor([2, 24, 96, 96],"float32"), )
paddle.add(Tensor([2, 96, 34, 34],"float32"), Tensor([2, 96, 34, 34],"float32"), )
paddle.add(Tensor([8, 288, 11, 11],"float32"), Tensor([8, 288, 11, 11],"float32"), )
paddle.add(Tensor([8, 288, 14, 14],"float32"), Tensor([8, 288, 14, 14],"float32"), )
paddle.add(Tensor([4, 240, 22, 22],"float32"), Tensor([4, 240, 22, 22],"float32"), )
paddle.add(Tensor([4, 96, 32, 32],"float32"), Tensor([4, 96, 32, 32],"float32"), )
paddle.add(Tensor([2, 384, 14, 14],"float32"), Tensor([2, 384, 14, 14],"float32"), )
paddle.add(Tensor([512, 768],"float32"), Tensor([512, 768],"float32"), )
paddle.add(Tensor([4, 64, 14, 14],"float32"), Tensor([4, 64, 14, 14],"float32"), )
paddle.add(Tensor([2, 48, 56, 56],"float32"), Tensor([2, 48, 56, 56],"float32"), )
paddle.add(Tensor([4, 192, 18, 18],"float32"), Tensor([4, 192, 18, 18],"float32"), )
paddle.add(Tensor([4, 480, 14, 14],"float32"), Tensor([4, 480, 14, 14],"float32"), )
paddle.add(Tensor([4, 480, 15, 15],"float32"), Tensor([4, 480, 15, 15],"float32"), )
paddle.add(Tensor([2, 384, 23, 23],"float32"), Tensor([2, 384, 23, 23],"float32"), )
paddle.add(Tensor([4, 144, 12, 39],"float32"), Tensor([4, 144, 12, 39],"float32"), )
paddle.add(Tensor([6284, 30],"float32"), Tensor([1, 30],"float32"), )
paddle.add(Tensor([2, 192, 30, 30],"float32"), Tensor([2, 192, 30, 30],"float32"), )
paddle.add(Tensor([2, 96, 40, 40],"float32"), Tensor([2, 96, 40, 40],"float32"), )
paddle.add(Tensor([8, 160, 11, 11],"float32"), Tensor([8, 160, 11, 11],"float32"), )
paddle.add(Tensor([8, 288, 10, 10],"float32"), Tensor([8, 288, 10, 10],"float32"), )
paddle.add(Tensor([2, 48, 44, 44],"float32"), Tensor([2, 48, 44, 44],"float32"), )
paddle.add(Tensor([2, 96, 22, 22],"float32"), Tensor([2, 96, 22, 22],"float32"), )
paddle.add(Tensor([4, 192, 14, 14],"float32"), Tensor([4, 192, 14, 14],"float32"), )
paddle.add(Tensor([8, 192, 12, 12],"float32"), Tensor([8, 192, 12, 12],"float32"), )
paddle.add(Tensor([1, 160, 16, 32],"float32"), Tensor([1, 160, 16, 32],"float32"), )
paddle.add(Tensor([4, 256, 512],"float32"), Tensor([4, 1, 512],"float32"), )
paddle.add(Tensor([2, 192, 18, 18],"float32"), Tensor([2, 192, 18, 18],"float32"), )
paddle.add(Tensor([8, 96, 20, 20],"float32"), Tensor([8, 96, 20, 20],"float32"), )
paddle.add(Tensor([2, 192, 21, 21],"float32"), Tensor([2, 192, 21, 21],"float32"), )
paddle.add(Tensor([2, 192, 13, 13],"float32"), Tensor([2, 192, 13, 13],"float32"), )
paddle.add(Tensor([10000, 5, 3],"float64"), Tensor([5, 3],"float64"), name="Uniform_sample", )
paddle.add(Tensor([4, 24, 56, 56],"float32"), Tensor([4, 24, 56, 56],"float32"), )
paddle.add(Tensor([4, 192, 13, 13],"float32"), Tensor([4, 192, 13, 13],"float32"), )
paddle.add(Tensor([4, 48, 44, 44],"float32"), Tensor([4, 48, 44, 44],"float32"), )
paddle.add(Tensor([2, 384, 15, 15],"float32"), Tensor([2, 384, 15, 15],"float32"), )
paddle.add(Tensor([2, 192, 28, 28],"float32"), Tensor([2, 192, 28, 28],"float32"), )
paddle.add(Tensor([2, 48, 52, 52],"float32"), Tensor([2, 48, 52, 52],"float32"), )
paddle.add(Tensor([2, 384, 21, 21],"float32"), Tensor([2, 384, 21, 21],"float32"), )
paddle.add(Tensor([4, 192, 11, 11],"float32"), Tensor([4, 192, 11, 11],"float32"), )
paddle.add(Tensor([300, 40],"int64"), Tensor([300, 1],"int64"), )
paddle.add(Tensor([1, 160, 7, 7],"float32"), Tensor([1, 160, 7, 7],"float32"), )
paddle.add(Tensor([18211, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.add(Tensor([2, 192, 11, 11],"float32"), Tensor([2, 192, 11, 11],"float32"), )
paddle.add(Tensor([4, 160, 7, 7],"float32"), Tensor([4, 160, 7, 7],"float32"), )
paddle.add(Tensor([2, 112, 14, 14],"float32"), Tensor([2, 112, 14, 14],"float32"), )
paddle.add(Tensor([40],"int64"), Tensor([300, 40],"int64"), )
paddle.add(Tensor([8, 8, 2, 80],"float32"), Tensor([8, 8, 2, 80],"float32"), )
paddle.add(Tensor([4, 3, 1000],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([2, 48, 14, 14],"float32"), Tensor([2, 48, 14, 14],"float32"), )
paddle.add(Tensor([4, 3, 1, 1000],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([6, 8, 9, 18],"int64"), Tensor([6, 8, 9, 18],"int64"), )
paddle.add(Tensor([2, 96, 7, 7],"float32"), Tensor([2, 96, 7, 7],"float32"), )
paddle.add(Tensor([8, 8, 1, 80],"float32"), Tensor([8, 8, 1, 80],"float32"), )
paddle.add(Tensor([10000, 4],"float64"), Tensor([4],"float64"), name="Uniform_sample", )
paddle.add(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), )
paddle.add(Tensor([2885, 20],"float32"), Tensor([1, 20],"float32"), )
paddle.add(Tensor([4, 256, 16, 1],"float32"), Tensor([4, 256, 1, 16],"float32"), )
paddle.add(Tensor([1, 96, 14, 14],"float32"), Tensor([1, 96, 14, 14],"float32"), )
paddle.add(Tensor([2, 24, 28, 28],"float32"), Tensor([2, 24, 28, 28],"float32"), )
paddle.add(Tensor([1, 32, 28, 28],"float32"), Tensor([1, 32, 28, 28],"float32"), )
paddle.add(Tensor([256, 256],"float32"), Tensor([],"float32"), )
paddle.add(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), name=None, )
paddle.add(Tensor([300, 120],"int64"), Tensor([120],"int64"), )
paddle.add(Tensor([2, 160, 7, 7],"float32"), Tensor([2, 160, 7, 7],"float32"), )
paddle.add(Tensor([1200, 25],"float32"), Tensor([1, 25],"float32"), )
paddle.add(Tensor([1, 64, 14, 14],"float32"), Tensor([1, 64, 14, 14],"float32"), )
paddle.add(Tensor([4, 3, 1000],"float64"), Tensor([1000],"float64"), )
paddle.add(Tensor([1800, 20],"float32"), Tensor([1, 20],"float32"), )
paddle.add(Tensor([4, 384, 8, 1],"float32"), Tensor([4, 384, 1, 8],"float32"), )
paddle.add(Tensor([2, 40, 14, 14],"float32"), Tensor([2, 40, 14, 14],"float32"), )
paddle.add(Tensor([2, 192, 10, 10],"float32"), Tensor([2, 192, 10, 10],"float32"), )
paddle.add(Tensor([1291, 25],"float32"), Tensor([1, 25],"float32"), )
paddle.add(Tensor([3, 100, 120],"float64"), Tensor([3, 100, 120],"float64"), )
paddle.add(Tensor([4, 16, 16, 32],"float32"), Tensor([4, 16, 16, 32],"float32"), )
paddle.add(Tensor([2, 80, 14, 14],"float32"), Tensor([2, 80, 14, 14],"float32"), )
paddle.add(Tensor([100, 2, 3, 1],"float32"), Tensor([100, 2, 3, 1],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([64, 64],"float32"), Tensor([],"float32"), )
paddle.add(Tensor([13, 7, 99],"float32"), Tensor([99],"float32"), )
paddle.add(Tensor([100, 30],"float32"), Tensor([1, 30],"float32"), )
paddle.add(Tensor([1291, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.add(Tensor([6284, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.add(Tensor([5000, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.add(Tensor([100, 20],"float32"), Tensor([1, 20],"float32"), )
paddle.add(Tensor([1800, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.add(Tensor([2, 3, 1, 1000],"float32"), Tensor([1000],"float32"), )
paddle.add(Tensor([1, 96, 3, 3],"float32"), Tensor([1, 96, 3, 3],"float32"), )
paddle.add(Tensor([1200, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.add(Tensor([1, 24, 10, 10],"float32"), Tensor([1, 24, 10, 10],"float32"), )
paddle.add(Tensor([8, 1, 128],"float32"), Tensor([128],"float32"), )
paddle.add(Tensor([64, 32],"float32"), Tensor([],"float32"), )
paddle.add(Tensor([2885, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.add(Tensor([100, 2, 3],"float32"), Tensor([100, 2, 3],"float32"), name="Cauchy_sample", )
paddle.add(Tensor([50, 50],"float32"), Tensor([50, 50],"float32"), )
paddle.add(Tensor([8, 4, 100],"float64"), Tensor([8, 4, 1],"float64"), )
paddle.add(Tensor([100, 2, 3, 1],"float32"), Tensor([100, 2, 3, 1],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([100, 25],"float32"), Tensor([1, 25],"float32"), )
paddle.add(Tensor([4, 8, 32],"float32"), Tensor([4, 8, 1],"float32"), )
paddle.add(Tensor([40, 40],"float32"), Tensor([40, 40],"float32"), )
paddle.add(Tensor([40, 40],"float32"), Tensor([40, 40],"float32"), name=None, )
paddle.add(Tensor([1, 40, 5, 5],"float32"), Tensor([1, 40, 5, 5],"float32"), )
paddle.add(Tensor([16, 1, 128],"float32"), Tensor([128],"float32"), )
paddle.add(Tensor([2, 2, 8, 16],"float32"), Tensor([2, 2, 8, 16],"float32"), )
paddle.add(Tensor([1, 48, 5, 5],"float32"), Tensor([1, 48, 5, 5],"float32"), )
paddle.add(Tensor([2, 4, 8, 8],"float32"), Tensor([2, 4, 8, 8],"float32"), )
paddle.add(Tensor([100, 2, 3],"float32"), Tensor([100, 2, 3],"float32"), name="Cauchy_rsample", )
paddle.add(Tensor([200, 30],"float32"), Tensor([1, 30],"float32"), )
paddle.add_n(list[Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),Tensor([16, 256],"complex128"),], )
paddle.add_n(list[Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),Tensor([16, 256],"complex64"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),Tensor([16, 256],"float32"),], )
paddle.add_n(list[Tensor([5000, 1],"float32"),Tensor([5000, 1],"float32"),], )
paddle.add_n(list[Tensor([6284, 1],"float32"),Tensor([6284, 1],"float32"),], )
paddle.add_n(list[Tensor([18211, 1],"float32"),Tensor([18211, 1],"float32"),], )
paddle.add_n(list[Tensor([1800, 1],"float32"),Tensor([1800, 1],"float32"),], )
paddle.add_n(list[Tensor([1291, 1],"float32"),Tensor([1291, 1],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([2885, 1],"float32"),Tensor([2885, 1],"float32"),], )
paddle.add_n(list[Tensor([1200, 1],"float32"),Tensor([1200, 1],"float32"),], )
paddle.addmm(Tensor([30, 50],"float32"), Tensor([30, 80],"float32"), Tensor([80, 50],"float32"), alpha=1.0, beta=2.0, )
paddle.allclose(Tensor([30522, 8],"float32"), Tensor([30522, 8],"float32"), )
paddle.allclose(Tensor([13, 13, 32],"float32"), Tensor([13, 13, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([14, 7, 99],"float32"), Tensor([14, 7, 99],"float32"), atol=1e-05, )
paddle.allclose(Tensor([13, 13, 128],"float32"), Tensor([13, 13, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 32, 32],"float32"), Tensor([13, 32, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 9, 99],"float32"), Tensor([13, 9, 99],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([1124, 32],"float32"), Tensor([1124, 32],"float32"), )
paddle.allclose(Tensor([13, 32, 64],"float32"), Tensor([13, 32, 64],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([512, 32],"float32"), Tensor([512, 32],"float32"), )
paddle.allclose(Tensor([8, 3072],"float32"), Tensor([8, 3072],"float32"), )
paddle.allclose(Tensor([14, 7, 99],"float32"), Tensor([14, 7, 99],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([14, 7, 256],"float32"), Tensor([14, 7, 256],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 7, 99],"float32"), Tensor([13, 7, 99],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([3072, 8],"float32"), Tensor([3072, 8],"float32"), )
paddle.allclose(Tensor([14, 64, 16],"float32"), Tensor([14, 64, 16],"float32"), atol=1e-05, )
paddle.allclose(Tensor([4, 768],"float32"), Tensor([4, 768],"float32"), )
paddle.allclose(Tensor([16, 32],"float32"), Tensor([16, 32],"float32"), )
paddle.allclose(Tensor([37, 32],"float32"), Tensor([37, 32],"float32"), )
paddle.allclose(Tensor([13, 9, 32],"float32"), Tensor([13, 9, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([32, 37],"float32"), Tensor([32, 37],"float32"), )
paddle.allclose(Tensor([14, 64, 4],"float32"), Tensor([14, 64, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([1, 20, 200],"float32"), Tensor([1, 20, 200],"float32"), )
paddle.allclose(Tensor([13, 7, 16],"float32"), Tensor([13, 7, 16],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([1, 20, 32],"float32"), Tensor([1, 20, 32],"float32"), )
paddle.allclose(Tensor([64, 16],"float32"), Tensor([64, 16],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([13, 7, 32],"float32"), Tensor([13, 7, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 8, 32],"float32"), Tensor([13, 8, 32],"float32"), atol=0.0001, )
paddle.allclose(Tensor([14, 7, 32],"float32"), Tensor([14, 7, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([768, 4],"float32"), Tensor([768, 4],"float32"), )
paddle.allclose(Tensor([32, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.allclose(Tensor([512],"float64"), Tensor([512],"float64"), atol=0.0001, rtol=0.0001, )
paddle.allclose(Tensor([14, 7, 32],"float32"), Tensor([14, 7, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([768],"float32"), Tensor([768],"float32"), )
paddle.allclose(Tensor([13, 7, 32],"float32"), Tensor([13, 7, 32],"float32"), )
paddle.allclose(Tensor([3072],"float32"), Tensor([3072],"float32"), )
paddle.allclose(Tensor([512, 8],"float32"), Tensor([512, 8],"float32"), )
paddle.amax(Tensor([10, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amax(Tensor([10, 10, 10],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amax(Tensor([10, 10, 10],"float32"), keepdim=True, )
paddle.amax(Tensor([10, 10, 10],"float32"), keepdim=False, )
paddle.amax(Tensor([10, 10, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amin(Tensor([10, 10, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amin(Tensor([10, 10, 10],"float32"), keepdim=True, )
paddle.amin(Tensor([10, 10, 10],"float32"), keepdim=False, )
paddle.amin(Tensor([10, 10, 10],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amin(Tensor([10, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.any(Tensor([1124, 32],"bool"), )
paddle.any(Tensor([512, 32],"bool"), )
paddle.any(Tensor([32, 37],"bool"), )
paddle.any(Tensor([32, 32],"bool"), )
paddle.any(Tensor([37, 32],"bool"), )
paddle.argmax(Tensor([1, 2, 800, 536],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 531],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 534],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 600],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 533],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([2, 256000],"float32"), axis=-1, )
paddle.argmax(Tensor([1, 2, 512, 512],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 496, 512],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([2, 32000],"float32"), axis=-1, )
paddle.argmax(Tensor([1, 51865],"float32"), axis=-1, )
paddle.argmax(Tensor([1, 32000],"float32"), axis=-1, )
paddle.argmax(Tensor([4, 4, 4, 4, 4],"float64"), axis=0, )
paddle.argmax(Tensor([1, 1000],"float32"), axis=1, )
paddle.argmax(Tensor([1, 8, 14, 12],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([100, 10],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 99],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 7, 99],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 2, 4, 16, 2],"float32"), axis=-1, )
paddle.argmin(Tensor([4, 4, 4, 4, 4],"float64"), axis=0, )
paddle.argsort(Tensor([1500],"int32"), stable=True, )
paddle.argsort(Tensor([1500],"float32"), stable=True, )
paddle.argsort(Tensor([1500],"int64"), stable=True, )
paddle.argsort(Tensor([1500],"float64"), stable=True, )
paddle.as_complex(Tensor([32, 32, 12, 12, 2],"float32"), )
paddle.as_complex(Tensor([20, 64, 64, 2],"float32"), )
paddle.as_complex(Tensor([4, 32, 32, 16, 2],"float32"), )
paddle.as_complex(Tensor([8, 8, 4, 4, 4, 2],"float32"), )
paddle.as_complex(Tensor([10, 10, 10, 2],"float32"), )
paddle.as_real(Tensor([1, 8192, 1, 64],"complex64"), )
paddle.as_real(Tensor([4, 32, 32, 33],"complex64"), )
paddle.as_real(Tensor([10, 10, 10, 20],"complex128"), )
paddle.as_real(Tensor([4, 32, 32, 16],"complex64"), )
paddle.as_real(Tensor([201, 45],"complex64"), )
paddle.as_strided(Tensor([32, 32],"float32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 32],"int64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 32],"int64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 32],"float64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 32],"float16"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 32],"int32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 32],"float16"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 32],"float32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 32],"int32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 32],"float64"), shape=tuple(3,), stride=tuple(1,), )
paddle.asin(Tensor([8, 16, 32],"float32"), )
paddle.asin(Tensor([8, 16, 32],"float64"), )
paddle.asin(Tensor([8, 16, 32],"complex128"), )
paddle.asin(Tensor([8, 16, 32],"complex64"), )
paddle.asinh(Tensor([8, 16, 32],"complex64"), )
paddle.asinh(Tensor([8, 16, 32],"float32"), )
paddle.asinh(Tensor([8, 16, 32],"float64"), )
paddle.asinh(Tensor([8, 16, 32],"complex128"), )
paddle.assign(Tensor([512, 128, 1, 1],"float32"), Tensor([512, 128, 1, 1],"float32"), )
paddle.assign(Tensor([327680],"bfloat16"), Tensor([327680],"bfloat16"), )
paddle.assign(Tensor([172032],"bfloat16"), Tensor([172032],"bfloat16"), )
paddle.assign(Tensor([384, 192, 2, 2],"float32"), Tensor([384, 192, 2, 2],"float32"), )
paddle.assign(Tensor([128, 512, 1, 1],"float32"), Tensor([128, 512, 1, 1],"float32"), )
paddle.assign(Tensor([192, 96, 2, 2],"float32"), Tensor([192, 96, 2, 2],"float32"), )
paddle.assign(Tensor([192, 768],"float32"), Tensor([192, 768],"float32"), )
paddle.assign(Tensor([1, 197, 768],"float32"), Tensor([1, 197, 768],"float32"), )
paddle.assign(Tensor([768, 512],"float32"), Tensor([768, 512],"float32"), )
paddle.assign(Tensor([458752],"bfloat16"), Tensor([458752],"bfloat16"), )
paddle.assign(Tensor([256, 256],"float32"), Tensor([256, 256],"float32"), )
paddle.assign(Tensor([768, 192],"float32"), Tensor([768, 192],"float32"), )
paddle.assign(Tensor([256, 512, 1, 1],"float32"), Tensor([256, 512, 1, 1],"float32"), )
paddle.assign(Tensor([57344],"bfloat16"), Tensor([57344],"bfloat16"), )
paddle.assign(Tensor([66244],"float32"), Tensor([66244],"float32"), )
paddle.assign(Tensor([1024, 102],"float32"), output=Tensor([1024, 102],"float32"), )
paddle.assign(Tensor([1024, 256, 1, 1],"float32"), Tensor([1024, 256, 1, 1],"float32"), )
paddle.assign(Tensor([256, 1024, 1, 1],"float32"), Tensor([256, 1024, 1, 1],"float32"), )
paddle.assign(Tensor([204800],"bfloat16"), Tensor([204800],"bfloat16"), )
paddle.assign(Tensor([768, 102],"float32"), output=Tensor([768, 102],"float32"), )
paddle.assign(Tensor([32, 32, 12, 12, 2],"float32"), Tensor([32, 32, 12, 12, 2],"float32"), )
paddle.assign(Tensor([128, 128, 3, 3],"float32"), Tensor([128, 128, 3, 3],"float32"), )
paddle.assign(Tensor([512, 256, 1, 1],"float32"), Tensor([512, 256, 1, 1],"float32"), )
paddle.assign(Tensor([384, 1280],"bfloat16"), )
paddle.assign(Tensor([409600],"bfloat16"), Tensor([409600],"bfloat16"), )
paddle.assign(Tensor([128, 80, 1],"float32"), Tensor([128, 80, 1],"float32"), )
paddle.assign(Tensor([128, 64, 3],"float32"), Tensor([128, 64, 3],"float32"), )
paddle.assign(Tensor([90, 90],"float32"), Tensor([90, 90],"float32"), )
paddle.assign(Tensor([17157],"float32"), Tensor([17157],"float32"), )
paddle.assign(Tensor([732, 12],"float32"), output=Tensor([732, 12],"float32"), )
paddle.assign(Tensor([128, 256, 1, 1],"float32"), Tensor([128, 256, 1, 1],"float32"), )
paddle.assign(Tensor([64, 64, 3, 3],"float32"), Tensor([64, 64, 3, 3],"float32"), )
paddle.assign(Tensor([384, 96],"float32"), Tensor([384, 96],"float32"), )
paddle.assign(Tensor([23619],"float32"), Tensor([23619],"float32"), )
paddle.assign(Tensor([192, 1, 7, 7],"float32"), Tensor([192, 1, 7, 7],"float32"), )
paddle.assign(Tensor([8, 1280],"bfloat16"), )
paddle.assign(Tensor([7168],"bfloat16"), Tensor([7168],"bfloat16"), )
paddle.assign(Tensor([784, 10],"float32"), Tensor([784, 10],"float32"), )
paddle.assign(Tensor([33, 768],"float32"), Tensor([33, 768],"float32"), )
paddle.assign(Tensor([64, 64, 3],"float32"), Tensor([64, 64, 3],"float32"), )
paddle.assign(Tensor([64, 256, 1, 1],"float32"), Tensor([64, 256, 1, 1],"float32"), )
paddle.assign(Tensor([80, 80, 5],"float32"), Tensor([80, 80, 5],"float32"), )
paddle.assign(Tensor([7953],"float32"), Tensor([7953],"float32"), )
paddle.assign(Tensor([33, 768, 1, 1],"float32"), Tensor([33, 768, 1, 1],"float32"), )
paddle.assign(Tensor([12800],"bfloat16"), Tensor([12800],"bfloat16"), )
paddle.assign(Tensor([1, 50304],"float32"), )
paddle.assign(Tensor([28672],"bfloat16"), Tensor([28672],"bfloat16"), )
paddle.assign(Tensor([384, 1, 7, 7],"float32"), Tensor([384, 1, 7, 7],"float32"), )
paddle.assign(Tensor([64, 3, 7, 7],"float32"), Tensor([64, 3, 7, 7],"float32"), )
paddle.assign(Tensor([8192],"bfloat16"), Tensor([8192],"bfloat16"), )
paddle.assign(Tensor([96, 384],"float32"), Tensor([96, 384],"float32"), )
paddle.assign(Tensor([256, 64, 1, 1],"float32"), Tensor([256, 64, 1, 1],"float32"), )
paddle.assign(Tensor([768, 1, 7, 7],"float32"), Tensor([768, 1, 7, 7],"float32"), )
paddle.assign(Tensor([64, 64, 1, 1],"float32"), Tensor([64, 64, 1, 1],"float32"), )
paddle.assign(list[Tensor([100, 10],"float64"),], )
paddle.assign(Tensor([512],"float32"), Tensor([512],"float32"), )
paddle.assign(Tensor([1280],"bfloat16"), Tensor([1280],"bfloat16"), )
paddle.assign(Tensor([64, 64],"float32"), Tensor([64, 64],"float32"), )
paddle.assign(Tensor([32, 4, 4],"float32"), Tensor([32, 4, 4],"float32"), )
paddle.assign(Tensor([1024],"float32"), Tensor([1024],"float32"), )
paddle.assign(Tensor([15, 48],"float32"), Tensor([15, 48],"float32"), )
paddle.assign(Tensor([64, 64, 1],"float32"), Tensor([64, 64, 1],"float32"), )
paddle.assign(Tensor([5, 4, 6, 6, 6],"float32"), Tensor([5, 4, 6, 6, 6],"float32"), )
paddle.assign(Tensor([896],"bfloat16"), Tensor([896],"bfloat16"), )
paddle.assign(Tensor([1536],"float32"), Tensor([1536],"float32"), )
paddle.assign(Tensor([96, 3, 4, 4],"float32"), Tensor([96, 3, 4, 4],"float32"), )
paddle.assign(Tensor([50, 50],"float32"), Tensor([50, 50],"float32"), )
paddle.assign(Tensor([1861],"float32"), Tensor([1861],"float32"), )
paddle.assign(Tensor([1024],"int64"), )
paddle.assign(Tensor([1, 1, 768],"float32"), Tensor([1, 1, 768],"float32"), )
paddle.assign(Tensor([1000],"float32"), Tensor([1000],"float32"), )
paddle.assign(Tensor([96, 1, 7, 7],"float32"), Tensor([96, 1, 7, 7],"float32"), )
paddle.assign(Tensor([4, 20, 20],"float16"), )
paddle.assign(Tensor([1152],"bfloat16"), Tensor([1152],"bfloat16"), )
paddle.assign(Tensor([3072],"float32"), Tensor([3072],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([5, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([1, 1444, 1, 1],"float32"), output=Tensor([1, 1444, 1, 1],"float32"), )
paddle.assign(Tensor([42, 42],"float32"), )
paddle.assign(Tensor([48, 48],"float32"), Tensor([48, 48],"float32"), )
paddle.assign(Tensor([2304],"float32"), Tensor([2304],"float32"), )
paddle.assign(Tensor([2048],"float32"), Tensor([2048],"float32"), )
paddle.assign(Tensor([768],"float32"), Tensor([768],"float32"), )
paddle.atan(Tensor([8, 16, 32],"float64"), )
paddle.atan(Tensor([8, 16, 32],"float32"), )
paddle.atan(Tensor([8, 16, 32],"complex64"), )
paddle.atan(Tensor([8, 16, 32],"complex128"), )
paddle.atan2(Tensor([100],"float64"), Tensor([100, 100],"float64"), )
paddle.atan2(x=Tensor([3, 6, 6, 6, 6],"float64"), y=Tensor([3, 6, 6, 6, 6],"float64"), )
paddle.atan2(x=Tensor([6, 6, 6, 6],"float64"), y=Tensor([6, 6, 6, 6],"float64"), )
paddle.atanh(Tensor([8, 16, 32],"float32"), )
paddle.atanh(Tensor([8, 16, 32],"complex64"), )
paddle.atanh(Tensor([8, 16, 32],"complex128"), )
paddle.atanh(Tensor([8, 16, 32],"float64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([200, 300],"uint8"), )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([200, 300],"int8"), )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([200, 300],"int64"), )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([200, 300],"int16"), )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([200, 300],"int32"), )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([200, 300],"int32"), )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([300],"uint8"), Tensor([200, 300],"uint8"), )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([300],"int16"), )
paddle.bitwise_left_shift(Tensor([300],"int64"), Tensor([200, 300],"int64"), )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([300],"uint8"), )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([300],"int32"), )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([300],"int8"), Tensor([200, 300],"int8"), )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([300],"int8"), )
paddle.bitwise_left_shift(Tensor([300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([300],"int64"), )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([200, 300],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([200, 300],"int64"), )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([200, 300],"int32"), )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([200, 300],"int16"), )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([200, 300],"int8"), )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([200, 300],"uint8"), )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([300],"uint8"), Tensor([200, 300],"uint8"), )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([200, 300],"int32"), )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([200, 300],"int8"), )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([300],"int64"), )
paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([200, 300],"int64"), )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([300],"int32"), )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([300],"int16"), )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([300],"int8"), )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([300],"uint8"), )
paddle.bitwise_right_shift(Tensor([300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([200, 300],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bmm(Tensor([26, 1024, 14],"float32"), Tensor([26, 14, 12],"float32"), )
paddle.bmm(Tensor([26, 1024, 12],"float32"), Tensor([26, 12, 1024],"float32"), )
paddle.bmm(Tensor([26, 1024, 7],"float32"), Tensor([26, 7, 12],"float32"), )
paddle.bmm(Tensor([1008, 7, 7],"float32"), Tensor([1008, 7, 128],"float32"), )
paddle.bmm(Tensor([256, 32, 32],"float32"), Tensor([256, 32, 16],"float32"), )
paddle.bmm(Tensor([8, 1024, 49],"float32"), Tensor([8, 49, 1024],"float32"), )
paddle.bmm(Tensor([512, 32, 32],"float32"), Tensor([512, 32, 16],"float32"), )
paddle.bmm(Tensor([26, 1024, 12],"float32"), Tensor([26, 12, 14],"float32"), )
paddle.bmm(Tensor([26, 1024, 12],"float32"), Tensor([26, 12, 7],"float32"), )
paddle.bmm(Tensor([48, 226, 8],"float32"), Tensor([48, 8, 226],"float32"), )
paddle.bmm(Tensor([30, 40, 50],"float32"), Tensor([30, 50, 60],"float32"), )
paddle.bmm(Tensor([52, 21, 7],"float32"), Tensor([52, 7, 8],"float32"), )
paddle.bmm(Tensor([52, 21, 8],"float32"), Tensor([52, 8, 7],"float32"), )
paddle.bmm(Tensor([8, 58, 58],"float32"), Tensor([8, 58, 8],"float32"), )
paddle.bmm(Tensor([208, 7, 7],"float32"), Tensor([208, 7, 8],"float32"), )
paddle.bmm(Tensor([208, 7, 8],"float32"), Tensor([208, 8, 7],"float32"), )
paddle.bmm(Tensor([8, 58, 8],"float32"), Tensor([8, 8, 58],"float32"), )
paddle.bmm(Tensor([26, 3, 10],"float32"), Tensor([26, 10, 12],"float32"), )
paddle.bmm(Tensor([4, 20, 8],"float32"), Tensor([4, 8, 22],"float32"), )
paddle.bmm(Tensor([4, 20, 20],"float32"), Tensor([4, 20, 8],"float32"), )
paddle.bmm(Tensor([26, 7, 12],"float32"), Tensor([26, 12, 14],"float32"), )
paddle.bmm(Tensor([26, 14, 12],"float32"), Tensor([26, 12, 14],"float32"), )
paddle.bmm(Tensor([26, 10, 12],"float32"), Tensor([26, 12, 10],"float32"), )
paddle.bmm(Tensor([26, 7, 7],"float32"), Tensor([26, 7, 12],"float32"), )
paddle.bmm(Tensor([4, 20, 22],"float32"), Tensor([4, 22, 8],"float32"), )
paddle.bmm(Tensor([26, 7, 14],"float32"), Tensor([26, 14, 12],"float32"), )
paddle.bmm(Tensor([26, 7, 12],"float32"), Tensor([26, 12, 7],"float32"), )
paddle.bmm(Tensor([52, 7, 8],"float32"), Tensor([52, 8, 7],"float32"), )
paddle.bmm(Tensor([48, 7, 8],"float32"), Tensor([48, 8, 7],"float32"), )
paddle.bmm(Tensor([4, 20, 8],"float32"), Tensor([4, 8, 20],"float32"), )
paddle.bmm(Tensor([26, 3, 12],"float32"), Tensor([26, 12, 10],"float32"), )
paddle.bmm(Tensor([48, 7, 7],"float32"), Tensor([48, 7, 8],"float32"), )
paddle.bmm(Tensor([26, 14, 14],"float32"), Tensor([26, 14, 12],"float32"), )
paddle.bmm(Tensor([26, 10, 10],"float32"), Tensor([26, 10, 12],"float32"), )
paddle.bmm(Tensor([52, 7, 7],"float32"), Tensor([52, 7, 8],"float32"), )
paddle.bmm(Tensor([16, 10, 10],"float32"), Tensor([16, 10, 8],"float32"), )
paddle.broadcast_tensors(list[Tensor([200, 200],"float64"),Tensor([200, 200],"float64"),], )
paddle.broadcast_tensors(list[Tensor([10, 10, 10],"float64"),Tensor([10, 10, 10],"float64"),], )
paddle.broadcast_to(Tensor([10, 1, 131, 137],"bool"), list[10,8,131,137,], )
paddle.broadcast_to(Tensor([8, 1, 240, 113],"bool"), list[8,8,240,113,], )
paddle.broadcast_to(Tensor([30, 1, 76, 76],"bool"), list[30,8,76,76,], )
paddle.broadcast_to(Tensor([8, 1, 251, 251],"bool"), list[8,8,251,251,], )
paddle.broadcast_to(Tensor([8, 1, 145, 145],"bool"), list[8,8,145,145,], )
paddle.broadcast_to(Tensor([7, 1, 136, 136],"bool"), list[7,8,136,136,], )
paddle.broadcast_to(Tensor([8, 1, 151, 151],"bool"), list[8,8,151,151,], )
paddle.broadcast_to(Tensor([8, 1, 187, 113],"bool"), list[8,8,187,113,], )
paddle.broadcast_to(Tensor([30, 1, 150, 150],"bool"), list[30,8,150,150,], )
paddle.broadcast_to(Tensor([10, 1, 76, 137],"bool"), list[10,8,76,137,], )
paddle.broadcast_to(Tensor([8, 1, 214, 214],"bool"), list[8,8,214,214,], )
paddle.broadcast_to(Tensor([7, 1, 143, 153],"bool"), list[7,8,143,153,], )
paddle.broadcast_to(Tensor([10, 1, 101, 129],"bool"), list[10,8,101,129,], )
paddle.broadcast_to(Tensor([8, 1, 136, 121],"bool"), list[8,8,136,121,], )
paddle.broadcast_to(Tensor([8, 1, 215, 113],"bool"), list[8,8,215,113,], )
paddle.broadcast_to(Tensor([30, 1, 155, 73],"bool"), list[30,8,155,73,], )
paddle.broadcast_to(Tensor([7, 1, 120, 153],"bool"), list[7,8,120,153,], )
paddle.broadcast_to(Tensor([7, 1, 175, 153],"bool"), list[7,8,175,153,], )
paddle.broadcast_to(Tensor([10, 1, 185, 185],"bool"), list[10,8,185,185,], )
paddle.broadcast_to(Tensor([8, 1, 148, 121],"bool"), list[8,8,148,121,], )
paddle.broadcast_to(Tensor([8, 1, 145, 113],"bool"), list[8,8,145,113,], )
paddle.broadcast_to(Tensor([10, 1, 110, 129],"bool"), list[10,8,110,129,], )
paddle.broadcast_to(Tensor([10, 1, 127, 105],"bool"), list[10,8,127,105,], )
paddle.broadcast_to(Tensor([6, 1, 177, 177],"bool"), list[6,8,177,177,], )
paddle.broadcast_to(Tensor([8, 1, 194, 194],"bool"), list[8,8,194,194,], )
paddle.broadcast_to(Tensor([30, 1, 102, 102],"bool"), list[30,8,102,102,], )
paddle.broadcast_to(Tensor([30, 1, 149, 65],"bool"), list[30,8,149,65,], )
paddle.broadcast_to(Tensor([10, 1, 138, 129],"bool"), list[10,8,138,129,], )
paddle.broadcast_to(Tensor([10, 1, 94, 137],"bool"), list[10,8,94,137,], )
paddle.broadcast_to(Tensor([8, 1, 277, 113],"bool"), list[8,8,277,113,], )
paddle.broadcast_to(Tensor([10, 1, 170, 170],"bool"), list[10,8,170,170,], )
paddle.broadcast_to(Tensor([30, 1, 121, 121],"bool"), list[30,8,121,121,], )
paddle.broadcast_to(Tensor([8, 1, 257, 257],"bool"), list[8,8,257,257,], )
paddle.broadcast_to(Tensor([7, 1, 163, 163],"bool"), list[7,8,163,163,], )
paddle.broadcast_to(Tensor([30, 1, 102, 41],"bool"), list[30,8,102,41,], )
paddle.broadcast_to(Tensor([10, 1, 100, 129],"bool"), list[10,8,100,129,], )
paddle.broadcast_to(Tensor([6, 1, 170, 170],"bool"), list[6,8,170,170,], )
paddle.broadcast_to(Tensor([10, 1, 74, 137],"bool"), list[10,8,74,137,], )
paddle.broadcast_to(Tensor([10, 1, 165, 89],"bool"), list[10,8,165,89,], )
paddle.broadcast_to(Tensor([10, 1, 108, 97],"bool"), list[10,8,108,97,], )
paddle.broadcast_to(Tensor([7, 1, 180, 180],"bool"), list[7,8,180,180,], )
paddle.broadcast_to(Tensor([10, 1, 91, 137],"bool"), list[10,8,91,137,], )
paddle.broadcast_to(Tensor([7, 1, 96, 153],"bool"), list[7,8,96,153,], )
paddle.broadcast_to(Tensor([10, 1, 104, 104],"bool"), list[10,8,104,104,], )
paddle.broadcast_to(Tensor([10, 1, 168, 97],"bool"), list[10,8,168,97,], )
paddle.broadcast_to(Tensor([10, 1, 136, 97],"bool"), list[10,8,136,97,], )
paddle.broadcast_to(Tensor([30, 1, 120, 81],"bool"), list[30,8,120,81,], )
paddle.broadcast_to(Tensor([8, 1, 200, 200],"bool"), list[8,8,200,200,], )
paddle.broadcast_to(Tensor([10, 1, 152, 97],"bool"), list[10,8,152,97,], )
paddle.broadcast_to(Tensor([7, 1, 125, 125],"bool"), list[7,8,125,125,], )
paddle.broadcast_to(Tensor([8, 1, 258, 258],"bool"), list[8,8,258,258,], )
paddle.broadcast_to(Tensor([10, 1, 159, 129],"bool"), list[10,8,159,129,], )
paddle.broadcast_to(Tensor([10, 1, 118, 105],"bool"), list[10,8,118,105,], )
paddle.broadcast_to(Tensor([10, 1, 128, 105],"bool"), list[10,8,128,105,], )
paddle.broadcast_to(Tensor([10, 1, 119, 105],"bool"), list[10,8,119,105,], )
paddle.broadcast_to(Tensor([10, 1, 124, 129],"bool"), list[10,8,124,129,], )
paddle.broadcast_to(Tensor([10, 1, 109, 105],"bool"), list[10,8,109,105,], )
paddle.broadcast_to(Tensor([8, 1, 127, 113],"bool"), list[8,8,127,113,], )
paddle.broadcast_to(Tensor([8, 1, 168, 113],"bool"), list[8,8,168,113,], )
paddle.broadcast_to(Tensor([8, 1, 245, 113],"bool"), list[8,8,245,113,], )
paddle.broadcast_to(Tensor([10, 1, 125, 89],"bool"), list[10,8,125,89,], )
paddle.broadcast_to(Tensor([8, 1, 155, 113],"bool"), list[8,8,155,113,], )
paddle.broadcast_to(Tensor([30, 1, 97, 49],"bool"), list[30,8,97,49,], )
paddle.broadcast_to(Tensor([30, 1, 141, 73],"bool"), list[30,8,141,73,], )
paddle.broadcast_to(Tensor([8, 1, 283, 113],"bool"), list[8,8,283,113,], )
paddle.broadcast_to(Tensor([8, 1, 189, 189],"bool"), list[8,8,189,189,], )
paddle.broadcast_to(Tensor([6, 1, 145, 145],"bool"), list[6,8,145,145,], )
paddle.broadcast_to(Tensor([10, 1, 90, 129],"bool"), list[10,8,90,129,], )
paddle.broadcast_to(Tensor([10, 1, 154, 129],"bool"), list[10,8,154,129,], )
paddle.broadcast_to(Tensor([30, 1, 163, 163],"bool"), list[30,8,163,163,], )
paddle.broadcast_to(Tensor([10, 1, 84, 129],"bool"), list[10,8,84,129,], )
paddle.broadcast_to(Tensor([30, 1, 175, 113],"bool"), list[30,8,175,113,], )
paddle.broadcast_to(Tensor([6, 1, 148, 148],"bool"), list[6,8,148,148,], )
paddle.broadcast_to(Tensor([8, 1, 283, 283],"bool"), list[8,8,283,283,], )
paddle.broadcast_to(Tensor([10, 1, 132, 89],"bool"), list[10,8,132,89,], )
paddle.broadcast_to(Tensor([30, 1, 104, 57],"bool"), list[30,8,104,57,], )
paddle.broadcast_to(Tensor([8, 1, 237, 237],"bool"), list[8,8,237,237,], )
paddle.broadcast_to(Tensor([10, 1, 175, 175],"bool"), list[10,8,175,175,], )
paddle.broadcast_to(Tensor([7, 1, 143, 143],"bool"), list[7,8,143,143,], )
paddle.broadcast_to(Tensor([8, 1, 116, 113],"bool"), list[8,8,116,113,], )
paddle.broadcast_to(Tensor([30, 1, 102, 49],"bool"), list[30,8,102,49,], )
paddle.broadcast_to(Tensor([7, 1, 174, 153],"bool"), list[7,8,174,153,], )
paddle.broadcast_to(Tensor([30, 1, 109, 57],"bool"), list[30,8,109,57,], )
paddle.broadcast_to(Tensor([10, 1, 159, 137],"bool"), list[10,8,159,137,], )
paddle.broadcast_to(Tensor([8, 1, 221, 113],"bool"), list[8,8,221,113,], )
paddle.broadcast_to(Tensor([8, 1, 149, 121],"bool"), list[8,8,149,121,], )
paddle.broadcast_to(Tensor([30, 1, 173, 173],"bool"), list[30,8,173,173,], )
paddle.broadcast_to(Tensor([10, 1, 143, 143],"bool"), list[10,8,143,143,], )
paddle.broadcast_to(Tensor([10, 1, 78, 129],"bool"), list[10,8,78,129,], )
paddle.broadcast_to(Tensor([7, 1, 136, 153],"bool"), list[7,8,136,153,], )
paddle.broadcast_to(Tensor([9, 1, 109, 109],"bool"), list[9,8,109,109,], )
paddle.broadcast_to(Tensor([8, 1, 201, 113],"bool"), list[8,8,201,113,], )
paddle.broadcast_to(Tensor([30, 1, 129, 41],"bool"), list[30,8,129,41,], )
paddle.broadcast_to(Tensor([8, 1, 137, 113],"bool"), list[8,8,137,113,], )
paddle.broadcast_to(Tensor([30, 1, 116, 57],"bool"), list[30,8,116,57,], )
paddle.broadcast_to(Tensor([30, 1, 126, 81],"bool"), list[30,8,126,81,], )
paddle.broadcast_to(Tensor([10, 1, 167, 167],"bool"), list[10,8,167,167,], )
paddle.broadcast_to(Tensor([30, 1, 104, 104],"bool"), list[30,8,104,104,], )
paddle.broadcast_to(Tensor([10, 1, 129, 97],"bool"), list[10,8,129,97,], )
paddle.broadcast_to(Tensor([10, 1, 168, 137],"bool"), list[10,8,168,137,], )
paddle.broadcast_to(Tensor([30, 1, 134, 97],"bool"), list[30,8,134,97,], )
paddle.broadcast_to(Tensor([7, 1, 156, 153],"bool"), list[7,8,156,153,], )
paddle.broadcast_to(Tensor([10, 1, 123, 137],"bool"), list[10,8,123,137,], )
paddle.broadcast_to(Tensor([10, 1, 164, 89],"bool"), list[10,8,164,89,], )
paddle.broadcast_to(Tensor([10, 1, 160, 97],"bool"), list[10,8,160,97,], )
paddle.broadcast_to(Tensor([10, 1, 156, 156],"bool"), list[10,8,156,156,], )
paddle.broadcast_to(Tensor([10, 1, 118, 129],"bool"), list[10,8,118,129,], )
paddle.broadcast_to(Tensor([10, 1, 162, 89],"bool"), list[10,8,162,89,], )
paddle.broadcast_to(Tensor([10, 1, 80, 129],"bool"), list[10,8,80,129,], )
paddle.broadcast_to(Tensor([8, 1, 153, 113],"bool"), list[8,8,153,113,], )
paddle.broadcast_to(Tensor([6, 1, 167, 167],"bool"), list[6,8,167,167,], )
paddle.broadcast_to(Tensor([10, 1, 130, 89],"bool"), list[10,8,130,89,], )
paddle.broadcast_to(Tensor([8, 1, 126, 113],"bool"), list[8,8,126,113,], )
paddle.broadcast_to(Tensor([30, 1, 142, 142],"bool"), list[30,8,142,142,], )
paddle.broadcast_to(Tensor([8, 1, 249, 249],"bool"), list[8,8,249,249,], )
paddle.broadcast_to(Tensor([10, 1, 126, 89],"bool"), list[10,8,126,89,], )
paddle.broadcast_to(Tensor([8, 1, 232, 232],"bool"), list[8,8,232,232,], )
paddle.broadcast_to(Tensor([10, 1, 136, 105],"bool"), list[10,8,136,105,], )
paddle.broadcast_to(Tensor([10, 1, 135, 105],"bool"), list[10,8,135,105,], )
paddle.broadcast_to(Tensor([8, 1, 238, 113],"bool"), list[8,8,238,113,], )
paddle.broadcast_to(Tensor([6, 1, 175, 175],"bool"), list[6,8,175,175,], )
paddle.broadcast_to(Tensor([30, 1, 193, 129],"bool"), list[30,8,193,129,], )
paddle.broadcast_to(Tensor([7, 1, 123, 123],"bool"), list[7,8,123,123,], )
paddle.broadcast_to(Tensor([10, 1, 141, 129],"bool"), list[10,8,141,129,], )
paddle.broadcast_to(Tensor([10, 1, 96, 137],"bool"), list[10,8,96,137,], )
paddle.broadcast_to(Tensor([30, 1, 109, 109],"bool"), list[30,8,109,109,], )
paddle.broadcast_to(Tensor([10, 1, 182, 137],"bool"), list[10,8,182,137,], )
paddle.broadcast_to(Tensor([8, 1, 236, 113],"bool"), list[8,8,236,113,], )
paddle.broadcast_to(Tensor([8, 1, 185, 185],"bool"), list[8,8,185,185,], )
paddle.broadcast_to(Tensor([30, 1, 154, 65],"bool"), list[30,8,154,65,], )
paddle.broadcast_to(Tensor([10, 1, 153, 97],"bool"), list[10,8,153,97,], )
paddle.broadcast_to(Tensor([8, 1, 169, 169],"bool"), list[8,8,169,169,], )
paddle.broadcast_to(Tensor([10, 1, 126, 105],"bool"), list[10,8,126,105,], )
paddle.broadcast_to(Tensor([10, 1, 156, 137],"bool"), list[10,8,156,137,], )
paddle.broadcast_to(Tensor([8, 1, 132, 113],"bool"), list[8,8,132,113,], )
paddle.broadcast_to(Tensor([10, 1, 155, 97],"bool"), list[10,8,155,97,], )
paddle.broadcast_to(Tensor([8, 1, 194, 113],"bool"), list[8,8,194,113,], )
paddle.broadcast_to(Tensor([1024, 384],"float32"), tuple(1024,384,), )
paddle.broadcast_to(Tensor([10, 1, 121, 97],"bool"), list[10,8,121,97,], )
paddle.broadcast_to(Tensor([30, 1, 70, 70],"bool"), list[30,8,70,70,], )
paddle.broadcast_to(Tensor([7, 1, 166, 153],"bool"), list[7,8,166,153,], )
paddle.broadcast_to(Tensor([30, 1, 164, 89],"bool"), list[30,8,164,89,], )
paddle.broadcast_to(Tensor([8, 1, 213, 213],"bool"), list[8,8,213,213,], )
paddle.broadcast_to(Tensor([30, 1, 129, 37],"bool"), list[30,8,129,37,], )
paddle.broadcast_to(Tensor([8, 1, 148, 148],"bool"), list[8,8,148,148,], )
paddle.broadcast_to(Tensor([10, 1, 106, 97],"bool"), list[10,8,106,97,], )
paddle.broadcast_to(Tensor([30, 1, 187, 105],"bool"), list[30,8,187,105,], )
paddle.broadcast_to(Tensor([30, 1, 307, 57],"bool"), list[30,8,307,57,], )
paddle.broadcast_to(Tensor([8, 1, 183, 183],"bool"), list[8,8,183,183,], )
paddle.broadcast_to(Tensor([10, 1, 184, 184],"bool"), list[10,8,184,184,], )
paddle.broadcast_to(Tensor([30, 1, 220, 89],"bool"), list[30,8,220,89,], )
paddle.broadcast_to(Tensor([8, 1, 146, 146],"bool"), list[8,8,146,146,], )
paddle.broadcast_to(Tensor([10, 1, 154, 154],"bool"), list[10,8,154,154,], )
paddle.broadcast_to(Tensor([8, 1, 271, 113],"bool"), list[8,8,271,113,], )
paddle.broadcast_to(Tensor([7, 1, 116, 153],"bool"), list[7,8,116,153,], )
paddle.broadcast_to(Tensor([10, 1, 151, 137],"bool"), list[10,8,151,137,], )
paddle.broadcast_to(Tensor([10, 1, 112, 129],"bool"), list[10,8,112,129,], )
paddle.broadcast_to(Tensor([10, 1, 97, 129],"bool"), list[10,8,97,129,], )
paddle.broadcast_to(Tensor([10, 1, 135, 137],"bool"), list[10,8,135,137,], )
paddle.broadcast_to(Tensor([7, 1, 121, 121],"bool"), list[7,8,121,121,], )
paddle.broadcast_to(Tensor([10, 1, 123, 89],"bool"), list[10,8,123,89,], )
paddle.broadcast_to(Tensor([30, 1, 93, 93],"bool"), list[30,8,93,93,], )
paddle.broadcast_to(Tensor([8, 1, 112, 113],"bool"), list[8,8,112,113,], )
paddle.broadcast_to(Tensor([30, 1, 98, 98],"bool"), list[30,8,98,98,], )
paddle.broadcast_to(Tensor([10, 1, 141, 141],"bool"), list[10,8,141,141,], )
paddle.broadcast_to(Tensor([30, 1, 110, 45],"bool"), list[30,8,110,45,], )
paddle.broadcast_to(Tensor([30, 1, 90, 90],"bool"), list[30,8,90,90,], )
paddle.broadcast_to(Tensor([7, 1, 176, 176],"bool"), list[7,8,176,176,], )
paddle.broadcast_to(Tensor([8, 1, 131, 121],"bool"), list[8,8,131,121,], )
paddle.broadcast_to(Tensor([10, 1, 81, 129],"bool"), list[10,8,81,129,], )
paddle.broadcast_to(Tensor([10, 1, 113, 89],"bool"), list[10,8,113,89,], )
paddle.broadcast_to(Tensor([10, 1, 129, 89],"bool"), list[10,8,129,89,], )
paddle.broadcast_to(Tensor([7, 1, 122, 122],"bool"), list[7,8,122,122,], )
paddle.broadcast_to(Tensor([30, 1, 85, 85],"bool"), list[30,8,85,85,], )
paddle.broadcast_to(Tensor([8, 1, 211, 113],"bool"), list[8,8,211,113,], )
paddle.broadcast_to(Tensor([8, 1, 218, 218],"bool"), list[8,8,218,218,], )
paddle.broadcast_to(Tensor([7, 1, 103, 153],"bool"), list[7,8,103,153,], )
paddle.broadcast_to(Tensor([10, 1, 155, 129],"bool"), list[10,8,155,129,], )
paddle.broadcast_to(Tensor([10, 1, 87, 137],"bool"), list[10,8,87,137,], )
paddle.broadcast_to(Tensor([30, 1, 91, 41],"bool"), list[30,8,91,41,], )
paddle.broadcast_to(Tensor([10, 1, 153, 137],"bool"), list[10,8,153,137,], )
paddle.broadcast_to(Tensor([8, 1, 117, 113],"bool"), list[8,8,117,113,], )
paddle.broadcast_to(Tensor([10, 1, 92, 137],"bool"), list[10,8,92,137,], )
paddle.broadcast_to(Tensor([10, 1, 126, 97],"bool"), list[10,8,126,97,], )
paddle.broadcast_to(Tensor([10, 1, 144, 129],"bool"), list[10,8,144,129,], )
paddle.broadcast_to(Tensor([8, 1, 206, 206],"bool"), list[8,8,206,206,], )
paddle.broadcast_to(Tensor([8, 1, 222, 113],"bool"), list[8,8,222,113,], )
paddle.broadcast_to(Tensor([10, 1, 145, 105],"bool"), list[10,8,145,105,], )
paddle.broadcast_to(Tensor([9, 1, 111, 111],"bool"), list[9,8,111,111,], )
paddle.broadcast_to(Tensor([6, 1, 160, 160],"bool"), list[6,8,160,160,], )
paddle.broadcast_to(Tensor([9, 1, 116, 116],"bool"), list[9,8,116,116,], )
paddle.broadcast_to(Tensor([8, 1, 170, 113],"bool"), list[8,8,170,113,], )
paddle.broadcast_to(Tensor([10, 1, 180, 137],"bool"), list[10,8,180,137,], )
paddle.broadcast_to(Tensor([10, 1, 137, 73],"bool"), list[10,8,137,73,], )
paddle.broadcast_to(Tensor([10, 1, 120, 129],"bool"), list[10,8,120,129,], )
paddle.broadcast_to(Tensor([9, 1, 113, 113],"bool"), list[9,8,113,113,], )
paddle.broadcast_to(Tensor([10, 1, 177, 137],"bool"), list[10,8,177,137,], )
paddle.broadcast_to(Tensor([10, 1, 126, 126],"bool"), list[10,8,126,126,], )
paddle.broadcast_to(Tensor([10, 1, 87, 129],"bool"), list[10,8,87,129,], )
paddle.broadcast_to(Tensor([30, 1, 66, 66],"bool"), list[30,8,66,66,], )
paddle.broadcast_to(Tensor([8, 1, 156, 156],"bool"), list[8,8,156,156,], )
paddle.broadcast_to(Tensor([7, 1, 152, 152],"bool"), list[7,8,152,152,], )
paddle.broadcast_to(Tensor([10, 1, 132, 105],"bool"), list[10,8,132,105,], )
paddle.broadcast_to(Tensor([8, 1, 225, 225],"bool"), list[8,8,225,225,], )
paddle.broadcast_to(Tensor([10, 1, 167, 89],"bool"), list[10,8,167,89,], )
paddle.broadcast_to(Tensor([10, 1, 150, 97],"bool"), list[10,8,150,97,], )
paddle.broadcast_to(Tensor([10, 1, 157, 105],"bool"), list[10,8,157,105,], )
paddle.broadcast_to(Tensor([8, 1, 161, 113],"bool"), list[8,8,161,113,], )
paddle.broadcast_to(Tensor([30, 1, 176, 176],"bool"), list[30,8,176,176,], )
paddle.broadcast_to(Tensor([10, 1, 126, 137],"bool"), list[10,8,126,137,], )
paddle.broadcast_to(Tensor([9, 1, 119, 119],"bool"), list[9,8,119,119,], )
paddle.broadcast_to(Tensor([8, 1, 136, 113],"bool"), list[8,8,136,113,], )
paddle.broadcast_to(Tensor([7, 1, 111, 153],"bool"), list[7,8,111,153,], )
paddle.broadcast_to(Tensor([10, 1, 83, 129],"bool"), list[10,8,83,129,], )
paddle.broadcast_to(Tensor([10, 1, 117, 89],"bool"), list[10,8,117,89,], )
paddle.broadcast_to(Tensor([8, 1, 174, 113],"bool"), list[8,8,174,113,], )
paddle.broadcast_to(Tensor([10, 1, 130, 105],"bool"), list[10,8,130,105,], )
paddle.broadcast_to(Tensor([1, 1, 477, 477],"bool"), list[30,8,477,477,], )
paddle.broadcast_to(Tensor([10, 1, 165, 97],"bool"), list[10,8,165,97,], )
paddle.broadcast_to(Tensor([30, 1, 108, 108],"bool"), list[30,8,108,108,], )
paddle.broadcast_to(Tensor([8, 1, 114, 114],"bool"), list[8,8,114,114,], )
paddle.broadcast_to(Tensor([30, 1, 127, 127],"bool"), list[30,8,127,127,], )
paddle.broadcast_to(Tensor([8, 1, 195, 113],"bool"), list[8,8,195,113,], )
paddle.broadcast_to(Tensor([8, 1, 251, 113],"bool"), list[8,8,251,113,], )
paddle.broadcast_to(Tensor([30, 1, 212, 145],"bool"), list[30,8,212,145,], )
paddle.broadcast_to(Tensor([10, 1, 116, 129],"bool"), list[10,8,116,129,], )
paddle.broadcast_to(Tensor([8, 1, 212, 212],"bool"), list[8,8,212,212,], )
paddle.broadcast_to(Tensor([10, 1, 117, 117],"bool"), list[10,8,117,117,], )
paddle.broadcast_to(Tensor([7, 1, 106, 153],"bool"), list[7,8,106,153,], )
paddle.broadcast_to(Tensor([10, 1, 163, 163],"bool"), list[10,8,163,163,], )
paddle.broadcast_to(Tensor([8, 1, 243, 113],"bool"), list[8,8,243,113,], )
paddle.broadcast_to(Tensor([10, 1, 174, 174],"bool"), list[10,8,174,174,], )
paddle.broadcast_to(Tensor([10, 1, 127, 89],"bool"), list[10,8,127,89,], )
paddle.broadcast_to(Tensor([6, 1, 154, 154],"bool"), list[6,8,154,154,], )
paddle.broadcast_to(Tensor([4, 1, 164, 164],"bool"), list[4,8,164,164,], )
paddle.broadcast_to(Tensor([30, 1, 114, 114],"bool"), list[30,8,114,114,], )
paddle.broadcast_to(Tensor([8, 1, 177, 177],"bool"), list[8,8,177,177,], )
paddle.broadcast_to(Tensor([8, 1, 288, 113],"bool"), list[8,8,288,113,], )
paddle.broadcast_to(Tensor([8, 1, 234, 113],"bool"), list[8,8,234,113,], )
paddle.broadcast_to(Tensor([8, 1, 198, 113],"bool"), list[8,8,198,113,], )
paddle.broadcast_to(Tensor([8, 1, 221, 221],"bool"), list[8,8,221,221,], )
paddle.broadcast_to(Tensor([7, 1, 158, 158],"bool"), list[7,8,158,158,], )
paddle.broadcast_to(Tensor([8, 1, 153, 121],"bool"), list[8,8,153,121,], )
paddle.broadcast_to(Tensor([30, 1, 138, 138],"bool"), list[30,8,138,138,], )
paddle.broadcast_to(Tensor([30, 1, 112, 65],"bool"), list[30,8,112,65,], )
paddle.broadcast_to(Tensor([10, 1, 83, 137],"bool"), list[10,8,83,137,], )
paddle.broadcast_to(Tensor([8, 1, 182, 113],"bool"), list[8,8,182,113,], )
paddle.broadcast_to(Tensor([10, 1, 128, 81],"bool"), list[10,8,128,81,], )
paddle.broadcast_to(Tensor([10, 1, 185, 137],"bool"), list[10,8,185,137,], )
paddle.broadcast_to(Tensor([30, 1, 121, 57],"bool"), list[30,8,121,57,], )
paddle.broadcast_to(Tensor([10, 1, 146, 137],"bool"), list[10,8,146,137,], )
paddle.broadcast_to(Tensor([9, 1, 107, 107],"bool"), list[9,8,107,107,], )
paddle.broadcast_to(Tensor([10, 1, 109, 129],"bool"), list[10,8,109,129,], )
paddle.broadcast_to(Tensor([30, 1, 119, 65],"bool"), list[30,8,119,65,], )
paddle.broadcast_to(Tensor([8, 1, 128, 113],"bool"), list[8,8,128,113,], )
paddle.broadcast_to(Tensor([30, 1, 72, 72],"bool"), list[30,8,72,72,], )
paddle.broadcast_to(Tensor([8, 1, 128, 128],"bool"), list[8,8,128,128,], )
paddle.broadcast_to(Tensor([8, 1, 199, 113],"bool"), list[8,8,199,113,], )
paddle.broadcast_to(Tensor([8, 1, 244, 244],"bool"), list[8,8,244,244,], )
paddle.broadcast_to(Tensor([10, 1, 123, 123],"bool"), list[10,8,123,123,], )
paddle.broadcast_to(Tensor([8, 1, 289, 113],"bool"), list[8,8,289,113,], )
paddle.broadcast_to(Tensor([30, 1, 163, 113],"bool"), list[30,8,163,113,], )
paddle.broadcast_to(Tensor([10, 1, 91, 129],"bool"), list[10,8,91,129,], )
paddle.broadcast_to(Tensor([10, 1, 159, 97],"bool"), list[10,8,159,97,], )
paddle.broadcast_to(Tensor([7, 1, 169, 169],"bool"), list[7,8,169,169,], )
paddle.broadcast_to(Tensor([30, 1, 111, 45],"bool"), list[30,8,111,45,], )
paddle.broadcast_to(Tensor([8, 1, 261, 113],"bool"), list[8,8,261,113,], )
paddle.broadcast_to(Tensor([10, 1, 150, 129],"bool"), list[10,8,150,129,], )
paddle.broadcast_to(Tensor([10, 1, 125, 97],"bool"), list[10,8,125,97,], )
paddle.broadcast_to(Tensor([30, 1, 97, 37],"bool"), list[30,8,97,37,], )
paddle.broadcast_to(Tensor([10, 1, 93, 137],"bool"), list[10,8,93,137,], )
paddle.broadcast_to(Tensor([8, 1, 281, 113],"bool"), list[8,8,281,113,], )
paddle.broadcast_to(Tensor([8, 1, 232, 113],"bool"), list[8,8,232,113,], )
paddle.broadcast_to(Tensor([10, 1, 138, 97],"bool"), list[10,8,138,97,], )
paddle.broadcast_to(Tensor([10, 1, 160, 160],"bool"), list[10,8,160,160,], )
paddle.broadcast_to(Tensor([10, 1, 104, 97],"bool"), list[10,8,104,97,], )
paddle.broadcast_to(Tensor([30, 1, 194, 65],"bool"), list[30,8,194,65,], )
paddle.broadcast_to(Tensor([10, 1, 148, 137],"bool"), list[10,8,148,137,], )
paddle.broadcast_to(Tensor([8, 1, 193, 193],"bool"), list[8,8,193,193,], )
paddle.broadcast_to(Tensor([8, 1, 189, 113],"bool"), list[8,8,189,113,], )
paddle.broadcast_to(Tensor([30, 1, 181, 113],"bool"), list[30,8,181,113,], )
paddle.broadcast_to(Tensor([8, 1, 142, 121],"bool"), list[8,8,142,121,], )
paddle.broadcast_to(Tensor([30, 1, 240, 129],"bool"), list[30,8,240,129,], )
paddle.broadcast_to(Tensor([30, 1, 112, 49],"bool"), list[30,8,112,49,], )
paddle.broadcast_to(Tensor([10, 1, 113, 129],"bool"), list[10,8,113,129,], )
paddle.broadcast_to(Tensor([30, 1, 138, 65],"bool"), list[30,8,138,65,], )
paddle.broadcast_to(Tensor([30, 1, 193, 105],"bool"), list[30,8,193,105,], )
paddle.broadcast_to(Tensor([30, 1, 114, 65],"bool"), list[30,8,114,65,], )
paddle.broadcast_to(Tensor([8, 1, 160, 113],"bool"), list[8,8,160,113,], )
paddle.broadcast_to(Tensor([10, 1, 106, 105],"bool"), list[10,8,106,105,], )
paddle.broadcast_to(Tensor([4, 1, 179, 179],"bool"), list[4,8,179,179,], )
paddle.broadcast_to(Tensor([10, 1, 155, 137],"bool"), list[10,8,155,137,], )
paddle.broadcast_to(Tensor([30, 1, 86, 41],"bool"), list[30,8,86,41,], )
paddle.broadcast_to(Tensor([10, 1, 157, 137],"bool"), list[10,8,157,137,], )
paddle.broadcast_to(Tensor([30, 1, 82, 82],"bool"), list[30,8,82,82,], )
paddle.broadcast_to(Tensor([10, 1, 103, 137],"bool"), list[10,8,103,137,], )
paddle.broadcast_to(Tensor([4, 1, 166, 166],"bool"), list[4,8,166,166,], )
paddle.broadcast_to(Tensor([10, 1, 120, 97],"bool"), list[10,8,120,97,], )
paddle.broadcast_to(Tensor([7, 1, 163, 153],"bool"), list[7,8,163,153,], )
paddle.broadcast_to(Tensor([6, 1, 151, 151],"bool"), list[6,8,151,151,], )
paddle.broadcast_to(Tensor([30, 1, 175, 175],"bool"), list[30,8,175,175,], )
paddle.broadcast_to(Tensor([6, 1, 163, 163],"bool"), list[6,8,163,163,], )
paddle.broadcast_to(Tensor([8, 1, 110, 121],"bool"), list[8,8,110,121,], )
paddle.broadcast_to(Tensor([7, 1, 117, 153],"bool"), list[7,8,117,153,], )
paddle.broadcast_to(Tensor([7, 1, 145, 145],"bool"), list[7,8,145,145,], )
paddle.broadcast_to(Tensor([10, 1, 112, 97],"bool"), list[10,8,112,97,], )
paddle.broadcast_to(Tensor([10, 1, 111, 105],"bool"), list[10,8,111,105,], )
paddle.broadcast_to(Tensor([30, 1, 129, 45],"bool"), list[30,8,129,45,], )
paddle.broadcast_to(Tensor([30, 1, 67, 67],"bool"), list[30,8,67,67,], )
paddle.broadcast_to(Tensor([8, 1, 204, 113],"bool"), list[8,8,204,113,], )
paddle.broadcast_to(Tensor([8, 1, 186, 113],"bool"), list[8,8,186,113,], )
paddle.broadcast_to(Tensor([7, 1, 154, 154],"bool"), list[7,8,154,154,], )
paddle.broadcast_to(Tensor([4, 1, 176, 176],"bool"), list[4,8,176,176,], )
paddle.broadcast_to(Tensor([10, 1, 120, 105],"bool"), list[10,8,120,105,], )
paddle.broadcast_to(Tensor([8, 1, 219, 219],"bool"), list[8,8,219,219,], )
paddle.broadcast_to(Tensor([8, 1, 262, 262],"bool"), list[8,8,262,262,], )
paddle.broadcast_to(Tensor([8, 1, 202, 202],"bool"), list[8,8,202,202,], )
paddle.broadcast_to(Tensor([6, 1, 149, 149],"bool"), list[6,8,149,149,], )
paddle.broadcast_to(Tensor([10, 1, 141, 73],"bool"), list[10,8,141,73,], )
paddle.broadcast_to(Tensor([10, 1, 118, 89],"bool"), list[10,8,118,89,], )
paddle.broadcast_to(Tensor([30, 1, 181, 181],"bool"), list[30,8,181,181,], )
paddle.broadcast_to(Tensor([30, 1, 126, 49],"bool"), list[30,8,126,49,], )
paddle.broadcast_to(Tensor([10, 1, 120, 137],"bool"), list[10,8,120,137,], )
paddle.broadcast_to(Tensor([8, 1, 104, 121],"bool"), list[8,8,104,121,], )
paddle.broadcast_to(Tensor([4, 1, 169, 169],"bool"), list[4,8,169,169,], )
paddle.broadcast_to(Tensor([8, 1, 220, 113],"bool"), list[8,8,220,113,], )
paddle.broadcast_to(Tensor([8, 1, 129, 129],"bool"), list[8,8,129,129,], )
paddle.broadcast_to(Tensor([8, 1, 262, 113],"bool"), list[8,8,262,113,], )
paddle.broadcast_to(Tensor([7, 1, 177, 153],"bool"), list[7,8,177,153,], )
paddle.broadcast_to(Tensor([10, 1, 97, 105],"bool"), list[10,8,97,105,], )
paddle.broadcast_to(Tensor([30, 1, 124, 73],"bool"), list[30,8,124,73,], )
paddle.broadcast_to(Tensor([8, 1, 203, 113],"bool"), list[8,8,203,113,], )
paddle.broadcast_to(Tensor([30, 1, 91, 57],"bool"), list[30,8,91,57,], )
paddle.broadcast_to(Tensor([6, 1, 131, 131],"bool"), list[6,8,131,131,], )
paddle.broadcast_to(Tensor([10, 1, 148, 89],"bool"), list[10,8,148,89,], )
paddle.broadcast_to(Tensor([4, 1, 177, 177],"bool"), list[4,8,177,177,], )
paddle.broadcast_to(Tensor([30, 1, 138, 81],"bool"), list[30,8,138,81,], )
paddle.broadcast_to(Tensor([8, 1, 208, 208],"bool"), list[8,8,208,208,], )
paddle.broadcast_to(Tensor([30, 1, 119, 81],"bool"), list[30,8,119,81,], )
paddle.broadcast_to(Tensor([8, 1, 213, 113],"bool"), list[8,8,213,113,], )
paddle.broadcast_to(Tensor([8, 1, 142, 113],"bool"), list[8,8,142,113,], )
paddle.broadcast_to(Tensor([8, 1, 151, 121],"bool"), list[8,8,151,121,], )
paddle.broadcast_to(Tensor([8, 1, 179, 179],"bool"), list[8,8,179,179,], )
paddle.broadcast_to(Tensor([30, 1, 83, 41],"bool"), list[30,8,83,41,], )
paddle.broadcast_to(Tensor([10, 1, 124, 137],"bool"), list[10,8,124,137,], )
paddle.broadcast_to(Tensor([30, 1, 200, 89],"bool"), list[30,8,200,89,], )
paddle.broadcast_to(Tensor([7, 1, 133, 133],"bool"), list[7,8,133,133,], )
paddle.broadcast_to(Tensor([10, 1, 127, 81],"bool"), list[10,8,127,81,], )
paddle.broadcast_to(Tensor([30, 1, 173, 73],"bool"), list[30,8,173,73,], )
paddle.broadcast_to(Tensor([8, 1, 200, 113],"bool"), list[8,8,200,113,], )
paddle.broadcast_to(Tensor([8, 1, 180, 180],"bool"), list[8,8,180,180,], )
paddle.broadcast_to(Tensor([8, 1, 242, 113],"bool"), list[8,8,242,113,], )
paddle.broadcast_to(Tensor([10, 1, 114, 89],"bool"), list[10,8,114,89,], )
paddle.broadcast_to(Tensor([7, 1, 125, 153],"bool"), list[7,8,125,153,], )
paddle.broadcast_to(Tensor([30, 1, 203, 105],"bool"), list[30,8,203,105,], )
paddle.broadcast_to(Tensor([8, 1, 159, 113],"bool"), list[8,8,159,113,], )
paddle.broadcast_to(Tensor([8, 1, 278, 113],"bool"), list[8,8,278,113,], )
paddle.broadcast_to(Tensor([8, 1, 124, 121],"bool"), list[8,8,124,121,], )
paddle.broadcast_to(Tensor([10, 1, 152, 129],"bool"), list[10,8,152,129,], )
paddle.broadcast_to(Tensor([30, 1, 125, 125],"bool"), list[30,8,125,125,], )
paddle.broadcast_to(Tensor([7, 1, 171, 171],"bool"), list[7,8,171,171,], )
paddle.broadcast_to(Tensor([30, 1, 83, 83],"bool"), list[30,8,83,83,], )
paddle.broadcast_to(Tensor([30, 1, 144, 97],"bool"), list[30,8,144,97,], )
paddle.broadcast_to(Tensor([10, 1, 101, 137],"bool"), list[10,8,101,137,], )
paddle.broadcast_to(Tensor([10, 1, 124, 124],"bool"), list[10,8,124,124,], )
paddle.broadcast_to(Tensor([6, 1, 182, 182],"bool"), list[6,8,182,182,], )
paddle.broadcast_to(Tensor([7, 1, 162, 162],"bool"), list[7,8,162,162,], )
paddle.broadcast_to(Tensor([30, 1, 118, 57],"bool"), list[30,8,118,57,], )
paddle.broadcast_to(Tensor([30, 1, 130, 73],"bool"), list[30,8,130,73,], )
paddle.broadcast_to(Tensor([6, 1, 135, 135],"bool"), list[6,8,135,135,], )
paddle.broadcast_to(Tensor([30, 1, 92, 49],"bool"), list[30,8,92,49,], )
paddle.broadcast_to(Tensor([7, 1, 153, 153],"bool"), list[7,8,153,153,], )
paddle.broadcast_to(Tensor([7, 1, 134, 153],"bool"), list[7,8,134,153,], )
paddle.broadcast_to(Tensor([8, 1, 242, 242],"bool"), list[8,8,242,242,], )
paddle.broadcast_to(Tensor([7, 1, 167, 167],"bool"), list[7,8,167,167,], )
paddle.broadcast_to(Tensor([30, 1, 154, 154],"bool"), list[30,8,154,154,], )
paddle.broadcast_to(Tensor([30, 1, 127, 81],"bool"), list[30,8,127,81,], )
paddle.broadcast_to(Tensor([10, 1, 128, 97],"bool"), list[10,8,128,97,], )
paddle.broadcast_to(Tensor([30, 1, 150, 49],"bool"), list[30,8,150,49,], )
paddle.broadcast_to(Tensor([10, 1, 161, 161],"bool"), list[10,8,161,161,], )
paddle.broadcast_to(Tensor([8, 1, 163, 163],"bool"), list[8,8,163,163,], )
paddle.broadcast_to(Tensor([8, 1, 136, 136],"bool"), list[8,8,136,136,], )
paddle.broadcast_to(Tensor([8, 1, 141, 113],"bool"), list[8,8,141,113,], )
paddle.broadcast_to(Tensor([8, 1, 168, 168],"bool"), list[8,8,168,168,], )
paddle.broadcast_to(Tensor([10, 1, 151, 105],"bool"), list[10,8,151,105,], )
paddle.broadcast_to(Tensor([8, 1, 132, 121],"bool"), list[8,8,132,121,], )
paddle.broadcast_to(Tensor([8, 1, 147, 147],"bool"), list[8,8,147,147,], )
paddle.broadcast_to(Tensor([30, 1, 97, 97],"bool"), list[30,8,97,97,], )
paddle.broadcast_to(Tensor([7, 1, 108, 153],"bool"), list[7,8,108,153,], )
paddle.broadcast_to(Tensor([7, 1, 137, 153],"bool"), list[7,8,137,153,], )
paddle.broadcast_to(Tensor([7, 1, 160, 153],"bool"), list[7,8,160,153,], )
paddle.broadcast_to(Tensor([416, 1, 30, 30],"bool"), list[416,4,30,30,], )
paddle.broadcast_to(Tensor([10, 1, 166, 166],"bool"), list[10,8,166,166,], )
paddle.broadcast_to(Tensor([30, 1, 96, 37],"bool"), list[30,8,96,37,], )
paddle.broadcast_to(Tensor([4, 1, 161, 161],"bool"), list[4,8,161,161,], )
paddle.broadcast_to(Tensor([8, 1, 188, 188],"bool"), list[8,8,188,188,], )
paddle.broadcast_to(Tensor([8, 1, 269, 113],"bool"), list[8,8,269,113,], )
paddle.broadcast_to(Tensor([8, 1, 165, 165],"bool"), list[8,8,165,165,], )
paddle.broadcast_to(Tensor([10, 1, 157, 89],"bool"), list[10,8,157,89,], )
paddle.broadcast_to(Tensor([8, 1, 212, 113],"bool"), list[8,8,212,113,], )
paddle.broadcast_to(Tensor([10, 1, 115, 137],"bool"), list[10,8,115,137,], )
paddle.broadcast_to(Tensor([8, 1, 149, 149],"bool"), list[8,8,149,149,], )
paddle.broadcast_to(Tensor([7, 1, 137, 137],"bool"), list[7,8,137,137,], )
paddle.broadcast_to(Tensor([10, 1, 120, 120],"bool"), list[10,8,120,120,], )
paddle.broadcast_to(Tensor([8, 1, 214, 113],"bool"), list[8,8,214,113,], )
paddle.broadcast_to(Tensor([7, 1, 150, 150],"bool"), list[7,8,150,150,], )
paddle.broadcast_to(Tensor([8, 1, 269, 269],"bool"), list[8,8,269,269,], )
paddle.broadcast_to(Tensor([1, 38367, 4],"float32"), tuple(1,38367,4,), )
paddle.broadcast_to(Tensor([8, 1, 133, 113],"bool"), list[8,8,133,113,], )
paddle.broadcast_to(Tensor([10, 1, 153, 105],"bool"), list[10,8,153,105,], )
paddle.broadcast_to(Tensor([8, 1, 227, 113],"bool"), list[8,8,227,113,], )
paddle.broadcast_to(Tensor([10, 1, 163, 137],"bool"), list[10,8,163,137,], )
paddle.broadcast_to(Tensor([6, 1, 171, 171],"bool"), list[6,8,171,171,], )
paddle.broadcast_to(Tensor([6, 1, 146, 146],"bool"), list[6,8,146,146,], )
paddle.broadcast_to(Tensor([8, 1, 156, 121],"bool"), list[8,8,156,121,], )
paddle.broadcast_to(Tensor([30, 1, 144, 73],"bool"), list[30,8,144,73,], )
paddle.broadcast_to(Tensor([8, 1, 224, 113],"bool"), list[8,8,224,113,], )
paddle.broadcast_to(Tensor([8, 1, 181, 181],"bool"), list[8,8,181,181,], )
paddle.broadcast_to(Tensor([8, 1, 167, 167],"bool"), list[8,8,167,167,], )
paddle.broadcast_to(Tensor([30, 1, 141, 141],"bool"), list[30,8,141,141,], )
paddle.broadcast_to(Tensor([8, 1, 250, 113],"bool"), list[8,8,250,113,], )
paddle.broadcast_to(Tensor([10, 1, 164, 97],"bool"), list[10,8,164,97,], )
paddle.broadcast_to(Tensor([10, 1, 129, 137],"bool"), list[10,8,129,137,], )
paddle.broadcast_to(Tensor([8, 1, 187, 187],"bool"), list[8,8,187,187,], )
paddle.broadcast_to(Tensor([4, 1, 167, 167],"bool"), list[4,8,167,167,], )
paddle.broadcast_to(Tensor([8, 1, 130, 113],"bool"), list[8,8,130,113,], )
paddle.broadcast_to(Tensor([8, 1, 292, 292],"bool"), list[8,8,292,292,], )
paddle.broadcast_to(Tensor([8, 1, 260, 113],"bool"), list[8,8,260,113,], )
paddle.broadcast_to(Tensor([8, 1, 248, 113],"bool"), list[8,8,248,113,], )
paddle.broadcast_to(Tensor([30, 1, 84, 41],"bool"), list[30,8,84,41,], )
paddle.broadcast_to(Tensor([7, 1, 105, 153],"bool"), list[7,8,105,153,], )
paddle.broadcast_to(Tensor([7, 1, 147, 153],"bool"), list[7,8,147,153,], )
paddle.broadcast_to(Tensor([8, 1, 249, 113],"bool"), list[8,8,249,113,], )
paddle.broadcast_to(Tensor([10, 1, 170, 137],"bool"), list[10,8,170,137,], )
paddle.broadcast_to(Tensor([5, 1, 142, 142],"bool"), list[5,8,142,142,], )
paddle.broadcast_to(Tensor([10, 1, 84, 137],"bool"), list[10,8,84,137,], )
paddle.broadcast_to(Tensor([7, 1, 142, 142],"bool"), list[7,8,142,142,], )
paddle.broadcast_to(Tensor([30, 1, 113, 113],"bool"), list[30,8,113,113,], )
paddle.cast(Tensor([944323],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 8, 65856],"bool"), "float32", )
paddle.cast(Tensor([192, 1872, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([1, 22, 37044],"bool"), "float32", )
paddle.cast(Tensor([1, 3, 70644],"bool"), "float32", )
paddle.cast(Tensor([860976],"bool"), Dtype(float32), )
paddle.cast(Tensor([961439],"bool"), Dtype(float32), )
paddle.cast(Tensor([917966],"bool"), Dtype(float32), )
paddle.cast(Tensor([849937],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 3, 477, 401],"bool"), Dtype(float32), )
paddle.cast(Tensor([854532],"bool"), Dtype(float32), )
paddle.cast(Tensor([957711],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 257, 1408],"bfloat16"), VarType(float32), )
paddle.cast(Tensor([2, 42, 4116],"bool"), "float32", )
paddle.cast(Tensor([2, 35, 8400],"bool"), "float32", )
paddle.cast(Tensor([2, 37, 8400],"bool"), "float32", )
paddle.cast(Tensor([876184],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 8, 52500],"bool"), "float32", )
paddle.cast(Tensor([915887],"bool"), Dtype(float32), )
paddle.cast(Tensor([929142],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 105, 4725],"bool"), "float32", )
paddle.cast(Tensor([128, 4864],"float32"), Dtype(float16), )
paddle.cast(Tensor([834803],"bool"), Dtype(float32), )
paddle.cast(Tensor([813649],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 13, 8400],"bool"), "float32", )
paddle.cast(Tensor([2, 36, 10164],"bool"), "float32", )
paddle.cast(Tensor([1, 6, 27216],"bool"), "float32", )
paddle.cast(Tensor([2, 23, 3024],"bool"), "float32", )
paddle.cast(Tensor([1, 9, 304, 200],"uint8"), "float32", )
paddle.cast(Tensor([2, 25, 6804],"bool"), "float32", )
paddle.cast(Tensor([2, 11, 6804],"bool"), "float32", )
paddle.cast(Tensor([1, 17, 40656],"bool"), "float32", )
paddle.cast(Tensor([2, 53, 8400],"bool"), "float32", )
paddle.cast(Tensor([2, 41, 6069],"bool"), "float32", )
paddle.cast(Tensor([3658, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 22, 3549],"bool"), "float32", )
paddle.cast(Tensor([2, 40, 9261],"bool"), "float32", )
paddle.cast(Tensor([4, 304, 768],"float32"), Dtype(float16), )
paddle.cast(Tensor([2, 48, 10164],"bool"), "float32", )
paddle.cast(Tensor([961565],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 2, 70644],"bool"), "float32", )
paddle.cast(Tensor([256, 1024, 1, 1],"float32"), "float32", )
paddle.cast(Tensor([2, 14, 5376],"bool"), "float32", )
paddle.cast(Tensor([2, 59, 5376],"bool"), "float32", )
paddle.cast(Tensor([256, 1152, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([829317],"bool"), Dtype(float32), )
paddle.cast(Tensor([1280, 176, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([790612],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 44, 8400],"bool"), "float32", )
paddle.cast(Tensor([4, 2, 336, 320],"uint8"), "float32", )
paddle.cast(Tensor([2, 58, 4116],"bool"), "float32", )
paddle.cast(Tensor([1, 11, 24276],"bool"), "float32", )
paddle.cast(Tensor([192, 816, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([160, 512, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([128, 128, 5, 5],"float16"), "float32", )
paddle.cast(Tensor([1, 11, 70644],"bool"), "float32", )
paddle.cast(Tensor([2, 77, 6069],"bool"), "float32", )
paddle.cast(Tensor([192, 768],"float32"), "float32", )
paddle.cast(Tensor([2, 69, 4725],"bool"), "float32", )
paddle.cast(Tensor([882579],"bool"), Dtype(float32), )
paddle.cast(Tensor([884532],"bool"), Dtype(float32), )
paddle.cast(Tensor([448, 2048, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([192, 1104, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([256, 512],"float16"), "float32", )
paddle.cast(Tensor([2, 48, 6804],"bool"), "float32", )
paddle.cast(Tensor([2, 40, 8400],"bool"), "float32", )
paddle.cast(Tensor([2, 26, 2100],"bool"), "float32", )
paddle.cast(Tensor([1, 24, 27216],"bool"), "float32", )
paddle.cast(Tensor([2, 107, 768],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 3, 298, 364],"bool"), Dtype(float32), )
paddle.cast(Tensor([4, 1, 200, 336],"uint8"), "float32", )
paddle.cast(Tensor([1, 800, 1207],"bool"), "int64", )
paddle.cast(Tensor([2, 72, 4116],"bool"), "float32", )
paddle.cast(Tensor([1, 31, 21504],"bool"), "float32", )
paddle.cast(Tensor([2, 25, 10164],"bool"), "float32", )
paddle.cast(Tensor([1, 15, 27216],"bool"), "float32", )
paddle.cast(Tensor([2, 62, 2541],"bool"), "float32", )
paddle.cast(Tensor([1, 12, 52500],"bool"), "float32", )
paddle.cast(Tensor([1, 18, 44436],"bool"), "float32", )
paddle.cast(Tensor([960, 240, 1, 1],"float32"), "float32", )
paddle.cast(Tensor([985929],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 47, 4725],"bool"), "float32", )
paddle.cast(Tensor([1, 19, 40656],"bool"), "float32", )
paddle.cast(Tensor([944676],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 91, 2100],"bool"), "float32", )
paddle.cast(Tensor([6911, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([1, 800, 1249],"bool"), "int64", )
paddle.cast(Tensor([941840],"bool"), Dtype(float32), )
paddle.cast(Tensor([416, 512, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([4, 1, 296, 272],"uint8"), "float32", )
paddle.cast(Tensor([2, 53, 2100],"bool"), "float32", )
paddle.cast(Tensor([725292],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 13, 40656],"bool"), "float32", )
paddle.cast(Tensor([923942],"bool"), Dtype(float32), )
paddle.cast(Tensor([160, 256, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([2, 35, 4725],"bool"), "float32", )
paddle.cast(Tensor([1024, 704, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([1, 6, 200, 304],"uint8"), "float32", )
paddle.cast(Tensor([894988],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 800, 1211],"bool"), "int64", )
paddle.cast(Tensor([1, 33, 24276],"bool"), "float32", )
paddle.cast(Tensor([854590],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 14, 27216],"bool"), "float32", )
paddle.cast(Tensor([2, 46, 4116],"bool"), "float32", )
paddle.cast(Tensor([2, 9, 12096],"bool"), "float32", )
paddle.cast(Tensor([915594],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 52, 6804],"bool"), "float32", )
paddle.cast(Tensor([944052],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 44, 7581],"bool"), "float32", )
paddle.cast(Tensor([1, 800, 1158],"bool"), "int64", )
paddle.cast(Tensor([1, 5, 24276],"bool"), "float32", )
paddle.cast(Tensor([911146],"bool"), Dtype(float32), )
paddle.cast(Tensor([672, 168, 1, 1],"float32"), "float32", )
paddle.cast(Tensor([2, 512, 512],"bool"), dtype="float32", )
paddle.cast(Tensor([2, 99, 4725],"bool"), "float32", )
paddle.cast(Tensor([2, 30, 6069],"bool"), "float32", )
paddle.cast(Tensor([831166],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 13, 65856],"bool"), "float32", )
paddle.cast(Tensor([905744],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 5, 52500],"bool"), "float32", )
paddle.cast(Tensor([160, 960, 1, 1],"float32"), "float32", )
paddle.cast(Tensor([2, 77, 3549],"bool"), "float32", )
paddle.cast(Tensor([847066],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 32, 4725],"bool"), "float32", )
paddle.cast(Tensor([788071],"bool"), Dtype(float32), )
paddle.cast(Tensor([2048, 102],"float32"), "float32", )
paddle.cast(Tensor([1, 11, 44436],"bool"), "float32", )
paddle.cast(Tensor([2, 88, 4725],"bool"), "float32", )
paddle.cast(Tensor([2, 11, 9261],"bool"), "float32", )
paddle.cast(Tensor([6255, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 45, 2100],"bool"), "float32", )
paddle.cast(Tensor([2, 22, 2541],"bool"), "float32", )
paddle.cast(Tensor([961422],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 24, 3024],"bool"), "float32", )
paddle.cast(Tensor([2, 45, 7581],"bool"), "float32", )
paddle.cast(Tensor([128, 512, 3, 3],"float32"), "float32", )
paddle.cast(Tensor([861519],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 63, 5376],"bool"), "float32", )
paddle.cast(Tensor([717215],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 81, 2100],"bool"), "float32", )
paddle.cast(Tensor([3438, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 17, 11109],"bool"), "float32", )
paddle.cast(Tensor([2, 11, 7581],"bool"), "float32", )
paddle.cast(Tensor([933492],"bool"), Dtype(float32), )
paddle.cast(Tensor([843950],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 73, 3024],"bool"), "float32", )
paddle.cast(Tensor([2, 14, 11109],"bool"), "float32", )
paddle.cast(Tensor([1, 14, 65856],"bool"), "float32", )
paddle.cast(Tensor([3345, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([898752],"bool"), Dtype(float32), )
paddle.cast(Tensor([320, 320, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([1, 800, 1198],"bool"), "int64", )
paddle.cast(Tensor([2, 34, 2541],"bool"), "float32", )
paddle.cast(Tensor([1280, 384, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([384, 1000],"float16"), "float32", )
paddle.cast(Tensor([2, 53, 5376],"bool"), "float32", )
paddle.cast(Tensor([2, 58, 7581],"bool"), "float32", )
paddle.cast(Tensor([985372],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 69, 4116],"bool"), "float32", )
paddle.cast(Tensor([312, 1248],"float16"), "float32", )
paddle.cast(Tensor([2, 16, 11109],"bool"), "float32", )
paddle.cast(Tensor([940154],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 45, 11109],"bool"), "float32", )
paddle.cast(Tensor([170628],"int32"), Dtype(float32), )
paddle.cast(Tensor([1, 24, 21504],"bool"), "float32", )
paddle.cast(Tensor([2, 49, 9261],"bool"), "float32", )
paddle.cast(Tensor([192, 128, 1, 7],"float16"), "float32", )
paddle.cast(Tensor([895990],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 43, 3024],"bool"), "float32", )
paddle.cast(Tensor([4843, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([907038],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 24, 4116],"bool"), "float32", )
paddle.cast(Tensor([888865],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 36, 6804],"bool"), "float32", )
paddle.cast(Tensor([2, 16, 9261],"bool"), "float32", )
paddle.cast(Tensor([1, 9, 70644],"bool"), "float32", )
paddle.cast(Tensor([817210],"bool"), Dtype(float32), )
paddle.cast(Tensor([272800, 1],"bool"), dtype="float32", )
paddle.cast(Tensor([2, 8, 7581],"bool"), "float32", )
paddle.cast(Tensor([80, 384, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([1, 4, 33600],"bool"), "float32", )
paddle.cast(Tensor([1, 14, 21504],"bool"), "float32", )
paddle.cast(Tensor([4, 2, 272, 304],"uint8"), "float32", )
paddle.cast(Tensor([776379],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 28, 3549],"bool"), "float32", )
paddle.cast(Tensor([1, 25, 30324],"bool"), "float32", )
paddle.cast(Tensor([160, 768, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([2, 15, 4725],"bool"), "float32", )
paddle.cast(Tensor([4, 2, 304, 312],"uint8"), "float32", )
paddle.cast(Tensor([110484, 1],"bool"), dtype="float32", )
paddle.cast(Tensor([1, 12, 48384],"bool"), "float32", )
paddle.cast(Tensor([2, 71, 5376],"bool"), "float32", )
paddle.cast(Tensor([2, 18, 7581],"bool"), "float32", )
paddle.cast(Tensor([2, 89, 5376],"bool"), "float32", )
paddle.cast(Tensor([1, 30, 30324],"bool"), "float32", )
paddle.cast(Tensor([2, 43, 4116],"bool"), "float32", )
paddle.cast(Tensor([2, 33, 12096],"bool"), "float32", )
paddle.cast(Tensor([1, 14, 24276],"bool"), "float32", )
paddle.cast(Tensor([894148],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 50, 6069],"bool"), "float32", )
paddle.cast(Tensor([128, 128, 1, 7],"float16"), "float32", )
paddle.cast(Tensor([512, 544, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([2, 30, 5376],"bool"), "float32", )
paddle.cast(Tensor([2, 56, 8400],"bool"), "float32", )
paddle.cast(Tensor([2, 32, 10164],"bool"), "float32", )
paddle.cast(Tensor([1280, 185, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([135036],"bool"), "float32", )
paddle.cast(Tensor([1, 25, 24276],"bool"), "float32", )
paddle.cast(Tensor([2, 15, 8400],"bool"), "float32", )
paddle.cast(Tensor([2, 39, 8400],"bool"), "float32", )
paddle.cast(Tensor([830677],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 31, 4116],"bool"), "float32", )
paddle.cast(Tensor([1, 1024, 128],"float32"), Dtype(float16), )
paddle.cast(Tensor([840, 140, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([842436],"bool"), Dtype(float32), )
paddle.cast(Tensor([7020, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([797922],"bool"), Dtype(float32), )
paddle.cast(Tensor([894537],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 35, 6804],"bool"), "float32", )
paddle.cast(Tensor([2, 85, 4116],"bool"), "float32", )
paddle.cast(Tensor([192, 1024, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([320, 320, 2, 2],"float16"), "float32", )
paddle.cast(Tensor([2, 64, 6069],"bool"), "float32", )
paddle.cast(Tensor([2, 47, 3549],"bool"), "float32", )
paddle.cast(Tensor([2, 26, 6069],"bool"), "float32", )
paddle.cast(Tensor([2, 19, 9261],"bool"), "float32", )
paddle.cast(Tensor([8, 15552],"bool"), dtype=Dtype(float32), )
paddle.cast(Tensor([1, 9, 33600],"bool"), "float32", )
paddle.cast(Tensor([957708],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 66, 3024],"bool"), "float32", )
paddle.cast(Tensor([4458, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([799391],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 54, 2541],"bool"), "float32", )
paddle.cast(Tensor([830606],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 7, 33600],"bool"), "float32", )
paddle.cast(Tensor([1, 8, 33600],"bool"), "float32", )
paddle.cast(Tensor([192, 672, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([882837],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 77, 4116],"bool"), "float32", )
paddle.cast(Tensor([2, 8, 10164],"bool"), "float32", )
paddle.cast(Tensor([1, 800, 1203],"bool"), "int64", )
paddle.cast(Tensor([2, 33, 7581],"bool"), "float32", )
paddle.cast(Tensor([855080],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 33, 8400],"bool"), "float32", )
paddle.cast(Tensor([128, 832, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([1, 12, 33600],"bool"), "float32", )
paddle.cast(Tensor([1, 15, 44436],"bool"), "float32", )
paddle.cast(Tensor([2, 59, 6069],"bool"), "float32", )
paddle.cast(Tensor([2, 25, 6069],"bool"), "float32", )
paddle.cast(Tensor([1, 1024, 128],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([2, 151936],"float16"), Dtype(float32), )
paddle.cast(Tensor([224, 192, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([2, 66, 6069],"bool"), "float32", )
paddle.cast(Tensor([2, 11, 11109],"bool"), "float32", )
paddle.cast(Tensor([4, 2, 320, 320],"uint8"), "float32", )
paddle.cast(Tensor([512, 384, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([2, 32, 12096],"bool"), "float32", )
paddle.cast(Tensor([245520, 1],"bool"), dtype="float32", )
paddle.cast(Tensor([2, 26, 9261],"bool"), "float32", )
paddle.cast(Tensor([950773],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 29, 6804],"bool"), "float32", )
paddle.cast(Tensor([877310],"bool"), Dtype(float32), )
paddle.cast(Tensor([192, 1000],"float16"), "float32", )
paddle.cast(Tensor([2, 49, 6804],"bool"), "float32", )
paddle.cast(Tensor([2, 34, 3549],"bool"), "float32", )
paddle.cast(Tensor([2, 138, 3024],"bool"), "float32", )
paddle.cast(Tensor([500032],"float16"), Dtype(float32), )
paddle.cast(Tensor([2, 31, 2541],"bool"), "float32", )
paddle.cast(Tensor([1, 496, 512],"bool"), "int64", )
paddle.cast(Tensor([192, 160, 7, 1],"float16"), "float32", )
paddle.cast(Tensor([829772],"bool"), Dtype(float32), )
paddle.cast(Tensor([740342],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 36, 7581],"bool"), "float32", )
paddle.cast(Tensor([768, 192],"float32"), "float32", )
paddle.cast(Tensor([2, 38, 2100],"bool"), "float32", )
paddle.cast(Tensor([2, 48, 6069],"bool"), "float32", )
paddle.cast(Tensor([2, 41, 3024],"bool"), "float32", )
paddle.cast(Tensor([2, 32, 3024],"bool"), "float32", )
paddle.cast(Tensor([2, 38, 4725],"bool"), "float32", )
paddle.cast(Tensor([160, 672, 1, 1],"float32"), "float32", )
paddle.cast(Tensor([160, 672, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([2, 27, 7581],"bool"), "float32", )
paddle.cast(Tensor([2, 21, 5376],"bool"), "float32", )
paddle.cast(Tensor([2, 17, 6804],"bool"), "float32", )
paddle.cast(Tensor([2, 109, 4116],"bool"), "float32", )
paddle.cast(Tensor([1024, 256, 1, 1],"float32"), "float32", )
paddle.cast(Tensor([576, 1024, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([1, 19, 24276],"bool"), "float32", )
paddle.cast(Tensor([939644],"bool"), Dtype(float32), )
paddle.cast(Tensor([240, 960, 1, 1],"float32"), "float32", )
paddle.cast(Tensor([2, 72, 2541],"bool"), "float32", )
paddle.cast(Tensor([2304, 400],"float16"), "float32", )
paddle.cast(Tensor([2, 40, 7581],"bool"), "float32", )
paddle.cast(Tensor([2, 60, 7581],"bool"), "float32", )
paddle.cast(Tensor([942039],"bool"), Dtype(float32), )
paddle.cast(Tensor([216, 64, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([2, 58, 2541],"bool"), "float32", )
paddle.cast(Tensor([990386],"bool"), Dtype(float32), )
paddle.cast(Tensor([1024, 464, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([270072],"bool"), "float32", )
paddle.cast(Tensor([768095],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 27, 24276],"bool"), "float32", )
paddle.cast(Tensor([1, 8, 70644],"bool"), "float32", )
paddle.cast(Tensor([2, 38, 3024],"bool"), "float32", )
paddle.cast(Tensor([840114],"bool"), Dtype(float32), )
paddle.cast(Tensor([512, 1024, 1, 1],"float32"), "float32", )
paddle.cast(Tensor([1, 8, 40656],"bool"), "float32", )
paddle.cast(Tensor([953556],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 31, 24276],"bool"), "float32", )
paddle.cast(Tensor([2, 58, 2100],"bool"), "float32", )
paddle.cast(Tensor([865633],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 32, 11109],"bool"), "float32", )
paddle.cast(Tensor([6248, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 99, 2100],"bool"), "float32", )
paddle.cast(Tensor([1280, 320, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([2, 115, 3024],"bool"), "float32", )
paddle.cast(Tensor([4554, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([6084, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([2, 45, 8400],"bool"), "float32", )
paddle.cast(Tensor([1, 28, 33600],"bool"), "float32", )
paddle.cast(Tensor([2, 43, 5376],"bool"), "float32", )
paddle.cast(Tensor([6753, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([1, 5, 65856],"bool"), "float32", )
paddle.cast(Tensor([1, 15, 65856],"bool"), "float32", )
paddle.cast(Tensor([80, 256, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([512, 448, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([2, 209, 2100],"bool"), "float32", )
paddle.cast(Tensor([2, 19, 6804],"bool"), "float32", )
paddle.cast(Tensor([256, 768, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([256, 64, 3, 3],"float32"), "float32", )
paddle.cast(Tensor([2, 41, 3549],"bool"), "float32", )
paddle.cast(Tensor([1, 800, 531],"bool"), "int64", )
paddle.cast(Tensor([2, 17, 10164],"bool"), "float32", )
paddle.cast(Tensor([320, 80, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([908431],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 34, 5376],"bool"), "float32", )
paddle.cast(Tensor([11008, 64],"float32"), Dtype(float16), )
paddle.cast(Tensor([797269],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 2, 52500],"bool"), "float32", )
paddle.cast(Tensor([1, 40, 21504],"bool"), "float32", )
paddle.cast(Tensor([2, 50, 2541],"bool"), "float32", )
paddle.cast(Tensor([874312],"bool"), Dtype(float32), )
paddle.cast(Tensor([951834],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 512, 512],"bool"), "int64", )
paddle.cast(Tensor([2, 55, 5376],"bool"), "float32", )
paddle.cast(Tensor([2, 39, 11109],"bool"), "float32", )
paddle.cast(Tensor([2, 51, 4116],"bool"), "float32", )
paddle.cast(Tensor([218240],"bool"), "float32", )
paddle.cast(Tensor([1, 15, 37044],"bool"), "float32", )
paddle.cast(Tensor([2, 28, 4725],"bool"), "float32", )
paddle.cast(Tensor([1, 2, 61236],"bool"), "float32", )
paddle.cast(Tensor([245520],"bool"), "float32", )
paddle.cast(Tensor([2, 54, 4116],"bool"), "float32", )
paddle.cast(Tensor([1, 33, 27216],"bool"), "float32", )
paddle.cast(Tensor([4, 2, 304, 272],"uint8"), "float32", )
paddle.cast(Tensor([1, 800, 1124],"bool"), "int64", )
paddle.cast(Tensor([2, 45, 9261],"bool"), "float32", )
paddle.cast(Tensor([1, 18, 48384],"bool"), "float32", )
paddle.cast(Tensor([1, 7, 27216],"bool"), "float32", )
paddle.cast(Tensor([1, 12, 27216],"bool"), "float32", )
paddle.cast(Tensor([192, 624, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([912939],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 32, 2100],"bool"), "float32", )
paddle.cast(Tensor([760627],"bool"), Dtype(float32), )
paddle.cast(Tensor([894751],"bool"), Dtype(float32), )
paddle.cast(Tensor([1024, 128],"float16"), "float32", )
paddle.cast(Tensor([792604],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 110, 768],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 2, 56784],"bool"), "float32", )
paddle.cast(Tensor([2, 38, 7581],"bool"), "float32", )
paddle.cast(Tensor([2, 36, 2541],"bool"), "float32", )
paddle.cast(Tensor([926271],"bool"), Dtype(float32), )
paddle.cast(Tensor([916011],"bool"), Dtype(float32), )
paddle.cast(Tensor([6805, 32, 1],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([128, 258, 3, 3],"float16"), "float32", )
paddle.cast(Tensor([2, 33, 2541],"bool"), "float32", )
paddle.cast(Tensor([881672],"bool"), Dtype(float32), )
paddle.cast(Tensor([958699],"bool"), Dtype(float32), )
paddle.cast(Tensor([132, 1584, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([2, 92, 3549],"bool"), "float32", )
paddle.cast(Tensor([256, 160, 3, 3],"float32"), "float32", )
paddle.cast(Tensor([1, 3, 466, 386],"bool"), Dtype(float32), )
paddle.cast(Tensor([2, 65, 7581],"bool"), "float32", )
paddle.cast(Tensor([1, 14, 44436],"bool"), "float32", )
paddle.cast(Tensor([1, 6, 52500],"bool"), "float32", )
paddle.cast(Tensor([823810],"bool"), Dtype(float32), )
paddle.cast(Tensor([1, 12, 44436],"bool"), "float32", )
paddle.cast(Tensor([2, 63, 4116],"bool"), "float32", )
paddle.cast(Tensor([1, 13, 27216],"bool"), "float32", )
paddle.cast(Tensor([2, 22, 7581],"bool"), "float32", )
paddle.cast(Tensor([2, 58, 3549],"bool"), "float32", )
paddle.cast(Tensor([4, 157920, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([2, 81, 5376],"bool"), "float32", )
paddle.cast(Tensor([1, 19, 21504],"bool"), "float32", )
paddle.cast(Tensor([1, 14, 37044],"bool"), "float32", )
paddle.cast(Tensor([256, 384, 1, 3],"float16"), "float32", )
paddle.cast(Tensor([476, 476],"float32"), Dtype(float16), )
paddle.cast(Tensor([945343],"bool"), Dtype(float32), )
paddle.cast(Tensor([793034],"bool"), Dtype(float32), )
paddle.cast(Tensor([190960, 1],"bool"), dtype="float32", )
paddle.cdist(Tensor([6380, 4],"float32"), Tensor([1, 4],"float32"), p=1, )
paddle.cdist(Tensor([8550, 4],"float32"), Tensor([1, 4],"float32"), p=1, )
paddle.cdist(Tensor([300, 4],"float32"), Tensor([1, 4],"float32"), p=1, )
paddle.cdist(Tensor([900, 4],"float32"), Tensor([1, 4],"float32"), p=1, )
paddle.ceil(Tensor([32, 32, 128],"float32"), )
paddle.ceil(Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.chunk(Tensor([13, 56, 72],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([114, 4, 1, 32],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([13, 32, 64],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([52, 4, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([8192, 4],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([1, 11, 1024],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([114, 4, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([13, 16, 128],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([52, 21, 8],"float32"), 3, axis=1, )
paddle.chunk(Tensor([1, 4, 20, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 4, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([35, 2, 1, 32],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([2048, 4],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([35, 2, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([10, 2, 8, 8],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([13, 21, 32],"float32"), 3, axis=1, )
paddle.chunk(Tensor([1, 1, 64, 64],"float16"), 2, axis=-1, )
paddle.clip(Tensor([52640, 13],"float32"), min=0, )
paddle.clip(Tensor([107136],"float32"), min=0, )
paddle.clip(Tensor([192, 1024],"float32"), min=-2, max=2, )
paddle.clip(Tensor([52640, 14],"float32"), min=1e-06, )
paddle.clip(Tensor([52640, 8],"float32"), min=1e-06, )
paddle.clip(Tensor([4, 4, 128, 128],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([4, 1, 248, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([1, 257, 1024],"float32"), min=-2, max=2, )
paddle.clip(Tensor([52640, 12],"float32"), min=0, )
paddle.clip(Tensor([52640, 3],"float32"), min=1e-06, )
paddle.clip(Tensor([52640, 2],"float32"), min=1e-06, )
paddle.clip(Tensor([52640, 9],"float32"), min=0, )
paddle.clip(x=Tensor([512, 1248],"float32"), min=0, max=1, )
paddle.clip(Tensor([192, 3, 14, 14],"float32"), min=-2, max=2, )
paddle.clip(Tensor([52640, 4],"float32"), min=0, )
paddle.clip(x=Tensor([512, 872],"float32"), min=0, max=1, )
paddle.clip(Tensor([512, 512],"float32"), -64, 64, )
paddle.clip(Tensor([107136],"float32"), max=Tensor([],"int64"), )
paddle.clip(Tensor([52640, 9],"float32"), min=1e-06, )
paddle.clip(Tensor([1, 577, 192],"float32"), min=-2, max=2, )
paddle.clip(Tensor([2, 107136, 1],"float32"), min=0, )
paddle.clip(Tensor([52640, 10],"float32"), min=0, )
paddle.clip(Tensor([4, 157920],"int64"), min=0, max=1, )
paddle.clip(Tensor([52640, 12],"float32"), min=1e-06, )
paddle.clip(Tensor([1024, 768],"float32"), min=-2, max=2, )
paddle.clip(Tensor([20, 1, 152, 272],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([52640, 5],"float32"), min=0, )
paddle.clip(Tensor([52640, 4],"float32"), min=1e-06, )
paddle.clip(Tensor([4, 2, 128, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([52640, 7],"float32"), min=1e-06, )
paddle.clip(Tensor([52640, 6],"float32"), min=0, )
paddle.clip(Tensor([1, 257, 1408],"float32"), min=-2, max=2, )
paddle.clip(Tensor([52640, 11],"float32"), min=1e-06, )
paddle.clip(x=Tensor([512, 624],"float32"), min=0, max=1, )
paddle.clip(Tensor([52640, 2],"float32"), min=0, )
paddle.clip(Tensor([52640, 14],"float32"), min=0, )
paddle.clip(Tensor([52640, 3],"float32"), min=0, )
paddle.clip(Tensor([4, 2, 248, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([52640, 5],"float32"), min=1e-06, )
paddle.clip(Tensor([52640, 8],"float32"), min=0, )
paddle.clip(Tensor([52640, 13],"float32"), min=1e-06, )
paddle.clip(Tensor([52640, 6],"float32"), min=1e-06, )
paddle.clip(Tensor([192, 1000],"float32"), min=-2, max=2, )
paddle.clip(Tensor([8, 1, 128, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([52640, 10],"float32"), min=1e-06, )
paddle.clip(Tensor([52640, 11],"float32"), min=0, )
paddle.clip(Tensor([8, 2, 128, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([52640, 7],"float32"), min=0, )
paddle.clip(Tensor([80, 499],"float32"), min=1e-10, )
paddle.clip(Tensor([512, 192],"float32"), min=-2, max=2, )
paddle.clip(Tensor([128, 128],"float32"), -8, 7, )
paddle.clip(Tensor([4, 1, 128, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([52640, 1],"float32"), min=0, )
paddle.clip(x=Tensor([512, 92],"float32"), min=0, max=1, )
paddle.clip(x=Tensor([512, 156],"float32"), min=0, max=1, )
paddle.clip(Tensor([192, 192],"float32"), min=-2, max=2, )
paddle.clip(Tensor([1, 257, 192],"float32"), min=-2, max=2, )
paddle.clip(Tensor([36000],"int64"), min=0, )
paddle.clip(Tensor([192, 512],"float32"), min=-2, max=2, )
paddle.clip(Tensor([12000],"int64"), min=0, )
paddle.clip(Tensor([52640, 1],"float32"), min=1e-06, )
paddle.clip(Tensor([256, 256],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([64, 32],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([64, 64],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([4096, 1],"float32"), min=1e-12, )
paddle.clip(Tensor([16, 256],"float64"), -127, 127, )
paddle.clip(Tensor([1, 1, 1408],"float32"), min=-2, max=2, )
paddle.clip(Tensor([1024, 1],"float32"), min=1e-12, )
paddle.clip(Tensor([2048, 1],"float32"), max=4.135166556742356, )
paddle.clip(Tensor([1, 1, 1024],"float32"), min=-2, max=2, )
paddle.clip(Tensor([7776],"int64"), min=0, )
paddle.clone(Tensor([1, 192, 44, 44],"float32"), )
paddle.clone(Tensor([22, 128, 14, 14],"float32"), )
paddle.clone(Tensor([10, 122, 28, 28],"float32"), )
paddle.clone(Tensor([22, 28, 28, 28],"float32"), )
paddle.clone(Tensor([1, 3, 168, 256],"float32"), )
paddle.clone(Tensor([22, 480, 7, 7],"float32"), )
paddle.clone(Tensor([1, 2500, 80],"float32"), )
paddle.clone(Tensor([1, 256, 21, 32],"float32"), )
paddle.clone(Tensor([171888],"int32"), )
paddle.clone(Tensor([1, 36, 84, 128],"float32"), )
paddle.clone(Tensor([1, 12, 84, 128],"float32"), )
paddle.clone(Tensor([10, 512, 7, 7],"float32"), )
paddle.clone(Tensor([22, 512, 7, 7],"float32"), )
paddle.clone(Tensor([11, 1280, 7, 7],"float32"), )
paddle.clone(Tensor([1, 2541, 80],"float32"), )
paddle.clone(Tensor([1, 21504, 15],"float32"), )
paddle.clone(Tensor([1, 2541, 68],"float32"), )
paddle.clone(Tensor([1, 171888, 1],"float32"), )
paddle.clone(Tensor([1, 256, 24, 36],"float32"), )
paddle.clone(Tensor([1, 72, 42, 64],"float32"), )
paddle.clone(Tensor([1, 12, 168, 256],"float32"), )
paddle.clone(Tensor([10, 256, 14, 14],"float32"), )
paddle.clone(Tensor([2, 256, 28, 28],"float32"), )
paddle.clone(Tensor([10, 8, 196, 16],"float32"), )
paddle.clone(Tensor([10, 64, 14, 14],"float32"), )
paddle.clone(Tensor([1, 80, 44, 44],"float32"), )
paddle.clone(Tensor([11, 24, 56, 56],"float32"), )
paddle.clone(Tensor([10, 320, 8, 8],"float32"), )
paddle.clone(Tensor([1, 256, 42, 64],"float32"), )
paddle.clone(Tensor([22, 16, 384],"float32"), )
paddle.clone(Tensor([12, 288, 192],"float32"), )
paddle.clone(Tensor([1, 18, 168, 256],"float32"), )
paddle.clone(Tensor([1, 80, 50, 50],"float32"), )
paddle.clone(Tensor([22, 196, 128],"float32"), )
paddle.clone(Tensor([32256, 4],"float32"), )
paddle.clone(Tensor([129024, 4],"float32"), )
paddle.clone(Tensor([1, 384, 32, 32],"float32"), )
paddle.clone(Tensor([1, 171888, 4],"float32"), )
paddle.clone(Tensor([11, 976, 7, 7],"float32"), )
paddle.clone(Tensor([1, 256, 48, 72],"float32"), )
paddle.clone(Tensor([22, 49, 512],"float32"), )
paddle.clone(Tensor([1, 192, 32, 32],"float32"), )
paddle.clone(Tensor([1, 192, 64, 64],"float32"), )
paddle.clone(Tensor([10, 36, 28, 28],"float32"), )
paddle.clone(Tensor([1, 10000, 80],"float32"), )
paddle.clone(Tensor([22, 1500, 1, 1],"float32"), )
paddle.clone(Tensor([22, 1024, 1, 1],"float32"), )
paddle.clone(Tensor([1, 2541, 4],"float32"), )
paddle.clone(Tensor([1, 21504, 4],"float32"), )
paddle.clone(Tensor([1, 4, 64, 64],"float32"), )
paddle.clone(Tensor([1, 15, 64, 64],"float32"), )
paddle.clone(Tensor([10, 1280, 1, 1],"float32"), )
paddle.clone(Tensor([1, 144, 21, 32],"float32"), )
paddle.clone(Tensor([1, 3, 96, 96, 1],"float32"), )
paddle.clone(Tensor([10, 49, 128],"float32"), )
paddle.clone(Tensor([1, 100, 256],"float32"), )
paddle.clone(Tensor([10, 32, 14, 14],"float32"), )
paddle.clone(Tensor([1, 21504, 1],"float32"), )
paddle.clone(Tensor([1, 625, 80],"float32"), )
paddle.clone(Tensor([1, 2500, 4],"float32"), )
paddle.clone(Tensor([86, 192],"float32"), )
paddle.clone(Tensor([1, 10000, 1],"float32"), )
paddle.clone(Tensor([1, 12, 42, 64],"float32"), )
paddle.clone(Tensor([1, 10000, 4],"float32"), )
paddle.clone(Tensor([1, 3, 84, 128],"float32"), )
paddle.clone(Tensor([1, 21504, 2],"float32"), )
paddle.clone(Tensor([16384, 5],"float32"), )
paddle.clone(Tensor([8064, 4],"float32"), )
paddle.clone(Tensor([1, 5, 50, 50],"float32"), )
paddle.clone(Tensor([1, 12, 11, 16],"float32"), )
paddle.clone(Tensor([1, 2500, 1],"float32"), )
paddle.clone(Tensor([2, 2002],"float32"), )
paddle.clone(Tensor([1, 12, 21, 32],"float32"), )
paddle.clone(Tensor([512, 4],"float32"), )
paddle.clone(Tensor([2, 28, 28],"int32"), )
paddle.clone(Tensor([2541, 2],"float32"), )
paddle.clone(Tensor([2, 1788],"float32"), )
paddle.clone(Tensor([49, 196],"int64"), )
paddle.clone(Tensor([1, 100, 80],"float32"), )
paddle.clone(Tensor([528, 4],"float32"), )
paddle.clone(Tensor([16, 64],"float32"), )
paddle.clone(Tensor([1, 2541],"bool"), )
paddle.clone(Tensor([1, 625, 4],"float32"), )
paddle.clone(Tensor([1, 3, 42, 64],"float32"), )
paddle.clone(Tensor([10, 512, 1, 1],"float32"), )
paddle.clone(Tensor([49, 49],"int64"), )
paddle.clone(Tensor([2016, 4],"float32"), )
paddle.clone(Tensor([16, 64],"float64"), )
paddle.clone(Tensor([1, 3, 21, 32],"float32"), )
paddle.complex(Tensor([128, 64, 8, 5],"float32"), Tensor([128, 64, 8, 5],"float32"), )
paddle.complex(Tensor([4, 32, 32, 16],"float32"), Tensor([4, 32, 32, 16],"float32"), )
paddle.complex(Tensor([64, 64, 8, 5],"float32"), Tensor([64, 64, 8, 5],"float32"), )
paddle.complex(Tensor([96, 32, 16, 9],"float32"), Tensor([96, 32, 16, 9],"float32"), )
paddle.complex(Tensor([64, 32, 16, 9],"float32"), Tensor([64, 32, 16, 9],"float32"), )
paddle.complex(Tensor([16, 32, 16, 9],"float32"), Tensor([16, 32, 16, 9],"float32"), )
paddle.complex(Tensor([32, 32, 16, 9],"float32"), Tensor([32, 32, 16, 9],"float32"), )
paddle.complex(Tensor([32, 64, 8, 5],"float32"), Tensor([32, 64, 8, 5],"float32"), )
paddle.complex(Tensor([16, 64, 8, 5],"float32"), Tensor([16, 64, 8, 5],"float32"), )
paddle.complex(Tensor([32, 32, 32],"float32"), Tensor([32, 32, 32],"float32"), )
paddle.concat(list[Tensor([4, 15, 100],"float32"),Tensor([4, 15, 400],"float32"),Tensor([4, 15, 1600],"float32"),], axis=-1, )
paddle.concat(list[Tensor([70, 28, 28],"int32"),Tensor([36, 28, 28],"int32"),Tensor([63, 28, 28],"int32"),Tensor([27, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([6144],"bfloat16"),Tensor([32],"bfloat16"),Tensor([224480],"bfloat16"),Tensor([6144],"bfloat16"),Tensor([32],"bfloat16"),], 0, )
paddle.concat(tuple(Tensor([977, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 7, 4165, 1],"float32"),Tensor([2, 7, 4165, 1],"float32"),Tensor([2, 7, 4165, 1],"float32"),Tensor([2, 7, 4165, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 178176, 1],"float32"),Tensor([4, 44544, 1],"float32"),Tensor([4, 11136, 1],"float32"),Tensor([4, 2784, 1],"float32"),Tensor([4, 720, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 12, 12],"float16"),Tensor([8, 192, 12, 12],"float16"),Tensor([8, 192, 12, 12],"float16"),Tensor([8, 192, 12, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([4, 192, 22, 22],"float32"),Tensor([4, 256, 22, 22],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([236, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([8, 9, 576],"float32"),Tensor([8, 9, 2304],"float32"),Tensor([8, 9, 9216],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 45, 2100, 1],"float32"),Tensor([2, 45, 2100, 1],"float32"),Tensor([2, 45, 2100, 1],"float32"),Tensor([2, 45, 2100, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([47610, 4],"float32"),Tensor([47610, 4],"float32"),Tensor([47610, 4],"float32"),Tensor([47610, 4],"float32"),], )
paddle.concat(list[Tensor([55440, 4],"float32"),Tensor([55440, 4],"float32"),Tensor([55440, 4],"float32"),Tensor([55440, 4],"float32"),], )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([63, 28, 28],"int32"),Tensor([52, 28, 28],"int32"),Tensor([99, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([64, 2304, 4],"float32"),Tensor([64, 576, 4],"float32"),Tensor([64, 144, 4],"float32"),Tensor([64, 36, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([20, 28, 28],"int32"),Tensor([32, 28, 28],"int32"),Tensor([94, 28, 28],"int32"),Tensor([25, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([205923],"int32"),], )
paddle.concat(list[Tensor([8, 7581, 2],"float32"),Tensor([8, 7581, 2],"float32"),], -1, )
paddle.concat(tuple(Tensor([787, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([35, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([42, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([38940, 4],"float32"),Tensor([38940, 4],"float32"),Tensor([38940, 4],"float32"),Tensor([38940, 4],"float32"),], )
paddle.concat(list[Tensor([163840, 1],"float32"),Tensor([40960, 1],"float32"),Tensor([10240, 1],"float32"),Tensor([2560, 1],"float32"),Tensor([640, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([8, 12, 400],"float32"),Tensor([8, 12, 1600],"float32"),Tensor([8, 12, 6400],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([30, 1, 256],"float32"),Tensor([30, 16, 256],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([154, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([16, 24, 121],"float32"),Tensor([16, 24, 484],"float32"),Tensor([16, 24, 1936],"float32"),], axis=-1, )
paddle.concat(list[Tensor([87600],"int32"),Tensor([87600],"int32"),Tensor([87600],"int32"),Tensor([87600],"int32"),], )
paddle.concat(list[Tensor([3136, 4],"float32"),Tensor([12544, 4],"float32"),Tensor([50176, 4],"float32"),], )
paddle.concat(list[Tensor([59, 28, 28],"int32"),Tensor([21, 28, 28],"int32"),Tensor([43, 28, 28],"int32"),Tensor([99, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([680, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([124, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([94, 28, 28],"int32"),Tensor([11, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([1, 115200, 4],"float32"),Tensor([1, 28800, 4],"float32"),Tensor([1, 7200, 4],"float32"),Tensor([1, 1800, 4],"float32"),Tensor([1, 450, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([73125],"int32"),Tensor([73125],"int32"),Tensor([73125],"int32"),Tensor([73125],"int32"),], )
paddle.concat(tuple(Tensor([943, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([74250, 4],"float32"),], )
paddle.concat(list[Tensor([2, 2176, 14, 14],"float32"),Tensor([2, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([19, 28, 28],"int32"),Tensor([50, 28, 28],"int32"),Tensor([66, 28, 28],"int32"),Tensor([37, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([17, 28, 28],"int32"),Tensor([19, 28, 28],"int32"),Tensor([108, 28, 28],"int32"),Tensor([9, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([68, 28, 28],"int32"),Tensor([91, 28, 28],"int32"),Tensor([8, 28, 28],"int32"),Tensor([62, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([1024, 3],"float32"),Tensor([1024, 204],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([826, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([76590],"int32"),Tensor([76590],"int32"),Tensor([76590],"int32"),Tensor([76590],"int32"),], )
paddle.concat(tuple(Tensor([421, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([119, 28, 28],"int32"),Tensor([127, 28, 28],"int32"),Tensor([40, 28, 28],"int32"),Tensor([45, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([457, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([70680, 4],"float32"),], )
paddle.concat(tuple(Tensor([1, 3, 430, 340],"float32"),Tensor([1, 1, 430, 340],"float32"),), axis=1, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([73, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([68, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([73, 28, 28],"int32"),Tensor([79, 28, 28],"int32"),Tensor([101, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([4, 96, 28, 28],"float32"),Tensor([4, 96, 28, 28],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([964, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([110, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([4, 128, 16, 16],"float16"),Tensor([4, 128, 16, 16],"float16"),Tensor([4, 256, 16, 16],"float16"),], axis=1, )
paddle.concat(list[Tensor([48, 28, 28],"int32"),Tensor([49, 28, 28],"int32"),Tensor([50, 28, 28],"int32"),Tensor([91, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([58320],"int32"),Tensor([58320],"int32"),Tensor([58320],"int32"),Tensor([58320],"int32"),], )
paddle.concat(list[Tensor([106, 28, 28],"int32"),Tensor([31, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([69, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([4, 6, 576],"float32"),Tensor([4, 6, 2304],"float32"),Tensor([4, 6, 9216],"float32"),], axis=-1, )
paddle.concat(list[Tensor([191301],"int32"),], )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([30, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([25, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([8, 18, 144],"float32"),Tensor([8, 18, 576],"float32"),Tensor([8, 18, 2304],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 79380, 1],"float16"),], axis=1, )
paddle.concat(list[Tensor([68340],"int32"),Tensor([68340],"int32"),Tensor([68340],"int32"),Tensor([68340],"int32"),], )
paddle.concat(x=tuple(Tensor([4, 64, 28, 28],"float32"),Tensor([4, 192, 28, 28],"float32"),), axis=1, )
paddle.concat(list[Tensor([16, 28, 28],"int32"),Tensor([48, 28, 28],"int32"),Tensor([124, 28, 28],"int32"),Tensor([63, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 2064, 7, 7],"float32"),Tensor([2, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 77025, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 28, 28],"int32"),Tensor([20, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([125, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([101376, 4],"float32"),Tensor([25344, 4],"float32"),Tensor([6336, 4],"float32"),Tensor([1584, 4],"float32"),Tensor([396, 4],"float32"),], axis=0, )
paddle.concat(tuple(Tensor([203, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 192, 10, 10],"float32"),Tensor([2, 192, 10, 10],"float32"),Tensor([2, 192, 10, 10],"float32"),Tensor([2, 192, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([262144],"int64"),Tensor([1],"int64"),], 0, )
paddle.concat(list[Tensor([4, 54270, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 51750, 4],"float16"),], axis=1, )
paddle.concat(list[Tensor([4, 56250, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([52080, 4],"float32"),], )
paddle.concat(list[Tensor([1, 8192, 12],"float32"),Tensor([1, 8192, 1],"float32"),Tensor([1, 8192, 19],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4096, 32],"float32"),Tensor([1, 4096, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([247086],"int32"),Tensor([247086],"int32"),Tensor([247086],"int32"),Tensor([247086],"int32"),], )
paddle.concat(list[Tensor([44220],"int32"),Tensor([44220],"int32"),Tensor([44220],"int32"),Tensor([44220],"int32"),], )
paddle.concat(list[Tensor([2, 2080, 7, 7],"float32"),Tensor([2, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([43, 28, 28],"int32"),Tensor([58, 28, 28],"int32"),Tensor([40, 28, 28],"int32"),Tensor([98, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([525, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([4, 66150, 1],"float16"),], axis=1, )
paddle.concat(tuple(Tensor([353, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([41, 28, 28],"int32"),Tensor([10, 28, 28],"int32"),Tensor([12, 28, 28],"int32"),Tensor([81, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([4, 86640, 1],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([578, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([8, 192, 14, 14],"float32"),Tensor([8, 384, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 384, 16, 16],"float32"),Tensor([2, 768, 16, 16],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([55, 28, 28],"int32"),Tensor([18, 28, 28],"int32"),Tensor([49, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 79, 8, 96],"float16"),Tensor([2, 1, 8, 96],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 160, 19, 19],"float32"),Tensor([8, 160, 19, 19],"float32"),], 1, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([11, 28, 28],"int32"),Tensor([57, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([8, 2, 7056],"float32"),Tensor([8, 2, 1764],"float32"),Tensor([8, 2, 441],"float32"),Tensor([8, 2, 121],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 256, 12, 12],"float32"),Tensor([2, 256, 12, 12],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([1077, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 30, 3549, 1],"float32"),Tensor([2, 30, 3549, 1],"float32"),Tensor([2, 30, 3549, 1],"float32"),Tensor([2, 30, 3549, 1],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([315, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([4, 74340, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1632, 14, 14],"float32"),Tensor([2, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 172800, 1],"float32"),Tensor([4, 43200, 1],"float32"),Tensor([4, 10800, 1],"float32"),Tensor([4, 2700, 1],"float32"),Tensor([4, 675, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([241731],"int32"),Tensor([241731],"int32"),Tensor([241731],"int32"),Tensor([241731],"int32"),], )
paddle.concat(list[Tensor([4, 69345, 1],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([1, 1, 768],"float32"),Tensor([1, 784, 768],"float32"),), axis=1, )
paddle.concat(list[Tensor([16, 5, 2304],"float32"),Tensor([16, 5, 576],"float32"),Tensor([16, 5, 144],"float32"),Tensor([16, 5, 36],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([1124, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([10, 1, 256],"float32"),Tensor([10, 72, 256],"float32"),), axis=1, )
paddle.concat(list[Tensor([59295, 4],"float32"),Tensor([59295, 4],"float32"),Tensor([59295, 4],"float32"),Tensor([59295, 4],"float32"),], )
paddle.concat(list[Tensor([4, 28, 196],"float32"),Tensor([4, 28, 784],"float32"),Tensor([4, 28, 3136],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 70290, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([8, 4, 576],"float32"),Tensor([8, 4, 2304],"float32"),Tensor([8, 4, 9216],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([400, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([1, 126720, 1],"float32"),Tensor([1, 31680, 1],"float32"),Tensor([1, 7920, 1],"float32"),Tensor([1, 1980, 1],"float32"),Tensor([1, 495, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([128512, 1],"float32"),Tensor([128512, 1],"float32"),], -1, )
paddle.concat(list[Tensor([2, 1344, 14, 14],"float32"),Tensor([2, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1584, 7, 7],"float32"),Tensor([2, 48, 7, 7],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([191, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([4, 17, 529],"float32"),Tensor([4, 17, 2116],"float32"),Tensor([4, 17, 8464],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 48300, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 1, 100, 156],"float32"),Tensor([4, 1, 100, 156],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([1168, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 14, 4096],"float32"),Tensor([2, 14, 1024],"float32"),Tensor([2, 14, 256],"float32"),Tensor([2, 14, 64],"float32"),], axis=-1, )
paddle.concat(list[Tensor([76260],"int32"),Tensor([76260],"int32"),Tensor([76260],"int32"),Tensor([76260],"int32"),], )
paddle.concat(list[Tensor([29, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([20, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 384, 23, 23],"float32"),Tensor([2, 384, 23, 23],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 12800, 4],"float32"),Tensor([4, 9600, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 289, 40],"float32"),Tensor([2, 1156, 40],"float32"),Tensor([2, 4624, 40],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([889, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([4, 91980, 1],"float16"),], axis=1, )
paddle.concat(list[Tensor([49410, 4],"float32"),Tensor([49410, 4],"float32"),Tensor([49410, 4],"float32"),Tensor([49410, 4],"float32"),], )
paddle.concat(tuple(Tensor([1203, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([79395],"int32"),Tensor([79395],"int32"),Tensor([79395],"int32"),Tensor([79395],"int32"),], )
paddle.concat(tuple(Tensor([32, 64, 14, 14],"float32"),Tensor([32, 64, 14, 14],"float32"),), axis=1, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([43, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([44, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([1165, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([706, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([40, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([12, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 202, 8, 96],"float16"),Tensor([2, 1, 8, 96],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 11, 196],"float32"),Tensor([8, 11, 784],"float32"),Tensor([8, 11, 3136],"float32"),], axis=-1, )
paddle.concat(list[Tensor([16, 25, 100],"float32"),Tensor([16, 25, 400],"float32"),Tensor([16, 25, 1600],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 59520, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 14, 14],"int32"),Tensor([128, 14, 14],"int32"),Tensor([128, 14, 14],"int32"),Tensor([128, 14, 14],"int32"),], axis=0, )
paddle.concat(list[Tensor([56, 28, 28],"int32"),Tensor([106, 28, 28],"int32"),Tensor([34, 28, 28],"int32"),Tensor([28, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([16, 16, 144],"float32"),Tensor([16, 16, 576],"float32"),Tensor([16, 16, 2304],"float32"),], axis=-1, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([52, 28, 28],"int32"),Tensor([59, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([1, 57672, 4],"float32"),Tensor([1, 14580, 4],"float32"),Tensor([1, 3726, 4],"float32"),Tensor([1, 972, 4],"float32"),Tensor([1, 270, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([40, 28, 28],"int32"),Tensor([34, 28, 28],"int32"),Tensor([90, 28, 28],"int32"),Tensor([45, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([56430, 4],"float32"),Tensor([56430, 4],"float32"),Tensor([56430, 4],"float32"),Tensor([56430, 4],"float32"),], )
paddle.concat(list[Tensor([42, 28, 28],"int32"),Tensor([94, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([67890],"int32"),Tensor([67890],"int32"),Tensor([67890],"int32"),Tensor([67890],"int32"),], )
paddle.concat(list[Tensor([2, 121, 68],"float32"),Tensor([2, 484, 68],"float32"),Tensor([2, 1936, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 67200, 1],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([256, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([18, 28, 28],"int32"),Tensor([33, 28, 28],"int32"),Tensor([85, 28, 28],"int32"),Tensor([33, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([4, 105840, 1],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([88, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 192, 20, 20],"float32"),Tensor([2, 192, 20, 20],"float32"),Tensor([2, 192, 20, 20],"float32"),Tensor([2, 192, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 7, 7, 768],"float32"),Tensor([4, 7, 7, 768],"float32"),Tensor([4, 7, 7, 768],"float32"),Tensor([4, 7, 7, 768],"float32"),], -1, )
paddle.concat(list[Tensor([77625, 4],"float32"),], )
paddle.concat(tuple(Tensor([30, 1, 256],"float32"),Tensor([30, 80, 256],"float32"),), axis=1, )
paddle.concat(list[Tensor([4, 61440, 4],"float16"),], axis=1, )
paddle.concat(list[Tensor([4, 63135, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 46080, 1],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([631, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([40, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([96, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 6, 12096, 1],"float32"),Tensor([2, 6, 12096, 1],"float32"),Tensor([2, 6, 12096, 1],"float32"),Tensor([2, 6, 12096, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 400, 32],"float32"),Tensor([1, 1600, 32],"float32"),Tensor([1, 6400, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 43560, 1],"float16"),], axis=1, )
paddle.concat(tuple(Tensor([2, 64, 42, 42],"float32"),Tensor([2, 64, 42, 42],"float32"),), axis=1, )
paddle.concat(list[Tensor([8, 11, 144],"float32"),Tensor([8, 11, 576],"float32"),Tensor([8, 11, 2304],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([640, 1000],"float32"),Tensor([128, 1000],"float32"),), axis=0, )
paddle.concat(list[Tensor([65, 28, 28],"int32"),Tensor([31, 28, 28],"int32"),Tensor([42, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([126, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([48, 28, 28],"int32"),Tensor([22, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([8, 1, 512],"float32"),Tensor([8, 25, 512],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1157, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([10, 1, 256],"float32"),Tensor([10, 56, 256],"float32"),), axis=1, )
paddle.concat(list[Tensor([2, 64, 27, 27],"float32"),Tensor([2, 128, 27, 27],"float32"),Tensor([2, 32, 27, 27],"float32"),Tensor([2, 32, 27, 27],"float32"),], axis=1, )
paddle.concat(list[Tensor([43, 28, 28],"int32"),Tensor([60, 28, 28],"int32"),Tensor([84, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 9, 9382, 1],"float32"),Tensor([2, 9, 9382, 1],"float32"),Tensor([2, 9, 9382, 1],"float32"),Tensor([2, 9, 9382, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([40, 28, 28],"int32"),Tensor([19, 28, 28],"int32"),Tensor([111, 28, 28],"int32"),Tensor([23, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([93, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([125, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([1, 8192, 9],"float32"),Tensor([1, 8192, 1],"float32"),Tensor([1, 8192, 22],"float32"),], axis=2, )
paddle.concat(list[Tensor([2500, 4],"float32"),Tensor([10000, 4],"float32"),Tensor([40000, 4],"float32"),], )
paddle.concat(list[Tensor([67260, 4],"float32"),], )
paddle.concat(list[Tensor([23, 28, 28],"int32"),Tensor([10, 28, 28],"int32"),Tensor([49, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([60480, 4],"float32"),], )
paddle.concat(list[Tensor([122, 28, 28],"int32"),Tensor([87, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([17, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([38, 28, 28],"int32"),Tensor([43, 28, 28],"int32"),Tensor([22, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([8, 2, 2541, 1],"float32"),Tensor([8, 2, 2541, 1],"float32"),Tensor([8, 2, 2541, 1],"float32"),Tensor([8, 2, 2541, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([51, 28, 28],"int32"),Tensor([68, 28, 28],"int32"),Tensor([96, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([667, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([48, 1936, 4],"float32"),Tensor([48, 484, 4],"float32"),Tensor([48, 121, 4],"float32"),Tensor([48, 36, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([8, 3600, 4],"float32"),Tensor([8, 900, 4],"float32"),Tensor([8, 225, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([242991],"int32"),], )
paddle.concat(list[Tensor([94, 28, 28],"int32"),Tensor([12, 28, 28],"int32"),Tensor([43, 28, 28],"int32"),Tensor([30, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([294, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 48, 72, 72],"float32"),Tensor([2, 48, 72, 72],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 1568, 7, 7],"float32"),Tensor([2, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 170496, 1],"float32"),Tensor([4, 42624, 1],"float32"),Tensor([4, 10656, 1],"float32"),Tensor([4, 2664, 1],"float32"),Tensor([4, 684, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 192, 28, 28],"float32"),Tensor([2, 48, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 40320, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 5, 4789, 1],"float32"),Tensor([4, 5, 4789, 1],"float32"),Tensor([4, 5, 4789, 1],"float32"),Tensor([4, 5, 4789, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 24, 121],"float32"),Tensor([8, 24, 484],"float32"),Tensor([8, 24, 1936],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([1217, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([39, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([61, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([8, 192, 10, 10],"float16"),Tensor([8, 192, 10, 10],"float16"),], axis=1, )
paddle.concat(list[Tensor([100, 28, 28],"int32"),Tensor([36, 28, 28],"int32"),Tensor([105, 28, 28],"int32"),Tensor([23, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 13, 6150, 1],"float32"),Tensor([2, 13, 6150, 1],"float32"),Tensor([2, 13, 6150, 1],"float32"),Tensor([2, 13, 6150, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 56280, 4],"float16"),], axis=1, )
paddle.concat(tuple(Tensor([1030, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([77, 28, 28],"int32"),Tensor([58, 28, 28],"int32"),Tensor([40, 28, 28],"int32"),Tensor([45, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 3, 4725, 1],"float32"),Tensor([2, 3, 4725, 1],"float32"),Tensor([2, 3, 4725, 1],"float32"),Tensor([2, 3, 4725, 1],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([376, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([98, 28, 28],"int32"),Tensor([36, 28, 28],"int32"),Tensor([103, 28, 28],"int32"),Tensor([24, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([30, 1, 256],"float32"),Tensor([30, 52, 256],"float32"),), axis=1, )
paddle.concat(list[Tensor([4, 71820, 1],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 13, 2541, 1],"float32"),Tensor([2, 13, 2541, 1],"float32"),Tensor([2, 13, 2541, 1],"float32"),Tensor([2, 13, 2541, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 8192, 1],"float32"),Tensor([1, 8192, 1],"float32"),Tensor([1, 8192, 30],"float32"),], axis=2, )
paddle.concat(tuple(Tensor([1050, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([108, 28, 28],"int32"),Tensor([97, 28, 28],"int32"),Tensor([110, 28, 28],"int32"),Tensor([11, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([26, 28, 28],"int32"),Tensor([81, 28, 28],"int32"),Tensor([39, 28, 28],"int32"),Tensor([16, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([879, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([71610, 4],"float32"),], )
paddle.concat(list[Tensor([202752, 1],"int32"),Tensor([50688, 1],"int32"),Tensor([12672, 1],"int32"),Tensor([3168, 1],"int32"),Tensor([792, 1],"int32"),], axis=0, )
paddle.concat(list[Tensor([55440],"int32"),Tensor([55440],"int32"),Tensor([55440],"int32"),Tensor([55440],"int32"),], )
paddle.concat(list[Tensor([8, 3, 6804, 1],"float32"),Tensor([8, 3, 6804, 1],"float32"),Tensor([8, 3, 6804, 1],"float32"),Tensor([8, 3, 6804, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([17, 28, 28],"int32"),Tensor([15, 28, 28],"int32"),Tensor([109, 28, 28],"int32"),Tensor([36, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([33, 28, 28],"int32"),Tensor([107, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([4, 60480, 4],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([778, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([64512, 4],"float32"),Tensor([16128, 4],"float32"),Tensor([4032, 4],"float32"),Tensor([1008, 4],"float32"),Tensor([252, 4],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 256, 40],"float32"),Tensor([2, 1024, 40],"float32"),Tensor([2, 4096, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([48, 28, 28],"int32"),Tensor([56, 28, 28],"int32"),Tensor([38, 28, 28],"int32"),Tensor([110, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([27, 28, 28],"int32"),Tensor([39, 28, 28],"int32"),Tensor([32, 28, 28],"int32"),Tensor([45, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([16, 80, 8, 6],"float32"),Tensor([16, 80, 8, 6],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 144000, 1],"float16"),Tensor([4, 36000, 1],"float16"),Tensor([4, 9000, 1],"float16"),Tensor([4, 2250, 1],"float16"),Tensor([4, 585, 1],"float16"),], axis=1, )
paddle.concat(list[Tensor([4, 1, 168, 156],"float32"),Tensor([4, 1, 168, 156],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 38940, 1],"float16"),], axis=1, )
paddle.concat(list[Tensor([72960, 4],"float32"),], )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([42, 28, 28],"int32"),Tensor([89, 28, 28],"int32"),Tensor([77, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 19, 3549, 1],"float32"),Tensor([2, 19, 3549, 1],"float32"),Tensor([2, 19, 3549, 1],"float32"),Tensor([2, 19, 3549, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 15, 361],"float32"),Tensor([8, 15, 1444],"float32"),Tensor([8, 15, 5776],"float32"),], axis=-1, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([47, 28, 28],"int32"),Tensor([77, 28, 28],"int32"),Tensor([24, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([44640],"int32"),Tensor([44640],"int32"),Tensor([44640],"int32"),Tensor([44640],"int32"),], )
paddle.concat(list[Tensor([8, 14, 225],"float32"),Tensor([8, 14, 900],"float32"),Tensor([8, 14, 3600],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 50400, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([41, 28, 28],"int32"),Tensor([33, 28, 28],"int32"),Tensor([62, 28, 28],"int32"),Tensor([19, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([4, 51030, 1],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([907, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([4, 68985, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 4],"float32"),Tensor([1, 25920, 4],"float32"),Tensor([1, 6480, 4],"float32"),Tensor([1, 1620, 4],"float32"),Tensor([1, 420, 4],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([2, 64, 22, 22],"float32"),Tensor([2, 64, 22, 22],"float32"),), axis=1, )
paddle.concat(list[Tensor([2, 14, 2704],"float32"),Tensor([2, 14, 676],"float32"),Tensor([2, 14, 169],"float32"),Tensor([2, 14, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([55680, 4],"float32"),Tensor([55680, 4],"float32"),Tensor([55680, 4],"float32"),Tensor([55680, 4],"float32"),], )
paddle.concat(list[Tensor([64170],"int32"),Tensor([64170],"int32"),Tensor([64170],"int32"),Tensor([64170],"int32"),], )
paddle.concat(list[Tensor([1, 3, 10285, 1],"float32"),Tensor([1, 3, 10285, 1],"float32"),Tensor([1, 3, 10285, 1],"float32"),Tensor([1, 3, 10285, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 1344, 14, 14],"float32"),Tensor([2, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([1151, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([64, 1296, 4],"float32"),Tensor([64, 324, 4],"float32"),Tensor([64, 81, 4],"float32"),Tensor([64, 25, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 60480, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 3, 9261, 1],"float32"),Tensor([2, 3, 9261, 1],"float32"),Tensor([2, 3, 9261, 1],"float32"),Tensor([2, 3, 9261, 1],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([272, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 12, 6400],"float32"),Tensor([2, 12, 1600],"float32"),Tensor([2, 12, 400],"float32"),Tensor([2, 12, 100],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 21, 5376, 1],"float32"),Tensor([2, 21, 5376, 1],"float32"),Tensor([2, 21, 5376, 1],"float32"),Tensor([2, 21, 5376, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([41, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([119, 28, 28],"int32"),Tensor([65, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([5, 15, 1280],"float32"),Tensor([5, 1, 1280],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 55755, 4],"float16"),], axis=1, )
paddle.concat(list[Tensor([400, 64],"float16"),Tensor([400, 64],"float16"),Tensor([400, 64],"float16"),Tensor([400, 64],"float16"),], axis=1, )
paddle.concat(tuple(Tensor([762, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 289, 10],"float32"),Tensor([2, 1156, 10],"float32"),Tensor([2, 4624, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([34, 28, 28],"int32"),Tensor([28, 28, 28],"int32"),Tensor([40, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([1214, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([919, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 15, 6069, 1],"float32"),Tensor([2, 15, 6069, 1],"float32"),Tensor([2, 15, 6069, 1],"float32"),Tensor([2, 15, 6069, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([16, 6, 121],"float32"),Tensor([16, 6, 484],"float32"),Tensor([16, 6, 1936],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 768, 23, 23],"float32"),Tensor([1, 256, 23, 23],"float32"),Tensor([1, 256, 23, 23],"float32"),Tensor([1, 256, 23, 23],"float32"),Tensor([1, 256, 23, 23],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 1, 144, 168],"float32"),Tensor([4, 1, 144, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([225, 256],"float32"),Tensor([225, 256],"float32"),Tensor([225, 256],"float32"),Tensor([225, 256],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 1, 136, 168],"float32"),Tensor([4, 1, 136, 168],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([275, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([16, 2541, 2],"float32"),Tensor([16, 2541, 2],"float32"),], -1, )
paddle.concat(list[Tensor([8, 8, 196],"float32"),Tensor([8, 8, 784],"float32"),Tensor([8, 8, 3136],"float32"),], axis=-1, )
paddle.concat(list[Tensor([54600, 4],"float32"),], )
paddle.concat(list[Tensor([2, 14, 3600],"float32"),Tensor([2, 14, 900],"float32"),Tensor([2, 14, 225],"float32"),Tensor([2, 14, 64],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 8192, 27],"float32"),Tensor([1, 8192, 1],"float32"),Tensor([1, 8192, 4],"float32"),], axis=2, )
paddle.concat(list[Tensor([64, 192, 7, 7],"float32"),Tensor([64, 64, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 206, 8, 96],"float16"),Tensor([2, 1, 8, 96],"float16"),], axis=1, )
paddle.concat(tuple(Tensor([991, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([71680, 4],"float32"),Tensor([17920, 4],"float32"),Tensor([4480, 4],"float32"),Tensor([1120, 4],"float32"),Tensor([280, 4],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 8, 6069, 1],"float32"),Tensor([2, 8, 6069, 1],"float32"),Tensor([2, 8, 6069, 1],"float32"),Tensor([2, 8, 6069, 1],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([327, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([20000, 1],"float32"),Tensor([20000, 1],"float32"),Tensor([20000, 1],"float32"),Tensor([20000, 1],"float32"),Tensor([20000, 1],"float32"),], -1, )
paddle.concat(list[Tensor([2, 16, 6069, 1],"float32"),Tensor([2, 16, 6069, 1],"float32"),Tensor([2, 16, 6069, 1],"float32"),Tensor([2, 16, 6069, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 62400, 1],"float16"),], axis=1, )
paddle.concat(list[Tensor([42, 28, 28],"int32"),Tensor([20, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([12, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([87, 28, 28],"int32"),Tensor([91, 28, 28],"int32"),Tensor([30, 28, 28],"int32"),Tensor([11, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([8, 10000, 1],"float32"),Tensor([8, 2500, 1],"float32"),Tensor([8, 625, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 53100, 1],"float16"),], axis=1, )
paddle.concat(tuple(Tensor([960, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([8, 16, 324],"float32"),Tensor([8, 16, 1296],"float32"),Tensor([8, 16, 5184],"float32"),], axis=-1, )
paddle.concat(list[Tensor([245520],"int32"),Tensor([245520],"int32"),Tensor([245520],"int32"),Tensor([245520],"int32"),], )
paddle.concat(tuple(Tensor([1127, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([16, 28, 28],"int32"),Tensor([8, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([30, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([23, 28, 28],"int32"),Tensor([95, 28, 28],"int32"),Tensor([94, 28, 28],"int32"),Tensor([28, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([112, 28, 28],"int32"),Tensor([115, 28, 28],"int32"),Tensor([90, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([4, 1, 100, 160],"float32"),Tensor([4, 1, 100, 160],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 12, 4165, 1],"float32"),Tensor([1, 12, 4165, 1],"float32"),Tensor([1, 12, 4165, 1],"float32"),Tensor([1, 12, 4165, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 6, 7581, 1],"float32"),Tensor([2, 6, 7581, 1],"float32"),Tensor([2, 6, 7581, 1],"float32"),Tensor([2, 6, 7581, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([8, 3, 484],"float32"),Tensor([8, 3, 1936],"float32"),Tensor([8, 3, 7744],"float32"),], axis=-1, )
paddle.concat(list[Tensor([84375, 4],"float32"),], )
paddle.concat(list[Tensor([2, 92, 8, 96],"float16"),Tensor([2, 1, 8, 96],"float16"),], axis=1, )
paddle.concat(tuple(Tensor([1291, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([16, 28, 28],"int32"),Tensor([64, 28, 28],"int32"),Tensor([30, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([70080, 4],"float32"),], )
paddle.concat(list[Tensor([4, 46920, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([34, 28, 28],"int32"),Tensor([35, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([95, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([4, 53760, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 59250, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 160, 18, 18],"float32"),Tensor([1, 160, 18, 18],"float32"),], 1, )
paddle.concat(list[Tensor([4, 119, 100],"float32"),Tensor([4, 119, 400],"float32"),Tensor([4, 119, 1600],"float32"),], axis=-1, )
paddle.concat(list[Tensor([103, 28, 28],"int32"),Tensor([65, 28, 28],"int32"),Tensor([110, 28, 28],"int32"),Tensor([38, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([96, 28, 28],"int32"),Tensor([52, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([14, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([88560],"int32"),Tensor([88560],"int32"),Tensor([88560],"int32"),Tensor([88560],"int32"),], )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([58, 28, 28],"int32"),Tensor([94, 28, 28],"int32"),Tensor([57, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([24, 28, 28],"int32"),Tensor([54, 28, 28],"int32"),Tensor([44, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([1282, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([157696, 4],"float16"),Tensor([39424, 4],"float16"),Tensor([9856, 4],"float16"),Tensor([2464, 4],"float16"),Tensor([616, 4],"float16"),], axis=0, )
paddle.concat(list[Tensor([4, 192, 14, 14],"float32"),Tensor([4, 192, 14, 14],"float32"),Tensor([4, 192, 14, 14],"float32"),Tensor([4, 192, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 3, 5440, 1],"float32"),Tensor([2, 3, 5440, 1],"float32"),Tensor([2, 3, 5440, 1],"float32"),Tensor([2, 3, 5440, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([16, 28, 28],"int32"),Tensor([10, 28, 28],"int32"),Tensor([91, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 96, 34, 34],"float32"),Tensor([2, 192, 34, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([59295],"int32"),Tensor([59295],"int32"),Tensor([59295],"int32"),Tensor([59295],"int32"),], )
paddle.concat(list[Tensor([51240, 4],"float32"),Tensor([51240, 4],"float32"),Tensor([51240, 4],"float32"),Tensor([51240, 4],"float32"),], )
paddle.concat(list[Tensor([4, 1, 144, 152],"float32"),Tensor([4, 1, 144, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 160704, 1],"float32"),Tensor([4, 40176, 1],"float32"),Tensor([4, 10044, 1],"float32"),Tensor([4, 2511, 1],"float32"),Tensor([4, 672, 1],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([904, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([2, 64, 38, 38],"float32"),Tensor([2, 64, 38, 38],"float32"),), axis=1, )
paddle.concat(list[Tensor([61, 28, 28],"int32"),Tensor([31, 28, 28],"int32"),Tensor([33, 28, 28],"int32"),Tensor([76, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([4, 68625, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([69030, 4],"float32"),], )
paddle.concat(list[Tensor([324, 128],"float32"),Tensor([324, 128],"float32"),Tensor([324, 128],"float32"),Tensor([324, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([143360, 1],"float16"),Tensor([35840, 1],"float16"),Tensor([8960, 1],"float16"),Tensor([2240, 1],"float16"),Tensor([560, 1],"float16"),], axis=0, )
paddle.concat(tuple(Tensor([466, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([4, 1, 168, 140],"float32"),Tensor([4, 1, 168, 140],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 20, 6400],"float32"),Tensor([2, 20, 1600],"float32"),Tensor([2, 20, 400],"float32"),Tensor([2, 20, 100],"float32"),], axis=-1, )
paddle.concat(list[Tensor([49410],"int32"),Tensor([49410],"int32"),Tensor([49410],"int32"),Tensor([49410],"int32"),], )
paddle.concat(list[Tensor([4, 23, 225],"float32"),Tensor([4, 23, 900],"float32"),Tensor([4, 23, 3600],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 96, 20, 20],"float32"),Tensor([4, 192, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 10, 2541, 1],"float32"),Tensor([4, 10, 2541, 1],"float32"),Tensor([4, 10, 2541, 1],"float32"),Tensor([4, 10, 2541, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([2, 8, 4789, 1],"float32"),Tensor([2, 8, 4789, 1],"float32"),Tensor([2, 8, 4789, 1],"float32"),Tensor([2, 8, 4789, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([41, 28, 28],"int32"),Tensor([68, 28, 28],"int32"),Tensor([46, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([59, 28, 28],"int32"),Tensor([22, 28, 28],"int32"),Tensor([49, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([25, 28, 28],"int32"),Tensor([67, 28, 28],"int32"),Tensor([39, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([25, 28, 28],"int32"),Tensor([119, 28, 28],"int32"),Tensor([24, 28, 28],"int32"),Tensor([45, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([266, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([42, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([125, 28, 28],"int32"),Tensor([22, 28, 28],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([310, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([4, 46230, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([51840, 4],"float32"),Tensor([51840, 4],"float32"),Tensor([51840, 4],"float32"),Tensor([51840, 4],"float32"),], )
paddle.concat(list[Tensor([4, 1, 152, 132],"float32"),Tensor([4, 1, 152, 132],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([1290, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([72, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([86, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([171072, 4],"float32"),Tensor([42768, 4],"float32"),Tensor([10692, 4],"float32"),Tensor([2673, 4],"float32"),Tensor([714, 4],"float32"),], )
paddle.concat(list[Tensor([80, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([27, 28, 28],"int32"),Tensor([34, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([52, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),Tensor([77, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([55845],"int32"),Tensor([55845],"int32"),Tensor([55845],"int32"),Tensor([55845],"int32"),], )
paddle.concat(tuple(Tensor([1011, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 384, 14, 14],"float32"),Tensor([2, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 48384, 1],"float32"),Tensor([1, 1, 48384, 1],"float32"),Tensor([1, 1, 48384, 1],"float32"),Tensor([1, 1, 48384, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 54270, 1],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 10, 529],"float32"),Tensor([8, 10, 2116],"float32"),Tensor([8, 10, 8464],"float32"),], axis=-1, )
paddle.concat(list[Tensor([76260, 4],"float32"),], )
paddle.concat(list[Tensor([2, 14, 2541, 1],"float32"),Tensor([2, 14, 2541, 1],"float32"),Tensor([2, 14, 2541, 1],"float32"),Tensor([2, 14, 2541, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([243474],"int32"),Tensor([243474],"int32"),Tensor([243474],"int32"),Tensor([243474],"int32"),], )
paddle.concat(list[Tensor([4, 70290, 1],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 441, 40],"float32"),Tensor([2, 1764, 40],"float32"),Tensor([2, 7056, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([43, 28, 28],"int32"),Tensor([57, 28, 28],"int32"),Tensor([128, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([177408, 4],"float32"),Tensor([44352, 4],"float32"),Tensor([11088, 4],"float32"),Tensor([2772, 4],"float32"),Tensor([714, 4],"float32"),], )
paddle.concat(list[Tensor([38, 28, 28],"int32"),Tensor([37, 28, 28],"int32"),Tensor([38, 28, 28],"int32"),Tensor([35, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([1, 4096, 32],"float32"),Tensor([1, 1024, 32],"float32"),Tensor([1, 256, 32],"float32"),Tensor([1, 64, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 2, 7681, 1],"float32"),Tensor([2, 2, 7681, 1],"float32"),Tensor([2, 2, 7681, 1],"float32"),Tensor([2, 2, 7681, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([12, 28, 28],"int32"),Tensor([36, 28, 28],"int32"),Tensor([45, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 112, 8, 48],"float16"),Tensor([2, 112, 8, 48],"float16"),], axis=-1, )
paddle.concat(list[Tensor([2, 160, 20, 20],"float32"),Tensor([2, 160, 20, 20],"float32"),], 1, )
paddle.concat(list[Tensor([8, 3, 9382, 1],"float32"),Tensor([8, 3, 9382, 1],"float32"),Tensor([8, 3, 9382, 1],"float32"),Tensor([8, 3, 9382, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1000, 1, 31, 31],"float32"),], axis=1, )
paddle.concat(list[Tensor([6144],"bfloat16"),Tensor([32],"bfloat16"),Tensor([222720],"bfloat16"),Tensor([6144],"bfloat16"),Tensor([32],"bfloat16"),], 0, )
paddle.concat(tuple(Tensor([780, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([745, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 2144, 7, 7],"float32"),Tensor([2, 32, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 182400, 1],"float32"),Tensor([1, 45600, 1],"float32"),Tensor([1, 11400, 1],"float32"),Tensor([1, 2850, 1],"float32"),Tensor([1, 741, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 720, 14, 14],"float32"),Tensor([2, 48, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2048, 1, 32],"float16"),Tensor([1, 2048, 1, 32],"float16"),], axis=-1, )
paddle.concat(tuple(Tensor([515, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([8, 6, 400],"float32"),Tensor([8, 6, 1600],"float32"),Tensor([8, 6, 6400],"float32"),], axis=-1, )
paddle.concat(list[Tensor([88200, 4],"float32"),], )
paddle.concat(list[Tensor([128, 28, 28],"int32"),Tensor([110, 28, 28],"int32"),Tensor([46, 28, 28],"int32"),Tensor([95, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([41, 28, 28],"int32"),Tensor([14, 28, 28],"int32"),Tensor([44, 28, 28],"int32"),Tensor([46, 28, 28],"int32"),], axis=0, )
paddle.concat(list[Tensor([2, 18, 2541, 1],"float32"),Tensor([2, 18, 2541, 1],"float32"),Tensor([2, 18, 2541, 1],"float32"),Tensor([2, 18, 2541, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([4, 1, 12096, 1],"float32"),Tensor([4, 1, 12096, 1],"float32"),Tensor([4, 1, 12096, 1],"float32"),Tensor([4, 1, 12096, 1],"float32"),], axis=-1, )
paddle.copysign(Tensor([8, 17, 5, 6, 7],"float16"), Tensor([8, 17, 5, 6, 7],"float16"), )
paddle.cos(Tensor([1, 8192, 64],"float32"), )
paddle.cos(Tensor([529, 256],"float32"), )
paddle.cos(Tensor([1936, 256],"float32"), )
paddle.cos(Tensor([1, 4096, 1, 64],"float32"), )
paddle.cos(Tensor([1024, 256],"float32"), )
paddle.cos(Tensor([1500, 512],"float32"), )
paddle.cos(Tensor([5000, 192],"float32"), )
paddle.cos(Tensor([1296, 256],"float32"), )
paddle.cos(Tensor([1500, 384],"float32"), )
paddle.cos(Tensor([2116, 256],"float32"), )
paddle.cos(Tensor([1500, 640],"float32"), )
paddle.cos(Tensor([3136, 256],"float32"), )
paddle.cos(Tensor([4, 157920, 1],"float32"), )
paddle.cos(Tensor([4096, 128],"float32"), )
paddle.cos(Tensor([2304, 256],"float32"), )
paddle.cos(Tensor([484, 256],"float32"), )
paddle.cos(Tensor([2916, 256],"float32"), )
paddle.cos(Tensor([441, 256],"float32"), )
paddle.cos(Tensor([2704, 256],"float32"), )
paddle.cos(Tensor([1764, 256],"float32"), )
paddle.cos(Tensor([1500, 256],"float32"), )
paddle.cos(Tensor([3600, 256],"float32"), )
paddle.cos(Tensor([400, 256],"float32"), )
paddle.cos(Tensor([1156, 256],"float32"), )
paddle.cos(Tensor([6284, 25],"float32"), )
paddle.cos(Tensor([1444, 256],"float32"), )
paddle.cos(Tensor([1600, 64],"float32"), )
paddle.cos(Tensor([2, 107136, 1],"float32"), )
paddle.cos(Tensor([2116, 64],"float32"), )
paddle.cos(Tensor([3364, 256],"float32"), )
paddle.cos(Tensor([576, 256],"float32"), )
paddle.cos(Tensor([1, 4096, 1, 128],"float32"), )
paddle.cos(Tensor([1024, 102],"float32"), )
paddle.cos(Tensor([1500, 192],"float32"), )
paddle.cos(Tensor([2500, 256],"float32"), )
paddle.cos(Tensor([400, 260],"float32"), )
paddle.cos(Tensor([2304, 64],"float32"), )
paddle.cos(Tensor([1600, 256],"float32"), )
paddle.cos(Tensor([2048, 32],"float32"), )
paddle.cos(Tensor([196, 256],"float32"), )
paddle.cos(Tensor([144, 256],"float32"), )
paddle.cos(Tensor([4000, 12],"float32"), )
paddle.cos(Tensor([196, 192],"float32"), )
paddle.cos(Tensor([400, 234],"float32"), )
paddle.cos(Tensor([100, 128],"float32"), )
paddle.cos(Tensor([256, 256],"float32"), )
paddle.cos(Tensor([256, 128],"float32"), )
paddle.cos(Tensor([225, 256],"float32"), )
paddle.cos(Tensor([256, 64],"float32"), )
paddle.cos(Tensor([16800, 1],"float32"), )
paddle.cos(Tensor([400, 64],"float32"), )
paddle.cos(Tensor([529, 128],"float32"), )
paddle.cos(Tensor([200, 64],"float32"), )
paddle.cos(Tensor([400, 96],"float32"), )
paddle.cos(Tensor([529, 64],"float32"), )
paddle.cos(Tensor([169, 128],"float32"), )
paddle.cos(Tensor([400, 180],"float32"), )
paddle.cos(Tensor([289, 128],"float32"), )
paddle.cos(Tensor([144, 128],"float32"), )
paddle.cos(Tensor([361, 256],"float32"), )
paddle.cos(Tensor([289, 64],"float32"), )
paddle.cos(Tensor([484, 128],"float32"), )
paddle.cos(Tensor([100, 256],"float32"), )
paddle.cos(Tensor([121, 128],"float32"), )
paddle.cos(Tensor([196, 128],"float32"), )
paddle.cos(Tensor([324, 128],"float32"), )
paddle.cos(Tensor([1291, 25],"float32"), )
paddle.cos(Tensor([324, 256],"float32"), )
paddle.cos(Tensor([400, 128],"float32"), )
paddle.cos(Tensor([529, 96],"float32"), )
paddle.cos(Tensor([22120, 1],"float32"), )
paddle.cos(Tensor([441, 128],"float32"), )
paddle.cos(Tensor([225, 64],"float32"), )
paddle.cos(Tensor([361, 128],"float32"), )
paddle.cos(Tensor([4004, 12],"float32"), )
paddle.cos(Tensor([1000, 10],"float32"), )
paddle.cos(Tensor([121, 256],"float32"), )
paddle.cos(Tensor([36, 306],"float32"), )
paddle.cos(Tensor([1200, 25],"float32"), )
paddle.cos(Tensor([169, 256],"float32"), )
paddle.cos(Tensor([512, 128],"float32"), )
paddle.cos(Tensor([289, 256],"float32"), )
paddle.cos(Tensor([200, 128],"float32"), )
paddle.cos(Tensor([576, 128],"float32"), )
paddle.cos(Tensor([225, 128],"float32"), )
paddle.cos(Tensor([4096, 1],"float32"), )
paddle.cos(Tensor([64, 64],"float32"), )
paddle.cos(Tensor([8192, 1],"float32"), )
paddle.cos(Tensor([100, 25],"float32"), )
paddle.cos(Tensor([40, 64],"float32"), )
paddle.cos(x=Tensor([30, 128],"float32"), )
paddle.cos(Tensor([50, 128],"float32"), )
paddle.cos(Tensor([512, 8],"float32"), )
paddle.cos(Tensor([4800, 1],"float32"), )
paddle.cos(Tensor([64, 50],"float32"), )
paddle.cos(Tensor([1025],"float64"), )
paddle.cos(Tensor([450, 12],"float32"), )
paddle.cos(Tensor([512, 16],"float32"), )
paddle.cos(Tensor([2048, 1],"float32"), )
paddle.cos(Tensor([454, 12],"float32"), )
paddle.cos(Tensor([250, 30],"float32"), )
paddle.cos(Tensor([1, 128, 1, 32],"float32"), )
paddle.cos(Tensor([256, 30],"float32"), )
paddle.cos(Tensor([2048, 2],"float32"), )
paddle.cummax(Tensor([100, 100],"float32"), )
paddle.cummax(Tensor([100, 100],"int32"), axis=0, )
paddle.cummax(Tensor([100, 100],"float32"), axis=0, )
paddle.cummax(Tensor([100, 100],"float32"), axis=-2, )
paddle.cummax(Tensor([100, 100],"float32"), axis=-1, )
paddle.cummin(Tensor([100, 100],"float32"), axis=0, )
paddle.cummin(Tensor([100, 100],"float32"), axis=-2, )
paddle.cummin(Tensor([100, 100],"int32"), axis=0, )
paddle.cummin(Tensor([100, 100],"float32"), )
paddle.cummin(Tensor([100, 100],"float32"), axis=-1, )
paddle.cumsum(Tensor([955230],"float32"), axis=0, )
paddle.cumsum(Tensor([842436],"float32"), axis=0, )
paddle.cumsum(Tensor([915353],"float32"), axis=0, )
paddle.cumsum(Tensor([994032],"float32"), axis=0, )
paddle.cumsum(Tensor([795938],"float32"), axis=0, )
paddle.cumsum(Tensor([823810],"float32"), axis=0, )
paddle.cumsum(Tensor([944010],"float32"), axis=0, )
paddle.cumsum(Tensor([895208],"float32"), axis=0, )
paddle.cumsum(Tensor([881672],"float32"), axis=0, )
paddle.cumsum(Tensor([934407],"float32"), axis=0, )
paddle.cumsum(Tensor([894537],"float32"), axis=0, )
paddle.cumsum(Tensor([961565],"float32"), axis=0, )
paddle.cumsum(Tensor([868526],"float32"), axis=0, )
paddle.cumsum(Tensor([979558],"float32"), axis=0, )
paddle.cumsum(Tensor([883912],"float32"), axis=0, )
paddle.cumsum(Tensor([955839],"float32"), axis=0, )
paddle.cumsum(Tensor([877310],"float32"), axis=0, )
paddle.cumsum(Tensor([935486],"float32"), axis=0, )
paddle.cumsum(Tensor([851669],"float32"), axis=0, )
paddle.cumsum(Tensor([718484],"float32"), axis=0, )
paddle.cumsum(Tensor([910472],"float32"), axis=0, )
paddle.cumsum(Tensor([925403],"float32"), axis=0, )
paddle.cumsum(Tensor([847066],"float32"), axis=0, )
paddle.cumsum(Tensor([831166],"float32"), axis=0, )
paddle.cumsum(Tensor([912645],"float32"), axis=0, )
paddle.cumsum(Tensor([894148],"float32"), axis=0, )
paddle.cumsum(Tensor([804637],"float32"), axis=0, )
paddle.cumsum(Tensor([982059],"float32"), axis=0, )
paddle.cumsum(Tensor([968690],"float32"), axis=0, )
paddle.cumsum(Tensor([813649],"float32"), axis=0, )
paddle.cumsum(Tensor([724723],"float32"), axis=0, )
paddle.cumsum(Tensor([859234],"float32"), axis=0, )
paddle.cumsum(Tensor([843950],"float32"), axis=0, )
paddle.cumsum(Tensor([743793],"float32"), axis=0, )
paddle.cumsum(Tensor([802335],"float32"), axis=0, )
paddle.cumsum(Tensor([965841],"float32"), axis=0, )
paddle.cumsum(Tensor([907233],"float32"), axis=0, )
paddle.cumsum(Tensor([884532],"float32"), axis=0, )
paddle.cumsum(Tensor([906698],"float32"), axis=0, )
paddle.cumsum(Tensor([870169],"float32"), axis=0, )
paddle.cumsum(Tensor([857697],"float32"), axis=0, )
paddle.cumsum(Tensor([855961],"float32"), axis=0, )
paddle.cumsum(Tensor([850906],"float32"), axis=0, )
paddle.cumsum(Tensor([944052],"float32"), axis=0, )
paddle.cumsum(Tensor([876793],"float32"), axis=0, )
paddle.cumsum(Tensor([899302],"float32"), axis=0, )
paddle.cumsum(Tensor([961572],"float32"), axis=0, )
paddle.cumsum(Tensor([866066],"float32"), axis=0, )
paddle.cumsum(Tensor([835629],"float32"), axis=0, )
paddle.cumsum(Tensor([957711],"float32"), axis=0, )
paddle.cumsum(Tensor([860575],"float32"), axis=0, )
paddle.cumsum(Tensor([940340],"float32"), axis=0, )
paddle.cumsum(Tensor([848715],"float32"), axis=0, )
paddle.cumsum(Tensor([792604],"float32"), axis=0, )
paddle.cumsum(Tensor([908154],"float32"), axis=0, )
paddle.cumsum(Tensor([791136],"float32"), axis=0, )
paddle.cumsum(Tensor([852880],"float32"), axis=0, )
paddle.cumsum(Tensor([967354],"float32"), axis=0, )
paddle.cumsum(Tensor([849937],"float32"), axis=0, )
paddle.cumsum(Tensor([908431],"float32"), axis=0, )
paddle.cumsum(Tensor([871821],"float32"), axis=0, )
paddle.cumsum(Tensor([920493],"float32"), axis=0, )
paddle.cumsum(Tensor([920264],"float32"), axis=0, )
paddle.cumsum(Tensor([822454],"float32"), axis=0, )
paddle.cumsum(Tensor([898752],"float32"), axis=0, )
paddle.cumsum(Tensor([966472],"float32"), axis=0, )
paddle.cumsum(Tensor([976558],"float32"), axis=0, )
paddle.cumsum(Tensor([945343],"float32"), axis=0, )
paddle.cumsum(Tensor([815298],"float32"), axis=0, )
paddle.cumsum(Tensor([727244],"float32"), axis=0, )
paddle.cumsum(Tensor([840114],"float32"), axis=0, )
paddle.cumsum(Tensor([925379],"float32"), axis=0, )
paddle.cumsum(Tensor([790972],"float32"), axis=0, )
paddle.cumsum(Tensor([961422],"float32"), axis=0, )
paddle.cumsum(Tensor([990230],"float32"), axis=0, )
paddle.cumsum(Tensor([941057],"float32"), axis=0, )
paddle.cumsum(Tensor([924014],"float32"), axis=0, )
paddle.cumsum(Tensor([938499],"float32"), axis=0, )
paddle.cumsum(Tensor([809355],"float32"), axis=0, )
paddle.cumsum(Tensor([901559],"float32"), axis=0, )
paddle.cumsum(Tensor([973556],"float32"), axis=0, )
paddle.cumsum(Tensor([961439],"float32"), axis=0, )
paddle.cumsum(Tensor([884750],"float32"), axis=0, )
paddle.cumsum(Tensor([924579],"float32"), axis=0, )
paddle.cumsum(Tensor([808670],"float32"), axis=0, )
paddle.cumsum(Tensor([926271],"float32"), axis=0, )
paddle.cumsum(Tensor([918389],"float32"), axis=0, )
paddle.cumsum(Tensor([797058],"float32"), axis=0, )
paddle.cumsum(Tensor([760627],"float32"), axis=0, )
paddle.cumsum(Tensor([817632],"float32"), axis=0, )
paddle.cumsum(Tensor([943934],"float32"), axis=0, )
paddle.cumsum(Tensor([875320],"float32"), axis=0, )
paddle.cumsum(Tensor([958864],"float32"), axis=0, )
paddle.cumsum(Tensor([776379],"float32"), axis=0, )
paddle.cumsum(Tensor([863412],"float32"), axis=0, )
paddle.cumsum(Tensor([913677],"float32"), axis=0, )
paddle.cumsum(Tensor([717326],"float32"), axis=0, )
paddle.cumsum(Tensor([905197],"float32"), axis=0, )
paddle.cumsum(Tensor([891361],"float32"), axis=0, )
paddle.cumsum(Tensor([929896],"float32"), axis=0, )
paddle.cumsum(Tensor([826111],"float32"), axis=0, )
paddle.cumsum(Tensor([905529],"float32"), axis=0, )
paddle.cumsum(Tensor([919510],"float32"), axis=0, )
paddle.cumsum(Tensor([799391],"float32"), axis=0, )
paddle.cumsum(Tensor([910109],"float32"), axis=0, )
paddle.cumsum(Tensor([930253],"float32"), axis=0, )
paddle.cumsum(Tensor([895846],"float32"), axis=0, )
paddle.cumsum(Tensor([878938],"float32"), axis=0, )
paddle.cumsum(Tensor([878743],"float32"), axis=0, )
paddle.cumsum(Tensor([961515],"float32"), axis=0, )
paddle.cumsum(Tensor([971838],"float32"), axis=0, )
paddle.cumsum(Tensor([822669],"float32"), axis=0, )
paddle.cumsum(Tensor([951834],"float32"), axis=0, )
paddle.cumsum(Tensor([829317],"float32"), axis=0, )
paddle.cumsum(Tensor([932844],"float32"), axis=0, )
paddle.cumsum(Tensor([966455],"float32"), axis=0, )
paddle.cumsum(Tensor([972067],"float32"), axis=0, )
paddle.cumsum(Tensor([990386],"float32"), axis=0, )
paddle.cumsum(Tensor([889653],"float32"), axis=0, )
paddle.cumsum(Tensor([906544],"float32"), axis=0, )
paddle.cumsum(Tensor([847507],"float32"), axis=0, )
paddle.cumsum(Tensor([963948],"float32"), axis=0, )
paddle.cumsum(Tensor([947132],"float32"), axis=0, )
paddle.cumsum(Tensor([720537],"float32"), axis=0, )
paddle.cumsum(Tensor([917966],"float32"), axis=0, )
paddle.cumsum(Tensor([872239],"float32"), axis=0, )
paddle.cumsum(Tensor([830677],"float32"), axis=0, )
paddle.cumsum(Tensor([985929],"float32"), axis=0, )
paddle.cumsum(Tensor([962872],"float32"), axis=0, )
paddle.cumsum(Tensor([862614],"float32"), axis=0, )
paddle.cumsum(Tensor([917479],"float32"), axis=0, )
paddle.cumsum(Tensor([865739],"float32"), axis=0, )
paddle.cumsum(Tensor([860364],"float32"), axis=0, )
paddle.cumsum(Tensor([885918],"float32"), axis=0, )
paddle.cumsum(Tensor([905744],"float32"), axis=0, )
paddle.cumsum(Tensor([797269],"float32"), axis=0, )
paddle.cumsum(Tensor([920160],"float32"), axis=0, )
paddle.cumsum(Tensor([900266],"float32"), axis=0, )
paddle.cumsum(Tensor([805830],"float32"), axis=0, )
paddle.cumsum(Tensor([970473],"float32"), axis=0, )
paddle.cumsum(Tensor([890649],"float32"), axis=0, )
paddle.cumsum(Tensor([911146],"float32"), axis=0, )
paddle.cumsum(Tensor([912773],"float32"), axis=0, )
paddle.cumsum(Tensor([989969],"float32"), axis=0, )
paddle.cumsum(Tensor([941840],"float32"), axis=0, )
paddle.cumsum(Tensor([739406],"float32"), axis=0, )
paddle.cumsum(Tensor([717215],"float32"), axis=0, )
paddle.cumsum(Tensor([863823],"float32"), axis=0, )
paddle.cumsum(Tensor([733968],"float32"), axis=0, )
paddle.cumsum(Tensor([882579],"float32"), axis=0, )
paddle.cumsum(Tensor([823140],"float32"), axis=0, )
paddle.cumsum(Tensor([752583],"float32"), axis=0, )
paddle.cumsum(Tensor([888312],"float32"), axis=0, )
paddle.cumsum(Tensor([953556],"float32"), axis=0, )
paddle.cumsum(Tensor([986661],"float32"), axis=0, )
paddle.cumsum(Tensor([851411],"float32"), axis=0, )
paddle.cumsum(Tensor([996211],"float32"), axis=0, )
paddle.cumsum(Tensor([973822],"float32"), axis=0, )
paddle.cumsum(Tensor([793034],"float32"), axis=0, )
paddle.cumsum(Tensor([882837],"float32"), axis=0, )
paddle.cumsum(Tensor([895230],"float32"), axis=0, )
paddle.cumsum(Tensor([910774],"float32"), axis=0, )
paddle.cumsum(Tensor([916356],"float32"), axis=0, )
paddle.cumsum(Tensor([942419],"float32"), axis=0, )
paddle.cumsum(Tensor([790612],"float32"), axis=0, )
paddle.cumsum(Tensor([854590],"float32"), axis=0, )
paddle.cumsum(Tensor([915856],"float32"), axis=0, )
paddle.cumsum(Tensor([926213],"float32"), axis=0, )
paddle.cumsum(Tensor([917660],"float32"), axis=0, )
paddle.cumsum(Tensor([899774],"float32"), axis=0, )
paddle.cumsum(Tensor([895990],"float32"), axis=0, )
paddle.cumsum(Tensor([822155],"float32"), axis=0, )
paddle.cumsum(Tensor([859740],"float32"), axis=0, )
paddle.cumsum(Tensor([807549],"float32"), axis=0, )
paddle.cumsum(Tensor([959358],"float32"), axis=0, )
paddle.cumsum(Tensor([835357],"float32"), axis=0, )
paddle.cumsum(Tensor([861519],"float32"), axis=0, )
paddle.cumsum(Tensor([747492],"float32"), axis=0, )
paddle.cumsum(Tensor([965701],"float32"), axis=0, )
paddle.cumsum(Tensor([858907],"float32"), axis=0, )
paddle.cumsum(Tensor([933492],"float32"), axis=0, )
paddle.cumsum(Tensor([968731],"float32"), axis=0, )
paddle.cumsum(Tensor([903681],"float32"), axis=0, )
paddle.cumsum(Tensor([735573],"float32"), axis=0, )
paddle.cumsum(Tensor([912236],"float32"), axis=0, )
paddle.cumsum(Tensor([836381],"float32"), axis=0, )
paddle.cumsum(Tensor([913977],"float32"), axis=0, )
paddle.cumsum(Tensor([894988],"float32"), axis=0, )
paddle.cumsum(Tensor([897440],"float32"), axis=0, )
paddle.cumsum(Tensor([913153],"float32"), axis=0, )
paddle.cumsum(Tensor([962740],"float32"), axis=0, )
paddle.cumsum(Tensor([980291],"float32"), axis=0, )
paddle.cumsum(Tensor([865633],"float32"), axis=0, )
paddle.cumsum(Tensor([867608],"float32"), axis=0, )
paddle.cumsum(Tensor([904000],"float32"), axis=0, )
paddle.cumsum(Tensor([892196],"float32"), axis=0, )
paddle.cumsum(Tensor([834985],"float32"), axis=0, )
paddle.cumsum(Tensor([943234],"float32"), axis=0, )
paddle.cumsum(Tensor([926689],"float32"), axis=0, )
paddle.cumsum(Tensor([887580],"float32"), axis=0, )
paddle.cumsum(Tensor([923942],"float32"), axis=0, )
paddle.cumsum(Tensor([882763],"float32"), axis=0, )
paddle.cumsum(Tensor([904294],"float32"), axis=0, )
paddle.cumsum(Tensor([817975],"float32"), axis=0, )
paddle.cumsum(Tensor([951555],"float32"), axis=0, )
paddle.cumsum(Tensor([894751],"float32"), axis=0, )
paddle.cumsum(Tensor([890392],"float32"), axis=0, )
paddle.cumsum(Tensor([855080],"float32"), axis=0, )
paddle.cumsum(Tensor([828406],"float32"), axis=0, )
paddle.cumsum(Tensor([837723],"float32"), axis=0, )
paddle.cumsum(Tensor([879741],"float32"), axis=0, )
paddle.cumsum(Tensor([854532],"float32"), axis=0, )
paddle.cumsum(Tensor([966506],"float32"), axis=0, )
paddle.cumsum(Tensor([768095],"float32"), axis=0, )
paddle.cumsum(Tensor([946388],"float32"), axis=0, )
paddle.cumsum(Tensor([763098],"float32"), axis=0, )
paddle.cumsum(Tensor([725292],"float32"), axis=0, )
paddle.cumsum(Tensor([865513],"float32"), axis=0, )
paddle.cumsum(Tensor([833202],"float32"), axis=0, )
paddle.cumsum(Tensor([873305],"float32"), axis=0, )
paddle.cumsum(Tensor([914729],"float32"), axis=0, )
paddle.cumsum(Tensor([931439],"float32"), axis=0, )
paddle.cumsum(Tensor([905562],"float32"), axis=0, )
paddle.cumsum(Tensor([805559],"float32"), axis=0, )
paddle.cumsum(Tensor([856799],"float32"), axis=0, )
paddle.cumsum(Tensor([830827],"float32"), axis=0, )
paddle.cumsum(Tensor([819339],"float32"), axis=0, )
paddle.cumsum(Tensor([810566],"float32"), axis=0, )
paddle.cumsum(Tensor([912939],"float32"), axis=0, )
paddle.cumsum(Tensor([984839],"float32"), axis=0, )
paddle.cumsum(Tensor([958929],"float32"), axis=0, )
paddle.cumsum(Tensor([995655],"float32"), axis=0, )
paddle.cumsum(Tensor([844320],"float32"), axis=0, )
paddle.cumsum(Tensor([908506],"float32"), axis=0, )
paddle.cumsum(Tensor([803365],"float32"), axis=0, )
paddle.cumsum(Tensor([915887],"float32"), axis=0, )
paddle.cumsum(Tensor([910889],"float32"), axis=0, )
paddle.cumsum(Tensor([849654],"float32"), axis=0, )
paddle.cumsum(Tensor([848984],"float32"), axis=0, )
paddle.cumsum(Tensor([913434],"float32"), axis=0, )
paddle.cumsum(Tensor([762435],"float32"), axis=0, )
paddle.cumsum(Tensor([857322],"float32"), axis=0, )
paddle.cumsum(Tensor([957708],"float32"), axis=0, )
paddle.cumsum(Tensor([802611],"float32"), axis=0, )
paddle.cumsum(Tensor([830606],"float32"), axis=0, )
paddle.cumsum(Tensor([958699],"float32"), axis=0, )
paddle.cumsum(Tensor([818738],"float32"), axis=0, )
paddle.cumsum(Tensor([898090],"float32"), axis=0, )
paddle.cumsum(Tensor([978997],"float32"), axis=0, )
paddle.cumsum(Tensor([842480],"float32"), axis=0, )
paddle.cumsum(Tensor([923067],"float32"), axis=0, )
paddle.cumsum(Tensor([797394],"float32"), axis=0, )
paddle.cumsum(Tensor([890854],"float32"), axis=0, )
paddle.cumsum(Tensor([757880],"float32"), axis=0, )
paddle.cumsum(Tensor([821415],"float32"), axis=0, )
paddle.cumsum(Tensor([888943],"float32"), axis=0, )
paddle.cumsum(Tensor([779371],"float32"), axis=0, )
paddle.cumsum(Tensor([911663],"float32"), axis=0, )
paddle.cumsum(Tensor([849325],"float32"), axis=0, )
paddle.cumsum(Tensor([899981],"float32"), axis=0, )
paddle.cumsum(Tensor([969511],"float32"), axis=0, )
paddle.cumsum(Tensor([910594],"float32"), axis=0, )
paddle.cumsum(Tensor([786202],"float32"), axis=0, )
paddle.cumsum(Tensor([834803],"float32"), axis=0, )
paddle.cumsum(Tensor([846218],"float32"), axis=0, )
paddle.cumsum(Tensor([853688],"float32"), axis=0, )
paddle.cumsum(Tensor([916011],"float32"), axis=0, )
paddle.cumsum(Tensor([919706],"float32"), axis=0, )
paddle.cumsum(Tensor([859169],"float32"), axis=0, )
paddle.cumsum(Tensor([917016],"float32"), axis=0, )
paddle.cumsum(Tensor([889717],"float32"), axis=0, )
paddle.cumsum(Tensor([833791],"float32"), axis=0, )
paddle.cumsum(Tensor([899796],"float32"), axis=0, )
paddle.cumsum(Tensor([940154],"float32"), axis=0, )
paddle.cumsum(Tensor([929142],"float32"), axis=0, )
paddle.cumsum(Tensor([886248],"float32"), axis=0, )
paddle.cumsum(Tensor([874312],"float32"), axis=0, )
paddle.cumsum(Tensor([904357],"float32"), axis=0, )
paddle.cumsum(Tensor([944676],"float32"), axis=0, )
paddle.cumsum(Tensor([958738],"float32"), axis=0, )
paddle.cumsum(Tensor([931692],"float32"), axis=0, )
paddle.cumsum(Tensor([932645],"float32"), axis=0, )
paddle.cumsum(Tensor([905200],"float32"), axis=0, )
paddle.cumsum(Tensor([817210],"float32"), axis=0, )
paddle.cumsum(Tensor([992456],"float32"), axis=0, )
paddle.cumsum(Tensor([923373],"float32"), axis=0, )
paddle.cumsum(Tensor([797922],"float32"), axis=0, )
paddle.cumsum(Tensor([941136],"float32"), axis=0, )
paddle.cumsum(Tensor([937631],"float32"), axis=0, )
paddle.cumsum(Tensor([819889],"float32"), axis=0, )
paddle.cumsum(Tensor([860766],"float32"), axis=0, )
paddle.cumsum(Tensor([829772],"float32"), axis=0, )
paddle.cumsum(Tensor([885007],"float32"), axis=0, )
paddle.cumsum(Tensor([825644],"float32"), axis=0, )
paddle.cumsum(Tensor([804701],"float32"), axis=0, )
paddle.cumsum(Tensor([920358],"float32"), axis=0, )
paddle.cumsum(Tensor([995434],"float32"), axis=0, )
paddle.cumsum(Tensor([876184],"float32"), axis=0, )
paddle.cumsum(Tensor([946295],"float32"), axis=0, )
paddle.cumsum(Tensor([889719],"float32"), axis=0, )
paddle.cumsum(Tensor([871263],"float32"), axis=0, )
paddle.cumsum(Tensor([861660],"float32"), axis=0, )
paddle.cumsum(Tensor([778392],"float32"), axis=0, )
paddle.cumsum(Tensor([905414],"float32"), axis=0, )
paddle.cumsum(Tensor([946452],"float32"), axis=0, )
paddle.cumsum(Tensor([986636],"float32"), axis=0, )
paddle.cumsum(Tensor([959543],"float32"), axis=0, )
paddle.cumsum(Tensor([920069],"float32"), axis=0, )
paddle.cumsum(Tensor([901715],"float32"), axis=0, )
paddle.cumsum(Tensor([844621],"float32"), axis=0, )
paddle.cumsum(Tensor([939644],"float32"), axis=0, )
paddle.cumsum(Tensor([889134],"float32"), axis=0, )
paddle.cumsum(Tensor([859626],"float32"), axis=0, )
paddle.cumsum(Tensor([885970],"float32"), axis=0, )
paddle.cumsum(Tensor([944323],"float32"), axis=0, )
paddle.cumsum(Tensor([867771],"float32"), axis=0, )
paddle.cumsum(Tensor([936297],"float32"), axis=0, )
paddle.cumsum(Tensor([838278],"float32"), axis=0, )
paddle.cumsum(Tensor([907504],"float32"), axis=0, )
paddle.cumsum(Tensor([790301],"float32"), axis=0, )
paddle.cumsum(Tensor([952616],"float32"), axis=0, )
paddle.cumsum(Tensor([832970],"float32"), axis=0, )
paddle.cumsum(Tensor([911980],"float32"), axis=0, )
paddle.cumsum(Tensor([802823],"float32"), axis=0, )
paddle.cumsum(Tensor([854188],"float32"), axis=0, )
paddle.cumsum(Tensor([936685],"float32"), axis=0, )
paddle.cumsum(Tensor([935575],"float32"), axis=0, )
paddle.cumsum(Tensor([947393],"float32"), axis=0, )
paddle.cumsum(Tensor([818851],"float32"), axis=0, )
paddle.cumsum(Tensor([792742],"float32"), axis=0, )
paddle.cumsum(Tensor([782767],"float32"), axis=0, )
paddle.cumsum(Tensor([816181],"float32"), axis=0, )
paddle.cumsum(Tensor([989643],"float32"), axis=0, )
paddle.cumsum(Tensor([940243],"float32"), axis=0, )
paddle.cumsum(Tensor([969848],"float32"), axis=0, )
paddle.cumsum(Tensor([904803],"float32"), axis=0, )
paddle.cumsum(Tensor([956773],"float32"), axis=0, )
paddle.cumsum(Tensor([911929],"float32"), axis=0, )
paddle.cumsum(Tensor([849465],"float32"), axis=0, )
paddle.cumsum(Tensor([856982],"float32"), axis=0, )
paddle.cumsum(Tensor([979079],"float32"), axis=0, )
paddle.cumsum(Tensor([945157],"float32"), axis=0, )
paddle.cumsum(Tensor([903007],"float32"), axis=0, )
paddle.cumsum(Tensor([907038],"float32"), axis=0, )
paddle.cumsum(Tensor([864278],"float32"), axis=0, )
paddle.cumsum(Tensor([936939],"float32"), axis=0, )
paddle.cumsum(Tensor([809481],"float32"), axis=0, )
paddle.cumsum(Tensor([964107],"float32"), axis=0, )
paddle.cumsum(Tensor([936705],"float32"), axis=0, )
paddle.cumsum(Tensor([883250],"float32"), axis=0, )
paddle.cumsum(Tensor([740342],"float32"), axis=0, )
paddle.cumsum(Tensor([815795],"float32"), axis=0, )
paddle.cumsum(Tensor([900075],"float32"), axis=0, )
paddle.cumsum(Tensor([843279],"float32"), axis=0, )
paddle.cumsum(Tensor([941063],"float32"), axis=0, )
paddle.cumsum(Tensor([907369],"float32"), axis=0, )
paddle.cumsum(Tensor([915594],"float32"), axis=0, )
paddle.cumsum(Tensor([888865],"float32"), axis=0, )
paddle.cumsum(Tensor([943166],"float32"), axis=0, )
paddle.cumsum(Tensor([942039],"float32"), axis=0, )
paddle.cumsum(Tensor([920889],"float32"), axis=0, )
paddle.cumsum(Tensor([957158],"float32"), axis=0, )
paddle.cumsum(Tensor([952036],"float32"), axis=0, )
paddle.cumsum(Tensor([926920],"float32"), axis=0, )
paddle.cumsum(Tensor([827954],"float32"), axis=0, )
paddle.cumsum(Tensor([885414],"float32"), axis=0, )
paddle.cumsum(Tensor([950773],"float32"), axis=0, )
paddle.cumsum(Tensor([938269],"float32"), axis=0, )
paddle.cumsum(Tensor([922233],"float32"), axis=0, )
paddle.cumsum(Tensor([788071],"float32"), axis=0, )
paddle.cumsum(Tensor([994466],"float32"), axis=0, )
paddle.cumsum(Tensor([985372],"float32"), axis=0, )
paddle.cumsum(Tensor([841983],"float32"), axis=0, )
paddle.cumsum(Tensor([929509],"float32"), axis=0, )
paddle.cumsum(Tensor([623489],"float32"), axis=0, )
paddle.cumsum(Tensor([970426],"float32"), axis=0, )
paddle.cumsum(Tensor([931719],"float32"), axis=0, )
paddle.cumsum(Tensor([904945],"float32"), axis=0, )
paddle.cumsum(Tensor([860976],"float32"), axis=0, )
paddle.cumsum(Tensor([32, 512],"int64"), axis=1, )
paddle.cumsum(Tensor([3, 10000],"float32"), axis=-1, )
paddle.cumsum(Tensor([5, 12000],"float32"), axis=-1, )
paddle.cumsum(Tensor([1, 50304],"float32"), axis=-1, )
paddle.cumsum(Tensor([96, 128],"int64"), axis=-1, )
paddle.cumsum(x=Tensor([1, 16, 96, 32],"float64"), axis=2, )
paddle.cumsum(Tensor([128, 128],"int64"), axis=-1, )
paddle.cumsum(Tensor([32, 512],"int64"), axis=-1, )
paddle.cumsum(Tensor([1, 30000],"float32"), axis=-1, )
paddle.cumsum(Tensor([8, 127],"int64"), 1, )
paddle.cumsum(Tensor([8, 257],"int64"), 1, )
paddle.cumsum(Tensor([10, 108],"int64"), 1, )
paddle.cumsum(Tensor([7, 160],"int64"), 1, )
paddle.cumsum(Tensor([7, 161],"int64"), 1, )
paddle.cumsum(Tensor([10, 182],"int64"), 1, )
paddle.cumsum(Tensor([6, 167],"int64"), 1, )
paddle.cumsum(Tensor([9, 118],"int64"), 1, )
paddle.cumsum(Tensor([10, 142],"int64"), 1, )
paddle.cumsum(Tensor([8, 254],"int64"), 1, )
paddle.cumsum(Tensor([8, 281],"int64"), 1, )
paddle.cumsum(Tensor([10, 140],"int64"), 1, )
paddle.cumsum(Tensor([8, 162],"int64"), 1, )
paddle.cumsum(Tensor([8, 258],"int64"), 1, )
paddle.cumsum(Tensor([8, 252],"int64"), 1, )
paddle.cumsum(Tensor([10, 132],"int64"), 1, )
paddle.cumsum(Tensor([8, 135],"int64"), 1, )
paddle.cumsum(Tensor([10, 178],"int64"), 1, )
paddle.cumsum(Tensor([10, 174],"int64"), 1, )
paddle.cumsum(Tensor([7, 166],"int64"), 1, )
paddle.cumsum(Tensor([10, 100],"int64"), 1, )
paddle.cumsum(Tensor([7, 176],"int64"), 1, )
paddle.cumsum(Tensor([10, 133],"int64"), 1, )
paddle.cumsum(Tensor([7, 149],"int64"), 1, )
paddle.cumsum(Tensor([8, 279],"int64"), 1, )
paddle.cumsum(Tensor([7, 169],"int64"), 1, )
paddle.cumsum(Tensor([6, 179],"int64"), 1, )
paddle.cumsum(Tensor([8, 158],"int64"), 1, )
paddle.cumsum(Tensor([8, 228],"int64"), 1, )
paddle.deg2rad(Tensor([8, 16, 32],"float32"), )
paddle.diag(Tensor([183, 183],"float32"), )
paddle.diag(Tensor([226, 226],"float32"), )
paddle.diag(Tensor([124, 124],"float32"), )
paddle.diag(Tensor([134, 134],"float32"), )
paddle.diag(Tensor([168, 168],"float32"), )
paddle.diag(Tensor([162, 162],"float32"), )
paddle.diag(Tensor([126, 126],"float32"), )
paddle.diag(Tensor([222, 222],"float32"), )
paddle.diag(Tensor([220, 220],"float32"), )
paddle.diag(Tensor([264, 264],"float32"), )
paddle.diag(Tensor([160, 160],"float32"), )
paddle.diag(Tensor([155, 155],"float32"), )
paddle.diag(Tensor([163, 163],"float32"), )
paddle.diag(Tensor([166, 166],"float32"), )
paddle.diag(Tensor([101, 101],"float32"), )
paddle.diag(Tensor([174, 174],"float32"), )
paddle.diag(Tensor([11008],"float16"), )
paddle.diag(Tensor([110, 110],"float32"), )
paddle.diag(Tensor([102, 102],"float32"), )
paddle.diag(Tensor([243, 243],"float32"), )
paddle.diag(Tensor([108, 108],"float32"), )
paddle.diag(Tensor([203, 203],"float32"), )
paddle.diag(Tensor([217, 217],"float32"), )
paddle.diag(Tensor([262, 262],"float32"), )
paddle.diag(Tensor([211, 211],"float32"), )
paddle.diag(Tensor([133, 133],"float32"), )
paddle.diag(Tensor([107, 107],"float32"), )
paddle.diag(Tensor([115, 115],"float32"), )
paddle.diag(Tensor([184, 184],"float32"), )
paddle.diag(Tensor([118, 118],"float32"), )
paddle.diag(Tensor([156, 156],"float32"), )
paddle.diag(Tensor([58, 58],"float32"), )
paddle.diag(Tensor([59, 59],"float32"), )
paddle.diag(Tensor([77, 77],"float32"), )
paddle.diag(Tensor([35, 35],"float32"), )
paddle.diag(Tensor([88, 88],"float32"), )
paddle.diag(Tensor([1024],"float16"), )
paddle.diag(Tensor([98, 98],"float32"), )
paddle.diag(Tensor([99, 99],"float32"), )
paddle.diag(Tensor([71, 71],"float32"), )
paddle.diag(Tensor([85, 85],"float32"), )
paddle.diag(Tensor([80, 80],"float32"), )
paddle.diag(Tensor([51, 51],"float32"), )
paddle.diag(Tensor([2000],"float32"), )
paddle.diag(Tensor([57, 57],"float32"), )
paddle.diag(Tensor([2000],"float32"), offset=1, )
paddle.diag(Tensor([83, 83],"float32"), )
paddle.diag(Tensor([89, 89],"float32"), )
paddle.diag(Tensor([48, 48],"float32"), )
paddle.diag(Tensor([33, 33],"float32"), )
paddle.diag(Tensor([40, 40],"float32"), )
paddle.diag(Tensor([74, 74],"float32"), )
paddle.diag(Tensor([64, 64],"float32"), )
paddle.diag(Tensor([82, 82],"float32"), )
paddle.diag(Tensor([68, 68],"float32"), )
paddle.diag(Tensor([96, 96],"float32"), )
paddle.diag(Tensor([69, 69],"float32"), )
paddle.diag(Tensor([94, 94],"float32"), )
paddle.diag(Tensor([78, 78],"float32"), )
paddle.diag(Tensor([54, 54],"float32"), )
paddle.diag(Tensor([73, 73],"float32"), )
paddle.diag(Tensor([52, 52],"float32"), )
paddle.diag(Tensor([34, 34],"float32"), )
paddle.diagonal(x=Tensor([6, 6, 6, 6],"float64"), )
paddle.digamma(Tensor([8, 3, 32, 32],"float64"), )
paddle.digamma(Tensor([8, 3, 32, 32],"float32"), )
paddle.digamma(x=Tensor([3, 6, 6, 6, 6],"float64"), )
paddle.digamma(x=Tensor([6, 6, 6, 6],"float64"), )
paddle.digamma(Tensor([10, 10, 10, 2],"float64"), )
paddle.digamma(Tensor([10, 10, 10],"float64"), )
paddle.divide(Tensor([512, 995],"float32"), Tensor([1, 995],"float32"), )
paddle.divide(x=Tensor([187679, 3],"float32"), y=Tensor([3],"float32"), )
paddle.divide(Tensor([128, 512],"float32"), Tensor([128, 1],"float32"), )
paddle.divide(Tensor([64, 1, 28, 28],"float32"), Tensor([],"float32"), )
paddle.divide(Tensor([3, 3, 3, 40, 40],"float32"), Tensor([3, 3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([104, 128],"float32"), Tensor([104, 1],"float32"), )
paddle.divide(Tensor([128, 128],"float32"), Tensor([128, 1],"float32"), )
paddle.divide(Tensor([32, 512],"float32"), Tensor([32, 1],"float32"), )
paddle.divide(Tensor([40, 512],"float32"), Tensor([40, 1],"float32"), )
paddle.divide(Tensor([3, 100, 120],"float64"), Tensor([3, 100, 120],"float64"), )
paddle.divide(Tensor([64, 512],"float32"), Tensor([64, 1],"float32"), )
paddle.divide(Tensor([3, 3, 40, 40, 3],"float32"), Tensor([3, 3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([512, 159],"float32"), Tensor([1, 159],"float32"), )
paddle.divide(Tensor([3, 3, 40, 40],"float32"), Tensor([3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 40, 3],"float32"), Tensor([3, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([],"complex64"), Tensor([14, 8, 8, 4],"complex64"), )
paddle.divide(Tensor([3, 40, 40],"float32"), Tensor([3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([16, 64],"float32"), Tensor([16, 64],"float32"), )
paddle.divide(Tensor([16, 64],"float64"), Tensor([16, 64],"float64"), )
paddle.divide(Tensor([],"complex64"), Tensor([39, 8, 8, 4],"complex64"), )
paddle.divide(Tensor([128, 10],"float32"), Tensor([128, 10],"float32"), )
paddle.divide(Tensor([16, 512],"float32"), Tensor([16, 1],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 67, 64],"float32"), Tensor([1, 8, 385, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([5, 8, 75, 145],"float32"), Tensor([5, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 194, 194],"float32"), Tensor([1, 8, 194, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4, 8, 42, 77],"float32"), Tensor([4, 8, 77, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 38, 64],"float32"), Tensor([6, 8, 97, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 67, 64],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 77, 64],"float32"), Tensor([6, 8, 97, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 100, 49],"float32"), Tensor([10, 8, 49, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 57, 64],"float32"), Tensor([10, 8, 29, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 48, 64],"float32"), Tensor([1, 8, 385, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 79, 181],"float32"), Tensor([2, 8, 181, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 21, 64],"float32"), Tensor([2, 8, 121, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([5, 8, 64, 64],"float32"), Tensor([5, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([9, 8, 32, 64],"float32"), Tensor([9, 8, 32, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 148, 148],"float32"), Tensor([2, 8, 148, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 63, 64],"float32"), Tensor([1, 8, 229, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([3, 8, 1, 64],"float32"), Tensor([3, 8, 105, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([5, 8, 29, 64],"float32"), Tensor([5, 8, 29, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 89, 64],"float32"), Tensor([10, 8, 65, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([9, 8, 31, 89],"float32"), Tensor([9, 8, 89, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([3, 8, 81, 64],"float32"), Tensor([3, 8, 169, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 106, 64],"float32"), Tensor([4, 8, 106, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 170, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 47, 64],"float32"), Tensor([10, 8, 29, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 59, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 14, 161],"float32"), Tensor([2, 8, 161, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 144, 64],"float32"), Tensor([2, 8, 129, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 88, 25],"float32"), Tensor([30, 8, 25, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 3, 64],"float32"), Tensor([6, 8, 45, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 33, 64],"float32"), Tensor([6, 8, 25, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 62, 81],"float32"), Tensor([10, 8, 81, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 47, 57],"float32"), Tensor([2, 8, 57, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4, 8, 125, 77],"float32"), Tensor([4, 8, 77, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 32, 64],"float32"), Tensor([10, 8, 17, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 58, 64],"float32"), Tensor([2, 8, 57, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 207, 261],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 19, 105],"float32"), Tensor([3, 8, 105, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 73, 64],"float32"), Tensor([8, 8, 121, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 52, 229],"float32"), Tensor([1, 8, 229, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 155, 64],"float32"), Tensor([1, 8, 85, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 40, 25],"float32"), Tensor([10, 8, 25, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([9, 8, 68, 64],"float32"), Tensor([9, 8, 68, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 61, 385],"float32"), Tensor([1, 8, 385, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 55, 81],"float32"), Tensor([10, 8, 81, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 97, 64],"float32"), Tensor([2, 8, 85, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 139, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 162, 64],"float32"), Tensor([1, 8, 385, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 31, 64],"float32"), Tensor([8, 8, 121, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 83, 83],"float32"), Tensor([3, 8, 83, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 55, 181],"float32"), Tensor([2, 8, 181, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 67, 121],"float32"), Tensor([2, 8, 121, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 74, 64],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 3, 57],"float32"), Tensor([10, 8, 57, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 78, 81],"float32"), Tensor([2, 8, 81, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 55, 217],"float32"), Tensor([1, 8, 217, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 97, 64],"float32"), Tensor([2, 8, 129, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 42, 261],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([5, 8, 87, 64],"float32"), Tensor([5, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 212, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 10, 33],"float32"), Tensor([8, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 93, 64],"float32"), Tensor([4, 8, 77, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 59, 157],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 23, 64],"float32"), Tensor([10, 8, 81, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 37, 64],"float32"), Tensor([2, 8, 81, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([9, 8, 27, 27],"float32"), Tensor([9, 8, 27, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 70, 121],"float32"), Tensor([2, 8, 121, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 26, 49],"float32"), Tensor([10, 8, 49, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 115, 64],"float32"), Tensor([2, 8, 115, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([6, 8, 24, 24],"float32"), Tensor([6, 8, 24, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 54, 64],"float32"), Tensor([10, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 34, 64],"float32"), Tensor([4, 8, 37, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 18, 89],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 9, 64],"float32"), Tensor([10, 8, 81, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 77, 64],"float32"), Tensor([10, 8, 65, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 35, 64],"float32"), Tensor([10, 8, 41, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 122, 64],"float32"), Tensor([1, 8, 122, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 100, 81],"float32"), Tensor([2, 8, 81, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 121, 64],"float32"), Tensor([1, 8, 229, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 39, 64],"float32"), Tensor([6, 8, 57, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 11, 64],"float32"), Tensor([10, 8, 97, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 6, 81],"float32"), Tensor([10, 8, 81, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 14, 64],"float32"), Tensor([4, 8, 77, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 1, 64],"float32"), Tensor([8, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 7, 97],"float32"), Tensor([10, 8, 97, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 208, 169],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 122, 64],"float32"), Tensor([2, 8, 122, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 43, 41],"float32"), Tensor([10, 8, 41, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 28, 64],"float32"), Tensor([7, 8, 28, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 117, 64],"float32"), Tensor([8, 8, 121, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 65, 64],"float32"), Tensor([2, 8, 65, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 19, 64],"float32"), Tensor([2, 8, 129, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 1, 64],"float32"), Tensor([7, 8, 153, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 126, 64],"float32"), Tensor([10, 8, 65, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([5, 8, 42, 65],"float32"), Tensor([5, 8, 65, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 112, 64],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 6, 64],"float32"), Tensor([10, 8, 25, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([9, 8, 2, 53],"float32"), Tensor([9, 8, 53, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 220, 261],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 31, 64],"float32"), Tensor([10, 8, 17, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 111, 73],"float32"), Tensor([1, 8, 73, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 72, 64],"float32"), Tensor([4, 8, 61, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 215, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 57, 64],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([6, 8, 34, 97],"float32"), Tensor([6, 8, 97, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 108, 181],"float32"), Tensor([2, 8, 181, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 70, 33],"float32"), Tensor([10, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 26, 26],"float32"), Tensor([30, 8, 26, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 176, 64],"float32"), Tensor([4, 8, 77, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 15, 64],"float32"), Tensor([10, 8, 65, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 124, 64],"float32"), Tensor([6, 8, 97, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([9, 8, 13, 64],"float32"), Tensor([9, 8, 53, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 7, 65],"float32"), Tensor([10, 8, 65, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 55, 64],"float32"), Tensor([10, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 39, 64],"float32"), Tensor([6, 8, 39, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 89, 64],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 118, 64],"float32"), Tensor([4, 8, 77, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4, 8, 139, 77],"float32"), Tensor([4, 8, 77, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 58, 64],"float32"), Tensor([10, 8, 57, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 70, 64],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 59, 217],"float32"), Tensor([1, 8, 217, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 36, 81],"float32"), Tensor([2, 8, 81, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 167, 169],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 94, 64],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([5, 8, 29, 64],"float32"), Tensor([5, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 12, 137],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 16, 64],"float32"), Tensor([2, 8, 129, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 7, 64],"float32"), Tensor([10, 8, 17, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([5, 8, 21, 145],"float32"), Tensor([5, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 118, 129],"float32"), Tensor([2, 8, 129, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 120, 64],"float32"), Tensor([1, 8, 229, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 2, 64],"float32"), Tensor([6, 8, 97, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 23, 5],"float32"), Tensor([30, 8, 5, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 93, 64],"float32"), Tensor([8, 8, 93, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 98, 64],"float32"), Tensor([2, 8, 161, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 84, 64],"float32"), Tensor([2, 8, 81, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 165, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([9, 8, 13, 64],"float32"), Tensor([9, 8, 13, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 108, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 142, 64],"float32"), Tensor([1, 8, 142, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 131, 64],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 108, 129],"float32"), Tensor([2, 8, 129, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 77, 64],"float32"), Tensor([7, 8, 153, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 74, 64],"float32"), Tensor([4, 8, 74, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 72, 64],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([9, 8, 69, 89],"float32"), Tensor([9, 8, 89, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 79, 64],"float32"), Tensor([2, 8, 181, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([3, 8, 21, 64],"float32"), Tensor([3, 8, 105, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([3, 8, 56, 64],"float32"), Tensor([3, 8, 169, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 74, 64],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 63, 64],"float32"), Tensor([2, 8, 57, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 69, 121],"float32"), Tensor([2, 8, 121, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 17, 17],"float32"), Tensor([30, 8, 17, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 4, 137],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 80, 57],"float32"), Tensor([10, 8, 57, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 80, 241],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 48, 64],"float32"), Tensor([10, 8, 105, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([5, 8, 61, 33],"float32"), Tensor([5, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([9, 8, 18, 18],"float32"), Tensor([9, 8, 18, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([7, 8, 34, 34],"float32"), Tensor([7, 8, 34, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 59, 64],"float32"), Tensor([4, 8, 59, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 119, 119],"float32"), Tensor([3, 8, 119, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([6, 8, 27, 45],"float32"), Tensor([6, 8, 45, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 174, 385],"float32"), Tensor([1, 8, 385, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 90, 64],"float32"), Tensor([4, 8, 61, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([5, 8, 32, 33],"float32"), Tensor([5, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 49, 64],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4, 8, 53, 53],"float32"), Tensor([4, 8, 53, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 112, 217],"float32"), Tensor([1, 8, 217, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 94, 64],"float32"), Tensor([10, 8, 73, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 91, 157],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([5, 8, 120, 64],"float32"), Tensor([5, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([5, 8, 73, 145],"float32"), Tensor([5, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 48, 113],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 94, 64],"float32"), Tensor([10, 8, 37, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 85, 64],"float32"), Tensor([1, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 222, 169],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([6, 8, 98, 98],"float32"), Tensor([6, 8, 98, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 63, 181],"float32"), Tensor([2, 8, 181, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 178, 64],"float32"), Tensor([6, 8, 57, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 150, 64],"float32"), Tensor([4, 8, 77, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([5, 8, 130, 64],"float32"), Tensor([5, 8, 130, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([9, 8, 51, 64],"float32"), Tensor([9, 8, 53, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 201, 64],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 124, 49],"float32"), Tensor([10, 8, 49, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 22, 129],"float32"), Tensor([2, 8, 129, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([3, 8, 104, 64],"float32"), Tensor([3, 8, 104, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 6, 25],"float32"), Tensor([10, 8, 25, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 43, 65],"float32"), Tensor([10, 8, 65, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 35, 64],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 35, 64],"float32"), Tensor([1, 8, 229, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 47, 64],"float32"), Tensor([4, 8, 37, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 1, 64],"float32"), Tensor([10, 8, 29, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 71, 64],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 42, 64],"float32"), Tensor([8, 8, 42, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([5, 8, 11, 65],"float32"), Tensor([5, 8, 65, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 162, 64],"float32"), Tensor([4, 8, 162, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 141, 141],"float32"), Tensor([1, 8, 141, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 37, 64],"float32"), Tensor([6, 8, 25, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 93, 93],"float32"), Tensor([1, 8, 93, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 55, 113],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 82, 64],"float32"), Tensor([10, 8, 97, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 54, 64],"float32"), Tensor([1, 8, 217, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 29, 64],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 16, 33],"float32"), Tensor([8, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 84, 241],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 133, 64],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 8, 64],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([6, 8, 84, 45],"float32"), Tensor([6, 8, 45, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 190, 261],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 44, 21],"float32"), Tensor([10, 8, 21, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 15, 64],"float32"), Tensor([10, 8, 57, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 24, 64],"float32"), Tensor([30, 8, 9, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 89, 229],"float32"), Tensor([1, 8, 229, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 10, 17],"float32"), Tensor([10, 8, 17, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([3, 8, 72, 64],"float32"), Tensor([3, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 156, 169],"float32"), Tensor([3, 8, 169, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 70, 64],"float32"), Tensor([7, 8, 70, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 122, 64],"float32"), Tensor([2, 8, 121, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 95, 64],"float32"), Tensor([7, 8, 153, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 61, 64],"float32"), Tensor([2, 8, 61, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([3, 8, 36, 64],"float32"), Tensor([3, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 65, 129],"float32"), Tensor([2, 8, 129, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 67, 73],"float32"), Tensor([10, 8, 73, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 68, 145],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 108, 64],"float32"), Tensor([4, 8, 61, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 56, 64],"float32"), Tensor([8, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 88, 64],"float32"), Tensor([6, 8, 45, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 26, 64],"float32"), Tensor([10, 8, 25, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 71, 241],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 59, 64],"float32"), Tensor([4, 8, 61, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 122, 122],"float32"), Tensor([2, 8, 122, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 162, 162],"float32"), Tensor([3, 8, 162, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 94, 64],"float32"), Tensor([10, 8, 65, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 146, 146],"float32"), Tensor([2, 8, 146, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 79, 241],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 81, 64],"float32"), Tensor([10, 8, 49, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4, 8, 62, 62],"float32"), Tensor([4, 8, 62, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 171, 64],"float32"), Tensor([2, 8, 181, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 40, 33],"float32"), Tensor([8, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 36, 64],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 90, 85],"float32"), Tensor([2, 8, 85, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 68, 64],"float32"), Tensor([1, 8, 217, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 76, 169],"float32"), Tensor([3, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 40, 89],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 58, 64],"float32"), Tensor([10, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4, 8, 150, 77],"float32"), Tensor([4, 8, 77, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 82, 33],"float32"), Tensor([10, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 25, 85],"float32"), Tensor([2, 8, 85, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 63, 64],"float32"), Tensor([4, 8, 37, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([5, 8, 117, 64],"float32"), Tensor([5, 8, 117, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 101, 64],"float32"), Tensor([4, 8, 101, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 35, 64],"float32"), Tensor([7, 8, 49, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 3, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 169, 64],"float32"), Tensor([2, 8, 181, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 96, 64],"float32"), Tensor([2, 8, 121, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 2, 89],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([6, 8, 117, 97],"float32"), Tensor([6, 8, 97, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4, 8, 114, 114],"float32"), Tensor([4, 8, 114, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 39, 33],"float32"), Tensor([10, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 95, 113],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 79, 64],"float32"), Tensor([10, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 70, 64],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 94, 145],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 27, 21],"float32"), Tensor([10, 8, 21, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 22, 161],"float32"), Tensor([2, 8, 161, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 15, 64],"float32"), Tensor([4, 8, 37, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 159, 64],"float32"), Tensor([1, 8, 85, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 121, 241],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 36, 33],"float32"), Tensor([10, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 12, 121],"float32"), Tensor([8, 8, 121, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 101, 161],"float32"), Tensor([2, 8, 161, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 66, 145],"float32"), Tensor([1, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 6, 105],"float32"), Tensor([3, 8, 105, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 38, 64],"float32"), Tensor([10, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 31, 64],"float32"), Tensor([10, 8, 29, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 111, 64],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([6, 8, 124, 57],"float32"), Tensor([6, 8, 57, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 93, 64],"float32"), Tensor([6, 8, 45, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([9, 8, 40, 64],"float32"), Tensor([9, 8, 53, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 35, 64],"float32"), Tensor([8, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 48, 64],"float32"), Tensor([30, 8, 17, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 129, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 19, 64],"float32"), Tensor([6, 8, 57, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 171, 64],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 71, 41],"float32"), Tensor([10, 8, 41, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 142, 385],"float32"), Tensor([1, 8, 385, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4, 8, 54, 54],"float32"), Tensor([4, 8, 54, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 30, 181],"float32"), Tensor([2, 8, 181, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 24, 64],"float32"), Tensor([4, 8, 61, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 27, 57],"float32"), Tensor([10, 8, 57, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 53, 64],"float32"), Tensor([6, 8, 57, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([7, 8, 37, 49],"float32"), Tensor([7, 8, 49, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([7, 8, 13, 153],"float32"), Tensor([7, 8, 153, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([5, 8, 67, 67],"float32"), Tensor([5, 8, 67, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 127, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([5, 8, 125, 64],"float32"), Tensor([5, 8, 125, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 22, 64],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 224, 169],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 237, 64],"float32"), Tensor([1, 8, 237, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 51, 41],"float32"), Tensor([10, 8, 41, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 36, 36],"float32"), Tensor([8, 8, 36, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 207, 64],"float32"), Tensor([2, 8, 181, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 37, 169],"float32"), Tensor([3, 8, 169, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 161, 64],"float32"), Tensor([2, 8, 121, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 55, 89],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([5, 8, 101, 145],"float32"), Tensor([5, 8, 145, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 156, 156],"float32"), Tensor([3, 8, 156, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([4, 8, 136, 64],"float32"), Tensor([4, 8, 61, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 155, 155],"float32"), Tensor([2, 8, 155, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([9, 8, 12, 64],"float32"), Tensor([9, 8, 12, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 222, 222],"float32"), Tensor([1, 8, 222, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([6, 8, 121, 97],"float32"), Tensor([6, 8, 97, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 29, 57],"float32"), Tensor([10, 8, 57, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 191, 64],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([6, 8, 69, 97],"float32"), Tensor([6, 8, 97, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 172, 64],"float32"), Tensor([1, 8, 172, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 59, 21],"float32"), Tensor([30, 8, 21, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 205, 181],"float32"), Tensor([2, 8, 181, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 53, 121],"float32"), Tensor([8, 8, 121, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 10, 121],"float32"), Tensor([8, 8, 121, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([7, 8, 35, 35],"float32"), Tensor([7, 8, 35, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 32, 241],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 83, 64],"float32"), Tensor([10, 8, 65, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 94, 64],"float32"), Tensor([10, 8, 94, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 21, 64],"float32"), Tensor([10, 8, 97, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 115, 65],"float32"), Tensor([10, 8, 65, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([9, 8, 26, 64],"float32"), Tensor([9, 8, 26, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([5, 8, 35, 33],"float32"), Tensor([5, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 38, 73],"float32"), Tensor([10, 8, 73, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 136, 169],"float32"), Tensor([3, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 126, 385],"float32"), Tensor([1, 8, 385, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 77, 64],"float32"), Tensor([2, 8, 81, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 223, 64],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 39, 37],"float32"), Tensor([10, 8, 37, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 13, 105],"float32"), Tensor([3, 8, 105, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 110, 64],"float32"), Tensor([2, 8, 85, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 55, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 63, 63],"float32"), Tensor([3, 8, 63, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4, 8, 50, 50],"float32"), Tensor([4, 8, 50, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 33, 29],"float32"), Tensor([10, 8, 29, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 12, 64],"float32"), Tensor([10, 8, 29, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 93, 65],"float32"), Tensor([10, 8, 65, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 72, 113],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4, 8, 94, 77],"float32"), Tensor([4, 8, 77, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([9, 8, 75, 64],"float32"), Tensor([9, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 5, 137],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 115, 64],"float32"), Tensor([7, 8, 153, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 17, 57],"float32"), Tensor([10, 8, 57, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 158, 64],"float32"), Tensor([6, 8, 57, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 226, 261],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 153, 64],"float32"), Tensor([1, 8, 153, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([7, 8, 86, 86],"float32"), Tensor([7, 8, 86, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 77, 73],"float32"), Tensor([10, 8, 73, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 42, 25],"float32"), Tensor([10, 8, 25, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 20, 64],"float32"), Tensor([7, 8, 20, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 40, 241],"float32"), Tensor([1, 8, 241, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 124, 64],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 114, 81],"float32"), Tensor([2, 8, 81, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 156, 121],"float32"), Tensor([2, 8, 121, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 20, 64],"float32"), Tensor([6, 8, 45, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 64, 37],"float32"), Tensor([10, 8, 37, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 143, 64],"float32"), Tensor([2, 8, 143, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 77, 64],"float32"), Tensor([2, 8, 85, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([5, 8, 24, 145],"float32"), Tensor([5, 8, 145, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 23, 64],"float32"), Tensor([6, 8, 45, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 141, 64],"float32"), Tensor([2, 8, 85, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 105, 113],"float32"), Tensor([1, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 83, 64],"float32"), Tensor([1, 8, 217, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 107, 169],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 107, 73],"float32"), Tensor([10, 8, 73, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 134, 169],"float32"), Tensor([1, 8, 169, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 48, 64],"float32"), Tensor([1, 8, 261, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([3, 8, 3, 169],"float32"), Tensor([3, 8, 169, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([1, 8, 4, 217],"float32"), Tensor([1, 8, 217, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 58, 89],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([1, 8, 151, 64],"float32"), Tensor([1, 8, 85, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 62, 64],"float32"), Tensor([7, 8, 62, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([9, 8, 3, 64],"float32"), Tensor([9, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 10, 81],"float32"), Tensor([10, 8, 81, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 74, 161],"float32"), Tensor([2, 8, 161, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([6, 8, 27, 64],"float32"), Tensor([6, 8, 45, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([5, 8, 96, 64],"float32"), Tensor([5, 8, 96, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 12, 33],"float32"), Tensor([10, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 17, 97],"float32"), Tensor([10, 8, 97, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 81, 121],"float32"), Tensor([2, 8, 121, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 86, 85],"float32"), Tensor([2, 8, 85, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 147, 129],"float32"), Tensor([2, 8, 129, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 7, 64],"float32"), Tensor([8, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 13, 64],"float32"), Tensor([10, 8, 65, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 22, 64],"float32"), Tensor([10, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 24, 64],"float32"), Tensor([10, 8, 57, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 24, 89],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 82, 64],"float32"), Tensor([7, 8, 153, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 14, 129],"float32"), Tensor([10, 8, 129, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([4, 8, 82, 61],"float32"), Tensor([4, 8, 61, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 72, 64],"float32"), Tensor([10, 8, 41, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 86, 49],"float32"), Tensor([10, 8, 49, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 114, 64],"float32"), Tensor([2, 8, 129, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([2, 8, 147, 121],"float32"), Tensor([2, 8, 121, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([2, 8, 127, 64],"float32"), Tensor([2, 8, 127, 64],"float32"), )
paddle.equal(Tensor([4148, 30],"int64"), Tensor([4148, 30],"int64"), )
paddle.equal(Tensor([416, 30],"int64"), 0, )
paddle.equal(Tensor([512, 30],"int64"), 0, )
paddle.equal(Tensor([148, 5, 3],"float32"), Tensor([148, 5, 3],"float32"), )
paddle.equal(Tensor([52, 30],"int64"), 0, )
paddle.equal(Tensor([1948, 2],"float32"), Tensor([1948, 2],"float32"), )
paddle.equal(Tensor([28, 28],"float32"), Tensor([28, 28],"float32"), )
paddle.exp(Tensor([8, 3, 72, 72, 1],"float32"), )
paddle.exp(Tensor([8, 3, 68, 68, 1],"float32"), )
paddle.exp(Tensor([14, 64, 7, 16],"float32"), )
paddle.exp(Tensor([10, 200, 300],"int32"), )
paddle.exp(Tensor([10, 200, 300],"int64"), )
paddle.exp(Tensor([8, 13125, 2],"float32"), )
paddle.exp(Tensor([16, 10, 64, 64],"float32"), )
paddle.exp(Tensor([8, 3, 76, 76, 1],"float32"), )
paddle.exp(Tensor([2, 107136, 1],"float32"), )
paddle.exp(Tensor([13, 64, 10, 16],"float32"), )
paddle.exp(Tensor([32, 32, 128],"float32"), )
paddle.exp(Tensor([10, 200, 300],"float32"), )
paddle.exp(Tensor([512, 256],"float32"), )
paddle.exp(Tensor([2, 3, 60, 60, 1],"float32"), )
paddle.exp(Tensor([2, 3, 64, 64, 1],"float32"), )
paddle.exp(Tensor([13, 64, 7, 16],"float32"), )
paddle.exp(Tensor([8, 3, 64, 64, 1],"float32"), )
paddle.exp(Tensor([13, 64, 3, 16],"float32"), )
paddle.exp(Tensor([22120, 1],"float32"), )
paddle.exp(Tensor([8, 3, 22, 22, 1],"float32"), )
paddle.exp(Tensor([4, 6804, 2],"float32"), )
paddle.exp(Tensor([8, 3, 24, 24, 1],"float32"), )
paddle.exp(Tensor([2, 3, 68, 68, 1],"float32"), )
paddle.exp(Tensor([2, 9261, 2],"float32"), )
paddle.exp(Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.exp(Tensor([8, 3, 34, 34, 1],"float32"), )
paddle.exp(Tensor([8, 3, 44, 44, 1],"float32"), )
paddle.exp(Tensor([8, 3, 28, 28, 1],"float32"), )
paddle.exp(Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.exp(Tensor([18211, 1],"float32"), )
paddle.exp(Tensor([2, 3, 72, 72, 1],"float32"), )
paddle.exp(Tensor([8, 4116, 2],"float32"), )
paddle.exp(Tensor([8, 3, 38, 38, 1],"float32"), )
paddle.exp(Tensor([8, 3, 52, 52, 1],"float32"), )
paddle.exp(Tensor([2, 4725, 2],"float32"), )
paddle.exp(Tensor([8, 2100, 2],"float32"), )
paddle.exp(Tensor([16800, 1],"float32"), )
paddle.exp(Tensor([2, 3, 44, 44, 1],"float32"), )
paddle.exp(Tensor([8, 3, 30, 30, 1],"float32"), )
paddle.exp(Tensor([2, 3, 56, 56, 1],"float32"), )
paddle.exp(Tensor([8, 3, 26, 26, 1],"float32"), )
paddle.exp(Tensor([8, 3, 32, 32, 1],"float32"), )
paddle.exp(Tensor([2, 3, 76, 76, 1],"float32"), )
paddle.exp(Tensor([8, 4725, 2],"float32"), )
paddle.exp(Tensor([2, 3, 48, 48, 1],"float32"), )
paddle.exp(Tensor([8, 3, 36, 36, 1],"float32"), )
paddle.exp(Tensor([4, 5376, 2],"float32"), )
paddle.exp(Tensor([8, 3, 48, 48, 1],"float32"), )
paddle.exp(Tensor([8, 3, 56, 56, 1],"float32"), )
paddle.exp(Tensor([128, 200],"float32"), )
paddle.exp(Tensor([2, 3, 52, 52, 1],"float32"), )
paddle.exp(Tensor([13, 2, 16, 4, 8],"float32"), )
paddle.exp(Tensor([8, 3, 60, 60, 1],"float32"), )
paddle.exp(Tensor([8, 3, 40, 40, 1],"float32"), )
paddle.exp(Tensor([148, 5, 3],"float32"), )
paddle.exp(Tensor([2, 3, 24, 24, 1],"float32"), )
paddle.exp(Tensor([8, 3, 13, 13, 1],"float32"), )
paddle.exp(Tensor([4800, 1],"float32"), )
paddle.exp(Tensor([6284, 1],"float32"), )
paddle.exp(Tensor([5000, 1],"float32"), )
paddle.exp(Tensor([8, 8, 4, 39],"complex64"), )
paddle.exp(Tensor([8, 3, 16, 16, 1],"float32"), )
paddle.exp(Tensor([2, 3, 34, 34, 1],"float32"), )
paddle.exp(Tensor([1291, 1],"float32"), )
paddle.exp(Tensor([2, 3, 20, 20, 1],"float32"), )
paddle.exp(Tensor([2, 3, 30, 30, 1],"float32"), )
paddle.exp(Tensor([64, 96],"float32"), )
paddle.exp(Tensor([2, 3, 17, 17, 1],"float32"), )
paddle.exp(Tensor([2, 3, 26, 26, 1],"float32"), )
paddle.exp(Tensor([2, 3, 22, 22, 1],"float32"), )
paddle.exp(Tensor([2, 3, 15, 15, 1],"float32"), )
paddle.exp(Tensor([13, 2, 8, 4, 8],"float32"), )
paddle.exp(Tensor([13, 2, 4, 16, 1],"float32"), )
paddle.exp(Tensor([2048, 1],"float32"), )
paddle.exp(Tensor([1948, 2],"float32"), )
paddle.exp(x=Tensor([5776],"float32"), )
paddle.exp(Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.exp(Tensor([2, 3, 32, 32, 1],"float32"), )
paddle.exp(Tensor([8, 8, 4, 14],"complex64"), )
paddle.exp(Tensor([2, 3, 28, 28, 1],"float32"), )
paddle.exp(Tensor([1200, 1],"float32"), )
paddle.exp(Tensor([64, 26],"float32"), )
paddle.exp(Tensor([2, 3, 13, 13, 1],"float32"), )
paddle.exp(Tensor([1800, 1],"float32"), )
paddle.exp(Tensor([10, 10, 10],"float64"), )
paddle.exp(Tensor([2, 3, 40, 40, 1],"float32"), )
paddle.exp(Tensor([1960],"float32"), )
paddle.exp(Tensor([8, 3, 14, 14, 1],"float32"), )
paddle.exp(Tensor([8, 3, 17, 17, 1],"float32"), )
paddle.exp(Tensor([8, 3, 18, 18, 1],"float32"), )
paddle.exp(Tensor([2, 3, 38, 38, 1],"float32"), )
paddle.exp(Tensor([8, 3, 11, 11, 1],"float32"), )
paddle.exp(Tensor([2, 3, 36, 36, 1],"float32"), )
paddle.exp(Tensor([8, 3, 15, 15, 1],"float32"), )
paddle.exp(Tensor([1000, 2],"float64"), )
paddle.exp(Tensor([1000],"float32"), )
paddle.exp(Tensor([8, 3, 20, 20, 1],"float32"), )
paddle.exp(Tensor([2, 3, 19, 19, 1],"float32"), )
paddle.exp(Tensor([2885, 1],"float32"), )
paddle.exp(Tensor([8, 3, 19, 19, 1],"float32"), )
paddle.exp(Tensor([9, 10, 20],"float64"), )
paddle.exp(Tensor([1501],"float32"), )
paddle.exp(Tensor([64, 16],"float32"), )
paddle.exp(Tensor([2, 3, 16, 16, 1],"float32"), )
paddle.exp(Tensor([64, 19],"float32"), )
paddle.exp(Tensor([8, 3, 12, 12, 1],"float32"), )
paddle.exp(Tensor([8, 3, 10, 10, 1],"float32"), )
paddle.exp(Tensor([2, 3, 18, 18, 1],"float32"), )
paddle.exp(Tensor([2, 3, 14, 14, 1],"float32"), )
paddle.expand(Tensor([2, 2, 1, 8, 128, 96],"float16"), list[2,2,1,8,128,96,], )
paddle.expand(Tensor([2, 2, 1, 8, 128, 96],"float16"), list[2,2,2,8,128,96,], )
paddle.expand(Tensor([1, 1, 152, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 140, 164],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 116, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 156, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([64, 1, 512],"float32"), shape=list[Tensor([],"int64"),26,512,], )
paddle.expand(Tensor([1, 1, 152, 100],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 136, 100],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 140, 156],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 112, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 136, 164],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 140, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 136, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 116, 160],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([28800, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([1, 1, 148, 164],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 108, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 104, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 128, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 148, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 132, 144],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 144, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 148, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 136, 160],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 168, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 108],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 100],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 136, 156],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 128, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 164, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 160, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 168, 156],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 164, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 128, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 168, 160],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 144, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 160, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 164],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 148, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 132],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 140, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 160],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 168, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 136, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 136, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 164, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 156, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 164],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 124, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 132, 160],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 108, 156],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 168, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 132, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 156],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 144],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 136],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 104, 164],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 164, 100],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 152],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 160, 160],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 156, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 132, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 136, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 168, 100],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 156, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 136, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 104, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 160],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 168, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 144, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 156],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 140, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 132, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 140, 136],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([16, 32, 128],"float32"), list[8,16,32,128,], )
paddle.expand(Tensor([1, 1, 124, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 156],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([27648, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([1, 1, 100, 144],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 100, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 124, 168],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 136, 108],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 108, 148],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 104, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 120, 152],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 35, 39],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 78, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 54, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 42, 34],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 32, 34],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 35, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 41, 34],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 39, 34],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 82, 50],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 41, 37],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 26, 41],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 84, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 78, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 52, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 68, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 54, 74],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 38, 36],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 62, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 66, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1024],"int64"), list[1,1024,], )
paddle.expand(Tensor([1, 1, 38, 27],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 26, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 70, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 68, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 72],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 35, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 60, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 38, 39],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 68, 82],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([8, 1, 512],"float32"), shape=list[Tensor([],"int64"),26,512,], )
paddle.expand(Tensor([1, 1, 37, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 42, 39],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 29, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([6912, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([1, 1, 31, 34],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 30, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 25, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 35, 34],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 38, 41],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1728, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([1, 1, 41, 25],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 84, 78],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 80],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 37, 34],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([32, 32],"float32"), list[128,32,32,], )
paddle.expand(Tensor([1, 1, 42, 35],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 32, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([6408, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([1, 1, 68, 80],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 38, 34],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 74],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 68, 78],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 82, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 52, 82],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([32, 64],"float32"), list[16,32,64,], )
paddle.expand(Tensor([1, 1, 68, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 38, 33],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 70, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 40, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 68, 50],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 39, 37],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 70],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1200, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([1, 1, 58, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 52, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 74],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 38, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 56, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 72, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 78],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 84, 50],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 70, 70],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 33, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 80],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 33, 40],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 34, 40],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 39, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 62, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 66, 74],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 34, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 38, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 68, 70],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 40, 40],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 70],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 68, 54],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 66],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 37, 41],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 37, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 72, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 28, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 41, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 38, 40],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 38, 35],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 34, 39],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 80, 80],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1620, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([1, 1, 58, 80],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 42, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 76],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 52, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 82, 74],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([52, 4, 1, 1, 1, 8],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([1, 1, 84, 70],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 33, 37],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 70, 82],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 68],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 74, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 33, 36],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 25, 41],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 78],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 62, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([4800, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([1800, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([1, 1, 54, 78],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 74, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 78, 74],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 42, 40],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 80, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 54],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 42, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 80, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 36, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 74, 82],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 35, 35],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 78, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 34, 37],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 66, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 66, 80],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 40, 34],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 36, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 82],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 72],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 39, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 35, 41],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 72, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 50],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 82],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 31, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 84, 80],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 64, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([64, 128],"float32"), list[32,64,128,], )
paddle.expand(Tensor([1, 1, 29, 40],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 34, 35],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([7200, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([1, 1, 84, 76],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 31, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 76, 50],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 27, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([32, 32],"float32"), list[96,32,32,], )
paddle.expand(Tensor([1, 1, 38, 37],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 36, 34],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 32, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 34, 41],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 34, 34],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 50, 78],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 74, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 34, 38],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 42, 25],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 70, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 66, 72],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 84, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 82, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 64, 68],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 64, 84],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 70, 78],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([32, 128],"float32"), list[16,32,128,], )
paddle.expand(Tensor([52, 1, 5, 1, 5],"float32"), list[52,4,5,1,-1,], )
paddle.expand(Tensor([1, 1, 25, 40],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 27, 39],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 68, 74],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 33, 42],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 500, 4],"float16"), )
paddle.expand_as(Tensor([26, 2, 1, 1],"float32"), Tensor([26, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([19, 2, 1, 1],"float32"), Tensor([19, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([25, 2, 1, 1],"float32"), Tensor([25, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([12, 2, 1, 1],"float32"), Tensor([12, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 500, 2],"float16"), )
paddle.expand_as(Tensor([26, 2, 1, 1],"float32"), Tensor([26, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([24, 2, 1, 1],"float32"), Tensor([24, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([21, 2, 1, 1],"float32"), Tensor([21, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 500, 4],"float32"), )
paddle.expand_as(Tensor([8, 2, 1, 1],"float32"), Tensor([8, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([27, 2, 1, 1],"float32"), Tensor([27, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([17, 2, 1, 1],"float32"), Tensor([17, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([20, 2, 1, 1],"float32"), Tensor([20, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 1],"float32"), Tensor([11, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([13, 2, 1, 1],"float32"), Tensor([13, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([10, 2, 1, 1],"float32"), Tensor([10, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([9, 2, 1, 1],"float32"), Tensor([9, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([20, 500, 1],"int32"), Tensor([20, 500, 2],"float32"), )
paddle.expand_as(Tensor([16, 2, 1, 1],"float32"), Tensor([16, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([15, 2, 1, 1],"float32"), Tensor([15, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([14, 2, 1, 1],"float32"), Tensor([14, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([18, 2, 1, 1],"float32"), Tensor([18, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([1, 128],"int64"), Tensor([32, 128],"int64"), )
paddle.expand_as(Tensor([7, 2, 1, 1],"float32"), Tensor([7, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([24, 2, 1, 1],"float32"), Tensor([24, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([12, 2, 1, 1],"float32"), Tensor([12, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([15, 2, 1, 1],"float32"), Tensor([15, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([3, 2, 1, 1],"float32"), Tensor([3, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([1, 2, 1, 1],"float32"), Tensor([1, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([19, 2, 1, 1],"float32"), Tensor([19, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([2, 2, 1, 1],"float32"), Tensor([2, 2, 28, 28],"float32"), )
paddle.expand_as(Tensor([21, 2, 1, 1],"float32"), Tensor([21, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([25, 2, 1, 1],"float32"), Tensor([25, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([11, 2, 1, 1],"float32"), Tensor([11, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([16, 2, 1, 1],"float32"), Tensor([16, 2, 14, 14],"float32"), )
paddle.expand_as(Tensor([1, 128],"int64"), Tensor([7, 128],"int64"), )
paddle.expand_as(Tensor([4, 128, 1],"int32"), Tensor([4, 128, 2],"float32"), )
paddle.expm1(x=Tensor([3, 6, 6, 6, 6],"float64"), )
paddle.expm1(x=Tensor([6, 6, 6, 6],"float64"), )
paddle.expm1(Tensor([8, 16, 32],"complex64"), )
paddle.expm1(Tensor([8, 16, 32],"float64"), )
paddle.expm1(Tensor([8, 16, 32],"complex128"), )
paddle.expm1(Tensor([8, 16, 32],"float16"), )
paddle.expm1(Tensor([8, 16, 32],"float32"), )
paddle.fft.fftn(Tensor([39, 7, 32],"float32"), )
paddle.fft.fftn(Tensor([13, 7, 32],"float32"), )
paddle.fft.fftshift(x=Tensor([16, 96, 20, 11],"complex64"), axes=list[-2,], )
paddle.fft.fftshift(x=Tensor([16, 128, 10, 6],"complex64"), axes=list[-2,], )
paddle.fft.fftshift(x=Tensor([16, 32, 20, 11],"complex64"), axes=list[-2,], )
paddle.fft.fftshift(x=Tensor([16, 64, 19, 10],"complex64"), axes=list[-2,], )
paddle.fft.fftshift(x=Tensor([16, 64, 10, 6],"complex64"), axes=list[-2,], )
paddle.fft.fftshift(x=Tensor([16, 32, 16, 9],"complex64"), axes=list[-2,], )
paddle.fft.fftshift(x=Tensor([16, 32, 19, 10],"complex64"), axes=list[-2,], )
paddle.fft.irfft(Tensor([4, 32, 32, 16],"complex64"), n=64, axis=-1, norm="forward", )
paddle.fft.irfft2(Tensor([32, 15, 8, 256],"complex64"), s=tuple(15,15,), axes=tuple(1,2,), norm="ortho", )
paddle.fft.irfftn(x=Tensor([16, 32, 20, 11],"complex64"), s=list[19,19,], axes=list[-2,-1,], norm="backward", )
paddle.fft.irfftn(x=Tensor([16, 64, 19, 10],"complex64"), s=tuple(10,10,), axes=list[-2,-1,], norm="backward", )
paddle.fft.irfftn(Tensor([32, 15, 8, 256],"complex64"), tuple(15,15,), tuple(1,2,), "ortho", None, )
paddle.fft.irfftn(x=Tensor([16, 64, 10, 6],"complex64"), s=tuple(20,20,), axes=list[-2,-1,], norm="backward", )
paddle.fft.irfftn(x=Tensor([16, 32, 19, 10],"complex64"), s=tuple(19,19,), axes=list[-2,-1,], norm="backward", )
paddle.fft.irfftn(x=Tensor([16, 64, 10, 6],"complex64"), s=tuple(10,10,), axes=list[-2,-1,], norm="backward", )
paddle.fft.irfftn(x=Tensor([16, 32, 16, 9],"complex64"), s=list[16,16,], axes=list[-2,-1,], norm="backward", )
paddle.fft.rfft(Tensor([4, 32, 32, 64],"float32"), axis=-1, norm="forward", )
paddle.fft.rfftn(x=Tensor([16, 128, 10, 10],"float32"), norm="backward", axes=list[-2,-1,], )
paddle.fft.rfftn(x=Tensor([16, 64, 19, 19],"float32"), norm="backward", axes=list[-2,-1,], )
paddle.fft.rfftn(x=Tensor([16, 32, 19, 19],"float32"), norm="backward", axes=list[-2,-1,], )
paddle.fft.rfftn(x=Tensor([16, 32, 16, 16],"float32"), norm="backward", axes=list[-2,-1,], )
paddle.fft.rfftn(x=Tensor([16, 64, 10, 10],"float32"), norm="backward", axes=list[-2,-1,], )
paddle.fft.rfftn(x=Tensor([16, 96, 20, 20],"float32"), norm="backward", axes=list[-2,-1,], )
paddle.flatten(Tensor([8, 14, 20, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([124, 1536, 1],"float32"), 1, )
paddle.flatten(Tensor([8, 128, 160, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([1, 768, 28, 28],"float32"), 2, )
paddle.flatten(Tensor([8, 20, 20, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 22, 20, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([256, 1280, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 144, 160, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([128, 1280, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([128, 2048, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([64, 2560, 1, 1],"float16"), start_axis=1, )
paddle.flatten(Tensor([4, 144, 176, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 144, 144, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 20, 22, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 176, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 160, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 56, 88, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 160, 160, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 88, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 18, 22, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 18, 22, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 40, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 16, 22, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 80, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 56, 80, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 1536, 1],"float32"), 1, )
paddle.flatten(Tensor([8, 128, 160, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 28, 44, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([256, 2048, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 36, 36, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 144, 176, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 72, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 144, 144, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 144, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([640, 1280, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 144, 176, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 160, 144, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 176, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([256, 2048, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 128, 176, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 20, 22, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 22, 18, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 112, 160, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 2048, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 176, 176, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 28, 44, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 256, 6, 6],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 20, 18, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 22, 22, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 144, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 160, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 36, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 22, 22, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 88, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 144, 144, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 144, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 112, 160, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 28, 40, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 144, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([512, 1280, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 160, 160, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 32, 44, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 72, 88, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 22, 20, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 18, 20, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 2048, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 144, 160, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 160, 160, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 64, 88, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 112, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 1024, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 128, 176, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 1280, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([154, 1280, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 144, 176, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 160, 176, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([256, 1, 1, 2048],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 16, 20, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 80, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 144, 176, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 2048, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 128, 160, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 40, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 64, 80, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 32, 44, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 176, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 144, 160, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 72, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 20, 18, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 112, 176, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 1024, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([8, 160, 176, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 160, 176, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 88, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 160, 176, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 20, 20, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 14, 20, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 14, 22, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 160, 176, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 72, 80, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 18, 20, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 80, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 112, 176, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 72, 88, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 32, 40, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 112, 176, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 32, 40, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 112, 160, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 1024, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 16, 22, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([124, 1280, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([64, 2208, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 2560, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 160, 144, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([512, 1280, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 1920, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([60, 2048, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 72, 88, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 160, 144, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 144, 160, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 144, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 64, 88, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 128, 176, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 80, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 160, 112, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 256, 6, 6],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 128, 160, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 56, 80, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 1024, 1],"float16"), 1, )
paddle.flatten(Tensor([640, 1280, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 128, 160, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 160, 144, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 56, 88, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 2560, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([8, 112, 176, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 72, 72, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([154, 1280, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([4, 144, 160, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 176, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 128, 176, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 144, 144, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 176, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 112, 176, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 72, 72, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 112, 160, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 72, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 144, 176, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 18, 18, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 128, 176, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 160, 160, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 160, 144, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 72, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 144, 144, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 28, 40, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 160, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 36, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 112, 160, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 88, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 160, 160, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([1000, 784],"float32"), )
paddle.flatten(Tensor([8, 160, 144, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([256, 1280, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 72, 80, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 64, 80, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 176, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 144, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 16, 20, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 22, 18, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 1280, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([64, 2208, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 144, 160, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 14, 22, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 160, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 176, 160, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 8, 11, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 832, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 36, 40, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 44, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([512, 32],"float32"), )
paddle.flatten(Tensor([8, 11, 11, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([3, 100, 100],"float64"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([4, 36, 36, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 18, 20, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([16, 1024, 1],"float32"), 1, )
paddle.flatten(Tensor([4, 72, 56, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 22, 20, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 160, 144, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([12, 1024, 1],"float32"), 1, )
paddle.flatten(Tensor([8, 20, 18, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 80, 72, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 1280, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 80, 80, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 40, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 44, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([32, 2048, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 9, 11, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 22, 18, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 64, 88, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 72, 80, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 44, 36, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 44, 44, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([2, 512, 7, 7],"float32"), 1, )
paddle.flatten(Tensor([4, 80, 56, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 32, 40, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 144, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 44, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 32, 44, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([60, 768, 1],"float32"), 1, )
paddle.flatten(Tensor([4, 144, 112, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([40, 2048, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 36, 44, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 44, 44, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([77, 1280, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([4, 36, 40, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 10, 10, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 32, 44, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 56, 80, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([12, 256, 1, 16],"float32"), 2, )
paddle.flatten(Tensor([8, 72, 80, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 512, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 40, 40, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 9, 9, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([128, 192, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([8, 72, 88, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 9, 11, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 16, 5, 5],"float16"), 1, )
paddle.flatten(Tensor([8, 88, 72, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 512, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 44, 40, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 1024, 1],"float32"), 1, )
paddle.flatten(Tensor([8, 40, 40, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 16, 5, 5],"float32"), 1, -1, )
paddle.flatten(Tensor([4, 72, 72, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 56, 88, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 44, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 7, 11, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 36, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 36, 44, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([60, 1280, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([8, 36, 40, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 28, 44, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 44, 40, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 36, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 88, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 11, 9, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 1024, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 44, 36, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 7, 11, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 80, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 64, 88, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 36, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 11, 10, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 44, 40, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 44, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 160, 112, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 80, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 7, 10, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 88, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 16, 20, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 20, 20, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 56, 88, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 44, 36, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 16, 22, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 88, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 256, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 56, 88, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 32, 44, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 160, 144, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 80, 72, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 8, 10, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 384, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([8, 2048, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 20, 22, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([60, 1280, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 80, 72, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 44, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([124, 256, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([8, 72, 88, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 44, 36, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 160, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 80, 56, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 72, 56, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 72, 72, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 3, 32, 64],"float32"), start_axis=-2, )
paddle.flatten(Tensor([8, 40, 36, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([2, 256, 6, 6],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([4, 72, 88, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 11, 9, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 32, 44, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 36, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([60, 1024, 1],"float32"), 1, )
paddle.flatten(Tensor([128, 512],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(x=Tensor([64, 1280, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([8, 18, 18, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 144, 112, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 768, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 18, 22, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([3, 100, 120],"float64"), 1, 2, )
paddle.flatten(Tensor([8, 10, 9, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 20, 22, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 160, 112, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 512, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([4, 144, 160, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 72, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 36, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 7, 10, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 72, 80, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([32, 1536, 1],"float32"), 1, )
paddle.flatten(x=Tensor([128, 256, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([8, 32, 44, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 18, 18, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 40, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 16, 22, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 56, 80, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 72, 88, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([124, 768, 1],"float32"), 1, )
paddle.flatten(Tensor([8, 8, 10, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 480, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([8, 40, 36, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 72, 72, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 18, 20, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 44, 36, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 16, 5, 5],"float32"), 1, )
paddle.flatten(Tensor([8, 72, 72, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 44, 40, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 22, 22, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 512, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 36, 40, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([124, 192, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([4, 72, 80, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 28, 40, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 28, 40, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 80, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 16, 20, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 768, 1],"float16"), 1, )
paddle.flatten(Tensor([8, 44, 44, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 8, 11, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 40, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([36, 16, 5, 5],"float32"), 1, )
paddle.flatten(Tensor([8, 32, 40, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 20, 20, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([32, 1280, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 28, 44, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 512],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([4, 144, 144, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 9, 10, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 9, 10, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 10, 10, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 64, 80, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 40, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 512, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 22, 18, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 56, 80, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 80, 72, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([1, 512, 7, 7],"float32"), 1, )
paddle.flatten(Tensor([8, 44, 44, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 44, 40, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([28, 1536, 1],"float32"), 1, )
paddle.flatten(Tensor([4, 40, 36, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 64, 80, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 80, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([16, 1280, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 36, 36, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 36, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 10, 9, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 1536, 1],"float32"), 1, )
paddle.flatten(Tensor([8, 64, 88, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 32, 40, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([1124, 32],"float32"), )
paddle.flatten(Tensor([8, 44, 44, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 11, 10, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 88, 88, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([128, 768, 1],"float32"), 1, )
paddle.flatten(Tensor([8, 88, 72, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 44, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 32, 40, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 1024, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 40, 36, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 36, 28, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 88, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 72, 88, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([3, 100, 100],"float64"), )
paddle.flatten(Tensor([8, 64, 80, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 44, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 72, 72, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 80, 56, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 832, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([4, 72, 72, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 72, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([64, 768, 1],"float32"), 1, )
paddle.flatten(Tensor([8, 72, 80, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 22, 20, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 40, 44, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 72, 80, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 10, 11, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 80, 72, 1],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 11, 11, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 36, 40, 4],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([8, 10, 11, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 72, 56, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flip(Tensor([20, 3, 112, 112],"float32"), axis=-1, )
paddle.floor(Tensor([107136],"float32"), )
paddle.floor(Tensor([100000, 2],"float32"), )
paddle.floor(Tensor([100000, 2, 3],"float32"), )
paddle.floor(x=Tensor([100, 4, 38, 38],"float32"), )
paddle.floor(Tensor([4, 157920],"float32"), )
paddle.floor(Tensor([30, 200, 40],"float32"), )
paddle.floor(x=Tensor([100, 4, 9, 9],"float32"), )
paddle.floor(Tensor([64, 1, 28, 28],"float32"), )
paddle.floor(Tensor([52640],"float32"), )
paddle.floor(Tensor([2744, 1, 1],"float32"), )
paddle.floor(Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.floor_divide(Tensor([10, 1024],"int64"), Tensor([10, 1024],"int64"), )
paddle.fmax(Tensor([30, 200, 40],"float32"), Tensor([30, 200, 40],"float32"), )
paddle.fmin(Tensor([30, 200, 40],"float32"), Tensor([30, 200, 40],"float32"), )
paddle.full_like(Tensor([88, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([88, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([40, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 288, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([16, 7581],"int32"), 80, )
paddle.full_like(Tensor([91, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([88, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([64, 1726],"int32"), 80, )
paddle.full_like(Tensor([68, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([16, 9261],"int32"), 80, )
paddle.full_like(Tensor([68, 240, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([16, 8400],"int32"), 80, )
paddle.full_like(Tensor([68, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 384, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([91, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([64, 2125],"int32"), 80, )
paddle.full_like(Tensor([16, 10164],"int32"), 80, )
paddle.full_like(Tensor([68, 576, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([80, 384, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([80, 768, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([64, 2577],"int32"), 80, )
paddle.full_like(Tensor([91, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 1, 182, 182],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([16, 12096],"int32"), 80, )
paddle.full_like(Tensor([105344],"float32"), 0.0001, )
paddle.full_like(Tensor([68, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([16, 6804],"int32"), 80, )
paddle.full_like(Tensor([68, 192, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([64, 3060],"int32"), 80, )
paddle.full_like(Tensor([6, 32000],"float32"), 0.0, )
paddle.full_like(Tensor([68, 768, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([2, 256000],"float32"), 0.0, )
paddle.full_like(Tensor([16, 11109],"int32"), 80, )
paddle.full_like(Tensor([68, 960, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 480, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 1, 168, 168],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([40, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([80, 192, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([8, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([4, 7581],"int32"), 1, )
paddle.full_like(Tensor([8, 6069],"int32"), 4, )
paddle.full_like(Tensor([4, 6804],"int32"), 1, )
paddle.full_like(Tensor([4, 288, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([9, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([4, 3060],"int32"), 4, )
paddle.full_like(Tensor([2, 8, 64, 64],"float16"), 127, )
paddle.full_like(Tensor([16, 2100],"int32"), 80, )
paddle.full_like(Tensor([8, 5376],"int32"), 4, )
paddle.full_like(Tensor([2, 5376],"int32"), 10, )
paddle.full_like(Tensor([8, 2100],"int32"), 4, )
paddle.full_like(Tensor([4, 1, 134, 134],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 6804],"int32"), 10, )
paddle.full_like(Tensor([8, 7581],"int32"), 80, )
paddle.full_like(Tensor([58584],"float32"), 0.0001, )
paddle.full_like(Tensor([8, 5376],"int32"), 80, )
paddle.full_like(Tensor([16, 5376],"int32"), 80, )
paddle.full_like(Tensor([2, 7581],"int32"), 1, )
paddle.full_like(Tensor([10, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 21504],"int32"), 10, )
paddle.full_like(Tensor([8, 2100],"int32"), 80, )
paddle.full_like(Tensor([1, 33600],"int32"), 10, )
paddle.full_like(Tensor([4, 8400],"int32"), 4, )
paddle.full_like(Tensor([7, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([4, 9261],"int32"), 4, )
paddle.full_like(Tensor([1, 50304],"float32"), 0.0, )
paddle.full_like(Tensor([4, 3598],"int32"), 4, )
paddle.full_like(Tensor([256, 96],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 4725],"int32"), 4, )
paddle.full_like(Tensor([8, 10164],"int32"), 80, )
paddle.full_like(Tensor([8, 10164],"int32"), 4, )
paddle.full_like(Tensor([26336],"float32"), 0.0001, )
paddle.full_like(Tensor([1, 70644],"int32"), 10, )
paddle.full_like(Tensor([4, 4725],"int32"), 1, )
paddle.full_like(Tensor([8, 6885],"int32"), 4, )
paddle.full_like(Tensor([8, 4725],"int32"), 4, )
paddle.full_like(Tensor([2, 9261],"int32"), 1, )
paddle.full_like(Tensor([11901],"float32"), 0.0001, )
paddle.full_like(Tensor([8, 2541],"int32"), 4, )
paddle.full_like(Tensor([256, 128],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([8, 2541],"int32"), 80, )
paddle.full_like(Tensor([256, 128],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([8, 3024],"int32"), 80, )
paddle.full_like(Tensor([2, 6885],"int32"), 11, )
paddle.full_like(Tensor([2, 9261],"int32"), 4, )
paddle.full_like(Tensor([5, 12000],"float32"), 0.0, )
paddle.full_like(Tensor([4, 10164],"int32"), 4, )
paddle.full_like(Tensor([2, 12096],"int32"), 10, )
paddle.full_like(Tensor([219, 232],"float16"), 0.0, None, None, )
paddle.full_like(Tensor([1, 44436],"int32"), 10, )
paddle.full_like(Tensor([4, 1, 145, 145],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 5440],"int32"), 11, )
paddle.full_like(Tensor([4, 960, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 6804],"int32"), 1, )
paddle.full_like(Tensor([2, 7681],"int32"), 11, )
paddle.full_like(Tensor([2, 9382],"int32"), 11, )
paddle.full_like(Tensor([13, 56, 56],"int64"), 15, )
paddle.full_like(Tensor([219, 232],"int32"), 0.0, None, None, )
paddle.full_like(Tensor([8, 8400],"int32"), 80, )
paddle.full_like(Tensor([4, 7581],"int32"), 4, )
paddle.full_like(Tensor([128, 512],"float16"), -127, )
paddle.full_like(Tensor([4, 1, 148, 148],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([4, 12096],"int32"), 1, )
paddle.full_like(Tensor([4, 1, 132, 132],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([4, 4789],"int32"), 4, )
paddle.full_like(Tensor([4, 480, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([8, 11109],"int32"), 4, )
paddle.full_like(Tensor([68, 144, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([16, 2125],"int32"), 4, )
paddle.full_like(Tensor([2, 32000],"float32"), 0.0, )
paddle.full_like(Tensor([2, 8400],"int32"), 10, )
paddle.full_like(Tensor([4, 4116],"int32"), 1, )
paddle.full_like(Tensor([2, 11109],"int32"), 4, )
paddle.full_like(Tensor([1, 75600],"int32"), 10, )
paddle.full_like(Tensor([4, 2577],"int32"), 4, )
paddle.full_like(Tensor([4, 12096],"int32"), 4, )
paddle.full_like(Tensor([128, 512],"float16"), 127, )
paddle.full_like(Tensor([4, 1, 156, 156],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([219, 232],"int32"), 1.0, None, None, )
paddle.full_like(Tensor([1, 30000],"float32"), 0.0, )
paddle.full_like(Tensor([2, 8500],"int32"), 11, )
paddle.full_like(Tensor([3, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([16, 3024],"int32"), 80, )
paddle.full_like(Tensor([1, 56784],"int32"), 10, )
paddle.full_like(Tensor([16, 6069],"int32"), 80, )
paddle.full_like(Tensor([4, 1, 158, 158],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 10164],"int32"), 10, )
paddle.full_like(Tensor([4, 1, 114, 114],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1, 24276],"int32"), 10, )
paddle.full_like(Tensor([1, 10285],"int32"), 11, )
paddle.full_like(Tensor([8, 9261],"int32"), 80, )
paddle.full_like(Tensor([4, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 10164],"int32"), 1, )
paddle.full_like(Tensor([47604],"float32"), 0.0001, )
paddle.full_like(Tensor([8, 4116],"int32"), 4, )
paddle.full_like(Tensor([2, 6150],"int32"), 11, )
paddle.full_like(Tensor([8, 6069],"int32"), 80, )
paddle.full_like(Tensor([1, 30324],"int32"), 10, )
paddle.full_like(Tensor([219, 232],"float32"), 0.0, None, None, )
paddle.full_like(Tensor([256, 96],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([8, 4116],"int32"), 80, )
paddle.full_like(Tensor([8, 9382],"int32"), 4, )
paddle.full_like(Tensor([256, 256],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([64, 1360],"int32"), 80, )
paddle.full_like(Tensor([8, 9261],"int32"), 4, )
paddle.full_like(Tensor([1, 52500],"int32"), 10, )
paddle.full_like(Tensor([2, 6069],"int32"), 4, )
paddle.full_like(Tensor([4, 6804],"int32"), 4, )
paddle.full_like(Tensor([4, 576, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 6069],"int32"), 1, )
paddle.full_like(Tensor([2, 10285],"int32"), 11, )
paddle.full_like(Tensor([2, 7581],"int32"), 4, )
paddle.full_like(Tensor([16, 4116],"int32"), 80, )
paddle.full_like(Tensor([256, 192],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([4, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([80, 96, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([8, 7581],"int32"), 4, )
paddle.full_like(Tensor([2, 6069],"int32"), 10, )
paddle.full_like(Tensor([78112],"float32"), 0.0001, )
paddle.full_like(Tensor([16, 2541],"int32"), 80, )
paddle.full_like(Tensor([4, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 8400],"int32"), 1, )
paddle.full_like(Tensor([5, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([2, 7581],"int32"), 10, )
paddle.full_like(Tensor([219, 232],"int32"), 1e-10, None, None, )
paddle.full_like(Tensor([8, 8400],"int32"), 4, )
paddle.full_like(Tensor([2, 11109],"int32"), 10, )
paddle.full_like(Tensor([2, 12096],"int32"), 4, )
paddle.full_like(Tensor([256, 320],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 3024],"int32"), 1, )
paddle.full_like(Tensor([2, 5376],"int32"), 1, )
paddle.full_like(Tensor([68, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 36858],"int32"), 4, )
paddle.full_like(Tensor([4, 11109],"int32"), 1, )
paddle.full_like(Tensor([8, 10285],"int32"), 4, )
paddle.full_like(Tensor([219, 232],"int32"), 0.0, Dtype(int16), None, )
paddle.full_like(Tensor([3, 10000],"float32"), 0.0, )
paddle.full_like(Tensor([8, 6804],"int32"), 4, )
paddle.full_like(Tensor([13, 56, 56],"int64"), 31, )
paddle.full_like(Tensor([8, 3549],"int32"), 80, )
paddle.full_like(Tensor([2, 8400],"int32"), 4, )
paddle.full_like(Tensor([2, 5376],"int32"), 4, )
paddle.full_like(Tensor([2, 12096],"int32"), 1, )
paddle.full_like(Tensor([1, 40656],"int32"), 10, )
paddle.full_like(Tensor([10, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([1, 21504],"int32"), 15, )
paddle.full_like(Tensor([16, 3060],"int32"), 4, )
paddle.full_like(Tensor([2, 10164],"int32"), 4, )
paddle.full_like(Tensor([1, 61236],"int32"), 10, )
paddle.full_like(Tensor([19528],"float32"), 0.0001, )
paddle.full_like(Tensor([1, 65856],"int32"), 10, )
paddle.full_like(Tensor([4, 6069],"int32"), 4, )
paddle.full_like(Tensor([6, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([1, 38402],"int32"), 4, )
paddle.full_like(Tensor([1, 37044],"int32"), 10, )
paddle.full_like(Tensor([8, 11109],"int32"), 80, )
paddle.full_like(Tensor([1, 27216],"int32"), 10, )
paddle.full_like(Tensor([4, 3549],"int32"), 1, )
paddle.full_like(Tensor([40, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([16, 3549],"int32"), 80, )
paddle.full_like(Tensor([219, 232],"int32"), 0.0, VarType(float32), None, )
paddle.full_like(Tensor([1, 32000],"float16"), 0.0, )
paddle.full_like(Tensor([10, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([8, 4725],"int32"), 80, )
paddle.full_like(Tensor([256, 160],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 192],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 9261],"int32"), 1, )
paddle.full_like(Tensor([8, 8500],"int32"), 4, )
paddle.full_like(Tensor([4, 10164],"int32"), 1, )
paddle.full_like(Tensor([256, 256],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 5376],"int32"), 1, )
paddle.full_like(Tensor([8, 6804],"int32"), 80, )
paddle.full_like(Tensor([40, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 5376],"int32"), 4, )
paddle.full_like(Tensor([4, 4165],"int32"), 4, )
paddle.full_like(Tensor([2, 6804],"int32"), 4, )
paddle.full_like(Tensor([4, 4116],"int32"), 4, )
paddle.full_like(Tensor([219, 232],"float32"), 0.0, VarType(bfloat16), None, )
paddle.full_like(Tensor([219, 232],"int32"), 1e-100, None, None, )
paddle.full_like(Tensor([4, 2541],"int32"), 1, )
paddle.full_like(Tensor([1, 48384],"int32"), 10, )
paddle.full_like(Tensor([2, 8400],"int32"), 1, )
paddle.full_like(Tensor([26408],"float32"), 0.0001, )
paddle.full_like(Tensor([8, 7681],"int32"), 4, )
paddle.full_like(Tensor([16, 4725],"int32"), 80, )
paddle.full_like(Tensor([8, 12096],"int32"), 80, )
paddle.full_like(Tensor([10, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 2541],"int32"), 4, )
paddle.full_like(Tensor([2, 11109],"int32"), 1, )
paddle.full_like(Tensor([68, 96, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([2, 9261],"int32"), 10, )
paddle.full_like(Tensor([2, 6069],"int32"), 1, )
paddle.full_like(Tensor([19806],"float32"), 0.0001, )
paddle.full_like(Tensor([2, 8, 64, 64],"float16"), -127, )
paddle.full_like(Tensor([1948, 2],"float32"), -math.inf, )
paddle.full_like(Tensor([1, 8580],"int32"), 4, )
paddle.full_like(Tensor([2, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 2541],"int32"), 10, )
paddle.full_like(Tensor([13, 4, 7, 7],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 1, 37, 37],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 52, 52],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([4, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 256, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 4789],"int32"), 11, )
paddle.full_like(Tensor([1, 7681],"int32"), 11, )
paddle.full_like(Tensor([1, 1, 58, 58],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([1024],"float32"), 0, dtype=Dtype(float32), )
paddle.full_like(Tensor([1536],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 6400],"int32"), 4, )
paddle.full_like(Tensor([4, 240, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 4],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([2, 1, 35, 35],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1, 4789],"int32"), 11, )
paddle.full_like(Tensor([1024],"float32"), 1.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([256, 4],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 3598],"int32"), 11, )
paddle.full_like(Tensor([1, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 2541],"int32"), 4, )
paddle.full_like(Tensor([1948, 2],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([4, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([148, 5, 3],"float32"), 0.0, )
paddle.full_like(Tensor([1500],"int64"), False, dtype="bool", )
paddle.full_like(Tensor([1948, 2],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([2, 512],"float16"), -127, )
paddle.full_like(Tensor([1, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 3024],"int32"), 1, )
paddle.full_like(Tensor([16, 64],"float64"), 1e-20, )
paddle.full_like(Tensor([2, 4116],"int32"), 4, )
paddle.full_like(Tensor([1, 8500],"int32"), 11, )
paddle.full_like(Tensor([1948, 2],"float32"), 0.0, )
paddle.full_like(Tensor([1, 6150],"int32"), 11, )
paddle.full_like(Tensor([2, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 4725],"int32"), 10, )
paddle.full_like(Tensor([2, 4725],"int32"), 4, )
paddle.full_like(Tensor([2, 4725],"int32"), 1, )
paddle.full_like(Tensor([1, 8400],"int32"), 2, )
paddle.full_like(Tensor([1, 6885],"int32"), 11, )
paddle.full_like(Tensor([5168],"float32"), 0.0001, )
paddle.full_like(Tensor([2, 3549],"int32"), 1, )
paddle.full_like(Tensor([2, 3024],"int32"), 4, )
paddle.full_like(Tensor([2, 1, 54, 54],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 39, 39],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([5, 320, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([6602],"float32"), 0.0001, )
paddle.full_like(Tensor([2, 1, 45, 45],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 1, 40, 40],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([148, 5, 3],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([1, 3598],"int32"), 11, )
paddle.full_like(Tensor([2, 512],"float16"), 127, )
paddle.full_like(Tensor([2, 2100],"int32"), 10, )
paddle.full_like(Tensor([2, 4116],"int32"), 10, )
paddle.full_like(Tensor([148, 5, 3],"float32"), math.inf, )
paddle.full_like(Tensor([2, 1, 47, 47],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([3072],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 5440],"int32"), 11, )
paddle.full_like(Tensor([2, 3549],"int32"), 4, )
paddle.full_like(Tensor([2, 3549],"int32"), 10, )
paddle.full_like(Tensor([1878],"float32"), 0.0001, )
paddle.full_like(Tensor([1948, 2],"float32"), math.inf, )
paddle.full_like(Tensor([2, 1, 38, 38],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 4165],"int32"), 11, )
paddle.full_like(Tensor([5, 256, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([3, 6, 3, 4, 1, 5],"float64"), fill_value=1, )
paddle.full_like(Tensor([16, 64],"float32"), 1e-20, )
paddle.full_like(Tensor([2, 1, 57, 57],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 2100],"int32"), 4, )
paddle.full_like(Tensor([4, 320, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 9382],"int32"), 11, )
paddle.full_like(Tensor([148, 5, 3],"float32"), -math.inf, )
paddle.full_like(Tensor([2, 2541],"int32"), 1, )
paddle.full_like(Tensor([1152],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 1, 50, 50],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1024],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 4116],"int32"), 1, )
paddle.full_like(Tensor([2, 1, 51, 51],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([16, 64],"float32"), 1.0, )
paddle.full_like(Tensor([16, 64],"float64"), 1.0, )
paddle.full_like(Tensor([256, 4],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 3024],"int32"), 10, )
paddle.full_like(Tensor([6, 256],"float32"), 0.0, )
paddle.full_like(Tensor([4, 144, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 8000],"float32"), -math.inf, )
paddle.full_like(Tensor([148, 5, 3],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([2, 1, 41, 41],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1, 4165],"int32"), 11, )
paddle.full_like(Tensor([2, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 1, 53, 53],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([2, 2100],"int32"), 1, )
paddle.full_like(Tensor([4, 2100],"int32"), 1, )
paddle.gather(Tensor([73984, 4],"float32"), Tensor([1194],"int64"), axis=0, )
paddle.gather(Tensor([164928, 2],"float32"), Tensor([1603],"int64"), axis=0, )
paddle.gather(Tensor([56448, 4],"float32"), Tensor([66],"int64"), axis=0, )
paddle.gather(Tensor([260770],"int32"), Tensor([234],"int32"), )
paddle.gather(Tensor([234108],"int32"), Tensor([170],"int32"), )
paddle.gather(Tensor([61952, 4],"float32"), Tensor([394],"int64"), axis=0, )
paddle.gather(Tensor([184832, 4],"float32"), Tensor([218],"int64"), axis=0, )
paddle.gather(Tensor([11552, 68],"float32"), Tensor([164],"int64"), axis=0, )
paddle.gather(Tensor([276470],"int32"), Tensor([203],"int32"), )
paddle.gather(Tensor([352],"int32"), Tensor([134400],"int64"), axis=0, )
paddle.gather(Tensor([86528, 2],"float32"), Tensor([436],"int64"), axis=0, )
paddle.gather(Tensor([375659],"int32"), Tensor([250],"int32"), )
paddle.gather(Tensor([896, 4],"float32"), Tensor([136000],"int64"), axis=0, )
paddle.gather(Tensor([207154],"int32"), Tensor([219],"int32"), )
paddle.gather(Tensor([3528, 32],"float32"), Tensor([2],"int64"), axis=0, )
paddle.gather(Tensor([2048, 320],"float32"), Tensor([237],"int64"), )
paddle.gather(Tensor([188926],"int32"), Tensor([229],"int32"), )
paddle.gather(Tensor([4789, 30],"int64"), Tensor([4183],"int64"), axis=0, )
paddle.gather(Tensor([4789, 26],"int64"), Tensor([4201],"int64"), axis=0, )
paddle.gather(Tensor([2888, 68],"float32"), Tensor([64],"int64"), axis=0, )
paddle.gather(Tensor([2304, 256],"float32"), index=Tensor([100],"int32"), )
paddle.gather(Tensor([215687],"int32"), Tensor([188],"int32"), )
paddle.gather(Tensor([285186],"int32"), Tensor([234],"int32"), )
paddle.gather(Tensor([150528, 2],"float32"), Tensor([381],"int64"), axis=0, )
paddle.gather(Tensor([4096, 32],"float32"), Tensor([511],"int64"), axis=0, )
paddle.gather(Tensor([267307],"int32"), Tensor([186],"int32"), )
paddle.gather(Tensor([8, 4],"float32"), Tensor([269586],"int64"), )
paddle.gather(Tensor([34000, 15],"int64"), Tensor([1118],"int64"), axis=0, )
paddle.gather(Tensor([147456, 4],"float32"), Tensor([736],"int64"), axis=0, )
paddle.gather(Tensor([184832, 4],"float32"), Tensor([16],"int64"), axis=0, )
paddle.gather(Tensor([397300],"int32"), Tensor([252],"int32"), )
paddle.gather(Tensor([261738],"int32"), Tensor([247],"int32"), )
paddle.gather(Tensor([204288, 1],"float32"), Tensor([610],"int64"), axis=0, )
paddle.gather(Tensor([375069],"int32"), Tensor([212],"int32"), )
paddle.gather(Tensor([265101],"int32"), Tensor([173],"int32"), )
paddle.gather(Tensor([101946],"int32"), Tensor([174],"int32"), )
paddle.gather(Tensor([324000],"int64"), Tensor([510],"int64"), axis=0, )
paddle.gather(Tensor([115200, 2],"float32"), Tensor([573],"int64"), axis=0, )
paddle.gather(Tensor([73728, 4],"float32"), Tensor([351],"int64"), axis=0, )
paddle.gather(Tensor([238080, 4],"float32"), Tensor([215, 1],"int64"), )
paddle.gather(Tensor([294983],"int32"), Tensor([251],"int32"), )
paddle.gather(Tensor([275684],"int32"), Tensor([203],"int32"), )
paddle.gather(Tensor([198153],"int32"), Tensor([195],"int32"), )
paddle.gather(Tensor([195840, 4],"float32"), Tensor([2577],"int64"), axis=0, )
paddle.gather(Tensor([277015],"int32"), Tensor([221],"int32"), )
paddle.gather(Tensor([311058],"int32"), Tensor([175],"int32"), )
paddle.gather(Tensor([303447],"int32"), Tensor([228],"int32"), )
paddle.gather(Tensor([3060, 42],"int64"), Tensor([1944],"int64"), axis=0, )
paddle.gather(Tensor([6272, 32],"float32"), Tensor([264],"int64"), axis=0, )
paddle.gather(Tensor([365018],"int32"), Tensor([201],"int32"), )
paddle.gather(Tensor([175104, 1],"float32"), Tensor([257],"int64"), axis=0, )
paddle.gather(Tensor([1024, 256],"float32"), index=Tensor([136],"int32"), )
paddle.gather(Tensor([1, 4],"float32"), Tensor([245823],"int64"), )
paddle.gather(Tensor([229067],"int32"), Tensor([213],"int32"), )
paddle.gather(Tensor([19, 4],"float32"), Tensor([250656],"int64"), )
paddle.gather(Tensor([260563],"int32"), Tensor([248],"int32"), )
paddle.gather(Tensor([124032],"int64"), Tensor([1177],"int64"), )
paddle.gather(Tensor([293446],"int32"), Tensor([229],"int32"), )
paddle.gather(Tensor([228000, 4],"float32"), Tensor([441, 1],"int64"), )
paddle.gather(Tensor([28800, 4],"float32"), Tensor([288],"int64"), axis=0, )
paddle.gather(Tensor([165376],"int64"), Tensor([138],"int64"), axis=0, )
paddle.gather(Tensor([240196],"int32"), Tensor([212],"int32"), )
paddle.gather(Tensor([347857],"int32"), Tensor([203],"int32"), )
paddle.gather(Tensor([329357],"int32"), Tensor([195],"int32"), )
paddle.gather(Tensor([27648, 32],"float32"), Tensor([243],"int64"), axis=0, )
paddle.gather(Tensor([60840, 2],"float32"), Tensor([403],"int64"), axis=0, )
paddle.gather(Tensor([300957],"int32"), Tensor([237],"int32"), )
paddle.gather(Tensor([129792, 2],"float32"), Tensor([299],"int64"), axis=0, )
paddle.gather(Tensor([27, 4],"float32"), Tensor([386694],"int64"), )
paddle.gather(Tensor([5184, 32],"float32"), Tensor([58],"int64"), axis=0, )
paddle.gather(Tensor([12240, 14],"int64"), Tensor([868],"int64"), axis=0, )
paddle.gather(Tensor([294056],"int32"), Tensor([128],"int32"), )
paddle.gather(Tensor([338173],"int32"), Tensor([149],"int32"), )
paddle.gather(Tensor([17, 4],"float32"), Tensor([300762],"int64"), )
paddle.gather(Tensor([347687],"int32"), Tensor([183],"int32"), )
paddle.gather(Tensor([53, 4],"float32"), Tensor([241731],"int64"), )
paddle.gather(Tensor([23, 4],"float32"), Tensor([227124],"int64"), )
paddle.gather(Tensor([246681],"int32"), Tensor([207],"int32"), )
paddle.gather(Tensor([330047],"int32"), Tensor([246],"int32"), )
paddle.gather(Tensor([2888, 68],"float32"), Tensor([69],"int64"), axis=0, )
paddle.gather(Tensor([248879],"int32"), Tensor([241],"int32"), )
paddle.gather(Tensor([343038],"int32"), Tensor([168],"int32"), )
paddle.gather(Tensor([294986],"int32"), Tensor([238],"int32"), )
paddle.gather(Tensor([18432, 32],"float32"), Tensor([352],"int64"), axis=0, )
paddle.gather(Tensor([56250, 4],"float32"), Tensor([127, 1],"int64"), )
paddle.gather(Tensor([150528],"int64"), Tensor([354],"int64"), axis=0, )
paddle.gather(Tensor([5, 4],"float32"), Tensor([227124],"int64"), )
paddle.gather(Tensor([3240, 32],"float32"), Tensor([204],"int64"), axis=0, )
paddle.gather(Tensor([11, 4],"float32"), Tensor([359613],"int64"), )
paddle.gather(Tensor([32448, 4],"float32"), Tensor([211],"int64"), axis=0, )
paddle.gather(Tensor([3, 4],"float32"), Tensor([320739],"int64"), )
paddle.gather(Tensor([7, 4],"float32"), Tensor([185691],"int64"), )
paddle.gather(Tensor([416],"int32"), Tensor([148176],"int64"), axis=0, )
paddle.gather(Tensor([100352],"int64"), Tensor([490],"int64"), axis=0, )
paddle.gather(Tensor([332719],"int32"), Tensor([214],"int32"), )
paddle.gather(Tensor([5408, 32],"float32"), Tensor([262],"int64"), axis=0, )
paddle.gather(Tensor([172800, 1],"float32"), Tensor([443],"int64"), axis=0, )
paddle.gather(Tensor([256, 4],"float32"), Tensor([162624],"int64"), axis=0, )
paddle.gather(Tensor([1, 4],"float32"), Tensor([171888],"int64"), )
paddle.gather(Tensor([12300, 32],"float32"), Tensor([114],"int64"), axis=0, )
paddle.gather(Tensor([12768, 68],"float32"), Tensor([51],"int64"), axis=0, )
paddle.gather(Tensor([368694],"int32"), Tensor([240],"int32"), )
paddle.gather(Tensor([7196, 32],"float32"), Tensor([53],"int64"), axis=0, )
paddle.gather(Tensor([16660, 14],"int64"), Tensor([699],"int64"), axis=0, )
paddle.gather(Tensor([4165, 25],"int64"), Tensor([989],"int64"), axis=0, )
paddle.gather(Tensor([121600, 1],"float32"), Tensor([259],"int64"), axis=0, )
paddle.gather(Tensor([14, 4],"float32"), Tensor([200022],"int64"), )
paddle.gather(Tensor([222580],"int32"), Tensor([232],"int32"), )
paddle.gather(Tensor([315000],"float32"), Tensor([1024, 1],"int64"), )
paddle.gather(Tensor([182784, 4],"float32"), Tensor([155],"int64"), axis=0, )
paddle.gather(Tensor([87040, 4],"float32"), Tensor([1751],"int64"), axis=0, )
paddle.gather(Tensor([378119],"int32"), Tensor([173],"int32"), )
paddle.gather(Tensor([123904, 2],"float32"), Tensor([742],"int64"), axis=0, )
paddle.gather(Tensor([165376],"int64"), Tensor([184],"int64"), axis=0, )
paddle.gather(Tensor([165778],"int32"), Tensor([128],"int32"), )
paddle.gather(Tensor([110592, 1],"float32"), Tensor([339],"int64"), axis=0, )
paddle.gather(Tensor([241028],"int32"), Tensor([179],"int32"), )
paddle.gather(Tensor([365934],"int32"), Tensor([222],"int32"), )
paddle.gather(Tensor([9216, 32],"float32"), Tensor([607],"int64"), axis=0, )
paddle.gather(Tensor([115200, 4],"float32"), Tensor([415],"int64"), axis=0, )
paddle.gather(Tensor([6400, 32],"float32"), Tensor([2],"int64"), axis=0, )
paddle.gather(Tensor([27540, 8],"int64"), Tensor([892],"int64"), axis=0, )
paddle.gather(Tensor([213840],"int32"), Tensor([1024, 1],"int64"), )
paddle.gather(Tensor([275940],"int32"), Tensor([1024, 1],"int64"), )
paddle.gather(Tensor([4, 4],"float32"), Tensor([212784],"int64"), )
paddle.gather(Tensor([2240, 4],"float32"), Tensor([110464],"int64"), axis=0, )
paddle.gather(Tensor([50176, 4],"float32"), Tensor([227],"int64"), axis=0, )
paddle.gather(Tensor([102400, 1],"float32"), Tensor([508],"int64"), axis=0, )
paddle.gather(Tensor([184832],"int64"), Tensor([238],"int64"), axis=0, )
paddle.gather(Tensor([12544, 32],"float32"), Tensor([115],"int64"), axis=0, )
paddle.gather(Tensor([406084],"int32"), Tensor([188],"int32"), )
paddle.gather(Tensor([27648, 32],"float32"), Tensor([189],"int64"), axis=0, )
paddle.gather(Tensor([336566],"int32"), Tensor([196],"int32"), )
paddle.gather(Tensor([896, 4],"float32"), Tensor([195840],"int64"), axis=0, )
paddle.gather(Tensor([124032, 4],"float32"), Tensor([2046],"int64"), )
paddle.gather(Tensor([339551],"int32"), Tensor([241],"int32"), )
paddle.gather(Tensor([225120, 4],"float32"), Tensor([376, 1],"int64"), )
paddle.gather(Tensor([204288, 4],"float32"), Tensor([84],"int64"), axis=0, )
paddle.gather(Tensor([110464, 4],"float32"), Tensor([1785],"int64"), axis=0, )
paddle.gather(Tensor([285557],"int32"), Tensor([234],"int32"), )
paddle.gather(Tensor([283466],"int32"), Tensor([187],"int32"), )
paddle.gather(Tensor([184832, 1],"float32"), Tensor([494],"int64"), axis=0, )
paddle.gather(Tensor([12300, 32],"float32"), Tensor([55],"int64"), axis=0, )
paddle.gather(Tensor([324000, 2],"float32"), Tensor([561],"int64"), axis=0, )
paddle.gather(Tensor([17000, 32],"float32"), Tensor([145],"int64"), axis=0, )
paddle.gather(Tensor([228698],"int32"), Tensor([247],"int32"), )
paddle.gather(Tensor([8, 4],"float32"), Tensor([327360],"int64"), )
paddle.gather(Tensor([363647],"int32"), Tensor([183],"int32"), )
paddle.gather(Tensor([30, 4],"float32"), Tensor([220968],"int64"), )
paddle.gather(Tensor([311952],"int32"), Tensor([226],"int32"), )
paddle.gather(Tensor([224353],"int32"), Tensor([188],"int32"), )
paddle.gather(Tensor([2584, 68],"float32"), Tensor([58],"int64"), axis=0, )
paddle.gather(Tensor([242336],"int32"), Tensor([238],"int32"), )
paddle.gather(Tensor([608, 4],"float32"), Tensor([177744],"int64"), axis=0, )
paddle.gather(Tensor([115200, 1],"float32"), Tensor([573],"int64"), axis=0, )
paddle.gather(Tensor([9408, 32],"float32"), Tensor([191],"int64"), axis=0, )
paddle.gather(Tensor([4608, 32],"float32"), Tensor([295],"int64"), axis=0, )
paddle.gather(Tensor([264560],"int32"), Tensor([172],"int32"), )
paddle.gather(Tensor([349603],"int32"), Tensor([254],"int32"), )
paddle.gather(Tensor([178432],"int64"), Tensor([198],"int64"), axis=0, )
paddle.gather(Tensor([340011],"int32"), Tensor([251],"int32"), )
paddle.gather(Tensor([1024, 256],"float32"), index=Tensor([112],"int32"), )
paddle.gather(Tensor([242776],"int32"), Tensor([250],"int32"), )
paddle.gather(Tensor([282281],"int32"), Tensor([128],"int32"), )
paddle.gather(Tensor([243360, 1],"float32"), Tensor([739],"int64"), axis=0, )
paddle.gather(Tensor([11552, 68],"float32"), Tensor([36],"int64"), axis=0, )
paddle.gather(Tensor([131328],"int64"), Tensor([133],"int64"), axis=0, )
paddle.gather(Tensor([269562],"int32"), Tensor([245],"int32"), )
paddle.gather(Tensor([264546],"int32"), Tensor([137],"int32"), )
paddle.gather(Tensor([2048, 320],"float32"), Tensor([333],"int64"), )
paddle.gather(Tensor([244707],"int32"), Tensor([187],"int32"), )
paddle.gather(Tensor([65536, 2],"float32"), Tensor([765],"int64"), axis=0, )
paddle.gather(Tensor([3, 4],"float32"), Tensor([237360],"int64"), )
paddle.gather(Tensor([2304, 256],"float32"), index=Tensor([136],"int32"), )
paddle.gather(Tensor([177276, 4],"float32"), Tensor([25, 1],"int64"), )
paddle.gather(Tensor([182030],"int32"), Tensor([250],"int32"), )
paddle.gather(Tensor([216829],"int32"), Tensor([246],"int32"), )
paddle.gather(Tensor([300971],"int32"), Tensor([196],"int32"), )
paddle.gather(Tensor([4789, 28],"int64"), Tensor([2048],"int64"), axis=0, )
paddle.gather(Tensor([110592, 1],"float32"), Tensor([392],"int64"), axis=0, )
paddle.gather(Tensor([1024, 256],"float32"), index=Tensor([92],"int32"), )
paddle.gather(Tensor([275373],"int32"), Tensor([178],"int32"), )
paddle.gather(Tensor([30976, 32],"float32"), Tensor([686],"int64"), axis=0, )
paddle.gather(Tensor([3872, 32],"float32"), Tensor([273],"int64"), axis=0, )
paddle.gather(Tensor([347670],"int32"), Tensor([170],"int32"), )
paddle.gather(Tensor([576],"int32"), Tensor([134400],"int64"), axis=0, )
paddle.gather(Tensor([223413],"int32"), Tensor([247],"int32"), )
paddle.gather(Tensor([20250, 32],"float32"), Tensor([268],"int64"), axis=0, )
paddle.gather(Tensor([10, 4],"float32"), Tensor([227124],"int64"), )
paddle.gather(Tensor([16660, 9],"int64"), Tensor([791],"int64"), axis=0, )
paddle.gather(Tensor([13091, 32],"float32"), Tensor([3012],"int64"), )
paddle.gather(Tensor([309960],"int32"), Tensor([1024, 1],"int64"), )
paddle.gather(Tensor([2, 4],"float32"), Tensor([241221],"int64"), )
paddle.gather(Tensor([5, 4],"float32"), Tensor([386694],"int64"), )
paddle.gather(Tensor([301115],"int32"), Tensor([251],"int32"), )
paddle.gather(Tensor([41344, 4],"float32"), Tensor([258],"int64"), axis=0, )
paddle.gather(Tensor([150528, 1],"float32"), Tensor([261],"int64"), axis=0, )
paddle.gather(Tensor([147456, 1],"float32"), Tensor([650],"int64"), axis=0, )
paddle.gather(Tensor([100440, 4],"float32"), Tensor([59, 1],"int64"), )
paddle.gather(Tensor([165376],"int64"), Tensor([100],"int64"), axis=0, )
paddle.gather(Tensor([13, 4],"float32"), Tensor([252681],"int64"), )
paddle.gather(Tensor([147456, 2],"float32"), Tensor([1298],"int64"), axis=0, )
paddle.gather(Tensor([317996],"int32"), Tensor([186],"int32"), )
paddle.gather(Tensor([3, 4],"float32"), Tensor([264978],"int64"), )
paddle.gather(Tensor([241028],"int32"), Tensor([178],"int32"), )
paddle.gather(Tensor([164928, 2],"float32"), Tensor([1431],"int64"), axis=0, )
paddle.gather(Tensor([209664, 1],"float32"), Tensor([172],"int64"), axis=0, )
paddle.gather(Tensor([211064],"int32"), Tensor([128],"int32"), )
paddle.gather(Tensor([241364],"int32"), Tensor([128],"int32"), )
paddle.gather(Tensor([311093],"int32"), Tensor([191],"int32"), )
paddle.gather(Tensor([239786],"int32"), Tensor([166],"int32"), )
paddle.gather(Tensor([82944, 4],"float32"), Tensor([869],"int64"), axis=0, )
paddle.gather(Tensor([277414],"int32"), Tensor([230],"int32"), )
paddle.gather(Tensor([220664],"int32"), Tensor([191],"int32"), )
paddle.gather(Tensor([23232, 32],"float32"), Tensor([264],"int64"), axis=0, )
paddle.gather(Tensor([318099],"int32"), Tensor([143],"int32"), )
paddle.gather(Tensor([184356],"int32"), Tensor([229],"int32"), )
paddle.gather(Tensor([124032],"int64"), Tensor([1851],"int64"), )
paddle.gather(Tensor([310860],"int32"), Tensor([252],"int32"), )
paddle.gather(Tensor([256],"int32"), Tensor([177744],"int64"), axis=0, )
paddle.gather(Tensor([32448, 4],"float32"), Tensor([207],"int64"), axis=0, )
paddle.gather(Tensor([100352, 2],"float32"), Tensor([466],"int64"), axis=0, )
paddle.gather(Tensor([217044],"int32"), Tensor([246],"int32"), )
paddle.gather(Tensor([121600],"int64"), Tensor([227],"int64"), axis=0, )
paddle.gather(Tensor([257153],"int32"), Tensor([209],"int32"), )
paddle.gather(Tensor([136000, 4],"float32"), Tensor([2180],"int64"), axis=0, )
paddle.gather(Tensor([243360],"int64"), Tensor([533],"int64"), axis=0, )
paddle.gather(Tensor([204288],"int64"), Tensor([310],"int64"), axis=0, )
paddle.gather(Tensor([124032],"int64"), Tensor([745],"int64"), )
paddle.gather(Tensor([368832],"int32"), Tensor([248],"int32"), )
paddle.gather(Tensor([4, 4],"float32"), Tensor([293397],"int64"), )
paddle.gather(Tensor([32448, 4],"float32"), Tensor([212],"int64"), axis=0, )
paddle.gather(Tensor([172800, 4],"float32"), Tensor([361],"int64"), axis=0, )
paddle.gather(Tensor([25088, 4],"float32"), Tensor([346],"int64"), axis=0, )
paddle.gather(Tensor([39690, 4],"float32"), Tensor([57, 1],"int64"), )
paddle.gather(Tensor([11, 4],"float32"), Tensor([199485],"int64"), )
paddle.gather(Tensor([102400],"int64"), Tensor([551],"int64"), axis=0, )
paddle.gather(Tensor([81000, 2],"float32"), Tensor([479],"int64"), axis=0, )
paddle.gather(Tensor([15, 4],"float32"), Tensor([248616],"int64"), )
paddle.gather(Tensor([320746],"int32"), Tensor([227],"int32"), )
paddle.gather(Tensor([110464, 2],"float32"), Tensor([1312],"int64"), axis=0, )
paddle.gather(Tensor([26, 4],"float32"), Tensor([304368],"int64"), )
paddle.gather(Tensor([369103],"int32"), Tensor([210],"int32"), )
paddle.gather(Tensor([102400, 2],"float32"), Tensor([939],"int64"), axis=0, )
paddle.gather(Tensor([3600, 32],"float32"), Tensor([4],"int64"), axis=0, )
paddle.gather(Tensor([82944, 2],"float32"), Tensor([596],"int64"), axis=0, )
paddle.gather(Tensor([11, 4],"float32"), Tensor([270096],"int64"), )
paddle.gather(Tensor([43200, 4],"float32"), Tensor([230],"int64"), axis=0, )
paddle.gather(Tensor([1664, 4],"float32"), Tensor([136000],"int64"), axis=0, )
paddle.gather(Tensor([337590],"float32"), Tensor([512, 1],"int64"), )
paddle.gather(Tensor([165376],"int64"), Tensor([98],"int64"), axis=0, )
paddle.gather(Tensor([228914],"int32"), Tensor([250],"int32"), )
paddle.gather(Tensor([320273],"int32"), Tensor([230],"int32"), )
paddle.gather(Tensor([217205],"int32"), Tensor([254],"int32"), )
paddle.gather(Tensor([82944, 4],"float32"), Tensor([749],"int64"), axis=0, )
paddle.gather(Tensor([310728],"int32"), Tensor([249],"int32"), )
paddle.gather(Tensor([11552, 68],"float32"), Tensor([33],"int64"), axis=0, )
paddle.gather(Tensor([165376],"int64"), Tensor([208],"int64"), axis=0, )
paddle.gather(Tensor([23232, 32],"float32"), Tensor([166],"int64"), axis=0, )
paddle.gather(Tensor([11, 4],"float32"), Tensor([408177],"int64"), )
paddle.gather(Tensor([150528, 1],"float32"), Tensor([423],"int64"), axis=0, )
paddle.gather(Tensor([4, 4],"float32"), Tensor([388740],"int64"), )
paddle.gather(Tensor([257400],"float32"), Tensor([1024, 1],"int64"), )
paddle.gather(Tensor([284468],"int32"), Tensor([128],"int32"), )
paddle.gather(Tensor([136000, 2],"float32"), Tensor([2086],"int64"), axis=0, )
paddle.gather(Tensor([220416],"int64"), Tensor([144],"int64"), axis=0, )
paddle.gather(Tensor([226560],"int32"), Tensor([1024, 1],"int64"), )
paddle.gather(Tensor([164928, 4],"float32"), Tensor([2422],"int64"), axis=0, )
paddle.gather(Tensor([240758],"int32"), Tensor([240],"int32"), )
paddle.gather(Tensor([320396],"int32"), Tensor([236],"int32"), )
paddle.gather(Tensor([304228],"int32"), Tensor([253],"int32"), )
paddle.gather(Tensor([320, 4],"float32"), Tensor([148176],"int64"), axis=0, )
paddle.gather(Tensor([210542],"int32"), Tensor([250],"int32"), )
paddle.gather(Tensor([291127],"int32"), Tensor([248],"int32"), )
paddle.gather(Tensor([172800, 2],"float32"), Tensor([472],"int64"), axis=0, )
paddle.gather(Tensor([87040, 2],"float32"), Tensor([1770],"int64"), axis=0, )
paddle.gather(Tensor([397091],"int32"), Tensor([243],"int32"), )
paddle.gather(Tensor([48544, 4],"float32"), Tensor([118],"int64"), axis=0, )
paddle.gather(Tensor([189617],"int32"), Tensor([239],"int32"), )
paddle.gather(Tensor([234205],"int32"), Tensor([236],"int32"), )
paddle.gather(Tensor([17, 4],"float32"), Tensor([295443],"int64"), )
paddle.gather(Tensor([70560, 4],"float32"), Tensor([426],"int64"), axis=0, )
paddle.gather(Tensor([321532],"int32"), Tensor([250],"int32"), )
paddle.gather(Tensor([7744, 32],"float32"), Tensor([577],"int64"), axis=0, )
paddle.gather(Tensor([172800, 2],"float32"), Tensor([470],"int64"), axis=0, )
paddle.gather(Tensor([329819],"int32"), Tensor([229],"int32"), )
paddle.gather(Tensor([343899],"int32"), Tensor([152],"int32"), )
paddle.gather(Tensor([242698],"int32"), Tensor([234],"int32"), )
paddle.gather(Tensor([375477],"int32"), Tensor([240],"int32"), )
paddle.gather(Tensor([364760],"int32"), Tensor([213],"int32"), )
paddle.gather(Tensor([110592, 4],"float32"), Tensor([310],"int64"), axis=0, )
paddle.gather(Tensor([293581],"int32"), Tensor([233],"int32"), )
paddle.gather(Tensor([306013],"int32"), Tensor([234],"int32"), )
paddle.gather(Tensor([2048, 320],"float32"), Tensor([315],"int64"), )
paddle.gather(Tensor([339925],"int32"), Tensor([224],"int32"), )
paddle.gather(Tensor([136000, 4],"float32"), Tensor([2095],"int64"), axis=0, )
paddle.gather(Tensor([92928, 4],"float32"), Tensor([366],"int64"), axis=0, )
paddle.gather(Tensor([352],"int32"), Tensor([193536],"int64"), axis=0, )
paddle.gather(Tensor([243570],"int32"), Tensor([128],"int32"), )
paddle.gather(Tensor([4, 4],"float32"), Tensor([227124],"int64"), )
paddle.gather(Tensor([2577, 43],"int64"), Tensor([1118],"int64"), axis=0, )
paddle.gather(Tensor([198912],"int64"), Tensor([9],"int64"), axis=0, )
paddle.gather(Tensor([164928, 2],"float32"), Tensor([1700],"int64"), axis=0, )
paddle.gather(Tensor([7200, 32],"float32"), Tensor([226],"int64"), axis=0, )
paddle.gather(Tensor([267765],"int32"), Tensor([207],"int32"), )
paddle.gather(Tensor([13770, 32],"float32"), Tensor([129],"int64"), axis=0, )
paddle.gather(Tensor([7681, 32],"float32"), Tensor([22],"int64"), axis=0, )
paddle.gather(Tensor([22, 4],"float32"), Tensor([369105],"int64"), )
paddle.gather(Tensor([5, 4],"float32"), Tensor([245520],"int64"), )
paddle.gather(Tensor([65536, 2],"float32"), Tensor([679],"int64"), axis=0, )
paddle.gather(Tensor([13, 4],"float32"), Tensor([270096],"int64"), )
paddle.gather(Tensor([237562],"int32"), Tensor([246],"int32"), )
paddle.gather(Tensor([349668],"int32"), Tensor([250],"int32"), )
paddle.gather(Tensor([416],"int32"), Tensor([134400],"int64"), axis=0, )
paddle.gather(Tensor([13770, 32],"float32"), Tensor([34],"int64"), axis=0, )
paddle.gather(Tensor([311040],"int32"), Tensor([1024, 1],"int64"), )
paddle.gather(Tensor([165376, 4],"float32"), Tensor([174],"int64"), axis=0, )
paddle.gather(Tensor([214754],"int32"), Tensor([252],"int32"), )
paddle.gather(Tensor([124032],"int64"), Tensor([774],"int64"), )
paddle.gather(Tensor([100352],"int64"), Tensor([258],"int64"), axis=0, )
paddle.gather(Tensor([349006],"int32"), Tensor([129],"int32"), )
paddle.gather(Tensor([173880, 4],"float32"), Tensor([410, 1],"int64"), )
paddle.gather(Tensor([123904],"int64"), Tensor([647],"int64"), axis=0, )
paddle.gather(Tensor([338893],"int32"), Tensor([230],"int32"), )
paddle.gather(Tensor([608],"int32"), Tensor([108864],"int64"), axis=0, )
paddle.gather(Tensor([165376],"int64"), Tensor([181],"int64"), axis=0, )
paddle.gather(Tensor([228877],"int32"), Tensor([236],"int32"), )
paddle.gather(Tensor([19125, 11],"int64"), Tensor([1713],"int64"), axis=0, )
paddle.gather(Tensor([45920, 4],"float32"), Tensor([112],"int64"), axis=0, )
paddle.gather(Tensor([271481],"int32"), Tensor([233],"int32"), )
paddle.gather(Tensor([358491],"int32"), Tensor([206],"int32"), )
paddle.gather(Tensor([243360],"int64"), Tensor([464],"int64"), axis=0, )
paddle.gather(Tensor([82944, 4],"float32"), Tensor([136],"int64"), axis=0, )
paddle.gather(Tensor([220968, 4],"float32"), Tensor([4, 1],"int64"), )
paddle.gather(Tensor([334977],"int32"), Tensor([242],"int32"), )
paddle.gather(Tensor([219199],"int32"), Tensor([137],"int32"), )
paddle.gather(Tensor([358309],"int32"), Tensor([226],"int32"), )
paddle.gather(Tensor([121600, 1],"float32"), Tensor([203],"int64"), axis=0, )
paddle.gather(Tensor([204714],"int32"), Tensor([234],"int32"), )
paddle.gather(Tensor([250204],"int32"), Tensor([245],"int32"), )
paddle.gather(Tensor([73728, 2],"float32"), Tensor([349],"int64"), axis=0, )
paddle.gather(Tensor([129792, 2],"float32"), Tensor([282],"int64"), axis=0, )
paddle.gather(Tensor([388307],"int32"), Tensor([244],"int32"), )
paddle.gather(Tensor([51072, 4],"float32"), Tensor([256],"int64"), axis=0, )
paddle.gather(Tensor([1856],"int32"), Tensor([136000],"int64"), axis=0, )
paddle.gather(Tensor([182146],"int32"), Tensor([252],"int32"), )
paddle.gather(Tensor([243360, 1],"float32"), Tensor([741],"int64"), axis=0, )
paddle.gather(Tensor([320306],"int32"), Tensor([203],"int32"), )
paddle.gather(Tensor([92928, 2],"float32"), Tensor([279],"int64"), axis=0, )
paddle.gather(Tensor([11856, 68],"float32"), Tensor([48],"int64"), axis=0, )
paddle.gather(Tensor([65536, 4],"float32"), Tensor([679],"int64"), axis=0, )
paddle.gather(Tensor([164928, 2],"float32"), Tensor([1783],"int64"), axis=0, )
paddle.gather(Tensor([211680],"int32"), Tensor([1024, 1],"int64"), )
paddle.gather(Tensor([294315],"int32"), Tensor([211],"int32"), )
paddle.gather(Tensor([129792, 2],"float32"), Tensor([465],"int64"), axis=0, )
paddle.gather(Tensor([41344, 4],"float32"), Tensor([94],"int64"), axis=0, )
paddle.gather(Tensor([362880],"int32"), Tensor([1024, 1],"int64"), )
paddle.gather(Tensor([209664],"int64"), Tensor([126],"int64"), axis=0, )
paddle.gather(Tensor([201251],"int32"), Tensor([141],"int32"), )
paddle.gather(Tensor([3598, 53],"int64"), Tensor([3270],"int64"), axis=0, )
paddle.gather(Tensor([293028],"int32"), Tensor([128],"int32"), )
paddle.gather(Tensor([260496],"int32"), Tensor([201],"int32"), )
paddle.gather(Tensor([324000, 1],"float32"), Tensor([790],"int64"), axis=0, )
paddle.gather(Tensor([257294],"int32"), Tensor([244],"int32"), )
paddle.gather(Tensor([346934],"int32"), Tensor([161],"int32"), )
paddle.gather(Tensor([277309],"int32"), Tensor([221],"int32"), )
paddle.gather(Tensor([242625],"int32"), Tensor([244],"int32"), )
paddle.gather(Tensor([2584, 68],"float32"), Tensor([18],"int64"), axis=0, )
paddle.gather(Tensor([204288, 1],"float32"), Tensor([90],"int64"), axis=0, )
paddle.gather(Tensor([150528],"int64"), Tensor([439],"int64"), axis=0, )
paddle.gather(Tensor([10336, 68],"float32"), Tensor([219],"int64"), axis=0, )
paddle.gather(Tensor([352845],"int32"), Tensor([166],"int32"), )
paddle.gather(Tensor([258290],"int32"), Tensor([175],"int32"), )
paddle.gather(Tensor([4789, 39],"int64"), Tensor([3856],"int64"), axis=0, )
paddle.gather(Tensor([7, 4],"float32"), Tensor([214107],"int64"), )
paddle.gather(Tensor([321610],"int32"), Tensor([243],"int32"), )
paddle.gather(Tensor([48640, 4],"float32"), Tensor([42],"int64"), axis=0, )
paddle.gather(Tensor([336, 4],"float32"), Tensor([108864],"int64"), axis=0, )
paddle.gather(Tensor([1024],"int32"), Tensor([164928],"int64"), axis=0, )
paddle.gather(Tensor([250314],"int32"), Tensor([243],"int32"), )
paddle.gather(Tensor([209664, 4],"float32"), Tensor([126],"int64"), axis=0, )
paddle.gather(Tensor([355227],"int32"), Tensor([151],"int32"), )
paddle.gather(Tensor([2048, 320],"float32"), Tensor([202],"int64"), )
paddle.gather(Tensor([3, 4],"float32"), Tensor([261888],"int64"), )
paddle.gather(Tensor([25600, 4],"float32"), Tensor([76],"int64"), axis=0, )
paddle.gather(Tensor([347564],"int32"), Tensor([248],"int32"), )
paddle.gather(Tensor([12, 4],"float32"), Tensor([222012],"int64"), )
paddle.gather(Tensor([18432, 32],"float32"), Tensor([340],"int64"), axis=0, )
paddle.gather(Tensor([150528, 4],"float32"), Tensor([204],"int64"), axis=0, )
paddle.gather(Tensor([242280],"int32"), Tensor([136],"int32"), )
paddle.gather(Tensor([331261],"int32"), Tensor([204],"int32"), )
paddle.gather(Tensor([356239],"int32"), Tensor([182],"int32"), )
paddle.gather(Tensor([319740],"float32"), Tensor([1024, 1],"int64"), )
paddle.gather(Tensor([310321],"int32"), Tensor([233],"int32"), )
paddle.gather(Tensor([21632, 32],"float32"), Tensor([403],"int64"), axis=0, )
paddle.gather(Tensor([7600, 68],"float32"), Tensor([98],"int64"), axis=0, )
paddle.gather(Tensor([23232, 32],"float32"), Tensor([228],"int64"), axis=0, )
paddle.gather(Tensor([202190],"int32"), Tensor([156],"int32"), )
paddle.gather(Tensor([9216, 32],"float32"), Tensor([591],"int64"), axis=0, )
paddle.gather(Tensor([23232, 32],"float32"), Tensor([261],"int64"), axis=0, )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 69, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 56784],"float32"), Tensor([1, 68, 2],"int32"), )
paddle.gather_nd(Tensor([17, 128, 128],"float32"), Tensor([8, 3],"int64"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 62, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 49, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 129, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 47, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 45, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 37, 2],"int32"), )
paddle.gather_nd(Tensor([806, 320],"float32"), Tensor([3224, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 5, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 33600],"float32"), Tensor([1, 24, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 41, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 2, 2],"int32"), )
paddle.gather_nd(Tensor([701, 320],"float32"), Tensor([2804, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 42, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 95, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 56, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 132, 2],"int32"), )
paddle.gather_nd(Tensor([470, 320],"float32"), Tensor([1880, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 7, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 47, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 60, 2],"int32"), )
paddle.gather_nd(Tensor([611, 320],"float32"), Tensor([2444, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 9, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 97, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 22, 2],"int32"), )
paddle.gather_nd(Tensor([474, 320],"float32"), Tensor([1896, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 56784],"float32"), Tensor([1, 18, 2],"int32"), )
paddle.gather_nd(Tensor([331, 320],"float32"), Tensor([1324, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 5376],"float32"), Tensor([2, 51, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 5376],"float32"), Tensor([2, 19, 2],"int32"), )
paddle.gather_nd(Tensor([768, 320],"float32"), Tensor([3072, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 52500],"float32"), Tensor([1, 4, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 116, 2],"int32"), )
paddle.gather_nd(Tensor([361, 320],"float32"), Tensor([1444, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 66, 2],"int32"), )
paddle.gather_nd(Tensor([309, 320],"float32"), Tensor([1236, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 58, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 117, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 33600],"float32"), Tensor([1, 1, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 27216],"float32"), Tensor([1, 47, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 218, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 34, 2],"int32"), )
paddle.gather_nd(Tensor([684, 320],"float32"), Tensor([2736, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 8, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 93, 2],"int32"), )
paddle.gather_nd(Tensor([730, 320],"float32"), Tensor([2920, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 18, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 45, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 77, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 27216],"float32"), Tensor([1, 17, 2],"int32"), )
paddle.gather_nd(Tensor([500, 320],"float32"), Tensor([2000, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 51, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 36, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 12, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 51, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 52, 2],"int32"), )
paddle.gather_nd(Tensor([436, 320],"float32"), Tensor([1744, 2],"int64"), )
paddle.gather_nd(Tensor([538, 320],"float32"), Tensor([2152, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 210, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 22, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 65856],"float32"), Tensor([1, 43, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 5376],"float32"), Tensor([2, 71, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 36, 2],"int32"), )
paddle.gather_nd(Tensor([477, 320],"float32"), Tensor([1908, 2],"int64"), )
paddle.gather_nd(Tensor([543, 320],"float32"), Tensor([2172, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 10, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 107, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 52500],"float32"), Tensor([1, 21, 2],"int32"), )
paddle.gather_nd(Tensor([557, 320],"float32"), Tensor([2228, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 26, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 13, 2],"int32"), )
paddle.gather_nd(Tensor([727, 320],"float32"), Tensor([2908, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 9, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 65856],"float32"), Tensor([1, 24, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 27216],"float32"), Tensor([1, 63, 2],"int32"), )
paddle.gather_nd(Tensor([335, 320],"float32"), Tensor([1340, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 106, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 33600],"float32"), Tensor([1, 22, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 194, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 43, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 55, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 38, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 30, 2],"int32"), )
paddle.gather_nd(Tensor([448, 320],"float32"), Tensor([1792, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 17, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 13, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 88, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 65856],"float32"), Tensor([1, 15, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 54, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 59, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 139, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 10, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 82, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 74, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 39, 2],"int32"), )
paddle.gather_nd(Tensor([486, 320],"float32"), Tensor([1944, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 52500],"float32"), Tensor([1, 8, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 9, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 75600],"float32"), Tensor([1, 88, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 76, 2],"int32"), )
paddle.gather_nd(Tensor([424, 320],"float32"), Tensor([1696, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 4, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 75600],"float32"), Tensor([1, 24, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 75600],"float32"), Tensor([1, 67, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 51, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 29, 2],"int32"), )
paddle.gather_nd(Tensor([453, 320],"float32"), Tensor([1812, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 48384],"float32"), Tensor([1, 124, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 74, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 11, 2],"int32"), )
paddle.gather_nd(Tensor([305, 320],"float32"), Tensor([1220, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 11, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 58, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 48, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 65, 2],"int32"), )
paddle.gather_nd(Tensor([585, 320],"float32"), Tensor([2340, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 3, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 55, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 116, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 30, 2],"int32"), )
paddle.gather_nd(Tensor([337, 320],"float32"), Tensor([1348, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 63, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 75, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 78, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 100, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 38, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 84, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 40656],"float32"), Tensor([1, 16, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 61, 2],"int32"), )
paddle.gather_nd(Tensor([364, 320],"float32"), Tensor([1456, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 40, 2],"int32"), )
paddle.gather_nd(Tensor([2, 37632, 2],"float32"), Tensor([2, 9408, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 75600],"float32"), Tensor([1, 8, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 9, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 57, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 168, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 18, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 52, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 47, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 26, 2],"int32"), )
paddle.gather_nd(Tensor([511, 320],"float32"), Tensor([2044, 2],"int64"), )
paddle.gather_nd(Tensor([830, 320],"float32"), Tensor([3320, 2],"int64"), )
paddle.gather_nd(Tensor([627, 320],"float32"), Tensor([2508, 2],"int64"), )
paddle.gather_nd(Tensor([430, 320],"float32"), Tensor([1720, 2],"int64"), )
paddle.gather_nd(Tensor([663, 320],"float32"), Tensor([2652, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 71, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 169, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 8, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 36, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 23, 2],"int32"), )
paddle.gather_nd(Tensor([312, 320],"float32"), Tensor([1248, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 54, 2],"int32"), )
paddle.gather_nd(Tensor([520, 320],"float32"), Tensor([2080, 2],"int64"), )
paddle.gather_nd(Tensor([324, 320],"float32"), Tensor([1296, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 33600],"float32"), Tensor([1, 30, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 48, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 160, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 27216],"float32"), Tensor([1, 35, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 48384],"float32"), Tensor([1, 50, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 48384],"float32"), Tensor([1, 27, 2],"int32"), )
paddle.gather_nd(Tensor([4, 90, 4],"float32"), Tensor([4, 22400, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 43, 2],"int32"), )
paddle.gather_nd(Tensor([697, 320],"float32"), Tensor([2788, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 3, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 28, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 12, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 105, 2],"int32"), )
paddle.gather_nd(Tensor([847, 320],"float32"), Tensor([3388, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 33, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 40, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 52500],"float32"), Tensor([1, 29, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 72, 2],"int32"), )
paddle.gather_nd(Tensor([533, 320],"float32"), Tensor([2132, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 56784],"float32"), Tensor([1, 113, 2],"int32"), )
paddle.gather_nd(Tensor([320, 320],"float32"), Tensor([1280, 2],"int64"), )
paddle.gather_nd(Tensor([431, 320],"float32"), Tensor([1724, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 74, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 52500],"float32"), Tensor([1, 44, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 11, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 14, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 12, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 119, 2],"int32"), )
paddle.gather_nd(Tensor([17, 128, 128],"float32"), Tensor([9, 3],"int64"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 14, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 103, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 8, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 117, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 43, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 25, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 33600],"float32"), Tensor([1, 78, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 46, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 34, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 5376],"float32"), Tensor([2, 43, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 30, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 2, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 56784],"float32"), Tensor([1, 56, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 66, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 75600],"float32"), Tensor([1, 21, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 45, 2],"int32"), )
paddle.gather_nd(Tensor([675, 320],"float32"), Tensor([2700, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 78, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 75600],"float32"), Tensor([1, 16, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 14, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 102, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 218, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 27216],"float32"), Tensor([1, 12, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 30, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 16, 2],"int32"), )
paddle.gather_nd(Tensor([550, 320],"float32"), Tensor([2200, 2],"int64"), )
paddle.gather_nd(Tensor([367, 320],"float32"), Tensor([1468, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 31, 2],"int32"), )
paddle.gather_nd(Tensor([556, 320],"float32"), Tensor([2224, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 52500],"float32"), Tensor([1, 227, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 62, 2],"int32"), )
paddle.gather_nd(Tensor([743, 320],"float32"), Tensor([2972, 2],"int64"), )
paddle.gather_nd(Tensor([388, 320],"float32"), Tensor([1552, 2],"int64"), )
paddle.gather_nd(Tensor([490, 320],"float32"), Tensor([1960, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 47, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 84, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 40656],"float32"), Tensor([1, 22, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 13, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 105, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 56784],"float32"), Tensor([1, 30, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 43, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 33, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 16, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 17, 2],"int32"), )
paddle.gather_nd(Tensor([515, 320],"float32"), Tensor([2060, 2],"int64"), )
paddle.gather_nd(Tensor([708, 320],"float32"), Tensor([2832, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 42, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 40656],"float32"), Tensor([1, 46, 2],"int32"), )
paddle.gather_nd(Tensor([17, 128, 128],"float32"), Tensor([11, 3],"int64"), )
paddle.gather_nd(Tensor([580, 320],"float32"), Tensor([2320, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 29, 2],"int32"), )
paddle.gather_nd(Tensor([433, 320],"float32"), Tensor([1732, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 65856],"float32"), Tensor([1, 2, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 58, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 65856],"float32"), Tensor([1, 17, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 68, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 46, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 33600],"float32"), Tensor([1, 86, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 65856],"float32"), Tensor([1, 3, 2],"int32"), )
paddle.gather_nd(Tensor([318, 320],"float32"), Tensor([1272, 2],"int64"), )
paddle.gather_nd(Tensor([17, 128, 128],"float32"), Tensor([14, 3],"int64"), )
paddle.gather_nd(Tensor([1, 10, 40656],"float32"), Tensor([1, 3, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 48384],"float32"), Tensor([1, 22, 2],"int32"), )
paddle.gather_nd(Tensor([332, 320],"float32"), Tensor([1328, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 15, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 65856],"float32"), Tensor([1, 60, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 61, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 13, 2],"int32"), )
paddle.gather_nd(Tensor([881, 320],"float32"), Tensor([3524, 2],"int64"), )
paddle.gather_nd(Tensor([308, 320],"float32"), Tensor([1232, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 48384],"float32"), Tensor([1, 3, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 47, 2],"int32"), )
paddle.gather_nd(Tensor([738, 320],"float32"), Tensor([2952, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 48384],"float32"), Tensor([1, 249, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 44, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 75600],"float32"), Tensor([1, 52, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 20, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 52500],"float32"), Tensor([1, 28, 2],"int32"), )
paddle.gather_nd(Tensor([889, 320],"float32"), Tensor([3556, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 31, 2],"int32"), )
paddle.gather_nd(Tensor([814, 320],"float32"), Tensor([3256, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 286, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 75600],"float32"), Tensor([1, 122, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 40656],"float32"), Tensor([1, 169, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 46, 2],"int32"), )
paddle.gather_nd(Tensor([554, 320],"float32"), Tensor([2216, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 33600],"float32"), Tensor([1, 34, 2],"int32"), )
paddle.gather_nd(Tensor([314, 320],"float32"), Tensor([1256, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 114, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 255, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 29, 2],"int32"), )
paddle.gather_nd(Tensor([428, 320],"float32"), Tensor([1712, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 43, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 39, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 61, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 33600],"float32"), Tensor([1, 49, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 24, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 40656],"float32"), Tensor([1, 25, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 75600],"float32"), Tensor([1, 126, 2],"int32"), )
paddle.gather_nd(Tensor([640, 320],"float32"), Tensor([2560, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 63, 2],"int32"), )
paddle.gather_nd(Tensor([586, 320],"float32"), Tensor([2344, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 140, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 31, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 56784],"float32"), Tensor([1, 35, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 30, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 33600],"float32"), Tensor([1, 65, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 107, 2],"int32"), )
paddle.gather_nd(Tensor([565, 320],"float32"), Tensor([2260, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 56784],"float32"), Tensor([1, 48, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 38, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 46, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 52500],"float32"), Tensor([1, 60, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 42, 2],"int32"), )
paddle.gather_nd(Tensor([327, 320],"float32"), Tensor([1308, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 7, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 50, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 65, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 65856],"float32"), Tensor([1, 6, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 40656],"float32"), Tensor([1, 18, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 26, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 36, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 19, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 26, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 47, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 36, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 19, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 179, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 21504],"float32"), Tensor([1, 13, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 30, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 19, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 40656],"float32"), Tensor([1, 116, 2],"int32"), )
paddle.gather_nd(Tensor([689, 320],"float32"), Tensor([2756, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 62, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 94, 2],"int32"), )
paddle.gather_nd(Tensor([306, 320],"float32"), Tensor([1224, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 194, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 15, 2],"int32"), )
paddle.gather_nd(Tensor([656, 320],"float32"), Tensor([2624, 2],"int64"), )
paddle.gather_nd(Tensor([517, 320],"float32"), Tensor([2068, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 92, 2],"int32"), )
paddle.gather_nd(Tensor([584, 320],"float32"), Tensor([2336, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 63, 2],"int32"), )
paddle.gather_nd(Tensor([771, 320],"float32"), Tensor([3084, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 40656],"float32"), Tensor([1, 1, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 73, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 34, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 25, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 6, 2],"int32"), )
paddle.gather_nd(Tensor([17, 128, 128],"float32"), Tensor([10, 3],"int64"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 87, 2],"int32"), )
paddle.gather_nd(Tensor([610, 320],"float32"), Tensor([2440, 2],"int64"), )
paddle.gather_nd(Tensor([666, 320],"float32"), Tensor([2664, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 5, 2],"int32"), )
paddle.gather_nd(Tensor([740, 320],"float32"), Tensor([2960, 2],"int64"), )
paddle.gather_nd(Tensor([482, 320],"float32"), Tensor([1928, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 18, 2],"int32"), )
paddle.gather_nd(Tensor([833, 320],"float32"), Tensor([3332, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 52500],"float32"), Tensor([1, 69, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 75600],"float32"), Tensor([1, 36, 2],"int32"), )
paddle.gather_nd(Tensor([313, 320],"float32"), Tensor([1252, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 15, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 37, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 5376],"float32"), Tensor([2, 8, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 28, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 92, 2],"int32"), )
paddle.gather_nd(Tensor([712, 320],"float32"), Tensor([2848, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 69, 2],"int32"), )
paddle.gather_nd(Tensor([473, 320],"float32"), Tensor([1892, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 24276],"float32"), Tensor([1, 20, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 25, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 92, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 5376],"float32"), Tensor([2, 34, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 5376],"float32"), Tensor([2, 27, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 51, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 29, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 12, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 62, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 65856],"float32"), Tensor([1, 30, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 35, 2],"int32"), )
paddle.gather_nd(Tensor([476, 320],"float32"), Tensor([1904, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 5376],"float32"), Tensor([2, 35, 2],"int32"), )
paddle.gather_nd(Tensor([628, 320],"float32"), Tensor([2512, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 27216],"float32"), Tensor([1, 5, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 8400],"float32"), Tensor([2, 54, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 70644],"float32"), Tensor([1, 73, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 11109],"float32"), Tensor([2, 30, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 12096],"float32"), Tensor([2, 39, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 37044],"float32"), Tensor([1, 22, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 26, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 48384],"float32"), Tensor([1, 12, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 5376],"float32"), Tensor([2, 79, 2],"int32"), )
paddle.gather_nd(Tensor([384, 320],"float32"), Tensor([1536, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 82, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 30324],"float32"), Tensor([1, 12, 2],"int32"), )
paddle.gather_nd(Tensor([378, 320],"float32"), Tensor([1512, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 6069],"float32"), Tensor([2, 84, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 7581],"float32"), Tensor([2, 44, 2],"int32"), )
paddle.gather_nd(Tensor([391, 320],"float32"), Tensor([1564, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 52500],"float32"), Tensor([1, 7, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 6804],"float32"), Tensor([2, 14, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 34, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 52500],"float32"), Tensor([1, 10, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 5376],"float32"), Tensor([2, 196, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 61236],"float32"), Tensor([1, 50, 2],"int32"), )
paddle.gather_nd(Tensor([2, 10, 9261],"float32"), Tensor([2, 50, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 75600],"float32"), Tensor([1, 43, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 26, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 48384],"float32"), Tensor([1, 10, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 40656],"float32"), Tensor([1, 13, 2],"int32"), )
paddle.gather_nd(Tensor([1, 10, 44436],"float32"), Tensor([1, 30, 2],"int32"), )
paddle.gather_nd(Tensor([349, 320],"float32"), Tensor([1396, 2],"int64"), )
paddle.gather_nd(Tensor([2, 10, 10164],"float32"), Tensor([2, 35, 2],"int32"), )
paddle.gather_nd(Tensor([514, 320],"float32"), Tensor([2056, 2],"int64"), )
paddle.gather_nd(Tensor([1, 10, 27216],"float32"), Tensor([1, 19, 2],"int32"), )
paddle.geometric.send_uv(Tensor([100, 20],"float64"), Tensor([100, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([100, 20],"float64"), Tensor([100, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", )
paddle.geometric.send_uv(Tensor([10, 10, 1],"float64"), Tensor([10, 10, 10],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", )
paddle.geometric.send_uv(Tensor([100, 1],"float64"), Tensor([100, 20],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([100, 1],"float64"), Tensor([100, 20],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", )
paddle.greater_equal(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), )
paddle.greater_equal(Tensor([40, 40],"float32"), Tensor([40, 40],"float32"), )
paddle.greater_equal(Tensor([8, 1024, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([13, 2, 8, 4, 1],"int64"), Tensor([13, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([64, 32, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([4, 512, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([2, 768, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([4, 256, 1, 1],"float32"), Tensor([1],"float32"), )
paddle.greater_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.heaviside(Tensor([300, 2048],"float32"), Tensor([1],"float32"), )
paddle.heaviside(Tensor([300, 2048],"float32"), Tensor([2048],"float32"), )
paddle.heaviside(Tensor([22120, 1],"float32"), Tensor([],"float32"), )
paddle.heaviside(Tensor([2, 100, 13, 17],"float32"), Tensor([100, 13, 17],"float32"), )
paddle.heaviside(Tensor([16800, 1],"float32"), Tensor([],"float32"), )
paddle.heaviside(Tensor([100, 13, 17],"float32"), Tensor([13, 17],"float32"), )
paddle.heaviside(Tensor([100, 13, 17],"float32"), Tensor([100, 13, 1],"float32"), )
paddle.heaviside(Tensor([4800, 1],"float32"), Tensor([],"float32"), )
paddle.imag(Tensor([10, 10, 10, 20],"complex128"), )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([40, 50],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([40, 50],"float32"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([50, 40],"float32"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([50, 40],"float32"), None, True, False, )
paddle.incubate.nn.functional.swiglu(Tensor([6, 5, 5632],"float32"), Tensor([6, 5, 5632],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([2, 5, 5632],"float32"), Tensor([2, 5, 5632],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([2, 10, 11008],"float32"), Tensor([2, 10, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 5, 11008],"float32"), Tensor([1, 5, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([2, 5, 11008],"float32"), Tensor([2, 5, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 5, 11008],"float32"), Tensor([4, 5, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([6, 1, 11008],"float32"), Tensor([6, 1, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([6, 5, 11008],"float32"), Tensor([6, 5, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 20, 11008],"float32"), Tensor([1, 20, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 58, 1000],"float32"), Tensor([1, 58, 1000],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([2, 10, 5632],"float32"), Tensor([2, 10, 5632],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 5, 5632],"float32"), Tensor([4, 5, 5632],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 11008],"float32"), Tensor([1, 1, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 8, 4864],"float32"), Tensor([1, 8, 4864],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 11, 1024],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 6, 1408],"float32"), Tensor([1, 6, 1408],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([2, 1, 11008],"float32"), Tensor([2, 1, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 11, 512],"float32"), Tensor([1, 11, 512],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 1, 5632],"float32"), Tensor([4, 1, 5632],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 58, 500],"float32"), Tensor([1, 58, 500],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([2, 1, 5632],"float32"), Tensor([2, 1, 5632],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 10, 1408],"float32"), Tensor([1, 10, 1408],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([4, 1, 11008],"float32"), Tensor([4, 1, 11008],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 30, 1408],"float32"), Tensor([1, 30, 1408],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 20, 1408],"float32"), Tensor([1, 20, 1408],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 17, 1000],"float32"), Tensor([1, 17, 1000],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 4, 1408],"float32"), Tensor([1, 4, 1408],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([6, 1, 5632],"float32"), Tensor([6, 1, 5632],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 2, 1408],"float32"), Tensor([1, 2, 1408],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([8, 100],"float32"), Tensor([8, 100],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([8, 200],"float32"), None, )
paddle.incubate.nn.functional.swiglu(Tensor([13, 7, 18],"float32"), Tensor([13, 7, 18],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([8, 200],"float64"), None, )
paddle.incubate.nn.functional.swiglu(Tensor([1, 20, 86],"float32"), Tensor([1, 20, 86],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 1, 1000],"float32"), Tensor([1, 1, 1000],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([12, 24, 4],"float32"), Tensor([12, 24, 4],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([8, 100],"float64"), Tensor([8, 100],"float64"), )
paddle.index_add(Tensor([100, 100, 25],"float32"), Tensor([20],"int32"), 2, Tensor([100, 100, 20],"float32"), )
paddle.index_add(Tensor([100, 100, 5],"float32"), Tensor([20],"int32"), 1, Tensor([100, 20, 5],"float32"), )
paddle.index_fill(Tensor([10, 15, 10],"bool"), Tensor([5],"int32"), 1, True, )
paddle.index_fill(Tensor([10, 15, 10],"float16"), Tensor([5],"int64"), 1, 0.5, )
paddle.index_fill(Tensor([10, 15, 10],"int64"), Tensor([5],"int32"), 1, -1, )
paddle.index_put(Tensor([100, 110],"int64"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"int64"), False, )
paddle.index_put(Tensor([100, 110],"float64"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"float64"), True, )
paddle.index_put(Tensor([100, 110],"float32"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"float32"), True, )
paddle.index_put(Tensor([100, 110],"int32"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"int32"), False, )
paddle.index_put(Tensor([110, 94],"float64"), tuple(Tensor([110, 94],"bool"),), Tensor([5170],"float64"), False, )
paddle.index_put(Tensor([110, 94],"float64"), tuple(Tensor([110],"bool"),), Tensor([55, 94],"float64"), True, )
paddle.index_put(Tensor([100, 110],"float64"), tuple(Tensor([21],"int64"),Tensor([21],"int64"),), Tensor([21],"float64"), False, )
paddle.index_put(Tensor([110, 94],"float64"), tuple(Tensor([110],"bool"),), Tensor([55, 94],"float64"), False, )
paddle.index_put(Tensor([100, 110],"int32"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"int32"), True, )
paddle.index_put(Tensor([100, 110],"bool"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"bool"), True, )
paddle.index_put(Tensor([110, 94],"float64"), tuple(Tensor([110, 94],"bool"),), Tensor([5170],"float64"), True, )
paddle.index_put(Tensor([100, 110],"float64"), tuple(Tensor([21],"int64"),Tensor([21],"int64"),), Tensor([21],"float64"), True, )
paddle.index_put(Tensor([100, 110],"float16"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"float16"), True, )
paddle.index_put(Tensor([100, 110],"int64"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"int64"), True, )
paddle.index_put(Tensor([100, 110],"float16"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"float16"), False, )
paddle.index_put(Tensor([100, 110],"bool"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"bool"), False, )
paddle.index_put(Tensor([100, 110],"float64"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"float64"), False, )
paddle.index_put(Tensor([44, 94],"float64"), tuple(Tensor([44],"bool"),), Tensor([1],"float64"), True, )
paddle.index_put(Tensor([15, 10, 10],"int64"), tuple(Tensor([5],"int32"),), Tensor([],"int64"), )
paddle.index_put(Tensor([44, 94],"float64"), tuple(Tensor([44],"bool"),), Tensor([94],"float64"), False, )
paddle.index_put(Tensor([15, 10, 10],"float16"), tuple(Tensor([5],"int64"),), Tensor([],"float16"), )
paddle.index_put(Tensor([15, 10, 10],"bool"), tuple(Tensor([5],"int32"),), Tensor([],"bool"), )
paddle.index_put(Tensor([44, 94],"float64"), tuple(Tensor([44],"bool"),), Tensor([1],"float64"), False, )
paddle.index_put(Tensor([44, 94],"float64"), tuple(Tensor([44],"bool"),), Tensor([94],"float64"), True, )
paddle.index_sample(Tensor([200, 2100],"float32"), Tensor([200, 27],"int64"), )
paddle.index_sample(Tensor([20, 6150],"float32"), Tensor([20, 36],"int64"), )
paddle.index_sample(Tensor([208, 2541],"float32"), Tensor([208, 27],"int64"), )
paddle.index_sample(Tensor([26, 4165],"float32"), Tensor([26, 36],"int64"), )
paddle.index_sample(Tensor([64, 9261],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([156, 6069],"float32"), Tensor([156, 27],"int64"), )
paddle.index_sample(Tensor([32, 3549],"float32"), Tensor([32, 27],"int64"), )
paddle.index_sample(Tensor([88, 3549],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([320, 2541],"float32"), Tensor([320, 27],"int64"), )
paddle.index_sample(Tensor([80, 2100],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([12, 10285],"float32"), Tensor([12, 36],"int64"), )
paddle.index_sample(Tensor([240, 3024],"float32"), Tensor([240, 27],"int64"), )
paddle.index_sample(Tensor([6, 32000],"float32"), Tensor([6, 6],"int64"), )
paddle.index_sample(Tensor([2, 256000],"float32"), Tensor([2, 6],"int64"), )
paddle.index_sample(Tensor([16, 9382],"float32"), Tensor([16, 36],"int64"), )
paddle.index_sample(Tensor([38, 4165],"float32"), Tensor([38, 36],"int64"), )
paddle.index_sample(Tensor([16, 6804],"float32"), Tensor([16, 27],"int64"), )
paddle.index_sample(Tensor([128, 3549],"float32"), Tensor([128, 27],"int64"), )
paddle.index_sample(Tensor([88, 3024],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([4, 32000],"float32"), Tensor([4, 7],"int64"), )
paddle.index_sample(Tensor([32, 8400],"float32"), Tensor([32, 27],"int64"), )
paddle.index_sample(Tensor([76, 4725],"float32"), Tensor([76, 27],"int64"), )
paddle.index_sample(Tensor([56, 4725],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([184, 2541],"float32"), Tensor([184, 27],"int64"), )
paddle.index_sample(Tensor([140, 3549],"float32"), Tensor([140, 27],"int64"), )
paddle.index_sample(Tensor([144, 2541],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([80, 3060],"float32"), Tensor([80, 36],"int64"), )
paddle.index_sample(Tensor([152, 5376],"float32"), Tensor([152, 27],"int64"), )
paddle.index_sample(Tensor([136, 3549],"float32"), Tensor([136, 27],"int64"), )
paddle.index_sample(Tensor([24, 5376],"float32"), Tensor([24, 27],"int64"), )
paddle.index_sample(Tensor([20, 5440],"float32"), Tensor([20, 36],"int64"), )
paddle.index_sample(Tensor([48, 10164],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([248, 2100],"float32"), Tensor([248, 27],"int64"), )
paddle.index_sample(Tensor([112, 4116],"float32"), Tensor([112, 27],"int64"), )
paddle.index_sample(Tensor([80, 7581],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([16, 7681],"float32"), Tensor([16, 36],"int64"), )
paddle.index_sample(Tensor([100, 6069],"float32"), Tensor([100, 27],"int64"), )
paddle.index_sample(Tensor([144, 2100],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([20, 7681],"float32"), Tensor([20, 36],"int64"), )
paddle.index_sample(Tensor([184, 2100],"float32"), Tensor([184, 27],"int64"), )
paddle.index_sample(Tensor([96, 4116],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([240, 4116],"float32"), Tensor([240, 27],"int64"), )
paddle.index_sample(Tensor([112, 6804],"float32"), Tensor([112, 27],"int64"), )
paddle.index_sample(Tensor([168, 3024],"float32"), Tensor([168, 27],"int64"), )
paddle.index_sample(Tensor([72, 5376],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([48, 12096],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([256, 2541],"float32"), Tensor([256, 27],"int64"), )
paddle.index_sample(Tensor([112, 3024],"float32"), Tensor([112, 27],"int64"), )
paddle.index_sample(Tensor([288, 2100],"float32"), Tensor([288, 27],"int64"), )
paddle.index_sample(Tensor([128, 7581],"float32"), Tensor([128, 27],"int64"), )
paddle.index_sample(Tensor([120, 6804],"float32"), Tensor([120, 27],"int64"), )
paddle.index_sample(Tensor([248, 3549],"float32"), Tensor([248, 27],"int64"), )
paddle.index_sample(Tensor([160, 6069],"float32"), Tensor([160, 27],"int64"), )
paddle.index_sample(Tensor([112, 7581],"float32"), Tensor([112, 27],"int64"), )
paddle.index_sample(Tensor([128, 6804],"float32"), Tensor([128, 27],"int64"), )
paddle.index_sample(Tensor([88, 6804],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([176, 3549],"float32"), Tensor([176, 27],"int64"), )
paddle.index_sample(Tensor([292, 2541],"float32"), Tensor([292, 27],"int64"), )
paddle.index_sample(Tensor([72, 2100],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([128, 4116],"float32"), Tensor([128, 27],"int64"), )
paddle.index_sample(Tensor([176, 4725],"float32"), Tensor([176, 27],"int64"), )
paddle.index_sample(Tensor([336, 2541],"float32"), Tensor([336, 27],"int64"), )
paddle.index_sample(Tensor([128, 2541],"float32"), Tensor([128, 27],"int64"), )
paddle.index_sample(Tensor([24, 6069],"float32"), Tensor([24, 27],"int64"), )
paddle.index_sample(Tensor([136, 2541],"float32"), Tensor([136, 27],"int64"), )
paddle.index_sample(Tensor([56, 2100],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([64, 7581],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([80, 8400],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([72, 11109],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([64, 4116],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([320, 2100],"float32"), Tensor([320, 27],"int64"), )
paddle.index_sample(Tensor([400, 2100],"float32"), Tensor([400, 27],"int64"), )
paddle.index_sample(Tensor([64, 8400],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([164, 2541],"float32"), Tensor([164, 27],"int64"), )
paddle.index_sample(Tensor([80, 6069],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([216, 4116],"float32"), Tensor([216, 27],"int64"), )
paddle.index_sample(Tensor([32, 9261],"float32"), Tensor([32, 27],"int64"), )
paddle.index_sample(Tensor([232, 3549],"float32"), Tensor([232, 27],"int64"), )
paddle.index_sample(Tensor([160, 2100],"float32"), Tensor([160, 27],"int64"), )
paddle.index_sample(Tensor([160, 5376],"float32"), Tensor([160, 27],"int64"), )
paddle.index_sample(Tensor([24, 7581],"float32"), Tensor([24, 27],"int64"), )
paddle.index_sample(Tensor([168, 5376],"float32"), Tensor([168, 27],"int64"), )
paddle.index_sample(Tensor([20, 8500],"float32"), Tensor([20, 36],"int64"), )
paddle.index_sample(Tensor([40, 3549],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([120, 3549],"float32"), Tensor([120, 27],"int64"), )
paddle.index_sample(Tensor([120, 7581],"float32"), Tensor([120, 27],"int64"), )
paddle.index_sample(Tensor([88, 7581],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([144, 3549],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([200, 2541],"float32"), Tensor([200, 27],"int64"), )
paddle.index_sample(Tensor([16, 6885],"float32"), Tensor([16, 36],"int64"), )
paddle.index_sample(Tensor([56, 4116],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([26, 6150],"float32"), Tensor([26, 36],"int64"), )
paddle.index_sample(Tensor([192, 4725],"float32"), Tensor([192, 27],"int64"), )
paddle.index_sample(Tensor([30, 6150],"float32"), Tensor([30, 36],"int64"), )
paddle.index_sample(Tensor([20, 7581],"float32"), Tensor([20, 27],"int64"), )
paddle.index_sample(Tensor([152, 2541],"float32"), Tensor([152, 27],"int64"), )
paddle.index_sample(Tensor([48, 6804],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([44, 4165],"float32"), Tensor([44, 36],"int64"), )
paddle.index_sample(Tensor([28, 6150],"float32"), Tensor([28, 36],"int64"), )
paddle.index_sample(Tensor([204, 4725],"float32"), Tensor([204, 27],"int64"), )
paddle.index_sample(Tensor([144, 4725],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([64, 2100],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([256, 2100],"float32"), Tensor([256, 27],"int64"), )
paddle.index_sample(Tensor([192, 2100],"float32"), Tensor([192, 27],"int64"), )
paddle.index_sample(Tensor([56, 3549],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([288, 2541],"float32"), Tensor([288, 27],"int64"), )
paddle.index_sample(Tensor([16, 9261],"float32"), Tensor([16, 27],"int64"), )
paddle.index_sample(Tensor([32, 7581],"float32"), Tensor([32, 27],"int64"), )
paddle.index_sample(Tensor([16, 11109],"float32"), Tensor([16, 27],"int64"), )
paddle.index_sample(Tensor([152, 4116],"float32"), Tensor([152, 27],"int64"), )
paddle.index_sample(Tensor([160, 4725],"float32"), Tensor([160, 27],"int64"), )
paddle.index_sample(Tensor([56, 9261],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([168, 3549],"float32"), Tensor([168, 27],"int64"), )
paddle.index_sample(Tensor([56, 2541],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([128, 5376],"float32"), Tensor([128, 27],"int64"), )
paddle.index_sample(Tensor([72, 3024],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([56, 7681],"float32"), Tensor([56, 36],"int64"), )
paddle.index_sample(Tensor([272, 3024],"float32"), Tensor([272, 27],"int64"), )
paddle.index_sample(Tensor([64, 3024],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([80, 6804],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([448, 2100],"float32"), Tensor([448, 27],"int64"), )
paddle.index_sample(Tensor([104, 9261],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([56, 10164],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([224, 2100],"float32"), Tensor([224, 27],"int64"), )
paddle.index_sample(Tensor([48, 4725],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([24, 7681],"float32"), Tensor([24, 36],"int64"), )
paddle.index_sample(Tensor([168, 4725],"float32"), Tensor([168, 27],"int64"), )
paddle.index_sample(Tensor([144, 5376],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([96, 4725],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([296, 2100],"float32"), Tensor([296, 27],"int64"), )
paddle.index_sample(Tensor([26, 5440],"float32"), Tensor([26, 36],"int64"), )
paddle.index_sample(Tensor([4, 32000],"float32"), Tensor([4, 6],"int64"), )
paddle.index_sample(Tensor([60, 12096],"float32"), Tensor([60, 27],"int64"), )
paddle.index_sample(Tensor([136, 6804],"float32"), Tensor([136, 27],"int64"), )
paddle.index_sample(Tensor([136, 4116],"float32"), Tensor([136, 27],"int64"), )
paddle.index_sample(Tensor([80, 12096],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([256, 3549],"float32"), Tensor([256, 27],"int64"), )
paddle.index_sample(Tensor([136, 5376],"float32"), Tensor([136, 27],"int64"), )
paddle.index_sample(Tensor([96, 2100],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([24, 6885],"float32"), Tensor([24, 36],"int64"), )
paddle.index_sample(Tensor([88, 10164],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([88, 4116],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([88, 6069],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([40, 6069],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([56, 5376],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([32, 5376],"float32"), Tensor([32, 27],"int64"), )
paddle.index_sample(Tensor([136, 3024],"float32"), Tensor([136, 27],"int64"), )
paddle.index_sample(Tensor([48, 9261],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([232, 2100],"float32"), Tensor([232, 27],"int64"), )
paddle.index_sample(Tensor([176, 2541],"float32"), Tensor([176, 27],"int64"), )
paddle.index_sample(Tensor([368, 2541],"float32"), Tensor([368, 27],"int64"), )
paddle.index_sample(Tensor([2, 256000],"float32"), Tensor([2, 7],"int64"), )
paddle.index_sample(Tensor([152, 3549],"float32"), Tensor([152, 27],"int64"), )
paddle.index_sample(Tensor([352, 2541],"float32"), Tensor([352, 27],"int64"), )
paddle.index_sample(Tensor([96, 3024],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([12, 9382],"float32"), Tensor([12, 36],"int64"), )
paddle.index_sample(Tensor([224, 2541],"float32"), Tensor([224, 27],"int64"), )
paddle.index_sample(Tensor([96, 8400],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([48, 2100],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([192, 2541],"float32"), Tensor([192, 27],"int64"), )
paddle.index_sample(Tensor([144, 3024],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([368, 2100],"float32"), Tensor([368, 27],"int64"), )
paddle.index_sample(Tensor([18, 6150],"float32"), Tensor([18, 36],"int64"), )
paddle.index_sample(Tensor([88, 2541],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([12, 12096],"float32"), Tensor([12, 27],"int64"), )
paddle.index_sample(Tensor([13, 10285],"float32"), Tensor([13, 36],"int64"), )
paddle.index_sample(Tensor([38, 7681],"float32"), Tensor([38, 36],"int64"), )
paddle.index_sample(Tensor([176, 3024],"float32"), Tensor([176, 27],"int64"), )
paddle.index_sample(Tensor([64, 6804],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([48, 11109],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([80, 3549],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([240, 3549],"float32"), Tensor([240, 27],"int64"), )
paddle.index_sample(Tensor([92, 4725],"float32"), Tensor([92, 27],"int64"), )
paddle.index_sample(Tensor([64, 10164],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([112, 2100],"float32"), Tensor([112, 27],"int64"), )
paddle.index_sample(Tensor([136, 2100],"float32"), Tensor([136, 27],"int64"), )
paddle.index_sample(Tensor([22, 10285],"float32"), Tensor([22, 36],"int64"), )
paddle.index_sample(Tensor([184, 5376],"float32"), Tensor([184, 27],"int64"), )
paddle.index_sample(Tensor([64, 2541],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([176, 5376],"float32"), Tensor([176, 27],"int64"), )
paddle.index_sample(Tensor([64, 4725],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([40, 4725],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([116, 3549],"float32"), Tensor([116, 27],"int64"), )
paddle.index_sample(Tensor([56, 6069],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([80, 4725],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([168, 4116],"float32"), Tensor([168, 27],"int64"), )
paddle.index_sample(Tensor([192, 4116],"float32"), Tensor([192, 27],"int64"), )
paddle.index_sample(Tensor([40, 10164],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([328, 2541],"float32"), Tensor([328, 27],"int64"), )
paddle.index_sample(Tensor([72, 6804],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([30, 7681],"float32"), Tensor([30, 36],"int64"), )
paddle.index_sample(Tensor([104, 4725],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([26, 10285],"float32"), Tensor([26, 36],"int64"), )
paddle.index_sample(Tensor([160, 2541],"float32"), Tensor([160, 27],"int64"), )
paddle.index_sample(Tensor([56, 5440],"float32"), Tensor([56, 36],"int64"), )
paddle.index_sample(Tensor([264, 3549],"float32"), Tensor([264, 27],"int64"), )
paddle.index_sample(Tensor([208, 3549],"float32"), Tensor([208, 27],"int64"), )
paddle.index_sample(Tensor([304, 2100],"float32"), Tensor([304, 27],"int64"), )
paddle.index_sample(Tensor([28, 8500],"float32"), Tensor([28, 36],"int64"), )
paddle.index_sample(Tensor([120, 3024],"float32"), Tensor([120, 27],"int64"), )
paddle.index_sample(Tensor([16, 8400],"float32"), Tensor([16, 27],"int64"), )
paddle.index_sample(Tensor([72, 3549],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([56, 8400],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([12, 8500],"float32"), Tensor([12, 36],"int64"), )
paddle.index_sample(Tensor([120, 6069],"float32"), Tensor([120, 27],"int64"), )
paddle.index_sample(Tensor([72, 8400],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([50, 6150],"float32"), Tensor([50, 36],"int64"), )
paddle.index_sample(Tensor([56, 7581],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([48, 3024],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([88, 9261],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([22, 5440],"float32"), Tensor([22, 36],"int64"), )
paddle.index_sample(Tensor([384, 2541],"float32"), Tensor([384, 27],"int64"), )
paddle.index_sample(Tensor([128, 2100],"float32"), Tensor([128, 27],"int64"), )
paddle.index_sample(Tensor([26, 9382],"float32"), Tensor([26, 36],"int64"), )
paddle.index_sample(Tensor([32, 3598],"float32"), Tensor([32, 36],"int64"), )
paddle.index_sample(Tensor([72, 10164],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([32, 12096],"float32"), Tensor([32, 27],"int64"), )
paddle.index_sample(Tensor([256, 3024],"float32"), Tensor([256, 27],"int64"), )
paddle.index_sample(Tensor([40, 7581],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([14, 7681],"float32"), Tensor([14, 36],"int64"), )
paddle.index_sample(Tensor([40, 5440],"float32"), Tensor([40, 36],"int64"), )
paddle.index_sample(Tensor([208, 4116],"float32"), Tensor([208, 27],"int64"), )
paddle.index_sample(Tensor([36, 5440],"float32"), Tensor([36, 36],"int64"), )
paddle.index_sample(Tensor([176, 4116],"float32"), Tensor([176, 27],"int64"), )
paddle.index_sample(Tensor([46, 6885],"float32"), Tensor([46, 36],"int64"), )
paddle.index_sample(Tensor([2, 256000],"float32"), Tensor([2, 1],"int64"), )
paddle.index_sample(Tensor([104, 4116],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([96, 10164],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([88, 4725],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([88, 5376],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([28, 10285],"float32"), Tensor([28, 36],"int64"), )
paddle.index_sample(Tensor([36, 9382],"float32"), Tensor([36, 36],"int64"), )
paddle.index_sample(Tensor([140, 2100],"float32"), Tensor([140, 27],"int64"), )
paddle.index_sample(Tensor([32, 10164],"float32"), Tensor([32, 27],"int64"), )
paddle.index_sample(Tensor([40, 9261],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([304, 3024],"float32"), Tensor([304, 27],"int64"), )
paddle.index_sample(Tensor([24, 6804],"float32"), Tensor([24, 27],"int64"), )
paddle.index_sample(Tensor([224, 4116],"float32"), Tensor([224, 27],"int64"), )
paddle.index_sample(Tensor([208, 2100],"float32"), Tensor([208, 27],"int64"), )
paddle.index_sample(Tensor([18, 7681],"float32"), Tensor([18, 36],"int64"), )
paddle.index_sample(Tensor([80, 10164],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([104, 6069],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([232, 2541],"float32"), Tensor([232, 27],"int64"), )
paddle.index_sample(Tensor([272, 2541],"float32"), Tensor([272, 27],"int64"), )
paddle.index_sample(Tensor([20, 9382],"float32"), Tensor([20, 36],"int64"), )
paddle.index_sample(Tensor([104, 8400],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([128, 3024],"float32"), Tensor([128, 27],"int64"), )
paddle.index_sample(Tensor([80, 2541],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([40, 6804],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([128, 4725],"float32"), Tensor([128, 27],"int64"), )
paddle.index_sample(Tensor([10, 10285],"float32"), Tensor([10, 36],"int64"), )
paddle.index_sample(Tensor([80, 3024],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([24, 8400],"float32"), Tensor([24, 27],"int64"), )
paddle.index_sample(Tensor([112, 4725],"float32"), Tensor([112, 27],"int64"), )
paddle.index_sample(Tensor([80, 5376],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([38, 4789],"float32"), Tensor([38, 36],"int64"), )
paddle.index_sample(Tensor([112, 2541],"float32"), Tensor([112, 27],"int64"), )
paddle.index_sample(Tensor([28, 4725],"float32"), Tensor([28, 27],"int64"), )
paddle.index_sample(Tensor([176, 2100],"float32"), Tensor([176, 27],"int64"), )
paddle.index_sample(Tensor([120, 5376],"float32"), Tensor([120, 27],"int64"), )
paddle.index_sample(Tensor([88, 11109],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([32, 4725],"float32"), Tensor([32, 27],"int64"), )
paddle.index_sample(Tensor([72, 9261],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([20, 6885],"float32"), Tensor([20, 36],"int64"), )
paddle.index_sample(Tensor([18, 8500],"float32"), Tensor([18, 36],"int64"), )
paddle.index_sample(Tensor([104, 5376],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([72, 4725],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([168, 2541],"float32"), Tensor([168, 27],"int64"), )
paddle.index_sample(Tensor([144, 6069],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([4, 32000],"float32"), Tensor([4, 5],"int64"), )
paddle.index_sample(Tensor([20, 10285],"float32"), Tensor([20, 36],"int64"), )
paddle.index_sample(Tensor([48, 5376],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([208, 4725],"float32"), Tensor([208, 27],"int64"), )
paddle.index_sample(Tensor([48, 2125],"float32"), Tensor([48, 36],"int64"), )
paddle.index_sample(Tensor([48, 7581],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([240, 2100],"float32"), Tensor([240, 27],"int64"), )
paddle.index_sample(Tensor([72, 7581],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([40, 2541],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([352, 2100],"float32"), Tensor([352, 27],"int64"), )
paddle.index_sample(Tensor([80, 4116],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([24, 10285],"float32"), Tensor([24, 36],"int64"), )
paddle.index_sample(Tensor([192, 3549],"float32"), Tensor([192, 27],"int64"), )
paddle.index_sample(Tensor([48, 2541],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([96, 7581],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([40, 8500],"float32"), Tensor([40, 36],"int64"), )
paddle.index_sample(Tensor([128, 6069],"float32"), Tensor([128, 27],"int64"), )
paddle.index_sample(Tensor([28, 4789],"float32"), Tensor([28, 36],"int64"), )
paddle.index_sample(Tensor([38, 5440],"float32"), Tensor([38, 36],"int64"), )
paddle.index_sample(Tensor([152, 6069],"float32"), Tensor([152, 27],"int64"), )
paddle.index_sample(Tensor([184, 4116],"float32"), Tensor([184, 27],"int64"), )
paddle.index_sample(Tensor([232, 4116],"float32"), Tensor([232, 27],"int64"), )
paddle.index_sample(Tensor([64, 12096],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([296, 3024],"float32"), Tensor([296, 27],"int64"), )
paddle.index_sample(Tensor([32, 11109],"float32"), Tensor([32, 27],"int64"), )
paddle.index_sample(Tensor([16, 8500],"float32"), Tensor([16, 36],"int64"), )
paddle.index_sample(Tensor([64, 11109],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([38, 6885],"float32"), Tensor([38, 36],"int64"), )
paddle.index_sample(Tensor([120, 4725],"float32"), Tensor([120, 27],"int64"), )
paddle.index_sample(Tensor([28, 7681],"float32"), Tensor([28, 36],"int64"), )
paddle.index_sample(Tensor([216, 3549],"float32"), Tensor([216, 27],"int64"), )
paddle.index_sample(Tensor([96, 3549],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([136, 4725],"float32"), Tensor([136, 27],"int64"), )
paddle.index_sample(Tensor([96, 6069],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([80, 9261],"float32"), Tensor([80, 27],"int64"), )
paddle.index_sample(Tensor([96, 5376],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([16, 10164],"float32"), Tensor([16, 27],"int64"), )
paddle.index_sample(Tensor([40, 11109],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([168, 2100],"float32"), Tensor([168, 27],"int64"), )
paddle.index_sample(Tensor([120, 2100],"float32"), Tensor([120, 27],"int64"), )
paddle.index_sample(Tensor([388, 2100],"float32"), Tensor([388, 27],"int64"), )
paddle.index_sample(Tensor([96, 6804],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([28, 6885],"float32"), Tensor([28, 36],"int64"), )
paddle.index_sample(Tensor([24, 8500],"float32"), Tensor([24, 36],"int64"), )
paddle.index_sample(Tensor([152, 3024],"float32"), Tensor([152, 27],"int64"), )
paddle.index_sample(Tensor([104, 7581],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([320, 3024],"float32"), Tensor([320, 27],"int64"), )
paddle.index_sample(Tensor([64, 6069],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([160, 3549],"float32"), Tensor([160, 27],"int64"), )
paddle.index_sample(Tensor([30, 9382],"float32"), Tensor([30, 36],"int64"), )
paddle.index_sample(Tensor([304, 2541],"float32"), Tensor([304, 27],"int64"), )
paddle.index_sample(Tensor([224, 3024],"float32"), Tensor([224, 27],"int64"), )
paddle.index_sample(Tensor([56, 3024],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([68, 11109],"float32"), Tensor([68, 27],"int64"), )
paddle.index_sample(Tensor([60, 6804],"float32"), Tensor([60, 27],"int64"), )
paddle.index_sample(Tensor([104, 2100],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([72, 12096],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([112, 6069],"float32"), Tensor([112, 27],"int64"), )
paddle.index_sample(Tensor([72, 6069],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([56, 12096],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([336, 2100],"float32"), Tensor([336, 27],"int64"), )
paddle.index_sample(Tensor([144, 4116],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([288, 3024],"float32"), Tensor([288, 27],"int64"), )
paddle.index_sample(Tensor([240, 2541],"float32"), Tensor([240, 27],"int64"), )
paddle.index_sample(Tensor([72, 4116],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([76, 11109],"float32"), Tensor([76, 27],"int64"), )
paddle.index_sample(Tensor([40, 12096],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([184, 4725],"float32"), Tensor([184, 27],"int64"), )
paddle.index_sample(Tensor([112, 3549],"float32"), Tensor([112, 27],"int64"), )
paddle.index_sample(Tensor([120, 2541],"float32"), Tensor([120, 27],"int64"), )
paddle.index_sample(Tensor([40, 4116],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([208, 3024],"float32"), Tensor([208, 27],"int64"), )
paddle.index_sample(Tensor([14, 9382],"float32"), Tensor([14, 36],"int64"), )
paddle.index_sample(Tensor([6, 32000],"float32"), Tensor([6, 7],"int64"), )
paddle.index_sample(Tensor([104, 6804],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([24, 9382],"float32"), Tensor([24, 36],"int64"), )
paddle.index_sample(Tensor([140, 4725],"float32"), Tensor([140, 27],"int64"), )
paddle.index_sample(Tensor([42, 4165],"float32"), Tensor([42, 36],"int64"), )
paddle.index_sample(Tensor([104, 3549],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([88, 2100],"float32"), Tensor([88, 27],"int64"), )
paddle.index_sample(Tensor([112, 5376],"float32"), Tensor([112, 27],"int64"), )
paddle.index_sample(Tensor([22, 8500],"float32"), Tensor([22, 36],"int64"), )
paddle.index_sample(Tensor([60, 2100],"float32"), Tensor([60, 27],"int64"), )
paddle.index_sample(Tensor([46, 4165],"float32"), Tensor([46, 36],"int64"), )
paddle.index_sample(Tensor([96, 2541],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([192, 3024],"float32"), Tensor([192, 27],"int64"), )
paddle.index_sample(Tensor([96, 9261],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([120, 4116],"float32"), Tensor([120, 27],"int64"), )
paddle.index_sample(Tensor([92, 2100],"float32"), Tensor([92, 27],"int64"), )
paddle.index_sample(Tensor([160, 4116],"float32"), Tensor([160, 27],"int64"), )
paddle.index_sample(Tensor([148, 3024],"float32"), Tensor([148, 27],"int64"), )
paddle.index_sample(Tensor([50, 8500],"float32"), Tensor([50, 36],"int64"), )
paddle.index_sample(Tensor([50, 3598],"float32"), Tensor([50, 36],"int64"), )
paddle.index_sample(Tensor([48, 4116],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([2, 256000],"float32"), Tensor([2, 5],"int64"), )
paddle.index_sample(Tensor([38, 8500],"float32"), Tensor([38, 36],"int64"), )
paddle.index_sample(Tensor([40, 8400],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([104, 3024],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([112, 8400],"float32"), Tensor([112, 27],"int64"), )
paddle.index_sample(Tensor([6, 32000],"float32"), Tensor([6, 5],"int64"), )
paddle.index_sample(Tensor([272, 2100],"float32"), Tensor([272, 27],"int64"), )
paddle.index_sample(Tensor([136, 6069],"float32"), Tensor([136, 27],"int64"), )
paddle.index_sample(Tensor([280, 2541],"float32"), Tensor([280, 27],"int64"), )
paddle.index_sample(Tensor([100, 9261],"float32"), Tensor([100, 27],"int64"), )
paddle.index_sample(Tensor([64, 3549],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([24, 9261],"float32"), Tensor([24, 27],"int64"), )
paddle.index_sample(Tensor([56, 6804],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([56, 11109],"float32"), Tensor([56, 27],"int64"), )
paddle.index_sample(Tensor([28, 3598],"float32"), Tensor([28, 36],"int64"), )
paddle.index_sample(Tensor([184, 3024],"float32"), Tensor([184, 27],"int64"), )
paddle.index_sample(Tensor([6, 32000],"float32"), Tensor([6, 1],"int64"), )
paddle.index_sample(Tensor([64, 5376],"float32"), Tensor([64, 27],"int64"), )
paddle.index_sample(Tensor([164, 3549],"float32"), Tensor([164, 27],"int64"), )
paddle.index_sample(Tensor([40, 5376],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([48, 3549],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([32, 6069],"float32"), Tensor([32, 27],"int64"), )
paddle.index_sample(Tensor([40, 3024],"float32"), Tensor([40, 27],"int64"), )
paddle.index_sample(Tensor([72, 2541],"float32"), Tensor([72, 27],"int64"), )
paddle.index_sample(Tensor([152, 2100],"float32"), Tensor([152, 27],"int64"), )
paddle.index_sample(Tensor([18, 9382],"float32"), Tensor([18, 36],"int64"), )
paddle.index_sample(Tensor([248, 3024],"float32"), Tensor([248, 27],"int64"), )
paddle.index_sample(Tensor([104, 2541],"float32"), Tensor([104, 27],"int64"), )
paddle.index_sample(Tensor([48, 8400],"float32"), Tensor([48, 27],"int64"), )
paddle.index_sample(Tensor([280, 3024],"float32"), Tensor([280, 27],"int64"), )
paddle.index_sample(Tensor([200, 4116],"float32"), Tensor([200, 27],"int64"), )
paddle.index_sample(Tensor([464, 2100],"float32"), Tensor([464, 27],"int64"), )
paddle.index_sample(Tensor([152, 4725],"float32"), Tensor([152, 27],"int64"), )
paddle.index_sample(Tensor([28, 5440],"float32"), Tensor([28, 36],"int64"), )
paddle.index_sample(Tensor([144, 6804],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([216, 2100],"float32"), Tensor([216, 27],"int64"), )
paddle.index_sample(Tensor([60, 6150],"float32"), Tensor([60, 36],"int64"), )
paddle.index_select(Tensor([4, 7581, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 33600, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 5376, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 11109, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 8400, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(x=Tensor([1358, 128],"float32"), index=Tensor([4936],"int64"), axis=0, )
paddle.index_select(Tensor([40000, 8],"float32"), Tensor([3],"int64"), axis=0, )
paddle.index_select(Tensor([1, 48384, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 5440, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 7581, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([100, 100, 25],"float32"), Tensor([20],"int32"), 2, )
paddle.index_select(Tensor([8, 10164, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 38402, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 56784, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(x=Tensor([3029, 128],"float32"), index=Tensor([5168],"int64"), axis=0, )
paddle.index_select(Tensor([1, 9382, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 7681, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 8400, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(x=Tensor([3887, 128],"float32"), index=Tensor([19528],"int64"), axis=0, )
paddle.index_select(Tensor([4, 12096, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 36858, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 27216, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([16, 2125, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 7581, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 11109, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([40000, 8],"float32"), Tensor([2],"int64"), axis=0, )
paddle.index_select(Tensor([8, 6069, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 12096, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 10285, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 6885, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 37044, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 9261, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 5376, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 6069, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 61236, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 2541, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 9382, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 32000],"float32"), Tensor([2],"int64"), )
paddle.index_select(Tensor([1, 24276, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 7681, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 6804, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 10285, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 52500, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 21504, 16],"float32"), Tensor([15],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 10164, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 10285, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 4116, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 21504, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([16, 3060, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 6804, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 10164, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 10164, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 4725, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 4789, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 12096, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([107136, 7],"float32"), Tensor([5],"int64"), axis=1, )
paddle.index_select(Tensor([4, 9261, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 40656, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 70644, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 8500, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 30324, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 65856, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(x=Tensor([6684, 128],"float32"), index=Tensor([26336],"int64"), axis=0, )
paddle.index_select(Tensor([4, 6069, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 8500, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 6150, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 8400, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 4725, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 9261, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 75600, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 6885, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 9382, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 5376, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 11109, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 6804, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 8500, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([107136, 5],"float32"), Tensor([4],"int64"), axis=1, )
paddle.index_select(Tensor([1, 44436, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 3024, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 6804, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 4165, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 12096, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(x=Tensor([458, 128],"float32"), index=Tensor([1240],"int64"), axis=0, )
paddle.index_select(Tensor([4, 4725, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 4116, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 3549, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 4725, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 4725, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 4116, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 2100, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 3024, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 4116, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 10164, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 2541, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 7581, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 7681, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([40000],"float32"), Tensor([2],"int64"), axis=0, )
paddle.index_select(Tensor([2, 4725, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 3598, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 3598, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 8400, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 6400, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 4116, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 6069, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 3549, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 500, 8],"float32"), index=Tensor([8],"int32"), axis=-1, )
paddle.index_select(Tensor([4, 6, 16, 256],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([2, 5376, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 4165, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 6069, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 4789, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([529, 32],"float32"), Tensor([20736],"int64"), )
paddle.index_select(Tensor([4, 3024, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([529, 12],"float32"), Tensor([20736],"int64"), )
paddle.index_select(Tensor([4, 2100, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 5376, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 2541, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([169, 48],"float32"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([2, 3024, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 6069, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 5, 29, 7, 7],"float32"), Tensor([24],"int64"), axis=2, )
paddle.index_select(Tensor([2, 2541, 11],"float32"), Tensor([10],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 8580, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([529, 48],"float32"), Tensor([20736],"int64"), )
paddle.index_select(Tensor([4, 5, 16, 256],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 10164, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([529, 6],"float32"), Tensor([20736],"int64"), )
paddle.index_select(Tensor([8, 2100, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 2541, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 6804, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([529, 24],"float32"), Tensor([20736],"int64"), )
paddle.index_select(Tensor([2, 5376, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 2541, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([40000],"float32"), Tensor([3],"int64"), axis=0, )
paddle.index_select(Tensor([4, 3549, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 2100, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([21128],"float32"), Tensor([2],"int64"), axis=0, )
paddle.index_select(Tensor([4, 12096, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([100, 100, 5],"float32"), Tensor([20],"int32"), 1, )
paddle.index_select(Tensor([2, 9261, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 3060, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 3598, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 4165, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([529, 8],"float32"), Tensor([20736],"int64"), )
paddle.index_select(Tensor([4, 11109, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 6885, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 7581, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 8400, 3],"float32"), Tensor([2],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 7581, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 8400, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 11109, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 4789, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 2577, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 5440, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([529, 16],"float32"), Tensor([20736],"int64"), )
paddle.index_select(Tensor([2, 6804, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 8400, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([529, 4],"float32"), Tensor([20736],"int64"), )
paddle.index_select(Tensor([8, 5, 29, 7, 7],"float32"), Tensor([1],"int64"), axis=2, )
paddle.index_select(Tensor([2, 9261, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 4116, 5],"float32"), Tensor([4],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 3549, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 9261, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([56, 4, 7, 13],"float32"), index=Tensor([7],"int64"), axis=3, )
paddle.index_select(Tensor([1, 8192, 3],"float32"), Tensor([64],"int64"), axis=-1, )
paddle.index_select(Tensor([1, 6150, 12],"float32"), Tensor([11],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 2, 59, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 99, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([32, 32],"float32"), index=Tensor([32],"int64"), axis=0, )
paddle.index_select(Tensor([4, 2, 69, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 85, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 89, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 45, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 51, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 34, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 32, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 90, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 118, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([169, 8],"float32"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([4, 2, 123, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 87, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([169, 4],"float32"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([4, 4, 7, 13],"float32"), index=Tensor([7],"int64"), axis=3, )
paddle.index_select(Tensor([4, 2, 35, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 124, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 110, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 10, 8, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 8, 5, 8],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([169, 32],"float32"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([4, 4, 19, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 92, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 93, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 41, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 121, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 11, 8, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 98, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 55, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 111, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 107, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 77, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 36, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 38, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 57, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 116, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([11, 4, 7, 13],"float32"), index=Tensor([7],"int64"), axis=3, )
paddle.index_select(Tensor([4, 2, 33, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 122, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([169, 3],"float32"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([4, 2, 76, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 43, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([169, 12],"float32"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([4, 2, 80, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 72, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 100, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 60, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 37, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 74, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 73, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 256],"float32"), Tensor([2],"int64"), )
paddle.index_select(Tensor([4, 2, 106, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 56, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 102, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 4, 18, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 105, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 68, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([16, 64],"float32"), index=Tensor([16],"int64"), axis=0, )
paddle.index_select(Tensor([4, 2, 81, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 48, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 88, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([14, 4, 8, 15],"float32"), index=Tensor([8],"int64"), axis=3, )
paddle.index_select(Tensor([4, 2, 91, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 86, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 70, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 75, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 61, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 66, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 39, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 49, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 108, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 126, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 79, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 50, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 109, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 95, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 117, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 44, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 52, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 65, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 120, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 101, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 125, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 127, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([2, 2100, 2],"float32"), Tensor([1],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 2, 115, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([10, 4, 7, 13],"float32"), index=Tensor([7],"int64"), axis=3, )
paddle.index_select(Tensor([4, 2, 67, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 54, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 83, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 47, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([169, 6],"float32"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([4, 2, 96, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([14, 4, 8, 13],"float32"), index=Tensor([7],"int64"), axis=3, )
paddle.index_select(Tensor([4, 2, 46, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([7, 4, 7, 13],"float32"), index=Tensor([7],"int64"), axis=3, )
paddle.index_select(Tensor([4, 4, 16, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 53, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 114, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 62, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 64, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 78, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([169, 24],"float32"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([4, 2, 71, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 4, 17, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 5, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 84, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 94, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 58, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([14, 4, 7, 13],"float32"), index=Tensor([7],"int64"), axis=3, )
paddle.index_select(Tensor([4, 2, 42, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([169, 16],"float32"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([4, 2, 82, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 119, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 40, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 63, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 112, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 103, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 8, 6, 8],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 97, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 113, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 2, 104, 4],"float32"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 6, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.inner(Tensor([20, 50],"float64"), Tensor([50],"float64"), )
paddle.inner(Tensor([20, 50],"complex128"), Tensor([50],"complex128"), )
paddle.is_complex(Tensor([16, 7681, 2],"float32"), )
paddle.is_complex(Tensor([24, 7681, 2],"float32"), )
paddle.is_complex(Tensor([136, 3024, 2],"float32"), )
paddle.is_complex(Tensor([7, 7681, 2],"float32"), )
paddle.is_complex(Tensor([8, 8400, 2],"float32"), )
paddle.is_complex(Tensor([20, 10285, 2],"float32"), )
paddle.is_complex(Tensor([168, 2541, 2],"float32"), )
paddle.is_complex(Tensor([32, 12096, 2],"float32"), )
paddle.is_complex(Tensor([184, 2541, 2],"float32"), )
paddle.is_complex(Tensor([10, 7681, 2],"float32"), )
paddle.is_complex(Tensor([12, 8500, 2],"float32"), )
paddle.is_complex(Tensor([727173],"float32"), )
paddle.is_complex(Tensor([12, 4789, 2],"float32"), )
paddle.is_complex(Tensor([12, 5440, 2],"float32"), )
paddle.is_complex(Tensor([120, 3024, 2],"float32"), )
paddle.is_complex(Tensor([64, 2100, 2],"float32"), )
paddle.is_complex(Tensor([24, 6804, 2],"float32"), )
paddle.is_complex(Tensor([40, 4725, 2],"float32"), )
paddle.is_complex(Tensor([120, 4116, 2],"float32"), )
paddle.is_complex(Tensor([28, 5440, 2],"float32"), )
paddle.is_complex(Tensor([120, 2100, 2],"float32"), )
paddle.is_complex(Tensor([14, 4165, 2],"float32"), )
paddle.is_complex(Tensor([208, 2100, 2],"float32"), )
paddle.is_complex(Tensor([48, 6804, 2],"float32"), )
paddle.is_complex(Tensor([64, 5376, 2],"float32"), )
paddle.is_complex(Tensor([8, 9382, 2],"float32"), )
paddle.is_complex(Tensor([116, 3549, 2],"float32"), )
paddle.is_complex(Tensor([348810, 1],"float32"), )
paddle.is_complex(Tensor([512, 522],"float32"), )
paddle.is_complex(Tensor([192, 896],"float32"), )
paddle.is_complex(Tensor([12, 12096, 2],"float32"), )
paddle.is_complex(Tensor([40, 6069, 2],"float32"), )
paddle.is_complex(Tensor([30, 6150, 2],"float32"), )
paddle.is_complex(Tensor([96, 2541, 2],"float32"), )
paddle.is_complex(Tensor([38, 5440, 2],"float32"), )
paddle.is_complex(Tensor([32, 3598, 2],"float32"), )
paddle.is_complex(Tensor([112, 2541, 2],"float32"), )
paddle.is_complex(Tensor([16, 6804, 2],"float32"), )
paddle.is_complex(Tensor([12, 9382, 2],"float32"), )
paddle.is_complex(Tensor([32, 3549, 2],"float32"), )
paddle.is_complex(Tensor([72, 4725, 2],"float32"), )
paddle.is_complex(Tensor([92, 2100, 2],"float32"), )
paddle.is_complex(Tensor([232, 2100, 2],"float32"), )
paddle.is_complex(Tensor([176, 2100, 2],"float32"), )
paddle.is_complex(Tensor([6, 9382, 2],"float32"), )
paddle.is_complex(Tensor([64, 7581, 2],"float32"), )
paddle.is_complex(Tensor([88, 5376, 2],"float32"), )
paddle.is_complex(Tensor([112, 3549, 2],"float32"), )
paddle.is_complex(Tensor([32, 3060, 2],"float32"), )
paddle.is_complex(Tensor([40, 3024, 2],"float32"), )
paddle.is_complex(Tensor([6, 10285, 2],"float32"), )
paddle.is_complex(Tensor([40, 4116, 2],"float32"), )
paddle.is_complex(Tensor([64, 4725, 2],"float32"), )
paddle.is_complex(Tensor([96, 2100, 2],"float32"), )
paddle.is_complex(Tensor([56, 6804, 2],"float32"), )
paddle.is_complex(Tensor([152, 2541, 2],"float32"), )
paddle.is_complex(Tensor([40, 9261, 2],"float32"), )
paddle.is_complex(Tensor([12, 10285, 2],"float32"), )
paddle.is_complex(Tensor([64, 2541, 2],"float32"), )
paddle.is_complex(Tensor([64, 6804, 2],"float32"), )
paddle.is_complex(Tensor([10, 10285, 2],"float32"), )
paddle.is_complex(Tensor([80, 6069, 2],"float32"), )
paddle.is_complex(Tensor([144, 3024, 2],"float32"), )
paddle.is_complex(Tensor([13, 10285, 2],"float32"), )
paddle.is_complex(Tensor([38, 4165, 2],"float32"), )
paddle.is_complex(Tensor([12, 6804, 2],"float32"), )
paddle.is_complex(Tensor([88, 3024, 2],"float32"), )
paddle.is_complex(Tensor([64, 3024, 2],"float32"), )
paddle.is_complex(Tensor([24, 10285, 2],"float32"), )
paddle.is_complex(Tensor([38, 7681, 2],"float32"), )
paddle.is_complex(Tensor([56, 5440, 2],"float32"), )
paddle.is_complex(Tensor([112, 3024, 2],"float32"), )
paddle.is_complex(Tensor([50, 6150, 2],"float32"), )
paddle.is_complex(Tensor([50, 8500, 2],"float32"), )
paddle.is_complex(Tensor([88, 2100, 2],"float32"), )
paddle.is_complex(Tensor([96, 4725, 2],"float32"), )
paddle.is_complex(Tensor([80, 4116, 2],"float32"), )
paddle.is_complex(Tensor([100000, 1],"float32"), )
paddle.is_complex(Tensor([192, 2541, 2],"float32"), )
paddle.is_complex(Tensor([104, 2541, 2],"float32"), )
paddle.is_complex(Tensor([112, 2100, 2],"float32"), )
paddle.is_complex(Tensor([104, 3549, 2],"float32"), )
paddle.is_complex(Tensor([512, 362],"float32"), )
paddle.is_complex(Tensor([32, 3024, 2],"float32"), )
paddle.is_complex(Tensor([224, 2100, 2],"float32"), )
paddle.is_complex(Tensor([22, 10285, 2],"float32"), )
paddle.is_complex(Tensor([16, 9382, 2],"float32"), )
paddle.is_complex(Tensor([152, 3024, 2],"float32"), )
paddle.is_complex(Tensor([16, 8400, 2],"float32"), )
paddle.is_complex(Tensor([92, 4725, 2],"float32"), )
paddle.is_complex(Tensor([14, 5440, 2],"float32"), )
paddle.is_complex(Tensor([48, 4725, 2],"float32"), )
paddle.is_complex(Tensor([20, 6885, 2],"float32"), )
paddle.is_complex(Tensor([28, 4789, 2],"float32"), )
paddle.is_complex(Tensor([40, 3549, 2],"float32"), )
paddle.is_complex(Tensor([28, 3598, 2],"float32"), )
paddle.is_complex(Tensor([56, 7581, 2],"float32"), )
paddle.is_complex(Tensor([16, 11109, 2],"float32"), )
paddle.is_complex(Tensor([60, 6804, 2],"float32"), )
paddle.is_complex(Tensor([32, 9261, 2],"float32"), )
paddle.is_complex(Tensor([8, 10285, 2],"float32"), )
paddle.is_complex(Tensor([24, 2541, 2],"float32"), )
paddle.is_complex(Tensor([128, 3024, 2],"float32"), )
paddle.is_complex(Tensor([120, 2541, 2],"float32"), )
paddle.is_complex(Tensor([20, 4789, 2],"float32"), )
paddle.is_complex(Tensor([22, 4165, 2],"float32"), )
paddle.is_complex(Tensor([48, 2100, 2],"float32"), )
paddle.is_complex(Tensor([20, 8500, 2],"float32"), )
paddle.is_complex(Tensor([50, 3598, 2],"float32"), )
paddle.is_complex(Tensor([40, 7581, 2],"float32"), )
paddle.is_complex(Tensor([104, 4725, 2],"float32"), )
paddle.is_complex(Tensor([164, 2541, 2],"float32"), )
paddle.is_complex(Tensor([16, 6069, 2],"float32"), )
paddle.is_complex(Tensor([48, 5376, 2],"float32"), )
paddle.is_complex(Tensor([72, 2100, 2],"float32"), )
paddle.is_complex(Tensor([9, 6885, 2],"float32"), )
paddle.is_complex(Tensor([144, 2100, 2],"float32"), )
paddle.is_complex(Tensor([32, 2125, 2],"float32"), )
paddle.is_complex(Tensor([20, 7581, 2],"float32"), )
paddle.is_complex(Tensor([30, 7681, 2],"float32"), )
paddle.is_complex(Tensor([60, 6150, 2],"float32"), )
paddle.is_complex(Tensor([96, 3024, 2],"float32"), )
paddle.is_complex(Tensor([160, 2100, 2],"float32"), )
paddle.is_complex(Tensor([48, 2125, 2],"float32"), )
paddle.is_complex(Tensor([44, 4165, 2],"float32"), )
paddle.is_complex(Tensor([14, 4789, 2],"float32"), )
paddle.is_complex(Tensor([38, 4789, 2],"float32"), )
paddle.is_complex(Tensor([256, 1280],"float32"), )
paddle.is_complex(Tensor([24, 4116, 2],"float32"), )
paddle.is_complex(Tensor([24, 6069, 2],"float32"), )
paddle.is_complex(Tensor([120, 3549, 2],"float32"), )
paddle.is_complex(Tensor([72, 3549, 2],"float32"), )
paddle.is_complex(Tensor([80, 3549, 2],"float32"), )
paddle.is_complex(Tensor([72, 4116, 2],"float32"), )
paddle.is_complex(Tensor([38, 8500, 2],"float32"), )
paddle.is_complex(Tensor([48, 3549, 2],"float32"), )
paddle.is_complex(Tensor([22, 8500, 2],"float32"), )
paddle.is_complex(Tensor([12, 6885, 2],"float32"), )
paddle.is_complex(Tensor([20, 9382, 2],"float32"), )
paddle.is_complex(Tensor([72, 6804, 2],"float32"), )
paddle.is_complex(Tensor([56, 2100, 2],"float32"), )
paddle.is_complex(Tensor([140, 3549, 2],"float32"), )
paddle.is_complex(Tensor([26, 9382, 2],"float32"), )
paddle.is_complex(Tensor([56, 3549, 2],"float32"), )
paddle.is_complex(Tensor([24, 6885, 2],"float32"), )
paddle.is_complex(Tensor([14, 7681, 2],"float32"), )
paddle.is_complex(Tensor([16, 5376, 2],"float32"), )
paddle.is_complex(Tensor([38, 6885, 2],"float32"), )
paddle.is_complex(Tensor([96, 3549, 2],"float32"), )
paddle.is_complex(Tensor([140, 2100, 2],"float32"), )
paddle.is_complex(Tensor([9, 7681, 2],"float32"), )
paddle.is_complex(Tensor([32, 2100, 2],"float32"), )
paddle.is_complex(Tensor([72, 6069, 2],"float32"), )
paddle.is_complex(Tensor([64, 4116, 2],"float32"), )
paddle.is_complex(Tensor([216, 2100, 2],"float32"), )
paddle.is_complex(Tensor([40, 10164, 2],"float32"), )
paddle.is_complex(Tensor([32, 7581, 2],"float32"), )
paddle.is_complex(Tensor([36, 9382, 2],"float32"), )
paddle.is_complex(Tensor([32, 10164, 2],"float32"), )
paddle.is_complex(Tensor([112, 4116, 2],"float32"), )
paddle.is_complex(Tensor([42, 4165, 2],"float32"), )
paddle.is_complex(Tensor([24, 8500, 2],"float32"), )
paddle.is_complex(Tensor([56, 8400, 2],"float32"), )
paddle.is_complex(Tensor([46, 6885, 2],"float32"), )
paddle.is_complex(Tensor([28, 7681, 2],"float32"), )
paddle.is_complex(Tensor([128512, 1],"float32"), )
paddle.is_complex(Tensor([148, 3024, 2],"float32"), )
paddle.is_complex(Tensor([56, 4116, 2],"float32"), )
paddle.is_complex(Tensor([184, 2100, 2],"float32"), )
paddle.is_complex(Tensor([36, 5440, 2],"float32"), )
paddle.is_complex(Tensor([14, 6150, 2],"float32"), )
paddle.is_complex(Tensor([104, 3024, 2],"float32"), )
paddle.is_complex(Tensor([136, 2100, 2],"float32"), )
paddle.is_complex(Tensor([8, 7681, 2],"float32"), )
paddle.is_complex(Tensor([20, 7681, 2],"float32"), )
paddle.is_complex(Tensor([24, 5376, 2],"float32"), )
paddle.is_complex(Tensor([26, 5440, 2],"float32"), )
paddle.is_complex(Tensor([168, 2100, 2],"float32"), )
paddle.is_complex(Tensor([56, 2541, 2],"float32"), )
paddle.is_complex(Tensor([30, 9382, 2],"float32"), )
paddle.is_complex(Tensor([128, 3549, 2],"float32"), )
paddle.is_complex(Tensor([16, 4116, 2],"float32"), )
paddle.is_complex(Tensor([40, 5440, 2],"float32"), )
paddle.is_complex(Tensor([10, 8500, 2],"float32"), )
paddle.is_complex(Tensor([24, 10164, 2],"float32"), )
paddle.is_complex(Tensor([88, 4725, 2],"float32"), )
paddle.is_complex(Tensor([60, 2100, 2],"float32"), )
paddle.is_complex(Tensor([72, 5376, 2],"float32"), )
paddle.is_complex(Tensor([18, 7681, 2],"float32"), )
paddle.is_complex(Tensor([32, 2541, 2],"float32"), )
paddle.is_complex(Tensor([24, 7581, 2],"float32"), )
paddle.is_complex(Tensor([18, 4165, 2],"float32"), )
paddle.is_complex(Tensor([24, 9382, 2],"float32"), )
paddle.is_complex(Tensor([18, 8500, 2],"float32"), )
paddle.is_complex(Tensor([56, 6069, 2],"float32"), )
paddle.is_complex(Tensor([72, 2541, 2],"float32"), )
paddle.is_complex(Tensor([64, 6069, 2],"float32"), )
paddle.is_complex(Tensor([14, 3598, 2],"float32"), )
paddle.is_complex(Tensor([16, 9261, 2],"float32"), )
paddle.is_complex(Tensor([40, 2541, 2],"float32"), )
paddle.is_complex(Tensor([26, 10285, 2],"float32"), )
paddle.is_complex(Tensor([136, 3549, 2],"float32"), )
paddle.is_complex(Tensor([200, 2100, 2],"float32"), )
paddle.is_complex(Tensor([7168, 64],"float32"), )
paddle.is_complex(Tensor([152, 2100, 2],"float32"), )
paddle.is_complex(Tensor([16, 3598, 2],"float32"), )
paddle.is_complex(Tensor([46, 4165, 2],"float32"), )
paddle.is_complex(Tensor([8, 10164, 2],"float32"), )
paddle.is_complex(Tensor([7, 8500, 2],"float32"), )
paddle.is_complex(Tensor([10, 5440, 2],"float32"), )
paddle.is_complex(Tensor([48, 2541, 2],"float32"), )
paddle.is_complex(Tensor([9, 8500, 2],"float32"), )
paddle.is_complex(Tensor([22, 5440, 2],"float32"), )
paddle.is_complex(Tensor([256512, 1],"float32"), )
paddle.is_complex(Tensor([48, 10164, 2],"float32"), )
paddle.is_complex(Tensor([32, 6069, 2],"float32"), )
paddle.is_complex(Tensor([11, 4789, 2],"float32"), )
paddle.is_complex(Tensor([10, 6885, 2],"float32"), )
paddle.is_complex(Tensor([80, 3024, 2],"float32"), )
paddle.is_complex(Tensor([128, 2541, 2],"float32"), )
paddle.is_complex(Tensor([48, 8400, 2],"float32"), )
paddle.is_complex(Tensor([24, 12096, 2],"float32"), )
paddle.is_complex(Tensor([40, 11109, 2],"float32"), )
paddle.is_complex(Tensor([160, 1280],"float32"), )
paddle.is_complex(Tensor([88, 2541, 2],"float32"), )
paddle.is_complex(Tensor([16, 4165, 2],"float32"), )
paddle.is_complex(Tensor([50, 7644],"float32"), )
paddle.is_complex(Tensor([128, 2100, 2],"float32"), )
paddle.is_complex(Tensor([20, 5440, 2],"float32"), )
paddle.is_complex(Tensor([80, 2100, 2],"float32"), )
paddle.is_complex(Tensor([56, 4725, 2],"float32"), )
paddle.is_complex(Tensor([40, 12096, 2],"float32"), )
paddle.is_complex(Tensor([32, 8400, 2],"float32"), )
paddle.is_complex(Tensor([40, 8500, 2],"float32"), )
paddle.is_complex(Tensor([102912, 1],"float32"), )
paddle.is_complex(Tensor([24, 2100, 2],"float32"), )
paddle.is_complex(Tensor([80, 2541, 2],"float32"), )
paddle.is_complex(Tensor([16, 8500, 2],"float32"), )
paddle.is_complex(Tensor([20, 6150, 2],"float32"), )
paddle.is_complex(Tensor([14, 9382, 2],"float32"), )
paddle.is_complex(Tensor([72, 3024, 2],"float32"), )
paddle.is_complex(Tensor([80, 3060, 2],"float32"), )
paddle.is_complex(Tensor([18, 6150, 2],"float32"), )
paddle.is_complex(Tensor([32, 11109, 2],"float32"), )
paddle.is_complex(Tensor([144, 2541, 2],"float32"), )
paddle.is_complex(Tensor([24, 8400, 2],"float32"), )
paddle.is_complex(Tensor([16, 4725, 2],"float32"), )
paddle.is_complex(Tensor([10, 9382, 2],"float32"), )
paddle.is_complex(Tensor([40, 5376, 2],"float32"), )
paddle.is_complex(Tensor([16, 4789, 2],"float32"), )
paddle.is_complex(Tensor([14, 6885, 2],"float32"), )
paddle.is_complex(Tensor([88, 4116, 2],"float32"), )
paddle.is_complex(Tensor([18, 5440, 2],"float32"), )
paddle.is_complex(Tensor([26, 3598, 2],"float32"), )
paddle.is_complex(Tensor([136, 2541, 2],"float32"), )
paddle.is_complex(Tensor([176, 2541, 2],"float32"), )
paddle.is_complex(Tensor([28, 10285, 2],"float32"), )
paddle.is_complex(Tensor([28, 8500, 2],"float32"), )
paddle.is_complex(Tensor([26, 4165, 2],"float32"), )
paddle.is_complex(Tensor([9, 10285, 2],"float32"), )
paddle.is_complex(Tensor([8, 9261, 2],"float32"), )
paddle.is_complex(Tensor([6, 8500, 2],"float32"), )
paddle.is_complex(Tensor([28, 6885, 2],"float32"), )
paddle.is_complex(Tensor([56, 5376, 2],"float32"), )
paddle.is_complex(Tensor([26, 6150, 2],"float32"), )
paddle.is_complex(Tensor([32, 4725, 2],"float32"), )
paddle.is_complex(Tensor([48, 3024, 2],"float32"), )
paddle.is_complex(Tensor([16, 6885, 2],"float32"), )
paddle.is_complex(Tensor([160, 2541, 2],"float32"), )
paddle.is_complex(Tensor([76, 4725, 2],"float32"), )
paddle.is_complex(Tensor([28, 4725, 2],"float32"), )
paddle.is_complex(Tensor([80, 5376, 2],"float32"), )
paddle.is_complex(Tensor([1280, 320],"float32"), )
paddle.is_complex(Tensor([8192, 64],"float32"), )
paddle.is_complex(Tensor([104, 4116, 2],"float32"), )
paddle.is_complex(Tensor([512, 207],"float32"), )
paddle.is_complex(Tensor([64, 3549, 2],"float32"), )
paddle.is_complex(Tensor([48, 7581, 2],"float32"), )
paddle.is_complex(Tensor([48, 4116, 2],"float32"), )
paddle.is_complex(Tensor([48, 9261, 2],"float32"), )
paddle.is_complex(Tensor([56, 3024, 2],"float32"), )
paddle.is_complex(Tensor([512, 512],"float32"), )
paddle.is_complex(Tensor([16, 10164, 2],"float32"), )
paddle.is_complex(Tensor([40, 6804, 2],"float32"), )
paddle.is_complex(Tensor([88, 3549, 2],"float32"), )
paddle.is_complex(Tensor([512, 471],"float32"), )
paddle.is_complex(Tensor([80, 4725, 2],"float32"), )
paddle.is_complex(Tensor([24, 9261, 2],"float32"), )
paddle.is_complex(Tensor([192, 2100, 2],"float32"), )
paddle.is_complex(Tensor([32, 5376, 2],"float32"), )
paddle.is_complex(Tensor([18, 9382, 2],"float32"), )
paddle.is_complex(Tensor([28, 6150, 2],"float32"), )
paddle.is_complex(Tensor([104, 2100, 2],"float32"), )
paddle.is_complex(Tensor([40, 8400, 2],"float32"), )
paddle.is_complex(Tensor([56, 7681, 2],"float32"), )
paddle.is_complex(Tensor([16, 6150, 2],"float32"), )
paddle.is_complex(Tensor([96, 4116, 2],"float32"), )
paddle.is_complex(Tensor([12, 3598, 2],"float32"), )
paddle.is_complex(Tensor([8, 7168],"float32"), )
paddle.is_complex(Tensor([5, 4165, 2],"float32"), )
paddle.is_complex(Tensor([10, 3598, 2],"float32"), )
paddle.is_complex(Tensor([1, 6150, 2],"float32"), )
paddle.is_complex(Tensor([512, 102],"float32"), )
paddle.is_complex(Tensor([8, 6069, 2],"float32"), )
paddle.is_complex(Tensor([8, 3598, 2],"float32"), )
paddle.is_complex(Tensor([20000, 1],"float32"), )
paddle.is_complex(Tensor([6380, 1, 4],"float32"), )
paddle.is_complex(Tensor([5, 6885, 2],"float32"), )
paddle.is_complex(Tensor([1, 8580, 2],"float32"), )
paddle.is_complex(Tensor([50, 50, 20],"float64"), )
paddle.is_complex(Tensor([16, 2541, 2],"float32"), )
paddle.is_complex(Tensor([4, 5376, 2],"float32"), )
paddle.is_complex(Tensor([8, 5440, 2],"float32"), )
paddle.is_complex(Tensor([2, 5440, 2],"float32"), )
paddle.is_complex(Tensor([22387],"float32"), )
paddle.is_complex(Tensor([4, 8400, 2],"float32"), )
paddle.is_complex(Tensor([9, 5440, 2],"float32"), )
paddle.is_complex(Tensor([6, 5440, 2],"float32"), )
paddle.is_complex(Tensor([128, 512],"float16"), )
paddle.is_complex(Tensor([2, 6885, 2],"float32"), )
paddle.is_complex(Tensor([39992, 1],"float32"), )
paddle.is_complex(Tensor([1, 6400, 2],"float32"), )
paddle.is_complex(Tensor([512, 32],"float32"), )
paddle.is_complex(Tensor([4, 10285, 2],"float32"), )
paddle.is_complex(Tensor([4, 6150, 2],"float32"), )
paddle.is_complex(Tensor([8, 4116, 2],"float32"), )
paddle.is_complex(Tensor([7, 6885, 2],"float32"), )
paddle.is_complex(Tensor([512, 34],"float32"), )
paddle.is_complex(Tensor([12, 4165, 2],"float32"), )
paddle.is_complex(Tensor([8, 4789, 2],"float32"), )
paddle.is_complex(Tensor([4, 9261, 2],"float32"), )
paddle.is_complex(Tensor([4, 7681, 2],"float32"), )
paddle.is_complex(Tensor([4, 4116, 2],"float32"), )
paddle.is_complex(Tensor([4, 3060, 2],"float32"), )
paddle.is_complex(Tensor([4, 12096, 2],"float32"), )
paddle.is_complex(Tensor([8550, 1, 4],"float32"), )
paddle.is_complex(Tensor([8, 3060, 2],"float32"), )
paddle.is_complex(Tensor([128, 512],"float32"), )
paddle.is_complex(Tensor([68608, 1],"float32"), )
paddle.is_complex(Tensor([100, 100],"float32"), )
paddle.is_complex(Tensor([3, 4789, 2],"float32"), )
paddle.is_complex(Tensor([512, 100],"float32"), )
paddle.is_complex(Tensor([3, 10285, 2],"float32"), )
paddle.is_complex(Tensor([10, 4789, 2],"float32"), )
paddle.is_complex(Tensor([4, 9382, 2],"float32"), )
paddle.is_complex(Tensor([4, 8500, 2],"float32"), )
paddle.is_complex(Tensor([6, 7681, 2],"float32"), )
paddle.is_complex(Tensor([4, 2577, 2],"float32"), )
paddle.is_complex(Tensor([6, 6150, 2],"float32"), )
paddle.is_complex(Tensor([4, 3598, 2],"float32"), )
paddle.is_complex(Tensor([5, 6150, 2],"float32"), )
paddle.is_complex(Tensor([6, 4165, 2],"float32"), )
paddle.is_complex(Tensor([4, 4165, 2],"float32"), )
paddle.is_complex(Tensor([3, 5440, 2],"float32"), )
paddle.is_complex(Tensor([6, 4789, 2],"float32"), )
paddle.is_complex(Tensor([1, 38402, 2],"float32"), )
paddle.is_complex(Tensor([512, 63],"float32"), )
paddle.is_complex(Tensor([4, 6069, 2],"float32"), )
paddle.is_complex(Tensor([1124, 32],"float32"), )
paddle.is_complex(Tensor([128, 130],"float32"), )
paddle.is_complex(Tensor([13, 3598, 2],"float32"), )
paddle.is_complex(Tensor([4, 4725, 2],"float32"), )
paddle.is_complex(Tensor([17152, 1],"float32"), )
paddle.is_complex(Tensor([7, 4789, 2],"float32"), )
paddle.is_complex(Tensor([1, 10285, 2],"float32"), )
paddle.is_complex(Tensor([8, 4165, 2],"float32"), )
paddle.is_complex(Tensor([256, 258],"float32"), )
paddle.is_complex(Tensor([2, 7681, 2],"float32"), )
paddle.is_complex(Tensor([20, 2001],"float32"), )
paddle.is_complex(Tensor([4, 3, 2048],"float32"), )
paddle.is_complex(Tensor([1, 6885, 2],"float32"), )
paddle.is_complex(Tensor([12, 2577, 2],"float32"), )
paddle.is_complex(Tensor([6, 6885, 2],"float32"), )
paddle.is_complex(Tensor([32, 896],"float32"), )
paddle.is_complex(Tensor([4, 5440, 2],"float32"), )
paddle.is_complex(Tensor([1, 36858, 2],"float32"), )
paddle.is_complex(Tensor([2, 6144],"float32"), )
paddle.is_complex(Tensor([34304, 1],"float32"), )
paddle.is_complex(Tensor([4, 6885, 2],"float32"), )
paddle.is_complex(Tensor([8, 2541, 2],"float32"), )
paddle.is_complex(Tensor([1, 8500, 2],"float32"), )
paddle.is_complex(Tensor([2, 9382, 2],"float32"), )
paddle.is_complex(Tensor([4, 4789, 2],"float32"), )
paddle.is_complex(Tensor([1, 5440, 2],"float32"), )
paddle.is_complex(Tensor([8, 2577, 2],"float32"), )
paddle.is_complex(Tensor([2, 4165, 2],"float32"), )
paddle.is_complex(Tensor([1, 3598, 2],"float32"), )
paddle.is_complex(Tensor([1000, 1],"float32"), )
paddle.is_complex(Tensor([512, 3],"float32"), )
paddle.is_complex(Tensor([128, 22],"float32"), )
paddle.is_complex(Tensor([900, 1, 4],"float32"), )
paddle.is_complex(Tensor([10, 10, 20],"float32"), )
paddle.is_complex(Tensor([512, 9],"float32"), )
paddle.is_complex(Tensor([3, 4, 5, 6, 8],"float32"), )
paddle.is_complex(Tensor([256, 7],"float32"), )
paddle.is_complex(Tensor([32, 37],"float32"), )
paddle.is_complex(Tensor([16, 1, 256],"float32"), )
paddle.is_complex(Tensor([3, 512],"float32"), )
paddle.is_complex(Tensor([512, 2],"float32"), )
paddle.is_complex(Tensor([1, 4165, 2],"float32"), )
paddle.is_empty(x=Tensor([4, 32, 32],"float32"), )
paddle.isfinite(Tensor([4, 94, 311],"float32"), )
paddle.isfinite(Tensor([8, 17, 5, 6, 7],"float16"), )
paddle.isfinite(Tensor([11, 17, 10],"int32"), )
paddle.isin(Tensor([8, 64],"float64"), Tensor([4, 256],"float64"), False, True, )
paddle.isin(Tensor([2, 5, 100],"float32"), Tensor([500],"float32"), True, True, )
paddle.isin(Tensor([8, 64],"float32"), Tensor([4, 256],"float32"), False, False, )
paddle.isin(Tensor([2, 5, 100],"int32"), Tensor([500],"int32"), True, True, )
paddle.isin(Tensor([8, 64],"int32"), Tensor([4, 256],"int32"), False, True, )
paddle.isin(Tensor([2, 5, 100],"float32"), Tensor([500],"float32"), True, False, )
paddle.isin(Tensor([2, 5, 100],"int64"), Tensor([500],"int64"), True, False, )
paddle.isin(Tensor([2, 5, 100],"float64"), Tensor([500],"float64"), True, True, )
paddle.isin(Tensor([2, 5, 100],"int64"), Tensor([500],"int64"), True, True, )
paddle.isin(Tensor([8, 64],"int64"), Tensor([4, 256],"int64"), False, True, )
paddle.isin(Tensor([8, 64],"float32"), Tensor([4, 256],"float32"), False, True, )
paddle.isin(Tensor([2, 5, 100],"int32"), Tensor([500],"int32"), True, False, )
paddle.isin(Tensor([8, 64],"float64"), Tensor([4, 256],"float64"), False, False, )
paddle.isin(Tensor([2, 5, 100],"float64"), Tensor([500],"float64"), True, False, )
paddle.isin(Tensor([8, 64],"int64"), Tensor([4, 256],"int64"), False, False, )
paddle.isin(Tensor([8, 64],"int32"), Tensor([4, 256],"int32"), False, False, )
paddle.isinf(Tensor([8, 17, 5, 6, 7],"float16"), )
paddle.isinf(Tensor([14, 64, 16],"float32"), )
paddle.isinf(Tensor([11, 17, 10],"int32"), )
paddle.isinf(Tensor([11, 17, 10],"int16"), )
paddle.isinf(Tensor([14, 7, 99],"float32"), )
paddle.isinf(Tensor([14, 64, 4],"float32"), )
paddle.isinf(Tensor([14, 7, 32],"float32"), )
paddle.isnan(Tensor([768, 768],"float16"), )
paddle.isnan(Tensor([512, 512],"float16"), )
paddle.isnan(Tensor([640, 512],"float16"), )
paddle.isnan(Tensor([512, 320],"float16"), )
paddle.isnan(Tensor([784000],"float32"), )
paddle.isnan(Tensor([1024, 512],"float16"), )
paddle.isnan(Tensor([256, 64],"float16"), )
paddle.isnan(Tensor([8, 17, 5, 6, 7],"float16"), )
paddle.isnan(Tensor([192, 64],"float16"), )
paddle.isnan(Tensor([14, 64, 16],"float32"), )
paddle.isnan(Tensor([64, 256],"float16"), )
paddle.isnan(Tensor([14, 7, 99],"float32"), )
paddle.isnan(Tensor([14, 64, 4],"float32"), )
paddle.isnan(Tensor([32, 64],"float16"), )
paddle.isnan(Tensor([32, 32],"float32"), )
paddle.isnan(Tensor([1948, 2],"float32"), )
paddle.isnan(Tensor([16, 64],"float64"), )
paddle.isnan(Tensor([11, 17, 10],"int32"), )
paddle.isnan(Tensor([16, 64],"float32"), )
paddle.isnan(Tensor([148, 5, 3],"float32"), )
paddle.isnan(Tensor([14, 7, 32],"float32"), )
paddle.isnan(Tensor([64, 64],"float16"), )
paddle.isnan(Tensor([64, 32],"float16"), )
paddle.isneginf(Tensor([11, 17, 10],"int16"), )
paddle.isneginf(Tensor([11, 17, 10],"int32"), )
paddle.isposinf(Tensor([11, 17, 10],"int16"), )
paddle.isposinf(Tensor([11, 17, 10],"int32"), )
paddle.isreal(Tensor([64, 32],"float64"), )
paddle.isreal(Tensor([64, 32],"bool"), )
paddle.isreal(Tensor([64, 32],"int32"), )
paddle.isreal(Tensor([64, 32],"bfloat16"), )
paddle.isreal(Tensor([64, 32],"float32"), )
paddle.isreal(Tensor([64, 32],"float16"), )
paddle.isreal(Tensor([64, 32],"int16"), )
paddle.isreal(Tensor([64, 32],"int64"), )
paddle.kron(Tensor([64, 64],"float32"), Tensor([76, 76],"float32"), )
paddle.kron(Tensor([5, 5, 4, 3, 5, 6],"float32"), Tensor([3, 5, 4],"float32"), )
paddle.kthvalue(Tensor([30, 200, 40],"float32"), k=1, axis=1, )
paddle.kthvalue(Tensor([30, 200, 40],"float32"), k=1, axis=1, keepdim=True, )
paddle.kthvalue(Tensor([30, 200, 40],"float32"), k=2, )
paddle.kthvalue(Tensor([2, 30, 250],"float64"), 244, 2, )
paddle.kthvalue(Tensor([2, 30, 250],"float64"), 244, -1, )
paddle.kthvalue(Tensor([2, 128, 10],"float64"), 2, -1, )
paddle.kthvalue(Tensor([2, 128, 10],"float64"), 2, 2, )
paddle.lerp(Tensor([3, 28, 28],"float32"), Tensor([3, 28, 28],"float32"), 1.2, )
paddle.lerp(Tensor([1, 28, 28],"float32"), Tensor([3, 28, 28],"float32"), 1.0, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 28, 28],"float32"), 0.36, )
paddle.less(Tensor([10, 1024],"float32"), Tensor([10, 1024],"float32"), )
paddle.less_than(Tensor([8, 1, 128, 128],"float32"), Tensor([8, 1, 128, 128],"float32"), )
paddle.less_than(Tensor([1, 128, 128],"float32"), Tensor([1, 128, 128],"float32"), )
paddle.less_than(Tensor([1, 128, 256],"int32"), Tensor([],"int32"), )
paddle.less_than(Tensor([1, 128, 256],"int64"), Tensor([1, 128, 256],"int64"), )
paddle.less_than(Tensor([1, 128, 128],"int32"), Tensor([],"int32"), )
paddle.less_than(Tensor([1, 128, 128],"int64"), Tensor([1, 128, 128],"int64"), )
paddle.less_than(Tensor([1, 128, 256],"float32"), Tensor([1, 128, 256],"float32"), )
paddle.lgamma(Tensor([100, 100],"float64"), )
paddle.lgamma(Tensor([10, 10, 10, 2],"float64"), )
paddle.lgamma(Tensor([1948, 1],"float32"), )
paddle.lgamma(Tensor([10, 10, 10],"float64"), )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 7, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 32, 32],"float64"), n=0, )
paddle.linalg.norm(Tensor([727173],"float32"), p=2, )
paddle.linalg.norm(Tensor([50, 50, 20],"float64"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([6380, 1, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([8550, 1, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([22387],"float32"), 2, )
paddle.linalg.norm(Tensor([10, 10, 20],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 20],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([900, 1, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 20],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 20],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 20],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 20],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 20],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([300, 1, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.pinv(Tensor([2, 200, 300],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.qr(Tensor([100, 21],"float64"), )
paddle.linalg.qr(Tensor([3, 100, 4],"float64"), )
paddle.linalg.qr(Tensor([3, 100, 6],"float64"), )
paddle.linalg.qr(Tensor([2, 3, 100, 6],"float64"), )
paddle.linalg.qr(Tensor([100, 12],"float64"), )
paddle.linalg.qr(Tensor([3, 40, 12],"float64"), )
paddle.linalg.qr(Tensor([2, 3, 40, 12],"float64"), )
paddle.linalg.qr(Tensor([3, 100, 12],"float64"), )
paddle.linalg.qr(Tensor([2, 3, 100, 4],"float64"), )
paddle.linalg.qr(Tensor([2, 3, 40, 8],"float64"), )
paddle.linalg.qr(Tensor([1, 100, 12],"float64"), )
paddle.linalg.qr(Tensor([2, 3, 100, 12],"float64"), )
paddle.linalg.qr(Tensor([2, 3, 100, 2],"float64"), )
paddle.linalg.qr(Tensor([2, 3, 40, 6],"float64"), )
paddle.linalg.qr(Tensor([3, 100, 8],"float64"), )
paddle.linalg.qr(Tensor([2, 3, 100, 8],"float64"), )
paddle.linalg.svdvals(Tensor([40, 40],"float64"), )
paddle.log(Tensor([262428],"float32"), )
paddle.log(Tensor([278562],"float32"), )
paddle.log(Tensor([153450],"float32"), )
paddle.log(Tensor([325113],"float32"), )
paddle.log(Tensor([177276],"float32"), )
paddle.log(Tensor([255780],"float32"), )
paddle.log(Tensor([244800],"float32"), )
paddle.log(Tensor([245823],"float32"), )
paddle.log(Tensor([429660],"float32"), )
paddle.log(Tensor([2, 256000],"float32"), )
paddle.log(Tensor([313038],"float32"), )
paddle.log(Tensor([335568],"float32"), )
paddle.log(Tensor([248616],"float32"), )
paddle.log(Tensor([451143],"float32"), )
paddle.log(Tensor([320739],"float32"), )
paddle.log(Tensor([331452],"float32"), )
paddle.log(Tensor([198249],"float32"), )
paddle.log(Tensor([296700],"float32"), )
paddle.log(Tensor([264978],"float32"), )
paddle.log(Tensor([239382],"float32"), )
paddle.log(Tensor([247086],"float32"), )
paddle.log(Tensor([369105],"float32"), )
paddle.log(Tensor([285444],"float32"), )
paddle.log(Tensor([241221],"float32"), )
paddle.log(Tensor([333018],"float32"), )
paddle.log(Tensor([312324],"float32"), )
paddle.log(Tensor([261888],"float32"), )
paddle.log(Tensor([188256],"float32"), )
paddle.log(Tensor([257796],"float32"), )
paddle.log(Tensor([8, 2, 128, 128],"float32"), )
paddle.log(Tensor([368280],"float32"), )
paddle.log(Tensor([208197],"float32"), )
paddle.log(Tensor([223554],"float32"), )
paddle.log(Tensor([196416],"float32"), )
paddle.log(Tensor([379050],"float32"), )
paddle.log(Tensor([222012],"float32"), )
paddle.log(Tensor([4, 32000],"float32"), )
paddle.log(Tensor([236334],"float32"), )
paddle.log(Tensor([270096],"float32"), )
paddle.log(Tensor([4, 2, 248, 216],"float32"), )
paddle.log(Tensor([180048],"float32"), )
paddle.log(Tensor([349155],"float32"), )
paddle.log(Tensor([327360],"float32"), )
paddle.log(Tensor([262194],"float32"), )
paddle.log(Tensor([100000, 2, 3],"float32"), )
paddle.log(Tensor([252195],"float32"), )
paddle.log(Tensor([196944],"float32"), )
paddle.log(Tensor([245520],"float32"), )
paddle.log(Tensor([301302],"float32"), )
paddle.log(Tensor([293622],"float32"), )
paddle.log(Tensor([250656],"float32"), )
paddle.log(Tensor([388740],"float32"), )
paddle.log(Tensor([272649],"float32"), )
paddle.log(Tensor([199485],"float32"), )
paddle.log(Tensor([241731],"float32"), )
paddle.log(Tensor([176490],"float32"), )
paddle.log(Tensor([290052],"float32"), )
paddle.log(Tensor([233244],"float32"), )
paddle.log(Tensor([253728],"float32"), )
paddle.log(Tensor([377514],"float32"), )
paddle.log(Tensor([7, 50000],"float32"), )
paddle.log(Tensor([4, 2, 128, 128],"float32"), )
paddle.log(Tensor([365211],"float32"), )
paddle.log(Tensor([269586],"float32"), )
paddle.log(Tensor([306900],"float32"), )
paddle.log(Tensor([219453],"float32"), )
paddle.log(Tensor([260865],"float32"), )
paddle.log(Tensor([331722],"float32"), )
paddle.log(Tensor([300762],"float32"), )
paddle.log(Tensor([242991],"float32"), )
paddle.log(Tensor([269355],"float32"), )
paddle.log(Tensor([283905],"float32"), )
paddle.log(Tensor([375984],"float32"), )
paddle.log(Tensor([309255],"float32"), )
paddle.log(Tensor([205923],"float32"), )
paddle.log(Tensor([249405],"float32"), )
paddle.log(Tensor([191835],"float32"), )
paddle.log(x=Tensor([56, 722, 2, 2],"float32"), )
paddle.log(Tensor([220968],"float32"), )
paddle.log(Tensor([295647],"float32"), )
paddle.log(Tensor([261681],"float32"), )
paddle.log(Tensor([268560],"float32"), )
paddle.log(Tensor([337620],"float32"), )
paddle.log(Tensor([359613],"float32"), )
paddle.log(Tensor([20, 1, 152, 272],"float32"), )
paddle.log(Tensor([171888],"float32"), )
paddle.log(Tensor([359100],"float32"), )
paddle.log(Tensor([345618],"float32"), )
paddle.log(Tensor([1, 38367, 4],"float32"), )
paddle.log(Tensor([237360],"float32"), )
paddle.log(Tensor([234804],"float32"), )
paddle.log(Tensor([302832],"float32"), )
paddle.log(Tensor([286464],"float32"), )
paddle.log(Tensor([310992],"float32"), )
paddle.log(Tensor([397467],"float32"), )
paddle.log(Tensor([251676],"float32"), )
paddle.log(Tensor([214830],"float32"), )
paddle.log(Tensor([286440],"float32"), )
paddle.log(Tensor([200022],"float32"), )
paddle.log(Tensor([193368],"float32"), )
paddle.log(Tensor([150402],"float32"), )
paddle.log(Tensor([237870],"float32"), )
paddle.log(Tensor([267030],"float32"), )
paddle.log(Tensor([293397],"float32"), )
paddle.log(Tensor([1, 36828, 4],"float32"), )
paddle.log(Tensor([214848],"float32"), )
paddle.log(Tensor([283167],"float32"), )
paddle.log(x=Tensor([100, 722, 2, 2],"float32"), )
paddle.log(Tensor([204624],"float32"), )
paddle.log(Tensor([388032],"float32"), )
paddle.log(Tensor([311535],"float32"), )
paddle.log(Tensor([440433],"float32"), )
paddle.log(Tensor([386694],"float32"), )
paddle.log(Tensor([103320],"float32"), )
paddle.log(Tensor([329205],"float32"), )
paddle.log(Tensor([217689],"float32"), )
paddle.log(Tensor([185691],"float32"), )
paddle.log(Tensor([217413],"float32"), )
paddle.log(Tensor([194157],"float32"), )
paddle.log(Tensor([277539],"float32"), )
paddle.log(Tensor([252681],"float32"), )
paddle.log(Tensor([340176],"float32"), )
paddle.log(Tensor([4, 4, 128, 128],"float32"), )
paddle.log(Tensor([295443],"float32"), )
paddle.log(Tensor([317160],"float32"), )
paddle.log(Tensor([32, 32, 128],"float32"), )
paddle.log(Tensor([340686],"float32"), )
paddle.log(Tensor([339150],"float32"), )
paddle.log(Tensor([229965],"float32"), )
paddle.log(Tensor([236616],"float32"), )
paddle.log(Tensor([20000, 2, 3],"float32"), )
paddle.log(Tensor([354501],"float32"), )
paddle.log(Tensor([191301],"float32"), )
paddle.log(Tensor([294624],"float32"), )
paddle.log(Tensor([229152],"float32"), )
paddle.log(Tensor([246051],"float32"), )
paddle.log(Tensor([223827],"float32"), )
paddle.log(Tensor([291555],"float32"), )
paddle.log(Tensor([276210],"float32"), )
paddle.log(Tensor([322245],"float32"), )
paddle.log(Tensor([227919],"float32"), )
paddle.log(Tensor([356541],"float32"), )
paddle.log(Tensor([190296],"float32"), )
paddle.log(Tensor([100000, 2],"float32"), )
paddle.log(Tensor([319200],"float32"), )
paddle.log(Tensor([236313],"float32"), )
paddle.log(Tensor([229455],"float32"), )
paddle.log(Tensor([208692],"float32"), )
paddle.log(Tensor([304368],"float32"), )
paddle.log(Tensor([211038],"float32"), )
paddle.log(Tensor([235320],"float32"), )
paddle.log(Tensor([166533],"float32"), )
paddle.log(Tensor([4, 1, 248, 216],"float32"), )
paddle.log(Tensor([378540],"float32"), )
paddle.log(Tensor([268569],"float32"), )
paddle.log(Tensor([6, 32000],"float32"), )
paddle.log(Tensor([8, 1, 128, 128],"float32"), )
paddle.log(Tensor([398487],"float32"), )
paddle.log(Tensor([168795],"float32"), )
paddle.log(Tensor([313347],"float32"), )
paddle.log(Tensor([220992],"float32"), )
paddle.log(Tensor([182391],"float32"), )
paddle.log(Tensor([278256],"float32"), )
paddle.log(Tensor([369303],"float32"), )
paddle.log(Tensor([158580],"float32"), )
paddle.log(Tensor([322272],"float32"), )
paddle.log(Tensor([230202],"float32"), )
paddle.log(Tensor([105840],"float32"), )
paddle.log(Tensor([227124],"float32"), )
paddle.log(Tensor([330429],"float32"), )
paddle.log(x=Tensor([87, 722, 2, 2],"float32"), )
paddle.log(Tensor([408177],"float32"), )
paddle.log(Tensor([303858],"float32"), )
paddle.log(Tensor([367059],"float32"), )
paddle.log(Tensor([314595],"float32"), )
paddle.log(Tensor([212784],"float32"), )
paddle.log(Tensor([243474],"float32"), )
paddle.log(Tensor([202572],"float32"), )
paddle.log(Tensor([321759],"float32"), )
paddle.log(Tensor([349866],"float32"), )
paddle.log(Tensor([343728],"float32"), )
paddle.log(Tensor([331251],"float32"), )
paddle.log(Tensor([299250],"float32"), )
paddle.log(Tensor([279279],"float32"), )
paddle.log(Tensor([272118],"float32"), )
paddle.log(Tensor([286977],"float32"), )
paddle.log(Tensor([230175],"float32"), )
paddle.log(Tensor([350178],"float32"), )
paddle.log(Tensor([184140],"float32"), )
paddle.log(x=Tensor([256, 722, 2, 2],"float32"), )
paddle.log(Tensor([138120],"float32"), )
paddle.log(Tensor([214107],"float32"), )
paddle.log(Tensor([346086],"float32"), )
paddle.log(Tensor([347820],"float32"), )
paddle.log(Tensor([279300],"float32"), )
paddle.log(Tensor([59250],"float32"), )
paddle.log(Tensor([55440],"float32"), )
paddle.log(Tensor([72960],"float32"), )
paddle.log(Tensor([52080],"float32"), )
paddle.log(Tensor([70290],"float32"), )
paddle.log(Tensor([70875],"float32"), )
paddle.log(Tensor([45540],"float32"), )
paddle.log(Tensor([82125],"float32"), )
paddle.log(Tensor([69750],"float32"), )
paddle.log(Tensor([80400],"float32"), )
paddle.log(Tensor([52500],"float32"), )
paddle.log(Tensor([36000],"float32"), )
paddle.log(Tensor([71685],"float32"), )
paddle.log(Tensor([57525],"float32"), )
paddle.log(Tensor([50250],"float32"), )
paddle.log(Tensor([79695],"float32"), )
paddle.log(Tensor([69030],"float32"), )
paddle.log(Tensor([55200],"float32"), )
paddle.log(Tensor([63360],"float32"), )
paddle.log(Tensor([4101, 5],"float32"), )
paddle.log(Tensor([45750],"float32"), )
paddle.log(Tensor([1, 12096, 4],"float32"), )
paddle.log(Tensor([53100],"float32"), )
paddle.log(Tensor([43560],"float32"), )
paddle.log(Tensor([1, 6804, 4],"float32"), )
paddle.log(Tensor([37800],"float32"), )
paddle.log(Tensor([1, 8400, 4],"float32"), )
paddle.log(Tensor([74520],"float32"), )
paddle.log(Tensor([73125],"float32"), )
paddle.log(Tensor([63840],"float32"), )
paddle.log(Tensor([57000],"float32"), )
paddle.log(Tensor([46305],"float32"), )
paddle.log(Tensor([63000],"float32"), )
paddle.log(Tensor([58800],"float32"), )
paddle.log(Tensor([66960],"float32"), )
paddle.log(Tensor([83070],"float32"), )
paddle.log(Tensor([47610],"float32"), )
paddle.log(Tensor([51240],"float32"), )
paddle.log(Tensor([3801, 5],"float32"), )
paddle.log(Tensor([44520],"float32"), )
paddle.log(Tensor([49680],"float32"), )
paddle.log(Tensor([68040],"float32"), )
paddle.log(Tensor([1763, 7],"float32"), )
paddle.log(Tensor([48000],"float32"), )
paddle.log(Tensor([1, 4725, 4],"float32"), )
paddle.log(Tensor([1, 6069, 4],"float32"), )
paddle.log(Tensor([50220],"float32"), )
paddle.log(Tensor([57600],"float32"), )
paddle.log(Tensor([1, 6380, 4],"float32"), )
paddle.log(Tensor([54270],"float32"), )
paddle.log(Tensor([48600],"float32"), )
paddle.log(Tensor([61200],"float32"), )
paddle.log(x=Tensor([256, 18, 3, 3],"float32"), )
paddle.log(Tensor([62160],"float32"), )
paddle.log(Tensor([56700],"float32"), )
paddle.log(Tensor([1, 10164, 4],"float32"), )
paddle.log(Tensor([62730],"float32"), )
paddle.log(Tensor([54750],"float32"), )
paddle.log(Tensor([4, 1, 128, 128],"float32"), )
paddle.log(Tensor([82080],"float32"), )
paddle.log(Tensor([57240],"float32"), )
paddle.log(Tensor([10000],"float32"), )
paddle.log(Tensor([75555],"float32"), )
paddle.log(Tensor([62700],"float32"), )
paddle.log(Tensor([44640],"float32"), )
paddle.log(Tensor([68400],"float32"), )
paddle.log(Tensor([48240],"float32"), )
paddle.log(Tensor([57960],"float32"), )
paddle.log(Tensor([45135],"float32"), )
paddle.log(Tensor([67500],"float32"), )
paddle.log(Tensor([67890],"float32"), )
paddle.log(Tensor([39690],"float32"), )
paddle.log(Tensor([66240],"float32"), )
paddle.log(Tensor([67200],"float32"), )
paddle.log(Tensor([54000],"float32"), )
paddle.log(Tensor([75840],"float32"), )
paddle.log(Tensor([73500],"float32"), )
paddle.log(Tensor([59295],"float32"), )
paddle.log(x=Tensor([56, 38, 10],"float32"), )
paddle.log(Tensor([86640],"float32"), )
paddle.log(Tensor([78660],"float32"), )
paddle.log(Tensor([68340],"float32"), )
paddle.log(Tensor([78750],"float32"), )
paddle.log(Tensor([79680],"float32"), )
paddle.log(Tensor([77025],"float32"), )
paddle.log(Tensor([71610],"float32"), )
paddle.log(Tensor([60480],"float32"), )
paddle.log(Tensor([58500],"float32"), )
paddle.log(Tensor([1, 128, 128],"float32"), )
paddle.log(Tensor([64680],"float32"), )
paddle.log(Tensor([77760],"float32"), )
paddle.log(Tensor([66360],"float32"), )
paddle.log(Tensor([68985],"float32"), )
paddle.log(Tensor([68310],"float32"), )
paddle.log(Tensor([75240],"float32"), )
paddle.log(Tensor([71100],"float32"), )
paddle.log(Tensor([78840],"float32"), )
paddle.log(Tensor([76380],"float32"), )
paddle.log(Tensor([74250],"float32"), )
paddle.log(Tensor([61500],"float32"), )
paddle.log(Tensor([88200],"float32"), )
paddle.log(Tensor([74370],"float32"), )
paddle.log(Tensor([57285],"float32"), )
paddle.log(x=Tensor([227, 18, 3, 3],"float32"), )
paddle.log(Tensor([65280],"float32"), )
paddle.log(Tensor([87600],"float32"), )
paddle.log(Tensor([90720],"float32"), )
paddle.log(Tensor([1, 8550, 4],"float32"), )
paddle.log(Tensor([72270],"float32"), )
paddle.log(x=Tensor([256, 38, 10],"float32"), )
paddle.log(x=Tensor([82, 18, 3, 3],"float32"), )
paddle.log(Tensor([60390],"float32"), )
paddle.log(Tensor([48300],"float32"), )
paddle.log(Tensor([3240, 6],"float32"), )
paddle.log(Tensor([79395],"float32"), )
paddle.log(Tensor([64320],"float32"), )
paddle.log(Tensor([60300],"float32"), )
paddle.log(Tensor([86940],"float32"), )
paddle.log(Tensor([51750],"float32"), )
paddle.log(Tensor([3066, 5],"float32"), )
paddle.log(Tensor([51840],"float32"), )
paddle.log(Tensor([54600],"float32"), )
paddle.log(Tensor([84375],"float32"), )
paddle.log(Tensor([52560],"float32"), )
paddle.log(Tensor([56730],"float32"), )
paddle.log(Tensor([69345],"float32"), )
paddle.log(Tensor([54870],"float32"), )
paddle.log(Tensor([51030],"float32"), )
paddle.log(Tensor([61065],"float32"), )
paddle.log(Tensor([70350],"float32"), )
paddle.log(Tensor([55755],"float32"), )
paddle.log(Tensor([8, 500, 4],"float32"), )
paddle.log(Tensor([57750],"float32"), )
paddle.log(Tensor([46230],"float32"), )
paddle.log(Tensor([8, 100, 100],"float32"), )
paddle.log(Tensor([74550],"float32"), )
paddle.log(Tensor([2654, 5],"float32"), )
paddle.log(Tensor([56250],"float32"), )
paddle.log(Tensor([53760],"float32"), )
paddle.log(Tensor([60750],"float32"), )
paddle.log(Tensor([94500],"float32"), )
paddle.log(Tensor([91980],"float32"), )
paddle.log(Tensor([68160],"float32"), )
paddle.log(Tensor([35280],"float32"), )
paddle.log(Tensor([1, 5376, 4],"float32"), )
paddle.log(x=Tensor([227, 9, 5],"float32"), )
paddle.log(Tensor([49410],"float32"), )
paddle.log(Tensor([43470],"float32"), )
paddle.log(Tensor([64605],"float32"), )
paddle.log(Tensor([76260],"float32"), )
paddle.log(Tensor([44220],"float32"), )
paddle.log(Tensor([5, 12000],"float32"), )
paddle.log(Tensor([70080],"float32"), )
paddle.log(Tensor([60450],"float32"), )
paddle.log(Tensor([62400],"float32"), )
paddle.log(Tensor([63720],"float32"), )
paddle.log(Tensor([80640],"float32"), )
paddle.log(Tensor([63135],"float32"), )
paddle.log(Tensor([76800],"float32"), )
paddle.log(Tensor([76860],"float32"), )
paddle.log(x=Tensor([256, 9, 5],"float32"), )
paddle.log(Tensor([83415],"float32"), )
paddle.log(Tensor([38940],"float32"), )
paddle.log(Tensor([1000, 2, 2, 3],"float32"), )
paddle.log(Tensor([70680],"float32"), )
paddle.log(Tensor([73365],"float32"), )
paddle.log(Tensor([95760],"float32"), )
paddle.log(Tensor([55845],"float32"), )
paddle.log(Tensor([42780],"float32"), )
paddle.log(Tensor([1, 128, 256],"float32"), )
paddle.log(Tensor([94620],"float32"), )
paddle.log(Tensor([40320],"float32"), )
paddle.log(Tensor([75075],"float32"), )
paddle.log(Tensor([46080],"float32"), )
paddle.log(Tensor([75330],"float32"), )
paddle.log(Tensor([74340],"float32"), )
paddle.log(Tensor([1833, 6],"float32"), )
paddle.log(Tensor([89600],"float32"), )
paddle.log(Tensor([56640],"float32"), )
paddle.log(Tensor([59220],"float32"), )
paddle.log(Tensor([62310],"float32"), )
paddle.log(Tensor([81000],"float32"), )
paddle.log(Tensor([16, 176, 4],"float32"), )
paddle.log(Tensor([74100],"float32"), )
paddle.log(Tensor([64170],"float32"), )
paddle.log(Tensor([55680],"float32"), )
paddle.log(Tensor([1, 50304],"float32"), )
paddle.log(Tensor([81180],"float32"), )
paddle.log(Tensor([71415],"float32"), )
paddle.log(Tensor([20000, 2],"float32"), )
paddle.log(Tensor([46920],"float32"), )
paddle.log(Tensor([4506, 5],"float32"), )
paddle.log(Tensor([56430],"float32"), )
paddle.log(Tensor([68625],"float32"), )
paddle.log(Tensor([72360],"float32"), )
paddle.log(x=Tensor([100, 38, 10],"float32"), )
paddle.log(Tensor([75615],"float32"), )
paddle.log(Tensor([16, 476, 4],"float32"), )
paddle.log(Tensor([46800],"float32"), )
paddle.log(Tensor([52920],"float32"), )
paddle.log(Tensor([55890],"float32"), )
paddle.log(Tensor([56280],"float32"), )
paddle.log(Tensor([78120],"float32"), )
paddle.log(Tensor([61440],"float32"), )
paddle.log(Tensor([84420],"float32"), )
paddle.log1p(Tensor([50000, 2],"float64"), )
paddle.log1p(Tensor([10, 200, 300],"float32"), )
paddle.log1p(Tensor([2, 107136, 1],"float32"), )
paddle.log1p(Tensor([20000],"float32"), )
paddle.log1p(Tensor([8, 16, 32],"float32"), )
paddle.log1p(Tensor([8, 16, 32],"complex64"), )
paddle.log1p(Tensor([8, 16, 32],"float64"), )
paddle.log1p(Tensor([8, 16, 32],"complex128"), )
paddle.logcumsumexp(Tensor([10, 10, 10],"float32"), )
paddle.logcumsumexp(Tensor([10, 10, 10],"float32"), axis=-1, )
paddle.logcumsumexp(Tensor([10, 10, 10],"float32"), axis=0, )
paddle.logical_and(Tensor([66150],"bool"), Tensor([66150],"bool"), )
paddle.logical_and(Tensor([1, 246051],"bool"), Tensor([1, 246051],"bool"), )
paddle.logical_and(Tensor([5, 75075],"bool"), Tensor([5, 75075],"bool"), )
paddle.logical_and(Tensor([73728],"bool"), Tensor([73728],"bool"), )
paddle.logical_and(Tensor([1, 212784],"bool"), Tensor([1, 212784],"bool"), )
paddle.logical_and(Tensor([5, 54000],"bool"), Tensor([5, 54000],"bool"), )
paddle.logical_and(Tensor([6198, 13],"bool"), Tensor([6198, 13],"bool"), )
paddle.logical_and(Tensor([6346, 12],"bool"), Tensor([6346, 12],"bool"), )
paddle.logical_and(Tensor([1770, 31],"bool"), Tensor([1770, 31],"bool"), )
paddle.logical_and(Tensor([253728],"bool"), Tensor([253728],"bool"), )
paddle.logical_and(Tensor([2476, 22],"bool"), Tensor([2476, 22],"bool"), )
paddle.logical_and(Tensor([1, 214107],"bool"), Tensor([1, 214107],"bool"), )
paddle.logical_and(Tensor([3371, 22],"bool"), Tensor([3371, 22],"bool"), )
paddle.logical_and(Tensor([4494, 39],"bool"), Tensor([4494, 39],"bool"), )
paddle.logical_and(Tensor([150784],"bool"), Tensor([150784],"bool"), )
paddle.logical_and(Tensor([3192, 34],"bool"), Tensor([3192, 34],"bool"), )
paddle.logical_and(Tensor([1, 69750],"bool"), Tensor([1, 69750],"bool"), )
paddle.logical_and(Tensor([3413, 16],"bool"), Tensor([3413, 16],"bool"), )
paddle.logical_and(Tensor([1, 73365],"bool"), Tensor([1, 73365],"bool"), )
paddle.logical_and(Tensor([4333, 13],"bool"), Tensor([4333, 13],"bool"), )
paddle.logical_and(Tensor([2, 212784],"bool"), Tensor([2, 212784],"bool"), )
paddle.logical_and(Tensor([1, 71685],"bool"), Tensor([1, 71685],"bool"), )
paddle.logical_and(Tensor([3, 81000],"bool"), Tensor([3, 81000],"bool"), )
paddle.logical_and(Tensor([62700],"bool"), Tensor([62700],"bool"), )
paddle.logical_and(Tensor([3319, 22],"bool"), Tensor([3319, 22],"bool"), )
paddle.logical_and(Tensor([1, 247086],"bool"), Tensor([1, 247086],"bool"), )
paddle.logical_and(Tensor([64680],"bool"), Tensor([64680],"bool"), )
paddle.logical_and(Tensor([3672, 16],"bool"), Tensor([3672, 16],"bool"), )
paddle.logical_and(Tensor([2923, 22],"bool"), Tensor([2923, 22],"bool"), )
paddle.logical_and(Tensor([194560],"bool"), Tensor([194560],"bool"), )
paddle.logical_and(Tensor([2002, 25],"bool"), Tensor([2002, 25],"bool"), )
paddle.logical_and(Tensor([74520],"bool"), Tensor([74520],"bool"), )
paddle.logical_and(Tensor([60390],"bool"), Tensor([60390],"bool"), )
paddle.logical_and(Tensor([3523, 31],"bool"), Tensor([3523, 31],"bool"), )
paddle.logical_and(Tensor([1, 88560],"bool"), Tensor([1, 88560],"bool"), )
paddle.logical_and(Tensor([2, 73500],"bool"), Tensor([2, 73500],"bool"), )
paddle.logical_and(Tensor([3002, 17],"bool"), Tensor([3002, 17],"bool"), )
paddle.logical_and(Tensor([1, 75375],"bool"), Tensor([1, 75375],"bool"), )
paddle.logical_and(Tensor([51030],"bool"), Tensor([51030],"bool"), )
paddle.logical_and(Tensor([2769, 23],"bool"), Tensor([2769, 23],"bool"), )
paddle.logical_and(Tensor([2160, 54],"bool"), Tensor([2160, 54],"bool"), )
paddle.logical_and(Tensor([77220],"bool"), Tensor([77220],"bool"), )
paddle.logical_and(Tensor([4057, 15],"bool"), Tensor([4057, 15],"bool"), )
paddle.logical_and(Tensor([2017, 33],"bool"), Tensor([2017, 33],"bool"), )
paddle.logical_and(Tensor([2, 57240],"bool"), Tensor([2, 57240],"bool"), )
paddle.logical_and(Tensor([1, 57600],"bool"), Tensor([1, 57600],"bool"), )
paddle.logical_and(Tensor([2670, 48],"bool"), Tensor([2670, 48],"bool"), )
paddle.logical_and(Tensor([3152, 29],"bool"), Tensor([3152, 29],"bool"), )
paddle.logical_and(Tensor([6, 54000],"bool"), Tensor([6, 54000],"bool"), )
paddle.logical_and(Tensor([55080],"bool"), Tensor([55080],"bool"), )
paddle.logical_and(Tensor([1, 57960],"bool"), Tensor([1, 57960],"bool"), )
paddle.logical_and(Tensor([3512, 35],"bool"), Tensor([3512, 35],"bool"), )
paddle.logical_and(Tensor([4571, 12],"bool"), Tensor([4571, 12],"bool"), )
paddle.logical_and(Tensor([1, 340686],"bool"), Tensor([1, 340686],"bool"), )
paddle.logical_and(Tensor([1, 78750],"bool"), Tensor([1, 78750],"bool"), )
paddle.logical_and(Tensor([4, 68625],"bool"), Tensor([4, 68625],"bool"), )
paddle.logical_and(Tensor([1, 66360],"bool"), Tensor([1, 66360],"bool"), )
paddle.logical_and(Tensor([1, 253728],"bool"), Tensor([1, 253728],"bool"), )
paddle.logical_and(Tensor([2125, 27],"bool"), Tensor([2125, 27],"bool"), )
paddle.logical_and(Tensor([3106, 31],"bool"), Tensor([3106, 31],"bool"), )
paddle.logical_and(Tensor([75840],"bool"), Tensor([75840],"bool"), )
paddle.logical_and(Tensor([6, 78120],"bool"), Tensor([6, 78120],"bool"), )
paddle.logical_and(Tensor([198249],"bool"), Tensor([198249],"bool"), )
paddle.logical_and(Tensor([2193, 29],"bool"), Tensor([2193, 29],"bool"), )
paddle.logical_and(Tensor([1, 75840],"bool"), Tensor([1, 75840],"bool"), )
paddle.logical_and(Tensor([3124, 58],"bool"), Tensor([3124, 58],"bool"), )
paddle.logical_and(Tensor([1935, 26],"bool"), Tensor([1935, 26],"bool"), )
paddle.logical_and(Tensor([2494, 29],"bool"), Tensor([2494, 29],"bool"), )
paddle.logical_and(Tensor([1, 76380],"bool"), Tensor([1, 76380],"bool"), )
paddle.logical_and(Tensor([2312, 28],"bool"), Tensor([2312, 28],"bool"), )
paddle.logical_and(Tensor([3691, 14],"bool"), Tensor([3691, 14],"bool"), )
paddle.logical_and(Tensor([55104],"bool"), Tensor([55104],"bool"), )
paddle.logical_and(Tensor([1893, 33],"bool"), Tensor([1893, 33],"bool"), )
paddle.logical_and(Tensor([1399, 36],"bool"), Tensor([1399, 36],"bool"), )
paddle.logical_and(Tensor([2, 242991],"bool"), Tensor([2, 242991],"bool"), )
paddle.logical_and(Tensor([2, 55755],"bool"), Tensor([2, 55755],"bool"), )
paddle.logical_and(Tensor([1, 272649],"bool"), Tensor([1, 272649],"bool"), )
paddle.logical_and(Tensor([3, 63000],"bool"), Tensor([3, 63000],"bool"), )
paddle.logical_and(Tensor([1, 208197],"bool"), Tensor([1, 208197],"bool"), )
paddle.logical_and(Tensor([2783, 24],"bool"), Tensor([2783, 24],"bool"), )
paddle.logical_and(Tensor([227919],"bool"), Tensor([227919],"bool"), )
paddle.logical_and(Tensor([3635, 95],"bool"), Tensor([3635, 95],"bool"), )
paddle.logical_and(Tensor([63720],"bool"), Tensor([63720],"bool"), )
paddle.logical_and(Tensor([2827, 27],"bool"), Tensor([2827, 27],"bool"), )
paddle.logical_and(Tensor([1, 62160],"bool"), Tensor([1, 62160],"bool"), )
paddle.logical_and(Tensor([3, 68340],"bool"), Tensor([3, 68340],"bool"), )
paddle.logical_and(Tensor([3, 83220],"bool"), Tensor([3, 83220],"bool"), )
paddle.logical_and(Tensor([2061, 99],"bool"), Tensor([2061, 99],"bool"), )
paddle.logical_and(Tensor([1, 365211],"bool"), Tensor([1, 365211],"bool"), )
paddle.logical_and(Tensor([6424, 11],"bool"), Tensor([6424, 11],"bool"), )
paddle.logical_and(Tensor([2, 56250],"bool"), Tensor([2, 56250],"bool"), )
paddle.logical_and(Tensor([3, 88560],"bool"), Tensor([3, 88560],"bool"), )
paddle.logical_and(Tensor([2, 79935],"bool"), Tensor([2, 79935],"bool"), )
paddle.logical_and(Tensor([2452, 39],"bool"), Tensor([2452, 39],"bool"), )
paddle.logical_and(Tensor([55845],"bool"), Tensor([55845],"bool"), )
paddle.logical_and(Tensor([4276, 19],"bool"), Tensor([4276, 19],"bool"), )
paddle.logical_and(Tensor([1542, 37],"bool"), Tensor([1542, 37],"bool"), )
paddle.logical_and(Tensor([3653, 14],"bool"), Tensor([3653, 14],"bool"), )
paddle.logical_and(Tensor([1, 91980],"bool"), Tensor([1, 91980],"bool"), )
paddle.logical_and(Tensor([3084, 18],"bool"), Tensor([3084, 18],"bool"), )
paddle.logical_and(Tensor([3596, 21],"bool"), Tensor([3596, 21],"bool"), )
paddle.logical_and(Tensor([3979, 13],"bool"), Tensor([3979, 13],"bool"), )
paddle.logical_and(Tensor([1, 68625],"bool"), Tensor([1, 68625],"bool"), )
paddle.logical_and(Tensor([1, 369303],"bool"), Tensor([1, 369303],"bool"), )
paddle.logical_and(Tensor([71610],"bool"), Tensor([71610],"bool"), )
paddle.logical_and(Tensor([2, 74550],"bool"), Tensor([2, 74550],"bool"), )
paddle.logical_and(Tensor([2, 62400],"bool"), Tensor([2, 62400],"bool"), )
paddle.logical_and(Tensor([90720],"bool"), Tensor([90720],"bool"), )
paddle.logical_and(Tensor([2546, 48],"bool"), Tensor([2546, 48],"bool"), )
paddle.logical_and(Tensor([4, 57960],"bool"), Tensor([4, 57960],"bool"), )
paddle.logical_and(Tensor([5221, 30],"bool"), Tensor([5221, 30],"bool"), )
paddle.logical_and(Tensor([3002, 27],"bool"), Tensor([3002, 27],"bool"), )
paddle.logical_and(Tensor([3359, 54],"bool"), Tensor([3359, 54],"bool"), )
paddle.logical_and(Tensor([15083, 7],"bool"), Tensor([15083, 7],"bool"), )
paddle.logical_and(Tensor([2549, 22],"bool"), Tensor([2549, 22],"bool"), )
paddle.logical_and(Tensor([2278, 36],"bool"), Tensor([2278, 36],"bool"), )
paddle.logical_and(Tensor([3, 47610],"bool"), Tensor([3, 47610],"bool"), )
paddle.logical_and(Tensor([230202],"bool"), Tensor([230202],"bool"), )
paddle.logical_and(Tensor([6, 56250],"bool"), Tensor([6, 56250],"bool"), )
paddle.logical_and(Tensor([6, 68400],"bool"), Tensor([6, 68400],"bool"), )
paddle.logical_and(Tensor([129792],"bool"), Tensor([129792],"bool"), )
paddle.logical_and(Tensor([3, 66960],"bool"), Tensor([3, 66960],"bool"), )
paddle.logical_and(Tensor([3270, 53],"bool"), Tensor([3270, 53],"bool"), )
paddle.logical_and(Tensor([3, 61200],"bool"), Tensor([3, 61200],"bool"), )
paddle.logical_and(Tensor([184140],"bool"), Tensor([184140],"bool"), )
paddle.logical_and(Tensor([4, 50400],"bool"), Tensor([4, 50400],"bool"), )
paddle.logical_and(Tensor([3012, 18],"bool"), Tensor([3012, 18],"bool"), )
paddle.logical_and(Tensor([1, 55890],"bool"), Tensor([1, 55890],"bool"), )
paddle.logical_and(Tensor([76260],"bool"), Tensor([76260],"bool"), )
paddle.logical_and(Tensor([3022, 25],"bool"), Tensor([3022, 25],"bool"), )
paddle.logical_and(Tensor([5685, 14],"bool"), Tensor([5685, 14],"bool"), )
paddle.logical_and(Tensor([2381, 27],"bool"), Tensor([2381, 27],"bool"), )
paddle.logical_and(Tensor([1, 204624],"bool"), Tensor([1, 204624],"bool"), )
paddle.logical_and(Tensor([1, 60300],"bool"), Tensor([1, 60300],"bool"), )
paddle.logical_and(Tensor([7, 56250],"bool"), Tensor([7, 56250],"bool"), )
paddle.logical_and(Tensor([174080],"bool"), Tensor([174080],"bool"), )
paddle.logical_and(Tensor([1, 408177],"bool"), Tensor([1, 408177],"bool"), )
paddle.logical_and(Tensor([1, 79380],"bool"), Tensor([1, 79380],"bool"), )
paddle.logical_and(Tensor([4631, 12],"bool"), Tensor([4631, 12],"bool"), )
paddle.logical_and(Tensor([2125, 28],"bool"), Tensor([2125, 28],"bool"), )
paddle.logical_and(Tensor([199680],"bool"), Tensor([199680],"bool"), )
paddle.logical_and(Tensor([2205, 24],"bool"), Tensor([2205, 24],"bool"), )
paddle.logical_and(Tensor([1, 388740],"bool"), Tensor([1, 388740],"bool"), )
paddle.logical_and(Tensor([1983, 30],"bool"), Tensor([1983, 30],"bool"), )
paddle.logical_and(Tensor([2690, 26],"bool"), Tensor([2690, 26],"bool"), )
paddle.logical_and(Tensor([75330],"bool"), Tensor([75330],"bool"), )
paddle.logical_and(Tensor([56430],"bool"), Tensor([56430],"bool"), )
paddle.logical_and(Tensor([61065],"bool"), Tensor([61065],"bool"), )
paddle.logical_and(Tensor([1, 301302],"bool"), Tensor([1, 301302],"bool"), )
paddle.logical_and(Tensor([293622],"bool"), Tensor([293622],"bool"), )
paddle.logical_and(Tensor([1, 331722],"bool"), Tensor([1, 331722],"bool"), )
paddle.logical_and(Tensor([63000],"bool"), Tensor([63000],"bool"), )
paddle.logical_and(Tensor([220992],"bool"), Tensor([220992],"bool"), )
paddle.logical_and(Tensor([7, 58320],"bool"), Tensor([7, 58320],"bool"), )
paddle.logical_and(Tensor([2, 200022],"bool"), Tensor([2, 200022],"bool"), )
paddle.logical_and(Tensor([6, 58320],"bool"), Tensor([6, 58320],"bool"), )
paddle.logical_and(Tensor([128000],"bool"), Tensor([128000],"bool"), )
paddle.logical_and(Tensor([5, 71610],"bool"), Tensor([5, 71610],"bool"), )
paddle.logical_and(Tensor([1, 55200],"bool"), Tensor([1, 55200],"bool"), )
paddle.logical_and(Tensor([2517, 27],"bool"), Tensor([2517, 27],"bool"), )
paddle.logical_and(Tensor([2, 202572],"bool"), Tensor([2, 202572],"bool"), )
paddle.logical_and(Tensor([2550, 34],"bool"), Tensor([2550, 34],"bool"), )
paddle.logical_and(Tensor([331452],"bool"), Tensor([331452],"bool"), )
paddle.logical_and(Tensor([4302, 19],"bool"), Tensor([4302, 19],"bool"), )
paddle.logical_and(Tensor([1, 73500],"bool"), Tensor([1, 73500],"bool"), )
paddle.logical_and(Tensor([3, 47520],"bool"), Tensor([3, 47520],"bool"), )
paddle.logical_and(Tensor([209664],"bool"), Tensor([209664],"bool"), )
paddle.logical_and(Tensor([223827],"bool"), Tensor([223827],"bool"), )
paddle.logical_and(Tensor([5, 64605],"bool"), Tensor([5, 64605],"bool"), )
paddle.logical_and(Tensor([3, 57285],"bool"), Tensor([3, 57285],"bool"), )
paddle.logical_and(Tensor([73365],"bool"), Tensor([73365],"bool"), )
paddle.logical_and(Tensor([2809, 21],"bool"), Tensor([2809, 21],"bool"), )
paddle.logical_and(Tensor([1912, 34],"bool"), Tensor([1912, 34],"bool"), )
paddle.logical_and(Tensor([3598, 16],"bool"), Tensor([3598, 16],"bool"), )
paddle.logical_and(Tensor([5, 52560],"bool"), Tensor([5, 52560],"bool"), )
paddle.logical_and(Tensor([4150, 17],"bool"), Tensor([4150, 17],"bool"), )
paddle.logical_and(Tensor([73920],"bool"), Tensor([73920],"bool"), )
paddle.logical_and(Tensor([2, 64320],"bool"), Tensor([2, 64320],"bool"), )
paddle.logical_and(Tensor([3687, 22],"bool"), Tensor([3687, 22],"bool"), )
paddle.logical_and(Tensor([2075, 26],"bool"), Tensor([2075, 26],"bool"), )
paddle.logical_and(Tensor([322272],"bool"), Tensor([322272],"bool"), )
paddle.logical_and(Tensor([2, 234804],"bool"), Tensor([2, 234804],"bool"), )
paddle.logical_and(Tensor([4082, 14],"bool"), Tensor([4082, 14],"bool"), )
paddle.logical_and(Tensor([2919, 18],"bool"), Tensor([2919, 18],"bool"), )
paddle.logical_and(Tensor([1, 63315],"bool"), Tensor([1, 63315],"bool"), )
paddle.logical_and(Tensor([3239, 32],"bool"), Tensor([3239, 32],"bool"), )
paddle.logical_and(Tensor([4605, 17],"bool"), Tensor([4605, 17],"bool"), )
paddle.logical_and(Tensor([354501],"bool"), Tensor([354501],"bool"), )
paddle.logical_and(Tensor([90060],"bool"), Tensor([90060],"bool"), )
paddle.logical_and(Tensor([10, 49680],"bool"), Tensor([10, 49680],"bool"), )
paddle.logical_and(Tensor([8295, 9],"bool"), Tensor([8295, 9],"bool"), )
paddle.logical_and(Tensor([57600],"bool"), Tensor([57600],"bool"), )
paddle.logical_and(Tensor([3, 77025],"bool"), Tensor([3, 77025],"bool"), )
paddle.logical_and(Tensor([2743, 21],"bool"), Tensor([2743, 21],"bool"), )
paddle.logical_and(Tensor([2136, 36],"bool"), Tensor([2136, 36],"bool"), )
paddle.logical_and(Tensor([1, 325113],"bool"), Tensor([1, 325113],"bool"), )
paddle.logical_and(Tensor([2520, 22],"bool"), Tensor([2520, 22],"bool"), )
paddle.logical_and(Tensor([2568, 71],"bool"), Tensor([2568, 71],"bool"), )
paddle.logical_and(Tensor([1, 242991],"bool"), Tensor([1, 242991],"bool"), )
paddle.logical_and(Tensor([9, 39690],"bool"), Tensor([9, 39690],"bool"), )
paddle.logical_and(Tensor([68040],"bool"), Tensor([68040],"bool"), )
paddle.logical_and(Tensor([4165, 17],"bool"), Tensor([4165, 17],"bool"), )
paddle.logical_and(Tensor([2, 54270],"bool"), Tensor([2, 54270],"bool"), )
paddle.logical_and(Tensor([4281, 19],"bool"), Tensor([4281, 19],"bool"), )
paddle.logical_and(Tensor([1, 262194],"bool"), Tensor([1, 262194],"bool"), )
paddle.logical_and(Tensor([2924, 25],"bool"), Tensor([2924, 25],"bool"), )
paddle.logical_and(Tensor([1326, 77],"bool"), Tensor([1326, 77],"bool"), )
paddle.logical_and(Tensor([1, 55440],"bool"), Tensor([1, 55440],"bool"), )
paddle.logical_and(Tensor([1, 331452],"bool"), Tensor([1, 331452],"bool"), )
paddle.logical_and(Tensor([7, 64320],"bool"), Tensor([7, 64320],"bool"), )
paddle.logical_and(Tensor([4789, 24],"bool"), Tensor([4789, 24],"bool"), )
paddle.logical_and(Tensor([278562],"bool"), Tensor([278562],"bool"), )
paddle.logical_and(Tensor([4, 73365],"bool"), Tensor([4, 73365],"bool"), )
paddle.logical_and(Tensor([1, 322245],"bool"), Tensor([1, 322245],"bool"), )
paddle.logical_and(Tensor([3338, 19],"bool"), Tensor([3338, 19],"bool"), )
paddle.logical_and(Tensor([1, 79935],"bool"), Tensor([1, 79935],"bool"), )
paddle.logical_and(Tensor([3, 66150],"bool"), Tensor([3, 66150],"bool"), )
paddle.logical_and(Tensor([2577, 23],"bool"), Tensor([2577, 23],"bool"), )
paddle.logical_and(Tensor([1, 319200],"bool"), Tensor([1, 319200],"bool"), )
paddle.logical_and(Tensor([2938, 18],"bool"), Tensor([2938, 18],"bool"), )
paddle.logical_and(Tensor([75056],"bool"), Tensor([75056],"bool"), )
paddle.logical_and(Tensor([5, 70350],"bool"), Tensor([5, 70350],"bool"), )
paddle.logical_and(Tensor([70560],"bool"), Tensor([70560],"bool"), )
paddle.logical_and(Tensor([2512, 21],"bool"), Tensor([2512, 21],"bool"), )
paddle.logical_and(Tensor([3408, 19],"bool"), Tensor([3408, 19],"bool"), )
paddle.logical_and(Tensor([4, 56640],"bool"), Tensor([4, 56640],"bool"), )
paddle.logical_and(Tensor([75615],"bool"), Tensor([75615],"bool"), )
paddle.logical_and(Tensor([3708, 38],"bool"), Tensor([3708, 38],"bool"), )
paddle.logical_and(Tensor([138120],"bool"), Tensor([138120],"bool"), )
paddle.logical_and(Tensor([3025, 17],"bool"), Tensor([3025, 17],"bool"), )
paddle.logical_and(Tensor([86528],"bool"), Tensor([86528],"bool"), )
paddle.logical_and(Tensor([1, 68340],"bool"), Tensor([1, 68340],"bool"), )
paddle.logical_and(Tensor([5, 69345],"bool"), Tensor([5, 69345],"bool"), )
paddle.logical_and(Tensor([3, 38940],"bool"), Tensor([3, 38940],"bool"), )
paddle.logical_and(Tensor([5634, 9],"bool"), Tensor([5634, 9],"bool"), )
paddle.logical_and(Tensor([7, 44520],"bool"), Tensor([7, 44520],"bool"), )
paddle.logical_and(Tensor([1, 69345],"bool"), Tensor([1, 69345],"bool"), )
paddle.logical_and(Tensor([56280],"bool"), Tensor([56280],"bool"), )
paddle.logical_and(Tensor([2, 214848],"bool"), Tensor([2, 214848],"bool"), )
paddle.logical_and(Tensor([2915, 42],"bool"), Tensor([2915, 42],"bool"), )
paddle.logical_and(Tensor([74250],"bool"), Tensor([74250],"bool"), )
paddle.logical_and(Tensor([239382],"bool"), Tensor([239382],"bool"), )
paddle.logical_and(Tensor([1, 68310],"bool"), Tensor([1, 68310],"bool"), )
paddle.logical_and(Tensor([1, 345618],"bool"), Tensor([1, 345618],"bool"), )
paddle.logical_and(Tensor([2, 69030],"bool"), Tensor([2, 69030],"bool"), )
paddle.logical_and(Tensor([83070],"bool"), Tensor([83070],"bool"), )
paddle.logical_and(Tensor([3, 51840],"bool"), Tensor([3, 51840],"bool"), )
paddle.logical_and(Tensor([1535, 51],"bool"), Tensor([1535, 51],"bool"), )
paddle.logical_and(Tensor([219453],"bool"), Tensor([219453],"bool"), )
paddle.logical_and(Tensor([1, 291555],"bool"), Tensor([1, 291555],"bool"), )
paddle.logical_and(Tensor([356541],"bool"), Tensor([356541],"bool"), )
paddle.logical_and(Tensor([4, 49680],"bool"), Tensor([4, 49680],"bool"), )
paddle.logical_and(Tensor([3, 64350],"bool"), Tensor([3, 64350],"bool"), )
paddle.logical_and(Tensor([3, 50250],"bool"), Tensor([3, 50250],"bool"), )
paddle.logical_and(Tensor([4628, 11],"bool"), Tensor([4628, 11],"bool"), )
paddle.logical_and(Tensor([1, 295647],"bool"), Tensor([1, 295647],"bool"), )
paddle.logical_and(Tensor([4684, 14],"bool"), Tensor([4684, 14],"bool"), )
paddle.logical_and(Tensor([6678, 8],"bool"), Tensor([6678, 8],"bool"), )
paddle.logical_and(Tensor([1, 252195],"bool"), Tensor([1, 252195],"bool"), )
paddle.logical_and(Tensor([379050],"bool"), Tensor([379050],"bool"), )
paddle.logical_and(Tensor([4777, 15],"bool"), Tensor([4777, 15],"bool"), )
paddle.logical_and(Tensor([1, 184140],"bool"), Tensor([1, 184140],"bool"), )
paddle.logical_and(Tensor([7, 67335],"bool"), Tensor([7, 67335],"bool"), )
paddle.logical_and(Tensor([1, 322272],"bool"), Tensor([1, 322272],"bool"), )
paddle.logical_and(Tensor([6, 68160],"bool"), Tensor([6, 68160],"bool"), )
paddle.logical_and(Tensor([4, 54000],"bool"), Tensor([4, 54000],"bool"), )
paddle.logical_and(Tensor([5, 61200],"bool"), Tensor([5, 61200],"bool"), )
paddle.logical_and(Tensor([55440],"bool"), Tensor([55440],"bool"), )
paddle.logical_and(Tensor([3060, 22],"bool"), Tensor([3060, 22],"bool"), )
paddle.logical_and(Tensor([2842, 19],"bool"), Tensor([2842, 19],"bool"), )
paddle.logical_and(Tensor([5, 63000],"bool"), Tensor([5, 63000],"bool"), )
paddle.logical_and(Tensor([2986, 18],"bool"), Tensor([2986, 18],"bool"), )
paddle.logical_and(Tensor([7046, 14],"bool"), Tensor([7046, 14],"bool"), )
paddle.logical_and(Tensor([7, 43560],"bool"), Tensor([7, 43560],"bool"), )
paddle.logical_and(Tensor([80400],"bool"), Tensor([80400],"bool"), )
paddle.logical_and(Tensor([1538, 43],"bool"), Tensor([1538, 43],"bool"), )
paddle.logical_and(Tensor([2721, 19],"bool"), Tensor([2721, 19],"bool"), )
paddle.logical_and(Tensor([3855, 20],"bool"), Tensor([3855, 20],"bool"), )
paddle.logical_and(Tensor([3527, 19],"bool"), Tensor([3527, 19],"bool"), )
paddle.logical_and(Tensor([60480],"bool"), Tensor([60480],"bool"), )
paddle.logical_and(Tensor([1, 75615],"bool"), Tensor([1, 75615],"bool"), )
paddle.logical_and(Tensor([2524, 29],"bool"), Tensor([2524, 29],"bool"), )
paddle.logical_and(Tensor([3146, 36],"bool"), Tensor([3146, 36],"bool"), )
paddle.logical_and(Tensor([5, 61440],"bool"), Tensor([5, 61440],"bool"), )
paddle.logical_and(Tensor([2, 39690],"bool"), Tensor([2, 39690],"bool"), )
paddle.logical_and(Tensor([4075, 13],"bool"), Tensor([4075, 13],"bool"), )
paddle.logical_and(Tensor([3030, 26],"bool"), Tensor([3030, 26],"bool"), )
paddle.logical_and(Tensor([1, 56700],"bool"), Tensor([1, 56700],"bool"), )
paddle.logical_and(Tensor([1, 56280],"bool"), Tensor([1, 56280],"bool"), )
paddle.logical_and(Tensor([4148, 34],"bool"), Tensor([4148, 34],"bool"), )
paddle.logical_and(Tensor([4093, 22],"bool"), Tensor([4093, 22],"bool"), )
paddle.logical_and(Tensor([3072, 42],"bool"), Tensor([3072, 42],"bool"), )
paddle.logical_and(Tensor([1, 314595],"bool"), Tensor([1, 314595],"bool"), )
paddle.logical_and(Tensor([4, 56430],"bool"), Tensor([4, 56430],"bool"), )
paddle.logical_and(Tensor([3, 75075],"bool"), Tensor([3, 75075],"bool"), )
paddle.logical_and(Tensor([6, 67500],"bool"), Tensor([6, 67500],"bool"), )
paddle.logical_and(Tensor([1668, 31],"bool"), Tensor([1668, 31],"bool"), )
paddle.logical_and(Tensor([5, 75615],"bool"), Tensor([5, 75615],"bool"), )
paddle.logical_and(Tensor([3127, 26],"bool"), Tensor([3127, 26],"bool"), )
paddle.logical_and(Tensor([2, 49680],"bool"), Tensor([2, 49680],"bool"), )
paddle.logical_and(Tensor([182400],"bool"), Tensor([182400],"bool"), )
paddle.logical_and(Tensor([2, 43560],"bool"), Tensor([2, 43560],"bool"), )
paddle.logical_and(Tensor([3679, 15],"bool"), Tensor([3679, 15],"bool"), )
paddle.logical_and(Tensor([2382, 21],"bool"), Tensor([2382, 21],"bool"), )
paddle.logical_and(Tensor([2734, 46],"bool"), Tensor([2734, 46],"bool"), )
paddle.logical_and(Tensor([1, 283167],"bool"), Tensor([1, 283167],"bool"), )
paddle.logical_and(Tensor([2090, 27],"bool"), Tensor([2090, 27],"bool"), )
paddle.logical_and(Tensor([2, 79380],"bool"), Tensor([2, 79380],"bool"), )
paddle.logical_and(Tensor([2049, 32],"bool"), Tensor([2049, 32],"bool"), )
paddle.logical_and(Tensor([2, 42780],"bool"), Tensor([2, 42780],"bool"), )
paddle.logical_and(Tensor([1, 191835],"bool"), Tensor([1, 191835],"bool"), )
paddle.logical_and(Tensor([279300],"bool"), Tensor([279300],"bool"), )
paddle.logical_and(Tensor([2350, 26],"bool"), Tensor([2350, 26],"bool"), )
paddle.logical_and(Tensor([2450, 21],"bool"), Tensor([2450, 21],"bool"), )
paddle.logical_and(Tensor([3, 51750],"bool"), Tensor([3, 51750],"bool"), )
paddle.logical_and(Tensor([68985],"bool"), Tensor([68985],"bool"), )
paddle.logical_and(Tensor([262194],"bool"), Tensor([262194],"bool"), )
paddle.logical_and(Tensor([198912],"bool"), Tensor([198912],"bool"), )
paddle.logical_and(Tensor([1, 78660],"bool"), Tensor([1, 78660],"bool"), )
paddle.logical_and(Tensor([51168],"bool"), Tensor([51168],"bool"), )
paddle.logical_and(Tensor([3288, 36],"bool"), Tensor([3288, 36],"bool"), )
paddle.logical_and(Tensor([3, 75030],"bool"), Tensor([3, 75030],"bool"), )
paddle.logical_and(Tensor([3542, 20],"bool"), Tensor([3542, 20],"bool"), )
paddle.logical_and(Tensor([6, 75840],"bool"), Tensor([6, 75840],"bool"), )
paddle.logical_and(Tensor([2743, 24],"bool"), Tensor([2743, 24],"bool"), )
paddle.logical_and(Tensor([168795],"bool"), Tensor([168795],"bool"), )
paddle.logical_and(Tensor([5, 79695],"bool"), Tensor([5, 79695],"bool"), )
paddle.logical_and(Tensor([369303],"bool"), Tensor([369303],"bool"), )
paddle.logical_and(Tensor([1605, 44],"bool"), Tensor([1605, 44],"bool"), )
paddle.logical_and(Tensor([2465, 22],"bool"), Tensor([2465, 22],"bool"), )
paddle.logical_and(Tensor([7, 50250],"bool"), Tensor([7, 50250],"bool"), )
paddle.logical_and(Tensor([2, 70875],"bool"), Tensor([2, 70875],"bool"), )
paddle.logical_and(Tensor([2, 77490],"bool"), Tensor([2, 77490],"bool"), )
paddle.logical_and(Tensor([3140, 98],"bool"), Tensor([3140, 98],"bool"), )
paddle.logical_and(Tensor([2, 78120],"bool"), Tensor([2, 78120],"bool"), )
paddle.logical_and(Tensor([2, 71100],"bool"), Tensor([2, 71100],"bool"), )
paddle.logical_and(Tensor([3185, 19],"bool"), Tensor([3185, 19],"bool"), )
paddle.logical_and(Tensor([3, 49680],"bool"), Tensor([3, 49680],"bool"), )
paddle.logical_and(Tensor([1, 313038],"bool"), Tensor([1, 313038],"bool"), )
paddle.logical_and(Tensor([82080],"bool"), Tensor([82080],"bool"), )
paddle.logical_and(Tensor([4786, 16],"bool"), Tensor([4786, 16],"bool"), )
paddle.logical_and(Tensor([1, 61305],"bool"), Tensor([1, 61305],"bool"), )
paddle.logical_and(Tensor([2338, 26],"bool"), Tensor([2338, 26],"bool"), )
paddle.logical_and(Tensor([8, 51840],"bool"), Tensor([8, 51840],"bool"), )
paddle.logical_and(Tensor([70875],"bool"), Tensor([70875],"bool"), )
paddle.logical_and(Tensor([2, 61200],"bool"), Tensor([2, 61200],"bool"), )
paddle.logical_and(Tensor([2, 83220],"bool"), Tensor([2, 83220],"bool"), )
paddle.logical_and(Tensor([5, 85320],"bool"), Tensor([5, 85320],"bool"), )
paddle.logical_and(Tensor([2, 222012],"bool"), Tensor([2, 222012],"bool"), )
paddle.logical_and(Tensor([5, 67200],"bool"), Tensor([5, 67200],"bool"), )
paddle.logical_and(Tensor([7, 44640],"bool"), Tensor([7, 44640],"bool"), )
paddle.logical_and(Tensor([1, 261888],"bool"), Tensor([1, 261888],"bool"), )
paddle.logical_and(Tensor([3307, 20],"bool"), Tensor([3307, 20],"bool"), )
paddle.logical_and(Tensor([4, 72360],"bool"), Tensor([4, 72360],"bool"), )
paddle.logical_and(Tensor([60840],"bool"), Tensor([60840],"bool"), )
paddle.logical_and(Tensor([4099, 19],"bool"), Tensor([4099, 19],"bool"), )
paddle.logical_and(Tensor([50220],"bool"), Tensor([50220],"bool"), )
paddle.logical_and(Tensor([160512],"bool"), Tensor([160512],"bool"), )
paddle.logical_and(Tensor([2379, 30],"bool"), Tensor([2379, 30],"bool"), )
paddle.logical_and(Tensor([2174, 23],"bool"), Tensor([2174, 23],"bool"), )
paddle.logical_and(Tensor([50400],"bool"), Tensor([50400],"bool"), )
paddle.logical_and(Tensor([1, 268560],"bool"), Tensor([1, 268560],"bool"), )
paddle.logical_and(Tensor([1, 52080],"bool"), Tensor([1, 52080],"bool"), )
paddle.logical_and(Tensor([2, 241731],"bool"), Tensor([2, 241731],"bool"), )
paddle.logical_and(Tensor([1, 244800],"bool"), Tensor([1, 244800],"bool"), )
paddle.logical_and(Tensor([2985, 30],"bool"), Tensor([2985, 30],"bool"), )
paddle.logical_and(Tensor([2541, 28],"bool"), Tensor([2541, 28],"bool"), )
paddle.logical_and(Tensor([1360, 43],"bool"), Tensor([1360, 43],"bool"), )
paddle.logical_and(Tensor([2142, 25],"bool"), Tensor([2142, 25],"bool"), )
paddle.logical_and(Tensor([1, 257796],"bool"), Tensor([1, 257796],"bool"), )
paddle.logical_and(Tensor([74370],"bool"), Tensor([74370],"bool"), )
paddle.logical_and(Tensor([2, 220992],"bool"), Tensor([2, 220992],"bool"), )
paddle.logical_and(Tensor([1, 251676],"bool"), Tensor([1, 251676],"bool"), )
paddle.logical_and(Tensor([134784],"bool"), Tensor([134784],"bool"), )
paddle.logical_and(Tensor([155648],"bool"), Tensor([155648],"bool"), )
paddle.logical_and(Tensor([2577, 25],"bool"), Tensor([2577, 25],"bool"), )
paddle.logical_and(Tensor([7, 48300],"bool"), Tensor([7, 48300],"bool"), )
paddle.logical_and(Tensor([68000],"bool"), Tensor([68000],"bool"), )
paddle.logical_and(Tensor([1, 67335],"bool"), Tensor([1, 67335],"bool"), )
paddle.logical_and(Tensor([2, 61380],"bool"), Tensor([2, 61380],"bool"), )
paddle.logical_and(Tensor([294624],"bool"), Tensor([294624],"bool"), )
paddle.logical_and(Tensor([2635, 24],"bool"), Tensor([2635, 24],"bool"), )
paddle.logical_and(Tensor([1, 171888],"bool"), Tensor([1, 171888],"bool"), )
paddle.logical_and(Tensor([2, 60480],"bool"), Tensor([2, 60480],"bool"), )
paddle.logical_and(Tensor([3598, 43],"bool"), Tensor([3598, 43],"bool"), )
paddle.logical_and(Tensor([1, 75330],"bool"), Tensor([1, 75330],"bool"), )
paddle.logical_and(Tensor([1126, 54],"bool"), Tensor([1126, 54],"bool"), )
paddle.logical_and(Tensor([1, 55755],"bool"), Tensor([1, 55755],"bool"), )
paddle.logical_and(Tensor([81180],"bool"), Tensor([81180],"bool"), )
paddle.logical_and(Tensor([204672],"bool"), Tensor([204672],"bool"), )
paddle.logical_and(Tensor([2, 75615],"bool"), Tensor([2, 75615],"bool"), )
paddle.logical_and(Tensor([1, 77625],"bool"), Tensor([1, 77625],"bool"), )
paddle.logical_and(Tensor([134400],"bool"), Tensor([134400],"bool"), )
paddle.logical_and(Tensor([1, 359613],"bool"), Tensor([1, 359613],"bool"), )
paddle.logical_and(Tensor([8, 57000],"bool"), Tensor([8, 57000],"bool"), )
paddle.logical_and(Tensor([1, 75075],"bool"), Tensor([1, 75075],"bool"), )
paddle.logical_and(Tensor([4, 72270],"bool"), Tensor([4, 72270],"bool"), )
paddle.logical_and(Tensor([2, 58800],"bool"), Tensor([2, 58800],"bool"), )
paddle.logical_and(Tensor([2906, 30],"bool"), Tensor([2906, 30],"bool"), )
paddle.logical_and(Tensor([3701, 15],"bool"), Tensor([3701, 15],"bool"), )
paddle.logical_not(Tensor([4562, 135],"bool"), )
paddle.logical_not(Tensor([10, 1, 76, 137],"bool"), )
paddle.logical_not(Tensor([30, 1, 128, 65],"bool"), )
paddle.logical_not(Tensor([7, 1, 148, 148],"bool"), )
paddle.logical_not(Tensor([2720, 80],"bool"), )
paddle.logical_not(Tensor([2280, 80],"bool"), )
paddle.logical_not(Tensor([10, 1, 137, 105],"bool"), )
paddle.logical_not(Tensor([30, 1, 129, 129],"bool"), )
paddle.logical_not(Tensor([10, 1, 124, 129],"bool"), )
paddle.logical_not(Tensor([10, 1, 167, 89],"bool"), )
paddle.logical_not(Tensor([10, 1, 81, 129],"bool"), )
paddle.logical_not(Tensor([10, 1, 110, 105],"bool"), )
paddle.logical_not(Tensor([7, 1, 130, 130],"bool"), )
paddle.logical_not(Tensor([8, 1, 170, 113],"bool"), )
paddle.logical_not(Tensor([7, 1, 132, 153],"bool"), )
paddle.logical_not(Tensor([6, 1, 168, 168],"bool"), )
paddle.logical_not(Tensor([8, 1, 128, 121],"bool"), )
paddle.logical_not(Tensor([8, 1, 125, 125],"bool"), )
paddle.logical_not(Tensor([8, 1, 122, 113],"bool"), )
paddle.logical_not(Tensor([10, 1, 108, 97],"bool"), )
paddle.logical_not(Tensor([10, 1, 106, 105],"bool"), )
paddle.logical_not(Tensor([10, 1, 90, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 166, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 99, 129],"bool"), )
paddle.logical_not(Tensor([2584, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 169, 37],"bool"), )
paddle.logical_not(Tensor([7, 1, 171, 171],"bool"), )
paddle.logical_not(Tensor([8736, 80],"bool"), )
paddle.logical_not(Tensor([6, 1, 142, 142],"bool"), )
paddle.logical_not(Tensor([10, 1, 138, 97],"bool"), )
paddle.logical_not(Tensor([8, 1, 129, 121],"bool"), )
paddle.logical_not(Tensor([10, 1, 143, 89],"bool"), )
paddle.logical_not(Tensor([10, 1, 134, 97],"bool"), )
paddle.logical_not(Tensor([10, 1, 113, 113],"bool"), )
paddle.logical_not(Tensor([30, 1, 94, 94],"bool"), )
paddle.logical_not(Tensor([3162, 77],"bool"), )
paddle.logical_not(Tensor([30, 1, 83, 83],"bool"), )
paddle.logical_not(Tensor([8, 1, 287, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 254, 113],"bool"), )
paddle.logical_not(Tensor([4, 1, 176, 176],"bool"), )
paddle.logical_not(Tensor([8, 1, 180, 180],"bool"), )
paddle.logical_not(Tensor([10, 1, 123, 89],"bool"), )
paddle.logical_not(Tensor([30, 1, 79, 57],"bool"), )
paddle.logical_not(Tensor([8, 1, 148, 113],"bool"), )
paddle.logical_not(Tensor([2966, 35],"bool"), )
paddle.logical_not(Tensor([10, 1, 131, 97],"bool"), )
paddle.logical_not(Tensor([7, 1, 119, 153],"bool"), )
paddle.logical_not(Tensor([30, 1, 126, 81],"bool"), )
paddle.logical_not(Tensor([8, 1, 136, 136],"bool"), )
paddle.logical_not(Tensor([5112, 188],"bool"), )
paddle.logical_not(Tensor([10, 1, 92, 129],"bool"), )
paddle.logical_not(Tensor([3523, 31],"bool"), )
paddle.logical_not(Tensor([8, 1, 260, 260],"bool"), )
paddle.logical_not(Tensor([10, 1, 106, 137],"bool"), )
paddle.logical_not(Tensor([7, 1, 96, 153],"bool"), )
paddle.logical_not(Tensor([4375, 97],"bool"), )
paddle.logical_not(Tensor([8, 1, 139, 121],"bool"), )
paddle.logical_not(Tensor([10, 1, 178, 178],"bool"), )
paddle.logical_not(Tensor([8, 1, 240, 240],"bool"), )
paddle.logical_not(Tensor([8, 1, 135, 113],"bool"), )
paddle.logical_not(Tensor([30, 1, 222, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 241, 113],"bool"), )
paddle.logical_not(Tensor([30, 1, 100, 57],"bool"), )
paddle.logical_not(Tensor([10, 1, 131, 81],"bool"), )
paddle.logical_not(Tensor([10, 1, 139, 105],"bool"), )
paddle.logical_not(Tensor([6, 1, 138, 138],"bool"), )
paddle.logical_not(Tensor([30, 1, 172, 53],"bool"), )
paddle.logical_not(Tensor([10, 1, 111, 97],"bool"), )
paddle.logical_not(Tensor([8, 1, 219, 113],"bool"), )
paddle.logical_not(Tensor([10, 1, 141, 137],"bool"), )
paddle.logical_not(Tensor([30, 1, 293, 97],"bool"), )
paddle.logical_not(Tensor([8, 1, 120, 120],"bool"), )
paddle.logical_not(Tensor([10, 1, 160, 160],"bool"), )
paddle.logical_not(Tensor([30, 1, 91, 91],"bool"), )
paddle.logical_not(Tensor([30, 1, 175, 97],"bool"), )
paddle.logical_not(Tensor([4562, 45],"bool"), )
paddle.logical_not(Tensor([10, 1, 107, 129],"bool"), )
paddle.logical_not(Tensor([30, 1, 243, 69],"bool"), )
paddle.logical_not(Tensor([8, 1, 210, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 190, 190],"bool"), )
paddle.logical_not(Tensor([8, 1, 269, 269],"bool"), )
paddle.logical_not(Tensor([3793, 28],"bool"), )
paddle.logical_not(Tensor([8, 1, 205, 205],"bool"), )
paddle.logical_not(Tensor([8, 1, 227, 227],"bool"), )
paddle.logical_not(Tensor([8, 1, 124, 124],"bool"), )
paddle.logical_not(Tensor([10, 1, 132, 132],"bool"), )
paddle.logical_not(Tensor([10, 1, 112, 105],"bool"), )
paddle.logical_not(Tensor([10, 1, 150, 89],"bool"), )
paddle.logical_not(Tensor([8, 1, 292, 113],"bool"), )
paddle.logical_not(Tensor([10, 1, 129, 89],"bool"), )
paddle.logical_not(Tensor([10, 1, 82, 137],"bool"), )
paddle.logical_not(Tensor([8, 1, 290, 113],"bool"), )
paddle.logical_not(Tensor([6, 1, 158, 158],"bool"), )
paddle.logical_not(Tensor([7, 1, 122, 153],"bool"), )
paddle.logical_not(Tensor([10, 1, 125, 129],"bool"), )
paddle.logical_not(Tensor([30, 1, 149, 65],"bool"), )
paddle.logical_not(Tensor([10, 1, 182, 182],"bool"), )
paddle.logical_not(Tensor([9, 1, 108, 108],"bool"), )
paddle.logical_not(Tensor([10, 1, 170, 170],"bool"), )
paddle.logical_not(Tensor([6, 1, 145, 145],"bool"), )
paddle.logical_not(Tensor([30, 1, 90, 90],"bool"), )
paddle.logical_not(Tensor([10, 1, 84, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 156, 156],"bool"), )
paddle.logical_not(Tensor([10, 1, 165, 97],"bool"), )
paddle.logical_not(Tensor([8, 1, 147, 147],"bool"), )
paddle.logical_not(Tensor([8, 1, 276, 276],"bool"), )
paddle.logical_not(Tensor([8, 1, 156, 113],"bool"), )
paddle.logical_not(Tensor([10, 1, 122, 105],"bool"), )
paddle.logical_not(Tensor([10, 1, 150, 129],"bool"), )
paddle.logical_not(Tensor([8, 1, 144, 113],"bool"), )
paddle.logical_not(Tensor([10, 1, 164, 89],"bool"), )
paddle.logical_not(Tensor([8, 1, 106, 121],"bool"), )
paddle.logical_not(Tensor([8, 1, 208, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 146, 146],"bool"), )
paddle.logical_not(Tensor([10, 1, 139, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 129, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 100, 105],"bool"), )
paddle.logical_not(Tensor([8, 1, 182, 113],"bool"), )
paddle.logical_not(Tensor([3856, 39],"bool"), )
paddle.logical_not(Tensor([10, 1, 164, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 124, 105],"bool"), )
paddle.logical_not(Tensor([10, 1, 151, 151],"bool"), )
paddle.logical_not(Tensor([30, 1, 173, 73],"bool"), )
paddle.logical_not(Tensor([4, 1, 173, 173],"bool"), )
paddle.logical_not(Tensor([10, 1, 134, 137],"bool"), )
paddle.logical_not(Tensor([9, 1, 117, 117],"bool"), )
paddle.logical_not(Tensor([8, 1, 259, 113],"bool"), )
paddle.logical_not(Tensor([10, 1, 177, 137],"bool"), )
paddle.logical_not(Tensor([8, 1, 155, 113],"bool"), )
paddle.logical_not(Tensor([7, 1, 147, 153],"bool"), )
paddle.logical_not(Tensor([10, 1, 112, 97],"bool"), )
paddle.logical_not(Tensor([8, 1, 120, 121],"bool"), )
paddle.logical_not(Tensor([30, 1, 164, 113],"bool"), )
paddle.logical_not(Tensor([7, 1, 162, 153],"bool"), )
paddle.logical_not(Tensor([10, 1, 168, 89],"bool"), )
paddle.logical_not(Tensor([10, 1, 182, 137],"bool"), )
paddle.logical_not(Tensor([8, 1, 159, 159],"bool"), )
paddle.logical_not(Tensor([8, 1, 142, 142],"bool"), )
paddle.logical_not(Tensor([8, 1, 168, 168],"bool"), )
paddle.logical_not(Tensor([3060, 43],"bool"), )
paddle.logical_not(Tensor([8, 1, 116, 113],"bool"), )
paddle.logical_not(Tensor([2815, 64],"bool"), )
paddle.logical_not(Tensor([8, 1, 139, 139],"bool"), )
paddle.logical_not(Tensor([4, 1, 169, 169],"bool"), )
paddle.logical_not(Tensor([6, 1, 133, 133],"bool"), )
paddle.logical_not(Tensor([30, 1, 108, 33],"bool"), )
paddle.logical_not(Tensor([4, 1, 167, 167],"bool"), )
paddle.logical_not(Tensor([8, 1, 108, 121],"bool"), )
paddle.logical_not(Tensor([6, 1, 153, 153],"bool"), )
paddle.logical_not(Tensor([10, 1, 185, 185],"bool"), )
paddle.logical_not(Tensor([10, 1, 142, 97],"bool"), )
paddle.logical_not(Tensor([2856, 80],"bool"), )
paddle.logical_not(Tensor([8, 1, 252, 252],"bool"), )
paddle.logical_not(Tensor([1929, 90],"bool"), )
paddle.logical_not(Tensor([12464, 80],"bool"), )
paddle.logical_not(Tensor([10, 1, 170, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 117, 129],"bool"), )
paddle.logical_not(Tensor([8, 1, 140, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 161, 113],"bool"), )
paddle.logical_not(Tensor([10, 1, 180, 180],"bool"), )
paddle.logical_not(Tensor([3528, 80],"bool"), )
paddle.logical_not(Tensor([7, 1, 106, 153],"bool"), )
paddle.logical_not(Tensor([10, 1, 119, 119],"bool"), )
paddle.logical_not(Tensor([10, 1, 100, 100],"bool"), )
paddle.logical_not(Tensor([8, 1, 115, 115],"bool"), )
paddle.logical_not(Tensor([30, 1, 133, 133],"bool"), )
paddle.logical_not(Tensor([7, 1, 163, 153],"bool"), )
paddle.logical_not(Tensor([8, 1, 223, 223],"bool"), )
paddle.logical_not(Tensor([30, 1, 129, 57],"bool"), )
paddle.logical_not(Tensor([2448, 80],"bool"), )
paddle.logical_not(Tensor([7, 1, 107, 153],"bool"), )
paddle.logical_not(Tensor([8, 1, 184, 113],"bool"), )
paddle.logical_not(Tensor([3198, 55],"bool"), )
paddle.logical_not(Tensor([2218, 47],"bool"), )
paddle.logical_not(Tensor([30, 1, 151, 73],"bool"), )
paddle.logical_not(Tensor([10, 1, 163, 97],"bool"), )
paddle.logical_not(Tensor([10, 1, 141, 97],"bool"), )
paddle.logical_not(Tensor([10, 1, 130, 97],"bool"), )
paddle.logical_not(Tensor([30, 1, 104, 65],"bool"), )
paddle.logical_not(Tensor([6432, 139],"bool"), )
paddle.logical_not(Tensor([10, 1, 125, 97],"bool"), )
paddle.logical_not(Tensor([6, 1, 162, 162],"bool"), )
paddle.logical_not(Tensor([30, 1, 154, 65],"bool"), )
paddle.logical_not(Tensor([10, 1, 147, 89],"bool"), )
paddle.logical_not(Tensor([30, 1, 123, 123],"bool"), )
paddle.logical_not(Tensor([7, 1, 123, 153],"bool"), )
paddle.logical_not(Tensor([30, 1, 123, 49],"bool"), )
paddle.logical_not(Tensor([4166, 26],"bool"), )
paddle.logical_not(Tensor([10336, 80],"bool"), )
paddle.logical_not(Tensor([4609, 22],"bool"), )
paddle.logical_not(Tensor([10, 1, 152, 97],"bool"), )
paddle.logical_not(Tensor([8, 1, 121, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 235, 235],"bool"), )
paddle.logical_not(Tensor([10, 1, 130, 89],"bool"), )
paddle.logical_not(Tensor([10, 1, 175, 175],"bool"), )
paddle.logical_not(Tensor([7, 1, 166, 166],"bool"), )
paddle.logical_not(Tensor([8, 1, 275, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 258, 113],"bool"), )
paddle.logical_not(Tensor([2546, 48],"bool"), )
paddle.logical_not(Tensor([10, 1, 93, 129],"bool"), )
paddle.logical_not(Tensor([10, 1, 78, 129],"bool"), )
paddle.logical_not(Tensor([30, 1, 129, 41],"bool"), )
paddle.logical_not(Tensor([3520, 53],"bool"), )
paddle.logical_not(Tensor([10, 1, 151, 97],"bool"), )
paddle.logical_not(Tensor([7904, 80],"bool"), )
paddle.logical_not(Tensor([8, 1, 126, 126],"bool"), )
paddle.logical_not(Tensor([8, 1, 152, 152],"bool"), )
paddle.logical_not(Tensor([7, 1, 170, 153],"bool"), )
paddle.logical_not(Tensor([10, 1, 114, 97],"bool"), )
paddle.logical_not(Tensor([8, 1, 273, 273],"bool"), )
paddle.logical_not(Tensor([10, 1, 99, 105],"bool"), )
paddle.logical_not(Tensor([10, 1, 150, 150],"bool"), )
paddle.logical_not(Tensor([12096, 80],"bool"), )
paddle.logical_not(Tensor([10, 1, 102, 137],"bool"), )
paddle.logical_not(Tensor([30, 1, 144, 25],"bool"), )
paddle.logical_not(Tensor([10, 1, 145, 89],"bool"), )
paddle.logical_not(Tensor([30, 1, 144, 73],"bool"), )
paddle.logical_not(Tensor([2386, 78],"bool"), )
paddle.logical_not(Tensor([10, 1, 89, 129],"bool"), )
paddle.logical_not(Tensor([8, 1, 198, 198],"bool"), )
paddle.logical_not(Tensor([7, 1, 129, 129],"bool"), )
paddle.logical_not(Tensor([1, 1, 355, 355],"int32"), )
paddle.logical_not(Tensor([10, 1, 159, 159],"bool"), )
paddle.logical_not(Tensor([30, 1, 119, 81],"bool"), )
paddle.logical_not(Tensor([8, 1, 117, 113],"bool"), )
paddle.logical_not(Tensor([3938, 121],"bool"), )
paddle.logical_not(Tensor([10, 1, 133, 133],"bool"), )
paddle.logical_not(Tensor([10, 1, 139, 89],"bool"), )
paddle.logical_not(Tensor([30, 1, 101, 101],"bool"), )
paddle.logical_not(Tensor([10, 1, 97, 105],"bool"), )
paddle.logical_not(Tensor([7, 1, 151, 151],"bool"), )
paddle.logical_not(Tensor([30, 1, 141, 141],"bool"), )
paddle.logical_not(Tensor([8, 1, 152, 121],"bool"), )
paddle.logical_not(Tensor([8, 1, 287, 287],"bool"), )
paddle.logical_not(Tensor([10, 1, 97, 137],"bool"), )
paddle.logical_not(Tensor([30, 1, 63, 63],"bool"), )
paddle.logical_not(Tensor([7, 1, 179, 179],"bool"), )
paddle.logical_not(Tensor([8, 1, 290, 290],"bool"), )
paddle.logical_not(Tensor([8, 1, 137, 121],"bool"), )
paddle.logical_not(Tensor([9, 1, 114, 114],"bool"), )
paddle.logical_not(Tensor([8, 1, 247, 113],"bool"), )
paddle.logical_not(Tensor([10, 1, 144, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 117, 137],"bool"), )
paddle.logical_not(Tensor([7, 1, 140, 153],"bool"), )
paddle.logical_not(Tensor([12136, 80],"bool"), )
paddle.logical_not(Tensor([3849, 38],"bool"), )
paddle.logical_not(Tensor([8, 1, 151, 113],"bool"), )
paddle.logical_not(Tensor([10, 1, 143, 97],"bool"), )
paddle.logical_not(Tensor([10, 1, 154, 89],"bool"), )
paddle.logical_not(Tensor([7, 1, 120, 153],"bool"), )
paddle.logical_not(Tensor([10, 1, 134, 89],"bool"), )
paddle.logical_not(Tensor([7, 1, 131, 131],"bool"), )
paddle.logical_not(Tensor([10, 1, 102, 129],"bool"), )
paddle.logical_not(Tensor([10, 1, 145, 105],"bool"), )
paddle.logical_not(Tensor([10, 1, 134, 129],"bool"), )
paddle.logical_not(Tensor([10, 1, 126, 105],"bool"), )
paddle.logical_not(Tensor([8, 1, 136, 121],"bool"), )
paddle.logical_not(Tensor([7, 1, 117, 153],"bool"), )
paddle.logical_not(Tensor([8, 1, 213, 213],"bool"), )
paddle.logical_not(Tensor([10, 1, 120, 105],"bool"), )
paddle.logical_not(Tensor([8, 1, 131, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 133, 133],"bool"), )
paddle.logical_not(Tensor([10, 1, 181, 181],"bool"), )
paddle.logical_not(Tensor([8, 1, 261, 261],"bool"), )
paddle.logical_not(Tensor([2606, 77],"bool"), )
paddle.logical_not(Tensor([30, 1, 129, 37],"bool"), )
paddle.logical_not(Tensor([10, 1, 137, 97],"bool"), )
paddle.logical_not(Tensor([30, 1, 172, 89],"bool"), )
paddle.logical_not(Tensor([1976, 80],"bool"), )
paddle.logical_not(Tensor([7, 1, 127, 127],"bool"), )
paddle.logical_not(Tensor([7, 1, 98, 153],"bool"), )
paddle.logical_not(Tensor([8, 1, 115, 113],"bool"), )
paddle.logical_not(Tensor([30, 1, 171, 89],"bool"), )
paddle.logical_not(Tensor([10, 1, 120, 129],"bool"), )
paddle.logical_not(Tensor([8, 1, 115, 121],"bool"), )
paddle.logical_not(Tensor([8, 1, 216, 113],"bool"), )
paddle.logical_not(Tensor([30, 1, 191, 97],"bool"), )
paddle.logical_not(Tensor([10, 1, 97, 129],"bool"), )
paddle.logical_not(Tensor([7, 1, 139, 139],"bool"), )
paddle.logical_not(Tensor([8, 1, 143, 121],"bool"), )
paddle.logical_not(Tensor([7, 1, 145, 153],"bool"), )
paddle.logical_not(Tensor([10, 1, 140, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 149, 149],"bool"), )
paddle.logical_not(Tensor([7984, 14],"bool"), )
paddle.logical_not(Tensor([5, 1, 140, 145],"bool"), )
paddle.logical_not(Tensor([10, 1, 129, 97],"bool"), )
paddle.logical_not(Tensor([6, 1, 154, 154],"bool"), )
paddle.logical_not(Tensor([10, 1, 123, 123],"bool"), )
paddle.logical_not(Tensor([10, 1, 119, 97],"bool"), )
paddle.logical_not(Tensor([6, 1, 136, 136],"bool"), )
paddle.logical_not(Tensor([8, 1, 121, 121],"bool"), )
paddle.logical_not(Tensor([8, 1, 138, 113],"bool"), )
paddle.logical_not(Tensor([3157, 55],"bool"), )
paddle.logical_not(Tensor([8, 1, 181, 113],"bool"), )
paddle.logical_not(Tensor([10, 1, 86, 129],"bool"), )
paddle.logical_not(Tensor([8, 1, 239, 239],"bool"), )
paddle.logical_not(Tensor([10, 1, 121, 105],"bool"), )
paddle.logical_not(Tensor([7800, 80],"bool"), )
paddle.logical_not(Tensor([10, 1, 107, 97],"bool"), )
paddle.logical_not(Tensor([10, 1, 131, 131],"bool"), )
paddle.logical_not(Tensor([7, 1, 128, 153],"bool"), )
paddle.logical_not(Tensor([7, 1, 99, 153],"bool"), )
paddle.logical_not(Tensor([8, 1, 166, 113],"bool"), )
paddle.logical_not(Tensor([30, 1, 171, 171],"bool"), )
paddle.logical_not(Tensor([8, 1, 230, 113],"bool"), )
paddle.logical_not(Tensor([30, 1, 170, 170],"bool"), )
paddle.logical_not(Tensor([6, 1, 159, 159],"bool"), )
paddle.logical_not(Tensor([10, 1, 112, 129],"bool"), )
paddle.logical_not(Tensor([8, 1, 226, 113],"bool"), )
paddle.logical_not(Tensor([10, 1, 101, 105],"bool"), )
paddle.logical_not(Tensor([10, 1, 125, 89],"bool"), )
paddle.logical_not(Tensor([8, 1, 141, 141],"bool"), )
paddle.logical_not(Tensor([2240, 80],"bool"), )
paddle.logical_not(Tensor([10, 1, 147, 137],"bool"), )
paddle.logical_not(Tensor([4, 1, 162, 162],"bool"), )
paddle.logical_not(Tensor([2160, 54],"bool"), )
paddle.logical_not(Tensor([11424, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 129, 45],"bool"), )
paddle.logical_not(Tensor([30, 1, 96, 96],"bool"), )
paddle.logical_not(Tensor([11760, 80],"bool"), )
paddle.logical_not(Tensor([10, 1, 153, 153],"bool"), )
paddle.logical_not(Tensor([8, 1, 179, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 179, 179],"bool"), )
paddle.logical_not(Tensor([3691, 92],"bool"), )
paddle.logical_not(Tensor([30, 1, 126, 126],"bool"), )
paddle.logical_not(Tensor([8, 1, 143, 143],"bool"), )
paddle.logical_not(Tensor([30, 1, 120, 81],"bool"), )
paddle.logical_not(Tensor([7, 1, 165, 165],"bool"), )
paddle.logical_not(Tensor([10, 1, 172, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 84, 129],"bool"), )
paddle.logical_not(Tensor([10, 1, 123, 105],"bool"), )
paddle.logical_not(Tensor([10, 1, 126, 89],"bool"), )
paddle.logical_not(Tensor([10, 1, 147, 147],"bool"), )
paddle.logical_not(Tensor([30, 1, 162, 162],"bool"), )
paddle.logical_not(Tensor([2402, 43],"bool"), )
paddle.logical_not(Tensor([8, 1, 232, 113],"bool"), )
paddle.logical_not(Tensor([30, 1, 130, 130],"bool"), )
paddle.logical_not(Tensor([10, 1, 102, 105],"bool"), )
paddle.logical_not(Tensor([10, 1, 136, 105],"bool"), )
paddle.logical_not(Tensor([8, 1, 224, 113],"bool"), )
paddle.logical_not(Tensor([30, 1, 127, 81],"bool"), )
paddle.logical_not(Tensor([7, 1, 102, 153],"bool"), )
paddle.logical_not(Tensor([30, 1, 140, 140],"bool"), )
paddle.logical_not(Tensor([30, 1, 130, 81],"bool"), )
paddle.logical_not(Tensor([10, 1, 85, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 183, 137],"bool"), )
paddle.logical_not(Tensor([8, 1, 155, 121],"bool"), )
paddle.logical_not(Tensor([8, 1, 258, 258],"bool"), )
paddle.logical_not(Tensor([30, 1, 95, 95],"bool"), )
paddle.logical_not(Tensor([8, 1, 203, 113],"bool"), )
paddle.logical_not(Tensor([7, 1, 146, 146],"bool"), )
paddle.logical_not(Tensor([7, 1, 136, 136],"bool"), )
paddle.logical_not(Tensor([8, 1, 221, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 123, 121],"bool"), )
paddle.logical_not(Tensor([2636, 54],"bool"), )
paddle.logical_not(Tensor([8, 1, 278, 278],"bool"), )
paddle.logical_not(Tensor([8, 1, 141, 113],"bool"), )
paddle.logical_not(Tensor([30, 1, 111, 111],"bool"), )
paddle.logical_not(Tensor([8, 1, 141, 121],"bool"), )
paddle.logical_not(Tensor([8, 1, 220, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 124, 121],"bool"), )
paddle.logical_not(Tensor([6, 1, 172, 172],"bool"), )
paddle.logical_not(Tensor([2568, 71],"bool"), )
paddle.logical_not(Tensor([4, 1, 170, 170],"bool"), )
paddle.logical_not(Tensor([10, 1, 146, 97],"bool"), )
paddle.logical_not(Tensor([10, 1, 144, 129],"bool"), )
paddle.logical_not(Tensor([30, 1, 150, 49],"bool"), )
paddle.logical_not(Tensor([10, 1, 88, 137],"bool"), )
paddle.logical_not(Tensor([10, 1, 83, 137],"bool"), )
paddle.logical_not(Tensor([6, 1, 173, 173],"bool"), )
paddle.logical_not(Tensor([7, 1, 176, 176],"bool"), )
paddle.logical_not(Tensor([8, 1, 278, 113],"bool"), )
paddle.logical_not(Tensor([30, 1, 151, 53],"bool"), )
paddle.logical_not(Tensor([6, 1, 160, 160],"bool"), )
paddle.logical_not(Tensor([7, 1, 165, 153],"bool"), )
paddle.logical_not(Tensor([3192, 34],"bool"), )
paddle.logical_not(Tensor([30, 1, 76, 76],"bool"), )
paddle.logical_not(Tensor([10, 1, 114, 114],"bool"), )
paddle.logical_not(Tensor([8, 1, 150, 150],"bool"), )
paddle.logical_not(Tensor([3200, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 144, 144],"bool"), )
paddle.logical_not(Tensor([3364, 39],"bool"), )
paddle.logical_not(Tensor([10, 1, 103, 137],"bool"), )
paddle.logical_not(Tensor([8, 1, 201, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 237, 237],"bool"), )
paddle.logical_not(Tensor([10, 1, 162, 137],"bool"), )
paddle.logical_not(Tensor([6, 1, 132, 132],"bool"), )
paddle.logical_not(Tensor([10, 1, 130, 105],"bool"), )
paddle.logical_not(Tensor([10, 1, 183, 183],"bool"), )
paddle.logical_not(Tensor([10, 1, 126, 126],"bool"), )
paddle.logical_not(Tensor([10, 1, 104, 97],"bool"), )
paddle.logical_not(Tensor([8, 1, 219, 219],"bool"), )
paddle.logical_not(Tensor([10, 1, 154, 97],"bool"), )
paddle.logical_not(Tensor([10, 1, 138, 73],"bool"), )
paddle.logical_not(Tensor([8, 1, 257, 113],"bool"), )
paddle.logical_not(Tensor([8, 1, 220, 220],"bool"), )
paddle.logical_not(Tensor([10, 1, 150, 137],"bool"), )
paddle.logical_not(Tensor([8, 1, 117, 121],"bool"), )
paddle.logical_not(Tensor([10, 1, 108, 137],"bool"), )
paddle.logical_not(Tensor([8, 1, 293, 113],"bool"), )
paddle.logical_or(Tensor([640, 640],"bool"), Tensor([640, 640],"bool"), )
paddle.logical_or(Tensor([10285],"bool"), Tensor([10285],"bool"), )
paddle.logical_or(Tensor([12240],"bool"), Tensor([12240],"bool"), )
paddle.logical_or(x=Tensor([512, 1, 1, 30],"bool"), y=Tensor([30, 30],"bool"), )
paddle.logical_or(Tensor([6804],"bool"), Tensor([6804],"bool"), )
paddle.logical_or(Tensor([9261],"bool"), Tensor([9261],"bool"), )
paddle.logical_or(x=Tensor([416, 1, 1, 30],"bool"), y=Tensor([30, 30],"bool"), )
paddle.logical_or(Tensor([13125],"bool"), Tensor([13125],"bool"), )
paddle.logical_or(Tensor([34000],"bool"), Tensor([34000],"bool"), )
paddle.logical_or(Tensor([19125],"bool"), Tensor([19125],"bool"), )
paddle.logical_or(Tensor([16660],"bool"), Tensor([16660],"bool"), )
paddle.logical_or(Tensor([9180],"bool"), Tensor([9180],"bool"), )
paddle.logical_or(Tensor([8500],"bool"), Tensor([8500],"bool"), )
paddle.logical_or(Tensor([11050],"bool"), Tensor([11050],"bool"), )
paddle.logical_or(Tensor([10105],"bool"), Tensor([10105],"bool"), )
paddle.logical_or(Tensor([24565],"bool"), Tensor([24565],"bool"), )
paddle.logical_or(Tensor([27540],"bool"), Tensor([27540],"bool"), )
paddle.logical_or(Tensor([7681],"bool"), Tensor([7681],"bool"), )
paddle.logical_or(Tensor([6885],"bool"), Tensor([6885],"bool"), )
paddle.logical_or(Tensor([9382],"bool"), Tensor([9382],"bool"), )
paddle.logical_or(Tensor([5376],"bool"), Tensor([5376],"bool"), )
paddle.logical_or(Tensor([2577],"bool"), Tensor([2577],"bool"), )
paddle.logical_or(Tensor([1360],"bool"), Tensor([1360],"bool"), )
paddle.logical_or(Tensor([4725],"bool"), Tensor([4725],"bool"), )
paddle.logical_or(Tensor([2100],"bool"), Tensor([2100],"bool"), )
paddle.logical_or(Tensor([13, 7, 7],"bool"), Tensor([13, 7, 7],"bool"), )
paddle.logical_or(Tensor([2125],"bool"), Tensor([2125],"bool"), )
paddle.logical_or(Tensor([4116],"bool"), Tensor([4116],"bool"), )
paddle.logical_or(Tensor([3060],"bool"), Tensor([3060],"bool"), )
paddle.logical_or(Tensor([4789],"bool"), Tensor([4789],"bool"), )
paddle.logical_or(Tensor([4165],"bool"), Tensor([4165],"bool"), )
paddle.logical_or(x=Tensor([52, 1, 1, 30],"bool"), y=Tensor([30, 30],"bool"), )
paddle.logical_or(Tensor([3598],"bool"), Tensor([3598],"bool"), )
paddle.logical_or(Tensor([1726],"bool"), Tensor([1726],"bool"), )
paddle.logsumexp(Tensor([30, 200, 40],"float32"), )
paddle.logsumexp(Tensor([30, 200, 40],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([30, 200, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([1024, 384],"float32"), axis=1, )
paddle.logsumexp(Tensor([30, 200, 40],"float32"), keepdim=False, )
paddle.logsumexp(Tensor([26, 16, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 4, 16, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([26, 8, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([30, 60],"float32"), axis=1, )
paddle.logsumexp(Tensor([20, 60],"float32"), axis=1, )
paddle.logsumexp(Tensor([1000],"float32"), )
paddle.masked_fill(Tensor([30, 60, 30],"int32"), Tensor([30, 60, 30],"bool"), 0, )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 40],"bool"), 1.3017578125, )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 40],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([10, 60, 10],"int32"), Tensor([10, 60, 10],"bool"), 0, )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([20, 60, 20],"int32"), Tensor([20, 60, 20],"bool"), 0, )
paddle.masked_fill(Tensor([300, 40],"float32"), Tensor([40],"bool"), -0.29328805208206177, )
paddle.masked_fill(Tensor([120],"float32"), Tensor([300, 120],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 40],"bool"), -0.54931640625, )
paddle.masked_fill(Tensor([300, 40],"float32"), Tensor([40],"bool"), 0.9238947033882141, )
paddle.masked_fill(Tensor([300, 40],"float32"), Tensor([40],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([10, 60],"int32"), Tensor([10, 60],"bool"), 0, )
paddle.masked_fill(Tensor([20, 60],"int32"), Tensor([20, 60],"bool"), 0, )
paddle.masked_fill(Tensor([6, 60, 6],"int32"), Tensor([6, 60, 6],"bool"), 0, )
paddle.masked_fill(Tensor([4, 60, 4],"int32"), Tensor([4, 60, 4],"bool"), 0, )
paddle.masked_fill(Tensor([30, 60],"int32"), Tensor([30, 60],"bool"), 0, )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([300, 40],"float32"), Tensor([40],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([120],"float32"), Tensor([300, 120],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([50, 3],"float32"), Tensor([50, 3],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([168],"float32"), Tensor([168],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([3, 40],"float32"), Tensor([3, 1],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([3, 3],"float32"), Tensor([1, 3],"bool"), Tensor([300, 300],"float32"), )
paddle.masked_scatter(Tensor([30, 3],"float32"), Tensor([30, 1],"bool"), Tensor([30, 30],"float32"), )
paddle.masked_select(Tensor([1, 44436, 4],"float32"), Tensor([1, 44436, 4],"bool"), )
paddle.masked_select(Tensor([2, 7581, 4],"float32"), Tensor([2, 7581, 4],"bool"), )
paddle.masked_select(Tensor([1, 52500, 4],"float32"), Tensor([1, 52500, 4],"bool"), )
paddle.masked_select(Tensor([8, 13125],"int64"), Tensor([8, 13125],"bool"), )
paddle.masked_select(Tensor([2, 3549, 40],"float32"), Tensor([2, 3549, 40],"bool"), )
paddle.masked_select(Tensor([8, 6069, 4],"float32"), Tensor([8, 6069, 4],"bool"), )
paddle.masked_select(Tensor([2, 3549, 68],"float32"), Tensor([2, 3549, 68],"bool"), )
paddle.masked_select(Tensor([8, 3549, 4],"float32"), Tensor([8, 3549, 4],"bool"), )
paddle.masked_select(Tensor([1, 30324, 4],"float32"), Tensor([1, 30324, 4],"bool"), )
paddle.masked_select(Tensor([1, 56784, 4],"float32"), Tensor([1, 56784, 4],"bool"), )
paddle.masked_select(Tensor([16, 11109],"float32"), Tensor([16, 11109],"bool"), )
paddle.masked_select(Tensor([640, 640],"float32"), Tensor([640, 640],"bool"), )
paddle.masked_select(Tensor([8, 11109],"float32"), Tensor([8, 11109],"bool"), )
paddle.masked_select(Tensor([4, 22400, 1],"float32"), Tensor([4, 22400, 1],"bool"), )
paddle.masked_select(Tensor([16, 2541, 4],"float32"), Tensor([16, 2541, 4],"bool"), )
paddle.masked_select(Tensor([1, 48384, 4],"float32"), Tensor([1, 48384, 4],"bool"), )
paddle.masked_select(Tensor([4, 7581, 4],"float32"), Tensor([4, 7581, 4],"bool"), )
paddle.masked_select(Tensor([8, 12096, 4],"float32"), Tensor([8, 12096, 4],"bool"), )
paddle.masked_select(Tensor([16, 3549],"float32"), Tensor([16, 3549],"bool"), )
paddle.masked_select(Tensor([2, 3024, 40],"float32"), Tensor([2, 3024, 40],"bool"), )
paddle.masked_select(Tensor([4, 12096, 4],"float32"), Tensor([4, 12096, 4],"bool"), )
paddle.masked_select(Tensor([4, 4725, 4],"float32"), Tensor([4, 4725, 4],"bool"), )
paddle.masked_select(Tensor([8, 2541, 4],"float32"), Tensor([8, 2541, 4],"bool"), )
paddle.masked_select(Tensor([2, 6069, 40],"float32"), Tensor([2, 6069, 40],"bool"), )
paddle.masked_select(Tensor([4, 3549, 4],"float32"), Tensor([4, 3549, 4],"bool"), )
paddle.masked_select(Tensor([1, 27216, 4],"float32"), Tensor([1, 27216, 4],"bool"), )
paddle.masked_select(Tensor([8, 10164, 4],"float32"), Tensor([8, 10164, 4],"bool"), )
paddle.masked_select(Tensor([2, 9261, 4],"float32"), Tensor([2, 9261, 4],"bool"), )
paddle.masked_select(Tensor([1, 56784],"float32"), Tensor([1, 56784],"bool"), )
paddle.masked_select(Tensor([8, 11109, 4],"float32"), Tensor([8, 11109, 4],"bool"), )
paddle.masked_select(Tensor([8, 2100, 4],"float32"), Tensor([8, 2100, 4],"bool"), )
paddle.masked_select(Tensor([1, 75600],"float32"), Tensor([1, 75600],"bool"), )
paddle.masked_select(Tensor([16, 8400],"float32"), Tensor([16, 8400],"bool"), )
paddle.masked_select(Tensor([16, 9261],"float32"), Tensor([16, 9261],"bool"), )
paddle.masked_select(Tensor([16, 12096],"float32"), Tensor([16, 12096],"bool"), )
paddle.masked_select(Tensor([1, 40656, 4],"float32"), Tensor([1, 40656, 4],"bool"), )
paddle.masked_select(Tensor([8, 8400],"float32"), Tensor([8, 8400],"bool"), )
paddle.masked_select(Tensor([2, 6804, 4],"float32"), Tensor([2, 6804, 4],"bool"), )
paddle.masked_select(Tensor([4, 4116, 4],"float32"), Tensor([4, 4116, 4],"bool"), )
paddle.masked_select(Tensor([4, 5376, 4],"float32"), Tensor([4, 5376, 4],"bool"), )
paddle.masked_select(Tensor([16, 4116],"float32"), Tensor([16, 4116],"bool"), )
paddle.masked_select(Tensor([8, 4725, 4],"float32"), Tensor([8, 4725, 4],"bool"), )
paddle.masked_select(Tensor([1, 24276, 4],"float32"), Tensor([1, 24276, 4],"bool"), )
paddle.masked_select(Tensor([8, 7581],"float32"), Tensor([8, 7581],"bool"), )
paddle.masked_select(Tensor([2, 11109, 4],"float32"), Tensor([2, 11109, 4],"bool"), )
paddle.masked_select(Tensor([8, 5376, 4],"float32"), Tensor([8, 5376, 4],"bool"), )
paddle.masked_select(Tensor([16, 4116, 4],"float32"), Tensor([16, 4116, 4],"bool"), )
paddle.masked_select(Tensor([16, 6804, 4],"float32"), Tensor([16, 6804, 4],"bool"), )
paddle.masked_select(Tensor([16, 3549, 4],"float32"), Tensor([16, 3549, 4],"bool"), )
paddle.masked_select(Tensor([1, 65856, 4],"float32"), Tensor([1, 65856, 4],"bool"), )
paddle.masked_select(Tensor([2, 4725, 40],"float32"), Tensor([2, 4725, 40],"bool"), )
paddle.masked_select(Tensor([1, 52500],"float32"), Tensor([1, 52500],"bool"), )
paddle.masked_select(Tensor([2, 12096, 4],"float32"), Tensor([2, 12096, 4],"bool"), )
paddle.masked_select(Tensor([1, 65856],"float32"), Tensor([1, 65856],"bool"), )
paddle.masked_select(Tensor([2, 2100, 40],"float32"), Tensor([2, 2100, 40],"bool"), )
paddle.masked_select(Tensor([4, 8400, 4],"float32"), Tensor([4, 8400, 4],"bool"), )
paddle.masked_select(Tensor([4, 11109, 4],"float32"), Tensor([4, 11109, 4],"bool"), )
paddle.masked_select(Tensor([8, 10164],"float32"), Tensor([8, 10164],"bool"), )
paddle.masked_select(Tensor([8, 12096],"float32"), Tensor([8, 12096],"bool"), )
paddle.masked_select(Tensor([8, 6804, 4],"float32"), Tensor([8, 6804, 4],"bool"), )
paddle.masked_select(Tensor([4, 22400, 4],"float32"), Tensor([4, 22400, 4],"bool"), )
paddle.masked_select(Tensor([4, 6804, 4],"float32"), Tensor([4, 6804, 4],"bool"), )
paddle.masked_select(Tensor([16, 7581, 4],"float32"), Tensor([16, 7581, 4],"bool"), )
paddle.masked_select(Tensor([1, 70644, 4],"float32"), Tensor([1, 70644, 4],"bool"), )
paddle.masked_select(Tensor([1, 21504, 5],"float32"), Tensor([1, 21504, 5],"bool"), )
paddle.masked_select(Tensor([8, 9261, 4],"float32"), Tensor([8, 9261, 4],"bool"), )
paddle.masked_select(Tensor([1, 61236, 4],"float32"), Tensor([1, 61236, 4],"bool"), )
paddle.masked_select(Tensor([16, 3024, 4],"float32"), Tensor([16, 3024, 4],"bool"), )
paddle.masked_select(Tensor([16, 6069],"float32"), Tensor([16, 6069],"bool"), )
paddle.masked_select(Tensor([8, 8400, 4],"float32"), Tensor([8, 8400, 4],"bool"), )
paddle.masked_select(Tensor([2, 5376, 40],"float32"), Tensor([2, 5376, 40],"bool"), )
paddle.masked_select(Tensor([16, 10164],"float32"), Tensor([16, 10164],"bool"), )
paddle.masked_select(Tensor([2, 2541, 68],"float32"), Tensor([2, 2541, 68],"bool"), )
paddle.masked_select(Tensor([16, 7581],"float32"), Tensor([16, 7581],"bool"), )
paddle.masked_select(Tensor([1, 33600, 4],"float32"), Tensor([1, 33600, 4],"bool"), )
paddle.masked_select(Tensor([16, 5376, 4],"float32"), Tensor([16, 5376, 4],"bool"), )
paddle.masked_select(Tensor([2, 2100, 68],"float32"), Tensor([2, 2100, 68],"bool"), )
paddle.masked_select(Tensor([16, 6804],"float32"), Tensor([16, 6804],"bool"), )
paddle.masked_select(Tensor([16, 5376],"float32"), Tensor([16, 5376],"bool"), )
paddle.masked_select(Tensor([16, 4725, 4],"float32"), Tensor([16, 4725, 4],"bool"), )
paddle.masked_select(Tensor([1, 70644],"float32"), Tensor([1, 70644],"bool"), )
paddle.masked_select(Tensor([8, 7581, 4],"float32"), Tensor([8, 7581, 4],"bool"), )
paddle.masked_select(Tensor([1, 61236],"float32"), Tensor([1, 61236],"bool"), )
paddle.masked_select(Tensor([16, 4725],"float32"), Tensor([16, 4725],"bool"), )
paddle.masked_select(Tensor([1, 37044, 4],"float32"), Tensor([1, 37044, 4],"bool"), )
paddle.masked_select(Tensor([8, 4116, 4],"float32"), Tensor([8, 4116, 4],"bool"), )
paddle.masked_select(Tensor([4, 6069, 4],"float32"), Tensor([4, 6069, 4],"bool"), )
paddle.masked_select(Tensor([8, 3024, 4],"float32"), Tensor([8, 3024, 4],"bool"), )
paddle.masked_select(Tensor([2, 8400, 4],"float32"), Tensor([2, 8400, 4],"bool"), )
paddle.masked_select(Tensor([1, 21504, 4],"float32"), Tensor([1, 21504, 4],"bool"), )
paddle.masked_select(Tensor([1, 75600, 4],"float32"), Tensor([1, 75600, 4],"bool"), )
paddle.masked_select(Tensor([2, 3024, 68],"float32"), Tensor([2, 3024, 68],"bool"), )
paddle.masked_select(Tensor([8, 6804],"float32"), Tensor([8, 6804],"bool"), )
paddle.masked_select(Tensor([8, 9261],"float32"), Tensor([8, 9261],"bool"), )
paddle.masked_select(Tensor([2, 2541, 40],"float32"), Tensor([2, 2541, 40],"bool"), )
paddle.masked_select(Tensor([4, 10164, 4],"float32"), Tensor([4, 10164, 4],"bool"), )
paddle.masked_select(Tensor([16, 2100, 4],"float32"), Tensor([16, 2100, 4],"bool"), )
paddle.masked_select(Tensor([4, 9261, 4],"float32"), Tensor([4, 9261, 4],"bool"), )
paddle.masked_select(Tensor([2, 10164, 4],"float32"), Tensor([2, 10164, 4],"bool"), )
paddle.masked_select(Tensor([8, 13125, 4],"float32"), Tensor([8, 13125, 4],"bool"), )
paddle.masked_select(Tensor([16, 6069, 4],"float32"), Tensor([16, 6069, 4],"bool"), )
paddle.masked_select(Tensor([2, 4116, 40],"float32"), Tensor([2, 4116, 40],"bool"), )
paddle.masked_select(Tensor([1, 8400, 4],"float32"), Tensor([1, 8400, 4],"bool"), )
paddle.masked_select(Tensor([8, 2100],"float32"), Tensor([8, 2100],"bool"), )
paddle.masked_select(Tensor([2, 2100, 4],"float32"), Tensor([2, 2100, 4],"bool"), )
paddle.masked_select(Tensor([2, 4725],"float32"), Tensor([2, 4725],"bool"), )
paddle.masked_select(Tensor([4, 6804],"float32"), Tensor([4, 6804],"bool"), )
paddle.masked_select(Tensor([2, 4725, 4],"float32"), Tensor([2, 4725, 4],"bool"), )
paddle.masked_select(Tensor([8, 2541],"float32"), Tensor([8, 2541],"bool"), )
paddle.masked_select(Tensor([4, 4116],"float32"), Tensor([4, 4116],"bool"), )
paddle.masked_select(Tensor([4, 2541],"float32"), Tensor([4, 2541],"bool"), )
paddle.masked_select(Tensor([4, 6804],"int64"), Tensor([4, 6804],"bool"), )
paddle.masked_select(Tensor([4, 2100],"float32"), Tensor([4, 2100],"bool"), )
paddle.masked_select(Tensor([1, 40656],"float32"), Tensor([1, 40656],"bool"), )
paddle.masked_select(Tensor([4, 11109],"float32"), Tensor([4, 11109],"bool"), )
paddle.masked_select(Tensor([1, 21504],"float32"), Tensor([1, 21504],"bool"), )
paddle.masked_select(Tensor([1, 37044],"float32"), Tensor([1, 37044],"bool"), )
paddle.masked_select(Tensor([8, 4725],"int64"), Tensor([8, 4725],"bool"), )
paddle.masked_select(Tensor([2, 6804],"float32"), Tensor([2, 6804],"bool"), )
paddle.masked_select(Tensor([2, 9261],"int64"), Tensor([2, 9261],"bool"), )
paddle.masked_select(Tensor([16, 3024],"float32"), Tensor([16, 3024],"bool"), )
paddle.masked_select(Tensor([2, 5376, 4],"float32"), Tensor([2, 5376, 4],"bool"), )
paddle.masked_select(Tensor([4, 10164],"float32"), Tensor([4, 10164],"bool"), )
paddle.masked_select(Tensor([8, 4116],"int64"), Tensor([8, 4116],"bool"), )
paddle.masked_select(Tensor([2, 9261],"float32"), Tensor([2, 9261],"bool"), )
paddle.masked_select(Tensor([4, 6069],"float32"), Tensor([4, 6069],"bool"), )
paddle.masked_select(Tensor([8, 3549],"float32"), Tensor([8, 3549],"bool"), )
paddle.masked_select(Tensor([2, 2541],"float32"), Tensor([2, 2541],"bool"), )
paddle.masked_select(Tensor([8, 4116],"float32"), Tensor([8, 4116],"bool"), )
paddle.masked_select(Tensor([8, 4725],"float32"), Tensor([8, 4725],"bool"), )
paddle.masked_select(Tensor([2, 5376],"float32"), Tensor([2, 5376],"bool"), )
paddle.masked_select(Tensor([4, 7581],"float32"), Tensor([4, 7581],"bool"), )
paddle.masked_select(Tensor([4, 9261],"float32"), Tensor([4, 9261],"bool"), )
paddle.masked_select(Tensor([8, 2100],"int64"), Tensor([8, 2100],"bool"), )
paddle.masked_select(Tensor([4, 3024],"float32"), Tensor([4, 3024],"bool"), )
paddle.masked_select(Tensor([16, 2541],"float32"), Tensor([16, 2541],"bool"), )
paddle.masked_select(Tensor([2, 2541, 4],"float32"), Tensor([2, 2541, 4],"bool"), )
paddle.masked_select(Tensor([4, 5376],"int64"), Tensor([4, 5376],"bool"), )
paddle.masked_select(Tensor([2, 6069, 4],"float32"), Tensor([2, 6069, 4],"bool"), )
paddle.masked_select(Tensor([2, 4116],"float32"), Tensor([2, 4116],"bool"), )
paddle.masked_select(Tensor([2, 3549],"float32"), Tensor([2, 3549],"bool"), )
paddle.masked_select(Tensor([128, 128],"float16"), Tensor([128, 128],"bool"), )
paddle.masked_select(Tensor([4, 8400],"float32"), Tensor([4, 8400],"bool"), )
paddle.masked_select(Tensor([4, 3024, 4],"float32"), Tensor([4, 3024, 4],"bool"), )
paddle.masked_select(Tensor([2, 3024, 4],"float32"), Tensor([2, 3024, 4],"bool"), )
paddle.masked_select(Tensor([1, 24276],"float32"), Tensor([1, 24276],"bool"), )
paddle.masked_select(Tensor([128, 128],"float32"), Tensor([128, 128],"bool"), )
paddle.masked_select(Tensor([1, 48384],"float32"), Tensor([1, 48384],"bool"), )
paddle.masked_select(Tensor([8, 5376],"float32"), Tensor([8, 5376],"bool"), )
paddle.masked_select(Tensor([8, 3024],"float32"), Tensor([8, 3024],"bool"), )
paddle.masked_select(Tensor([20, 500],"int64"), Tensor([20, 500],"bool"), )
paddle.masked_select(Tensor([4, 2541, 4],"float32"), Tensor([4, 2541, 4],"bool"), )
paddle.masked_select(Tensor([2, 7581],"float32"), Tensor([2, 7581],"bool"), )
paddle.masked_select(Tensor([2, 11109],"float32"), Tensor([2, 11109],"bool"), )
paddle.masked_select(Tensor([2, 3024],"float32"), Tensor([2, 3024],"bool"), )
paddle.masked_select(Tensor([2, 6069],"float32"), Tensor([2, 6069],"bool"), )
paddle.masked_select(Tensor([1, 33600],"float32"), Tensor([1, 33600],"bool"), )
paddle.masked_select(Tensor([1, 27216],"float32"), Tensor([1, 27216],"bool"), )
paddle.masked_select(Tensor([2, 12096],"float32"), Tensor([2, 12096],"bool"), )
paddle.masked_select(Tensor([4, 5376],"float32"), Tensor([4, 5376],"bool"), )
paddle.masked_select(Tensor([1, 30324],"float32"), Tensor([1, 30324],"bool"), )
paddle.masked_select(Tensor([4, 3549],"float32"), Tensor([4, 3549],"bool"), )
paddle.masked_select(Tensor([2, 8400],"float32"), Tensor([2, 8400],"bool"), )
paddle.masked_select(Tensor([2, 4116, 4],"float32"), Tensor([2, 4116, 4],"bool"), )
paddle.masked_select(Tensor([2, 4725],"int64"), Tensor([2, 4725],"bool"), )
paddle.masked_select(Tensor([4, 4725],"float32"), Tensor([4, 4725],"bool"), )
paddle.masked_select(Tensor([8, 6069],"float32"), Tensor([8, 6069],"bool"), )
paddle.masked_select(Tensor([4, 2100, 4],"float32"), Tensor([4, 2100, 4],"bool"), )
paddle.masked_select(Tensor([4, 12096],"float32"), Tensor([4, 12096],"bool"), )
paddle.masked_select(Tensor([16, 2100],"float32"), Tensor([16, 2100],"bool"), )
paddle.masked_select(Tensor([1, 44436],"float32"), Tensor([1, 44436],"bool"), )
paddle.masked_select(Tensor([1, 8400],"float32"), Tensor([1, 8400],"bool"), )
paddle.masked_select(Tensor([2, 3549, 4],"float32"), Tensor([2, 3549, 4],"bool"), )
paddle.masked_select(Tensor([2, 10164],"float32"), Tensor([2, 10164],"bool"), )
paddle.masked_select(Tensor([88, 6, 8],"float32"), Tensor([88, 6, 8],"bool"), )
paddle.masked_select(Tensor([2, 2100],"float32"), Tensor([2, 2100],"bool"), )
paddle.masked_select(Tensor([50, 50],"float64"), Tensor([50, 50],"bool"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 198, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 113, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 158, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 131, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 192],"float32"), Tensor([1, 16, 192, 64],"float32"), )
paddle.matmul(Tensor([8, 8, 63, 96],"float32"), Tensor([8, 8, 96, 63],"float32"), )
paddle.matmul(Tensor([2, 8, 225, 225],"float32"), Tensor([2, 8, 225, 32],"float32"), )
paddle.matmul(Tensor([192, 2, 16, 32],"float32"), Tensor([192, 2, 32, 16],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 176],"float32"), Tensor([1, 16, 176, 64],"float32"), )
paddle.matmul(Tensor([30, 1, 40, 200],"float32"), Tensor([1, 30, 200, 40],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 114],"float32"), Tensor([1, 16, 114, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 120],"float32"), Tensor([1, 16, 120, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 206],"float32"), Tensor([1, 16, 206, 64],"float32"), )
paddle.matmul(Tensor([7, 153, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 116],"float32"), Tensor([1, 16, 116, 64],"float32"), )
paddle.matmul(Tensor([30, 57, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 118, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 385, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 188, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 192, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 41, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([82, 4, 9, 9],"float32"), y=Tensor([82, 4, 9, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 191],"float32"), Tensor([1, 16, 191, 64],"float32"), )
paddle.matmul(x=Tensor([4, 8, 256, 32],"float32"), y=Tensor([4, 8, 256, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 4, 144, 144],"float32"), Tensor([2, 4, 144, 128],"float32"), )
paddle.matmul(Tensor([5, 65, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 184, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 174],"float32"), Tensor([1, 16, 174, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 119],"float32"), Tensor([1, 16, 119, 64],"float32"), )
paddle.matmul(Tensor([4, 16, 1, 256],"float32"), Tensor([4, 16, 256, 7],"float32"), )
paddle.matmul(Tensor([1, 217, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 194, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([6, 16, 5, 5],"float32"), Tensor([6, 16, 5, 256],"float32"), )
paddle.matmul(Tensor([32, 606],"float32"), Tensor([768, 606],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 100],"float32"), Tensor([1, 16, 100, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 165, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 300, 32],"float32"), y=Tensor([2, 8, 300, 32],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 120, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 106],"float32"), Tensor([1, 16, 106, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 173],"float32"), Tensor([1, 16, 173, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 104, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 153],"float32"), Tensor([1, 16, 153, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 105, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([6, 16, 5, 256],"float32"), Tensor([6, 16, 256, 5],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 112, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 210],"float32"), Tensor([1, 16, 210, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 191, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 149],"float32"), Tensor([1, 16, 149, 64],"float32"), )
paddle.matmul(x=Tensor([2, 4, 144, 128],"float32"), y=Tensor([2, 4, 144, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 180],"float32"), Tensor([1, 16, 180, 64],"float32"), )
paddle.matmul(Tensor([9, 89, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([192, 2, 16, 16],"float32"), Tensor([192, 2, 16, 32],"float32"), )
paddle.matmul(Tensor([2, 4, 100, 100],"float32"), Tensor([2, 4, 100, 256],"float32"), )
paddle.matmul(x=Tensor([1, 8, 529, 32],"float32"), y=Tensor([1, 8, 529, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([5000, 30],"float32"), Tensor([30, 1],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 117],"float32"), Tensor([1, 16, 117, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 142],"float32"), Tensor([1, 16, 142, 64],"float32"), )
paddle.matmul(Tensor([4, 61, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 8, 500, 32],"float32"), y=Tensor([1, 8, 500, 32],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 206, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 12, 77, 64],"float32"), y=Tensor([1, 12, 77, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 261, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([18211, 30],"float32"), Tensor([30, 1],"float32"), )
paddle.matmul(Tensor([10, 49, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 98],"float32"), Tensor([1, 16, 98, 64],"float32"), )
paddle.matmul(x=Tensor([64, 8, 8, 64],"float32"), y=Tensor([64, 8, 8, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 200],"float32"), Tensor([1, 16, 200, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 133, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 141],"float32"), Tensor([1, 16, 141, 64],"float32"), )
paddle.matmul(x=Tensor([52, 4, 30, 30],"float32"), y=Tensor([52, 4, 30, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 190],"float32"), Tensor([1, 16, 190, 64],"float32"), )
paddle.matmul(Tensor([2, 4, 121, 121],"float32"), Tensor([2, 4, 121, 256],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 188],"float32"), Tensor([1, 16, 188, 64],"float32"), )
paddle.matmul(Tensor([10, 65, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([128, 512],"float32"), Tensor([512, 128],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 179, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 132, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 197, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 132],"float32"), Tensor([1, 16, 132, 64],"float32"), )
paddle.matmul(x=Tensor([2, 4, 361, 128],"float32"), y=Tensor([2, 4, 361, 128],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 106, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 164, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 187],"float32"), Tensor([1, 16, 187, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 97],"float32"), Tensor([1, 16, 97, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 154],"float32"), Tensor([1, 16, 154, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 111],"float32"), Tensor([1, 16, 111, 64],"float32"), )
paddle.matmul(Tensor([12, 4, 10, 226],"float32"), Tensor([12, 4, 226, 8],"float32"), )
paddle.matmul(Tensor([8, 128, 256],"float32"), Tensor([768, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 4, 121, 256],"float32"), y=Tensor([2, 4, 121, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 169],"float32"), Tensor([1, 16, 169, 64],"float32"), )
paddle.matmul(Tensor([9, 53, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 9, 8],"float32"), Tensor([30000, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 186],"float32"), Tensor([1, 16, 186, 64],"float32"), )
paddle.matmul(x=Tensor([2, 4, 121, 128],"float32"), y=Tensor([2, 4, 121, 128],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 178, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 102, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([10, 33, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 8, 492, 32],"float32"), y=Tensor([1, 8, 492, 32],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 111, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 137, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 8, 9, 64],"float32"), y=Tensor([104, 8, 9, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 121, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 203, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 155, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 196, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 5, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 181, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 97, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 137],"float32"), Tensor([1, 16, 137, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 170],"float32"), Tensor([1, 16, 170, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 176, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 190, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([6, 57, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 183, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 97, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 139, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 4, 169, 256],"float32"), y=Tensor([2, 4, 169, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 201, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 89, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([10, 105, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 16, 5, 256],"float32"), Tensor([4, 16, 256, 5],"float32"), )
paddle.matmul(x=Tensor([2, 8, 400, 32],"float32"), y=Tensor([2, 8, 400, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 181, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 160, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 108, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 16, 1, 256],"float32"), Tensor([4, 16, 256, 6],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 99],"float32"), Tensor([1, 16, 99, 64],"float32"), )
paddle.matmul(Tensor([12, 4, 7, 226],"float32"), Tensor([12, 4, 226, 8],"float32"), )
paddle.matmul(Tensor([10, 29, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 212],"float32"), Tensor([1, 16, 212, 64],"float32"), )
paddle.matmul(Tensor([1, 1, 8],"float32"), Tensor([30000, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([3, 105, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 141, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 171],"float32"), Tensor([1, 16, 171, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 144],"float32"), Tensor([1, 16, 144, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 182, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([40, 512],"float32"), Tensor([512, 995],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 201],"float32"), Tensor([1, 16, 201, 64],"float32"), )
paddle.matmul(x=Tensor([1, 8, 496, 32],"float32"), y=Tensor([1, 8, 496, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 4, 56, 56],"float32"), Tensor([13, 4, 56, 6],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 123],"float32"), Tensor([1, 16, 123, 64],"float32"), )
paddle.matmul(Tensor([64, 512],"float32"), Tensor([512, 995],"float32"), )
paddle.matmul(Tensor([3, 169, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([5000, 30],"float32"), Tensor([30, 30],"float32"), )
paddle.matmul(Tensor([1, 11, 8],"float32"), Tensor([30000, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([10, 89, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4, 8, 100, 32],"float32"), y=Tensor([4, 8, 725, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 197],"float32"), Tensor([1, 16, 197, 64],"float32"), )
paddle.matmul(Tensor([30, 37, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([5, 33, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 129, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 4, 196, 128],"float32"), y=Tensor([2, 4, 196, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 33, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 177],"float32"), Tensor([1, 16, 177, 64],"float32"), )
paddle.matmul(Tensor([6284, 20],"float32"), Tensor([20, 1],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 189],"float32"), Tensor([1, 16, 189, 64],"float32"), )
paddle.matmul(x=Tensor([4, 8, 300, 32],"float32"), y=Tensor([4, 8, 300, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 145, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([7, 8, 33, 96],"float32"), y=Tensor([7, 8, 1, 96],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 101],"float32"), Tensor([1, 16, 101, 64],"float32"), )
paddle.matmul(Tensor([32, 256],"float32"), Tensor([768, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 148, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 4, 144, 256],"float32"), y=Tensor([2, 4, 144, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 112],"float32"), Tensor([1, 16, 112, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 148],"float32"), Tensor([1, 16, 148, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 127, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 157, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([768, 2, 16, 16],"float32"), Tensor([768, 2, 16, 16],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 166],"float32"), Tensor([1, 16, 166, 64],"float32"), )
paddle.matmul(Tensor([6, 25, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 73, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 160],"float32"), Tensor([1, 16, 160, 64],"float32"), )
paddle.matmul(x=Tensor([2, 4, 169, 128],"float32"), y=Tensor([2, 4, 169, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 175],"float32"), Tensor([1, 16, 175, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 212, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 225, 32],"float32"), y=Tensor([2, 8, 225, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 181],"float32"), Tensor([1, 16, 181, 64],"float32"), )
paddle.matmul(Tensor([30, 45, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 53, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 100, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([10, 73, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 189, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 209],"float32"), Tensor([1, 16, 209, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 99, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 400, 48],"float32"), y=Tensor([2, 8, 400, 48],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 166, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 33, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 17, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 121, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 151, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([10, 129, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 156, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([16, 784],"float32"), Tensor([784, 784],"float32"), )
paddle.matmul(Tensor([2, 4, 256, 256],"float32"), Tensor([2, 4, 256, 128],"float32"), )
paddle.matmul(Tensor([4, 562],"float32"), Tensor([1536, 562],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 135, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 172, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([6, 16, 1, 256],"float32"), Tensor([6, 16, 256, 7],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 211],"float32"), Tensor([1, 16, 211, 64],"float32"), )
paddle.matmul(x=Tensor([2, 4, 289, 128],"float32"), y=Tensor([2, 4, 289, 128],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 142, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 8, 63, 63],"float32"), Tensor([8, 8, 63, 96],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 177, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 562],"float32"), Tensor([1536, 562],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 81, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 492, 32],"float32"), y=Tensor([2, 8, 492, 32],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 128, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 4, 225, 256],"float32"), y=Tensor([2, 4, 225, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 200, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 400, 64],"float32"), y=Tensor([2, 8, 400, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 8, 529, 48],"float32"), y=Tensor([1, 8, 529, 48],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 162],"float32"), Tensor([1, 16, 162, 64],"float32"), )
paddle.matmul(x=Tensor([8, 8, 33, 96],"float32"), y=Tensor([8, 8, 1, 96],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 207, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 152],"float32"), Tensor([1, 16, 152, 64],"float32"), )
paddle.matmul(Tensor([48, 2, 16, 64],"float32"), Tensor([48, 2, 64, 16],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 144, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 49, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([10, 81, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 29, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 211, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 105],"float32"), Tensor([1, 16, 105, 64],"float32"), )
paddle.matmul(x=Tensor([52, 4, 30, 64],"float32"), y=Tensor([52, 4, 64, 7],"float32"), )
paddle.matmul(Tensor([10, 37, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 102],"float32"), Tensor([1, 16, 102, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 202, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 101, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([48, 2, 16, 16],"float32"), Tensor([48, 2, 16, 64],"float32"), )
paddle.matmul(Tensor([1, 30, 40, 200],"float32"), Tensor([30, 1, 200, 40],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 122, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 126],"float32"), Tensor([1, 16, 126, 64],"float32"), )
paddle.matmul(x=Tensor([2, 8, 500, 32],"float32"), y=Tensor([2, 8, 500, 32],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 130, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 185],"float32"), Tensor([1, 16, 185, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 168, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 195],"float32"), Tensor([1, 16, 195, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 202],"float32"), Tensor([1, 16, 202, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 210, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 208, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 4, 100, 128],"float32"), y=Tensor([2, 4, 100, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 65, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([18211, 30],"float32"), Tensor([30, 30],"float32"), )
paddle.matmul(Tensor([30, 21, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 134],"float32"), Tensor([1, 16, 134, 64],"float32"), )
paddle.matmul(Tensor([6284, 25],"float32"), Tensor([25, 25],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 147],"float32"), Tensor([1, 16, 147, 64],"float32"), )
paddle.matmul(x=Tensor([1, 8, 1100, 32],"float32"), y=Tensor([1, 8, 1100, 32],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([256, 4, 9, 9],"float32"), y=Tensor([256, 4, 9, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 165],"float32"), Tensor([1, 16, 165, 64],"float32"), )
paddle.matmul(Tensor([2, 85, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 164],"float32"), Tensor([1, 16, 164, 64],"float32"), )
paddle.matmul(Tensor([10, 57, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 4, 225, 225],"float32"), Tensor([2, 4, 225, 128],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 182],"float32"), Tensor([1, 16, 182, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 195, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 16, 1, 7],"float32"), Tensor([4, 16, 7, 256],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 127],"float32"), Tensor([1, 16, 127, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 136, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 4, 256, 128],"float32"), y=Tensor([2, 4, 256, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 122],"float32"), Tensor([1, 16, 122, 64],"float32"), )
paddle.matmul(Tensor([30, 69, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 133],"float32"), Tensor([1, 16, 133, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 151],"float32"), Tensor([1, 16, 151, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 159, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([72, 8, 10, 64],"float32"), y=Tensor([72, 8, 10, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([6284, 30],"float32"), Tensor([30, 1],"float32"), )
paddle.matmul(Tensor([6284, 20],"float32"), Tensor([20, 20],"float32"), )
paddle.matmul(Tensor([6284, 30],"float32"), Tensor([30, 30],"float32"), )
paddle.matmul(Tensor([6, 97, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([6, 16, 1, 7],"float32"), Tensor([6, 16, 7, 256],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 110, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 130],"float32"), Tensor([1, 16, 130, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 157],"float32"), Tensor([1, 16, 157, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 109, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 81, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([7, 49, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 158],"float32"), Tensor([1, 16, 158, 64],"float32"), )
paddle.matmul(x=Tensor([1, 8, 300, 32],"float32"), y=Tensor([1, 8, 300, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 13, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 115],"float32"), Tensor([1, 16, 115, 64],"float32"), )
paddle.matmul(x=Tensor([4, 8, 33, 96],"float32"), y=Tensor([4, 8, 1, 96],"float32"), transpose_y=True, )
paddle.matmul(Tensor([6, 45, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 8, 128, 128],"float32"), Tensor([1, 8, 128, 16],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 205],"float32"), Tensor([1, 16, 205, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 154, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 113],"float32"), Tensor([1, 16, 113, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 140, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([50000, 2, 3, 1],"float64"), )
paddle.matmul(x=Tensor([227, 4, 9, 9],"float32"), y=Tensor([227, 4, 9, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 115, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 123, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 134, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 104],"float32"), Tensor([1, 16, 104, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 114, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 107],"float32"), Tensor([1, 16, 107, 64],"float32"), )
paddle.matmul(x=Tensor([4, 8, 400, 32],"float32"), y=Tensor([4, 8, 400, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 194],"float32"), Tensor([1, 16, 194, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 168],"float32"), Tensor([1, 16, 168, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 138, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 241, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 146],"float32"), Tensor([1, 16, 146, 64],"float32"), )
paddle.matmul(Tensor([30, 105, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 139],"float32"), Tensor([1, 16, 139, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 140],"float32"), Tensor([1, 16, 140, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 129],"float32"), Tensor([1, 16, 129, 64],"float32"), )
paddle.matmul(x=Tensor([1, 8, 484, 64],"float32"), y=Tensor([1, 8, 484, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 4, 100, 256],"float32"), y=Tensor([2, 4, 100, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 157, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([6, 16, 1, 6],"float32"), Tensor([6, 16, 6, 256],"float32"), )
paddle.matmul(x=Tensor([1, 8, 400, 64],"float32"), y=Tensor([1, 8, 400, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 172],"float32"), Tensor([1, 16, 172, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 163, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 145, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([100, 4, 9, 9],"float32"), y=Tensor([100, 4, 9, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 126, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 209, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 162, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 113, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([10, 17, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 196],"float32"), Tensor([1, 16, 196, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 163],"float32"), Tensor([1, 16, 163, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 185, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 124],"float32"), Tensor([1, 16, 124, 64],"float32"), )
paddle.matmul(x=Tensor([52, 4, 30, 64],"float32"), y=Tensor([52, 4, 64, 30],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 156],"float32"), Tensor([1, 16, 156, 64],"float32"), )
paddle.matmul(x=Tensor([187679, 3],"float32"), y=Tensor([3, 1],"float32"), )
paddle.matmul(Tensor([2, 4, 169, 169],"float32"), Tensor([2, 4, 169, 128],"float32"), )
paddle.matmul(x=Tensor([2, 4, 324, 128],"float32"), y=Tensor([2, 4, 324, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 4, 144, 144],"float32"), Tensor([2, 4, 144, 256],"float32"), )
paddle.matmul(Tensor([1, 8, 300, 300],"float32"), Tensor([1, 8, 300, 32],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 135],"float32"), Tensor([1, 16, 135, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 169, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([12, 4, 226, 8],"float32"), Tensor([12, 4, 226, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 129, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 193],"float32"), Tensor([1, 16, 193, 64],"float32"), )
paddle.matmul(Tensor([2, 16, 10, 256],"float32"), Tensor([2, 16, 256, 10],"float32"), )
paddle.matmul(Tensor([2, 4, 121, 121],"float32"), Tensor([2, 4, 121, 128],"float32"), )
paddle.matmul(Tensor([1, 229, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 161, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 4, 400, 128],"float32"), y=Tensor([2, 4, 400, 128],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 113, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 161, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 179],"float32"), Tensor([1, 16, 179, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 125, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 512],"float32"), Tensor([1536, 512],"float32"), transpose_y=True, )
paddle.matmul(Tensor([10, 21, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 4, 169, 169],"float32"), Tensor([2, 4, 169, 256],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 131],"float32"), Tensor([1, 16, 131, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 208],"float32"), Tensor([1, 16, 208, 64],"float32"), )
paddle.matmul(x=Tensor([1, 8, 324, 64],"float32"), y=Tensor([1, 8, 324, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 143],"float32"), Tensor([1, 16, 143, 64],"float32"), )
paddle.matmul(Tensor([2, 4, 196, 196],"float32"), Tensor([2, 4, 196, 128],"float32"), )
paddle.matmul(Tensor([10, 41, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 9, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 178],"float32"), Tensor([1, 16, 178, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 138],"float32"), Tensor([1, 16, 138, 64],"float32"), )
paddle.matmul(x=Tensor([64, 8, 14, 64],"float32"), y=Tensor([64, 8, 14, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([24, 146],"float32"), Tensor([768, 146],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 174, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 186, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 118],"float32"), Tensor([1, 16, 118, 64],"float32"), )
paddle.matmul(Tensor([2, 121, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 103],"float32"), Tensor([1, 16, 103, 64],"float32"), )
paddle.matmul(Tensor([1, 20, 16],"float32"), Tensor([16, 32000],"float32"), transpose_y=False, )
paddle.matmul(Tensor([2, 4, 100, 100],"float32"), Tensor([2, 4, 100, 128],"float32"), )
paddle.matmul(Tensor([8, 16, 128, 16],"float32"), Tensor([8, 16, 128, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 128, 32, 32],"float32"), Tensor([1, 128, 32, 128],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 180, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 121],"float32"), Tensor([1, 16, 121, 64],"float32"), )
paddle.matmul(x=Tensor([4, 8, 100, 32],"float32"), y=Tensor([4, 8, 100, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 128, 32, 32],"float32"), Tensor([1, 128, 32, 32],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 128],"float32"), Tensor([1, 16, 128, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 199, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 207],"float32"), Tensor([1, 16, 207, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 161],"float32"), Tensor([1, 16, 161, 64],"float32"), )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 103, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 4, 441, 128],"float32"), y=Tensor([2, 4, 441, 128],"float32"), transpose_y=True, )
paddle.matmul(Tensor([6284, 25],"float32"), Tensor([25, 1],"float32"), )
paddle.matmul(Tensor([4, 37, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 77, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 8, 100, 100],"float32"), Tensor([4, 8, 100, 32],"float32"), )
paddle.matmul(Tensor([13, 1007, 32],"float32"), Tensor([32, 99],"float32"), transpose_y=False, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 170, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([10, 97, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 110],"float32"), Tensor([1, 16, 110, 64],"float32"), )
paddle.matmul(x=Tensor([2, 4, 196, 256],"float32"), y=Tensor([2, 4, 196, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 187, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([13, 4, 1007, 8],"float32"), Tensor([13, 4, 1007, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([6, 16, 1, 256],"float32"), Tensor([6, 16, 256, 6],"float32"), )
paddle.matmul(Tensor([10, 25, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 183],"float32"), Tensor([1, 16, 183, 64],"float32"), )
paddle.matmul(Tensor([5, 145, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1, 16, 1, 64],"float32"), y=Tensor([1, 16, 146, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([30, 25, 256],"float32"), Tensor([256, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([24, 256],"float32"), Tensor([768, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 108],"float32"), Tensor([1, 16, 108, 64],"float32"), )
paddle.matmul(Tensor([30, 40, 200],"float32"), Tensor([30, 200, 40],"float32"), )
paddle.matmul(x=Tensor([2, 8, 498, 32],"float32"), y=Tensor([2, 8, 498, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 16, 1, 125],"float32"), Tensor([1, 16, 125, 64],"float32"), )
paddle.matmul(Tensor([1, 16, 1, 145],"float32"), Tensor([1, 16, 145, 64],"float32"), )
paddle.max(Tensor([30, 200, 40],"float32"), keepdim=False, )
paddle.max(Tensor([30, 200, 40],"float32"), keepdim=True, )
paddle.max(Tensor([30, 200, 40],"float32"), axis=list[0,1,], keepdim=False, )
paddle.max(Tensor([64, 128, 96],"float32"), axis=list[0,1,], )
paddle.max(Tensor([192, 1024],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([30, 200, 40],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.max(Tensor([192, 3, 14, 14],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([30, 200, 40],"float32"), )
paddle.max(Tensor([64, 128, 96],"float32"), axis=list[2,], )
paddle.max(Tensor([32, 64, 128],"float32"), axis=0, )
paddle.max(Tensor([32, 32, 128],"float32"), axis=-1, )
paddle.max(Tensor([30, 200, 40],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.max(Tensor([128, 1, 128],"float32"), axis=2, )
paddle.max(Tensor([192, 512],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([16, 32, 64],"float32"), axis=0, )
paddle.max(Tensor([120, 84],"float32"), )
paddle.max(Tensor([128, 128],"float32"), )
paddle.max(Tensor([14, 64, 16],"float32"), )
paddle.max(Tensor([3, 128, 96],"int32"), axis=list[2,], keepdim=False, )
paddle.max(Tensor([192, 192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([128, 128],"int32"), axis=0, )
paddle.max(Tensor([128, 512],"int32"), axis=0, )
paddle.max(Tensor([128, 124],"float32"), axis=1, keepdim=True, )
paddle.max(Tensor([64, 1, 28, 28],"float32"), )
paddle.max(Tensor([576, 120],"float32"), )
paddle.max(Tensor([50364],"float32"), )
paddle.max(Tensor([512, 192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([1, 257, 192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([32, 128],"float32"), axis=-1, )
paddle.max(Tensor([14, 7, 32],"float32"), )
paddle.max(Tensor([1, 1, 32, 32],"float32"), )
paddle.max(Tensor([1, 6, 16, 16],"float32"), )
paddle.max(Tensor([14, 7, 99],"float32"), )
paddle.max(Tensor([8, 16, 32],"float32"), axis=list[0,1,2,], keepdim=False, )
paddle.max(Tensor([1024],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([1, 6, 32, 32],"float32"), )
paddle.max(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.max(Tensor([16, 6, 5, 5],"float32"), )
paddle.max(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.max(Tensor([6, 4, 60],"int32"), axis=1, )
paddle.max(Tensor([30, 4, 60],"int32"), axis=1, )
paddle.max(Tensor([2, 512],"int32"), axis=0, )
paddle.max(Tensor([14, 64, 4],"float32"), )
paddle.max(Tensor([1, 16, 12, 12],"float32"), )
paddle.max(Tensor([20, 4, 60],"int32"), axis=1, )
paddle.max(Tensor([10, 4, 60],"int32"), axis=1, )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
paddle.maximum(Tensor([16, 30, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([78750, 2],"float32"), )
paddle.maximum(Tensor([3938, 121],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([220968, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([313038, 2],"float32"), )
paddle.maximum(Tensor([7007, 16],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.maximum(Tensor([16, 25, 1, 2],"float32"), Tensor([16, 1, 4725, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([78120, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([50250, 2],"float32"), )
paddle.maximum(Tensor([8, 9, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([56250, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([74550, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([295647, 2],"float32"), )
paddle.maximum(Tensor([64, 18, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([83070, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([188256, 2],"float32"), )
paddle.maximum(Tensor([3379, 30],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([84420, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.maximum(Tensor([16, 12, 1, 2],"float32"), Tensor([16, 1, 4725, 2],"float32"), )
paddle.maximum(Tensor([55, 1, 2],"float32"), Tensor([302832, 2],"float32"), )
paddle.maximum(Tensor([1, 32, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.maximum(Tensor([8, 23, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([63000, 2],"float32"), )
paddle.maximum(Tensor([21, 1, 2],"float32"), Tensor([55200, 2],"float32"), )
paddle.maximum(Tensor([1, 65, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([286464, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([194157, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
paddle.maximum(Tensor([8, 28, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([60300, 2],"float32"), )
paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.maximum(Tensor([1, 6, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([247086, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([346086, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([166533, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([252681, 2],"float32"), )
paddle.maximum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([50400, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([67200, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([272649, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([277539, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([252681, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([191835, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([77025, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([75075, 2],"float32"), )
paddle.maximum(Tensor([8, 6, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([57960, 2],"float32"), )
paddle.maximum(Tensor([4542, 58],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([40, 1, 2],"float32"), Tensor([57285, 2],"float32"), )
paddle.maximum(Tensor([8, 3, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([8, 15, 1, 2],"float32"), Tensor([8, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([59520, 2],"float32"), )
paddle.maximum(Tensor([3192, 34],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([59295, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
paddle.maximum(Tensor([64, 53, 1, 2],"float32"), Tensor([64, 1, 1726, 2],"float32"), )
paddle.maximum(Tensor([1, 58, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.maximum(Tensor([27, 1, 2],"float32"), Tensor([75840, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([290052, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([55440, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([245520, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([90060, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([245823, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([295647, 2],"float32"), )
paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([62310, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([184140, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
paddle.maximum(Tensor([8, 47, 1, 2],"float32"), Tensor([8, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([8, 6, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([322245, 2],"float32"), )
paddle.maximum(Tensor([8, 25, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([70080, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([214107, 2],"float32"), )
paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([63000, 2],"float32"), )
paddle.maximum(Tensor([16, 36, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([245823, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([220992, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([264978, 2],"float32"), )
paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([276210, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
paddle.maximum(Tensor([8, 46, 1, 2],"float32"), Tensor([8, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([91980, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([56250, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([52560, 2],"float32"), )
paddle.maximum(Tensor([64, 26, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
paddle.maximum(Tensor([64, 19, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.maximum(Tensor([8, 19, 1, 2],"float32"), Tensor([8, 1, 6804, 2],"float32"), )
paddle.maximum(Tensor([64, 21, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([327360, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([327360, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([60480, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([53760, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([70080, 2],"float32"), )
paddle.maximum(Tensor([3923, 39],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([200022, 2],"float32"), )
paddle.maximum(Tensor([16, 17, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([337620, 2],"float32"), )
paddle.maximum(Tensor([2288, 54],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([8, 13872, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([61500, 2],"float32"), )
paddle.maximum(Tensor([16, 14, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.maximum(Tensor([64, 30, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.maximum(Tensor([2812, 97],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([72960, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.maximum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([293622, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([222012, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([217689, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
paddle.maximum(Tensor([16, 13, 1, 2],"float32"), Tensor([16, 1, 4725, 2],"float32"), )
paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([71100, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([386694, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([56730, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([52560, 2],"float32"), )
paddle.maximum(Tensor([1, 14, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([377514, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
paddle.maximum(Tensor([1, 39, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([86640, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([345618, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([190296, 2],"float32"), )
paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.maximum(Tensor([1, 17, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([83070, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([272118, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([377514, 2],"float32"), )
paddle.maximum(Tensor([64, 30, 1, 2],"float32"), Tensor([64, 1, 1726, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([388740, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([219453, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([68160, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([63315, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.maximum(Tensor([16, 10, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([55755, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([62700, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([451143, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([220968, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([77625, 2],"float32"), )
paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
paddle.maximum(Tensor([64, 23, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.maximum(Tensor([21, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([322245, 2],"float32"), )
paddle.maximum(Tensor([2636, 54],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([214830, 2],"float32"), )
paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([63135, 2],"float32"), )
paddle.maximum(Tensor([3281, 33],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([52560, 2],"float32"), )
paddle.maximum(Tensor([1, 41, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([278562, 2],"float32"), )
paddle.maximum(Tensor([8, 25, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([79395, 2],"float32"), )
paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([293397, 2],"float32"), )
paddle.maximum(Tensor([64, 31, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([52560, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([50250, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
paddle.maximum(Tensor([21, 1, 2],"float32"), Tensor([78120, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([63360, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([70350, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.maximum(Tensor([16, 24, 1, 2],"float32"), Tensor([16, 1, 6069, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([255780, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([252681, 2],"float32"), )
paddle.maximum(Tensor([1, 16, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([63360, 2],"float32"), )
paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([82080, 2],"float32"), )
paddle.maximum(Tensor([1, 14, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([193368, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
paddle.maximum(Tensor([2546, 48],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([16, 22, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([16, 54, 1, 2],"float32"), Tensor([16, 1, 6069, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([398487, 2],"float32"), )
paddle.maximum(Tensor([8, 25, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([60750, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([61065, 2],"float32"), )
paddle.maximum(Tensor([4882, 126],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([219453, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.maximum(Tensor([64, 33, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([57525, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([81900, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([398487, 2],"float32"), )
paddle.maximum(Tensor([8, 15, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([333018, 2],"float32"), )
paddle.maximum(Tensor([2962, 35],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([8, 28, 1, 2],"float32"), Tensor([8, 1, 6804, 2],"float32"), )
paddle.maximum(Tensor([16, 11, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([202572, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([214107, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([72270, 2],"float32"), )
paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([51840, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([64680, 2],"float32"), )
paddle.maximum(Tensor([1, 126, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.maximum(Tensor([53, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([81000, 2],"float32"), )
paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([277539, 2],"float32"), )
paddle.maximum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([359100, 2],"float32"), )
paddle.maximum(Tensor([3520, 53],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([176490, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([51840, 2],"float32"), )
paddle.maximum(Tensor([1, 129, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.maximum(Tensor([16, 36, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([312324, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([70290, 2],"float32"), )
paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.maximum(Tensor([8, 18, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
paddle.maximum(Tensor([1, 60, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
paddle.maximum(Tensor([16, 28, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([75330, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([81900, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.maximum(Tensor([16, 15, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([135036],"float32"), Tensor([135036],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([202572, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([75375, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([74250, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([50250, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([58320, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([54270, 2],"float32"), )
paddle.maximum(Tensor([2543, 53],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([16, 22, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([16, 14, 1, 2],"float32"), Tensor([16, 1, 6069, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([322245, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([57960, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([347820, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([340686, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([57000, 2],"float32"), )
paddle.maximum(Tensor([1, 33, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([52080, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([283167, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([171888, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([377514, 2],"float32"), )
paddle.maximum(Tensor([16, 24, 1, 2],"float32"), Tensor([16, 1, 5376, 2],"float32"), )
paddle.maximum(Tensor([4, 525, 1, 2],"float32"), Tensor([4, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([52920, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([70080, 2],"float32"), )
paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([62160, 2],"float32"), )
paddle.maximum(Tensor([16, 20, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([255780, 2],"float32"), )
paddle.maximum(Tensor([1, 30, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
paddle.maximum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([64, 20, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([212784, 2],"float32"), )
paddle.maximum(Tensor([8, 5, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
paddle.maximum(Tensor([16, 17, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([67200, 2],"float32"), )
paddle.maximum(Tensor([8, 21, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
paddle.maximum(Tensor([4897, 143],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([68310, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([57000, 2],"float32"), )
paddle.maximum(Tensor([64, 36, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([248616, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([277539, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([56730, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([69345, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([83415, 2],"float32"), )
paddle.maximum(Tensor([2218, 47],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([1, 33, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.maximum(Tensor([64, 14, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([248616, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([54750, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
paddle.maximum(Tensor([1, 25, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([57600, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([293622, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([277539, 2],"float32"), )
paddle.maximum(Tensor([16, 12, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([313038, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([52920, 2],"float32"), )
paddle.maximum(Tensor([64, 37, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
paddle.maximum(Tensor([38, 1, 2],"float32"), Tensor([82125, 2],"float32"), )
paddle.maximum(Tensor([16, 12, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([223554, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
paddle.maximum(Tensor([1, 4, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([245520, 2],"float32"), )
paddle.maximum(Tensor([3198, 55],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([75375, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([191835, 2],"float32"), )
paddle.maximum(Tensor([24, 1, 2],"float32"), Tensor([51840, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([57960, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
paddle.maximum(Tensor([30, 1, 2],"float32"), Tensor([276210, 2],"float32"), )
paddle.maximum(Tensor([2734, 46],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([66150, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([73920, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([198249, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([82125, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.maximum(Tensor([2815, 64],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([347820, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([54270, 2],"float32"), )
paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([451143, 2],"float32"), )
paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([359100, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([283167, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([75840, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([378540, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.maximum(Tensor([1, 63, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.maximum(Tensor([64, 46, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([369105, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([59295, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([440433, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([83070, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([293397, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([73500, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([60750, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.maximum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 4725, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([71610, 2],"float32"), )
paddle.maximum(Tensor([8, 7, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([64, 24, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.maximum(Tensor([8, 8, 1, 2],"float32"), Tensor([8, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([79380, 2],"float32"), )
paddle.mean(Tensor([6255, 32, 1],"float32"), )
paddle.mean(Tensor([4293, 32, 1],"float32"), )
paddle.mean(Tensor([3399, 32, 1],"float32"), )
paddle.mean(Tensor([3795, 32, 1],"float32"), )
paddle.mean(Tensor([2, 3, 256, 256],"float64"), )
paddle.mean(Tensor([1, 64, 64, 64],"float32"), )
paddle.mean(Tensor([7290, 32, 1],"float32"), )
paddle.mean(Tensor([6502, 32, 1],"float32"), )
paddle.mean(Tensor([4458, 32, 1],"float32"), )
paddle.mean(Tensor([6474, 32, 1],"float32"), )
paddle.mean(Tensor([6391, 32, 1],"float32"), )
paddle.mean(Tensor([6282, 32, 1],"float32"), )
paddle.mean(Tensor([6805, 32, 1],"float32"), )
paddle.mean(Tensor([16, 8, 2048],"float32"), axis=1, )
paddle.mean(Tensor([3699, 32, 1],"float32"), )
paddle.mean(Tensor([4816, 32, 1],"float32"), )
paddle.mean(Tensor([6291, 32, 1],"float32"), )
paddle.mean(Tensor([7164, 32, 1],"float32"), )
paddle.mean(Tensor([5548, 32, 1],"float32"), )
paddle.mean(Tensor([4533, 32, 1],"float32"), )
paddle.mean(Tensor([5084, 32, 1],"float32"), )
paddle.mean(Tensor([6831, 32, 1],"float32"), )
paddle.mean(Tensor([5735, 32, 1],"float32"), )
paddle.mean(Tensor([30, 200, 40],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([3702, 32, 1],"float32"), )
paddle.mean(Tensor([3658, 32, 1],"float32"), )
paddle.mean(Tensor([3831, 32, 1],"float32"), )
paddle.mean(Tensor([6248, 32, 1],"float32"), )
paddle.mean(Tensor([7573, 32, 1],"float32"), )
paddle.mean(Tensor([6544, 32, 1],"float32"), )
paddle.mean(Tensor([5060, 32, 1],"float32"), )
paddle.mean(Tensor([3579, 32, 1],"float32"), )
paddle.mean(Tensor([4, 5, 100, 50],"float64"), )
paddle.mean(Tensor([6351, 32, 1],"float32"), )
paddle.mean(Tensor([26182, 2, 16],"float32"), axis=0, )
paddle.mean(Tensor([512, 768],"float32"), )
paddle.mean(Tensor([6122, 32, 1],"float32"), )
paddle.mean(Tensor([32, 3, 2048],"float32"), axis=1, )
paddle.mean(Tensor([7183, 32, 1],"float32"), )
paddle.mean(Tensor([8162, 32, 1],"float32"), )
paddle.mean(Tensor([3345, 32, 1],"float32"), )
paddle.mean(Tensor([11, 50304],"float32"), )
paddle.mean(Tensor([7, 50000],"float32"), )
paddle.mean(Tensor([6410, 32, 1],"float32"), )
paddle.mean(Tensor([3438, 32, 1],"float32"), )
paddle.mean(Tensor([5842, 32, 1],"float32"), )
paddle.mean(Tensor([2, 512, 512],"float32"), )
paddle.mean(Tensor([6098, 32, 1],"float32"), )
paddle.mean(Tensor([3, 2, 8, 66, 40],"float64"), )
paddle.mean(Tensor([8, 1, 128, 128],"float32"), )
paddle.mean(Tensor([3783, 32, 1],"float32"), )
paddle.mean(Tensor([8, 16, 1280],"float32"), axis=1, )
paddle.mean(Tensor([26182, 16],"float32"), axis=0, )
paddle.mean(Tensor([8, 8, 2048],"float32"), axis=1, )
paddle.mean(Tensor([1, 3, 256, 256],"float32"), )
paddle.mean(Tensor([1, 11, 32000],"float32"), )
paddle.mean(Tensor([30, 200, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([3534, 32, 1],"float32"), )
paddle.mean(Tensor([160, 3072],"float32"), )
paddle.mean(Tensor([5566, 32, 1],"float32"), )
paddle.mean(Tensor([6911, 32, 1],"float32"), )
paddle.mean(Tensor([102400, 1],"float32"), )
paddle.mean(Tensor([6117, 32, 1],"float32"), )
paddle.mean(Tensor([4554, 32, 1],"float32"), )
paddle.mean(Tensor([4059, 32, 1],"float32"), )
paddle.mean(Tensor([3411, 32, 1],"float32"), )
paddle.mean(Tensor([7710, 32, 1],"float32"), )
paddle.mean(Tensor([30, 200, 40],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([11, 50272],"float32"), )
paddle.mean(Tensor([4, 256, 16, 16],"float32"), -2, )
paddle.mean(Tensor([4359, 32, 1],"float32"), )
paddle.mean(Tensor([6369, 32, 1],"float32"), )
paddle.mean(Tensor([6084, 32, 1],"float32"), )
paddle.mean(Tensor([4843, 32, 1],"float32"), )
paddle.mean(Tensor([6753, 32, 1],"float32"), )
paddle.mean(Tensor([5976, 32, 1],"float32"), )
paddle.mean(Tensor([3036, 32, 1],"float32"), )
paddle.mean(Tensor([1, 8, 1280],"bfloat16"), axis=1, )
paddle.mean(Tensor([16800, 2],"float32"), )
paddle.mean(Tensor([3060, 32, 1],"float32"), )
paddle.mean(Tensor([3, 4, 64, 64],"float32"), )
paddle.mean(Tensor([8, 8, 1280],"float32"), axis=1, )
paddle.mean(Tensor([68, 376, 1],"float32"), name=None, )
paddle.mean(Tensor([2811, 32, 1],"float32"), )
paddle.mean(Tensor([2, 3, 32, 64],"float64"), )
paddle.mean(Tensor([2, 16, 1280],"float32"), axis=1, )
paddle.mean(Tensor([2, 3, 10, 14, 18],"float32"), )
paddle.mean(Tensor([100, 300],"complex128"), )
paddle.mean(Tensor([16032],"float32"), )
paddle.mean(Tensor([2, 8, 2048],"float32"), axis=1, )
paddle.mean(Tensor([3, 2, 64, 32],"float64"), )
paddle.mean(Tensor([30, 10, 64],"float32"), )
paddle.mean(Tensor([4, 2, 1, 512, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([1, 1, 276, 49],"float32"), )
paddle.mean(Tensor([1914, 50],"float32"), )
paddle.mean(Tensor([16, 768],"float32"), )
paddle.mean(Tensor([1906, 32, 1],"float32"), )
paddle.mean(Tensor([3, 3, 11, 11, 11],"float32"), )
paddle.mean(Tensor([10, 3, 32, 32],"float32"), )
paddle.mean(Tensor([48, 48, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([2507, 4],"float32"), )
paddle.mean(Tensor([100, 300],"float64"), )
paddle.mean(Tensor([16, 3072],"float32"), )
paddle.mean(Tensor([2277, 32, 1],"float32"), )
paddle.mean(Tensor([25600, 1],"float32"), )
paddle.mean(Tensor([2, 3, 4, 4, 3, 4, 4, 4],"float64"), )
paddle.mean(Tensor([2946, 32, 1],"float32"), )
paddle.mean(Tensor([384, 192, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([96, 384, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([100, 300],"complex64"), )
paddle.mean(Tensor([200, 50],"float32"), )
paddle.mean(Tensor([384, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([124, 240],"float32"), )
paddle.mean(Tensor([100, 100],"float32"), )
paddle.mean(Tensor([2, 3, 12, 12, 12],"float32"), )
paddle.mean(Tensor([100, 376, 1],"float32"), name=None, )
paddle.mean(Tensor([14, 8, 768],"float32"), axis=1, keepdim=True, )
paddle.mean(Tensor([30000],"float64"), )
paddle.mean(Tensor([26736, 3],"float32"), name=None, )
paddle.mean(Tensor([2618, 4],"float32"), )
paddle.mean(Tensor([11661, 3],"float32"), name=None, )
paddle.mean(Tensor([10, 2, 30, 30],"float32"), )
paddle.mean(Tensor([100, 200],"float32"), )
paddle.mean(Tensor([8, 8, 16, 16],"float32"), )
paddle.mean(Tensor([3, 2, 66, 40],"float64"), )
paddle.mean(Tensor([16, 3, 2048],"float32"), axis=1, )
paddle.mean(Tensor([15548, 3],"float32"), name=None, )
paddle.mean(Tensor([96, 96, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([3, 2, 32, 16, 8],"float32"), )
paddle.mean(Tensor([2, 6, 16, 17, 4],"float64"), )
paddle.mean(Tensor([2, 8, 1280],"float32"), axis=1, )
paddle.mean(Tensor([8, 8, 16, 16],"float64"), )
paddle.mean(Tensor([8, 1501, 1],"float32"), name=None, )
paddle.mean(Tensor([2562, 4],"float32"), )
paddle.mean(Tensor([32, 501, 4],"float32"), name=None, )
paddle.mean(Tensor([50, 1501, 1],"float32"), name=None, )
paddle.mean(Tensor([2, 3, 16, 16, 8],"float32"), )
paddle.mean(Tensor([13, 2, 16, 4, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([4, 5, 22, 28],"float64"), )
paddle.mean(Tensor([2, 3, 30, 20, 25],"float32"), )
paddle.mean(Tensor([16800, 1],"float32"), )
paddle.mean(Tensor([2, 3, 3, 4, 3, 4, 3, 4],"float64"), )
paddle.mean(Tensor([100, 200],"float64"), )
paddle.mean(Tensor([4, 384, 8, 8],"float32"), -2, )
paddle.mean(Tensor([3072, 32, 1],"float32"), )
paddle.mean(Tensor([52, 7, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([18211, 1],"float32"), )
paddle.mean(Tensor([3, 2, 33, 19, 7],"float32"), )
paddle.mean(Tensor([192, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([17320, 1],"float32"), )
paddle.mean(Tensor([383, 32, 1],"float32"), )
paddle.mean(Tensor([3, 10000],"float64"), )
paddle.mean(Tensor([30, 8, 400],"float32"), axis=1, )
paddle.mean(Tensor([2865, 4],"float32"), )
paddle.mean(Tensor([96, 192, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([1938, 4],"float32"), )
paddle.mean(Tensor([1486, 4],"float32"), )
paddle.mean(Tensor([24, 64, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([1913, 4],"float32"), )
paddle.mean(Tensor([2162, 4],"float32"), )
paddle.mean(Tensor([25, 2, 5, 6, 3],"float32"), )
paddle.mean(Tensor([1560, 4],"float32"), )
paddle.mean(Tensor([100, 4, 3, 3],"float32"), )
paddle.mean(Tensor([297, 4],"float32"), )
paddle.mean(Tensor([15, 10, 10],"float64"), )
paddle.mean(Tensor([100, 4, 3, 3],"float64"), )
paddle.mean(Tensor([3, 6, 6, 6, 6],"float64"), )
paddle.mean(Tensor([1324, 4],"float32"), )
paddle.mean(Tensor([1934, 4],"float32"), )
paddle.mean(Tensor([2046, 4],"float32"), )
paddle.mean(Tensor([2330, 4],"float32"), )
paddle.mean(Tensor([16, 256],"float64"), axis=-1, keepdim=True, )
paddle.mean(Tensor([253, 15],"float64"), )
paddle.mean(Tensor([2246, 4],"float32"), )
paddle.mean(Tensor([1812, 4],"float32"), )
paddle.mean(Tensor([2, 100, 3, 2, 2],"float64"), )
paddle.mean(Tensor([2, 2, 6, 42],"float64"), )
paddle.mean(Tensor([2, 7, 7, 7, 6],"float32"), )
paddle.mean(Tensor([2, 24, 99],"float64"), )
paddle.mean(Tensor([2, 3, 4, 50],"float64"), )
paddle.mean(Tensor([2022, 4],"float32"), )
paddle.mean(Tensor([1014, 4],"float32"), )
paddle.mean(x=Tensor([16, 96, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(Tensor([1754, 4],"float32"), )
paddle.mean(Tensor([1, 1, 19, 84],"float32"), )
paddle.mean(Tensor([4, 5, 10, 10],"float32"), )
paddle.mean(Tensor([1071, 4],"float32"), )
paddle.mean(Tensor([14, 170],"float64"), )
paddle.mean(Tensor([1305, 4],"float32"), )
paddle.mean(Tensor([2, 2, 32, 8],"float64"), )
paddle.mean(Tensor([1716, 4],"float32"), )
paddle.mean(Tensor([734, 4],"float32"), )
paddle.mean(Tensor([1041, 4],"float32"), )
paddle.mean(Tensor([6, 6, 6, 6],"float64"), )
paddle.mean(Tensor([2396, 4],"float32"), )
paddle.mean(Tensor([1719, 4],"float32"), )
paddle.mean(Tensor([1, 100, 2, 2, 2, 2],"float64"), )
paddle.mean(Tensor([1465, 4],"float32"), )
paddle.mean(Tensor([1049, 4],"float32"), )
paddle.mean(Tensor([2, 3, 6, 6, 6],"float64"), )
paddle.mean(Tensor([1965, 4],"float32"), )
paddle.mean(Tensor([2, 2, 18, 42],"float32"), )
paddle.mean(Tensor([4, 10, 64],"float64"), )
paddle.mean(Tensor([2, 3, 32, 32],"float64"), )
paddle.mean(Tensor([2, 2, 6, 42],"float32"), )
paddle.mean(Tensor([1796, 4],"float32"), )
paddle.mean(Tensor([1162, 4],"float32"), )
paddle.mean(Tensor([1025, 4],"float32"), )
paddle.mean(Tensor([1530, 4],"float32"), )
paddle.mean(Tensor([30, 60],"float32"), axis=0, )
paddle.mean(Tensor([1946, 4],"float32"), )
paddle.mean(Tensor([2, 4, 14, 16],"float64"), )
paddle.mean(Tensor([298, 4],"float32"), )
paddle.mean(Tensor([1696, 4],"float32"), )
paddle.mean(Tensor([1887, 4],"float32"), )
paddle.mean(Tensor([2102, 4],"float32"), )
paddle.mean(Tensor([681, 4],"float32"), )
paddle.mean(Tensor([1224, 4],"float32"), )
paddle.mean(Tensor([1156, 4],"float32"), )
paddle.mean(Tensor([1616, 4],"float32"), )
paddle.mean(Tensor([1154, 4],"float32"), )
paddle.mean(x=Tensor([16, 96, 2],"float32"), axis=-1, )
paddle.mean(Tensor([1172, 4],"float32"), )
paddle.mean(Tensor([2, 2, 24, 24],"float32"), )
paddle.mean(Tensor([5000, 1],"float32"), )
paddle.mean(Tensor([1128, 4],"float32"), )
paddle.mean(Tensor([1718, 4],"float32"), )
paddle.mean(Tensor([1064, 4],"float32"), )
paddle.mean(Tensor([2, 2, 13, 24],"float32"), )
paddle.mean(Tensor([1773, 4],"float32"), )
paddle.mean(Tensor([1092, 4],"float32"), )
paddle.mean(Tensor([1242, 1],"float32"), )
paddle.mean(Tensor([2, 27, 100],"float64"), )
paddle.mean(Tensor([1385, 4],"float32"), )
paddle.mean(Tensor([32, 32],"float32"), )
paddle.mean(Tensor([1630, 4],"float32"), )
paddle.mean(Tensor([2214, 4],"float32"), )
paddle.mean(Tensor([1121, 4],"float32"), )
paddle.mean(Tensor([2, 28, 39, 2],"float64"), )
paddle.mean(Tensor([96, 64, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([1029, 4],"float32"), )
paddle.mean(Tensor([2, 3, 2, 2, 100],"float64"), )
paddle.mean(Tensor([10, 10, 10],"float32"), )
paddle.mean(Tensor([2132, 4],"float32"), )
paddle.mean(Tensor([1499, 4],"float32"), )
paddle.mean(Tensor([2, 3, 16, 16],"float32"), )
paddle.mean(Tensor([1, 1, 64, 32],"float64"), )
paddle.mean(Tensor([2253, 4],"float32"), )
paddle.mean(Tensor([2025, 4],"float32"), )
paddle.mean(Tensor([2, 3, 12, 20],"float64"), )
paddle.mean(Tensor([2, 3, 30, 15],"float64"), )
paddle.mean(Tensor([2, 40, 5, 5],"float32"), )
paddle.mean(Tensor([1403, 4],"float32"), )
paddle.mean(Tensor([1342, 4],"float32"), )
paddle.mean(Tensor([64, 3, 7, 7],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([1212, 4],"float32"), )
paddle.mean(Tensor([309, 4],"float32"), )
paddle.mean(Tensor([1, 3, 7, 9, 11],"float64"), )
paddle.mean(Tensor([1321, 4],"float32"), )
paddle.mean(Tensor([1, 3, 8, 10, 12],"float64"), )
paddle.mean(Tensor([2, 3, 4, 4, 2, 3, 4, 4],"float64"), )
paddle.mean(Tensor([2, 2, 18, 18],"float64"), )
paddle.mean(Tensor([1669, 4],"float32"), )
paddle.mean(Tensor([1243, 4],"float32"), )
paddle.mean(Tensor([1190, 4],"float32"), )
paddle.mean(Tensor([1876, 4],"float32"), )
paddle.mean(Tensor([4800, 2],"float32"), )
paddle.mean(Tensor([4, 3, 6, 3, 4, 5],"float64"), )
paddle.mean(Tensor([2, 18, 18, 2],"float64"), )
paddle.mean(Tensor([1866, 4],"float32"), )
paddle.mean(Tensor([2196, 4],"float32"), )
paddle.mean(Tensor([1568, 4],"float32"), )
paddle.mean(Tensor([2, 20, 25],"float32"), )
paddle.mean(Tensor([32, 32],"float64"), )
paddle.mean(Tensor([1640, 4],"float32"), )
paddle.mean(Tensor([1, 7, 8, 6, 3],"float64"), )
paddle.mean(Tensor([1480, 4],"float32"), )
paddle.mean(Tensor([1818, 4],"float32"), )
paddle.mean(x=Tensor([16, 96, 2],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(Tensor([1083, 4],"float32"), )
paddle.mean(Tensor([1625, 4],"float32"), )
paddle.mean(Tensor([2, 2, 30, 54],"float32"), )
paddle.mean(Tensor([1902, 4],"float32"), )
paddle.mean(Tensor([1240, 4],"float32"), )
paddle.mean(Tensor([2, 2, 30, 42],"float32"), )
paddle.mean(Tensor([1148, 4],"float32"), )
paddle.mean(Tensor([10, 16, 4, 4],"float32"), )
paddle.mean(Tensor([1455, 4],"float32"), )
paddle.mean(Tensor([2, 3, 3, 3, 32],"float64"), )
paddle.mean(Tensor([2059, 4],"float32"), )
paddle.mean(Tensor([1645, 4],"float32"), )
paddle.mean(Tensor([2, 2, 18, 42],"float64"), )
paddle.mean(Tensor([1729, 4],"float32"), )
paddle.mean(Tensor([313, 4],"float32"), )
paddle.mean(Tensor([1114, 4],"float32"), )
paddle.mean(Tensor([10, 10, 20],"float64"), )
paddle.mean(Tensor([754, 4],"float32"), )
paddle.mean(Tensor([1374, 4],"float32"), )
paddle.mean(Tensor([714, 4],"float32"), )
paddle.mean(Tensor([1782, 4],"float32"), )
paddle.mean(Tensor([100, 2, 3, 3],"float64"), )
paddle.mean(Tensor([845, 4],"float32"), )
paddle.mean(Tensor([1286, 4],"float32"), )
paddle.mean(Tensor([1600, 4],"float32"), )
paddle.mean(Tensor([1853, 4],"float32"), )
paddle.mean(Tensor([2, 17, 39, 2],"float64"), )
paddle.mean(Tensor([1595, 4],"float32"), )
paddle.mean(Tensor([626, 4],"float32"), )
paddle.mean(Tensor([1894, 4],"float32"), )
paddle.mean(Tensor([2043, 4],"float32"), )
paddle.mean(Tensor([428, 4],"float32"), )
paddle.mean(Tensor([2347, 4],"float32"), )
paddle.mean(Tensor([1970, 4],"float32"), )
paddle.mean(Tensor([2, 2, 13, 24],"float64"), )
paddle.mean(Tensor([1919, 4],"float32"), )
paddle.mean(Tensor([1346, 4],"float32"), )
paddle.mean(Tensor([2, 3, 5, 100],"float64"), )
paddle.mean(Tensor([100, 20],"float64"), )
paddle.mean(Tensor([1884, 4],"float32"), )
paddle.mean(Tensor([2252, 4],"float32"), )
paddle.mean(Tensor([1490, 4],"float32"), )
paddle.mean(Tensor([4, 4, 4, 4, 5],"float64"), )
paddle.mean(Tensor([1149, 4],"float32"), )
paddle.mean(Tensor([841, 4],"float32"), )
paddle.mean(Tensor([2, 3, 16, 4, 10],"float32"), )
paddle.mean(Tensor([1436, 4],"float32"), )
paddle.mean(Tensor([2, 3, 30, 50],"float64"), )
paddle.mean(Tensor([2, 4, 6, 6, 6],"float32"), )
paddle.mean(Tensor([1647, 4],"float32"), )
paddle.mean(Tensor([2, 14, 22, 2],"float64"), )
paddle.mean(Tensor([1, 3, 32, 32],"float32"), )
paddle.mean(Tensor([1817, 4],"float32"), )
paddle.mean(Tensor([1511, 4],"float32"), )
paddle.mean(Tensor([1860, 4],"float32"), )
paddle.mean(Tensor([3, 3, 12, 12],"float64"), )
paddle.mean(Tensor([1762, 4],"float32"), )
paddle.mean(Tensor([1472, 4],"float32"), )
paddle.mean(Tensor([4, 5, 10, 10],"float64"), )
paddle.mean(Tensor([1345, 4],"float32"), )
paddle.mean(Tensor([403, 4],"float32"), )
paddle.mean(Tensor([1, 3, 7, 7, 7],"float64"), )
paddle.mean(Tensor([787, 4],"float32"), )
paddle.mean(Tensor([26, 7, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([995, 4],"float32"), )
paddle.mean(Tensor([2425, 4],"float32"), )
paddle.mean(Tensor([25, 5, 6, 2],"float32"), )
paddle.mean(Tensor([1712, 4],"float32"), )
paddle.mean(Tensor([2, 39, 17, 2],"float64"), )
paddle.mean(Tensor([2, 2, 30, 18],"float32"), )
paddle.mean(Tensor([4, 9, 12, 12],"float64"), )
paddle.mean(Tensor([1582, 4],"float32"), )
paddle.mean(Tensor([2, 2, 30, 54],"float64"), )
paddle.mean(Tensor([1850, 4],"float32"), )
paddle.mean(Tensor([2, 6, 3, 4, 4, 2],"float32"), )
paddle.mean(Tensor([642, 4],"float32"), )
paddle.mean(Tensor([1498, 4],"float32"), )
paddle.mean(Tensor([2, 12, 12, 10],"float64"), )
paddle.mean(Tensor([64, 16, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([3, 3, 6, 3, 2, 5],"float64"), )
paddle.mean(Tensor([2, 2, 18, 30],"float32"), )
paddle.mean(Tensor([4, 9, 7, 7],"float64"), )
paddle.mean(Tensor([2, 3, 32, 32],"float32"), )
paddle.mean(Tensor([2, 2, 30, 42],"float64"), )
paddle.mean(Tensor([2, 100, 3, 5],"float64"), )
paddle.mean(Tensor([1561, 4],"float32"), )
paddle.mean(Tensor([1369, 4],"float32"), )
paddle.mean(Tensor([2, 2, 6, 54],"float64"), )
paddle.mean(Tensor([2, 28, 17, 2],"float64"), )
paddle.mean(Tensor([1541, 4],"float32"), )
paddle.mean(Tensor([2119, 4],"float32"), )
paddle.mean(Tensor([1, 7, 7, 7, 3],"float64"), )
paddle.mean(Tensor([1655, 4],"float32"), )
paddle.mean(Tensor([1060, 4],"float32"), )
paddle.mean(Tensor([2, 2, 18, 54],"float32"), )
paddle.mean(Tensor([2, 100, 4, 5],"float32"), )
paddle.mean(Tensor([2, 2, 6, 54],"float32"), )
paddle.mean(Tensor([8, 512],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([4, 10, 10, 7],"float64"), )
paddle.mean(Tensor([2, 100, 3, 4],"float64"), )
paddle.mean(Tensor([1877, 4],"float32"), )
paddle.mean(Tensor([1895, 4],"float32"), )
paddle.mean(Tensor([1280],"float64"), )
paddle.mean(Tensor([72, 72],"float64"), )
paddle.mean(Tensor([1285, 4],"float32"), )
paddle.mean(Tensor([2346, 4],"float32"), )
paddle.mean(Tensor([1469, 4],"float32"), )
paddle.mean(Tensor([2077, 4],"float32"), )
paddle.mean(Tensor([699, 4],"float32"), )
paddle.mean(Tensor([2, 5, 5, 5, 6],"float32"), )
paddle.mean(Tensor([2, 39, 28, 2],"float64"), )
paddle.mean(Tensor([3, 4, 5, 6, 7],"float32"), )
paddle.mean(Tensor([13, 7, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([1052, 4],"float32"), )
paddle.mean(Tensor([17, 5, 7, 2],"float32"), )
paddle.mean(Tensor([1, 3, 8, 7, 6],"float64"), )
paddle.mean(Tensor([434, 4],"float32"), )
paddle.mean(Tensor([712, 4],"float32"), )
paddle.mean(Tensor([320, 4],"float32"), )
paddle.mean(Tensor([2, 3, 6, 6, 6],"float32"), )
paddle.mean(Tensor([2, 4, 6, 6, 6],"float64"), )
paddle.meshgrid(Tensor([4098],"float32"), Tensor([4098],"float32"), )
paddle.min(Tensor([64, 1, 28, 28],"float32"), )
paddle.min(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.minimum(Tensor([8, 17, 1, 2],"float32"), Tensor([8, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.minimum(Tensor([64, 21, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
paddle.minimum(Tensor([16, 12, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([64605, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([194157, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([208692, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([329205, 2],"float32"), )
paddle.minimum(Tensor([1, 20, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([64350, 2],"float32"), )
paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([78120, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([200022, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([60480, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([55755, 2],"float32"), )
paddle.minimum(Tensor([1, 56, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([182391, 2],"float32"), )
paddle.minimum(Tensor([8, 23, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.minimum(Tensor([8, 26, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([77760, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([182391, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([53100, 2],"float32"), )
paddle.minimum(Tensor([29, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
paddle.minimum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
paddle.minimum(Tensor([16, 20, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([378540, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([54000, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([276210, 2],"float32"), )
paddle.minimum(Tensor([1, 58, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([51030, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
paddle.minimum(Tensor([8, 3, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([68310, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([68340, 2],"float32"), )
paddle.minimum(Tensor([34, 1, 2],"float32"), Tensor([196416, 2],"float32"), )
paddle.minimum(Tensor([16, 9, 1, 2],"float32"), Tensor([16, 1, 4116, 2],"float32"), )
paddle.minimum(Tensor([16, 11, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.minimum(Tensor([1, 24, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([77625, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([52560, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([377514, 2],"float32"), )
paddle.minimum(Tensor([8, 6, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
paddle.minimum(Tensor([1, 54, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([75075, 2],"float32"), )
paddle.minimum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([58320, 2],"float32"), )
paddle.minimum(Tensor([64, 31, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
paddle.minimum(Tensor([1, 69, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.minimum(Tensor([1, 3, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([58800, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.minimum(Tensor([8, 30, 1, 2],"float32"), Tensor([8, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([185691, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([75030, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([61065, 2],"float32"), )
paddle.minimum(Tensor([64, 15, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([78750, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([57960, 2],"float32"), )
paddle.minimum(Tensor([16, 37, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([68040, 2],"float32"), )
paddle.minimum(Tensor([16, 26, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([56250, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([286464, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
paddle.minimum(Tensor([27, 1, 2],"float32"), Tensor([220968, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([82125, 2],"float32"), )
paddle.minimum(Tensor([8, 30, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([54600, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.minimum(Tensor([16, 13, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([16, 8, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([16, 15, 1, 2],"float32"), Tensor([16, 1, 4725, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([75375, 2],"float32"), )
paddle.minimum(Tensor([1, 32, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([244800, 2],"float32"), )
paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([73125, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([59220, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([386694, 2],"float32"), )
paddle.minimum(Tensor([1, 72, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.minimum(Tensor([1, 113, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([76260, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([79695, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([66150, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.minimum(Tensor([27, 1, 2],"float32"), Tensor([313038, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([214107, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([54270, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([237360, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([68040, 2],"float32"), )
paddle.minimum(Tensor([8, 10, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([78120, 2],"float32"), )
paddle.minimum(Tensor([64, 30, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.minimum(Tensor([1, 14, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([276210, 2],"float32"), )
paddle.minimum(Tensor([32, 1, 2],"float32"), Tensor([208692, 2],"float32"), )
paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([327360, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([199485, 2],"float32"), )
paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([52920, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([54870, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([62700, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([59295, 2],"float32"), )
paddle.minimum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 6069, 2],"float32"), )
paddle.minimum(Tensor([16, 10, 1, 2],"float32"), Tensor([16, 1, 5376, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([53460, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([248616, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
paddle.minimum(Tensor([1, 65, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([16, 17, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([1, 45, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([255780, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([279279, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([359100, 2],"float32"), )
paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([235320, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.minimum(Tensor([53, 1, 2],"float32"), Tensor([56700, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([84375, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.minimum(Tensor([1, 58, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([58320, 2],"float32"), )
paddle.minimum(Tensor([1, 41, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([346086, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([59295, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([79380, 2],"float32"), )
paddle.minimum(Tensor([1, 3, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.minimum(Tensor([1, 19, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([322245, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([335568, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([255780, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([61200, 2],"float32"), )
paddle.minimum(Tensor([16, 13, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([8, 28, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([8, 7, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([327360, 2],"float32"), )
paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([237360, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([359100, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([57000, 2],"float32"), )
paddle.minimum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([64, 25, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.minimum(Tensor([8, 20, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([309255, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([293622, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([241221, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([440433, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([63135, 2],"float32"), )
paddle.minimum(Tensor([1, 5, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([313038, 2],"float32"), )
paddle.minimum(Tensor([51, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([52920, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
paddle.minimum(Tensor([8, 20, 1, 2],"float32"), Tensor([8, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([71610, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
paddle.minimum(Tensor([8, 25, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([386694, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([220968, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
paddle.minimum(Tensor([16, 24, 1, 2],"float32"), Tensor([16, 1, 4725, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([397467, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
paddle.minimum(Tensor([32, 1, 2],"float32"), Tensor([80640, 2],"float32"), )
paddle.minimum(Tensor([16, 36, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
paddle.minimum(Tensor([1, 10, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([168795, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([56640, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.minimum(Tensor([8, 22, 1, 2],"float32"), Tensor([8, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([295647, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([220968, 2],"float32"), )
paddle.minimum(Tensor([1, 12, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.minimum(Tensor([8, 5, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([8, 6, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([74340, 2],"float32"), )
paddle.minimum(Tensor([16, 29, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([60480, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([55200, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([50250, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([188256, 2],"float32"), )
paddle.minimum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
paddle.minimum(Tensor([16, 26, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([55680, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([283167, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([214830, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([440433, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.minimum(Tensor([1, 28, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([55, 1, 2],"float32"), Tensor([81000, 2],"float32"), )
paddle.minimum(Tensor([16, 31, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([295647, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([309255, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([451143, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([75330, 2],"float32"), )
paddle.minimum(Tensor([16, 28, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
paddle.minimum(Tensor([1, 74, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.minimum(Tensor([16, 14, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([40, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
paddle.minimum(Tensor([64, 32, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.minimum(Tensor([8, 11, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
paddle.minimum(Tensor([1, 30, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([359100, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([63000, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.minimum(Tensor([34, 1, 2],"float32"), Tensor([223554, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([272118, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([247086, 2],"float32"), )
paddle.minimum(Tensor([16, 11, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([103320, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([78750, 2],"float32"), )
paddle.minimum(Tensor([16, 27, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([285444, 2],"float32"), )
paddle.minimum(Tensor([40, 1, 2],"float32"), Tensor([245520, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([278562, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([71610, 2],"float32"), )
paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([196416, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([312324, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
paddle.minimum(Tensor([64, 35, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([264978, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([86940, 2],"float32"), )
paddle.minimum(Tensor([8, 8, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([227919, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([153450, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([388740, 2],"float32"), )
paddle.minimum(Tensor([16, 13, 1, 2],"float32"), Tensor([16, 1, 5376, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([346086, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([57960, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([77490, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([82080, 2],"float32"), )
paddle.minimum(Tensor([1, 60, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([166533, 2],"float32"), )
paddle.minimum(Tensor([1, 6, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.minimum(Tensor([8, 19, 1, 2],"float32"), Tensor([8, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([75240, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([73920, 2],"float32"), )
paddle.minimum(Tensor([45, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
paddle.minimum(Tensor([16, 33, 1, 2],"float32"), Tensor([16, 1, 4725, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([60750, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
paddle.minimum(Tensor([8, 38, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
paddle.minimum(Tensor([16, 29, 1, 2],"float32"), Tensor([16, 1, 4116, 2],"float32"), )
paddle.minimum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 4725, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([59295, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([69300, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([302832, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([313038, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([429660, 2],"float32"), )
paddle.minimum(Tensor([1, 44, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
paddle.minimum(Tensor([8, 27, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
paddle.minimum(Tensor([8, 17, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([55200, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([74100, 2],"float32"), )
paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([295647, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([79380, 2],"float32"), )
paddle.minimum(Tensor([8, 2, 1, 2],"float32"), Tensor([8, 1, 7681, 2],"float32"), )
paddle.minimum(Tensor([1, 80, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([190296, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([191835, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([451143, 2],"float32"), )
paddle.minimum(Tensor([16, 26, 1, 2],"float32"), Tensor([16, 1, 5376, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([61200, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([75840, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([204624, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([50250, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([83415, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([229455, 2],"float32"), )
paddle.minimum(Tensor([16, 9, 1, 2],"float32"), Tensor([16, 1, 4725, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([220968, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([302832, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([70350, 2],"float32"), )
paddle.minimum(Tensor([64, 32, 1, 2],"float32"), Tensor([64, 1, 1726, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.minimum(Tensor([8, 28, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([386694, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([252681, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.minimum(Tensor([1, 60, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([279279, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([64350, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([64320, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([69300, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([285444, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
paddle.minimum(Tensor([16, 38, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([286440, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([63000, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.minimum(Tensor([16, 34, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([54750, 2],"float32"), )
paddle.minimum(Tensor([39, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.minimum(Tensor([8, 43, 1, 2],"float32"), Tensor([8, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([150402, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
paddle.minimum(Tensor([16, 22, 1, 2],"float32"), Tensor([16, 1, 6069, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
paddle.minimum(Tensor([64, 31, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([222012, 2],"float32"), )
paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
paddle.minimum(Tensor([1, 62, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([84420, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([286464, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([79935, 2],"float32"), )
paddle.minimum(Tensor([1, 10, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([57000, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([63135, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([168795, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([241731, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([57000, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([52560, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([248616, 2],"float32"), )
paddle.minimum(Tensor([64, 20, 1, 2],"float32"), Tensor([64, 1, 1726, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([52080, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
paddle.minimum(Tensor([1, 41, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([278562, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([64170, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([277539, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([388032, 2],"float32"), )
paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
paddle.minimum(Tensor([1, 37, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.minimum(Tensor([1, 9, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([286464, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([70290, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([322245, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.minimum(Tensor([8, 8112, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
paddle.mm(Tensor([24, 1, 256],"float32"), Tensor([24, 256, 96],"float32"), )
paddle.mm(Tensor([9, 24, 49, 49],"float32"), Tensor([9, 24, 49, 32],"float32"), )
paddle.mm(Tensor([4, 1, 256],"float32"), Tensor([4, 256, 512],"float32"), )
paddle.mm(Tensor([4, 48, 49, 49],"float32"), Tensor([4, 48, 49, 32],"float32"), )
paddle.mm(Tensor([4, 48, 49, 32],"float32"), Tensor([4, 48, 32, 49],"float32"), )
paddle.mm(Tensor([9, 24, 49, 32],"float32"), Tensor([9, 24, 32, 49],"float32"), )
paddle.mm(Tensor([16, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.mod(Tensor([10, 1024],"int64"), Tensor([10, 1024],"int64"), )
paddle.multiply(Tensor([8, 217, 256],"float32"), Tensor([8, 217, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 57, 256],"float32"), Tensor([6, 57, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 201, 256],"float32"), Tensor([1, 201, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 83, 256],"float32"), Tensor([9, 83, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 101, 256],"float32"), Tensor([5, 101, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 123, 256],"float32"), Tensor([10, 123, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 34, 256],"float32"), Tensor([9, 34, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 184, 256],"float32"), Tensor([8, 184, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 129, 256],"float32"), Tensor([8, 129, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 94, 256],"float32"), Tensor([3, 94, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 23, 256],"float32"), Tensor([10, 23, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 136, 256],"float32"), Tensor([7, 136, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 43, 256],"float32"), Tensor([7, 43, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 172, 256],"float32"), Tensor([4, 172, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 76, 256],"float32"), Tensor([8, 76, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 105, 256],"float32"), Tensor([10, 105, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 114, 256],"float32"), Tensor([10, 114, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 90, 256],"float32"), Tensor([4, 90, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 173, 256],"float32"), Tensor([8, 173, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 81, 256],"float32"), Tensor([10, 81, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 105, 256],"float32"), Tensor([4, 105, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 126, 256],"float32"), Tensor([4, 126, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 218, 256],"float32"), Tensor([8, 218, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 172, 256],"float32"), Tensor([7, 172, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 80, 256],"float32"), Tensor([7, 80, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 158, 256],"float32"), Tensor([6, 158, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 41, 256],"float32"), Tensor([7, 41, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 80, 256],"float32"), Tensor([8, 80, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 65, 256],"float32"), Tensor([8, 65, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 149, 256],"float32"), Tensor([8, 149, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 141, 256],"float32"), Tensor([6, 141, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 92, 256],"float32"), Tensor([9, 92, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 125, 256],"float32"), Tensor([5, 125, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 92, 256],"float32"), Tensor([8, 92, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 163, 256],"float32"), Tensor([4, 163, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 102, 256],"float32"), Tensor([10, 102, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 141, 256],"float32"), Tensor([4, 141, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([4, 176, 14, 14],"float32"), y=Tensor([4, 176, 1, 1],"float32"), )
paddle.multiply(Tensor([6, 44, 256],"float32"), Tensor([6, 44, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 55, 256],"float32"), Tensor([6, 55, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 28, 256],"float32"), Tensor([9, 28, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 197, 256],"float32"), Tensor([1, 197, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 93, 256],"float32"), Tensor([6, 93, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 128, 256],"float32"), Tensor([10, 128, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 235, 256],"float32"), Tensor([1, 235, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 103, 256],"float32"), Tensor([2, 103, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 190, 256],"float32"), Tensor([8, 190, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 179, 256],"float32"), Tensor([6, 179, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 179, 256],"float32"), Tensor([8, 179, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 132, 256],"float32"), Tensor([3, 132, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 62, 256],"float32"), Tensor([9, 62, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 129, 256],"float32"), Tensor([2, 129, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 102, 256],"float32"), Tensor([5, 102, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 120, 256],"float32"), Tensor([6, 120, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 119, 256],"float32"), Tensor([10, 119, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([64, 96, 11, 11],"float32"), y=Tensor([64, 96, 1, 1],"float32"), )
paddle.multiply(x=Tensor([1, 1024, 21, 21],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(Tensor([1, 224, 256],"float32"), Tensor([1, 224, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 186, 256],"float32"), Tensor([2, 186, 256],"float32"), name=None, )
paddle.multiply(Tensor([270072],"float32"), Tensor([270072],"float32"), )
paddle.multiply(Tensor([9, 93, 256],"float32"), Tensor([9, 93, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([64, 96, 8, 8],"float32"), y=Tensor([64, 96, 1, 1],"float32"), )
paddle.multiply(Tensor([10, 185, 256],"float32"), Tensor([10, 185, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 227, 256],"float32"), Tensor([1, 227, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 176, 256],"float32"), Tensor([8, 176, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 50, 256],"float32"), Tensor([30, 50, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 70, 256],"float32"), Tensor([6, 70, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 51, 256],"float32"), Tensor([6, 51, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 131, 256],"float32"), Tensor([4, 131, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([4, 768, 14, 14],"float32"), y=Tensor([4, 768, 1, 1],"float32"), )
paddle.multiply(Tensor([6, 71, 256],"float32"), Tensor([6, 71, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 86, 256],"float32"), Tensor([6, 86, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 71, 256],"float32"), Tensor([9, 71, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 193, 256],"float32"), Tensor([8, 193, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 196, 256],"float32"), Tensor([1, 196, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 58, 256],"float32"), Tensor([10, 58, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 149, 256],"float32"), Tensor([6, 149, 256],"float32"), name=None, )
paddle.multiply(Tensor([85932],"float32"), Tensor([85932],"float32"), )
paddle.multiply(Tensor([3, 144, 256],"float32"), Tensor([3, 144, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 49, 256],"float32"), Tensor([10, 49, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 43, 256],"float32"), Tensor([10, 43, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 170, 256],"float32"), Tensor([7, 170, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 161, 256],"float32"), Tensor([6, 161, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 130, 256],"float32"), Tensor([10, 130, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 156, 256],"float32"), Tensor([10, 156, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 59, 256],"float32"), Tensor([7, 59, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 115, 256],"float32"), Tensor([6, 115, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 144, 256],"float32"), Tensor([2, 144, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 158, 256],"float32"), Tensor([3, 158, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 54, 256],"float32"), Tensor([9, 54, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 146, 256],"float32"), Tensor([10, 146, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 160, 256],"float32"), Tensor([8, 160, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 196, 256],"float32"), Tensor([8, 196, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 72, 256],"float32"), Tensor([6, 72, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 26, 256],"float32"), Tensor([10, 26, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 219, 256],"float32"), Tensor([8, 219, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 134, 256],"float32"), Tensor([4, 134, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([2, 1024, 19, 19],"float32"), y=Tensor([2, 1024, 1, 1],"float32"), )
paddle.multiply(Tensor([4, 148, 256],"float32"), Tensor([4, 148, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 167, 256],"float32"), Tensor([7, 167, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 169, 256],"float32"), Tensor([6, 169, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 82, 256],"float32"), Tensor([8, 82, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 207, 256],"float32"), Tensor([8, 207, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 94, 256],"float32"), Tensor([8, 94, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([64, 48, 16, 16],"float32"), y=Tensor([64, 48, 1, 1],"float32"), )
paddle.multiply(Tensor([6, 63, 256],"float32"), Tensor([6, 63, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 140, 256],"float32"), Tensor([4, 140, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 207, 256],"float32"), Tensor([2, 207, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 157, 256],"float32"), Tensor([10, 157, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 47, 256],"float32"), Tensor([10, 47, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 40, 256],"float32"), Tensor([5, 40, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 116, 256],"float32"), Tensor([10, 116, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 111, 256],"float32"), Tensor([10, 111, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 138, 256],"float32"), Tensor([6, 138, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 76, 256],"float32"), Tensor([7, 76, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 203, 256],"float32"), Tensor([8, 203, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 84, 256],"float32"), Tensor([5, 84, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 99, 256],"float32"), Tensor([3, 99, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 107, 256],"float32"), Tensor([9, 107, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 36, 256],"float32"), Tensor([8, 36, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 160, 256],"float32"), Tensor([6, 160, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 143, 256],"float32"), Tensor([8, 143, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 96, 256],"float32"), Tensor([9, 96, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 205, 256],"float32"), Tensor([2, 205, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 69, 256],"float32"), Tensor([4, 69, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 138, 256],"float32"), Tensor([10, 138, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([64, 256, 6, 8],"float32"), y=Tensor([64, 256, 1, 1],"float32"), )
paddle.multiply(Tensor([30, 54, 256],"float32"), Tensor([30, 54, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 103, 256],"float32"), Tensor([10, 103, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 199, 256],"float32"), Tensor([2, 199, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 54, 256],"float32"), Tensor([5, 54, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 49, 256],"float32"), Tensor([30, 49, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 136, 256],"float32"), Tensor([5, 136, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 67, 256],"float32"), Tensor([3, 67, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 53, 256],"float32"), Tensor([6, 53, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 116, 256],"float32"), Tensor([5, 116, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 57, 256],"float32"), Tensor([4, 57, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([2, 384, 15, 15],"float32"), y=Tensor([2, 384, 1, 1],"float32"), )
paddle.multiply(Tensor([6, 127, 256],"float32"), Tensor([6, 127, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 173, 256],"float32"), Tensor([4, 173, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 62, 256],"float32"), Tensor([5, 62, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 154, 256],"float32"), Tensor([3, 154, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 78, 256],"float32"), Tensor([3, 78, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 197, 256],"float32"), Tensor([2, 197, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 146, 256],"float32"), Tensor([4, 146, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 137, 256],"float32"), Tensor([10, 137, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 209, 256],"float32"), Tensor([1, 209, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 86, 256],"float32"), Tensor([5, 86, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 112, 256],"float32"), Tensor([8, 112, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 105, 256],"float32"), Tensor([5, 105, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 128, 256],"float32"), Tensor([4, 128, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([2, 1280, 18, 18],"float32"), y=Tensor([2, 1280, 1, 1],"float32"), )
paddle.multiply(Tensor([9, 58, 256],"float32"), Tensor([9, 58, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 66, 256],"float32"), Tensor([3, 66, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 74, 256],"float32"), Tensor([4, 74, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 100, 100],"float32"), Tensor([8, 100, 100],"float32"), )
paddle.multiply(Tensor([8, 59, 256],"float32"), Tensor([8, 59, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 171, 256],"float32"), Tensor([2, 171, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 127, 256],"float32"), Tensor([7, 127, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 66, 256],"float32"), Tensor([6, 66, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 57, 256],"float32"), Tensor([10, 57, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 135, 256],"float32"), Tensor([4, 135, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 163, 256],"float32"), Tensor([7, 163, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 60, 256],"float32"), Tensor([8, 60, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 123, 256],"float32"), Tensor([8, 123, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 90, 256],"float32"), Tensor([10, 90, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 158, 256],"float32"), Tensor([10, 158, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 161, 256],"float32"), Tensor([2, 161, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 154, 256],"float32"), Tensor([6, 154, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 102, 256],"float32"), Tensor([2, 102, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 112, 256],"float32"), Tensor([4, 112, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 68, 256],"float32"), Tensor([7, 68, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 82, 256],"float32"), Tensor([6, 82, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 64, 256],"float32"), Tensor([10, 64, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 85, 256],"float32"), Tensor([8, 85, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([4, 768, 13, 13],"float32"), y=Tensor([4, 768, 1, 1],"float32"), )
paddle.multiply(x=Tensor([2, 512, 21, 21],"float32"), y=Tensor([2, 512, 1, 1],"float32"), )
paddle.multiply(Tensor([10, 147, 256],"float32"), Tensor([10, 147, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 187, 256],"float32"), Tensor([8, 187, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 80, 256],"float32"), Tensor([4, 80, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 142, 256],"float32"), Tensor([3, 142, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 131, 256],"float32"), Tensor([10, 131, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 170, 256],"float32"), Tensor([6, 170, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 171, 256],"float32"), Tensor([10, 171, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 53, 256],"float32"), Tensor([7, 53, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 111, 256],"float32"), Tensor([7, 111, 256],"float32"), name=None, )
paddle.multiply(Tensor([64, 995],"float32"), Tensor([64, 995],"float32"), )
paddle.multiply(Tensor([4, 106, 256],"float32"), Tensor([4, 106, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 140, 256],"float32"), Tensor([3, 140, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 62, 256],"float32"), Tensor([10, 62, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 117, 256],"float32"), Tensor([7, 117, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 59, 256],"float32"), Tensor([4, 59, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([2, 640, 21, 21],"float32"), y=Tensor([2, 640, 1, 1],"float32"), )
paddle.multiply(Tensor([6, 147, 256],"float32"), Tensor([6, 147, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 203, 256],"float32"), Tensor([1, 203, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 167, 256],"float32"), Tensor([4, 167, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 176, 256],"float32"), Tensor([2, 176, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 131, 256],"float32"), Tensor([2, 131, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 111, 256],"float32"), Tensor([3, 111, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([16, 384, 12, 12],"float32"), y=Tensor([16, 384, 1, 1],"float32"), )
paddle.multiply(Tensor([2, 128, 256],"float32"), Tensor([2, 128, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 52, 256],"float32"), Tensor([10, 52, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 142, 256],"float32"), Tensor([6, 142, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 159, 256],"float32"), Tensor([3, 159, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 172, 256],"float32"), Tensor([10, 172, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 78, 256],"float32"), Tensor([4, 78, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 153, 256],"float32"), Tensor([3, 153, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 232, 256],"float32"), Tensor([1, 232, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 117, 256],"float32"), Tensor([9, 117, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([1, 1024, 19, 19],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(Tensor([4, 147, 256],"float32"), Tensor([4, 147, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 40, 256],"float32"), Tensor([7, 40, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 104, 256],"float32"), Tensor([8, 104, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 93, 256],"float32"), Tensor([7, 93, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 162, 256],"float32"), Tensor([2, 162, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 99, 256],"float32"), Tensor([9, 99, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 73, 256],"float32"), Tensor([9, 73, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 99, 256],"float32"), Tensor([10, 99, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 88, 256],"float32"), Tensor([10, 88, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([2, 384, 14, 14],"float32"), y=Tensor([2, 384, 1, 1],"float32"), )
paddle.multiply(Tensor([7, 175, 256],"float32"), Tensor([7, 175, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 166, 256],"float32"), Tensor([4, 166, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 22, 256],"float32"), Tensor([9, 22, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 188, 256],"float32"), Tensor([8, 188, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 135, 256],"float32"), Tensor([7, 135, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 25, 256],"float32"), Tensor([9, 25, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 57, 256],"float32"), Tensor([5, 57, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 74, 256],"float32"), Tensor([10, 74, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 35, 256],"float32"), Tensor([10, 35, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 122, 256],"float32"), Tensor([6, 122, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 95, 256],"float32"), Tensor([4, 95, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 142, 256],"float32"), Tensor([7, 142, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 130, 256],"float32"), Tensor([6, 130, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 115, 256],"float32"), Tensor([3, 115, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([4, 384, 14, 14],"float32"), y=Tensor([4, 384, 1, 1],"float32"), )
paddle.multiply(Tensor([6, 123, 256],"float32"), Tensor([6, 123, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 93, 256],"float32"), Tensor([4, 93, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 159, 256],"float32"), Tensor([2, 159, 256],"float32"), name=None, )
paddle.multiply(Tensor([330088],"float32"), Tensor([330088],"float32"), )
paddle.multiply(Tensor([6, 132, 256],"float32"), Tensor([6, 132, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 79, 256],"float32"), Tensor([5, 79, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 32, 256],"float32"), Tensor([7, 32, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([187679, 1],"float32"), y=Tensor([187679, 3],"float32"), )
paddle.multiply(Tensor([8, 46, 256],"float32"), Tensor([8, 46, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 195, 256],"float32"), Tensor([2, 195, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 46, 256],"float32"), Tensor([9, 46, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 150, 256],"float32"), Tensor([3, 150, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 127, 256],"float32"), Tensor([5, 127, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 53, 256],"float32"), Tensor([9, 53, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 96, 256],"float32"), Tensor([6, 96, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 155, 256],"float32"), Tensor([6, 155, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 163, 256],"float32"), Tensor([2, 163, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 107, 256],"float32"), Tensor([7, 107, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 202, 256],"float32"), Tensor([2, 202, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 214, 256],"float32"), Tensor([8, 214, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 80, 256],"float32"), Tensor([3, 80, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 67, 256],"float32"), Tensor([8, 67, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 106, 256],"float32"), Tensor([6, 106, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 35, 256],"float32"), Tensor([30, 35, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 136, 256],"float32"), Tensor([6, 136, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 98, 256],"float32"), Tensor([2, 98, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 145, 256],"float32"), Tensor([4, 145, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 48, 256],"float32"), Tensor([10, 48, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 99, 256],"float32"), Tensor([7, 99, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 115, 256],"float32"), Tensor([7, 115, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 151, 256],"float32"), Tensor([8, 151, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([64, 256, 7, 7],"float32"), y=Tensor([64, 256, 1, 1],"float32"), )
paddle.multiply(Tensor([6, 183, 256],"float32"), Tensor([6, 183, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 52, 256],"float32"), Tensor([30, 52, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 128, 256],"float32"), Tensor([6, 128, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 132, 256],"float32"), Tensor([4, 132, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 29, 256],"float32"), Tensor([8, 29, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 169, 256],"float32"), Tensor([10, 169, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 225, 256],"float32"), Tensor([8, 225, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 166, 256],"float32"), Tensor([8, 166, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 49, 256],"float32"), Tensor([8, 49, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 168, 256],"float32"), Tensor([8, 168, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 69, 256],"float32"), Tensor([9, 69, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 117, 256],"float32"), Tensor([4, 117, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 235, 256],"float32"), Tensor([8, 235, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([1, 72, 64, 128],"float32"), y=Tensor([1, 72, 1, 1],"float32"), )
paddle.multiply(Tensor([7, 35, 256],"float32"), Tensor([7, 35, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 56, 256],"float32"), Tensor([10, 56, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 55, 256],"float32"), Tensor([7, 55, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 76, 256],"float32"), Tensor([4, 76, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 64, 256],"float32"), Tensor([30, 64, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 74, 256],"float32"), Tensor([9, 74, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 162, 256],"float32"), Tensor([4, 162, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 182, 256],"float32"), Tensor([2, 182, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 47, 256],"float32"), Tensor([9, 47, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 115, 256],"float32"), Tensor([2, 115, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 138, 256],"float32"), Tensor([3, 138, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 84, 256],"float32"), Tensor([10, 84, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 110, 256],"float32"), Tensor([3, 110, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 42, 256],"float32"), Tensor([30, 42, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 96, 256],"float32"), Tensor([10, 96, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 56, 256],"float32"), Tensor([30, 56, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([8, 672, 11, 11],"float32"), y=Tensor([8, 672, 1, 1],"float32"), )
paddle.multiply(Tensor([8, 161, 256],"float32"), Tensor([8, 161, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 38, 256],"float32"), Tensor([10, 38, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 143, 256],"float32"), Tensor([3, 143, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 155, 256],"float32"), Tensor([7, 155, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 103, 256],"float32"), Tensor([7, 103, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 118, 256],"float32"), Tensor([9, 118, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 70, 256],"float32"), Tensor([10, 70, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 48, 256],"float32"), Tensor([9, 48, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 149, 256],"float32"), Tensor([10, 149, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 168, 256],"float32"), Tensor([7, 168, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 198, 256],"float32"), Tensor([1, 198, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 137, 256],"float32"), Tensor([8, 137, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 197, 256],"float32"), Tensor([8, 197, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 45, 256],"float32"), Tensor([8, 45, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 147, 256],"float32"), Tensor([7, 147, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 66, 256],"float32"), Tensor([8, 66, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 166, 256],"float32"), Tensor([10, 166, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 17, 256],"float32"), Tensor([30, 17, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([2, 1024, 20, 20],"float32"), y=Tensor([2, 1024, 1, 1],"float32"), )
paddle.multiply(Tensor([30, 57, 256],"float32"), Tensor([30, 57, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 165, 256],"float32"), Tensor([6, 165, 256],"float32"), name=None, )
paddle.multiply(Tensor([512, 1, 200],"float32"), Tensor([512, 1, 200],"float32"), )
paddle.multiply(Tensor([2, 200, 256],"float32"), Tensor([2, 200, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 237, 256],"float32"), Tensor([8, 237, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 141, 256],"float32"), Tensor([3, 141, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 172, 256],"float32"), Tensor([2, 172, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 71, 256],"float32"), Tensor([10, 71, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 72, 256],"float32"), Tensor([4, 72, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 138, 256],"float32"), Tensor([2, 138, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 222, 256],"float32"), Tensor([1, 222, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 37, 256],"float32"), Tensor([9, 37, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 162, 256],"float32"), Tensor([8, 162, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 124, 256],"float32"), Tensor([2, 124, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([16, 192, 12, 12],"float32"), y=Tensor([16, 192, 1, 1],"float32"), )
paddle.multiply(Tensor([4, 54, 256],"float32"), Tensor([4, 54, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 45, 256],"float32"), Tensor([7, 45, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 230, 256],"float32"), Tensor([1, 230, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 89, 256],"float32"), Tensor([3, 89, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 27, 256],"float32"), Tensor([9, 27, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 111, 256],"float32"), Tensor([2, 111, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 110, 256],"float32"), Tensor([6, 110, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 25, 256],"float32"), Tensor([8, 25, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 178, 256],"float32"), Tensor([8, 178, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 102, 256],"float32"), Tensor([9, 102, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 37, 256],"float32"), Tensor([8, 37, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 79, 256],"float32"), Tensor([9, 79, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 116, 256],"float32"), Tensor([9, 116, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 234, 256],"float32"), Tensor([1, 234, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 174, 256],"float32"), Tensor([10, 174, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 106, 256],"float32"), Tensor([10, 106, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 158, 256],"float32"), Tensor([2, 158, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 146, 256],"float32"), Tensor([3, 146, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 43, 256],"float32"), Tensor([6, 43, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 40, 256],"float32"), Tensor([8, 40, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 68, 256],"float32"), Tensor([8, 68, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 19, 256],"float32"), Tensor([30, 19, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 230, 256],"float32"), Tensor([8, 230, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 81, 256],"float32"), Tensor([3, 81, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 188, 256],"float32"), Tensor([2, 188, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 46, 256],"float32"), Tensor([7, 46, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 137, 256],"float32"), Tensor([6, 137, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 63, 256],"float32"), Tensor([4, 63, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 93, 256],"float32"), Tensor([8, 93, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 160, 256],"float32"), Tensor([3, 160, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 148, 256],"float32"), Tensor([8, 148, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 94, 256],"float32"), Tensor([6, 94, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 83, 256],"float32"), Tensor([6, 83, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 147, 256],"float32"), Tensor([2, 147, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 119, 256],"float32"), Tensor([9, 119, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 68, 256],"float32"), Tensor([9, 68, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 155, 256],"float32"), Tensor([3, 155, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 111, 256],"float32"), Tensor([8, 111, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 143, 256],"float32"), Tensor([6, 143, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 150, 256],"float32"), Tensor([10, 150, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 50, 256],"float32"), Tensor([10, 50, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 164, 256],"float32"), Tensor([6, 164, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 31, 256],"float32"), Tensor([8, 31, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 175, 256],"float32"), Tensor([8, 175, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 141, 256],"float32"), Tensor([8, 141, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 118, 256],"float32"), Tensor([2, 118, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 98, 256],"float32"), Tensor([3, 98, 256],"float32"), name=None, )
paddle.multiply(Tensor([3, 97, 256],"float32"), Tensor([3, 97, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 145, 256],"float32"), Tensor([7, 145, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 41, 256],"float32"), Tensor([10, 41, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 169, 256],"float32"), Tensor([8, 169, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 149, 256],"float32"), Tensor([7, 149, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 111, 256],"float32"), Tensor([6, 111, 256],"float32"), name=None, )
paddle.multiply(Tensor([9, 77, 256],"float32"), Tensor([9, 77, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 101, 256],"float32"), Tensor([6, 101, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 91, 256],"float32"), Tensor([4, 91, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 145, 256],"float32"), Tensor([6, 145, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 128, 256],"float32"), Tensor([7, 128, 256],"float32"), name=None, )
paddle.multiply(Tensor([6, 126, 256],"float32"), Tensor([6, 126, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 159, 256],"float32"), Tensor([4, 159, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 108, 256],"float32"), Tensor([8, 108, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 81, 256],"float32"), Tensor([7, 81, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 113, 256],"float32"), Tensor([2, 113, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 104, 256],"float32"), Tensor([7, 104, 256],"float32"), name=None, )
paddle.multiply(Tensor([4, 161, 256],"float32"), Tensor([4, 161, 256],"float32"), name=None, )
paddle.multiply(Tensor([10, 66, 256],"float32"), Tensor([10, 66, 256],"float32"), name=None, )
paddle.multiply(Tensor([7, 161, 256],"float32"), Tensor([7, 161, 256],"float32"), name=None, )
paddle.multiply(Tensor([5, 80, 256],"float32"), Tensor([5, 80, 256],"float32"), name=None, )
paddle.mv(Tensor([64, 32],"float64"), Tensor([32],"float64"), )
paddle.nan_to_num(Tensor([148, 5, 3],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([1948, 2],"float32"), neginf=-1.1920928955078125e-07, )
paddle.neg(Tensor([8, 16, 32],"float32"), )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 1024, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([4, 1536, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([4, 1024, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([7, 1024, 126],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([16, 1024, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([4, 1536, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([7, 512, 126],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([8, 1536, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 256, 16],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 48, 48],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 768, 15, 15],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 160, 19, 19],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 768, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 15, 15],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 42, 42],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1024, 21, 21],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 28, 28],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 512, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1280, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 32, 32],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 288, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 76, 76],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 192, 24, 24],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 38, 38],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([32, 64, 5, 80],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 240, 8, 80],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 384, 16, 16],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 160, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 46, 46],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 68, 68],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 56, 56],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1280, 19, 19],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 30, 30],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 17, 17],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 960, 16, 32],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 40, 40],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 192, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 384, 12, 12],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 21, 21],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 384, 10, 10],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 16, 16],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 672, 11, 11],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2208, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 192, 24, 24],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 8, 8],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 48, 48],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 768, 16, 16],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 640, 21, 21],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 30, 30],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 960, 14, 14],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 44, 44],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 36, 36],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 672, 16, 32],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 640, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 22, 22],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 32, 32],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1280, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 768, 36, 36],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 26, 26],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 19, 19],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1024, 19, 19],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 44, 44],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 16, 16],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1152, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 44, 44],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 8, 8],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 34, 34],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 192, 36, 36],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 30, 30],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 160, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 17, 17],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 768, 34, 34],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 11, 11],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 32],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 160, 16, 32],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 64, 64],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 32],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 2048, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 14, 14],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 30, 30],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 16, 16],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 24, 30, 30],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 384, 13, 13],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 18, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 23, 23],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 160, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 96, 12, 12],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 23, 23],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 22, 22],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 192, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 14, 14],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 14, 14],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 192, 9, 9],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 768, 32, 32],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 192, 40, 40],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 640, 22, 22],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 6, 6],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 160, 16, 32],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 52, 52],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 26, 26],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 44, 44],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1024, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1536, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 13, 13],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 72, 72],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 384, 18, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 34, 34],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 960, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1024, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 32, 32],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([60, 336, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 12, 12],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 72, 64, 128],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 120, 64, 128],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 19, 19],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 640, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 256, 6, 8],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 19, 19],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 512, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 192, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 176, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 12, 12],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 36, 36],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 26, 26],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 120, 28, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 26, 26],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 28, 28],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 21, 21],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 9, 9],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 24, 24],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 42, 42],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 52, 52],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 480, 32, 64],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 768, 11, 11],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([20, 192, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 18, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 24, 40, 40],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 160, 18, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 480, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 32, 32],"float32"), output_size=tuple(3,3,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 48, 16, 16],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2048, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 176, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 15, 15],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 32, 32],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 32],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 192, 10, 10],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 28, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2688, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 19, 19],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 96, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 30, 30],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 15, 15],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1920, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 256, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 160, 21, 21],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 192, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 384, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 16, 56, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 21, 21],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 512, 3, 80],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 13, 13],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 40, 40],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([60, 256, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 72, 28, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 80, 80],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 21, 21],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 24, 24],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 34, 34],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 768, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1024, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 960, 15, 15],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 5, 5],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1280, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 24, 24],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 9, 9],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 24, 24],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 12, 12],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 160, 9, 9],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 384, 14, 14],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 21, 21],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 14, 14],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2048, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 192, 28, 28],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 19, 19],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 384, 17, 17],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 384, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 256, 3, 160],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 192, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 40, 40],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 30, 30],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 17, 17],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 15, 15],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 96, 30, 30],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 60, 60],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1024, 22, 22],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 384, 17, 17],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 21, 21],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 60, 60],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 21, 21],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 17, 17],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 32, 32],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 28, 28],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1664, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 15, 15],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 17, 17],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 24, 24],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 28, 28],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 24, 24],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1024, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 34, 34],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 96, 24, 24],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 15, 15],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 176, 15, 15],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 576, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 480, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 11, 11],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 24, 60, 60],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([256, 64, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 44, 44],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 18, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 24, 60, 60],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 96, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 96, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 960, 16, 16],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 256, 8, 6],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 256, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 192, 8, 8],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 256, 56, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 40, 40],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 48, 48],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 56, 56],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 18, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([10, 512, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 22, 22],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 28, 28],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1000, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 40, 40],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 576, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 12, 12],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 38, 38],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 38, 38],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 384, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 32, 32],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 768, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 192, 30, 30],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 68, 68],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 640, 19, 19],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 672, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 36, 36],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 10, 10],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2048, 5, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([3, 2048, 8, 8],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 1024, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 44, 44],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 576, 14, 14],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 384, 15, 15],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 13, 13],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 192, 26, 26],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 768, 16, 16],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 256, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1000, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 192, 32, 32],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 192, 34, 34],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 768, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 672, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 960, 11, 11],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 72, 72],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 42, 42],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 48, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 768, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 26, 26],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 19, 19],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 192, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 160, 16, 32],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 64, 64],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 384, 23, 23],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 19, 19],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 32, 32],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 480, 4, 80],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 160, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 384, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 176, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 36, 36],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 19, 19],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 16, 16],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 15, 15],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 88, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 15, 15],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 26, 26],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 240, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 192, 16, 16],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 21, 21],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 288, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 12, 12],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 88, 11, 11],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 384, 15, 15],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 192, 17, 17],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 16, 32],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 24, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 672, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 320, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 7, 7],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 384, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 13, 13],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 192, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 13, 13],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 576, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 9, 9],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 15, 15],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 7, 7],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 9, 9],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 4, 4],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 16, 16],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1280, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 16, 32],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 24, 30, 30],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 384, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 96, 5, 5],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 384, 16, 16],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 384, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 120, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 8, 8],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 9, 9],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 6, 6],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 12, 12],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 88, 15, 15],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 18, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 7, 7],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 13, 13],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 192, 15, 15],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 88, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 30, 30],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 960, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 11, 11],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 13, 13],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 28, 28],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 14, 14],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 176, 11, 11],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 17, 17],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 14, 14],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 16, 16],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 32, 32],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 15, 15],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 144, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 17, 17],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1024, 6, 6],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 8, 8],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 192, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 16, 32],"float32"), output_size=4, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 88, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 14, 14],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 96, 6, 6],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 96, 6, 6],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 256, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 128, 8, 8],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 10, 10],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 7, 7],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 2, 2],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 240, 5, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 8, 8],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 7, 7],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 3, 3],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 8, 7],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 7, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 7, 9],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 9, 7],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 7, 8],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 7, 7],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 32],"float64"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 32],"float64"), output_size=Tensor([3],"int64"), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 32],"float64"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 32],"float64"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 32],"float64"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 32],"float64"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 32],"float64"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 32],"float64"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 32],"float64"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 32],"float64"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 32],"float64"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 32],"float64"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 32],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 32],"float64"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 32],"float64"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([128, 16],"float32"), Tensor([128],"int64"), Tensor([16, 8],"float32"), list[list[Tensor([16, 8],"float32"),Tensor([8, 5],"float32"),],list[Tensor([16, 4],"float32"),Tensor([4, 5],"float32"),],list[Tensor([16, 2],"float32"),Tensor([2, 5],"float32"),],], list[5,10,15,20,], None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 8, 8, 8],"float64"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 8, 8, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 8, 8, 8],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 8, 8, 8],"float64"), output_size=4, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1056, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1152, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 256, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 128, 56, 56],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 896, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 640, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 528, 13, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 192, 25, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 13, 13],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 64, 64],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([4, 384, 4, 80],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 512, 8, 8],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 768, 12, 12],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 1024, 4, 4],"float32"), kernel_size=tuple(2,2,), stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 256, 25, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 288, 25, 25],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 32, 32],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([2, 384, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 512, 3, 80],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 2048, 5, 5],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 128, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1280, 5, 5],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 8, 8],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 16, 16],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([1, 512, 5, 5],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 4, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([56, 3, 4, 4],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 40, 44],"float32"), kernel_size=tuple(1,5,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([1, 8, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 44, 40],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 7, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 3, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 40, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(Tensor([2, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.batch_norm(Tensor([1, 128, 1152],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 256, 2304],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 256, 1024],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 512, 256],"float32"), Tensor([512],"float32"), Tensor([512],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 256, 512],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 1024, 512],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 1024, 256],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1, 64, 256],"float32"), Tensor([64],"float32"), Tensor([64],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([1, 64, 576],"float32"), Tensor([64],"float32"), Tensor([64],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1, 128, 512],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([16, 24, 16, 8],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), Tensor([24],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 16, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1, 128, 256],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1, 512, 128],"float32"), Tensor([512],"float32"), Tensor([512],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), Tensor([8],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1, 256, 64],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), Tensor([16],"float64"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1, 64, 64],"float32"), Tensor([64],"float32"), Tensor([64],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1, 64, 49],"float32"), Tensor([64],"float32"), Tensor([64],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), Tensor([6],"float64"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([30, 40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.bilinear(Tensor([5, 5],"float32"), Tensor([5, 4],"float32"), Tensor([1000, 5, 4],"float32"), Tensor([1, 1000],"float32"), None, )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 9261, 4],"float32"), Tensor([8, 9261, 4],"float32"), weight=Tensor([8, 9261, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 11109, 1],"float32"), Tensor([4, 11109, 1],"float32"), weight=Tensor([4, 11109, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 6069, 4],"float32"), Tensor([4, 6069, 4],"float32"), weight=Tensor([4, 6069, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 12096, 10],"float32"), Tensor([2, 12096, 10],"float32"), weight=Tensor([2, 12096, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 9261, 4],"float32"), Tensor([2, 9261, 4],"float32"), weight=Tensor([2, 9261, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 2541, 4],"float32"), Tensor([4, 2541, 4],"float32"), weight=Tensor([4, 2541, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3549, 10],"float32"), Tensor([2, 3549, 10],"float32"), weight=Tensor([2, 3549, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 8400, 4],"float32"), Tensor([8, 8400, 4],"float32"), weight=Tensor([8, 8400, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 12096, 1],"float32"), Tensor([4, 12096, 1],"float32"), weight=Tensor([4, 12096, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 2541, 4],"float32"), Tensor([8, 2541, 4],"float32"), weight=Tensor([8, 2541, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 11109, 10],"float32"), Tensor([2, 11109, 10],"float32"), weight=Tensor([2, 11109, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 9261, 10],"float32"), Tensor([2, 9261, 10],"float32"), weight=Tensor([2, 9261, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 24276, 10],"float32"), Tensor([1, 24276, 10],"float32"), weight=Tensor([1, 24276, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 5376, 4],"float32"), Tensor([4, 5376, 4],"float32"), weight=Tensor([4, 5376, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 10164, 4],"float32"), Tensor([4, 10164, 4],"float32"), weight=Tensor([4, 10164, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 6069, 4],"float32"), Tensor([8, 6069, 4],"float32"), weight=Tensor([8, 6069, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 10164, 1],"float32"), Tensor([4, 10164, 1],"float32"), weight=Tensor([4, 10164, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 30324, 10],"float32"), Tensor([1, 30324, 10],"float32"), weight=Tensor([1, 30324, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 7581, 10],"float32"), Tensor([2, 7581, 10],"float32"), weight=Tensor([2, 7581, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 7581, 4],"float32"), Tensor([8, 7581, 4],"float32"), weight=Tensor([8, 7581, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 5376, 10],"float32"), Tensor([2, 5376, 10],"float32"), weight=Tensor([2, 5376, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 7581, 4],"float32"), Tensor([2, 7581, 4],"float32"), weight=Tensor([2, 7581, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 9261, 4],"float32"), Tensor([4, 9261, 4],"float32"), weight=Tensor([4, 9261, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 21504, 10],"float32"), Tensor([1, 21504, 10],"float32"), weight=Tensor([1, 21504, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 8400, 4],"float32"), Tensor([4, 8400, 4],"float32"), weight=Tensor([4, 8400, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 27216, 10],"float32"), Tensor([1, 27216, 10],"float32"), weight=Tensor([1, 27216, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 4725, 4],"float32"), Tensor([2, 4725, 4],"float32"), weight=Tensor([2, 4725, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 7581, 4],"float32"), Tensor([4, 7581, 4],"float32"), weight=Tensor([4, 7581, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 6069, 4],"float32"), Tensor([2, 6069, 4],"float32"), weight=Tensor([2, 6069, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 12096, 4],"float32"), Tensor([2, 12096, 4],"float32"), weight=Tensor([2, 12096, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 5376, 4],"float32"), Tensor([2, 5376, 4],"float32"), weight=Tensor([2, 5376, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 4725, 10],"float32"), Tensor([2, 4725, 10],"float32"), weight=Tensor([2, 4725, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 6804, 4],"float32"), Tensor([4, 6804, 4],"float32"), weight=Tensor([4, 6804, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 10164, 4],"float32"), Tensor([2, 10164, 4],"float32"), weight=Tensor([2, 10164, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 2100, 10],"float32"), Tensor([2, 2100, 10],"float32"), weight=Tensor([2, 2100, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 12096, 4],"float32"), Tensor([4, 12096, 4],"float32"), weight=Tensor([4, 12096, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 8400, 4],"float32"), Tensor([2, 8400, 4],"float32"), weight=Tensor([2, 8400, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 10164, 10],"float32"), Tensor([2, 10164, 10],"float32"), weight=Tensor([2, 10164, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 21504, 15],"float32"), Tensor([1, 21504, 15],"float32"), weight=Tensor([1, 21504, 15],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 5376, 4],"float32"), Tensor([8, 5376, 4],"float32"), weight=Tensor([8, 5376, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 4116, 10],"float32"), Tensor([2, 4116, 10],"float32"), weight=Tensor([2, 4116, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 8400, 10],"float32"), Tensor([2, 8400, 10],"float32"), weight=Tensor([2, 8400, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 4725, 4],"float32"), Tensor([8, 4725, 4],"float32"), weight=Tensor([8, 4725, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 6804, 4],"float32"), Tensor([8, 6804, 4],"float32"), weight=Tensor([8, 6804, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 4116, 4],"float32"), Tensor([8, 4116, 4],"float32"), weight=Tensor([8, 4116, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 11109, 4],"float32"), Tensor([2, 11109, 4],"float32"), weight=Tensor([2, 11109, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 9261, 1],"float32"), Tensor([4, 9261, 1],"float32"), weight=Tensor([4, 9261, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3024, 10],"float32"), Tensor([2, 3024, 10],"float32"), weight=Tensor([2, 3024, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 8400, 1],"float32"), Tensor([4, 8400, 1],"float32"), weight=Tensor([4, 8400, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 4725, 4],"float32"), Tensor([4, 4725, 4],"float32"), weight=Tensor([4, 4725, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 2541, 10],"float32"), Tensor([2, 2541, 10],"float32"), weight=Tensor([2, 2541, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 6804, 4],"float32"), Tensor([2, 6804, 4],"float32"), weight=Tensor([2, 6804, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 2100, 4],"float32"), Tensor([8, 2100, 4],"float32"), weight=Tensor([8, 2100, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 10164, 4],"float32"), Tensor([8, 10164, 4],"float32"), weight=Tensor([8, 10164, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 6804, 10],"float32"), Tensor([2, 6804, 10],"float32"), weight=Tensor([2, 6804, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 4116, 4],"float32"), Tensor([4, 4116, 4],"float32"), weight=Tensor([4, 4116, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 6069, 10],"float32"), Tensor([2, 6069, 10],"float32"), weight=Tensor([2, 6069, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 4116, 4],"float32"), Tensor([2, 4116, 4],"float32"), weight=Tensor([2, 4116, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3549, 4],"float32"), Tensor([2, 3549, 4],"float32"), weight=Tensor([2, 3549, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 7581, 1],"float32"), Tensor([2, 7581, 1],"float32"), weight=Tensor([2, 7581, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 6804, 1],"float32"), Tensor([2, 6804, 1],"float32"), weight=Tensor([2, 6804, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 8400, 1],"float32"), Tensor([2, 8400, 1],"float32"), weight=Tensor([2, 8400, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3549, 1],"float32"), Tensor([2, 3549, 1],"float32"), weight=Tensor([2, 3549, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 4116, 1],"float32"), Tensor([4, 4116, 1],"float32"), weight=Tensor([4, 4116, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 3549, 1],"float32"), Tensor([4, 3549, 1],"float32"), weight=Tensor([4, 3549, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 2100, 1],"float32"), Tensor([2, 2100, 1],"float32"), weight=Tensor([2, 2100, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 2100, 1],"float32"), Tensor([4, 2100, 1],"float32"), weight=Tensor([4, 2100, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 3024, 1],"float32"), Tensor([4, 3024, 1],"float32"), weight=Tensor([4, 3024, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 5376, 1],"float32"), Tensor([2, 5376, 1],"float32"), weight=Tensor([2, 5376, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 4116, 1],"float32"), Tensor([2, 4116, 1],"float32"), weight=Tensor([2, 4116, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 8400, 2],"float32"), Tensor([1, 8400, 2],"float32"), weight=Tensor([1, 8400, 2],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 11109, 1],"float32"), Tensor([2, 11109, 1],"float32"), weight=Tensor([2, 11109, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 6069, 1],"float32"), Tensor([2, 6069, 1],"float32"), weight=Tensor([2, 6069, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 2541, 1],"float32"), Tensor([2, 2541, 1],"float32"), weight=Tensor([2, 2541, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3024, 4],"float32"), Tensor([2, 3024, 4],"float32"), weight=Tensor([2, 3024, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 4725, 1],"float32"), Tensor([4, 4725, 1],"float32"), weight=Tensor([4, 4725, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 6069, 1],"float32"), Tensor([4, 6069, 1],"float32"), weight=Tensor([4, 6069, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 5376, 1],"float32"), Tensor([4, 5376, 1],"float32"), weight=Tensor([4, 5376, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 7581, 1],"float32"), Tensor([4, 7581, 1],"float32"), weight=Tensor([4, 7581, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 2541, 4],"float32"), Tensor([2, 2541, 4],"float32"), weight=Tensor([2, 2541, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 4725, 1],"float32"), Tensor([2, 4725, 1],"float32"), weight=Tensor([2, 4725, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3024, 1],"float32"), Tensor([2, 3024, 1],"float32"), weight=Tensor([2, 3024, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 2100, 4],"float32"), Tensor([2, 2100, 4],"float32"), weight=Tensor([2, 2100, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 10164, 1],"float32"), Tensor([2, 10164, 1],"float32"), weight=Tensor([2, 10164, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 2541, 1],"float32"), Tensor([4, 2541, 1],"float32"), weight=Tensor([4, 2541, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 9261, 1],"float32"), Tensor([2, 9261, 1],"float32"), weight=Tensor([2, 9261, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 12096, 1],"float32"), Tensor([2, 12096, 1],"float32"), weight=Tensor([2, 12096, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 6804, 1],"float32"), Tensor([4, 6804, 1],"float32"), weight=Tensor([4, 6804, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([139, 28, 28],"float32"), Tensor([139, 28, 28],"float32"), weight=Tensor([139, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([246, 28, 28],"float32"), Tensor([246, 28, 28],"float32"), weight=Tensor([246, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([263, 28, 28],"float32"), Tensor([263, 28, 28],"float32"), weight=Tensor([263, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([239, 28, 28],"float32"), Tensor([239, 28, 28],"float32"), weight=Tensor([239, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([272, 28, 28],"float32"), Tensor([272, 28, 28],"float32"), weight=Tensor([272, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([339, 14, 14],"float32"), Tensor([339, 14, 14],"float32"), weight=Tensor([339, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([329, 14, 14],"float32"), Tensor([329, 14, 14],"float32"), weight=Tensor([329, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([305, 28, 28],"float32"), Tensor([305, 28, 28],"float32"), weight=Tensor([305, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([434, 28, 28],"float32"), Tensor([434, 28, 28],"float32"), weight=Tensor([434, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([319, 28, 28],"float32"), Tensor([319, 28, 28],"float32"), weight=Tensor([319, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([183, 28, 28],"float32"), Tensor([183, 28, 28],"float32"), weight=Tensor([183, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([331, 14, 14],"float32"), Tensor([331, 14, 14],"float32"), weight=Tensor([331, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([292, 14, 14],"float32"), Tensor([292, 14, 14],"float32"), weight=Tensor([292, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([327, 14, 14],"float32"), Tensor([327, 14, 14],"float32"), weight=Tensor([327, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([298, 14, 14],"float32"), Tensor([298, 14, 14],"float32"), weight=Tensor([298, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([336, 28, 28],"float32"), Tensor([336, 28, 28],"float32"), weight=Tensor([336, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([334, 28, 28],"float32"), Tensor([334, 28, 28],"float32"), weight=Tensor([334, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([222, 28, 28],"float32"), Tensor([222, 28, 28],"float32"), weight=Tensor([222, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([346, 14, 14],"float32"), Tensor([346, 14, 14],"float32"), weight=Tensor([346, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([238, 28, 28],"float32"), Tensor([238, 28, 28],"float32"), weight=Tensor([238, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([343, 28, 28],"float32"), Tensor([343, 28, 28],"float32"), weight=Tensor([343, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([400, 28, 28],"float32"), Tensor([400, 28, 28],"float32"), weight=Tensor([400, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([206, 28, 28],"float32"), Tensor([206, 28, 28],"float32"), weight=Tensor([206, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([419, 28, 28],"float32"), Tensor([419, 28, 28],"float32"), weight=Tensor([419, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([297, 14, 14],"float32"), Tensor([297, 14, 14],"float32"), weight=Tensor([297, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([255, 28, 28],"float32"), Tensor([255, 28, 28],"float32"), weight=Tensor([255, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([154, 28, 28],"float32"), Tensor([154, 28, 28],"float32"), weight=Tensor([154, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([432, 28, 28],"float32"), Tensor([432, 28, 28],"float32"), weight=Tensor([432, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([290, 14, 14],"float32"), Tensor([290, 14, 14],"float32"), weight=Tensor([290, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([295, 14, 14],"float32"), Tensor([295, 14, 14],"float32"), weight=Tensor([295, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([330, 28, 28],"float32"), Tensor([330, 28, 28],"float32"), weight=Tensor([330, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([227, 28, 28],"float32"), Tensor([227, 28, 28],"float32"), weight=Tensor([227, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([328, 28, 28],"float32"), Tensor([328, 28, 28],"float32"), weight=Tensor([328, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([339, 28, 28],"float32"), Tensor([339, 28, 28],"float32"), weight=Tensor([339, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([350, 28, 28],"float32"), Tensor([350, 28, 28],"float32"), weight=Tensor([350, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([224, 28, 28],"float32"), Tensor([224, 28, 28],"float32"), weight=Tensor([224, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([305, 14, 14],"float32"), Tensor([305, 14, 14],"float32"), weight=Tensor([305, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([179, 28, 28],"float32"), Tensor([179, 28, 28],"float32"), weight=Tensor([179, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([329, 28, 28],"float32"), Tensor([329, 28, 28],"float32"), weight=Tensor([329, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([291, 14, 14],"float32"), Tensor([291, 14, 14],"float32"), weight=Tensor([291, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([332, 28, 28],"float32"), Tensor([332, 28, 28],"float32"), weight=Tensor([332, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([285, 28, 28],"float32"), Tensor([285, 28, 28],"float32"), weight=Tensor([285, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([136, 28, 28],"float32"), Tensor([136, 28, 28],"float32"), weight=Tensor([136, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 28, 28],"float32"), Tensor([300, 28, 28],"float32"), weight=Tensor([300, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([286, 14, 14],"float32"), Tensor([286, 14, 14],"float32"), weight=Tensor([286, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([204, 28, 28],"float32"), Tensor([204, 28, 28],"float32"), weight=Tensor([204, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([379, 28, 28],"float32"), Tensor([379, 28, 28],"float32"), weight=Tensor([379, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([193, 28, 28],"float32"), Tensor([193, 28, 28],"float32"), weight=Tensor([193, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([377, 28, 28],"float32"), Tensor([377, 28, 28],"float32"), weight=Tensor([377, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([307, 14, 14],"float32"), Tensor([307, 14, 14],"float32"), weight=Tensor([307, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([469, 14, 14],"float32"), Tensor([469, 14, 14],"float32"), weight=Tensor([469, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([408, 14, 14],"float32"), Tensor([408, 14, 14],"float32"), weight=Tensor([408, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([303, 28, 28],"float32"), Tensor([303, 28, 28],"float32"), weight=Tensor([303, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([380, 28, 28],"float32"), Tensor([380, 28, 28],"float32"), weight=Tensor([380, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([169, 28, 28],"float32"), Tensor([169, 28, 28],"float32"), weight=Tensor([169, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([196, 28, 28],"float32"), Tensor([196, 28, 28],"float32"), weight=Tensor([196, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([207, 28, 28],"float32"), Tensor([207, 28, 28],"float32"), weight=Tensor([207, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([251, 28, 28],"float32"), Tensor([251, 28, 28],"float32"), weight=Tensor([251, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([202, 28, 28],"float32"), Tensor([202, 28, 28],"float32"), weight=Tensor([202, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([401, 14, 14],"float32"), Tensor([401, 14, 14],"float32"), weight=Tensor([401, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([331, 28, 28],"float32"), Tensor([331, 28, 28],"float32"), weight=Tensor([331, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([343, 14, 14],"float32"), Tensor([343, 14, 14],"float32"), weight=Tensor([343, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([240, 28, 28],"float32"), Tensor([240, 28, 28],"float32"), weight=Tensor([240, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([383, 14, 14],"float32"), Tensor([383, 14, 14],"float32"), weight=Tensor([383, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([430, 14, 14],"float32"), Tensor([430, 14, 14],"float32"), weight=Tensor([430, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([273, 14, 14],"float32"), Tensor([273, 14, 14],"float32"), weight=Tensor([273, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([16, 176, 80],"float32"), Tensor([16, 176, 80],"float32"), weight=Tensor([16, 176, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([416, 28, 28],"float32"), Tensor([416, 28, 28],"float32"), weight=Tensor([416, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([476, 28, 28],"float32"), Tensor([476, 28, 28],"float32"), weight=Tensor([476, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([252, 28, 28],"float32"), Tensor([252, 28, 28],"float32"), weight=Tensor([252, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([245, 28, 28],"float32"), Tensor([245, 28, 28],"float32"), weight=Tensor([245, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([257, 28, 28],"float32"), Tensor([257, 28, 28],"float32"), weight=Tensor([257, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([260, 14, 14],"float32"), Tensor([260, 14, 14],"float32"), weight=Tensor([260, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([236, 28, 28],"float32"), Tensor([236, 28, 28],"float32"), weight=Tensor([236, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([316, 28, 28],"float32"), Tensor([316, 28, 28],"float32"), weight=Tensor([316, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([431, 28, 28],"float32"), Tensor([431, 28, 28],"float32"), weight=Tensor([431, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([289, 28, 28],"float32"), Tensor([289, 28, 28],"float32"), weight=Tensor([289, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([203, 28, 28],"float32"), Tensor([203, 28, 28],"float32"), weight=Tensor([203, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([371, 28, 28],"float32"), Tensor([371, 28, 28],"float32"), weight=Tensor([371, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([301, 28, 28],"float32"), Tensor([301, 28, 28],"float32"), weight=Tensor([301, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([284, 14, 14],"float32"), Tensor([284, 14, 14],"float32"), weight=Tensor([284, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([315, 28, 28],"float32"), Tensor([315, 28, 28],"float32"), weight=Tensor([315, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([351, 14, 14],"float32"), Tensor([351, 14, 14],"float32"), weight=Tensor([351, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([266, 14, 14],"float32"), Tensor([266, 14, 14],"float32"), weight=Tensor([266, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([306, 14, 14],"float32"), Tensor([306, 14, 14],"float32"), weight=Tensor([306, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([141, 28, 28],"float32"), Tensor([141, 28, 28],"float32"), weight=Tensor([141, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([366, 28, 28],"float32"), Tensor([366, 28, 28],"float32"), weight=Tensor([366, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([502, 28, 28],"float32"), Tensor([502, 28, 28],"float32"), weight=Tensor([502, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([178, 28, 28],"float32"), Tensor([178, 28, 28],"float32"), weight=Tensor([178, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([158, 28, 28],"float32"), Tensor([158, 28, 28],"float32"), weight=Tensor([158, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([317, 14, 14],"float32"), Tensor([317, 14, 14],"float32"), weight=Tensor([317, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([386, 28, 28],"float32"), Tensor([386, 28, 28],"float32"), weight=Tensor([386, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([124, 28, 28],"float32"), Tensor([124, 28, 28],"float32"), weight=Tensor([124, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([338, 14, 14],"float32"), Tensor([338, 14, 14],"float32"), weight=Tensor([338, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([274, 14, 14],"float32"), Tensor([274, 14, 14],"float32"), weight=Tensor([274, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([316, 14, 14],"float32"), Tensor([316, 14, 14],"float32"), weight=Tensor([316, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([319, 14, 14],"float32"), Tensor([319, 14, 14],"float32"), weight=Tensor([319, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([278, 28, 28],"float32"), Tensor([278, 28, 28],"float32"), weight=Tensor([278, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([302, 28, 28],"float32"), Tensor([302, 28, 28],"float32"), weight=Tensor([302, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([345, 28, 28],"float32"), Tensor([345, 28, 28],"float32"), weight=Tensor([345, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 14, 14],"float32"), Tensor([300, 14, 14],"float32"), weight=Tensor([300, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([428, 14, 14],"float32"), Tensor([428, 14, 14],"float32"), weight=Tensor([428, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([215, 28, 28],"float32"), Tensor([215, 28, 28],"float32"), weight=Tensor([215, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([268, 28, 28],"float32"), Tensor([268, 28, 28],"float32"), weight=Tensor([268, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([281, 28, 28],"float32"), Tensor([281, 28, 28],"float32"), weight=Tensor([281, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([350, 14, 14],"float32"), Tensor([350, 14, 14],"float32"), weight=Tensor([350, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([143, 28, 28],"float32"), Tensor([143, 28, 28],"float32"), weight=Tensor([143, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([253, 28, 28],"float32"), Tensor([253, 28, 28],"float32"), weight=Tensor([253, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([425, 28, 28],"float32"), Tensor([425, 28, 28],"float32"), weight=Tensor([425, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([367, 28, 28],"float32"), Tensor([367, 28, 28],"float32"), weight=Tensor([367, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([274, 28, 28],"float32"), Tensor([274, 28, 28],"float32"), weight=Tensor([274, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([410, 28, 28],"float32"), Tensor([410, 28, 28],"float32"), weight=Tensor([410, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([271, 28, 28],"float32"), Tensor([271, 28, 28],"float32"), weight=Tensor([271, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([171, 28, 28],"float32"), Tensor([171, 28, 28],"float32"), weight=Tensor([171, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([205, 28, 28],"float32"), Tensor([205, 28, 28],"float32"), weight=Tensor([205, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([415, 28, 28],"float32"), Tensor([415, 28, 28],"float32"), weight=Tensor([415, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([428, 28, 28],"float32"), Tensor([428, 28, 28],"float32"), weight=Tensor([428, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([388, 28, 28],"float32"), Tensor([388, 28, 28],"float32"), weight=Tensor([388, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([396, 28, 28],"float32"), Tensor([396, 28, 28],"float32"), weight=Tensor([396, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([375, 28, 28],"float32"), Tensor([375, 28, 28],"float32"), weight=Tensor([375, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([188, 28, 28],"float32"), Tensor([188, 28, 28],"float32"), weight=Tensor([188, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([270, 28, 28],"float32"), Tensor([270, 28, 28],"float32"), weight=Tensor([270, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([297, 28, 28],"float32"), Tensor([297, 28, 28],"float32"), weight=Tensor([297, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([473, 28, 28],"float32"), Tensor([473, 28, 28],"float32"), weight=Tensor([473, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([160, 28, 28],"float32"), Tensor([160, 28, 28],"float32"), weight=Tensor([160, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([226, 28, 28],"float32"), Tensor([226, 28, 28],"float32"), weight=Tensor([226, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([110, 28, 28],"float32"), Tensor([110, 28, 28],"float32"), weight=Tensor([110, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([340, 28, 28],"float32"), Tensor([340, 28, 28],"float32"), weight=Tensor([340, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([281, 14, 14],"float32"), Tensor([281, 14, 14],"float32"), weight=Tensor([281, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([405, 28, 28],"float32"), Tensor([405, 28, 28],"float32"), weight=Tensor([405, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([469, 28, 28],"float32"), Tensor([469, 28, 28],"float32"), weight=Tensor([469, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([290, 28, 28],"float32"), Tensor([290, 28, 28],"float32"), weight=Tensor([290, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([182, 28, 28],"float32"), Tensor([182, 28, 28],"float32"), weight=Tensor([182, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([137, 28, 28],"float32"), Tensor([137, 28, 28],"float32"), weight=Tensor([137, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([250, 28, 28],"float32"), Tensor([250, 28, 28],"float32"), weight=Tensor([250, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([371, 14, 14],"float32"), Tensor([371, 14, 14],"float32"), weight=Tensor([371, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([364, 28, 28],"float32"), Tensor([364, 28, 28],"float32"), weight=Tensor([364, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([376, 28, 28],"float32"), Tensor([376, 28, 28],"float32"), weight=Tensor([376, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([393, 28, 28],"float32"), Tensor([393, 28, 28],"float32"), weight=Tensor([393, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([419, 14, 14],"float32"), Tensor([419, 14, 14],"float32"), weight=Tensor([419, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([167, 28, 28],"float32"), Tensor([167, 28, 28],"float32"), weight=Tensor([167, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([377, 14, 14],"float32"), Tensor([377, 14, 14],"float32"), weight=Tensor([377, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([375, 14, 14],"float32"), Tensor([375, 14, 14],"float32"), weight=Tensor([375, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([123, 28, 28],"float32"), Tensor([123, 28, 28],"float32"), weight=Tensor([123, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([322, 28, 28],"float32"), Tensor([322, 28, 28],"float32"), weight=Tensor([322, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([292, 28, 28],"float32"), Tensor([292, 28, 28],"float32"), weight=Tensor([292, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([369, 28, 28],"float32"), Tensor([369, 28, 28],"float32"), weight=Tensor([369, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([192, 28, 28],"float32"), Tensor([192, 28, 28],"float32"), weight=Tensor([192, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([423, 28, 28],"float32"), Tensor([423, 28, 28],"float32"), weight=Tensor([423, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([293, 28, 28],"float32"), Tensor([293, 28, 28],"float32"), weight=Tensor([293, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([313, 14, 14],"float32"), Tensor([313, 14, 14],"float32"), weight=Tensor([313, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([159, 28, 28],"float32"), Tensor([159, 28, 28],"float32"), weight=Tensor([159, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([197, 28, 28],"float32"), Tensor([197, 28, 28],"float32"), weight=Tensor([197, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([482, 14, 14],"float32"), Tensor([482, 14, 14],"float32"), weight=Tensor([482, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([310, 28, 28],"float32"), Tensor([310, 28, 28],"float32"), weight=Tensor([310, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([406, 28, 28],"float32"), Tensor([406, 28, 28],"float32"), weight=Tensor([406, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([312, 28, 28],"float32"), Tensor([312, 28, 28],"float32"), weight=Tensor([312, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([347, 28, 28],"float32"), Tensor([347, 28, 28],"float32"), weight=Tensor([347, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([288, 28, 28],"float32"), Tensor([288, 28, 28],"float32"), weight=Tensor([288, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([269, 14, 14],"float32"), Tensor([269, 14, 14],"float32"), weight=Tensor([269, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([200, 28, 28],"float32"), Tensor([200, 28, 28],"float32"), weight=Tensor([200, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([195, 28, 28],"float32"), Tensor([195, 28, 28],"float32"), weight=Tensor([195, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([229, 28, 28],"float32"), Tensor([229, 28, 28],"float32"), weight=Tensor([229, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([360, 28, 28],"float32"), Tensor([360, 28, 28],"float32"), weight=Tensor([360, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([284, 28, 28],"float32"), Tensor([284, 28, 28],"float32"), weight=Tensor([284, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([304, 28, 28],"float32"), Tensor([304, 28, 28],"float32"), weight=Tensor([304, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([434, 14, 14],"float32"), Tensor([434, 14, 14],"float32"), weight=Tensor([434, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([190, 28, 28],"float32"), Tensor([190, 28, 28],"float32"), weight=Tensor([190, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([395, 28, 28],"float32"), Tensor([395, 28, 28],"float32"), weight=Tensor([395, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([295, 28, 28],"float32"), Tensor([295, 28, 28],"float32"), weight=Tensor([295, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([265, 28, 28],"float32"), Tensor([265, 28, 28],"float32"), weight=Tensor([265, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([365, 28, 28],"float32"), Tensor([365, 28, 28],"float32"), weight=Tensor([365, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([223, 28, 28],"float32"), Tensor([223, 28, 28],"float32"), weight=Tensor([223, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([269, 28, 28],"float32"), Tensor([269, 28, 28],"float32"), weight=Tensor([269, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([318, 28, 28],"float32"), Tensor([318, 28, 28],"float32"), weight=Tensor([318, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([258, 28, 28],"float32"), Tensor([258, 28, 28],"float32"), weight=Tensor([258, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([512, 14, 14],"float32"), Tensor([512, 14, 14],"float32"), weight=Tensor([512, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([399, 28, 28],"float32"), Tensor([399, 28, 28],"float32"), weight=Tensor([399, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([256, 28, 28],"float32"), Tensor([256, 28, 28],"float32"), weight=Tensor([256, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([366, 14, 14],"float32"), Tensor([366, 14, 14],"float32"), weight=Tensor([366, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([364, 14, 14],"float32"), Tensor([364, 14, 14],"float32"), weight=Tensor([364, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([135, 28, 28],"float32"), Tensor([135, 28, 28],"float32"), weight=Tensor([135, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([384, 14, 14],"float32"), Tensor([384, 14, 14],"float32"), weight=Tensor([384, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([209, 28, 28],"float32"), Tensor([209, 28, 28],"float32"), weight=Tensor([209, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([325, 28, 28],"float32"), Tensor([325, 28, 28],"float32"), weight=Tensor([325, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([385, 14, 14],"float32"), Tensor([385, 14, 14],"float32"), weight=Tensor([385, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([435, 28, 28],"float32"), Tensor([435, 28, 28],"float32"), weight=Tensor([435, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([454, 28, 28],"float32"), Tensor([454, 28, 28],"float32"), weight=Tensor([454, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([260, 28, 28],"float32"), Tensor([260, 28, 28],"float32"), weight=Tensor([260, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([282, 14, 14],"float32"), Tensor([282, 14, 14],"float32"), weight=Tensor([282, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([342, 28, 28],"float32"), Tensor([342, 28, 28],"float32"), weight=Tensor([342, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([286, 28, 28],"float32"), Tensor([286, 28, 28],"float32"), weight=Tensor([286, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([463, 28, 28],"float32"), Tensor([463, 28, 28],"float32"), weight=Tensor([463, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([217, 28, 28],"float32"), Tensor([217, 28, 28],"float32"), weight=Tensor([217, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([296, 14, 14],"float32"), Tensor([296, 14, 14],"float32"), weight=Tensor([296, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([451, 28, 28],"float32"), Tensor([451, 28, 28],"float32"), weight=Tensor([451, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([294, 28, 28],"float32"), Tensor([294, 28, 28],"float32"), weight=Tensor([294, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([385, 28, 28],"float32"), Tensor([385, 28, 28],"float32"), weight=Tensor([385, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([130, 28, 28],"float32"), Tensor([130, 28, 28],"float32"), weight=Tensor([130, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([241, 28, 28],"float32"), Tensor([241, 28, 28],"float32"), weight=Tensor([241, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([338, 28, 28],"float32"), Tensor([338, 28, 28],"float32"), weight=Tensor([338, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([474, 14, 14],"float32"), Tensor([474, 14, 14],"float32"), weight=Tensor([474, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([302, 14, 14],"float32"), Tensor([302, 14, 14],"float32"), weight=Tensor([302, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([230, 28, 28],"float32"), Tensor([230, 28, 28],"float32"), weight=Tensor([230, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([344, 14, 14],"float32"), Tensor([344, 14, 14],"float32"), weight=Tensor([344, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([386, 14, 14],"float32"), Tensor([386, 14, 14],"float32"), weight=Tensor([386, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([427, 28, 28],"float32"), Tensor([427, 28, 28],"float32"), weight=Tensor([427, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([289, 14, 14],"float32"), Tensor([289, 14, 14],"float32"), weight=Tensor([289, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([349, 28, 28],"float32"), Tensor([349, 28, 28],"float32"), weight=Tensor([349, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([128, 28, 28],"float32"), Tensor([128, 28, 28],"float32"), weight=Tensor([128, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([337, 28, 28],"float32"), Tensor([337, 28, 28],"float32"), weight=Tensor([337, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([415, 14, 14],"float32"), Tensor([415, 14, 14],"float32"), weight=Tensor([415, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([149, 28, 28],"float32"), Tensor([149, 28, 28],"float32"), weight=Tensor([149, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([422, 28, 28],"float32"), Tensor([422, 28, 28],"float32"), weight=Tensor([422, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([512, 28, 28],"float32"), Tensor([512, 28, 28],"float32"), weight=Tensor([512, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([294, 14, 14],"float32"), Tensor([294, 14, 14],"float32"), weight=Tensor([294, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([414, 28, 28],"float32"), Tensor([414, 28, 28],"float32"), weight=Tensor([414, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([176, 28, 28],"float32"), Tensor([176, 28, 28],"float32"), weight=Tensor([176, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([391, 14, 14],"float32"), Tensor([391, 14, 14],"float32"), weight=Tensor([391, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([144, 28, 28],"float32"), Tensor([144, 28, 28],"float32"), weight=Tensor([144, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([421, 14, 14],"float32"), Tensor([421, 14, 14],"float32"), weight=Tensor([421, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([403, 28, 28],"float32"), Tensor([403, 28, 28],"float32"), weight=Tensor([403, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([387, 28, 28],"float32"), Tensor([387, 28, 28],"float32"), weight=Tensor([387, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([420, 28, 28],"float32"), Tensor([420, 28, 28],"float32"), weight=Tensor([420, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([311, 14, 14],"float32"), Tensor([311, 14, 14],"float32"), weight=Tensor([311, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([298, 28, 28],"float32"), Tensor([298, 28, 28],"float32"), weight=Tensor([298, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([437, 28, 28],"float32"), Tensor([437, 28, 28],"float32"), weight=Tensor([437, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([280, 28, 28],"float32"), Tensor([280, 28, 28],"float32"), weight=Tensor([280, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([216, 28, 28],"float32"), Tensor([216, 28, 28],"float32"), weight=Tensor([216, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([439, 14, 14],"float32"), Tensor([439, 14, 14],"float32"), weight=Tensor([439, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([348, 14, 14],"float32"), Tensor([348, 14, 14],"float32"), weight=Tensor([348, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([214, 28, 28],"float32"), Tensor([214, 28, 28],"float32"), weight=Tensor([214, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([172, 28, 28],"float32"), Tensor([172, 28, 28],"float32"), weight=Tensor([172, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([310, 14, 14],"float32"), Tensor([310, 14, 14],"float32"), weight=Tensor([310, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([232, 28, 28],"float32"), Tensor([232, 28, 28],"float32"), weight=Tensor([232, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([125, 28, 28],"float32"), Tensor([125, 28, 28],"float32"), weight=Tensor([125, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([381, 28, 28],"float32"), Tensor([381, 28, 28],"float32"), weight=Tensor([381, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([317, 28, 28],"float32"), Tensor([317, 28, 28],"float32"), weight=Tensor([317, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([495, 28, 28],"float32"), Tensor([495, 28, 28],"float32"), weight=Tensor([495, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([429, 14, 14],"float32"), Tensor([429, 14, 14],"float32"), weight=Tensor([429, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([282, 28, 28],"float32"), Tensor([282, 28, 28],"float32"), weight=Tensor([282, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([327, 28, 28],"float32"), Tensor([327, 28, 28],"float32"), weight=Tensor([327, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([201, 28, 28],"float32"), Tensor([201, 28, 28],"float32"), weight=Tensor([201, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([173, 28, 28],"float32"), Tensor([173, 28, 28],"float32"), weight=Tensor([173, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([299, 28, 28],"float32"), Tensor([299, 28, 28],"float32"), weight=Tensor([299, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([354, 14, 14],"float32"), Tensor([354, 14, 14],"float32"), weight=Tensor([354, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([296, 28, 28],"float32"), Tensor([296, 28, 28],"float32"), weight=Tensor([296, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([273, 28, 28],"float32"), Tensor([273, 28, 28],"float32"), weight=Tensor([273, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([376, 14, 14],"float32"), Tensor([376, 14, 14],"float32"), weight=Tensor([376, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([441, 28, 28],"float32"), Tensor([441, 28, 28],"float32"), weight=Tensor([441, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([219, 28, 28],"float32"), Tensor([219, 28, 28],"float32"), weight=Tensor([219, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([314, 14, 14],"float32"), Tensor([314, 14, 14],"float32"), weight=Tensor([314, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([360, 14, 14],"float32"), Tensor([360, 14, 14],"float32"), weight=Tensor([360, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([510, 28, 28],"float32"), Tensor([510, 28, 28],"float32"), weight=Tensor([510, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([147, 28, 28],"float32"), Tensor([147, 28, 28],"float32"), weight=Tensor([147, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([247, 28, 28],"float32"), Tensor([247, 28, 28],"float32"), weight=Tensor([247, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([265, 14, 14],"float32"), Tensor([265, 14, 14],"float32"), weight=Tensor([265, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([266, 28, 28],"float32"), Tensor([266, 28, 28],"float32"), weight=Tensor([266, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([404, 14, 14],"float32"), Tensor([404, 14, 14],"float32"), weight=Tensor([404, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([194, 28, 28],"float32"), Tensor([194, 28, 28],"float32"), weight=Tensor([194, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([407, 28, 28],"float32"), Tensor([407, 28, 28],"float32"), weight=Tensor([407, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([162, 28, 28],"float32"), Tensor([162, 28, 28],"float32"), weight=Tensor([162, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([504, 28, 28],"float32"), Tensor([504, 28, 28],"float32"), weight=Tensor([504, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([359, 28, 28],"float32"), Tensor([359, 28, 28],"float32"), weight=Tensor([359, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([411, 14, 14],"float32"), Tensor([411, 14, 14],"float32"), weight=Tensor([411, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([351, 28, 28],"float32"), Tensor([351, 28, 28],"float32"), weight=Tensor([351, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([311, 28, 28],"float32"), Tensor([311, 28, 28],"float32"), weight=Tensor([311, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([301, 14, 14],"float32"), Tensor([301, 14, 14],"float32"), weight=Tensor([301, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([213, 28, 28],"float32"), Tensor([213, 28, 28],"float32"), weight=Tensor([213, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([259, 28, 28],"float32"), Tensor([259, 28, 28],"float32"), weight=Tensor([259, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([155, 28, 28],"float32"), Tensor([155, 28, 28],"float32"), weight=Tensor([155, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([220, 28, 28],"float32"), Tensor([220, 28, 28],"float32"), weight=Tensor([220, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([233, 28, 28],"float32"), Tensor([233, 28, 28],"float32"), weight=Tensor([233, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([389, 14, 14],"float32"), Tensor([389, 14, 14],"float32"), weight=Tensor([389, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([231, 28, 28],"float32"), Tensor([231, 28, 28],"float32"), weight=Tensor([231, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([234, 28, 28],"float32"), Tensor([234, 28, 28],"float32"), weight=Tensor([234, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([409, 28, 28],"float32"), Tensor([409, 28, 28],"float32"), weight=Tensor([409, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([313, 28, 28],"float32"), Tensor([313, 28, 28],"float32"), weight=Tensor([313, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([221, 28, 28],"float32"), Tensor([221, 28, 28],"float32"), weight=Tensor([221, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([267, 28, 28],"float32"), Tensor([267, 28, 28],"float32"), weight=Tensor([267, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([132, 28, 28],"float32"), Tensor([132, 28, 28],"float32"), weight=Tensor([132, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([268, 14, 14],"float32"), Tensor([268, 14, 14],"float32"), weight=Tensor([268, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 1000],"float32"), Tensor([300, 1000],"float32"), weight=Tensor([300, 1000],"float32"), reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([353, 14, 14],"float32"), Tensor([353, 14, 14],"float32"), weight=Tensor([353, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([291, 28, 28],"float32"), Tensor([291, 28, 28],"float32"), weight=Tensor([291, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([208, 28, 28],"float32"), Tensor([208, 28, 28],"float32"), weight=Tensor([208, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([285, 14, 14],"float32"), Tensor([285, 14, 14],"float32"), weight=Tensor([285, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 28, 28],"float32"), Tensor([106, 28, 28],"float32"), weight=Tensor([106, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([117, 28, 28],"float32"), Tensor([117, 28, 28],"float32"), weight=Tensor([117, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([342, 14, 14],"float32"), Tensor([342, 14, 14],"float32"), weight=Tensor([342, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([237, 28, 28],"float32"), Tensor([237, 28, 28],"float32"), weight=Tensor([237, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([186, 28, 28],"float32"), Tensor([186, 28, 28],"float32"), weight=Tensor([186, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([361, 14, 14],"float32"), Tensor([361, 14, 14],"float32"), weight=Tensor([361, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([191, 28, 28],"float32"), Tensor([191, 28, 28],"float32"), weight=Tensor([191, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([354, 28, 28],"float32"), Tensor([354, 28, 28],"float32"), weight=Tensor([354, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([511, 28, 28],"float32"), Tensor([511, 28, 28],"float32"), weight=Tensor([511, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([261, 28, 28],"float32"), Tensor([261, 28, 28],"float32"), weight=Tensor([261, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([312, 14, 14],"float32"), Tensor([312, 14, 14],"float32"), weight=Tensor([312, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([413, 14, 14],"float32"), Tensor([413, 14, 14],"float32"), weight=Tensor([413, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([400, 14, 14],"float32"), Tensor([400, 14, 14],"float32"), weight=Tensor([400, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([326, 28, 28],"float32"), Tensor([326, 28, 28],"float32"), weight=Tensor([326, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([307, 28, 28],"float32"), Tensor([307, 28, 28],"float32"), weight=Tensor([307, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([248, 28, 28],"float32"), Tensor([248, 28, 28],"float32"), weight=Tensor([248, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([368, 28, 28],"float32"), Tensor([368, 28, 28],"float32"), weight=Tensor([368, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([448, 14, 14],"float32"), Tensor([448, 14, 14],"float32"), weight=Tensor([448, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([318, 14, 14],"float32"), Tensor([318, 14, 14],"float32"), weight=Tensor([318, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([212, 28, 28],"float32"), Tensor([212, 28, 28],"float32"), weight=Tensor([212, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([474, 28, 28],"float32"), Tensor([474, 28, 28],"float32"), weight=Tensor([474, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([341, 28, 28],"float32"), Tensor([341, 28, 28],"float32"), weight=Tensor([341, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([426, 28, 28],"float32"), Tensor([426, 28, 28],"float32"), weight=Tensor([426, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([325, 14, 14],"float32"), Tensor([325, 14, 14],"float32"), weight=Tensor([325, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([271, 14, 14],"float32"), Tensor([271, 14, 14],"float32"), weight=Tensor([271, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([359, 14, 14],"float32"), Tensor([359, 14, 14],"float32"), weight=Tensor([359, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([373, 14, 14],"float32"), Tensor([373, 14, 14],"float32"), weight=Tensor([373, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([228, 28, 28],"float32"), Tensor([228, 28, 28],"float32"), weight=Tensor([228, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([378, 28, 28],"float32"), Tensor([378, 28, 28],"float32"), weight=Tensor([378, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([402, 28, 28],"float32"), Tensor([402, 28, 28],"float32"), weight=Tensor([402, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([264, 28, 28],"float32"), Tensor([264, 28, 28],"float32"), weight=Tensor([264, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([138, 28, 28],"float32"), Tensor([138, 28, 28],"float32"), weight=Tensor([138, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([175, 28, 28],"float32"), Tensor([175, 28, 28],"float32"), weight=Tensor([175, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([174, 28, 28],"float32"), Tensor([174, 28, 28],"float32"), weight=Tensor([174, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([225, 28, 28],"float32"), Tensor([225, 28, 28],"float32"), weight=Tensor([225, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([283, 28, 28],"float32"), Tensor([283, 28, 28],"float32"), weight=Tensor([283, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([392, 28, 28],"float32"), Tensor([392, 28, 28],"float32"), weight=Tensor([392, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([439, 28, 28],"float32"), Tensor([439, 28, 28],"float32"), weight=Tensor([439, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([152, 28, 28],"float32"), Tensor([152, 28, 28],"float32"), weight=Tensor([152, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([401, 28, 28],"float32"), Tensor([401, 28, 28],"float32"), weight=Tensor([401, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([424, 28, 28],"float32"), Tensor([424, 28, 28],"float32"), weight=Tensor([424, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([356, 28, 28],"float32"), Tensor([356, 28, 28],"float32"), weight=Tensor([356, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([496, 14, 14],"float32"), Tensor([496, 14, 14],"float32"), weight=Tensor([496, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([242, 28, 28],"float32"), Tensor([242, 28, 28],"float32"), weight=Tensor([242, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([348, 28, 28],"float32"), Tensor([348, 28, 28],"float32"), weight=Tensor([348, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([116, 28, 28],"float32"), Tensor([116, 28, 28],"float32"), weight=Tensor([116, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([262, 28, 28],"float32"), Tensor([262, 28, 28],"float32"), weight=Tensor([262, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([417, 28, 28],"float32"), Tensor([417, 28, 28],"float32"), weight=Tensor([417, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([389, 28, 28],"float32"), Tensor([389, 28, 28],"float32"), weight=Tensor([389, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([126, 28, 28],"float32"), Tensor([126, 28, 28],"float32"), weight=Tensor([126, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([280, 14, 14],"float32"), Tensor([280, 14, 14],"float32"), weight=Tensor([280, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([382, 28, 28],"float32"), Tensor([382, 28, 28],"float32"), weight=Tensor([382, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([324, 28, 28],"float32"), Tensor([324, 28, 28],"float32"), weight=Tensor([324, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([309, 28, 28],"float32"), Tensor([309, 28, 28],"float32"), weight=Tensor([309, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([243, 28, 28],"float32"), Tensor([243, 28, 28],"float32"), weight=Tensor([243, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([267, 14, 14],"float32"), Tensor([267, 14, 14],"float32"), weight=Tensor([267, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([119, 28, 28],"float32"), Tensor([119, 28, 28],"float32"), weight=Tensor([119, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([249, 28, 28],"float32"), Tensor([249, 28, 28],"float32"), weight=Tensor([249, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([333, 28, 28],"float32"), Tensor([333, 28, 28],"float32"), weight=Tensor([333, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([367, 14, 14],"float32"), Tensor([367, 14, 14],"float32"), weight=Tensor([367, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([164, 28, 28],"float32"), Tensor([164, 28, 28],"float32"), weight=Tensor([164, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([261, 14, 14],"float32"), Tensor([261, 14, 14],"float32"), weight=Tensor([261, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([276, 14, 14],"float32"), Tensor([276, 14, 14],"float32"), weight=Tensor([276, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([320, 28, 28],"float32"), Tensor([320, 28, 28],"float32"), weight=Tensor([320, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([308, 28, 28],"float32"), Tensor([308, 28, 28],"float32"), weight=Tensor([308, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([381, 14, 14],"float32"), Tensor([381, 14, 14],"float32"), weight=Tensor([381, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([352, 28, 28],"float32"), Tensor([352, 28, 28],"float32"), weight=Tensor([352, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([457, 28, 28],"float32"), Tensor([457, 28, 28],"float32"), weight=Tensor([457, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([440, 28, 28],"float32"), Tensor([440, 28, 28],"float32"), weight=Tensor([440, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([181, 28, 28],"float32"), Tensor([181, 28, 28],"float32"), weight=Tensor([181, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([277, 28, 28],"float32"), Tensor([277, 28, 28],"float32"), weight=Tensor([277, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([322, 14, 14],"float32"), Tensor([322, 14, 14],"float32"), weight=Tensor([322, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([216, 14, 14],"float32"), Tensor([216, 14, 14],"float32"), weight=Tensor([216, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 28, 28],"float32"), Tensor([12, 28, 28],"float32"), weight=Tensor([12, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([18, 28, 28],"float32"), Tensor([18, 28, 28],"float32"), weight=Tensor([18, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([19, 28, 28],"float32"), Tensor([19, 28, 28],"float32"), weight=Tensor([19, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([251, 14, 14],"float32"), Tensor([251, 14, 14],"float32"), weight=Tensor([251, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([26, 28, 28],"float32"), Tensor([26, 28, 28],"float32"), weight=Tensor([26, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([245, 14, 14],"float32"), Tensor([245, 14, 14],"float32"), weight=Tensor([245, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([168, 14, 14],"float32"), Tensor([168, 14, 14],"float32"), weight=Tensor([168, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4, 300, 4],"float32"), Tensor([4, 300, 4],"float32"), weight=Tensor([4, 300, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([229, 14, 14],"float32"), Tensor([229, 14, 14],"float32"), weight=Tensor([229, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([170, 14, 14],"float32"), Tensor([170, 14, 14],"float32"), weight=Tensor([170, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([155, 14, 14],"float32"), Tensor([155, 14, 14],"float32"), weight=Tensor([155, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([16, 28, 28],"float32"), Tensor([16, 28, 28],"float32"), weight=Tensor([16, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([230, 14, 14],"float32"), Tensor([230, 14, 14],"float32"), weight=Tensor([230, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([183, 14, 14],"float32"), Tensor([183, 14, 14],"float32"), weight=Tensor([183, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([198, 14, 14],"float32"), Tensor([198, 14, 14],"float32"), weight=Tensor([198, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([205, 14, 14],"float32"), Tensor([205, 14, 14],"float32"), weight=Tensor([205, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([132, 14, 14],"float32"), Tensor([132, 14, 14],"float32"), weight=Tensor([132, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([8, 300, 4],"float32"), Tensor([8, 300, 4],"float32"), weight=Tensor([8, 300, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([160, 14, 14],"float32"), Tensor([160, 14, 14],"float32"), weight=Tensor([160, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([253, 14, 14],"float32"), Tensor([253, 14, 14],"float32"), weight=Tensor([253, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([172, 14, 14],"float32"), Tensor([172, 14, 14],"float32"), weight=Tensor([172, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([218, 14, 14],"float32"), Tensor([218, 14, 14],"float32"), weight=Tensor([218, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([215, 14, 14],"float32"), Tensor([215, 14, 14],"float32"), weight=Tensor([215, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([203, 14, 14],"float32"), Tensor([203, 14, 14],"float32"), weight=Tensor([203, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([238, 14, 14],"float32"), Tensor([238, 14, 14],"float32"), weight=Tensor([238, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([24, 28, 28],"float32"), Tensor([24, 28, 28],"float32"), weight=Tensor([24, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([247, 14, 14],"float32"), Tensor([247, 14, 14],"float32"), weight=Tensor([247, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([244, 14, 14],"float32"), Tensor([244, 14, 14],"float32"), weight=Tensor([244, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([139, 14, 14],"float32"), Tensor([139, 14, 14],"float32"), weight=Tensor([139, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([181, 14, 14],"float32"), Tensor([181, 14, 14],"float32"), weight=Tensor([181, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([241, 14, 14],"float32"), Tensor([241, 14, 14],"float32"), weight=Tensor([241, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([206, 14, 14],"float32"), Tensor([206, 14, 14],"float32"), weight=Tensor([206, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([171, 14, 14],"float32"), Tensor([171, 14, 14],"float32"), weight=Tensor([171, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([210, 14, 14],"float32"), Tensor([210, 14, 14],"float32"), weight=Tensor([210, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([252, 14, 14],"float32"), Tensor([252, 14, 14],"float32"), weight=Tensor([252, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([25, 28, 28],"float32"), Tensor([25, 28, 28],"float32"), weight=Tensor([25, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 28, 28],"float32"), Tensor([11, 28, 28],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([8, 200, 4],"float32"), Tensor([8, 200, 4],"float32"), weight=Tensor([8, 200, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([148, 14, 14],"float32"), Tensor([148, 14, 14],"float32"), weight=Tensor([148, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([162, 14, 14],"float32"), Tensor([162, 14, 14],"float32"), weight=Tensor([162, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([249, 14, 14],"float32"), Tensor([249, 14, 14],"float32"), weight=Tensor([249, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([17, 28, 28],"float32"), Tensor([17, 28, 28],"float32"), weight=Tensor([17, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([135, 14, 14],"float32"), Tensor([135, 14, 14],"float32"), weight=Tensor([135, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([223, 14, 14],"float32"), Tensor([223, 14, 14],"float32"), weight=Tensor([223, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([243, 14, 14],"float32"), Tensor([243, 14, 14],"float32"), weight=Tensor([243, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([26, 14, 14],"float32"), Tensor([26, 14, 14],"float32"), weight=Tensor([26, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([242, 14, 14],"float32"), Tensor([242, 14, 14],"float32"), weight=Tensor([242, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 28],"float32"), Tensor([10, 28, 28],"float32"), weight=Tensor([10, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([9, 28, 28],"float32"), Tensor([9, 28, 28],"float32"), weight=Tensor([9, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([211, 14, 14],"float32"), Tensor([211, 14, 14],"float32"), weight=Tensor([211, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([14, 28, 28],"float32"), Tensor([14, 28, 28],"float32"), weight=Tensor([14, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([237, 14, 14],"float32"), Tensor([237, 14, 14],"float32"), weight=Tensor([237, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([110, 14, 14],"float32"), Tensor([110, 14, 14],"float32"), weight=Tensor([110, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([196, 14, 14],"float32"), Tensor([196, 14, 14],"float32"), weight=Tensor([196, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([27, 14, 14],"float32"), Tensor([27, 14, 14],"float32"), weight=Tensor([27, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([21, 28, 28],"float32"), Tensor([21, 28, 28],"float32"), weight=Tensor([21, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([157, 14, 14],"float32"), Tensor([157, 14, 14],"float32"), weight=Tensor([157, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([233, 14, 14],"float32"), Tensor([233, 14, 14],"float32"), weight=Tensor([233, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([176, 14, 14],"float32"), Tensor([176, 14, 14],"float32"), weight=Tensor([176, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([8, 28, 28],"float32"), Tensor([8, 28, 28],"float32"), weight=Tensor([8, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([217, 14, 14],"float32"), Tensor([217, 14, 14],"float32"), weight=Tensor([217, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 28, 28],"float32"), Tensor([13, 28, 28],"float32"), weight=Tensor([13, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([186, 14, 14],"float32"), Tensor([186, 14, 14],"float32"), weight=Tensor([186, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([116, 14, 14],"float32"), Tensor([116, 14, 14],"float32"), weight=Tensor([116, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([199, 14, 14],"float32"), Tensor([199, 14, 14],"float32"), weight=Tensor([199, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([195, 14, 14],"float32"), Tensor([195, 14, 14],"float32"), weight=Tensor([195, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([20, 28, 28],"float32"), Tensor([20, 28, 28],"float32"), weight=Tensor([20, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([15, 28, 28],"float32"), Tensor([15, 28, 28],"float32"), weight=Tensor([15, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([234, 14, 14],"float32"), Tensor([234, 14, 14],"float32"), weight=Tensor([234, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([158, 14, 14],"float32"), Tensor([158, 14, 14],"float32"), weight=Tensor([158, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([125, 14, 14],"float32"), Tensor([125, 14, 14],"float32"), weight=Tensor([125, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([4, 200, 4],"float32"), Tensor([4, 200, 4],"float32"), weight=Tensor([4, 200, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 14, 14],"float32"), Tensor([12, 14, 14],"float32"), weight=Tensor([12, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([3, 28, 28],"float32"), Tensor([3, 28, 28],"float32"), weight=Tensor([3, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([15, 14, 14],"float32"), Tensor([15, 14, 14],"float32"), weight=Tensor([15, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 300, 1],"float32"), Tensor([2, 300, 1],"float32"), weight=Tensor([2, 300, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 192, 11],"float32"), Tensor([1, 192, 11],"float32"), weight=Tensor([1, 192, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 11],"float32"), Tensor([1, 200, 11],"float32"), weight=Tensor([1, 200, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 300, 4],"float32"), Tensor([2, 300, 4],"float32"), weight=Tensor([2, 300, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 14, 14],"float32"), Tensor([11, 14, 14],"float32"), weight=Tensor([11, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 196, 11],"float32"), Tensor([1, 196, 11],"float32"), weight=Tensor([1, 196, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([21, 14, 14],"float32"), Tensor([21, 14, 14],"float32"), weight=Tensor([21, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 300, 2],"float32"), Tensor([2, 300, 2],"float32"), weight=Tensor([2, 300, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([16, 14, 14],"float32"), Tensor([16, 14, 14],"float32"), weight=Tensor([16, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 200, 4],"float32"), Tensor([1, 200, 4],"float32"), weight=Tensor([1, 200, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 28],"float32"), Tensor([1, 28, 28],"float32"), weight=Tensor([1, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 28, 28],"float32"), Tensor([2, 28, 28],"float32"), weight=Tensor([2, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([19, 14, 14],"float32"), Tensor([19, 14, 14],"float32"), weight=Tensor([19, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 300, 11],"float32"), Tensor([1, 300, 11],"float32"), weight=Tensor([1, 300, 11],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 198, 1],"float32"), Tensor([2, 198, 1],"float32"), weight=Tensor([2, 198, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([7, 14, 14],"float32"), Tensor([7, 14, 14],"float32"), weight=Tensor([7, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 300, 4],"float32"), Tensor([1, 300, 4],"float32"), weight=Tensor([1, 300, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 192, 1],"float32"), Tensor([2, 192, 1],"float32"), weight=Tensor([2, 192, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 100, 2],"float32"), Tensor([2, 100, 2],"float32"), weight=Tensor([2, 100, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 300, 2],"float32"), Tensor([1, 300, 2],"float32"), weight=Tensor([1, 300, 2],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([24, 14, 14],"float32"), Tensor([24, 14, 14],"float32"), weight=Tensor([24, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([25, 14, 14],"float32"), Tensor([25, 14, 14],"float32"), weight=Tensor([25, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 200, 4],"float32"), Tensor([2, 200, 4],"float32"), weight=Tensor([2, 200, 4],"float32"), reduction="none", )
paddle.nn.functional.conv1d(Tensor([1, 80, 3000],"float32"), Tensor([384, 80, 3],"float32"), bias=Tensor([384],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 255],"float32"), Tensor([32, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 32, 1792],"float32"), Tensor([1, 32, 7],"float32"), bias=Tensor([1],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 80, 3000],"float32"), Tensor([512, 80, 3],"float32"), bias=Tensor([512],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 1007],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 400, 100],"float32"), Tensor([256, 100, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 80, 3000],"float32"), Tensor([1280, 80, 3],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([91, 128, 8],"float32"), Tensor([32, 128, 2],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 80, 3000],"float32"), Tensor([1024, 80, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 80, 3000],"float32"), Tensor([768, 80, 3],"float32"), bias=Tensor([768],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 89],"float32"), Tensor([80, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 7],"float32"), bias=Tensor([256],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float32"), Tensor([1, 256, 1],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 100],"float32"), Tensor([128, 256, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 1, 25500],"float32"), Tensor([64, 1, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 256, 28],"float32"), Tensor([256, 256, 11],"float32"), bias=Tensor([256],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 256, 28],"float32"), Tensor([256, 256, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 64, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([256, 200, 1],"float32"), Tensor([256, 1, 4],"float32"), bias=Tensor([256],"float32"), padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 20, 7],"float32"), Tensor([512, 20, 7],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 64, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 62],"float32"), Tensor([32, 32, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([32, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 64, 448],"float32"), Tensor([64, 64, 7],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 3],"float32"), bias=Tensor([32],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 20, 7],"float32"), Tensor([512, 20, 7],"float32"), bias=Tensor([512],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([52, 7, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([1, 32, 7],"float32"), bias=Tensor([1],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 11],"float32"), bias=Tensor([32],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 64, 448],"float32"), Tensor([64, 64, 3],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 1, 1024],"float32"), Tensor([32, 1, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 64, 448],"float32"), Tensor([64, 64, 11],"float32"), bias=Tensor([64],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 32, 1792],"float32"), Tensor([32, 32, 7],"float32"), bias=Tensor([32],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([14, 64, 7],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 10],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([32, 1, 3],"float32"), bias=None, padding=1, stride=list[1,], dilation=list[1,], groups=32, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 3],"float32"), Tensor([64, 1, 4],"float32"), bias=Tensor([64],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=64, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 64, 7],"float32"), Tensor([32, 64, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 7, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 24, 14],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([32, 16, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 32, 7],"float32"), Tensor([64, 8, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 256, 28],"float32"), Tensor([256, 128, 8],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 256, 28],"float32"), Tensor([256, 128, 8],"float32"), bias=Tensor([128],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 128, 112],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 64, 448],"float32"), Tensor([64, 32, 8],"float32"), bias=Tensor([32],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 128, 112],"float32"), Tensor([128, 64, 8],"float32"), bias=Tensor([64],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 64, 448],"float32"), Tensor([64, 32, 8],"float32"), bias=Tensor([32],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv2d(Tensor([1, 256, 8, 136],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 256, 2, 22],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 4, 10],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 512, 8, 52],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4096, 1, 11, 11],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([10, 1, 37, 389],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 4, 40],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 4, 64],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 64, 16, 96],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 8, 32],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 12],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 25, 73],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([3, 64, 16, 104],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 9, 73],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 112],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 4, 8],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 64, 16, 120],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 48],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 37, 453],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 2, 36],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 512, 4, 20],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 17, 129],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 512, 4, 40],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 20],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 64, 8, 112],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 64, 16, 80],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 8, 8],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 112],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 8, 14],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 8, 16],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 8, 24],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 8, 40],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 256, 4, 30],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 512, 8, 16],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 512, 4, 44],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([9, 128, 4, 52],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 256, 4, 36],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 64, 16, 144],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 128, 8, 52],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 512, 8, 16],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 68],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 1024, 4, 8],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([9, 64, 8, 104],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 12, 20],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 16, 16],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 52],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 160],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 16, 72],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([7, 256, 4, 38],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 512, 4, 12],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 16],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 4, 12],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 4, 34],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 16, 24],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 2, 8],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 256, 4, 8],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 2, 6],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 128, 17, 25],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 256, 16, 8],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 512, 4, 76],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 4, 20],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 16, 40],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 512, 12, 28],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 24, 64],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([7, 128, 8, 24],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 8, 32],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 160],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 8, 48],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 20],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 8, 36],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 24, 152],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 2, 6],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 69, 229],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 32],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 64, 24, 80],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 69, 69],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 16, 72],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 5, 5],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 64, 16, 160],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 152],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 1024, 4, 26],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 12, 32],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 40],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 32],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 128, 9, 25],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 40],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 4, 14],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 24],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 9, 129],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 1024, 4, 4],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 8, 16],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 152],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 4, 20],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 64, 16, 128],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 64, 24, 120],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 12, 32],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 8, 68],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 8, 80],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 6, 18],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 48],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 8],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([9, 128, 8, 44],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 64, 8, 88],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 8, 16],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 12, 48],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 2, 32],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 4, 84],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 6, 14],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 4, 68],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 4],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 1, 69, 293],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 6, 40],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 2, 30],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 1024, 2, 4],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 256, 4, 42],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 12, 76],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 13, 73],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 12, 40],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 37, 325],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 1024, 4, 8],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 12, 40],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([9, 256, 4, 22],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([7, 256, 4, 12],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 256, 2, 12],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 64, 16, 112],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 512, 4, 56],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 10],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 32, 56],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 256, 4, 2],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 6, 10],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 8, 32],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 1024, 2, 14],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 56],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 16, 64],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 128, 4, 76],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 24],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 8, 48],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 256, 16, 32],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 14],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 8, 120],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 72],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 4, 8],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 64, 16, 168],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 128, 8, 4],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 12, 52],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 512, 4, 28],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 512, 8, 4],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 8, 40],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 8, 28],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 5, 17],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 2, 24],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 16, 96],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 4, 20],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 8, 40],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 24, 56],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([7, 512, 8, 24],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 8, 160],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 24, 64],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 256, 9, 33],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 76],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 128, 4, 12],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 8, 68],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 256, 2, 22],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1024, 2, 10],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([24, 1, 131, 131],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([2, 256, 9, 81],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 2, 10],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 37, 389],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 8],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([7, 1024, 4, 12],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 4, 26],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 40, 104],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([9, 1024, 2, 26],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 64, 16, 144],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 2, 4],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 32],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 4],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 12, 32],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 36],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 128, 4, 24],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 24, 104],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 48],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 72],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 18],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 4, 24],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 128, 4, 56],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 1024, 2, 16],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 512, 8, 28],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([7, 128, 8, 76],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 512, 8, 8],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 6, 10],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 6, 24],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 512, 4, 16],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 96],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 24, 64],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 512, 4, 12],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 5, 25],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 6, 28],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 16, 40],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 1024, 6, 20],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 17, 81],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 32],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 128, 17, 33],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 4, 4],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 76],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 21, 53],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 16, 16],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 26],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 30],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 9, 17],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 512, 4, 20],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 24],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 256, 8, 48],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 64, 8, 88],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 6, 20],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 16],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 25, 41],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 9, 41],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 4, 24],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 8, 48],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 128, 8, 84],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 8, 40],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 512, 4, 4],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 4, 16],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 8, 56],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 64, 16, 128],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 2, 4],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 48],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 1024, 2, 12],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 512, 4, 32],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 25, 65],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 128, 8, 16],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 8, 60],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 8, 20],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 12, 60],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 12, 56],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 2, 34],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 64, 8, 64],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 6, 10],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 16, 32],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 256, 4, 24],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 256, 16, 32],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 24, 64],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 96],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 64],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 2, 16],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 68],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 4, 20],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 4, 6],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 8, 8],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 512, 4, 24],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 16, 16],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 2, 2],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 64, 8, 64],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 144],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([9, 64, 8, 104],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 8, 144],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 8, 168],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1024, 2, 12],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 512, 4, 60],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 2, 18],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 12, 56],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 1024, 6, 14],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 80],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 24, 40],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 20],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 8, 168],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 64, 8, 112],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 512, 4, 8],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 12, 20],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 16, 24],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 56],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 2, 4],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4096, 1, 10, 10],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([4, 1024, 2, 38],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 8, 128],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 512, 8, 8],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 44],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 8, 144],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 52],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 2, 36],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 128, 8, 32],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 128, 8, 48],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 16, 32],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 24, 152],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 8, 72],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 69, 389],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 4, 84],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 64, 8, 152],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 8, 64],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 1024, 4, 16],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 20, 52],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 69, 197],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 5, 37],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 8, 14],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 4, 4],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 16, 24],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 24, 112],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 24, 80],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 13, 49],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 256, 16, 8],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 4, 20],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 8, 32],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 64, 16, 56],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 8, 8],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 4, 40],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 2, 2],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 4],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 64, 16, 24],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 8, 16],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 64, 8, 48],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 256, 4, 24],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 4, 12],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 2, 38],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 2, 24],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 16, 16],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 18],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 8, 20],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 8, 28],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 512, 8, 20],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 256, 9, 5],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 64, 16, 104],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 16, 32],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([3, 256, 4, 26],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 12, 28],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 4, 22],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 22],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 64, 24, 56],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 9, 13],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 12, 52],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 6, 24],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 40],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 8, 48],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 2, 18],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 64, 24, 120],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 8, 64],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 80],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 48],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 64, 16, 160],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 512, 12, 60],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 512, 4, 76],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 1, 69, 325],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 13, 61],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 256, 2, 38],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 512, 8, 80],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 8, 144],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 5, 5],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 1024, 6, 30],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 8],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 32],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 4, 20],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 12],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 256, 4, 30],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 13, 33],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 6, 26],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 20, 52],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 4, 48],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 5, 17],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 69, 261],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 24],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 8, 80],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 37, 101],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 6, 40],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 69, 293],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1, 197, 517],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 32, 56],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 56],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 80],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 16, 64],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 24, 144],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([7, 64, 16, 48],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 512, 12, 28],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 64, 8, 152],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 8, 128],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 6, 30],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 512, 4, 20],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 37, 133],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 8, 16],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 8, 80],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 2, 8],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 2, 6],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 64, 16, 56],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 16],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 104],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 128, 4, 4],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 24, 104],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([12, 1, 131, 131],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([4, 64, 8, 72],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 5, 21],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 128, 8, 16],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([9, 64, 8, 104],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 128, 12, 56],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 72],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 69, 357],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 128, 8, 40],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 40],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 64, 24, 144],"float32"), Tensor([64, 64, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 4, 8],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 8, 44],"float32"), Tensor([512, 128, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([13, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 64, 32, 32],"float32"), Tensor([64, 1, 8, 8],"float32"), bias=None, padding=2, output_padding=0, stride=list[4,4,], dilation=list[1,1,], groups=64, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([14, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 256, 16, 16],"float32"), Tensor([256, 1, 16, 16],"float32"), bias=None, padding=4, output_padding=0, stride=list[8,8,], dilation=list[1,1,], groups=256, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([12, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([64, 32, 21, 9],"float32"), Tensor([32, 32, 5, 5],"float32"), bias=Tensor([32],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 80, 80],"float32"), Tensor([128, 128, 2, 2],"float32"), bias=Tensor([128],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([9, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 192, 2, 2],"float32"), Tensor([192, 192, 2, 2],"float32"), bias=Tensor([192],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 96, 2, 2],"float32"), Tensor([96, 96, 4, 4],"float32"), bias=Tensor([96],"float32"), padding=0, output_padding=0, stride=list[4,4,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([64, 64, 21, 9],"float32"), Tensor([64, 32, 5, 5],"float32"), bias=Tensor([32],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([11, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 128, 32, 32],"float32"), Tensor([128, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=128, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([10, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([3, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 256, 16, 16],"float32"), Tensor([256, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=256, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([3, 10, 27, 27],"float32"), bias=Tensor([10],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5, 3, 32, 32],"float32"), Tensor([3, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([12, 32, 15, 15],"float32"), Tensor([32, 1, 2, 2],"float32"), bias=Tensor([1],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 3, 32, 32],"float32"), Tensor([3, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[2,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 7, 7],"float32"), Tensor([3, 6, 5, 5],"float32"), bias=Tensor([6],"float32"), padding=2, output_padding=list[1,1,], stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 16],"float32"), Tensor([3, 5, 3, 3],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 1, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=1, groups=4, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 3],"float32"), Tensor([3, 5, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=list[20,36,], data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 4, 3, 3],"float32"), Tensor([4],"float32"), output_size=list[18,34,], padding="valid", stride=tuple(1,2,), dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 4, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=tuple(2,1,), groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 16],"float32"), Tensor([3, 2, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([12, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 8, 8],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 1, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 6, 6],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.cosine_similarity(Tensor([210, 1024],"float32"), Tensor([210, 1024],"float32"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([32, 128],"float32"), Tensor([32, 128],"float32"), )
paddle.nn.functional.cosine_similarity(Tensor([10, 12, 10],"float32"), Tensor([10, 1, 10],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cross_entropy(Tensor([7573, 32, 2],"float32"), Tensor([7573, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1748, 212],"float32"), Tensor([1748],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1277, 212],"float32"), Tensor([1277],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1499, 212],"float32"), Tensor([1499],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([831, 212],"float32"), Tensor([831],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([936, 212],"float32"), Tensor([936, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([646, 212],"float32"), Tensor([646, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1623, 212],"float32"), Tensor([1623],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1025, 212],"float32"), Tensor([1025],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1943, 212],"float32"), Tensor([1943],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([3699, 32, 2],"float32"), Tensor([3699, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([541, 212],"float32"), Tensor([541],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1527, 212],"float32"), Tensor([1527],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1120, 212],"float32"), Tensor([1120],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([795, 212],"float32"), Tensor([795],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1295, 212],"float32"), Tensor([1295],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([719, 212],"float32"), Tensor([719],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([790, 212],"float32"), Tensor([790],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([736, 212],"float32"), Tensor([736],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1297, 212],"float32"), Tensor([1297],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1284, 212],"float32"), Tensor([1284],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1206, 212],"float32"), Tensor([1206],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([7710, 32, 2],"float32"), Tensor([7710, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([58086, 2],"float32"), Tensor([58086],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([484, 212],"float32"), Tensor([484],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([758, 212],"float32"), Tensor([758],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6282, 32, 2],"float32"), Tensor([6282, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([849, 212],"float32"), Tensor([849, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([633, 212],"float32"), Tensor([633],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([825, 212],"float32"), Tensor([825, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1238, 212],"float32"), Tensor([1238],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([5548, 32, 2],"float32"), Tensor([5548, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([5976, 32, 2],"float32"), Tensor([5976, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1109, 212],"float32"), Tensor([1109],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1374, 212],"float32"), Tensor([1374],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([992, 212],"float32"), Tensor([992],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1123, 212],"float32"), Tensor([1123],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([550, 212],"float32"), Tensor([550, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1589, 212],"float32"), Tensor([1589],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1290, 212],"float32"), Tensor([1290],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([3702, 32, 2],"float32"), Tensor([3702, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2811, 32, 2],"float32"), Tensor([2811, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([917, 212],"float32"), Tensor([917],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1052, 212],"float32"), Tensor([1052],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1829, 212],"float32"), Tensor([1829],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([682, 212],"float32"), Tensor([682, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1230, 212],"float32"), Tensor([1230],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([761, 212],"float32"), Tensor([761],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1439, 212],"float32"), Tensor([1439],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1186, 212],"float32"), Tensor([1186],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1421, 212],"float32"), Tensor([1421],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([824, 212],"float32"), Tensor([824, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1671, 212],"float32"), Tensor([1671],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1472, 212],"float32"), Tensor([1472],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([764, 212],"float32"), Tensor([764],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([2009, 212],"float32"), Tensor([2009],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1478, 212],"float32"), Tensor([1478],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([692, 212],"float32"), Tensor([692],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1089, 212],"float32"), Tensor([1089],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([821, 212],"float32"), Tensor([821, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(input=Tensor([1950, 81],"float32"), label=Tensor([1950],"int64"), reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([744, 212],"float32"), Tensor([744],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([694, 212],"float32"), Tensor([694, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([721, 212],"float32"), Tensor([721],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([2081, 212],"float32"), Tensor([2081],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([709, 212],"float32"), Tensor([709],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([979, 212],"float32"), Tensor([979],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1413, 212],"float32"), Tensor([1413],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([3534, 32, 2],"float32"), Tensor([3534, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(input=Tensor([2037, 81],"float32"), label=Tensor([2037],"int64"), reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([940, 212],"float32"), Tensor([940, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1523, 212],"float32"), Tensor([1523],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1030, 212],"float32"), Tensor([1030],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([852, 212],"float32"), Tensor([852],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1857, 4, 17],"float32"), Tensor([1857, 4],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1021, 212],"float32"), Tensor([1021],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1378, 212],"float32"), Tensor([1378],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1463, 212],"float32"), Tensor([1463],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([14860, 8],"float32"), Tensor([14860],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1177, 212],"float32"), Tensor([1177],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([858, 212],"float32"), Tensor([858, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([515, 212],"float32"), Tensor([515, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2277, 32, 2],"float32"), Tensor([2277, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1851, 212],"float32"), Tensor([1851],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([948, 212],"float32"), Tensor([948, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([745, 212],"float32"), Tensor([745],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1774, 212],"float32"), Tensor([1774],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([966, 212],"float32"), Tensor([966],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([596, 212],"float32"), Tensor([596],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1610, 4, 17],"float32"), Tensor([1610, 4],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1079, 212],"float32"), Tensor([1079],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(input=Tensor([2036, 81],"float32"), label=Tensor([2036],"int64"), reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1104, 212],"float32"), Tensor([1104],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([5735, 32, 2],"float32"), Tensor([5735, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1291, 212],"float32"), Tensor([1291],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([993, 212],"float32"), Tensor([993],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([962, 212],"float32"), Tensor([962],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6351, 32, 2],"float32"), Tensor([6351, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1567, 212],"float32"), Tensor([1567],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([482, 212],"float32"), Tensor([482, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1367, 212],"float32"), Tensor([1367],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([781, 212],"float32"), Tensor([781],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1716, 212],"float32"), Tensor([1716],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1031, 212],"float32"), Tensor([1031],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([754, 212],"float32"), Tensor([754],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1304, 212],"float32"), Tensor([1304],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6805, 32, 2],"float32"), Tensor([6805, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([486, 212],"float32"), Tensor([486],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1053, 212],"float32"), Tensor([1053],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1188, 212],"float32"), Tensor([1188],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([698, 212],"float32"), Tensor([698, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1165, 212],"float32"), Tensor([1165],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1878, 212],"float32"), Tensor([1878],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1214, 212],"float32"), Tensor([1214],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1511, 212],"float32"), Tensor([1511],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([842, 212],"float32"), Tensor([842, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1292, 212],"float32"), Tensor([1292],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([838, 212],"float32"), Tensor([838],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([854, 212],"float32"), Tensor([854],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([796, 212],"float32"), Tensor([796],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([830, 212],"float32"), Tensor([830],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1259, 212],"float32"), Tensor([1259],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([996, 212],"float32"), Tensor([996],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6474, 32, 2],"float32"), Tensor([6474, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1542, 212],"float32"), Tensor([1542],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1517, 212],"float32"), Tensor([1517],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([938, 212],"float32"), Tensor([938],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([675, 212],"float32"), Tensor([675, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([7015, 32, 2],"float32"), Tensor([7015, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1179, 212],"float32"), Tensor([1179],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1777, 212],"float32"), Tensor([1777],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1138, 212],"float32"), Tensor([1138],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([3399, 32, 2],"float32"), Tensor([3399, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1006, 212],"float32"), Tensor([1006],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1232, 212],"float32"), Tensor([1232],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1373, 212],"float32"), Tensor([1373],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6255, 32, 2],"float32"), Tensor([6255, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([667, 212],"float32"), Tensor([667],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([821, 212],"float32"), Tensor([821],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1588, 212],"float32"), Tensor([1588],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1332, 212],"float32"), Tensor([1332],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1223, 212],"float32"), Tensor([1223],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([510, 212],"float32"), Tensor([510, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1180, 212],"float32"), Tensor([1180],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([920, 212],"float32"), Tensor([920, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1143, 212],"float32"), Tensor([1143],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([517, 212],"float32"), Tensor([517, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1541, 212],"float32"), Tensor([1541],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1563, 212],"float32"), Tensor([1563],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([4059, 32, 2],"float32"), Tensor([4059, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1029, 212],"float32"), Tensor([1029],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1676, 212],"float32"), Tensor([1676],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1438, 212],"float32"), Tensor([1438],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([718, 212],"float32"), Tensor([718],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([3783, 32, 2],"float32"), Tensor([3783, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([921, 212],"float32"), Tensor([921],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([5842, 32, 2],"float32"), Tensor([5842, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([819, 212],"float32"), Tensor([819],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6502, 32, 2],"float32"), Tensor([6502, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3036, 32, 2],"float32"), Tensor([3036, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1435, 212],"float32"), Tensor([1435],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([16032, 30],"float32"), Tensor([16032],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1282, 212],"float32"), Tensor([1282],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([662, 212],"float32"), Tensor([662, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([6870, 32, 2],"float32"), Tensor([6870, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4, 22400, 2],"float32"), Tensor([4, 22400, 1],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1435, 4, 22],"float32"), Tensor([1435, 4],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1532, 212],"float32"), Tensor([1532],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([952, 212],"float32"), Tensor([952],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1348, 212],"float32"), Tensor([1348],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6880, 32, 2],"float32"), Tensor([6880, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1054, 212],"float32"), Tensor([1054],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([846, 212],"float32"), Tensor([846],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([7270, 32, 2],"float32"), Tensor([7270, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([690, 212],"float32"), Tensor([690],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1315, 212],"float32"), Tensor([1315],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([851, 212],"float32"), Tensor([851, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([636, 212],"float32"), Tensor([636, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([7175, 32, 2],"float32"), Tensor([7175, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([6410, 32, 2],"float32"), Tensor([6410, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([838, 212],"float32"), Tensor([838, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([654, 212],"float32"), Tensor([654],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6084, 32, 2],"float32"), Tensor([6084, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1607, 212],"float32"), Tensor([1607],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1192, 212],"float32"), Tensor([1192],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1895, 212],"float32"), Tensor([1895],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([807, 212],"float32"), Tensor([807],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1394, 212],"float32"), Tensor([1394],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([510, 212],"float32"), Tensor([510],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([941, 212],"float32"), Tensor([941],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([124032, 2],"float32"), Tensor([124032],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([698, 212],"float32"), Tensor([698],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([987, 212],"float32"), Tensor([987, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1199, 212],"float32"), Tensor([1199],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([820, 212],"float32"), Tensor([820, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4458, 32, 2],"float32"), Tensor([4458, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1213, 212],"float32"), Tensor([1213],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([602, 212],"float32"), Tensor([602, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([5084, 32, 2],"float32"), Tensor([5084, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1310, 212],"float32"), Tensor([1310],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([3831, 32, 2],"float32"), Tensor([3831, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1737, 212],"float32"), Tensor([1737],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([875, 212],"float32"), Tensor([875],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([898, 212],"float32"), Tensor([898],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6248, 32, 2],"float32"), Tensor([6248, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1872, 4, 17],"float32"), Tensor([1872, 4],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([7780, 32, 2],"float32"), Tensor([7780, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1317, 212],"float32"), Tensor([1317],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1938, 212],"float32"), Tensor([1938],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1056, 212],"float32"), Tensor([1056],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1023, 212],"float32"), Tensor([1023],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1836, 212],"float32"), Tensor([1836],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([5060, 32, 2],"float32"), Tensor([5060, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1494, 212],"float32"), Tensor([1494],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([5566, 32, 2],"float32"), Tensor([5566, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1113, 4, 22],"float32"), Tensor([1113, 4],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([680, 212],"float32"), Tensor([680, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1093, 212],"float32"), Tensor([1093],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1417, 212],"float32"), Tensor([1417],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1134, 212],"float32"), Tensor([1134],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([4843, 32, 2],"float32"), Tensor([4843, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([58086, 2],"float32"), Tensor([58086],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([840, 212],"float32"), Tensor([840, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([601, 212],"float32"), Tensor([601],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1920, 212],"float32"), Tensor([1920],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([823, 212],"float32"), Tensor([823],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1686, 212],"float32"), Tensor([1686],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([944, 212],"float32"), Tensor([944, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([877, 212],"float32"), Tensor([877, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1514, 212],"float32"), Tensor([1514],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(input=Tensor([2045, 81],"float32"), label=Tensor([2045],"int64"), reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6935, 32, 2],"float32"), Tensor([6935, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([623, 212],"float32"), Tensor([623, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([512, 30, 20],"float32"), Tensor([512, 30],"int64"), weight=None, ignore_index=0, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([6117, 32, 2],"float32"), Tensor([6117, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3579, 32, 2],"float32"), Tensor([3579, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1704, 212],"float32"), Tensor([1704],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6929, 32, 2],"float32"), Tensor([6929, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([957, 212],"float32"), Tensor([957, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([6369, 32, 2],"float32"), Tensor([6369, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1221, 212],"float32"), Tensor([1221],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1333, 212],"float32"), Tensor([1333],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([670, 212],"float32"), Tensor([670],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1158, 212],"float32"), Tensor([1158],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([3060, 32, 2],"float32"), Tensor([3060, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([776, 212],"float32"), Tensor([776],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([660, 212],"float32"), Tensor([660, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1363, 212],"float32"), Tensor([1363],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([539, 212],"float32"), Tensor([539, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([64, 187, 50],"float32"), Tensor([64, 187],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1270, 212],"float32"), Tensor([1270],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1546, 212],"float32"), Tensor([1546],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([669, 212],"float32"), Tensor([669, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([679, 212],"float32"), Tensor([679, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1543, 212],"float32"), Tensor([1543],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([810, 212],"float32"), Tensor([810, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4990, 43],"float32"), Tensor([4990],"int64"), weight=None, ignore_index=42, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1453, 212],"float32"), Tensor([1453],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1753, 212],"float32"), Tensor([1753],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1596, 212],"float32"), Tensor([1596],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1219, 212],"float32"), Tensor([1219],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6391, 32, 2],"float32"), Tensor([6391, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([7165, 32, 2],"float32"), Tensor([7165, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([6296, 32, 2],"float32"), Tensor([6296, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([6291, 32, 2],"float32"), Tensor([6291, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1080, 212],"float32"), Tensor([1080],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1605, 212],"float32"), Tensor([1605],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([600, 212],"float32"), Tensor([600, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1082, 212],"float32"), Tensor([1082],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([7020, 32, 2],"float32"), Tensor([7020, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1088, 212],"float32"), Tensor([1088],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1233, 212],"float32"), Tensor([1233],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6960, 32, 2],"float32"), Tensor([6960, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1066, 212],"float32"), Tensor([1066],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([699, 212],"float32"), Tensor([699, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([971, 212],"float32"), Tensor([971, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1471, 212],"float32"), Tensor([1471],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([777, 212],"float32"), Tensor([777],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1536, 212],"float32"), Tensor([1536],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([942, 212],"float32"), Tensor([942, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([876, 212],"float32"), Tensor([876],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6954, 32, 2],"float32"), Tensor([6954, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1281, 212],"float32"), Tensor([1281],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1411, 212],"float32"), Tensor([1411],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6753, 32, 2],"float32"), Tensor([6753, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([7164, 32, 2],"float32"), Tensor([7164, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1429, 212],"float32"), Tensor([1429],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([7052, 32, 2],"float32"), Tensor([7052, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([956, 212],"float32"), Tensor([956, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([755, 212],"float32"), Tensor([755],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1352, 212],"float32"), Tensor([1352],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([893, 212],"float32"), Tensor([893],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1183, 212],"float32"), Tensor([1183],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1389, 212],"float32"), Tensor([1389],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([24, 158, 50],"float32"), Tensor([24, 158],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([671, 212],"float32"), Tensor([671, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1562, 212],"float32"), Tensor([1562],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6831, 32, 2],"float32"), Tensor([6831, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1230, 4, 22],"float32"), Tensor([1230, 4],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1512, 212],"float32"), Tensor([1512],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1287, 212],"float32"), Tensor([1287],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1040, 212],"float32"), Tensor([1040, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1084, 212],"float32"), Tensor([1084],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1128, 212],"float32"), Tensor([1128],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1761, 212],"float32"), Tensor([1761],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([256, 1000],"float32"), label=Tensor([256, 1],"int64"), soft_label=False, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1906, 32, 2],"float32"), Tensor([1906, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([772, 212],"float32"), Tensor([772],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1118, 212],"float32"), Tensor([1118],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1661, 212],"float32"), Tensor([1661],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([4, 125, 125, 7],"float64"), Tensor([4, 125, 125],"int64"), weight=Tensor([7],"float64"), ignore_index=255, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([580, 212],"float32"), Tensor([580, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(input=Tensor([2048, 81],"float32"), label=Tensor([2048],"int64"), reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1768, 212],"float32"), Tensor([1768],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1796, 212],"float32"), Tensor([1796],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1051, 212],"float32"), Tensor([1051],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1856, 212],"float32"), Tensor([1856],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1539, 212],"float32"), Tensor([1539],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([659, 212],"float32"), Tensor([659],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1408, 212],"float32"), Tensor([1408],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([4533, 32, 2],"float32"), Tensor([4533, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1653, 212],"float32"), Tensor([1653],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([980, 212],"float32"), Tensor([980, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3345, 32, 2],"float32"), Tensor([3345, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1015, 212],"float32"), Tensor([1015],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1098, 212],"float32"), Tensor([1098],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6911, 32, 2],"float32"), Tensor([6911, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1250, 212],"float32"), Tensor([1250],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1553, 212],"float32"), Tensor([1553],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([800, 212],"float32"), Tensor([800, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([8162, 32, 2],"float32"), Tensor([8162, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([995, 212],"float32"), Tensor([995],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([850, 212],"float32"), Tensor([850, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([864, 212],"float32"), Tensor([864],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1696, 212],"float32"), Tensor([1696],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([901, 212],"float32"), Tensor([901, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([929, 212],"float32"), Tensor([929, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1603, 212],"float32"), Tensor([1603],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([3795, 32, 2],"float32"), Tensor([3795, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1928, 212],"float32"), Tensor([1928],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([494, 212],"float32"), Tensor([494],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([989, 212],"float32"), Tensor([989],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([780, 212],"float32"), Tensor([780],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1579, 212],"float32"), Tensor([1579],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1549, 212],"float32"), Tensor([1549],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([960, 212],"float32"), Tensor([960, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([128, 1000],"float32"), label=Tensor([128, 1],"int64"), soft_label=False, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([861, 212],"float32"), Tensor([861],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([7065, 32, 2],"float32"), Tensor([7065, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([995, 212],"float32"), Tensor([995, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([912, 212],"float32"), Tensor([912, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1362, 212],"float32"), Tensor([1362],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1018, 212],"float32"), Tensor([1018],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([3658, 32, 2],"float32"), Tensor([3658, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1915, 4, 22],"float32"), Tensor([1915, 4],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([6976, 32, 2],"float32"), Tensor([6976, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([658, 212],"float32"), Tensor([658, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1420, 212],"float32"), Tensor([1420],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1755, 212],"float32"), Tensor([1755],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([827, 212],"float32"), Tensor([827],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([900, 212],"float32"), Tensor([900, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1481, 4, 17],"float32"), Tensor([1481, 4],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([803, 212],"float32"), Tensor([803],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([773, 212],"float32"), Tensor([773],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([641, 212],"float32"), Tensor([641, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([766, 212],"float32"), Tensor([766],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([974, 212],"float32"), Tensor([974],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6992, 32, 2],"float32"), Tensor([6992, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2946, 32, 2],"float32"), Tensor([2946, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3438, 32, 2],"float32"), Tensor([3438, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1721, 4, 17],"float32"), Tensor([1721, 4],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([937, 212],"float32"), Tensor([937, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3411, 32, 2],"float32"), Tensor([3411, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1697, 212],"float32"), Tensor([1697],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1349, 212],"float32"), Tensor([1349],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([4554, 32, 2],"float32"), Tensor([4554, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1189, 212],"float32"), Tensor([1189],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([859, 212],"float32"), Tensor([859, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1200, 212],"float32"), Tensor([1200],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1497, 212],"float32"), Tensor([1497],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1112, 212],"float32"), Tensor([1112],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1401, 212],"float32"), Tensor([1401],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([814, 212],"float32"), Tensor([814],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([4359, 32, 2],"float32"), Tensor([4359, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1312, 212],"float32"), Tensor([1312],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([2331, 212],"float32"), Tensor([2331],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([881, 212],"float32"), Tensor([881],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1680, 212],"float32"), Tensor([1680],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([6950, 32, 2],"float32"), Tensor([6950, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([794, 212],"float32"), Tensor([794],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([935, 212],"float32"), Tensor([935, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3072, 32, 2],"float32"), Tensor([3072, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([6122, 32, 2],"float32"), Tensor([6122, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([813, 212],"float32"), Tensor([813, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4816, 32, 2],"float32"), Tensor([4816, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(input=Tensor([2012, 81],"float32"), label=Tensor([2012],"int64"), reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([871, 212],"float32"), Tensor([871, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([621, 212],"float32"), Tensor([621],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1065, 212],"float32"), Tensor([1065],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([4293, 32, 2],"float32"), Tensor([4293, 32, 1],"int32"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.elu(Tensor([1, 21504, 2],"float32"), )
paddle.nn.functional.embedding(Tensor([105],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 48],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([30],"int64"), Tensor([511, 512],"bfloat16"), )
paddle.nn.functional.embedding(Tensor([104, 37],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 74],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 162],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 3],"int32"), Tensor([128, 1024],"float32"), )
paddle.nn.functional.embedding(Tensor([198],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 109],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([163],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([107],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([288, 11],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([47],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([135],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 171],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 51],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 77],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 37],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([206],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([116],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([215],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 45],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 38],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([211],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([220],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 104],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 37],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 80],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 82],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 79],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 199],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 166],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([127],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([121],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 100],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([18],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([202],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([162],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([408, 9],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 92],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([272, 13],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([268],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 57],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([204],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 35],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([160, 16],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([245],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 67],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([224, 13],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 99],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([272, 14],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([247],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([34],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([270],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([82],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 107],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 41],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 52],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([49],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([30],"int64"), Tensor([1024, 512],"float32"), )
paddle.nn.functional.embedding(Tensor([56, 45],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 117],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 54],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([128, 22],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 153],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 39],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([258],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 144],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([76],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 115],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 42],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([176, 20],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 156],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([123],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([61],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 3],"int64"), Tensor([128, 1024],"complex128"), )
paddle.nn.functional.embedding(Tensor([227],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([168],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 31],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([193],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([160],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 88],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 39],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([160, 21],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 38],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([140],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 43],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([184, 22],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([224, 15],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([292],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 58],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 142],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([55],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([93],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 95],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([137],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 128],"int64"), weight=Tensor([512, 768],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 16],"int32"), Tensor([128, 1024],"float16"), )
paddle.nn.functional.embedding(Tensor([64, 57],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 70],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([128, 27],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([224, 18],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([14],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 46],"int64"), weight=Tensor([600, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([133],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([257],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([120, 31],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 62],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 14],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 49],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 43],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 110],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 55],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 35],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([50257, 16],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 16],"int32"), Tensor([128, 1024],"complex64"), )
paddle.nn.functional.embedding(Tensor([90],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 60],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([44],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([128, 26],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([79],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 33],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 84],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 44],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([57],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([136, 22],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([147],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 89],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([280],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 84],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([128, 24],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 92],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 84],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([83],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([6],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([184, 15],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([118],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 72],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([200, 14],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 50],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 128],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([160, 17],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([152, 26],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([59],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([128, 30],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([339],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 94],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([168, 18],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([192, 10],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 72],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 124],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([168, 12],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([134],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 51],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 91],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1],"int64"), weight=Tensor([30000, 8],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 77],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([120, 29],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([256],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 67],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 54],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([298],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 106],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 93],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([110],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 75],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([160, 19],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 55],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([136, 30],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 122],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 31],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 41],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 98],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([176, 21],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 34],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([168, 23],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([160, 7],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([167],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([157],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([112, 36],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([240],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 45],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([222],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([169],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 37],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([232, 13],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([14, 209],"int64"), weight=Tensor([1029, 384],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 45],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 48],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 79],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([200, 17],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 16],"int32"), Tensor([128, 1024],"float32"), )
paddle.nn.functional.embedding(Tensor([200, 20],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 76],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 74],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 56],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 20],"int64"), weight=Tensor([50265, 16],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 128],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([187],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([70],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 37],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 82],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([45],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([229],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([261],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([256, 14],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([584, 6],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 102],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 63],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([408, 8],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 157],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([100],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 41],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([144],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([152, 18],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([217],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 85],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 116],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 127],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 57],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 28],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 81],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([60],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([200, 16],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([272, 12],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([104, 33],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([168, 19],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([68],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 46],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([336, 12],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 47],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 20],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 40],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 94],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([288, 14],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 36],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 50],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([160, 22],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 65],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([104, 25],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 27],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 15],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 93],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([66],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([184, 21],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([199],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 47],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 19],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([152, 23],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 19],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 73],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([98],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 174],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([480, 5],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([336],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([192, 18],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([164],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([33],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([225],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([173],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([78],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 32],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 42],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 128],"int64"), weight=Tensor([512, 768],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([128, 28],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 16],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([176, 16],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 9],"int64"), weight=Tensor([30000, 8],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([250],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 108],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 99],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 70],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([176, 17],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 118],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 141],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([271],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([168, 21],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([584, 7],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([196],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([296, 13],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([291],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 51],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 114],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 93],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 21],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 29],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([408, 7],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([262],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([269],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([288, 13],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 22],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([208, 13],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([312, 10],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 34],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 88],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 44],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 12],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 29],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 136],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 512],"int64"), weight=Tensor([512, 768],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 60],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 102],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([256, 16],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([136, 27],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([186],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 60],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([51],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 109],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([408, 10],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([65],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([120, 32],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 42],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([152, 20],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 11],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 30],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([263],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([264],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 37],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([144, 27],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([205],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([240, 17],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([136, 25],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([184, 16],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([274],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([136, 28],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 83],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 103],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([120, 30],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 20],"int64"), weight=Tensor([32000, 16],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([174],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 87],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 47],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 16],"int64"), Tensor([128, 1024],"complex128"), )
paddle.nn.functional.embedding(Tensor([160, 11],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 63],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([272],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([104, 36],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 52],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([175],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([207],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 115],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([302],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([161],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 55],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 121],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([104, 34],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 113],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 56],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([208, 17],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([200, 15],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([112, 21],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([180],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 38],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 20],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 35],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([138],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 111],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([287],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 36],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 36],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 90],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 114],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([192, 19],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 59],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([144, 21],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 46],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([43],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([117],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([168, 24],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 101],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 85],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 68],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([192],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([144, 25],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([194],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([276],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([102],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4, 512],"int64"), weight=Tensor([512, 1024],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 61],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([254],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([106],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 49],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 132],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([368, 8],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([91],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([112, 23],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([92],"int64"), weight=Tensor([512, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 16],"int32"), Tensor([128, 1024],"complex128"), )
paddle.nn.functional.embedding(Tensor([32, 66],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([184, 20],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 73],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 18],"int64"), weight=Tensor([257, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.gelu(Tensor([1, 136, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 56, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 162, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 112, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 151, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 144, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 73, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 43, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 256, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 193, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 118, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 34, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 21, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 37, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 81, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 126, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 23, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 22, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 18, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 32, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 98, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 157, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 129, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 17, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 108, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 33, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([8, 115, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 18, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([13016, 37],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 147, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 5, 24576],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 108, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 34, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 29, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 123, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 74, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 31, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 84, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 175, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 24, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 31, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 153, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 91, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 37, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 209, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 21, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 73, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 174, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 247, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 166, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 44, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 159, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 99, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 110, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 13, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 159, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 82, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 137, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 90, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 116, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 74, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 36, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 20, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 75, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 77, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([5, 51, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 26, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 63, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 18, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 100, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 105, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 55, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 29, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 99, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 93, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 156, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 125, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 95, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 142, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 48, 32, 160],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([2, 186, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 118, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 106, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 79, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 192, 16, 80],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([9, 72, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 104, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 49, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 128, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 28, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 80, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 106, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 51, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 172, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 114, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 33, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 161, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 65, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([9, 26, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 52, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 13, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 52, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 9, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([6, 134, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 67, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 42, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 182, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 45, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 128, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 74, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 11, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 231, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 106, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 147, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 169, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 35, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 52, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 58, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 85, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 150, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 17, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([9, 24, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 107, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 26, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 29, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 60, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 20, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 93, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 98, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 72, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 50, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 59, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 11, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 32, 32, 64],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 91, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 97, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([2, 140, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 65, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 120, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 62, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 192, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 58, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 102, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 169, 2048],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 98, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 152, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 124, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 100, 2048],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 161, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 133, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 154, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 73, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 135, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 96, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 65, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 160, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 125, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 89, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 135, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 121, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 115, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 23, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 34, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 68, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 76, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 160, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 200, 40],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([10, 17, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 213, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 106, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 25, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 12, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 384, 8, 80],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([5, 110, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 106, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 69, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 136, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 40, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 71, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 25, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 134, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 69, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 62, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 113, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 166, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 133, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 102, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 47, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 237, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 112, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 154, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 126, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 54, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 151, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 198, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 90, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 50, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 75, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 22, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 73, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 218, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 39, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 49, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 48, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 97, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 31, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 65, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 87, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 133, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 170, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 59, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 121, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 117, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 217, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 32, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 128, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 186, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 84, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 48, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6020, 37],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 155, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 324, 2048],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 26, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 131, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 55, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 105, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 138, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 113, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 34, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 113, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 127, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 134, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 55, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 62, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 38, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 111, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 75, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 40, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 66, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 120, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 1, 24576],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 80, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 204, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 114, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 115, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 113, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 78, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 175, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 71, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 95, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 108, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 70, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 70, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 149, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 17, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 100, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 145, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([5, 134, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 25, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([2, 137, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 67, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 35, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 400, 2048],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 129, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([9, 54, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 1024, 7, 7],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 161, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 27, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 48, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 28, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 117, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 40, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 79, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 58, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 187, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3012, 37],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 181, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([2, 103, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 102, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 74, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 68, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 148, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 86, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 61, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 400, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 36, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 89, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([5, 38, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 95, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 214, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 70, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 55, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 222, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 68, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 81, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 43, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 37, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 192, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 49, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 57, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 55, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 92, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 32, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 68, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 159, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 122, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 113, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 206, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 96, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 71, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 185, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 42, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 107, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 41, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([12, 226, 37],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 111, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 88, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 64, 32, 64],"float32"), )
paddle.nn.functional.gelu(Tensor([3019, 37],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 50, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 78, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 68, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 37, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 31, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 52, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 150, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 110, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 115, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 18, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 225, 2048],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 81, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 384, 1500],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 45, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([13, 32, 255],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 45, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 111, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 46, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 171, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 13, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([2, 68, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 122, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 52, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 136, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 93, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 216, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 29, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 14, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 221, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 86, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 111, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 131, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 202, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 181, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 162, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 112, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 23, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 106, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([128, 49, 64],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 143, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 69, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 105, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([7, 22, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 62, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 18, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 128, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 112, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 179, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 167, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 36, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 78, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([4, 156, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 161, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 146, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 17, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 37, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 104, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 46, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 74, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 116, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 120, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 84, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 37, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 87, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 165, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 81, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 146, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 27, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 79, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 529, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 47, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 48, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 24, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 20, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 111, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 189, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 205, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 64, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 178, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 147, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3, 144, 1024],"float32"), )
paddle.nn.functional.glu(Tensor([3, 75, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 34, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 69, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 106, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 181, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 156, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 77, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 133, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 123, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 150, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 51, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 209, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 68, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 68, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 145, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 64, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 192, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 127, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 196, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 150, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 246, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 108, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 225, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 43, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 101, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 174, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 117, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 96, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 165, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 29, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 195, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 21, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 31, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 54, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 73, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 56, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 111, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 181, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 59, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 93, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 93, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 142, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 125, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 95, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 137, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 125, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 92, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 76, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 115, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 91, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 30, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 50, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 39, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 131, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 143, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 169, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 161, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 115, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 133, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 99, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 60, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 140, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 144, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 55, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 144, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 54, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 135, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 108, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 134, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 102, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 82, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 171, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 114, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 34, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 88, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 159, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 99, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 114, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 102, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 110, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 130, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 184, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 84, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 55, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 85, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 168, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 61, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 49, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 112, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 213, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 45, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 175, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 78, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 53, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 87, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 182, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 26, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 86, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 156, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 111, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 41, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 167, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 180, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 139, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 63, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 60, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 163, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 172, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 50, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 117, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 208, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 122, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 44, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 182, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 118, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 108, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 34, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 62, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 86, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 170, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 156, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 77, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 195, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 173, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 21, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 159, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 62, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 147, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 132, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 137, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 103, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 58, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 129, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 29, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 29, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 97, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 73, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 73, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 44, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 130, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 129, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 81, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 134, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 125, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 83, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 168, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 157, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 40, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 222, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 124, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 67, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 45, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 175, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 152, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 158, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 141, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 66, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 55, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 220, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 108, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 119, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 160, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 205, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 164, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 169, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 151, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 163, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 66, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 65, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 198, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 22, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 135, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 114, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 180, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 75, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 119, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 134, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 23, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 30, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 92, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 101, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 94, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 96, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 103, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 140, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 156, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 174, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 71, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 33, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 33, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 100, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 60, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 180, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 153, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 101, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 64, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 48, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 108, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 109, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 72, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 74, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 237, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 102, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 180, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 125, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 139, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 196, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 146, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 64, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 102, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 158, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 228, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 156, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 129, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 100, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 139, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 83, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 149, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 166, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 57, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 160, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 157, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 90, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 44, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 230, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 94, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 178, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 174, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 80, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 114, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 122, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 73, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 53, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 87, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 147, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 81, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 136, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 243, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 119, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 106, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 76, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 159, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 224, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 128, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 35, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 170, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 37, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 97, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 73, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 235, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 56, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 112, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 86, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 149, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 169, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 90, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 120, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 75, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 132, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 121, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 147, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 51, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 101, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 31, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 124, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 99, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 98, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 145, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 63, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 73, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 74, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 172, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 127, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 154, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 129, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 56, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 128, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 148, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 210, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 116, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 64, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 82, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 160, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 106, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 53, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 118, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 73, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 94, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 20, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 163, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 235, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 85, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 77, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 105, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 39, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 76, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 50, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 126, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 70, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 134, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 70, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 64, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 69, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 130, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 198, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 89, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 102, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 133, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 121, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 113, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 228, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 245, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 50, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 114, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 111, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 79, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 219, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 72, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 141, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 121, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 131, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 204, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 85, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 37, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 200, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 108, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 157, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 116, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 160, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 132, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 77, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 140, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 57, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 27, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 87, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 119, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 33, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 207, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 164, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 105, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 130, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 45, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 43, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 165, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 137, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 164, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 100, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 40, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 170, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 28, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 84, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 104, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 128, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 99, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 67, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([4, 53, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 23, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 103, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 52, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 239, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 135, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 112, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 144, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 226, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 83, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 47, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 100, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 153, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 48, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 81, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 69, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 90, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 36, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 234, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 85, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 178, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 52, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 117, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 59, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 173, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 92, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 79, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 20, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 120, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 207, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([7, 152, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 179, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 32, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 215, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([6, 68, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 83, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 197, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([3, 81, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 102, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 134, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 96, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([10, 55, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([9, 39, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 203, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([2, 189, 512],"float32"), -1, None, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 10, 15],"float32"), Tensor([16, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 40, 30],"float32"), Tensor([8, 11, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 22, 22],"float32"), Tensor([8, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 9, 13],"float32"), Tensor([8, 1100, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 18, 25],"float32"), Tensor([8, 9, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 44, 44],"float32"), Tensor([8, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 10, 8],"float32"), Tensor([8, 6380, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([64, 32, 17, 17],"float32"), Tensor([64, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 46, 46],"float32"), Tensor([8, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 15, 15],"float32"), Tensor([16, 492, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 19, 29],"float32"), Tensor([16, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 18, 18],"float32"), Tensor([8, 496, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 40, 40],"float32"), Tensor([8, 492, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 32, 32],"float32"), Tensor([56, 32, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 45, 36],"float32"), Tensor([8, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 34, 34],"float32"), Tensor([16, 400, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 48, 36],"float32"), Tensor([8, 21, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 40, 40],"float32"), Tensor([16, 498, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 17, 17],"float32"), Tensor([16, 400, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([2, 1, 544, 544],"float32"), Tensor([2, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 768, 768],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 736, 736],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 20, 20],"float32"), Tensor([16, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 30, 30],"float32"), Tensor([16, 492, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 40, 40],"float32"), Tensor([16, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([32, 32, 20, 20],"float32"), Tensor([32, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([4, 32, 64, 64],"float32"), Tensor([4, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 36, 50],"float32"), Tensor([8, 1100, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 24, 24],"float32"), Tensor([8, 400, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 48, 36],"float32"), Tensor([8, 18, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([2, 1, 136, 136],"float32"), Tensor([2, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 36, 50],"float32"), Tensor([8, 22, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 24, 18],"float32"), Tensor([8, 1100, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 40, 40],"float32"), Tensor([16, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 23, 18],"float32"), Tensor([8, 9, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 22, 22],"float32"), Tensor([8, 400, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 40, 30],"float32"), Tensor([8, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 23, 23],"float32"), Tensor([8, 400, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 704, 704],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 176, 176],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([32, 32, 16, 16],"float32"), Tensor([32, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 192, 192],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 46, 46],"float32"), Tensor([8, 400, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 20, 20],"float32"), Tensor([8, 492, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 40, 30],"float32"), Tensor([8, 9, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 20, 20],"float32"), Tensor([16, 498, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 24, 18],"float32"), Tensor([8, 18, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 18, 25],"float32"), Tensor([8, 22, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 45, 36],"float32"), Tensor([8, 8550, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 48, 48],"float32"), Tensor([8, 400, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 24, 18],"float32"), Tensor([8, 21, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 48, 36],"float32"), Tensor([8, 1100, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 44, 44],"float32"), Tensor([8, 400, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 12, 9],"float32"), Tensor([8, 8550, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 184, 184],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 20, 15],"float32"), Tensor([8, 6380, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 23, 18],"float32"), Tensor([8, 8550, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 45, 36],"float32"), Tensor([8, 9, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 36, 50],"float32"), Tensor([8, 9, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 23, 18],"float32"), Tensor([8, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 36, 36],"float32"), Tensor([8, 496, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 23, 23],"float32"), Tensor([8, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 20, 20],"float32"), Tensor([16, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([32, 32, 20, 20],"float32"), Tensor([32, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 18, 25],"float32"), Tensor([8, 1100, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 40, 30],"float32"), Tensor([8, 6380, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 184, 184],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 9, 13],"float32"), Tensor([8, 22, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 12, 9],"float32"), Tensor([8, 9, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 20, 15],"float32"), Tensor([8, 9, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 192, 192],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 10, 8],"float32"), Tensor([8, 11, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 12, 9],"float32"), Tensor([8, 1100, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 176, 176],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 9, 13],"float32"), Tensor([8, 9, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 8, 8],"float32"), Tensor([56, 8, 8, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 10, 8],"float32"), Tensor([8, 9, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([2, 1, 136, 136],"float32"), Tensor([2, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 20, 15],"float32"), Tensor([8, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 16, 16],"float32"), Tensor([56, 16, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 12, 9],"float32"), Tensor([8, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 20, 15],"float32"), Tensor([8, 11, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 12, 9],"float32"), Tensor([8, 21, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 10, 8],"float32"), Tensor([8, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 64],"float32"), Tensor([1, 90, 90, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 12, 9],"float32"), Tensor([8, 18, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 64],"float32"), Tensor([1, 76, 76, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 64],"float32"), Tensor([1, 64, 64, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 32, 26],"float32"), Tensor([1, 32, 26, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 4, 4],"float32"), Tensor([56, 4, 4, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 2, 2],"float32"), Tensor([56, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 28],"float32"), Tensor([1, 28, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 28],"float32"), Tensor([1, 34, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.group_norm(Tensor([4, 256, 8, 120],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 16, 272],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 128, 8, 60],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 128, 8, 44],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 1024, 4, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 24, 96],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 24, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 256, 8, 84],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 16, 256],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 512, 12, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 64, 112],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 48, 160],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 64, 8, 88],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 8, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 16, 288],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 8, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 6, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 16, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 8, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 2, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 64, 32, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 1024, 4, 42],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 256, 4, 22],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 12, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 6, 38],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 1024, 6, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 256, 4, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 8, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 1024, 4, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 24, 160],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 64, 8, 120],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 8, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 64, 16, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 4, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 16, 160],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 8, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 4, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 4, 22],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 48, 208],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 10, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 12, 60],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 24, 96],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 12, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 64, 16, 88],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 6, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 22],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 12, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 16, 128],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 64, 16, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 8, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 128, 4, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 4, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 512, 8, 12],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 16, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 1024, 4, 22],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 64, 16, 96],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 4, 22],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 16, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 4, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 12, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 128, 8, 112],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 256, 8, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 128, 8, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 24, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 1024, 4, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 4, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 128, 8, 84],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 2, 10],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 2, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 24, 104],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 32, 160],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 12, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 8, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 40, 104],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 256, 8, 60],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 8, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 48, 128],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 8],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 256, 4, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 12, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 8, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 44],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 24, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 12, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 8],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 8, 12],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 16, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 8, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 128, 8, 104],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 30],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 4, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 8, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([7, 64, 16, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 1024, 4, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 2, 6],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 32, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 12, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 2, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 1024, 4, 30],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 16, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 8, 136],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 48, 304],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([7, 128, 8, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 24, 96],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 12, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 512, 4, 60],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 16, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 24, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 128, 8, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 64, 8, 104],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 24, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 512, 8, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 20, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 8, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 4, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 12, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 16, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 256, 4, 60],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 8],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 512, 4, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 128, 4, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 12, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 2, 12],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 1024, 4, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 10],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 12, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 256, 8, 44],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 24, 120],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 6, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 256, 8, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 128, 16, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 4, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 1024, 4, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 16, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 64, 8, 112],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 12],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 512, 4, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 8, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 256, 8, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 12, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 4, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 16, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 256, 8, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 4, 4],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 1024, 2, 30],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 24, 104],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 4, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 256, 4, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 8, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 512, 12, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 48, 128],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 24, 144],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 8, 136],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([7, 128, 8, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 48, 144],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 24, 152],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 512, 8, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 4, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 64, 8, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 64, 16, 144],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 6, 18],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 2, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 512, 4, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 16, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 10],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 256, 8, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 8, 128],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 128, 8, 152],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 16, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 24, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 24, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 8, 8],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 8, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 8, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 256, 8, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 512, 4, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 16, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 256, 8, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 16, 128],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 128, 8, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([7, 512, 8, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 1024, 4, 8],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 128, 8, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 16, 96],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 24, 120],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 4, 18],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 4, 8],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 16, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([7, 128, 16, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 4, 12],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 8, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 64, 16, 104],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 24, 112],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 256, 8, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 12, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 512, 8, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 20, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 4, 10],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 18],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 24, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 256, 8, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 512, 4, 44],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 8, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 2, 6],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 512, 8, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 256, 2, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 24, 160],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 1024, 2, 12],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 64, 16, 112],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 20, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 64, 8, 152],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 128, 4, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 128, 4, 44],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 48, 192],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 1024, 2, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 12, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 4, 4],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 24, 152],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 32, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 8, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 8, 128],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 512, 8, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 512, 12, 60],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 4, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 512, 4, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 4, 34],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 2, 4],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 64, 16, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 12, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 16, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 8, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 16, 88],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 12, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 1024, 2, 38],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 8, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 96],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 4, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 8, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 512, 4, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 24, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 16, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([7, 256, 8, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 256, 4, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 4, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 8, 96],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 64, 16, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 8, 8],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 64, 8, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 64, 8, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 4, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 4],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 6, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 4, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 24, 112],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 16, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 24, 144],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 256, 16, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 4, 68],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 68],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 128, 4, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 8, 160],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 22],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 256, 4, 30],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 256, 4, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 4, 8],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 4, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 32, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 24, 104],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 2, 12],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 8, 144],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 24, 152],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 8, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 4, 10],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 4, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 512, 8, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 256, 16, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 512, 4, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 16, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 8, 168],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 18],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 8, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 1024, 2, 22],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 48, 288],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 16, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 2, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 64, 32, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 256, 4, 44],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 4, 12],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 4, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 64, 48, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 128, 8, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 256, 4, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 8, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 1024, 2, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 6, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 4, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 4, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 8, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 4, 12],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 4, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 2, 8],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 32, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 16, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 512, 8, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 44],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 24, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 4, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 24, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 4, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 128, 8, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 1024, 2, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 128, 8, 120],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 32, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 4, 60],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 128, 16, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 12, 60],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 4, 8],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 4, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 16, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 8, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 24, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 64, 16, 240],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 8, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 8, 160],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 4, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 8, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 16, 320],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 2, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 4, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 64, 16, 144],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 4, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 6],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 128, 16, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 8, 168],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 64, 16, 168],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 4, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 8, 144],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([7, 1024, 4, 12],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([4, 1024, 2, 18],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 2, 30],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 4, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 256, 4, 42],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 64, 16, 120],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 8, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 24, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 2, 10],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 24, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 12, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 512, 12, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 12, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 256, 12, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 8, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 8, 44],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 12],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 1024, 2, 18],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 16, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 128, 8, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 128, 16, 104],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 512, 4, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 1024, 4, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 8, 8],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 128, 8, 88],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 8, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([512, 768, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 840, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 432, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([30, 200, 40],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([128, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 464, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 1024, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 1200, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 256, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([640, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([640, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 1024, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 1280, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 640, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 232, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 720, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([640, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 1280, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 384, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 200, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 256, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 720, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 304, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 168, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 48, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 232, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 504, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 128, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 640, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([24, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 176, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([60, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 88, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 176, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([60, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 152, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 384, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([60, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 104, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 48, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([96, 480, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 600, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([48, 640, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 64, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 216, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 60, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([640, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([96, 240, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([60, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([48, 1280, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([64, 384, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([64, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 120, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 152, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 256, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([64, 512, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([512, 88, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([64, 192, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([90, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 384, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 768, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([32, 384, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 88, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([640, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 116, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 360, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([32, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([64, 256, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 64, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 88, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 192, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 184, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 128, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([90, 256, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 768, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 360, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 192, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([60, 256, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 256, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 192, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 112, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([32, 768, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([2, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([24, 256, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 640, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([8, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([16, 384, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([64, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([32, 128, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 192, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 1024, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([4, 960, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([128, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 48, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 480, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([128, 56, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 1024, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([8, 192, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 768, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([4, 384, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([2, 672, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([8, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 480, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 8, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 384, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([64, 96, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 1280, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([8, 384, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([4, 640, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([32, 64, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 8, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([2, 576, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 576, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([16, 256, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([8, 256, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 384, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([8, 768, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([128, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([8, 512, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([8, 288, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 512, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 384, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 1280, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 960, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([60, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([2, 768, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([16, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 192, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([64, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 32, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([2, 1024, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([60, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 768, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([16, 96, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([64, 120, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([32, 256, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([64, 44, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 384, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([16, 192, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([8, 144, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardswish(Tensor([2, 160, 36, 36],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 512, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 320, 21, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 96, 30, 30],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 200, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 128, 26, 26],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 128, 6, 6],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 64, 40, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 24, 120, 120],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 96, 32, 32],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 192, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 24, 88, 88],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 40, 40],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 240, 32, 64],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 24, 104, 104],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 24, 44, 44],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 320, 38, 38],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 320, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 96, 64, 64],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([90, 128, 8, 8],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 96, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 96, 60, 60],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 48, 26, 26],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 192, 34, 34],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 96, 48, 48],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 768, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 64, 34, 34],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 64, 48, 48],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 320, 21, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 64, 56, 56],"float32"), )
paddle.nn.functional.hardswish(Tensor([60, 256, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 24, 104, 104],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 256, 38, 38],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 26, 26],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 48, 9, 9],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 160, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 128, 40, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 256, 42, 42],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 44, 44],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 160, 10, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 128, 14, 14],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 480, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 96, 10, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 48, 56, 56],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 192, 56, 56],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 320, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 320, 40, 40],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 44, 44],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 1, 48, 48],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 48, 16, 16],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 64, 24, 24],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 64, 36, 36],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 16, 112, 112],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 96, 34, 34],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 320, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 672, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([32, 128, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 240, 8, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 96, 60, 60],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 64, 42, 42],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 512, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 512, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([90, 64, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([16, 512, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 48, 112, 112],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 1024, 21, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 640, 21, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 88, 24, 24],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 64, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 64, 44, 44],"float32"), )
paddle.nn.functional.hardswish(Tensor([32, 64, 14, 14],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 128, 44, 44],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([128, 1280, 1, 1],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 192, 60, 60],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 768, 13, 13],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 384, 16, 16],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 256, 44, 44],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 24, 120, 120],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([24, 128, 12, 9],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 128, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 128, 8, 8],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 1, 40, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([16, 96, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 320, 38, 38],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 40, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 96, 26, 26],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1024, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 17, 17],"float32"), )
paddle.nn.functional.hardswish(Tensor([32, 128, 7, 7],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 96, 12, 12],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 96, 12, 12],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 96, 12, 12],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 128, 44, 44],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 96, 34, 34],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 24, 56, 56],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 44, 44],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 640, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 96, 24, 24],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 384, 13, 13],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 96, 24, 24],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 48, 44, 44],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 72, 72],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 64, 28, 28],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 384, 11, 11],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 384, 12, 12],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 16, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 96, 9, 9],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 320, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 96, 20, 20],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 184, 32, 64],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 160, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 176, 12, 12],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 48, 64, 64],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 128, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 320, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 384, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 96, 68, 68],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 320, 44, 44],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 640, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 19, 19],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 256, 24, 24],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([30, 200, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 160, 38, 38],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 96, 30, 30],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 320, 42, 42],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 512, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 192, 68, 68],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 48, 64, 64],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 384, 15, 15],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 384, 12, 12],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 48, 52, 52],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 96, 44, 44],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 512, 38, 38],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 256, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 128, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 256, 15, 15],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 128, 42, 42],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 160, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 64, 13, 13],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 96, 56, 56],"float32"), )
paddle.nn.functional.hardswish(Tensor([90, 64, 12, 12],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 384, 13, 13],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 96, 9, 9],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 48, 60, 60],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 1024, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 96, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 42, 42],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 672, 16, 32],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 160, 21, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 96, 8, 8],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 192, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 1024, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 76, 76],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 34, 34],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 192, 15, 15],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 192, 12, 12],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 48, 120, 120],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 96, 52, 52],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 184, 26, 26],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 192, 30, 30],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 88, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 320, 36, 36],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 96, 12, 12],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 256, 26, 26],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 44, 44],"float32"), )
paddle.nn.functional.hardswish(Tensor([32, 64, 12, 12],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 96, 10, 10],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 96, 30, 30],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 1024, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 24, 52, 52],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 64, 84, 84],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 96, 68, 68],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 24, 112, 112],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 96, 64, 64],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 96, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 1024, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 384, 15, 15],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 320, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 192, 12, 12],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 30, 30],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 15, 15],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 512, 21, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 128, 7, 7],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 192, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 88, 88],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([24, 48, 16, 16],"float32"), )
paddle.nn.functional.hardswish(Tensor([24, 128, 13, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 1, 44, 44],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 160, 76, 76],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 42, 42],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 64, 12, 12],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 256, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 38, 38],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 256, 12, 12],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 640, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 64, 72, 72],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 96, 44, 44],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 240, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 512, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 384, 10, 10],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 48, 12, 12],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 128, 30, 30],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 64, 88, 88],"float32"), )
paddle.nn.functional.hardswish(Tensor([640, 1280, 1, 1],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 160, 9, 9],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 480, 4, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 72, 72],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 42, 42],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 256, 11, 11],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 48, 30, 30],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([256, 1280, 1, 1],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 48, 56, 56],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 64, 15, 15],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 48, 136, 136],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 24, 128, 128],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 38, 38],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 96, 56, 56],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 128, 15, 15],"float32"), )
paddle.nn.functional.hardswish(Tensor([32, 8, 40, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 40, 40],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 24, 128, 128],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 512, 40, 40],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 384, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 44, 44],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 8, 176, 176],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 48, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 96, 11, 11],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 256, 36, 36],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 128, 14, 14],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 256, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 16, 120, 120],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 16, 104, 104],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 256, 30, 30],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 96, 56, 56],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 96, 30, 30],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 21, 21],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 64, 76, 76],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 240, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 320, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 128, 13, 13],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 160, 20, 20],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 160, 36, 36],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 256, 38, 38],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 16, 88, 88],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 96, 8, 8],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 16, 112, 112],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 192, 34, 34],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 320, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 16, 96, 96],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 32, 10, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 96, 60, 60],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 128, 12, 12],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 192, 52, 52],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 192, 32, 32],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 24, 24],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 128, 38, 38],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1024, 21, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 192, 24, 24],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 384, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 256, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 96, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 512, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 40, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 64, 30, 30],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 320, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 96, 52, 52],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 96, 6, 6],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 192, 17, 17],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 60, 16, 16],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 192, 26, 26],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 96, 10, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 256, 13, 13],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 72, 72],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 24, 112, 112],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 1280, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 16, 208, 208],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 64, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 512, 36, 36],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 160, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 96, 52, 52],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 256, 40, 40],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 38, 38],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 32, 32, 160],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 48, 60, 60],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([60, 336, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 512, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 64, 5, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 48, 60, 60],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 160, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 160, 40, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 160, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([24, 64, 25, 19],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 160, 18, 18],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 320, 36, 36],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 20, 20],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 1280, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 192, 30, 30],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 256, 6, 8],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 48, 10, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 160, 18, 18],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 88, 26, 26],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 96, 24, 24],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 128, 8, 8],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 88, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 64, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 256, 44, 44],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 384, 17, 17],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 88, 30, 30],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 96, 5, 5],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 64, 36, 36],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 192, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 48, 52, 52],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 96, 28, 28],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 64, 80, 80],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 96, 28, 28],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 256, 36, 36],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([24, 64, 24, 18],"float32"), )
paddle.nn.functional.hardswish(Tensor([16, 96, 24, 24],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 128, 12, 12],"float32"), )
paddle.nn.functional.hardswish(Tensor([48, 128, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 192, 64, 64],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 64, 16, 160],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 96, 10, 10],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 96, 68, 68],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 24, 136, 136],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 192, 8, 8],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 128, 18, 18],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 512, 20, 20],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 76, 76],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 24, 60, 60],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 64, 60, 60],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 160, 36, 36],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 160, 21, 21],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 128, 28, 28],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 96, 60, 60],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 160, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([256, 64, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 192, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 48, 48, 48],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 384, 24, 24],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([90, 64, 13, 13],"float32"), )
paddle.nn.functional.hardswish(Tensor([90, 128, 6, 6],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 96, 34, 34],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 84, 84],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 128, 21, 21],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 128, 20, 20],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 128, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 24, 48, 48],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 128, 6, 6],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 96, 68, 68],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 320, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 384, 17, 17],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 48, 24, 24],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 96, 52, 52],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 288, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 96, 34, 34],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 48, 18, 18],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 96, 64, 64],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 512, 21, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 176, 13, 13],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 48, 8, 8],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 64, 40, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 512, 42, 42],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 160, 19, 19],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 160, 42, 42],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 16, 20, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 192, 9, 9],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 48, 104, 104],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 192, 30, 30],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 24, 24],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 96, 56, 56],"float32"), )
paddle.nn.functional.hardswish(Tensor([90, 128, 7, 7],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 192, 8, 8],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 960, 16, 32],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 256, 40, 40],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 256, 42, 42],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 256, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 184, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 192, 32, 32],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 21, 21],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 64, 14, 14],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 672, 13, 13],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 480, 32, 64],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 15, 15],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 80, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 64, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 160, 36, 36],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 768, 16, 16],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 48, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 768, 12, 12],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 768, 11, 11],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([24, 96, 16, 16],"float32"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="none", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 5],"float64"), Tensor([10, 10, 5],"float64"), )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 64],"float64"), None, None, Tensor([32],"float64"), Tensor([32],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 32, 128],"float32"), )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 5],"float64"), None, None, Tensor([100],"float64"), Tensor([100],"float64"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([4, 100, 16],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 28, 28],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 96, 36, 36],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 384, 10, 10],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 96, 26, 26],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 256, 22, 35],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 26, 37],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64, 96, 12, 12],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 41, 25],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8, 288, 15, 15],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 38, 25],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 240, 30, 30],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 512, 18, 18],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 20],"float16"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 20],"float16"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([24, 32, 16, 16],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([4, 128, 24, 24],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 19],"float16"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([2, 64, 34, 34],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 36, 34],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 256, 40, 62],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 96, 40, 40],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 235, 260],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 128, 14, 14],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 64, 64],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 192, 18, 18],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 96, 24, 24],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 26, 32],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 256, 11, 11],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 96, 44, 44],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 256, 10, 10],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([64, 96, 12, 12],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 34, 27],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 23, 37],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 19],"float32"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([2, 96, 34, 34],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 26, 34],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 19],"float16"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([2, 128, 36, 36],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 258, 26, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 42, 35],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 384, 15, 15],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 34, 37],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 256, 14, 14],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 280, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 32],"float16"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 258, 25, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 128, 88, 88],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 384, 40, 40],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 2, 128, 128],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 38, 25],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 38],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 19],"float32"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([2, 256, 40, 40],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 31, 28],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 25, 31],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2, 128, 28, 28],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 256, 15, 15],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 192, 21, 21],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 31, 38],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 256, 30, 30],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 19],"float32"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 36, 42],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 256, 46, 46],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 19, 64, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 38, 33],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 3, 212, 274],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 36, 38],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 19],"float16"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 240, 28, 28],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 46, 70],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 96, 20, 20],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 27, 28],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 512, 36, 36],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 20],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([2, 384, 23, 23],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 19],"float32"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([8, 128, 28, 28],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 19],"float32"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 30, 26],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 20, 30],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 40, 38],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([24, 64, 16, 16],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([2, 384, 24, 24],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 38, 40],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 32, 32],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([8, 192, 14, 14],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 40, 16, 12],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 30, 32],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 258, 25, 36],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 480, 15, 15],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 34, 24],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2, 160, 22, 22],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8, 192, 12, 12],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 256, 17, 17],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 128, 30, 30],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 21],"float16"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 480, 21, 21],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 96, 36, 36],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 34, 38],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 258, 25, 37],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 64, 32, 64],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 512, 20, 20],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 27, 31],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 258, 25, 35],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 39, 34],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 26, 38],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 17],"float16"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 19],"float16"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 36, 42],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 27, 34],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 258, 38, 25],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 27, 36],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2, 192, 23, 23],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 768, 16, 16],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 20],"float32"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 17],"float16"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 13],"float16"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 3, 374, 297],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 33, 27],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 40, 34],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 18],"float32"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 33, 26],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 17],"float32"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([160, 64, 8, 6],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([4, 256, 24, 37],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 50, 76],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 128, 50, 68],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8, 96, 26, 26],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 1, 256, 256],"float32"), list[512,512,], mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 258, 26, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 31, 31],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 20],"float32"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([8, 128, 20, 20],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 256, 25, 34],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2, 160, 19, 19],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([6, 1, 256, 256],"float32"), list[512,512,], mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 68, 44],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2, 192, 24, 24],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 768, 32, 32],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 256, 32, 32],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 64, 68, 68],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 34, 42],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 48, 72],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2, 160, 44, 44],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 96, 24, 24],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 24, 40],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 192, 13, 13],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 96, 32, 32],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 42, 25],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 256, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 28, 31],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 30, 31],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 512, 18, 18],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 128, 50, 78],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 40, 40],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 192, 32, 32],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 384, 44, 44],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 192, 12, 12],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 256, 11, 11],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([64, 3, 64, 64],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 32],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([16, 32, 20, 20],"float32"), size=list[40,40,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([6, 256, 25, 25],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 31, 34],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 21],"float32"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 33, 24],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 96, 22, 22],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([24, 32, 32, 32],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 19],"float16"), size=list[28,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 21],"float16"), size=list[37,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([8, 192, 13, 13],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 96, 22, 22],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 288, 11, 11],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 227, 276],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 25, 35],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 48, 48],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([32, 128, 11, 11],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 96, 30, 30],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 27, 37],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 35, 42],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 41, 37],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 20],"float16"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 20],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 384, 17, 17],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 18],"float32"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 25, 36],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2, 320, 30, 30],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 38, 36],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 128, 20, 20],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 192, 17, 17],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 16, 16],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 33, 36],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 22, 42],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 17],"float32"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 19],"float16"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 160, 38, 38],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 34],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 28, 32],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 20],"float16"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 25, 36],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 19],"float16"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 36, 34],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 26, 41],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 192, 34, 34],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 38, 38],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 384, 13, 13],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 480, 22, 22],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 37, 42],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([48, 128, 11, 11],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 34, 35],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([64, 96, 9, 9],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 192, 23, 23],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 31, 27],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 258, 25, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 192, 21, 21],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 21],"float16"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 39, 38],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 192, 19, 19],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 17],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 480, 17, 17],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([512, 80, 4, 3],"float16"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 256, 32, 32],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 30, 30],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 160, 8, 6],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 96, 34, 34],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 34, 28],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 40, 40],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 192, 44, 44],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 35, 24],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2, 192, 17, 17],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 39, 42],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 256, 62, 40],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 25, 36],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 42, 40],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 17],"float16"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 19],"float32"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 34, 37],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 30, 32],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 480],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 576],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([2, 384, 14, 14],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 96, 36, 36],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 384, 15, 15],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 25, 40],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 33, 42],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([32, 128, 15, 15],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 19, 32, 64],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 38, 34],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 256, 19, 19],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 192, 20, 20],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 258, 25, 35],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 22, 34],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 42],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 15, 15],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 640],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 128, 30, 30],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 64, 92, 92],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 19],"float16"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([2, 256, 27, 33],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 384, 23, 23],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 22, 42],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 192, 19, 19],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 29, 38],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 3, 280, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 19],"float32"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([8, 128, 24, 24],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 256, 20, 20],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 23, 23],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 44, 44],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 13],"float16"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 40, 60],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 27, 38],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8, 192, 15, 15],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 181, 204],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 31, 23],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 384, 10, 10],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 32, 21],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 20, 27],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 18],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 21],"float16"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 46, 62],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2, 96, 24, 24],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 35, 24],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 33, 42],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 34, 27],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 192, 14, 14],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 128, 34, 34],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 19, 64, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 96, 46, 46],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 42, 39],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 192, 24, 24],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 256, 13, 13],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 256, 17, 17],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 35, 34],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 23, 34],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2, 192, 48, 48],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 38, 42],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 14],"float16"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([8, 192, 12, 12],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 21],"float16"), size=list[35,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 39, 42],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 21],"float16"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 32],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 24, 37],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([24, 128, 16, 16],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([4, 128, 27, 37],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 19],"float32"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 17],"float16"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([8, 160, 19, 19],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 34, 34],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 96, 38, 38],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 21],"float16"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([2, 384, 21, 21],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 64, 96, 96],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 32, 32],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([64, 96, 9, 9],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 19],"float16"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 20],"float32"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 17],"float16"), size=list[38,33,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 36, 24],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 20],"float32"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 30, 38],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 20],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 384, 36, 36],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 25, 38],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 27, 35],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 32, 30],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 24, 35],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 14],"float16"), size=list[38,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 24, 33],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 33, 27],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 258, 76, 50],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([8, 128, 20, 20],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 19],"float32"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([512, 40, 8, 6],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 30, 31],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 96, 34, 34],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 24, 35],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 21],"float16"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([8, 64, 40, 40],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([4, 128, 39, 37],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 26, 36],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 34, 28],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 576],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([8, 96, 28, 28],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 21],"float32"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 96, 34, 34],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 480, 20, 20],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 128, 25, 34],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([8, 64, 40, 40],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 192, 11, 11],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 18],"float16"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 38, 39],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 21],"float32"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([8, 160, 21, 21],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([13, 256, 7, 7],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 96, 22, 22],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([24, 128, 16, 16],"float16"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([4, 256, 34, 22],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 21],"float16"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([8, 192, 17, 17],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 256, 14, 14],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([8, 96, 36, 36],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 23, 42],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 256, 12, 12],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 18, 18],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 22, 33],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 20],"float32"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 16],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([8, 192, 16, 16],"float16"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 21],"float16"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 25, 39],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2, 64, 68, 68],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 704, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 22, 33],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 30, 30],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 23, 30],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 798],"float32"), size=list[36,50,], )
paddle.nn.functional.interpolate(Tensor([4, 256, 23, 40],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 23, 39],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 160, 20, 20],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 27, 36],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 19],"float32"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 576],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 798],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([1, 192, 72, 72],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 34, 25],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 19],"float16"), size=list[33,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([12, 512, 10, 10],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 96, 20, 20],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 35, 39],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 128, 24, 24],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 31, 20],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 21],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 480, 14, 14],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 34, 38],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 96, 28, 28],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 17],"float32"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.l1_loss(Tensor([28, 12, 170, 1],"float32"), Tensor([28, 12, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 12, 170, 1],"float32"), Tensor([64, 12, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([187679, 1],"float32"), Tensor([187679, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 4],"float16"), Tensor([20, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 499, 2],"float32"), Tensor([10, 499, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([1336, 4],"float32"), Tensor([1336, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1481, 4],"float32"), Tensor([1481, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([4, 500, 10],"float32"), Tensor([4, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([1857, 4],"float32"), Tensor([1857, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1721, 4],"float32"), Tensor([1721, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([20, 500, 2],"float16"), Tensor([20, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1456, 4],"float32"), Tensor([1456, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([20, 500, 2],"float32"), Tensor([20, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 8],"float32"), Tensor([4, 500, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([1435, 4],"float32"), Tensor([1435, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1296, 4],"float32"), Tensor([1296, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1271, 4],"float32"), Tensor([1271, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 32],"float32"), Tensor([2, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([8, 500, 10],"float32"), Tensor([8, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([1872, 4],"float32"), Tensor([1872, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1282, 4],"float32"), Tensor([1282, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([20, 500, 4],"float32"), Tensor([20, 500, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1610, 4],"float32"), Tensor([1610, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1915, 4],"float32"), Tensor([1915, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([335, 4],"float32"), Tensor([335, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([647, 4],"float32"), Tensor([647, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([346, 4],"float32"), Tensor([346, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([155, 4],"float32"), Tensor([155, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([474, 4],"float32"), Tensor([474, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([171, 4],"float32"), Tensor([171, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([232, 4],"float32"), Tensor([232, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([213, 4],"float32"), Tensor([213, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([369, 4],"float32"), Tensor([369, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([422, 4],"float32"), Tensor([422, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([531, 4],"float32"), Tensor([531, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([594, 4],"float32"), Tensor([594, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1248, 4],"float32"), Tensor([1248, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([451, 4],"float32"), Tensor([451, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([179, 4],"float32"), Tensor([179, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([225, 4],"float32"), Tensor([225, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([940, 4],"float32"), Tensor([940, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([210, 4],"float32"), Tensor([210, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([195, 4],"float32"), Tensor([195, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([426, 4],"float32"), Tensor([426, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([465, 4],"float32"), Tensor([465, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([264, 4],"float32"), Tensor([264, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([421, 4],"float32"), Tensor([421, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1090, 4],"float32"), Tensor([1090, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([759, 4],"float32"), Tensor([759, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([411, 4],"float32"), Tensor([411, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([139, 4],"float32"), Tensor([139, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([835, 4],"float32"), Tensor([835, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([137, 4],"float32"), Tensor([137, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([439, 4],"float32"), Tensor([439, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([528, 4],"float32"), Tensor([528, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([464, 4],"float32"), Tensor([464, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([690, 4],"float32"), Tensor([690, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([708, 4],"float32"), Tensor([708, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([540, 4],"float32"), Tensor([540, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([399, 4],"float32"), Tensor([399, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([372, 4],"float32"), Tensor([372, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([676, 4],"float32"), Tensor([676, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([726, 4],"float32"), Tensor([726, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([313, 4],"float32"), Tensor([313, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([492, 4],"float32"), Tensor([492, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([633, 4],"float32"), Tensor([633, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([514, 4],"float32"), Tensor([514, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([205, 4],"float32"), Tensor([205, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([618, 4],"float32"), Tensor([618, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([491, 4],"float32"), Tensor([491, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([703, 4],"float32"), Tensor([703, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([479, 4],"float32"), Tensor([479, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([628, 4],"float32"), Tensor([628, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([245, 4],"float32"), Tensor([245, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([437, 4],"float32"), Tensor([437, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([320, 4],"float32"), Tensor([320, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([359, 4],"float32"), Tensor([359, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([626, 4],"float32"), Tensor([626, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([203, 4],"float32"), Tensor([203, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([450, 4],"float32"), Tensor([450, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([565, 4],"float32"), Tensor([565, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([486, 4],"float32"), Tensor([486, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([721, 4],"float32"), Tensor([721, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([339, 4],"float32"), Tensor([339, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([230, 4],"float32"), Tensor([230, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([558, 4],"float32"), Tensor([558, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([454, 4],"float32"), Tensor([454, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([144, 4],"float32"), Tensor([144, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([715, 4],"float32"), Tensor([715, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([323, 4],"float32"), Tensor([323, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([589, 4],"float32"), Tensor([589, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([190, 4],"float32"), Tensor([190, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([275, 4],"float32"), Tensor([275, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([571, 4],"float32"), Tensor([571, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([445, 4],"float32"), Tensor([445, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([732, 4],"float32"), Tensor([732, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([153, 4],"float32"), Tensor([153, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([591, 4],"float32"), Tensor([591, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([371, 4],"float32"), Tensor([371, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([262, 4],"float32"), Tensor([262, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([586, 4],"float32"), Tensor([586, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([613, 4],"float32"), Tensor([613, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([312, 4],"float32"), Tensor([312, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([612, 4],"float32"), Tensor([612, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([494, 4],"float32"), Tensor([494, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([500, 4],"float32"), Tensor([500, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([705, 4],"float32"), Tensor([705, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([489, 4],"float32"), Tensor([489, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([409, 4],"float32"), Tensor([409, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1171, 4],"float32"), Tensor([1171, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1060, 4],"float32"), Tensor([1060, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([302, 4],"float32"), Tensor([302, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([393, 4],"float32"), Tensor([393, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([398, 4],"float32"), Tensor([398, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([604, 4],"float32"), Tensor([604, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([226, 4],"float32"), Tensor([226, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([691, 4],"float32"), Tensor([691, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([322, 4],"float32"), Tensor([322, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([412, 4],"float32"), Tensor([412, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([773, 4],"float32"), Tensor([773, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([233, 4],"float32"), Tensor([233, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([536, 4],"float32"), Tensor([536, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([876, 4],"float32"), Tensor([876, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([375, 4],"float32"), Tensor([375, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([180, 4],"float32"), Tensor([180, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([228, 4],"float32"), Tensor([228, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([227, 4],"float32"), Tensor([227, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([145, 4],"float32"), Tensor([145, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([297, 4],"float32"), Tensor([297, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([212, 4],"float32"), Tensor([212, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([582, 4],"float32"), Tensor([582, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([584, 4],"float32"), Tensor([584, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([229, 4],"float32"), Tensor([229, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([285, 4],"float32"), Tensor([285, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([347, 4],"float32"), Tensor([347, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([788, 4],"float32"), Tensor([788, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([299, 4],"float32"), Tensor([299, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([252, 4],"float32"), Tensor([252, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([341, 4],"float32"), Tensor([341, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([223, 4],"float32"), Tensor([223, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([554, 4],"float32"), Tensor([554, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([917, 4],"float32"), Tensor([917, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([188, 4],"float32"), Tensor([188, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([596, 4],"float32"), Tensor([596, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([191, 4],"float32"), Tensor([191, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([707, 4],"float32"), Tensor([707, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([403, 4],"float32"), Tensor([403, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([201, 4],"float32"), Tensor([201, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([485, 4],"float32"), Tensor([485, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([513, 4],"float32"), Tensor([513, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([930, 4],"float32"), Tensor([930, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([635, 4],"float32"), Tensor([635, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([503, 4],"float32"), Tensor([503, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([551, 4],"float32"), Tensor([551, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([247, 4],"float32"), Tensor([247, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([562, 4],"float32"), Tensor([562, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([256, 4],"float32"), Tensor([256, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([311, 4],"float32"), Tensor([311, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([463, 4],"float32"), Tensor([463, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([680, 4],"float32"), Tensor([680, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([417, 4],"float32"), Tensor([417, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([301, 4],"float32"), Tensor([301, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([238, 4],"float32"), Tensor([238, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([281, 4],"float32"), Tensor([281, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([363, 4],"float32"), Tensor([363, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([423, 4],"float32"), Tensor([423, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([415, 4],"float32"), Tensor([415, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1113, 4],"float32"), Tensor([1113, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([501, 4],"float32"), Tensor([501, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([549, 4],"float32"), Tensor([549, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([208, 4],"float32"), Tensor([208, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([401, 4],"float32"), Tensor([401, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([234, 4],"float32"), Tensor([234, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([222, 4],"float32"), Tensor([222, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([134, 4],"float32"), Tensor([134, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([781, 4],"float32"), Tensor([781, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([880, 4],"float32"), Tensor([880, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([389, 4],"float32"), Tensor([389, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([132, 4],"float32"), Tensor([132, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([555, 4],"float32"), Tensor([555, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([253, 4],"float32"), Tensor([253, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([288, 4],"float32"), Tensor([288, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([402, 4],"float32"), Tensor([402, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([547, 4],"float32"), Tensor([547, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([477, 4],"float32"), Tensor([477, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([794, 4],"float32"), Tensor([794, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([512, 4],"float32"), Tensor([512, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([420, 4],"float32"), Tensor([420, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([146, 4],"float32"), Tensor([146, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([624, 4],"float32"), Tensor([624, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([274, 4],"float32"), Tensor([274, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([396, 4],"float32"), Tensor([396, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([182, 4],"float32"), Tensor([182, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([636, 4],"float32"), Tensor([636, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([168, 4],"float32"), Tensor([168, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([176, 4],"float32"), Tensor([176, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([481, 4],"float32"), Tensor([481, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([656, 4],"float32"), Tensor([656, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([231, 4],"float32"), Tensor([231, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([763, 4],"float32"), Tensor([763, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([376, 4],"float32"), Tensor([376, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([178, 4],"float32"), Tensor([178, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([361, 4],"float32"), Tensor([361, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([521, 4],"float32"), Tensor([521, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([300, 4],"float32"), Tensor([300, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([395, 4],"float32"), Tensor([395, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1230, 4],"float32"), Tensor([1230, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([173, 4],"float32"), Tensor([173, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([498, 4],"float32"), Tensor([498, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([632, 4],"float32"), Tensor([632, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([801, 4],"float32"), Tensor([801, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1089, 4],"float32"), Tensor([1089, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([515, 4],"float32"), Tensor([515, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([461, 4],"float32"), Tensor([461, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([431, 4],"float32"), Tensor([431, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([357, 4],"float32"), Tensor([357, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([258, 4],"float32"), Tensor([258, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([574, 4],"float32"), Tensor([574, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([782, 4],"float32"), Tensor([782, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([639, 4],"float32"), Tensor([639, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([189, 4],"float32"), Tensor([189, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([306, 4],"float32"), Tensor([306, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([185, 4],"float32"), Tensor([185, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([738, 4],"float32"), Tensor([738, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([151, 4],"float32"), Tensor([151, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([567, 4],"float32"), Tensor([567, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([453, 4],"float32"), Tensor([453, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([716, 4],"float32"), Tensor([716, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([365, 4],"float32"), Tensor([365, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([616, 4],"float32"), Tensor([616, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([405, 4],"float32"), Tensor([405, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([511, 4],"float32"), Tensor([511, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([248, 4],"float32"), Tensor([248, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([444, 4],"float32"), Tensor([444, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([517, 4],"float32"), Tensor([517, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([506, 4],"float32"), Tensor([506, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([268, 4],"float32"), Tensor([268, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([338, 4],"float32"), Tensor([338, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([544, 4],"float32"), Tensor([544, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([777, 4],"float32"), Tensor([777, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([174, 4],"float32"), Tensor([174, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([926, 4],"float32"), Tensor([926, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([242, 4],"float32"), Tensor([242, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([672, 4],"float32"), Tensor([672, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([342, 4],"float32"), Tensor([342, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([349, 4],"float32"), Tensor([349, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([381, 4],"float32"), Tensor([381, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([404, 4],"float32"), Tensor([404, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([701, 4],"float32"), Tensor([701, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([443, 4],"float32"), Tensor([443, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([131, 4],"float32"), Tensor([131, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([162, 4],"float32"), Tensor([162, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([270, 4],"float32"), Tensor([270, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([552, 4],"float32"), Tensor([552, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([307, 4],"float32"), Tensor([307, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([533, 4],"float32"), Tensor([533, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([560, 4],"float32"), Tensor([560, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([772, 4],"float32"), Tensor([772, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([448, 4],"float32"), Tensor([448, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([487, 4],"float32"), Tensor([487, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([214, 4],"float32"), Tensor([214, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([553, 4],"float32"), Tensor([553, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([556, 4],"float32"), Tensor([556, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([818, 4],"float32"), Tensor([818, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([284, 4],"float32"), Tensor([284, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([780, 4],"float32"), Tensor([780, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([441, 4],"float32"), Tensor([441, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([510, 4],"float32"), Tensor([510, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([283, 4],"float32"), Tensor([283, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([815, 4],"float32"), Tensor([815, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([490, 4],"float32"), Tensor([490, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([167, 4],"float32"), Tensor([167, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([650, 4],"float32"), Tensor([650, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([325, 4],"float32"), Tensor([325, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([579, 4],"float32"), Tensor([579, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([529, 4],"float32"), Tensor([529, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([259, 4],"float32"), Tensor([259, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([136, 4],"float32"), Tensor([136, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([466, 4],"float32"), Tensor([466, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([328, 4],"float32"), Tensor([328, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([331, 4],"float32"), Tensor([331, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([397, 4],"float32"), Tensor([397, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([148, 4],"float32"), Tensor([148, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([278, 4],"float32"), Tensor([278, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1159, 4],"float32"), Tensor([1159, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([424, 4],"float32"), Tensor([424, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([239, 4],"float32"), Tensor([239, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([291, 4],"float32"), Tensor([291, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([999, 4],"float32"), Tensor([999, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([436, 4],"float32"), Tensor([436, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([356, 4],"float32"), Tensor([356, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([289, 4],"float32"), Tensor([289, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([161, 4],"float32"), Tensor([161, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([177, 4],"float32"), Tensor([177, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([290, 4],"float32"), Tensor([290, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([518, 4],"float32"), Tensor([518, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([391, 4],"float32"), Tensor([391, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([126, 4],"float32"), Tensor([126, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([387, 4],"float32"), Tensor([387, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([388, 4],"float32"), Tensor([388, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([235, 4],"float32"), Tensor([235, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([692, 4],"float32"), Tensor([692, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([152, 4],"float32"), Tensor([152, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([693, 4],"float32"), Tensor([693, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([473, 4],"float32"), Tensor([473, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([414, 4],"float32"), Tensor([414, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([170, 4],"float32"), Tensor([170, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([352, 4],"float32"), Tensor([352, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1217, 4],"float32"), Tensor([1217, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([575, 4],"float32"), Tensor([575, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([588, 4],"float32"), Tensor([588, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([164, 4],"float32"), Tensor([164, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([241, 4],"float32"), Tensor([241, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([192, 4],"float32"), Tensor([192, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([129, 4],"float32"), Tensor([129, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([194, 4],"float32"), Tensor([194, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([587, 4],"float32"), Tensor([587, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([488, 4],"float32"), Tensor([488, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([296, 4],"float32"), Tensor([296, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([254, 4],"float32"), Tensor([254, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([468, 4],"float32"), Tensor([468, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([410, 4],"float32"), Tensor([410, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([508, 4],"float32"), Tensor([508, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([484, 4],"float32"), Tensor([484, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([580, 4],"float32"), Tensor([580, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1042, 4],"float32"), Tensor([1042, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([265, 4],"float32"), Tensor([265, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([483, 4],"float32"), Tensor([483, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([637, 4],"float32"), Tensor([637, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([236, 4],"float32"), Tensor([236, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([457, 4],"float32"), Tensor([457, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([400, 4],"float32"), Tensor([400, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([292, 4],"float32"), Tensor([292, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([590, 4],"float32"), Tensor([590, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([522, 4],"float32"), Tensor([522, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([539, 4],"float32"), Tensor([539, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([373, 4],"float32"), Tensor([373, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([156, 4],"float32"), Tensor([156, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([730, 4],"float32"), Tensor([730, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([308, 4],"float32"), Tensor([308, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([378, 4],"float32"), Tensor([378, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([240, 4],"float32"), Tensor([240, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([125, 4],"float32"), Tensor([125, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([128, 4],"float32"), Tensor([128, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([598, 4],"float32"), Tensor([598, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([775, 4],"float32"), Tensor([775, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([519, 4],"float32"), Tensor([519, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([754, 4],"float32"), Tensor([754, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([677, 4],"float32"), Tensor([677, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([154, 4],"float32"), Tensor([154, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([183, 4],"float32"), Tensor([183, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([717, 4],"float32"), Tensor([717, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([712, 4],"float32"), Tensor([712, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([143, 4],"float32"), Tensor([143, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([419, 4],"float32"), Tensor([419, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([407, 4],"float32"), Tensor([407, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([383, 4],"float32"), Tensor([383, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([895, 4],"float32"), Tensor([895, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([546, 4],"float32"), Tensor([546, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([606, 4],"float32"), Tensor([606, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([700, 4],"float32"), Tensor([700, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([337, 4],"float32"), Tensor([337, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([157, 4],"float32"), Tensor([157, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([919, 4],"float32"), Tensor([919, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([570, 4],"float32"), Tensor([570, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([336, 4],"float32"), Tensor([336, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([246, 4],"float32"), Tensor([246, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([280, 4],"float32"), Tensor([280, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([472, 4],"float32"), Tensor([472, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([800, 4],"float32"), Tensor([800, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([379, 4],"float32"), Tensor([379, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([722, 4],"float32"), Tensor([722, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([459, 4],"float32"), Tensor([459, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([564, 4],"float32"), Tensor([564, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([350, 4],"float32"), Tensor([350, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([324, 4],"float32"), Tensor([324, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([385, 4],"float32"), Tensor([385, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([662, 4],"float32"), Tensor([662, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([595, 4],"float32"), Tensor([595, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([220, 4],"float32"), Tensor([220, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([629, 4],"float32"), Tensor([629, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([435, 4],"float32"), Tensor([435, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([625, 4],"float32"), Tensor([625, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([204, 4],"float32"), Tensor([204, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([502, 4],"float32"), Tensor([502, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([654, 4],"float32"), Tensor([654, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([467, 4],"float32"), Tensor([467, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([181, 4],"float32"), Tensor([181, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([643, 4],"float32"), Tensor([643, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([739, 4],"float32"), Tensor([739, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([619, 4],"float32"), Tensor([619, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([620, 4],"float32"), Tensor([620, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([368, 4],"float32"), Tensor([368, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([187, 4],"float32"), Tensor([187, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([810, 4],"float32"), Tensor([810, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([309, 4],"float32"), Tensor([309, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([442, 4],"float32"), Tensor([442, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([687, 4],"float32"), Tensor([687, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([460, 4],"float32"), Tensor([460, 4],"float32"), )
paddle.nn.functional.label_smooth(Tensor([128, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([256, 1, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([144, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([512, 1, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([154, 1, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 1, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([640, 1, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([256, 1, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([124, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([64, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 1, 159],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([64, 1, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([154, 1, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 1, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([16, 1, 400],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([12, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([64, 1, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([77, 1, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([64, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([60, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([16, 1, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([16, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([32, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([32, 1, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.layer_norm(Tensor([8, 128, 256],"float32"), list[256,], weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([128, 64, 64],"float32"), list[64,], None, None, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 70],"float32"), list[10,60,70,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([64, 64, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 30],"float32"), list[10,60,30,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([128, 64, 64],"float32"), list[64,], Tensor([64],"float32"), Tensor([64],"float32"), )
paddle.nn.functional.layer_norm(Tensor([64, 64, 128],"float32"), list[64,128,], None, None, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([17, 129],"float32"), list[129,], Tensor([129],"float32"), None, )
paddle.nn.functional.layer_norm(Tensor([8, 512],"float32"), list[512,], None, None, )
paddle.nn.functional.layer_norm(Tensor([2, 768],"float32"), list[768,], None, None, )
paddle.nn.functional.layer_norm(Tensor([2, 32, 128],"float32"), list[32,128,], )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 32, 32],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 26, 26],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 56, 56],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 44, 44],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 24, 24],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 20, 20],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 16, 16],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 32, 64, 64],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 22, 22],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 1024, 15, 15],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 26, 26],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 28, 28],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 20, 20],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 16, 16],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([4, 512, 16, 16],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 19, 19],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 38, 38],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 7, 7],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 12, 12],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 20, 20],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 30, 30],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 19, 19],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 28, 28],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 10, 10],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 13, 13],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 20, 20],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 14, 14],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 13, 13],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 36, 36],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([56, 32, 16, 16],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 30, 30],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 15, 15],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 16, 16],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 14, 14],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 40, 40],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 34, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 24, 24],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([56, 16, 16, 16],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 32, 32],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 22, 22],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 24, 24],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 14, 14],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 1024, 19, 19],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 64, 80, 80],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 1024, 13, 13],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 20, 20],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 1024, 7, 7],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 10, 10],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 28, 28],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 18, 18],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 32, 32],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 10, 10],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 36, 36],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 64, 64],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([56, 8, 16, 16],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([16, 512, 7, 7],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([8, 1024, 11, 11],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 11, 11],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 11, 11],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 15, 15],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 1024, 11, 11],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 16, 16],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 1024, 16, 16],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 26, 26],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 32, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 16, 16],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([2, 32, 1792],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 48, 48],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 64, 64],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 1024, 12, 12],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 128, 38, 38],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 18, 18],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 15, 15],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 14, 14],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 30, 30],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 1024, 18, 18],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 22, 22],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 13, 13],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 1024, 10, 10],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 15, 15],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 18, 18],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 60, 60],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 32, 32],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 22, 22],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 512, 19, 19],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 28, 28],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 31, 31],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([56, 16, 32, 32],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 24, 24],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([30, 200, 40],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([2, 1024, 17, 17],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 17, 17],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([16, 256, 14, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 38, 38],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 256, 19, 19],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 20, 20],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 12, 80, 80],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 12, 12],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 17, 17],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 14, 14],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 14, 14],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 1024, 14, 14],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 11, 11],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 32, 1792],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 14, 14],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 40, 40],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 1024, 10, 10],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 16, 16],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 34, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 12, 12],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 8, 8],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([4, 512, 8, 8],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 30, 30],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 19, 19],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 26, 26],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([56, 8, 32, 32],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 44, 44],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 64, 88, 88],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 17, 17],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 20, 20],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 48, 40, 40],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 52, 52],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 40, 40],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 28, 28],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 22, 22],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 10, 10],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 8, 8],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 64, 448],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 13, 13],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 512, 4, 4],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 28],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 64, 448],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 12, 12],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 112],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 2048, 4, 4],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 1024, 8, 8],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 4, 4],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([2, 256, 11, 11],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 8, 8],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 112],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 32, 1792],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([1, 32, 1792],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 12, 40, 40],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([8, 512],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 2, 2],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 4, 4],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 16, 32],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 1, 32, 32],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([2, 512, 7],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 512],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 28],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 4, 4],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 7],"float32"), 0.1, )
paddle.nn.functional.linear(x=Tensor([5, 3, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9, 117, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 179, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 1, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4096, 128],"float32"), weight=Tensor([128, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 123, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1206, 512],"float32"), weight=Tensor([512, 212],"float32"), bias=Tensor([212],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 197, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4, 80, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 24, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 280, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 123, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 163, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 55, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4, 152, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 146, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2430, 50],"float32"), weight=Tensor([50, 50],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 31, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 81, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([3, 78, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 8, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([3, 77, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 32, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([6, 82, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 175, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 64, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 79, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([5, 41, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([5, 69, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([6, 119, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(Tensor([92928, 8],"float32"), Tensor([8],"float32"), )
paddle.nn.functional.linear(x=Tensor([2, 26, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 204, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 90, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 32, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 180, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 159, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 192, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 122, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 92, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 207, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 45, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 23, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 1, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 82, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 21, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 89, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 166, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 32, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 4, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 52, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([7, 68, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 132, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 146, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 400, 512],"float32"), weight=Tensor([512, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 95, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([3, 64, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 157, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 38, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 68, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 116, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 74, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 152, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 147, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(Tensor([123904, 8],"float32"), Tensor([8],"float32"), )
paddle.nn.functional.linear(x=Tensor([16, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 211, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 73, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 106, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 245, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 164, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 61, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4, 97, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 129, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 158, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 123, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 1, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 81, 256],"float32"), weight=Tensor([256, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 218, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 64, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 147, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 34, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 49, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 76, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 116, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 153, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(Tensor([6870, 32],"bfloat16"), Tensor([32, 896],"bfloat16"), Tensor([896],"bfloat16"), )
paddle.nn.functional.linear(x=Tensor([1596, 512],"float32"), weight=Tensor([512, 212],"float32"), bias=Tensor([212],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 191, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 77, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 30, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([100000, 1],"float32"), weight=Tensor([1, 40],"float32"), bias=Tensor([40],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9, 57, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([30, 76, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([55, 512],"float32"), weight=Tensor([512, 212],"float32"), bias=Tensor([212],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 45, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 88, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 164, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 119, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1082, 512],"float32"), weight=Tensor([512, 212],"float32"), bias=Tensor([212],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 14, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 6, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 1, 768],"float32"), weight=Tensor([768, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 158, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([5, 110, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 154, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([3, 46, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9, 11, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 4, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 159, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 23, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 94, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 153, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([12, 256, 256],"float32"), weight=Tensor([256, 64],"float32"), bias=Tensor([64],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 37, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 83, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 151, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([124, 1280],"float32"), weight=Tensor([1280, 102],"float32"), bias=Tensor([102],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 40, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 110, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 75, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(Tensor([11, 192],"float32"), Tensor([192, 896],"bfloat16"), Tensor([896],"bfloat16"), )
paddle.nn.functional.linear(x=Tensor([4, 162, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 26, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 81, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 64, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 49, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([80, 18, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 68, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 11, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 21, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 147, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 110, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 32, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9, 80, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 152, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([9, 39, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 110, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 88, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([7, 2, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 80, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 141, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 151, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 41, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 29, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 82, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([745, 512],"float32"), weight=Tensor([512, 212],"float32"), bias=Tensor([212],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 21, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([3, 121, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 123, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 102, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 140, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 151, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 157, 256],"float32"), weight=Tensor([256, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 76, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 84, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 208, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4, 26, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 48, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 152, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([7, 114, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 178, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 95, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 42, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 72, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 109, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 225, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 164, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 61, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 80, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([9, 10, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 118, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 27, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([30, 57, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 93, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([5, 12, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 23, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(Tensor([4, 512],"float32"), Tensor([512, 512],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 108, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 138, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 113, 256],"float32"), weight=Tensor([256, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 124, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 155, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 105, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(Tensor([18496, 8],"float32"), Tensor([8],"float32"), )
paddle.nn.functional.linear(x=Tensor([9, 63, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 5, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 93, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([16800, 48],"float32"), weight=Tensor([48, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 121, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 30, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 38, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([5, 53, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 238, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 98, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 13, 256],"float32"), weight=Tensor([256, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 5, 4096],"float32"), weight=Tensor([4096, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 171, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 140, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 69, 256],"float32"), weight=Tensor([256, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 93, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 39, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 81, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 162, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 155, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3306, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9, 2, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 156, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 1, 64],"float32"), weight=Tensor([64, 14336],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 195, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1128, 512],"float32"), weight=Tensor([512, 212],"float32"), bias=Tensor([212],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([849, 128],"float32"), weight=Tensor([128, 212],"float32"), bias=Tensor([212],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 95, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 125, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 28, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 140, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 207, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 83, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 178, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 157, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([7, 160, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([3, 22, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 246, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 109, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4, 40, 384],"float32"), weight=Tensor([384, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 149, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 14, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 18, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 72, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([12, 16, 512],"float32"), weight=Tensor([512, 256],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 135, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9, 114, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 12, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 40, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2430, 50],"float32"), weight=Tensor([50, 3],"float32"), bias=Tensor([3],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 14336],"float32"), weight=Tensor([14336, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([6, 64, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 21, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 222, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 116, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 22, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([32, 2048],"float32"), weight=Tensor([2048, 102],"float32"), bias=Tensor([102],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 133, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(Tensor([8, 512],"float32"), Tensor([512, 512],"float32"), )
paddle.nn.functional.linear(x=Tensor([4, 29, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 174, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 56, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1186, 512],"float32"), weight=Tensor([512, 212],"float32"), bias=Tensor([212],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 13, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 122, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 17, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 136, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 31, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 768],"float32"), weight=Tensor([768, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 92, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([7, 102, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 73, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 64, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 38, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 22, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8000, 20],"float32"), weight=Tensor([20, 3],"float32"), bias=Tensor([3],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 185, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 67, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 150, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 111, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 98, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([6, 22, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 93, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4, 133, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 85, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 80, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 177, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 108, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 141, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 124, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([192, 7, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 147, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([4, 34, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 55, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(Tensor([61952, 8],"float32"), Tensor([8],"float32"), )
paddle.nn.functional.linear(x=Tensor([4, 45, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 20, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 102, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 196, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 48, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([6, 69, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([9, 33, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([512, 1024],"float32"), weight=Tensor([1024, 3],"float32"), bias=Tensor([3],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 21, 256],"float32"), weight=Tensor([256, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 153, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 103, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 129, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 25, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 14, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 224, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 13, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 161, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([9, 110, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 52, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([6, 105, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 208, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 175, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 62, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 46, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 10, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 104, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 76, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([5, 43, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 109, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 106, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 134, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([3, 43, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 180, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 213, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 33, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 93, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 179, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 1, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 44, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([9, 32, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 110, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 68, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 55, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 131, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 148, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 51, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 82, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([3, 134, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 146, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 86, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([9, 98, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([30, 87, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 91, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 82, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 38, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 146, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 147, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 289, 256],"float32"), weight=Tensor([256, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 121, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9, 48, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 37, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 108, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 199, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 30, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 256, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 6, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 104, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 170, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 132, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 121, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([512, 7, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 16, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 105, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 1, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 57, 256],"float32"), weight=Tensor([256, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 12, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 32, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 87, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([3, 49, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 91, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([6, 135, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 1280],"float32"), weight=Tensor([1280, 400],"float32"), bias=Tensor([400],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 71, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([3, 6, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 36, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 29, 256],"float32"), weight=Tensor([256, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 205, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9, 1, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 112, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 149, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 1, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9, 35, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 44, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 28, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 91, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4936, 128],"float32"), weight=Tensor([128, 128],"float32"), bias=Tensor([128],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 149, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 4096, 64],"float32"), weight=Tensor([64, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 137, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 23, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 107, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 498, 256],"float32"), weight=Tensor([256, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 91, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 34, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 204, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(Tensor([18432, 8],"float32"), Tensor([8],"float32"), )
paddle.nn.functional.linear(x=Tensor([5, 31, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([6, 140, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([5, 98, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 197, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([3, 15, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 87, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 171, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 98, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 47, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1000, 128],"float32"), weight=Tensor([128, 128],"float32"), bias=Tensor([128],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 114, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 8, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 45, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([6, 173, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 40],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 40, 3],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.local_response_norm(Tensor([3, 3, 40, 40],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 40, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(Tensor([3, 40, 40, 3],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 3, 40, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 40],"float32"), size=5, data_format="NCL", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 40],"float32"), size=5, data_format="NLC", )
paddle.nn.functional.log_loss(Tensor([102400, 1],"float32"), Tensor([102400, 1],"float32"), epsilon=1e-07, )
paddle.nn.functional.log_loss(Tensor([102400, 1],"float32"), Tensor([102400, 1],"float32"), epsilon=1e-07, )
paddle.nn.functional.log_loss(Tensor([25600, 1],"float32"), Tensor([25600, 1],"float32"), epsilon=1e-07, )
paddle.nn.functional.log_loss(Tensor([25600, 1],"float32"), Tensor([25600, 1],"float32"), epsilon=1e-07, )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 10, 10],"float64"), )
paddle.nn.functional.log_sigmoid(Tensor([10, 10, 10],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([10, 10, 10],"float64"), None, )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 10, 10],"float32"), )
paddle.nn.functional.log_softmax(Tensor([52, 6629],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([256, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([144, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([128, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([100000, 2, 3],"float32"), )
paddle.nn.functional.log_softmax(Tensor([512, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([5, 51865],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.log_softmax(Tensor([154, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([20, 6629],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([100000, 2],"float32"), )
paddle.nn.functional.log_softmax(Tensor([640, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([154, 102],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([128, 102],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([64, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([16, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([80, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([256, 102],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([124, 102],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([128, 159],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([32, 102],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([128, 8],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([60, 102],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([77, 102],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([16, 102],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([12, 102],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([64, 102],"float32"), axis=-1, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 32],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 32],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 19, 19],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 480, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 65, 113],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 21, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 27, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 24, 36],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 33, 49],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 17, 81],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 38, 38],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 21, 21],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 24, 24],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 24, 24],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 14, 14],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 640, 21, 21],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 17, 17],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 23, 38],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 23, 23],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 21, 21],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 14, 14],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 36, 36],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 20, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 512, 18, 18],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([13, 256, 7, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 17, 321],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 15, 15],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 23, 23],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 25, 34],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([12, 512, 10, 10],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 24, 24],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 26, 36],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 21, 21],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 19, 19],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 16, 16],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 15, 15],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([6, 64, 17, 97],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([2, 832, 13, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 22, 22],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 22, 22],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 44, 44],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 37, 24],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 18, 18],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 24, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 36, 24],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 16, 16],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 14, 14],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 32, 39],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 32],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([12, 512, 10, 10],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 12, 12],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 25, 38],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 29, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 33, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 23, 23],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 32, 24],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([10, 64, 17, 65],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([10, 64, 17, 33],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 21, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 13, 13],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 31, 20],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 26, 26],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 30, 28],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 34, 28],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 24, 35],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 23, 23],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 14, 14],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 21, 21],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 12, 12],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 18, 18],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 6, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 36, 36],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 33, 113],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 24, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 23, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 21, 21],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 256, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 22, 22],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10, 64, 17, 49],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 36, 36],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 23, 23],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 17, 65],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 33, 24],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 22, 22],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 24, 34],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 38, 25],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 25, 39],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 31, 24],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 12, 12],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 49, 81],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 14, 14],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 24, 24],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 32, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 384, 15, 15],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 22, 22],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 20, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 30, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 640, 15, 15],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 44, 44],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 33, 161],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 26, 37],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 21, 21],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 25, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 12, 12],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 24, 24],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 34, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 25, 37],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 40, 40],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 21, 21],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 17, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([2, 288, 25, 25],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 28, 34],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 11, 11],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 24, 37],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 640, 15, 15],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 11, 11],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 23, 23],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 17, 17],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 32, 20, 20],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 16, 40, 40],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 16, 16],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 15, 15],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 512, 16, 16],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 22, 22],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 20, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 13, 13],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 18, 18],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 23, 23],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 49, 209],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 33, 33],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 49, 129],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 49, 225],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 17, 145],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 15, 15],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 13, 13],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 12, 12],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 22, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 18, 18],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 25, 34],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 23, 35],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 23, 41],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 21, 21],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 18, 18],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 244, 244, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 24, 36],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 31, 23],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 14, 14],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 23, 37],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 18, 18],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 19, 19],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 11, 11],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 10, 10],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 32, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 14, 14],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 224, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([12, 512, 10, 10],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 19, 19],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 50, 50],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 12, 12],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 14, 14],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 17, 17],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 36, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 48, 48],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 18, 18],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 46, 46],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 34, 34],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 13, 13],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 32],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 22, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([64, 16, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 32, 20, 20],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 384, 17, 17],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 17, 17],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 25, 36],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 22, 22],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 17, 17],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 27, 34],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 30, 22],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 10, 10],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 80, 80],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 12, 12],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 38, 38],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 18, 18],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 23, 35],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 19, 19],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 40, 40],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 20, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 42, 42],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 640, 15, 15],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 512, 16, 16],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 11, 11],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 20, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 23, 34],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 384, 18, 18],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 19, 19],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 18, 18],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 384, 17, 17],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 19, 19],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 13, 13],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 12, 12],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10, 64, 17, 81],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 20, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 22, 22],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 11, 11],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 25, 39],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 19, 19],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 38, 25],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 24, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 25, 38],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 34, 25],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 22, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 17, 17],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 23, 23],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 19, 19],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 128, 16, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 11, 11],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 19, 19],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 20, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 15, 15],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 19, 19],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 14, 14],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 21, 21],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 16, 16],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 480, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 24, 24],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 40, 40],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 20, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 14, 14],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 24, 24],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 23, 40],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 28, 21],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 528, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 28, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 24, 24],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 20, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 27, 36],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 17, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([64, 6, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 128, 14, 14],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([5, 64, 33, 65],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 25, 35],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 42, 42],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 10, 10],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 17, 17],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 19, 19],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 17, 49],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 16, 16],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 30, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 33, 25],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 14, 14],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 50, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 28, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 22, 22],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 11, 11],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 50, 50],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 22, 22],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 20, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 19, 19],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 18, 18],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 512, 4, 4],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 16, 16],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 17, 17],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 22, 22],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 15, 15],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 31, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 10, 10],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 32],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 15, 15],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 16, 16],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 18, 18],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 22, 22],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 34, 34],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 49, 289],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([4, 512, 16, 16],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 128, 14, 14],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 11, 11],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 17, 289],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 18, 18],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 20, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 49, 113],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 19, 19],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 512, 1, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 12, 12],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 23, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 23, 23],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 15, 15],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 17, 17],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 11, 11],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 30, 26],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 17, 17],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 384, 15, 15],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 768, 12, 12],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 224],"float32"), kernel_size=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 24, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 15, 15],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 384, 11, 11],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 17, 17],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 33, 17],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 22, 35],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 16, 16],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 36, 25],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 24, 24],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 16, 16],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 21, 21],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 31, 28],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 11, 11],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 22, 22],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 34, 34],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 16, 16],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 16, 16],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 512, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 23, 23],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 48, 48],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 35, 24],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 10, 10],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 28, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 22, 34],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([30, 64, 17, 17],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 27, 28],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 15, 15],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 14, 14],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 384, 15, 15],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 35, 23],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 17, 17],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 23, 42],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 20, 220, 220],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 11, 11],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 256, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 17, 337],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([8, 512, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 384, 13, 13],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 21, 21],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 15, 15],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 21, 21],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 22, 22],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([128, 50, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 44, 44],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 38, 38],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 14, 14],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 12, 12],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 49, 305],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([36, 6, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 23, 39],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 23, 23],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 49, 145],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([8, 128, 14, 14],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 24, 24],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 29, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 384, 11, 11],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 21, 21],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 49, 193],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 14, 14],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 34, 22],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 23, 23],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 25, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 10, 10],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 20, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 512, 18, 18],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 18, 18],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 10, 10],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 18, 18],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 22, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 288, 11, 11],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 46, 46],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 24, 38],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 32, 28],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 384, 17, 17],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 17, 17],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 384, 18, 18],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 48, 48],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 480, 15, 15],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 30, 22],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 20, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 27, 33],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 13, 13],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 18, 18],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 27, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 32, 24],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 24, 24],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 42, 42],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 22, 42],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([12, 512, 10, 10],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 32, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 17, 17],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 31, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 10, 4],"float32"), Tensor([64, 32, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 21, 9],"float32"), Tensor([64, 32, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float64"), Tensor([2, 4, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float64"), Tensor([2, 4, 11, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float32"), Tensor([2, 4, 20, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float32"), Tensor([2, 4, 11, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float32"), Tensor([2, 4, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float64"), Tensor([2, 4, 20, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(Tensor([100, 4, 3, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 3, 3],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3, 3],"float64"), groups=2, )
paddle.nn.functional.mish(Tensor([12, 512, 10, 10],"float32"), )
paddle.nn.functional.mse_loss(Tensor([32, 501, 4],"float32"), Tensor([32, 501, 4],"float32"), )
paddle.nn.functional.mse_loss(Tensor([50000, 1],"float32"), Tensor([50000, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([50, 1501, 1],"float32"), Tensor([50, 1501, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([50000, 1],"float32"), Tensor([50000, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([100000, 1],"float32"), Tensor([100000, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([26736, 3],"float32"), Tensor([26736, 3],"float32"), )
paddle.nn.functional.mse_loss(Tensor([147015, 1],"float32"), Tensor([147015, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([282600, 1],"float32"), Tensor([282600, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([64, 64, 64, 1],"float32"), Tensor([64, 64, 64, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([128512, 1],"float32"), Tensor([128512, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([68608, 1],"float32"), Tensor([68608, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([483100, 1],"float32"), Tensor([483100, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([68608, 1],"float32"), Tensor([68608, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([93401, 1],"float32"), Tensor([93401, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([156816, 1],"float32"), Tensor([156816, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([128512, 1],"float32"), Tensor([128512, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([228595, 1],"float32"), Tensor([228595, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([304794, 1],"float32"), Tensor([304794, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([8810, 1],"float32"), Tensor([8810, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([32812, 1],"float32"), Tensor([32812, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([256, 16, 3],"float32"), Tensor([256, 16, 3],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([512, 15, 3],"float32"), Tensor([512, 15, 3],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([20000, 1],"float32"), Tensor([20000, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([8810, 1],"float32"), Tensor([8810, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([34304, 1],"float32"), Tensor([34304, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([6000, 1],"float32"), Tensor([6000, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([5200, 1],"float32"), Tensor([5200, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([9801, 1],"float32"), Tensor([9801, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([8, 1501, 1],"float32"), Tensor([8, 1501, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([11661, 3],"float32"), Tensor([11661, 3],"float32"), )
paddle.nn.functional.mse_loss(Tensor([10000, 1],"float32"), Tensor([10000, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([15548, 3],"float32"), Tensor([15548, 3],"float32"), )
paddle.nn.functional.mse_loss(Tensor([6512, 1],"float32"), Tensor([6512, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([512, 16, 3],"float32"), Tensor([512, 16, 3],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([8490, 1],"float32"), Tensor([8490, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([17152, 1],"float32"), Tensor([17152, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([6512, 1],"float32"), Tensor([6512, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([39992, 1],"float32"), Tensor([39992, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([8000, 1],"float32"), Tensor([8000, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([256, 15, 3],"float32"), Tensor([256, 15, 3],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([9420, 1],"float32"), Tensor([9420, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([20000, 1],"float32"), Tensor([20000, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([10000, 1],"float32"), Tensor([10000, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([17152, 1],"float32"), Tensor([17152, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([9330, 1],"float32"), Tensor([9330, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([8192, 1],"float32"), Tensor([8192, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10240, 1],"float32"), Tensor([10240, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([100, 376, 1],"float32"), Tensor([100, 376, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([68, 376, 1],"float32"), Tensor([68, 376, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([17, 376, 1],"float32"), Tensor([17, 376, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([20600, 1],"float32"), Tensor([20600, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([10201, 1],"float32"), Tensor([10201, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([256, 128, 1],"float32"), Tensor([256, 128, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([34304, 1],"float32"), Tensor([34304, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([20569, 1],"float32"), Tensor([20569, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([7999, 1],"float32"), Tensor([7999, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1168, 1],"float32"), Tensor([1168, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1024, 1],"float32"), Tensor([1024, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2430, 1],"float32"), Tensor([2430, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1515, 1],"float32"), Tensor([1515, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([650, 1],"float32"), Tensor([650, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2048, 1],"float32"), Tensor([2048, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([4830, 1],"float32"), Tensor([4830, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2, 1501, 1],"float32"), Tensor([2, 1501, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([64, 64, 1, 1],"float32"), Tensor([64, 64, 1, 1],"float64"), "none", )
paddle.nn.functional.mse_loss(Tensor([501, 1],"float32"), Tensor([501, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([600, 1],"float32"), Tensor([600, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1820, 1],"float32"), Tensor([1820, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([64, 1, 64, 1],"float32"), Tensor([64, 1, 64, 1],"float64"), "none", )
paddle.nn.functional.mse_loss(Tensor([512, 1],"float32"), Tensor([512, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([4096, 1],"float32"), Tensor([4096, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([600, 1],"float32"), Tensor([600, 1],"float64"), "none", )
paddle.nn.functional.mse_loss(Tensor([1209, 1],"float32"), Tensor([1209, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([992, 1],"float32"), Tensor([992, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2419, 1],"float32"), Tensor([2419, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2000, 1],"float32"), Tensor([2000, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1, 64, 64, 1],"float32"), Tensor([1, 64, 64, 1],"float64"), "none", )
paddle.nn.functional.mse_loss(Tensor([1609, 1],"float32"), Tensor([1609, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([16, 96, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2020, 1],"float32"), Tensor([2020, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1000, 1],"float32"), Tensor([1000, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([544, 1],"float32"), Tensor([544, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1100, 1],"float32"), Tensor([1100, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2601, 1],"float32"), Tensor([2601, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1300, 1],"float32"), Tensor([1300, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1485, 1],"float32"), Tensor([1485, 1],"float32"), "none", )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"int64"), weight=Tensor([3],"float64"), ignore_index=-100, reduction="mean", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"int64"), weight=Tensor([3],"float64"), ignore_index=-100, reduction="none", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"int64"), weight=None, ignore_index=-100, reduction="mean", name=None, )
paddle.nn.functional.nll_loss(Tensor([5, 3, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"int64"), weight=Tensor([3],"float64"), ignore_index=-100, reduction="sum", name=None, )
paddle.nn.functional.normalize(Tensor([1243, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1128, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1221, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1006, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1090, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1603, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([721, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1297, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([254, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([745, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([944, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([854, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([881, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1878, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([690, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([966, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1317, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([893, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([859, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1165, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([201, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([246, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1238, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1499, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1539, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1332, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1183, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([846, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1199, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([743, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1829, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([877, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1291, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([936, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([777, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([996, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1281, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1472, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1304, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([310, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1232, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([864, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([800, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1378, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([987, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([931, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([211, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([979, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([971, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1259, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1118, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([447, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1928, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([432, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1453, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1449, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([744, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([852, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1287, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1417, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([901, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1549, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([838, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1567, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1512, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1774, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1562, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([709, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([831, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1607, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([766, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1716, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([224, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1223, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([781, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1138, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([935, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([541, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([670, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([824, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1180, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([486, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1579, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([790, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1029, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1438, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1836, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1478, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1686, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([842, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([438, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1596, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1408, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1394, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([956, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1542, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1030, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([819, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1517, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1796, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([758, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1523, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([353, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1031, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([780, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([443, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([772, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([821, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([220, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([851, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([912, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1389, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([849, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1546, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([942, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([375, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([813, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([814, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1200, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1671, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1543, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1943, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([484, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1053, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([993, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1494, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([952, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1755, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([659, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1367, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1250, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1290, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1179, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1676, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([995, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1605, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([911, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1082, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1661, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([921, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1536, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([719, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1143, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1051, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([995, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1284, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([494, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([832, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([667, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1080, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1471, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([452, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([446, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1333, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1363, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1310, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1511, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1, 128, 32, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([962, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1023, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([838, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1, 64, 64, 64],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1112, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([900, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1352, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1588, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1532, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1541, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1514, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1768, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1270, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([773, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([425, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([871, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1088, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1021, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1439, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1134, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([510, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1214, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1282, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([358, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([885, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1025, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1206, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([279, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1056, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([830, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([776, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([992, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([948, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([937, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1748, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1623, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1697, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1052, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([840, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([898, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([876, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([825, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1680, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1219, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([823, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1109, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1233, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([803, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1435, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1463, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1123, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1312, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([920, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([917, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1696, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([795, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([761, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([764, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1851, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([423, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1230, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([861, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([938, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1920, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([796, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1315, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([596, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1079, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1093, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([654, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1295, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([404, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1158, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1527, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([821, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([974, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1066, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1065, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([755, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([941, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([807, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1856, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1373, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1938, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1189, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1292, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1374, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([858, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1104, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1192, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1429, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1420, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1761, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1777, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1421, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1040, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1895, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1737, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([463, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([794, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([736, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1084, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1098, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([633, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([820, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1054, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1589, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([698, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([692, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1213, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1563, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([980, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1015, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1497, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([827, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([774, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([989, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([940, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([754, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([957, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1018, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1177, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([960, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([810, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1349, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1753, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1277, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1411, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1413, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([718, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1401, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1188, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([601, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1653, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1089, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1120, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1348, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([929, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1186, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([711, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1704, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1553, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([875, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([850, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([1362, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([621, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([660, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([699, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([57, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([29, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([482, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([106, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([64, 192],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([75, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([669, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([515, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([104, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([45, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([517, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([636, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([694, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([450, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([680, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([695, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([671, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([623, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([662, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([600, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([682, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([20, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([128, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([48, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([55, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([84, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([119, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([605, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([675, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([132, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([128, 80],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([580, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([149, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([550, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([646, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([101, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([79, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([140, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([128, 192],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([177, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([101, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([37, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([59, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([658, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([469, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([539, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([123, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([61, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([144, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([33, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([137, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([95, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([22, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([126, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([174, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([139, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([178, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([80, 400],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([105, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([698, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([136, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([111, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([102, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([110, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([39, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1, 256, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([191, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([510, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([679, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([147, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([143, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([602, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([80, 768],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([62, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([103, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([183, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([641, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([104, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([64, 64],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([14, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([51, 128],"float32"), )
paddle.nn.functional.normalize(Tensor([5, 256],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([2, 8, 7, 10],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([4, 1080],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([4096],"float32"), axis=0, epsilon=1e-12, )
paddle.nn.functional.normalize(Tensor([2048],"float32"), axis=0, epsilon=1e-12, )
paddle.nn.functional.normalize(Tensor([12, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([720, 6],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([10, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1024],"float32"), axis=0, epsilon=1e-12, )
paddle.nn.functional.normalize(Tensor([6, 720],"float32"), axis=1, )
paddle.nn.functional.pad(Tensor([4, 256, 4, 36],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 369, 369],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([5, 64, 32, 64],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 416],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([4, 64, 16, 144],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([4, 256, 4, 60],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 96],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1, 64, 64, 112],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 256, 4, 28],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([4, 64, 32, 48],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([4, 64, 16, 48],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 320],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 512],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([8, 1, 237, 237],"float32"), list[2,2,2,2,], "constant", 0, )
paddle.nn.functional.pad(Tensor([1, 1, 498, 498],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([2, 128, 16, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([7, 256, 8, 24],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 144],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 16, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 8, 72],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 16, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([8, 256, 4, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 448],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([5, 1, 64, 576],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 4, 48],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([7, 1, 64, 608],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 8, 56],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 80],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([4096, 1, 9, 9],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([10, 256, 8, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 64, 32, 160],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 48],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 256, 8, 80],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 3, 140, 240],"float64"), pad=list[0,0,40,40,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 128, 8, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 80],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 128, 16, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([4096, 1, 8, 8],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([9, 1, 64, 352],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 256, 4, 28],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 8, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([4, 3, 224, 224],"int64"), pad=list[2,2,4,1,], mode="constant", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([10, 256, 8, 16],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 16, 7, 8, 768],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([10, 1, 32, 320],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([6, 256, 4, 24],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2048, 1, 17, 17],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([30, 256, 4, 20],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([5, 128, 16, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([12, 1, 128, 128],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([2, 64, 48, 112],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 64, 16, 32],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([6, 256, 8, 48],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 512],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 256],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1, 3, 280, 350],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([30, 1, 64, 224],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 76],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 8, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 128, 8, 16],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 3, 180, 200],"float64"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 3, 184, 308],"float64"), pad=list[0,0,40,40,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 128, 24, 72],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 16, 80],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([6, 64, 16, 96],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 1, 339, 339],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 416],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 448],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([3, 1, 256, 256],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([10, 1, 64, 288],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([512, 1, 17, 17],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1, 64, 16, 256],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([4, 128, 8, 120],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([9, 256, 4, 52],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 4, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 3, 256, 256],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 80],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 8, 48],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 144],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 288],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 160],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 24, 80],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 304],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 256, 4, 24],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([3, 128, 8, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 8, 16],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 160],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([16, 25500, 1],"float32"), pad=list[1024,1024,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([6, 128, 8, 112],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 8, 144],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 56],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 336, 336],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([6, 128, 8, 48],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 256, 4, 80],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([8, 128, 8, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([7, 128, 16, 48],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 16, 9, 7, 768],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([10, 1, 64, 256],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([6, 256, 4, 44],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 256, 4, 8],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 355, 355],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 16, 7, 7, 768],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([30, 256, 4, 32],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([262144, 1, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([2, 256, 8, 28],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1000, 1, 31, 31],"float32"), pad=list[3,3,3,3,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2, 64, 16, 64],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 352],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([8, 1, 64, 480],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 64, 16, 16],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 3, 184, 204],"float64"), pad=list[52,52,0,0,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([557568, 1, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([30, 128, 8, 32],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([6, 256, 4, 56],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 544],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 16, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 8, 24],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 8, 80],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([12, 1, 256, 256],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([1, 64, 48, 208],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 384],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([165888, 1, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([10, 1, 64, 224],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 256],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 52],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 112],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 320],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 288],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1, 3, 400, 300],"float32"), pad=list[2,2,2,2,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 16, 8, 7, 768],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([5, 128, 16, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 320],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 256, 24, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 352],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1, 64, 16, 288],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 128],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 256, 4, 24],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([30, 256, 4, 4],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 3, 224, 224],"float32"), list[0,1,0,0,], )
paddle.nn.functional.pad(Tensor([3, 1, 64, 672],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 48, 128],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 64, 48, 160],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 72],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 4, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 192],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([30, 128, 8, 8],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([30, 128, 16, 16],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([4, 128, 16, 24],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([3, 64, 16, 80],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 256, 8, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 40, 104],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 544],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([196608, 1, 1, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([30, 128, 8, 24],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([9, 1, 32, 416],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 8, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([512, 1, 33, 33],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1, 64, 16, 272],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 160000, 1],"float64"), pad=list[256,256,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([10, 1, 64, 320],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 64],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 256, 4, 12],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 64, 16, 336],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 128, 8, 48],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 512],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 4, 16],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 16, 7, 9, 768],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([9, 256, 8, 44],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([591872, 1, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([4, 128, 8, 72],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([5, 256, 8, 32],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 477, 477],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([384, 384, 1, 1],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([30, 256, 4, 16],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 4, 36],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([4, 256, 4, 76],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([8, 1, 64, 448],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([3, 256, 8, 52],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 64],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([5, 256, 8, 16],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 256, 8, 12],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 8, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 224],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 192],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([24, 1, 128, 128],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([1, 256, 12, 36],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([16, 25500, 1],"float32"), pad=list[512,512,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([480, 480, 1, 1],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([2, 256, 8, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([16, 64, 16, 16],"float32"), list[0,3,0,3,], mode="constant", )
paddle.nn.functional.pad(Tensor([10, 128, 8, 96],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([256, 4, 8, 16],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 128, 24, 160],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 4, 20],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 8, 136],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 224],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([8, 256, 8, 56],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 8, 20],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([3, 128, 16, 104],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 256, 12, 60],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([147968, 1, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([393216, 1, 1, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([10, 1, 64, 416],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 256, 8, 8],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([6, 1, 64, 384],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 8, 24],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 28, 21, 768],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([30, 1, 32, 192],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 457, 457],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 104],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 24, 56],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 8, 28],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 24, 152],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([7, 6, 21, 1024],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.nn.functional.pad(Tensor([2048, 1, 9, 9],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([3, 256, 8, 84],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 64, 480],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 288],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 256, 12, 28],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 20, 52],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 128],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([4, 64, 16, 240],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([16, 25500, 1],"float32"), pad=list[256,256,], mode="reflect", data_format="NLC", )
paddle.nn.functional.pad(Tensor([10, 128, 16, 48],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 8, 36],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 12, 48],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([12, 32, 32, 32],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([4, 128, 8, 152],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 96],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([12, 16, 16, 64],"float32"), tuple(0,0,0,0,), data_format="NHWC", )
paddle.nn.functional.pad(Tensor([8, 256, 8, 60],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 64, 16, 32],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([10, 256, 4, 12],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 16, 56],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 256, 8, 44],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 256, 8, 16],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 384],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 8, 168],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 128],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 32, 80],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 64, 48, 192],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([331776, 1, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([2, 64, 32, 32],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 256, 16, 28],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 8, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 64, 16, 320],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([2, 64, 32, 112],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 384],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([10, 1, 64, 384],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([5, 256, 8, 72],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([2, 256, 12, 40],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 16, 7, 10, 768],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([10, 1, 64, 352],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([30, 1, 32, 480],"float32"), list[2,3,2,3,], value=0, )
paddle.nn.functional.pad(Tensor([2, 128, 24, 120],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 128, 32, 56],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([6, 128, 8, 88],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([4096, 1, 8, 8],"float32"), list[2,2,2,2,], )
paddle.nn.functional.pad(Tensor([1, 128, 24, 96],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([9, 128, 8, 104],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 171, 171],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 116, 128],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 181, 193],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 148, 148],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([120, 120, 1, 1],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 117, 128],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 99, 110],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 208, 208],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 193, 205],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 128, 128],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 114, 126],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 223, 223],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 156, 167],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 172, 183],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 152, 164],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 106, 117],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 163, 174],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 162, 173],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 100, 111],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 137, 149],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 129, 129],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([4, 256, 8, 12],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 147, 147],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 196, 208],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 269, 269],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 207, 207],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 182, 193],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 243, 243],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 157, 169],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 109, 120],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 133, 133],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 151, 151],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 220, 220],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([2, 1, 64, 320],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 192, 204],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 138, 138],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 166, 178],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 288, 288],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 176, 176],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 100, 100],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 271, 271],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([2, 1, 64, 640],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 4, 64],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 192, 203],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 102, 102],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 142, 142],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 32, 544],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 178, 189],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 201, 212],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 191, 191],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 293, 293],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 128, 139],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 106, 106],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 187, 187],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 154, 166],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([24576, 1, 1, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 170, 181],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 114, 114],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 119, 130],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 219, 219],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 242, 242],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([4, 1, 32, 288],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 209, 209],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([2, 1, 96, 320],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([24, 1, 64, 64],"float32"), list[2,1,2,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 151, 162],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([4, 64, 16, 16],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 1, 211, 211],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 129, 140],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 20524, 3],"float32"), list[1,0,], value=1, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 1, 136, 147],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 178, 190],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 200, 211],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 151, 163],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 132, 143],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 173, 173],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([6, 1, 32, 192],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 115, 127],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 162, 162],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 282, 282],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([2, 256, 8, 8],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 189, 201],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 134, 145],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 256],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 448],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 182, 182],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([3, 1, 64, 416],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 194, 194],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 173, 184],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 96, 640],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 144, 144],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 152, 152],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 190, 202],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 187, 199],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 161, 161],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([12288, 1, 1, 1],"float32"), list[0,1,0,1,], )
paddle.nn.functional.pad(Tensor([1, 1, 281, 281],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 185, 196],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 253, 253],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 143, 154],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 201, 201],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 153, 153],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 274, 274],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 209, 209],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 174, 174],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 154, 165],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 166, 166],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 202, 202],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 139, 139],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 231, 231],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([2, 64, 16, 16],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 254, 254],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 3, 204, 152],"float64"), pad=list[1,3,2,4,], mode="constant", value=0.0, data_format="NCHW", )
paddle.nn.functional.pad(Tensor([1, 1, 227, 227],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 138, 138],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 161, 172],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 126, 137],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 154, 154],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([2, 256, 4, 8],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 107, 118],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 104, 104],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 285, 285],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 104, 104],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([10, 1, 32, 224],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 157, 168],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([2, 256, 8, 20],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 298, 298],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 237, 237],"int32"), Tensor([4],"int32"), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 159, 171],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 127, 127],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 173, 185],"float32"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 163, 163],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 1, 171, 182],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 274, 47],"float32"), pad=list[1,1,1,1,], mode="constant", value=0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 207, 207],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([7, 1, 64, 192],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 1, 127, 138],"float32"), pad=list[0,1,0,0,], mode="constant", value=-10000.0, data_format="NCHW", name=None, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 100],"float32"), y=Tensor([100, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 100],"float32"), y=Tensor([100],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float32"), Tensor([100, 100],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 100],"float64"), Tensor([100, 100],"float64"), 0, 1e-06, True, None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1, 274, 47],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1, 17, 82],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 81, 4, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 81, 4, 4],"float64"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5, 20, 10, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.relu(Tensor([8, 4, 88, 72],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 74, 48],"float32"), )
paddle.nn.functional.relu(Tensor([1, 64, 48, 320],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 38, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 35, 42],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 128, 4, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 24, 80, 80],"float32"), )
paddle.nn.functional.relu(Tensor([1, 192, 46, 46],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 256, 4, 8],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 256, 16, 80],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 512, 4, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 64, 8, 40],"float32"), None, )
paddle.nn.functional.relu(Tensor([7, 512, 8, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 4, 72, 88],"float32"), )
paddle.nn.functional.relu(Tensor([2, 24, 56, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 128, 24, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 30, 31],"float32"), )
paddle.nn.functional.relu(Tensor([1, 16, 274, 47],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 256, 32, 24],"float32"), )
paddle.nn.functional.relu(Tensor([10, 128, 8, 48],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 128, 46, 46],"float32"), None, )
paddle.nn.functional.relu(Tensor([5, 1024, 4, 8],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 128, 8, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 41, 38],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 64, 32, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 512, 8, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([6, 512, 4, 44],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 64, 16, 144],"float32"), None, )
paddle.nn.functional.relu(x=Tensor([100, 38, 64],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 36, 24],"float32"), )
paddle.nn.functional.relu(Tensor([64, 128, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 32, 34],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 15, 16],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 26, 36],"float32"), )
paddle.nn.functional.relu(Tensor([1, 20, 110, 110],"float32"), )
paddle.nn.functional.relu(Tensor([2, 32, 111, 111],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 24, 112],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 64, 48, 128],"float32"), None, )
paddle.nn.functional.relu(Tensor([64, 64, 10, 10],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 16, 12],"float32"), )
paddle.nn.functional.relu(Tensor([10, 256, 4, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 16, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 512, 16, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([13, 192, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 64, 8, 80],"float32"), None, )
paddle.nn.functional.relu(Tensor([3, 256, 32, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([640, 240, 1, 1],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 18, 17],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 21, 16],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 31, 34],"float32"), None, )
paddle.nn.functional.relu(Tensor([5, 128, 16, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 128, 76, 50],"float32"), None, )
paddle.nn.functional.relu(Tensor([5, 512, 8, 16],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 25, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 256, 2, 34],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 192, 8, 80],"float32"), None, )
paddle.nn.functional.relu(x=Tensor([256, 512, 2, 2],"float32"), )
paddle.nn.functional.relu(Tensor([3, 1024, 4, 42],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 128, 24, 80],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 64, 8, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 17, 19],"float32"), )
paddle.nn.functional.relu(Tensor([30, 64, 16, 16],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 35, 39],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 192, 24, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 4, 64, 80],"float32"), )
paddle.nn.functional.relu(Tensor([2, 256, 8, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 128, 8, 60],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 9, 11],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 31, 38],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 11, 15],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 50, 76],"float32"), )
paddle.nn.functional.relu(Tensor([2, 32, 120, 120],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 50, 68],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 10, 9],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 21, 20],"float32"), )
paddle.nn.functional.relu(Tensor([1, 512, 36, 50],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 38, 37],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 256, 8, 16],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 768, 23, 23],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 21, 18],"float32"), )
paddle.nn.functional.relu(Tensor([1, 64, 48, 80],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 16, 16],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 18, 16],"float32"), )
paddle.nn.functional.relu(Tensor([4, 64, 32, 48],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 14, 15],"float32"), )
paddle.nn.functional.relu(Tensor([3, 256, 4, 42],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 512, 34, 22],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 24, 152],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 4, 64, 88],"float32"), )
paddle.nn.functional.relu(Tensor([1, 2048, 7, 7],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 42, 25],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 1024, 2, 16],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 4, 176, 160],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 17, 13],"float32"), )
paddle.nn.functional.relu(Tensor([10, 128, 8, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 6, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 64, 32, 7, 7],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 14, 17],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 4, 30],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 4, 56, 80],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 13, 19],"float32"), )
paddle.nn.functional.relu(Tensor([2, 192, 26, 26],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 40, 30],"float32"), )
paddle.nn.functional.relu(Tensor([16, 16, 32, 24],"float32"), )
paddle.nn.functional.relu(Tensor([2, 1024, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 16, 18],"float32"), )
paddle.nn.functional.relu(Tensor([2, 256, 32, 30],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 192, 40, 40],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 21, 32],"float32"), )
paddle.nn.functional.relu(Tensor([2, 120, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 256, 8, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([5, 64, 32, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 128, 32, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 20, 16],"float32"), )
paddle.nn.functional.relu(Tensor([1, 512, 40, 40],"float32"), )
paddle.nn.functional.relu(Tensor([2, 400, 512],"float32"), )
paddle.nn.functional.relu(Tensor([30, 256, 4, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 4, 80, 88],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 48, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 25, 31],"float32"), )
paddle.nn.functional.relu(Tensor([10, 256, 2, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 64, 42],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 17, 17],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 4, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 24, 38],"float32"), )
paddle.nn.functional.relu(Tensor([32, 6, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 25, 34],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 22, 22],"float32"), None, )
paddle.nn.functional.relu(Tensor([512, 40, 8, 6],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 19, 16],"float32"), )
paddle.nn.functional.relu(Tensor([2, 512, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([3, 256, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 14, 16],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 12, 18],"float32"), )
paddle.nn.functional.relu(Tensor([8, 512, 4, 7, 7],"float32"), )
paddle.nn.functional.relu(Tensor([8, 4, 88, 80],"float32"), )
paddle.nn.functional.relu(Tensor([32, 512, 7, 7],"float32"), None, )
paddle.nn.functional.relu(x=Tensor([32, 15, 8, 8, 32],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 24, 72],"float32"), None, )
paddle.nn.functional.relu(Tensor([5, 1024, 4, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 34, 27],"float32"), )
paddle.nn.functional.relu(Tensor([30, 128, 8, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 33, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([10, 256, 2, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 256, 4, 18],"float32"), None, )
paddle.nn.functional.relu(Tensor([16, 512, 4, 4],"float32"), )
paddle.nn.functional.relu(Tensor([10, 1024, 4, 12],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 39, 38],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 128, 4, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 512, 36, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 1152, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 64, 16, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 256, 4, 12],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 45, 36],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 33, 27],"float32"), )
paddle.nn.functional.relu(Tensor([1, 384, 32, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([9, 64, 8, 104],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 15, 17],"float32"), )
paddle.nn.functional.relu(Tensor([1, 512, 12, 80],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 1024, 2, 10],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 128, 4, 12],"float32"), None, )
paddle.nn.functional.relu(Tensor([3, 256, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 15, 14],"float32"), )
paddle.nn.functional.relu(Tensor([1, 512, 20, 27],"float32"), )
paddle.nn.functional.relu(Tensor([2, 352, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 27, 34],"float32"), )
paddle.nn.functional.relu(Tensor([30, 256, 2, 18],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 128, 4, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 1024, 4, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 32, 42],"float32"), None, )
paddle.nn.functional.relu(Tensor([16, 80, 16, 12],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 25, 35],"float32"), None, )
paddle.nn.functional.relu(Tensor([9, 128, 4, 52],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 19, 20],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 38, 25],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 39, 37],"float32"), None, )
paddle.nn.functional.relu(Tensor([16, 128, 16, 16],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 64, 55, 55],"float32"), )
paddle.nn.functional.relu(Tensor([512, 1234],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 18, 17],"float32"), )
paddle.nn.functional.relu(Tensor([10, 128, 16, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 28, 32],"float32"), )
paddle.nn.functional.relu(Tensor([9, 128, 8, 104],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 496, 512],"float32"), )
paddle.nn.functional.relu(Tensor([1, 64, 24, 112],"float32"), None, )
paddle.nn.functional.relu(Tensor([1358, 128],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 4, 144, 176],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 24, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 25, 38],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 768, 18, 18],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 44, 60],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 37, 24],"float32"), )
paddle.nn.functional.relu(Tensor([16, 256, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 128, 8, 8],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 128, 100],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 12, 48],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 528, 13, 13],"float32"), )
paddle.nn.functional.relu(Tensor([9, 128, 8, 44],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 31, 28],"float32"), )
paddle.nn.functional.relu(Tensor([7, 256, 8, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 20, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 128, 4, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([16, 80, 16, 12],"float32"), )
paddle.nn.functional.relu(Tensor([30, 256, 2, 26],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 1024, 17, 17],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 17, 18],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 8, 152],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 15, 13],"float32"), )
paddle.nn.functional.relu(Tensor([1, 128, 89, 72],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 24, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 18, 16],"float32"), )
paddle.nn.functional.relu(Tensor([10, 64, 8, 40],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 512, 4, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 128, 8, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 1024, 2, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 34, 34],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 96, 92, 92],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 22, 30],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 21, 33],"float32"), )
paddle.nn.functional.relu(Tensor([30, 64, 16, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 64, 8, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 19, 18],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 27, 31],"float32"), )
paddle.nn.functional.relu(Tensor([1, 2048, 18, 18],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 16, 19],"float32"), )
paddle.nn.functional.relu(Tensor([5, 256, 4, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 64, 16, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 512, 22, 30],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 256, 4, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 96, 40, 40],"float32"), )
paddle.nn.functional.relu(Tensor([16, 256, 8, 8],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 1024, 4, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 64, 16, 96],"float32"), None, )
paddle.nn.functional.relu(Tensor([9, 1024, 2, 26],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 256, 2, 12],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 128, 50, 78],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 128, 16, 40],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 384, 17, 17],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 21, 16],"float32"), )
paddle.nn.functional.relu(Tensor([2, 256, 8, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 15, 15],"float32"), )
paddle.nn.functional.relu(Tensor([8, 4, 160, 176],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 38, 38],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 768, 20, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 512, 40, 40],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 512, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([6, 256, 4, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 64, 48, 288],"float32"), None, )
paddle.nn.functional.relu(Tensor([16, 40, 32, 24],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 4, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 30, 26],"float32"), )
paddle.nn.functional.relu(Tensor([8, 1024, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 14, 18],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 26, 42],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 10, 10],"float32"), )
paddle.nn.functional.relu(Tensor([2, 832, 13, 13],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 34, 38],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 24, 35],"float32"), )
paddle.nn.functional.relu(Tensor([1, 64, 24, 96],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 128, 32, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 224, 20, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 256, 2, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([6, 2, 300, 256],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 13, 17],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 29, 40],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 38, 25],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 16, 19],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 31, 42],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 12, 17],"float32"), )
paddle.nn.functional.relu(Tensor([512, 256, 1, 2],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 512, 32, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 45, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 512, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 36, 25],"float32"), )
paddle.nn.functional.relu(Tensor([2, 256, 38, 25],"float32"), )
paddle.nn.functional.relu(Tensor([1, 128, 38, 25],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 64, 24, 120],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 512, 12, 60],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 192, 27, 27],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 30, 22],"float32"), )
paddle.nn.functional.relu(Tensor([1, 48, 144, 144],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 12, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 27, 38],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 20, 31],"float32"), )
paddle.nn.functional.relu(Tensor([5168, 128],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 512, 16, 16],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 25, 36],"float32"), )
paddle.nn.functional.relu(Tensor([1, 384, 46, 46],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 16, 20],"float32"), )
paddle.nn.functional.relu(Tensor([2, 112, 56, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 128, 24, 104],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 512, 4, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 512, 25, 39],"float32"), )
paddle.nn.functional.relu(Tensor([10, 256, 4, 10],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 25, 32],"float32"), )
paddle.nn.functional.relu(Tensor([7, 128, 8, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 36, 50],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 17, 21],"float32"), )
paddle.nn.functional.relu(Tensor([1, 2048, 20, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 37, 34],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 8, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 32, 21],"float32"), )
paddle.nn.functional.relu(Tensor([4, 64, 20, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 512, 8, 12],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 512, 8, 16],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 256, 2, 30],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 18, 18],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 128, 48, 128],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 1024, 20, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 128, 4, 48],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 64, 16, 80],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 2048, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 16, 16],"float32"), )
paddle.nn.functional.relu(Tensor([1, 128, 24, 40],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 512, 21, 32],"float32"), )
paddle.nn.functional.relu(Tensor([1, 512, 4, 68],"float32"), None, )
paddle.nn.functional.relu(Tensor([64, 32, 20, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([52, 30, 512],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 12, 20],"float32"), )
paddle.nn.functional.relu(Tensor([2, 64, 16, 160],"float32"), None, )
paddle.nn.functional.relu(Tensor([1024, 144, 1, 1],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 64, 16, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 512, 12, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 36, 38],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 32, 32, 64],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 23, 23],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 4, 60],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 34, 37],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 13, 17],"float32"), )
paddle.nn.functional.relu(Tensor([10, 256, 8, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 492, 512],"float32"), )
paddle.nn.functional.relu(Tensor([64, 4096],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 16, 56, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 14, 21],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 22, 33],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 11, 9],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 30, 28],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 39, 34],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 256, 42, 63],"float32"), )
paddle.nn.functional.relu(Tensor([2, 96, 68, 68],"float32"), None, )
paddle.nn.functional.relu(Tensor([3, 64, 16, 80],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 384, 36, 36],"float32"), None, )
paddle.nn.functional.relu(Tensor([6, 1024, 2, 22],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 512, 4, 8],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 18, 18],"float32"), )
paddle.nn.functional.relu(Tensor([2, 96, 60, 60],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 512, 4, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 160, 16, 80],"float32"), None, )
paddle.nn.functional.relu(Tensor([64, 16, 10, 10],"float32"), None, )
paddle.nn.functional.relu(x=Tensor([87, 512, 2, 2],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 32, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 128, 25, 38],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 6, 38],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 64, 20, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 128, 4, 48],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 64, 16, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 14, 18],"float32"), )
paddle.nn.functional.relu(Tensor([18, 256, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 4, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 24, 33],"float32"), )
paddle.nn.functional.relu(Tensor([2, 64, 16, 320],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 492, 1024],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 40, 62],"float32"), )
paddle.nn.functional.relu(Tensor([6, 1024, 4, 24],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 20, 22],"float32"), )
paddle.nn.functional.relu(Tensor([2, 256, 28, 21],"float32"), )
paddle.nn.functional.relu(Tensor([2, 128, 8, 160],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 128, 8, 12],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 256, 14, 17],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 33, 24],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 34, 35],"float32"), None, )
paddle.nn.functional.relu(Tensor([3, 128, 32, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 15, 20],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 17, 16],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 35, 38],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 256, 13, 18],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 23, 31],"float32"), )
paddle.nn.functional.relu(Tensor([30, 1024, 2, 6],"float32"), None, )
paddle.nn.functional.relu(Tensor([30, 128, 4, 8],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 512, 20, 20],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 30, 30],"float32"), )
paddle.nn.functional.relu(Tensor([4, 1024, 2, 18],"float32"), None, )
paddle.nn.functional.relu(Tensor([64, 36, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 144, 12, 39],"float32"), None, )
paddle.nn.functional.relu(Tensor([16, 256, 8, 8],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 13, 16],"float32"), )
paddle.nn.functional.relu(Tensor([10, 64, 16, 48],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 36, 24, 78],"float32"), None, )
paddle.nn.functional.relu(Tensor([9, 256, 4, 52],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 256, 16, 16],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 64, 16, 72],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 64, 54, 54],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 13, 15],"float32"), )
paddle.nn.functional.relu(Tensor([30, 256, 2, 20],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 30, 32],"float32"), )
paddle.nn.functional.relu(Tensor([64, 72, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([10, 512, 4, 40],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 2048, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([2, 96, 56, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 144, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([4, 512, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 576, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([2, 32, 112, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 384, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([2, 144, 56, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 144, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([4, 1280, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([2, 384, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 1024, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 96, 56, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 24, 80, 80],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 192, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 192, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([4, 768, 16, 16],"float32"), None, )
paddle.nn.functional.relu6(Tensor([20, 768, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 256, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 576, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([4, 512, 16, 16],"float32"), None, )
paddle.nn.functional.relu6(Tensor([2, 144, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 192, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([2, 1280, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 144, 56, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 256, 16, 16],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 128, 16, 16],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 576, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 96, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([4, 960, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([2, 192, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 32, 112, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 576, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 32, 112, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([4, 768, 8, 8],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 24, 40, 40],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 144, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 144, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 192, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([2, 576, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 384, 8, 8],"float32"), None, )
paddle.nn.functional.relu6(Tensor([2, 576, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 384, 8, 1],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 1280, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 192, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([4, 384, 1, 8],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 384, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 576, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 192, 8, 8],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 1280, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([2, 960, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 384, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 192, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([2, 192, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 256, 1, 16],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 960, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([4, 256, 16, 1],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 576, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 960, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([8, 16, 32],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([1, 10, 144, 144],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 32, 160, 160],"float32"), )
paddle.nn.functional.sigmoid(Tensor([5184, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12136, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 176, 176],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 28, 28],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 336, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4165, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8112, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8736, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 900, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 104, 104],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 108, 108],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 512, 44, 44],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 320, 15, 15],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 12, 12],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 16, 16],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 123904],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12160, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 34, 34],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1800, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 312, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([20, 1, 152, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11050, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1000, 128],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 80, 11, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 384, 23, 23],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11152, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 2, 248, 216],"float32"), )
paddle.nn.functional.sigmoid(Tensor([9408, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 21, 21],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 18, 18],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 16, 16],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1360, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 64, 48, 48],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 200, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 512, 22, 22],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10336, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 256, 15, 15],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11552, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([3200, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 92, 92],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 336, 200],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 80, 10, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 36, 64, 64],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 112, 112],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 1, 48, 48],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 320, 320],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 64, 28, 28],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10640, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 84, 84],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 76, 76],"float32"), )
paddle.nn.functional.sigmoid(Tensor([6, 304, 200],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2736, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1726, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 76, 76],"float32"), )
paddle.nn.functional.sigmoid(Tensor([7600, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 80, 5, 5],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 128, 28, 28],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 272, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 192, 15, 15],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 22, 22],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 2, 128, 128],"float32"), )
paddle.nn.functional.sigmoid(Tensor([5760, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 26, 26],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 64, 96, 96],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 11, 88, 88],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4608, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8208, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([20, 9, 19, 34],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 22, 22],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11400, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8528, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([6272, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 320, 21, 21],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 60, 60],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12464, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1976, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 2, 100, 100],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([2, 640, 15, 15],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 384, 10, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 240, 240],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 304, 312],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 320, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 512, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([3360, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([20, 9, 38, 68],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 9, 64, 64],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2880, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 256, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 176, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([9, 200, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 24, 24],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 272, 312],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2048, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 17, 17],"float32"), )
paddle.nn.functional.sigmoid(Tensor([6, 200, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 128, 48, 48],"float32"), )
paddle.nn.functional.sigmoid(Tensor([9728, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 48, 40, 40],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 232, 232],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11856, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 15, 15],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 200, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 128, 25, 25],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 1, 248, 216],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 3, 68, 68, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 96, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 18, 18],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 56, 56],"float32"), )
paddle.nn.functional.sigmoid(Tensor([6, 18, 50, 50],"float32"), )
paddle.nn.functional.sigmoid(Tensor([7744, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 11, 72, 72],"float32"), )
paddle.nn.functional.sigmoid(Tensor([9, 304, 200],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2304, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4096, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 17, 17],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11088, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10800, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 184, 184],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 64, 14, 14],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 256, 17, 17],"float32"), )
paddle.nn.functional.sigmoid(Tensor([128, 1152, 1, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 1584, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([3872, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2888, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 304, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 328, 296],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 256, 16, 16],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 2, 128, 128],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2688, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 11, 80, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10752, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 4, 88, 88],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 256, 40, 40],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 296, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([9, 200, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([9180, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 336, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4800, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([3240, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([3072, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 256, 30, 30],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 19, 19],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 256, 22, 22],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 13, 13],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 272, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 384, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([87, 722, 2, 2],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 304, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 256, 34, 34],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 128, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 4, 48, 48],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 147456],"float32"), )
paddle.nn.functional.sigmoid(Tensor([5408, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 80, 6, 6],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1600, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 256, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 512, 18, 18],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 26, 26],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1000, 400],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 256, 16, 16],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([1728, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 128, 46, 46],"float32"), )
paddle.nn.functional.sigmoid(Tensor([3060, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 304, 328],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([41472, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 116, 116],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 128, 14, 14],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 208, 208],"float32"), )
paddle.nn.functional.sigmoid(Tensor([3528, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 23, 23],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11248, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 256, 46, 46],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 300, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10944, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 15, 15],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 80, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 200, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 320, 30, 30],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 15, 128, 128],"float32"), )
paddle.nn.functional.sigmoid(Tensor([6400, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([45600, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 304, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 64, 68, 68],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 100, 100],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 80, 8, 8],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10890, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2577, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 14, 14],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 100, 100],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 304, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 72, 72],"float32"), )
paddle.nn.functional.sigmoid(Tensor([7200, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 512, 40, 40],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 73984],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 384, 15, 15],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 84, 84],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12432, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 11, 84, 84],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 512, 36, 36],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 11, 68, 68],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 88, 88],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10368, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 4, 84, 84],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 19, 19],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2584, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 64, 46, 46],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([56, 722, 2, 2],"float32"), )
paddle.nn.functional.sigmoid(Tensor([7904, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 4, 40, 40],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 135424],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 64, 64],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2856, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 160, 160],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 1, 40, 40],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([2, 64, 34, 34],"float32"), )
paddle.nn.functional.sigmoid(Tensor([3040, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 30, 30],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 280, 312],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 128, 40, 40],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 512, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([3192, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 11, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([9, 200, 312],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 24, 24],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 384, 46, 46],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1000, 300],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 1, 44, 44],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 80, 9, 9],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11424, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 312, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2184, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([5808, 80],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 722, 2, 2],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 200, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10608, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 32, 96, 96],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 80, 12, 12],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10920, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10105, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 128, 88, 88],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 272, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 4, 96, 96],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 192, 10, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1024, 384],"float32"), )
paddle.nn.functional.sigmoid(Tensor([3598, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 80, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 168, 168],"float32"), )
paddle.nn.functional.sigmoid(Tensor([3024, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10032, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 3, 72, 72, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 14, 14],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 256, 18, 18],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 1280, 15, 15],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 272, 328],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 23, 23],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 21, 21],"float32"), )
paddle.nn.functional.sigmoid(Tensor([6912, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 36, 36],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 4, 128, 128],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 88, 88],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 304, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 10, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 11, 76, 76],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 512, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 32, 32],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2720, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 226, 37],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 640, 21, 21],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 320, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2125, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2352, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 68, 68],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 512, 16, 16],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11760, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 272, 200],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2128, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1568, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1000, 256],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 272, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 136, 136],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 38, 38],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 107136, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 4, 80, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 256, 17, 17],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 92, 92],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 13, 13],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 256, 14, 14],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 256, 24, 24],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4789, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([128, 1024, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([1, 10, 192, 192],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 1, 128, 128],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 192, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 512, 18, 18],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 72, 72],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 224, 224],"float32"), )
paddle.nn.functional.sigmoid(Tensor([102400, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 256, 23, 23],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 722, 2, 2],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2432, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 1, 40, 40],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 216, 216],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 3, 76, 76, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8400, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([49920, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 32, 56, 56],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 128, 128],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 200, 200],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 128, 80, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 256, 44, 44],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 152, 152],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12096, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 120, 120],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4410, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 64, 92, 92],"float32"), )
paddle.nn.functional.sigmoid(Tensor([9216, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 256, 48, 48],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 272, 320],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 96, 96],"float32"), )
paddle.nn.functional.sigmoid(Tensor([11520, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12480, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 9, 128, 128],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 11, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([19125, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 10, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 1, 68, 68],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 4, 64, 64],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 32, 32],"float32"), )
paddle.nn.functional.sigmoid(Tensor([24565, 1],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 18, 3, 3],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 1, 18, 18],"float32"), )
paddle.nn.functional.sigmoid(Tensor([154, 384, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([8, 1, 42, 42],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 76, 76],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 1, 56, 56],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 4, 52, 52],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 44, 44],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 11, 88, 88],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 56, 56],"float32"), )
paddle.nn.functional.sigmoid(Tensor([154, 192, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([2, 3, 60, 60, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([154, 256, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([4, 4, 68, 68],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([100, 38, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 1, 96, 96],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 38, 38],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 11, 44, 44],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12800, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 26, 26],"float32"), )
paddle.nn.functional.sigmoid(Tensor([20736, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 4, 84, 84],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 504, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([4, 4, 76, 76],"float32"), )
paddle.nn.functional.sigmoid(Tensor([6, 18, 25, 25],"float32"), )
paddle.nn.functional.sigmoid(Tensor([14112, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 4, 92, 92],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 512, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([4, 5, 10, 10, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16660, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 228, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([8, 1, 80, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([32, 501, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 11, 64, 64],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 68, 68],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 1, 88, 88],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 44, 44],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 1, 50, 50],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 4, 26, 26],"float32"), )
paddle.nn.functional.sigmoid(Tensor([32, 512, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([616, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 11, 26, 26],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 3, 64, 64, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 46, 46],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([227, 9, 5],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 4, 10, 17, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 10, 64, 64],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 4, 80, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 10, 48, 48],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 11, 44, 44],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 8, 8, 8, 8],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 1, 88, 88],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 1, 64, 64],"float32"), )
paddle.nn.functional.sigmoid(Tensor([128, 480, 1, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 4, 21, 21],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 1, 76, 76],"float32"), )
paddle.nn.functional.sigmoid(Tensor([57600, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 1, 72, 72],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 972, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([880, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 3, 40, 40, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([73984, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 11, 32, 32],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10368, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 1, 36, 36],"float32"), )
paddle.nn.functional.sigmoid(Tensor([15488, 1],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 22, 22],"float32"), )
paddle.nn.functional.silu(Tensor([1100, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([7, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([1, 310, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([2, 256, 20, 20],"float32"), )
paddle.nn.functional.silu(Tensor([2, 256, 30, 30],"float32"), )
paddle.nn.functional.silu(Tensor([4, 128, 40, 40],"float32"), )
paddle.nn.functional.silu(Tensor([9, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([1, 384, 23, 23],"float32"), )
paddle.nn.functional.silu(Tensor([11, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([8000, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 128, 48, 48],"float32"), )
paddle.nn.functional.silu(Tensor([1, 256, 23, 23],"float32"), )
paddle.nn.functional.silu(Tensor([2, 256, 17, 17],"float32"), )
paddle.nn.functional.silu(Tensor([1300, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([6, 5, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([7999, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([2, 10, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([20, 1, 13696],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 36, 36],"float32"), )
paddle.nn.functional.silu(Tensor([2, 6, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([256, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([650, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([10, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([1024, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 257, 2730],"float32"), None, )
paddle.nn.functional.silu(Tensor([4, 256, 16, 16],"float32"), )
paddle.nn.functional.silu(Tensor([2, 5, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([4, 512, 20, 20],"float32"), )
paddle.nn.functional.silu(Tensor([8, 256, 20, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 512, 20, 20],"float32"), )
paddle.nn.functional.silu(Tensor([2, 512, 20, 20],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 40, 40],"float32"), )
paddle.nn.functional.silu(Tensor([1, 384, 46, 46],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 18, 18],"float32"), )
paddle.nn.functional.silu(Tensor([39992, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([12, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([4, 128, 20, 20],"float32"), )
paddle.nn.functional.silu(Tensor([2, 257, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([58, 1, 13696],"float32"), )
paddle.nn.functional.silu(Tensor([1, 256, 46, 46],"float32"), )
paddle.nn.functional.silu(Tensor([8, 256, 17, 17],"float32"), )
paddle.nn.functional.silu(Tensor([2, 256, 15, 15],"float32"), )
paddle.nn.functional.silu(Tensor([8, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([2, 384, 20, 20],"float32"), )
paddle.nn.functional.silu(Tensor([2, 256, 40, 40],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 44, 44],"float32"), )
paddle.nn.functional.silu(Tensor([4, 5, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([544, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([2, 256, 34, 34],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 46, 46],"float32"), )
paddle.nn.functional.silu(Tensor([6, 1, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([13, 7, 202],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 23, 23],"float32"), )
paddle.nn.functional.silu(Tensor([100, 100],"float32"), )
paddle.nn.functional.silu(Tensor([1000, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([89, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 1, 13696],"float32"), )
paddle.nn.functional.silu(Tensor([1, 1, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([32, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 128, 24, 24],"float32"), )
paddle.nn.functional.silu(Tensor([14336],"float32"), )
paddle.nn.functional.silu(Tensor([25, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([5, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([2, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([992, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([3, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([128, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([4, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([4, 1, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([64, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([2, 1, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([2048, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([52, 7, 202],"float32"), )
paddle.nn.functional.silu(Tensor([6, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([50, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([8, 128],"float64"), )
paddle.nn.functional.silu(Tensor([14, 64, 7],"float32"), )
paddle.nn.functional.silu(Tensor([256, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([13, 7, 37],"float32"), )
paddle.nn.functional.silu(Tensor([1, 11, 512],"float32"), )
paddle.nn.functional.silu(Tensor([13, 9, 37],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([1914, 50],"float32"), Tensor([1914, 50],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([7, 50000],"float32"), Tensor([7, 50000],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 8],"float32"), Tensor([64, 187, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1402, 4],"float32"), Tensor([1402, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2618, 4],"float32"), Tensor([2618, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2353, 4],"float32"), Tensor([2353, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1523, 4],"float32"), Tensor([1523, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1569, 4],"float32"), Tensor([1569, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 129, 8],"float32"), Tensor([8, 129, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1387, 4],"float32"), Tensor([1387, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 179, 8],"float32"), Tensor([8, 179, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1989, 4],"float32"), Tensor([1989, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 108, 8],"float32"), Tensor([8, 108, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1876, 4],"float32"), Tensor([1876, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1817, 4],"float32"), Tensor([1817, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 192, 8],"float32"), Tensor([8, 192, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 157, 8],"float32"), Tensor([8, 157, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 132, 8],"float32"), Tensor([8, 132, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1482, 4],"float32"), Tensor([1482, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1266, 4],"float32"), Tensor([1266, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1853, 4],"float32"), Tensor([1853, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 139, 8],"float32"), Tensor([8, 139, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2253, 4],"float32"), Tensor([2253, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 187, 8],"float32"), Tensor([8, 187, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1346, 4],"float32"), Tensor([1346, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1385, 4],"float32"), Tensor([1385, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 130, 8],"float32"), Tensor([8, 130, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1652, 4],"float32"), Tensor([1652, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 178, 8],"float32"), Tensor([8, 178, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1894, 4],"float32"), Tensor([1894, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 168, 8],"float32"), Tensor([8, 168, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1413, 4],"float32"), Tensor([1413, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1640, 4],"float32"), Tensor([1640, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1713, 4],"float32"), Tensor([1713, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1572, 4],"float32"), Tensor([1572, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1820, 4],"float32"), Tensor([1820, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 162, 8],"float32"), Tensor([8, 162, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 8],"float32"), Tensor([8, 105, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 121, 8],"float32"), Tensor([8, 121, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 96, 8],"float32"), Tensor([8, 96, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 169, 8],"float32"), Tensor([8, 169, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2162, 4],"float32"), Tensor([2162, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 110, 8],"float32"), Tensor([8, 110, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1907, 4],"float32"), Tensor([1907, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 155, 8],"float32"), Tensor([8, 155, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 141, 8],"float32"), Tensor([8, 141, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 133, 8],"float32"), Tensor([8, 133, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 116, 8],"float32"), Tensor([8, 116, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1285, 4],"float32"), Tensor([1285, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1887, 4],"float32"), Tensor([1887, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2396, 4],"float32"), Tensor([2396, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1616, 4],"float32"), Tensor([1616, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2562, 4],"float32"), Tensor([2562, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1486, 4],"float32"), Tensor([1486, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1965, 4],"float32"), Tensor([1965, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1520, 4],"float32"), Tensor([1520, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1872, 4],"float32"), Tensor([1872, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1288, 4],"float32"), Tensor([1288, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1355, 4],"float32"), Tensor([1355, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1380, 4],"float32"), Tensor([1380, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 190, 8],"float32"), Tensor([8, 190, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1773, 4],"float32"), Tensor([1773, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 147, 8],"float32"), Tensor([8, 147, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2022, 4],"float32"), Tensor([2022, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1754, 4],"float32"), Tensor([1754, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1947, 4],"float32"), Tensor([1947, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 99, 8],"float32"), Tensor([8, 99, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2246, 4],"float32"), Tensor([2246, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 8],"float32"), Tensor([8, 103, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 161, 8],"float32"), Tensor([8, 161, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 189, 8],"float32"), Tensor([8, 189, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2021, 4],"float32"), Tensor([2021, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1630, 4],"float32"), Tensor([1630, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 143, 8],"float32"), Tensor([8, 143, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1580, 4],"float32"), Tensor([1580, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 180, 8],"float32"), Tensor([8, 180, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 136, 8],"float32"), Tensor([8, 136, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 131, 8],"float32"), Tensor([8, 131, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1600, 4],"float32"), Tensor([1600, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1469, 4],"float32"), Tensor([1469, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1992, 4],"float32"), Tensor([1992, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2252, 4],"float32"), Tensor([2252, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2279, 4],"float32"), Tensor([2279, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2077, 4],"float32"), Tensor([2077, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 164, 8],"float32"), Tensor([8, 164, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 126, 8],"float32"), Tensor([8, 126, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 175, 8],"float32"), Tensor([8, 175, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 200],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 117, 8],"float32"), Tensor([8, 117, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1403, 4],"float32"), Tensor([1403, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 109, 8],"float32"), Tensor([8, 109, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2347, 4],"float32"), Tensor([2347, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1410, 4],"float32"), Tensor([1410, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1471, 4],"float32"), Tensor([1471, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1832, 4],"float32"), Tensor([1832, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1866, 4],"float32"), Tensor([1866, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 160, 8],"float32"), Tensor([8, 160, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1718, 4],"float32"), Tensor([1718, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2178, 4],"float32"), Tensor([2178, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1796, 4],"float32"), Tensor([1796, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2215, 4],"float32"), Tensor([2215, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 165, 8],"float32"), Tensor([8, 165, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1568, 4],"float32"), Tensor([1568, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1884, 4],"float32"), Tensor([1884, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1748, 4],"float32"), Tensor([1748, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1555, 4],"float32"), Tensor([1555, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1631, 4],"float32"), Tensor([1631, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1498, 4],"float32"), Tensor([1498, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1455, 4],"float32"), Tensor([1455, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 122, 8],"float32"), Tensor([8, 122, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2005, 4],"float32"), Tensor([2005, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2262, 4],"float32"), Tensor([2262, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1739, 4],"float32"), Tensor([1739, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 193, 8],"float32"), Tensor([8, 193, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1655, 4],"float32"), Tensor([1655, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1588, 4],"float32"), Tensor([1588, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1861, 4],"float32"), Tensor([1861, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 124, 8],"float32"), Tensor([8, 124, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 140, 8],"float32"), Tensor([8, 140, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 200],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1560, 4],"float32"), Tensor([1560, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1938, 4],"float32"), Tensor([1938, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1712, 4],"float32"), Tensor([1712, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1305, 4],"float32"), Tensor([1305, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1934, 4],"float32"), Tensor([1934, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1928, 4],"float32"), Tensor([1928, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1284, 4],"float32"), Tensor([1284, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 183, 8],"float32"), Tensor([8, 183, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1582, 4],"float32"), Tensor([1582, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1970, 4],"float32"), Tensor([1970, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 8],"float32"), Tensor([24, 158, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1320, 4],"float32"), Tensor([1320, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 145, 8],"float32"), Tensor([8, 145, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1374, 4],"float32"), Tensor([1374, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1289, 4],"float32"), Tensor([1289, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 159, 8],"float32"), Tensor([8, 159, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2343, 4],"float32"), Tensor([2343, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1926, 4],"float32"), Tensor([1926, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 115, 8],"float32"), Tensor([8, 115, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1946, 4],"float32"), Tensor([1946, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2187, 4],"float32"), Tensor([2187, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1472, 4],"float32"), Tensor([1472, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1473, 4],"float32"), Tensor([1473, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1324, 4],"float32"), Tensor([1324, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2059, 4],"float32"), Tensor([2059, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2346, 4],"float32"), Tensor([2346, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1645, 4],"float32"), Tensor([1645, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 195, 8],"float32"), Tensor([8, 195, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1681, 4],"float32"), Tensor([1681, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2330, 4],"float32"), Tensor([2330, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1310, 4],"float32"), Tensor([1310, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 134, 8],"float32"), Tensor([8, 134, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1290, 4],"float32"), Tensor([1290, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1696, 4],"float32"), Tensor([1696, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1664, 4],"float32"), Tensor([1664, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 196, 8],"float32"), Tensor([8, 196, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 152, 8],"float32"), Tensor([8, 152, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2288, 4],"float32"), Tensor([2288, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1921, 4],"float32"), Tensor([1921, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 151, 8],"float32"), Tensor([8, 151, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1700, 4],"float32"), Tensor([1700, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 95, 8],"float32"), Tensor([8, 95, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 127, 8],"float32"), Tensor([8, 127, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2219, 4],"float32"), Tensor([2219, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1558, 4],"float32"), Tensor([1558, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 120, 8],"float32"), Tensor([8, 120, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2286, 4],"float32"), Tensor([2286, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 177, 8],"float32"), Tensor([8, 177, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2429, 4],"float32"), Tensor([2429, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 185, 8],"float32"), Tensor([8, 185, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1609, 4],"float32"), Tensor([1609, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1280, 4],"float32"), Tensor([1280, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2046, 4],"float32"), Tensor([2046, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1762, 4],"float32"), Tensor([1762, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 128, 8],"float32"), Tensor([8, 128, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2354, 4],"float32"), Tensor([2354, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2025, 4],"float32"), Tensor([2025, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 149, 8],"float32"), Tensor([8, 149, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1625, 4],"float32"), Tensor([1625, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1321, 4],"float32"), Tensor([1321, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1802, 4],"float32"), Tensor([1802, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1553, 4],"float32"), Tensor([1553, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 154, 8],"float32"), Tensor([8, 154, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 199, 8],"float32"), Tensor([8, 199, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 171, 8],"float32"), Tensor([8, 171, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2129, 4],"float32"), Tensor([2129, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 174, 8],"float32"), Tensor([8, 174, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1791, 4],"float32"), Tensor([1791, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 113, 8],"float32"), Tensor([8, 113, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1864, 4],"float32"), Tensor([1864, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1511, 4],"float32"), Tensor([1511, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1286, 4],"float32"), Tensor([1286, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1595, 4],"float32"), Tensor([1595, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1782, 4],"float32"), Tensor([1782, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1647, 4],"float32"), Tensor([1647, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 85, 8],"float32"), Tensor([8, 85, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 158, 8],"float32"), Tensor([8, 158, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1342, 4],"float32"), Tensor([1342, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2507, 4],"float32"), Tensor([2507, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1729, 4],"float32"), Tensor([1729, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1850, 4],"float32"), Tensor([1850, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1345, 4],"float32"), Tensor([1345, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 82, 8],"float32"), Tensor([8, 82, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 200],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([200, 50],"float32"), Tensor([200, 50],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([1458, 4],"float32"), Tensor([1458, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1361, 4],"float32"), Tensor([1361, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 176, 8],"float32"), Tensor([8, 176, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1391, 4],"float32"), Tensor([1391, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1669, 4],"float32"), Tensor([1669, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2315, 4],"float32"), Tensor([2315, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1541, 4],"float32"), Tensor([1541, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1902, 4],"float32"), Tensor([1902, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1690, 4],"float32"), Tensor([1690, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 98, 8],"float32"), Tensor([8, 98, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1561, 4],"float32"), Tensor([1561, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 172, 8],"float32"), Tensor([8, 172, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1526, 4],"float32"), Tensor([1526, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1845, 4],"float32"), Tensor([1845, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 198, 8],"float32"), Tensor([8, 198, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1823, 4],"float32"), Tensor([1823, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 200],"float32"), Tensor([100, 200],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1649, 4],"float32"), Tensor([1649, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2365, 4],"float32"), Tensor([2365, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1659, 4],"float32"), Tensor([1659, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1919, 4],"float32"), Tensor([1919, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 194, 8],"float32"), Tensor([8, 194, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 150, 8],"float32"), Tensor([8, 150, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1495, 4],"float32"), Tensor([1495, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 142, 8],"float32"), Tensor([8, 142, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 173, 8],"float32"), Tensor([8, 173, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1766, 4],"float32"), Tensor([1766, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2102, 4],"float32"), Tensor([2102, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 138, 8],"float32"), Tensor([8, 138, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 166, 8],"float32"), Tensor([8, 166, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1369, 4],"float32"), Tensor([1369, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1818, 4],"float32"), Tensor([1818, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1719, 4],"float32"), Tensor([1719, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1490, 4],"float32"), Tensor([1490, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 148, 8],"float32"), Tensor([8, 148, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 119, 8],"float32"), Tensor([8, 119, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 112, 8],"float32"), Tensor([8, 112, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1265, 4],"float32"), Tensor([1265, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 111, 8],"float32"), Tensor([8, 111, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2214, 4],"float32"), Tensor([2214, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 186, 8],"float32"), Tensor([8, 186, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2425, 4],"float32"), Tensor([2425, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2865, 4],"float32"), Tensor([2865, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1775, 4],"float32"), Tensor([1775, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 8],"float32"), Tensor([8, 102, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1895, 4],"float32"), Tensor([1895, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1771, 4],"float32"), Tensor([1771, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 170, 8],"float32"), Tensor([8, 170, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1530, 4],"float32"), Tensor([1530, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1860, 4],"float32"), Tensor([1860, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 146, 8],"float32"), Tensor([8, 146, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1312, 4],"float32"), Tensor([1312, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 167, 8],"float32"), Tensor([8, 167, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 137, 8],"float32"), Tensor([8, 137, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1835, 4],"float32"), Tensor([1835, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1436, 4],"float32"), Tensor([1436, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1602, 4],"float32"), Tensor([1602, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1358, 4],"float32"), Tensor([1358, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1439, 4],"float32"), Tensor([1439, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 144, 8],"float32"), Tensor([8, 144, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1877, 4],"float32"), Tensor([1877, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 182, 8],"float32"), Tensor([8, 182, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2043, 4],"float32"), Tensor([2043, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1837, 4],"float32"), Tensor([1837, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 135, 8],"float32"), Tensor([8, 135, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 163, 8],"float32"), Tensor([8, 163, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1515, 4],"float32"), Tensor([1515, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1499, 4],"float32"), Tensor([1499, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2196, 4],"float32"), Tensor([2196, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1848, 4],"float32"), Tensor([1848, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1854, 4],"float32"), Tensor([1854, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 114, 8],"float32"), Tensor([8, 114, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1812, 4],"float32"), Tensor([1812, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2119, 4],"float32"), Tensor([2119, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 153, 8],"float32"), Tensor([8, 153, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1913, 4],"float32"), Tensor([1913, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1404, 4],"float32"), Tensor([1404, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1465, 4],"float32"), Tensor([1465, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 184, 8],"float32"), Tensor([8, 184, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 91, 8],"float32"), Tensor([8, 91, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2132, 4],"float32"), Tensor([2132, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2117, 4],"float32"), Tensor([2117, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1716, 4],"float32"), Tensor([1716, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1826, 4],"float32"), Tensor([1826, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 191, 8],"float32"), Tensor([8, 191, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1935, 4],"float32"), Tensor([1935, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2181, 4],"float32"), Tensor([2181, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 97, 8],"float32"), Tensor([8, 97, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1480, 4],"float32"), Tensor([1480, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1029, 4],"float32"), Tensor([1029, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([671, 4],"float32"), Tensor([671, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([164, 4],"float32"), Tensor([164, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1208, 4],"float32"), Tensor([1208, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1212, 4],"float32"), Tensor([1212, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([879, 4],"float32"), Tensor([879, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([230, 4],"float32"), Tensor([230, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1143, 4],"float32"), Tensor([1143, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([241, 4],"float32"), Tensor([241, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1107, 4],"float32"), Tensor([1107, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([320, 4],"float32"), Tensor([320, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([213, 4],"float32"), Tensor([213, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([658, 4],"float32"), Tensor([658, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([159, 4],"float32"), Tensor([159, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([309, 4],"float32"), Tensor([309, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([964, 4],"float32"), Tensor([964, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([434, 4],"float32"), Tensor([434, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([130, 4],"float32"), Tensor([130, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([966, 4],"float32"), Tensor([966, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1014, 4],"float32"), Tensor([1014, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1092, 4],"float32"), Tensor([1092, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([699, 4],"float32"), Tensor([699, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([297, 4],"float32"), Tensor([297, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 7],"float32"), Tensor([8, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1128, 4],"float32"), Tensor([1128, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([189, 4],"float32"), Tensor([189, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([129, 4],"float32"), Tensor([129, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1083, 4],"float32"), Tensor([1083, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([976, 4],"float32"), Tensor([976, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([967, 4],"float32"), Tensor([967, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([780, 4],"float32"), Tensor([780, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1052, 4],"float32"), Tensor([1052, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([147, 4],"float32"), Tensor([147, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1243, 4],"float32"), Tensor([1243, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1028, 4],"float32"), Tensor([1028, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([175, 4],"float32"), Tensor([175, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([681, 4],"float32"), Tensor([681, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1157, 4],"float32"), Tensor([1157, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1150, 4],"float32"), Tensor([1150, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([754, 4],"float32"), Tensor([754, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([186, 4],"float32"), Tensor([186, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([666, 4],"float32"), Tensor([666, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([150, 4],"float32"), Tensor([150, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1185, 4],"float32"), Tensor([1185, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1190, 4],"float32"), Tensor([1190, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([336, 4],"float32"), Tensor([336, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([146, 4],"float32"), Tensor([146, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([734, 4],"float32"), Tensor([734, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([125, 4],"float32"), Tensor([125, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([705, 4],"float32"), Tensor([705, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1172, 4],"float32"), Tensor([1172, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([995, 4],"float32"), Tensor([995, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([714, 4],"float32"), Tensor([714, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1025, 4],"float32"), Tensor([1025, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([948, 4],"float32"), Tensor([948, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1168, 4],"float32"), Tensor([1168, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1240, 4],"float32"), Tensor([1240, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([908, 4],"float32"), Tensor([908, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([242, 4],"float32"), Tensor([242, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([313, 4],"float32"), Tensor([313, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1155, 4],"float32"), Tensor([1155, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1196, 4],"float32"), Tensor([1196, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([598, 4],"float32"), Tensor([598, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1121, 4],"float32"), Tensor([1121, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1041, 4],"float32"), Tensor([1041, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1224, 4],"float32"), Tensor([1224, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1148, 4],"float32"), Tensor([1148, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([428, 4],"float32"), Tensor([428, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([167, 4],"float32"), Tensor([167, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([642, 4],"float32"), Tensor([642, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([626, 4],"float32"), Tensor([626, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1205, 4],"float32"), Tensor([1205, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1220, 4],"float32"), Tensor([1220, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([134, 4],"float32"), Tensor([134, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1124, 4],"float32"), Tensor([1124, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1154, 4],"float32"), Tensor([1154, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1244, 4],"float32"), Tensor([1244, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([133, 4],"float32"), Tensor([133, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([185, 4],"float32"), Tensor([185, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([750, 4],"float32"), Tensor([750, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([339, 4],"float32"), Tensor([339, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1162, 4],"float32"), Tensor([1162, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1149, 4],"float32"), Tensor([1149, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([841, 4],"float32"), Tensor([841, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([403, 4],"float32"), Tensor([403, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1137, 4],"float32"), Tensor([1137, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([298, 4],"float32"), Tensor([298, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1099, 4],"float32"), Tensor([1099, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([228, 4],"float32"), Tensor([228, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([990, 4],"float32"), Tensor([990, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([829, 4],"float32"), Tensor([829, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1556],"float32"), Tensor([1556],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([558, 4],"float32"), Tensor([558, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([216, 4],"float32"), Tensor([216, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([845, 4],"float32"), Tensor([845, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([532, 4],"float32"), Tensor([532, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1156, 4],"float32"), Tensor([1156, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1064, 4],"float32"), Tensor([1064, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([518, 4],"float32"), Tensor([518, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([252, 4],"float32"), Tensor([252, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([787, 4],"float32"), Tensor([787, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([569, 4],"float32"), Tensor([569, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([946, 4],"float32"), Tensor([946, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1110, 4],"float32"), Tensor([1110, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1024, 4],"float32"), Tensor([1024, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1111, 4],"float32"), Tensor([1111, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([172, 4],"float32"), Tensor([172, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([201, 4],"float32"), Tensor([201, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1049, 4],"float32"), Tensor([1049, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1071, 4],"float32"), Tensor([1071, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1033, 4],"float32"), Tensor([1033, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([941, 4],"float32"), Tensor([941, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2160],"float32"), Tensor([2160],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1114, 4],"float32"), Tensor([1114, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([719, 4],"float32"), Tensor([719, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1060, 4],"float32"), Tensor([1060, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([712, 4],"float32"), Tensor([712, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1084, 4],"float32"), Tensor([1084, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([165, 4],"float32"), Tensor([165, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.softmax(Tensor([30, 8, 42, 13],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 99, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([200, 8, 14, 14],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 85, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 70, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 38, 145],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 128, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 199, 199],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 90, 90],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 111, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 83, 83],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 46, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 82, 81],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 159, 159],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 64, 45],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 41, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 41, 33],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 34, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 39, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([168, 8, 17, 24],"float32"), )
paddle.nn.functional.softmax(Tensor([30, 8, 68, 29],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([272, 8, 14, 14],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 8, 99, 61],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 150, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 39, 181],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 116, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 95, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4096, 64],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 70, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 107, 45],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 68, 81],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 60, 73],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 76, 76],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 133, 133],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 51, 37],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 100, 100],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 96, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 127, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 93, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 47, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 59, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([112, 8, 26, 26],"float32"), )
paddle.nn.functional.softmax(Tensor([7, 8, 42, 49],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 101, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([80, 8, 35, 35],"float32"), )
paddle.nn.functional.softmax(Tensor([9, 8, 16, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 144, 144],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 116, 169],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 108, 81],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([184, 8, 19, 22],"float32"), )
paddle.nn.functional.softmax(Tensor([9, 8, 49, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 62, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 99, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 90, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 36, 73],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 93, 93],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 88, 45],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 100, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 97, 81],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 88, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 128, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 80, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 110, 110],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 56, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 1, 304, 304],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([96, 8, 41, 16],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 8, 137, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 38, 41],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 117, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 70, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 123, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 71, 49],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([104, 8, 30, 37],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 22, 73],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 93, 49],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([56, 16, 24, 24],"float32"), )
paddle.nn.functional.softmax(Tensor([6, 8, 150, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 58, 29],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([848, 16, 6, 6],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 145, 181],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 123, 169],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([72, 8, 37, 37],"float32"), )
paddle.nn.functional.softmax(Tensor([424, 16, 9, 12],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 128, 128],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([464, 16, 11, 3],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 68, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 134, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([30, 8, 48, 17],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 52, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 64, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([200, 8, 20, 20],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 19, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 95, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([12544, 8],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([8, 8, 108, 108],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 102, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 107, 85],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([30, 8, 21, 21],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 97, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 130, 130],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 158, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 72, 72],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 35, 41],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 55, 161],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 128, 81],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 65, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([200, 8, 18, 18],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 74, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 42, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 65, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 32000],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 43, 49],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 131, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 41, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 49, 29],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 70, 70],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 161, 161],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([80, 8, 20, 20],"float32"), )
paddle.nn.functional.softmax(Tensor([12800, 8],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([192, 8, 18, 21],"float32"), )
paddle.nn.functional.softmax(Tensor([8, 8, 111, 111],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 53, 29],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 109, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 34, 169],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 123, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 59, 59],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([32, 8, 43, 43],"float32"), )
paddle.nn.functional.softmax(Tensor([136, 8, 28, 28],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 84, 181],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 79, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 47, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 99, 81],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 63, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([128, 8, 23, 31],"float32"), )
paddle.nn.functional.softmax(Tensor([7, 8, 72, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 103, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 39, 49],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 48, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 97, 145],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 45, 181],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([51840, 8],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([6, 8, 155, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 56, 81],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 114, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 130, 81],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 49, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 132, 169],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 87, 161],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 47, 41],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 40, 40],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 46, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 143, 143],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 69, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 168, 168],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 48, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 113, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([48, 8, 83, 25],"float32"), )
paddle.nn.functional.softmax(Tensor([8, 8, 116, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([30, 8, 57, 21],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 141, 141],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 62, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 57, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 152, 152],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([48, 8, 64, 36],"float32"), )
paddle.nn.functional.softmax(Tensor([6, 8, 92, 45],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 82, 49],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 55, 73],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 38, 49],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 33, 73],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 115, 115],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([56, 8, 45, 45],"float32"), )
paddle.nn.functional.softmax(Tensor([256, 8, 16, 12],"float32"), )
paddle.nn.functional.softmax(Tensor([120, 8, 31, 31],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 61, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([45600, 8],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([5, 8, 56, 56],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 105, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 67, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 102, 53],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 93, 93],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([64, 8, 20, 20],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 94, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([144, 8, 22, 27],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 8, 109, 109],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 130, 161],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 52, 61],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 95, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 146, 146],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 65, 169],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 70, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 139, 85],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 56, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 60, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([512, 8, 8, 8],"float32"), )
paddle.nn.functional.softmax(Tensor([9, 8, 27, 53],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 143, 143],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 113, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 114, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 92, 92],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 66, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 57, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 135, 161],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([360, 16, 11, 14],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 188, 188],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 79, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 115, 85],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([192, 8, 21, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 142, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 57, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 116, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([336, 16, 13, 13],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 109, 109],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([112, 8, 28, 28],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 8, 29, 29],"float32"), )
paddle.nn.functional.softmax(Tensor([30, 8, 81, 21],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 91, 61],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 84, 53],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 4725, 4, 10],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 32, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 150, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 41, 41],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 190, 181],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 105, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 124, 145],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 69, 61],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 193, 193],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 63, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([40, 8, 47, 47],"float32"), )
paddle.nn.functional.softmax(Tensor([5, 8, 102, 102],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 56, 37],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 84, 84],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 57, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 70, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 125, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([144, 8, 27, 23],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 8, 159, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 24, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 59, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 133, 161],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([320, 16, 12, 12],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 37, 41],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 88, 88],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([144, 8, 28, 20],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 8, 82, 61],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 59, 49],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 174, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 55, 41],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 102, 145],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 50, 53],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 68, 68],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 108, 108],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 97, 169],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 111, 111],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 89, 45],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 55, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 53, 49],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 101, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([464, 16, 11, 8],"float32"), )
paddle.nn.functional.softmax(Tensor([336, 8, 11, 11],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 4, 196, 196],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 153, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([184, 16, 13, 13],"float32"), )
paddle.nn.functional.softmax(Tensor([176, 8, 21, 21],"float32"), )
paddle.nn.functional.softmax(Tensor([392, 16, 13, 11],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 67, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 59, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 103, 103],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 61, 61],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 138, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 134, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 55, 49],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 62, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 85, 145],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 34, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 92, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([40, 8, 40, 40],"float32"), )
paddle.nn.functional.softmax(Tensor([136, 8, 30, 22],"float32"), )
paddle.nn.functional.softmax(Tensor([3, 8, 123, 123],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 65, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 93, 145],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 63, 63],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 64, 145],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([72, 8, 41, 41],"float32"), )
paddle.nn.functional.softmax(Tensor([160, 8, 23, 25],"float32"), )
paddle.nn.functional.softmax(Tensor([96, 12, 22, 22],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([272, 8, 15, 12],"float32"), )
paddle.nn.functional.softmax(Tensor([6, 8, 107, 107],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 91, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 140, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 12096, 4, 10],"float32"), )
paddle.nn.functional.softmax(Tensor([8, 8, 48, 48],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 173, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([72, 16, 28, 28],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 58, 33],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([256, 8, 16, 13],"float32"), )
paddle.nn.functional.softmax(Tensor([7, 8, 118, 118],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 68, 169],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([64, 8, 57, 33],"float32"), )
paddle.nn.functional.softmax(Tensor([8, 8, 92, 92],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([136, 8, 27, 29],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 81, 73],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([30, 8, 55, 17],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 37, 181],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 66, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 20, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 39, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 95, 53],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 44, 44],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([96, 8, 40, 29],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 187, 187],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([144, 8, 27, 22],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 86, 161],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 75, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 80, 80],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 91, 81],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 74, 73],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 90, 61],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 25, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 126, 145],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 20, 3, 1500],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 83, 145],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 135, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 103, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([240, 16, 7, 7],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 157, 181],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 83, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 55, 145],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([128, 8, 27, 27],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 191, 191],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 115, 53],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 126, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([136, 8, 30, 30],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 87, 87],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 67, 67],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 28, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([112, 16, 17, 17],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 8, 57, 61],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 111, 161],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 48, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 59, 169],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 66, 66],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 166, 166],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 115, 115],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 15, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 143, 181],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 74, 74],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 138, 169],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 8, 72, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 76, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 52, 53],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 202, 202],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 57, 81],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([160, 16, 17, 17],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 75, 85],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 77, 45],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 170, 181],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 109, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 85, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([88, 8, 17, 17],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 78, 85],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 114, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 99, 99],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([3, 8, 82, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 94, 94],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 4, 134, 134],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 94, 89],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 93, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 98, 98],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 70, 70],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([9, 8, 61, 53],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 64, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 140, 140],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 38, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 44, 44],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 29, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([160, 8, 22, 25],"float32"), )
paddle.nn.functional.softmax(Tensor([64, 8, 40, 40],"float32"), )
paddle.nn.functional.softmax(Tensor([30, 8, 56, 25],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 98, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 28, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 106, 145],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 81, 81],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 62, 73],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 8, 69, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([6, 8, 148, 57],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 42, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 50, 50],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 72, 72],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 51, 105],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 93, 161],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([64, 8, 24, 24],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 8, 157, 77],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([184, 8, 22, 20],"float32"), )
paddle.nn.functional.softmax(Tensor([240, 8, 13, 17],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 80, 161],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([136, 8, 30, 29],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 59, 33],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 108, 161],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([2, 8, 148, 121],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([144, 8, 25, 28],"float32"), )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([12, 1000],"float64"), label=Tensor([12, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 64],"float32"), Tensor([2, 16, 32, 1],"int64"), axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([12, 1000],"float32"), label=Tensor([12, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 64],"float32"), Tensor([2, 16, 32, 1],"int64"), axis=3, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 64],"float32"), Tensor([2, 16, 1, 64],"int64"), axis=2, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([6, 1000],"float32"), label=Tensor([6, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([16, 128],"float32"), label=Tensor([16, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([100, 10],"float32"), Tensor([100, 1],"int64"), )
paddle.nn.functional.softplus(Tensor([13, 1007, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([14, 7, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([13, 7, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([13, 3, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([13, 10, 64],"float32"), )
paddle.nn.functional.softsign(Tensor([32, 128],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float32"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 100],"float16"), Tensor([8, 100, 100],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 84, 84],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 48, 48],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 46, 46],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 42, 42],"float32"), )
paddle.nn.functional.swish(Tensor([4, 48, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([8, 96, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([1, 384, 46, 46],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 26, 26],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 96, 96],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 80, 80],"float32"), )
paddle.nn.functional.swish(Tensor([96, 60, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([8, 192, 19, 19],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([4, 256, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([1, 192, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 18, 18],"float32"), )
paddle.nn.functional.swish(Tensor([4, 48, 52, 52],"float32"), )
paddle.nn.functional.swish(Tensor([4, 48, 64, 64],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 92, 92],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 52, 52],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 38, 38],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([8, 512, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 17, 17],"float32"), )
paddle.nn.functional.swish(Tensor([4, 240, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([1, 384, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 23, 23],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([8, 288, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 56, 56],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([8, 576, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([1, 24, 160, 160],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([1, 384, 38, 38],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 26, 26],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([4, 128, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 18, 18],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 17, 17],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([1, 48, 80, 80],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([4, 256, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([4, 48, 68, 68],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 60, 60],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([2, 64, 88, 88],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([2, 128, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 68, 68],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 38, 38],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 19, 19],"float32"), )
paddle.nn.functional.swish(Tensor([1, 768, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 23, 23],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([8, 288, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([8, 288, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([4, 960, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([8, 288, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 72, 72],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 42, 42],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 26, 26],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([8, 512, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([1, 512, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 48, 48],"float32"), )
paddle.nn.functional.swish(Tensor([2, 24, 112, 112],"float32"), )
paddle.nn.functional.swish(Tensor([8, 96, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([2, 128, 60, 60],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([8, 96, 26, 26],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 48, 48],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 17, 17],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([2, 24, 120, 120],"float32"), )
paddle.nn.functional.swish(Tensor([64, 40, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 96, 46, 46],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 23, 23],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 19, 19],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 26, 26],"float32"), )
paddle.nn.functional.swish(Tensor([8, 48, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([1, 384, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 18, 18],"float32"), )
paddle.nn.functional.swish(Tensor([4, 48, 56, 56],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([8, 96, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([8, 576, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([8, 1024, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 23, 23],"float32"), )
paddle.nn.functional.swish(Tensor([8, 144, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 42, 42],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([4, 960, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 23, 23],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 19, 19],"float32"), )
paddle.nn.functional.swish(Tensor([4, 240, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([4, 240, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([8, 512, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 23, 23],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([8, 576, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([2, 128, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([2, 128, 48, 48],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 19, 19],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 17, 17],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 18, 18],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 17, 17],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([16, 384, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([4, 24, 80, 80],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 76, 76],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([64, 120, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 128, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 17, 17],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 13, 13],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 26, 26],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([2, 128, 56, 56],"float32"), )
paddle.nn.functional.swish(Tensor([2, 24, 88, 88],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([4, 1280, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([2, 24, 104, 104],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([96, 120, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 48, 68, 68],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 7, 7],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 384, 19, 19],"float32"), )
paddle.nn.functional.swish(Tensor([1, 192, 72, 72],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 46, 46],"float32"), )
paddle.nn.functional.swish(Tensor([2, 24, 128, 128],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 42, 42],"float32"), )
paddle.nn.functional.swish(Tensor([8, 256, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 19, 19],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([2, 24, 136, 136],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([128, 120, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([16, 384, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([128, 128, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 256, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([4, 48, 60, 60],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([4, 48, 72, 72],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 38, 38],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([1, 384, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 18, 18],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([64, 64, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 96, 64, 64],"float32"), )
paddle.nn.functional.swish(Tensor([8, 512, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([8, 96, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 17, 17],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 18, 18],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([8, 48, 48, 48],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([4, 48, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 26, 26],"float32"), )
paddle.nn.functional.swish(Tensor([2, 24, 80, 80],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 88, 88],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 23, 23],"float32"), )
paddle.nn.functional.swish(Tensor([4, 256, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([8, 144, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([1, 384, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 13, 13],"float32"), )
paddle.nn.functional.swish(Tensor([2, 24, 112, 112],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 96, 52, 52],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 72, 72],"float32"), )
paddle.nn.functional.swish(Tensor([1, 384, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([2, 16, 160, 160],"float32"), )
paddle.nn.functional.swish(Tensor([8, 512, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([4, 256, 26, 26],"float32"), )
paddle.nn.functional.swish(Tensor([2, 58, 56, 56],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 24, 88, 88],"float32"), )
paddle.nn.functional.swish(Tensor([2, 128, 52, 52],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 13, 13],"float32"), )
paddle.nn.functional.swish(Tensor([8, 256, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([1, 768, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([4, 1024, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 192, 48, 48],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 17, 17],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 38, 38],"float32"), )
paddle.nn.functional.swish(Tensor([1, 192, 68, 68],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 13, 13],"float32"), )
paddle.nn.functional.swish(Tensor([2, 116, 28, 28],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 48, 64, 64],"float32"), )
paddle.nn.functional.swish(Tensor([8, 96, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([8, 96, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([4, 120, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([8, 144, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([8, 288, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([8, 768, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([1, 768, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([1, 384, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([1, 384, 50, 50],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([8, 512, 13, 13],"float32"), )
paddle.nn.functional.swish(Tensor([1, 384, 48, 48],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 80, 80],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([8, 72, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([4, 24, 96, 96],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([1, 256, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 13, 13],"float32"), )
paddle.nn.functional.swish(Tensor([4, 240, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 60, 60],"float32"), )
paddle.nn.functional.swish(Tensor([4, 256, 24, 24],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 17, 17],"float32"), )
paddle.nn.functional.swish(Tensor([8, 96, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 56, 56],"float32"), )
paddle.nn.functional.swish(Tensor([4, 960, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([8, 48, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([2, 24, 144, 144],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 18, 18],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 18, 18],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 26, 26],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 18, 18],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 19, 19],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 18, 18],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 17, 17],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([16, 384, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([2, 64, 80, 80],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([8, 512, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 18, 18],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 13, 13],"float32"), )
paddle.nn.functional.swish(Tensor([2, 512, 17, 17],"float32"), )
paddle.nn.functional.swish(Tensor([2, 16, 176, 176],"float32"), )
paddle.nn.functional.swish(Tensor([4, 960, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([8, 96, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([8, 768, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([1, 96, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([2, 256, 32, 32],"float32"), )
paddle.nn.functional.swish(Tensor([2, 384, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 19, 19],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 13, 13],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 13, 13],"float32"), )
paddle.nn.functional.swish(Tensor([4, 48, 48, 48],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([1, 192, 64, 64],"float32"), )
paddle.nn.functional.swish(Tensor([96, 40, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([8, 192, 13, 13],"float32"), )
paddle.nn.functional.swish(Tensor([4, 512, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1024, 19, 19],"float32"), )
paddle.nn.functional.swish(Tensor([2, 24, 96, 96],"float32"), )
paddle.nn.functional.swish(Tensor([2, 768, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([1, 384, 42, 42],"float32"), )
paddle.nn.functional.swish(Tensor([1, 96, 80, 80],"float32"), )
paddle.nn.functional.swish(Tensor([4, 256, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([8, 40, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([1, 192, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([4, 40, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 384, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([4, 40, 512],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 58, 28, 28],"float32"), None, )
paddle.nn.functional.swish(Tensor([8, 64, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 192, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 15, 15],"float32"), )
paddle.nn.functional.swish(Tensor([8, 120, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 192, 16, 16],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 232, 7, 7],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 116, 14, 14],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 192, 13, 13],"float32"), )
paddle.nn.functional.swish(Tensor([4, 192, 10, 10],"float32"), )
paddle.nn.functional.swish(Tensor([4, 384, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 192, 12, 12],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([2, 232, 14, 14],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 128, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 384, 11, 11],"float32"), )
paddle.nn.functional.swish(Tensor([4, 120, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 8, 1, 1],"float32"), )
paddle.nn.functional.swish(Tensor([64, 28, 1, 1],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 28, 1, 1],"float32"), )
paddle.nn.functional.swish(Tensor([64, 26, 1, 1],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 48, 1, 1],"float32"), )
paddle.nn.functional.swish(Tensor([64, 80, 1, 1],"float32"), None, )
paddle.nn.functional.swish(Tensor([64, 132, 1, 1],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 20, 1, 1],"float32"), )
paddle.nn.functional.swish(Tensor([4, 48, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([64, 52, 1, 1],"float32"), None, )
paddle.nn.functional.swish(Tensor([64, 20, 1, 1],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 60, 1, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 10, 1, 1],"float32"), )
paddle.nn.functional.tanh(Tensor([1, 3, 256, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([16800, 48],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4830, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4096, 30],"float32"), None, )
paddle.nn.functional.tanh(Tensor([8192, 20],"float32"), )
paddle.nn.functional.tanh(Tensor([9801, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([8192, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2601, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([10000, 90],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2430, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([8490, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([512, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([8000, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([10201, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([3488, 30],"float32"), None, )
paddle.nn.functional.tanh(Tensor([9801, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4800, 48],"float32"), None, )
paddle.nn.functional.tanh(Tensor([9420, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([10240, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([9330, 90],"float32"), None, )
paddle.nn.functional.tanh(Tensor([9801, 20],"float32"), )
paddle.nn.functional.tanh(Tensor([1609, 20],"float32"), )
paddle.nn.functional.tanh(Tensor([2419, 30],"float32"), None, )
paddle.nn.functional.tanh(Tensor([32, 768],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1000, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1000, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1820, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1485, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([128, 768],"float32"), None, )
paddle.nn.functional.tanh(Tensor([600, 64],"float32"), None, )
paddle.nn.functional.tanh(Tensor([96, 1024],"float32"), None, )
paddle.nn.functional.tanh(Tensor([96, 768],"float32"), None, )
paddle.nn.functional.tanh(Tensor([64, 768],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1609, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([400, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1515, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1209, 30],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1168, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([64, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([64, 20],"float32"), )
paddle.nn.functional.tanh(Tensor([32, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([64, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([52, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([101, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([125, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([39, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([64, 64],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4, 1024],"float32"), None, )
paddle.nn.functional.tanh(Tensor([25, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([100, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([99, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([56, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([100, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([52, 36],"float32"), None, )
paddle.nn.functional.tanh(Tensor([28, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([400, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([36, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([400, 20],"float32"), )
paddle.nn.functional.tanh(Tensor([32, 64],"float32"), None, )
paddle.nn.functional.tanh(Tensor([52, 64],"float32"), None, )
paddle.nn.functional.tanh(Tensor([100, 64],"float32"), None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3, 3],"float64"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3, 3],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3, 3],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3, 3],"float64"), )
paddle.nn.functional.unfold(Tensor([10, 3, 64, 64],"float32"), 3, 1, tuple(1,1,), 1, )
paddle.nn.functional.unfold(Tensor([10, 3, 64, 64],"float32"), 3, 1, 1, tuple(1,1,), )
paddle.nn.functional.unfold(Tensor([10, 3, 64, 64],"float32"), 3, tuple(1,1,), 1, 1, )
paddle.nn.functional.unfold(Tensor([10, 3, 64, 64],"float32"), tuple(3,3,), tuple(1,1,), tuple(1,1,), tuple(1,1,), )
paddle.nn.functional.unfold(Tensor([10, 3, 64, 64],"float32"), 3, tuple(1,1,), tuple(1,1,), tuple(1,1,), )
paddle.nn.functional.unfold(Tensor([3, 3, 20, 20],"float64"), kernel_sizes=list[3,3,], strides=list[1,1,], paddings=list[1,1,1,1,], dilations=list[1,1,], name=None, )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int64"), list[1,2,3,4,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int64"), list[2,2,4,1,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"float64"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int64"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int64"), Tensor([4],"int32"), )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 224],"int64"), tuple(1,2,3,4,), )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([960],"float32"), list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nonzero(Tensor([201000],"bool"), )
paddle.nonzero(Tensor([282720],"bool"), )
paddle.nonzero(Tensor([377514],"bool"), )
paddle.nonzero(Tensor([951480],"bool"), )
paddle.nonzero(Tensor([244260],"bool"), )
paddle.nonzero(Tensor([193536],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([264978],"bool"), )
paddle.nonzero(Tensor([229140],"bool"), )
paddle.nonzero(Tensor([346086],"bool"), )
paddle.nonzero(Tensor([171120],"bool"), )
paddle.nonzero(Tensor([210240],"bool"), )
paddle.nonzero(Tensor([207360],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([859320],"bool"), )
paddle.nonzero(Tensor([281160],"bool"), )
paddle.nonzero(Tensor([332280],"bool"), )
paddle.nonzero(Tensor([310500],"bool"), )
paddle.nonzero(Tensor([300300],"bool"), )
paddle.nonzero(Tensor([193368],"bool"), )
paddle.nonzero(Tensor([161280],"bool"), )
paddle.nonzero(Tensor([270000],"bool"), )
paddle.nonzero(Tensor([319740],"bool"), )
paddle.nonzero(Tensor([364782],"bool"), )
paddle.nonzero(Tensor([100440],"bool"), )
paddle.nonzero(Tensor([349155],"bool"), )
paddle.nonzero(Tensor([161024],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([121600],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([183680],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([100500],"bool"), )
paddle.nonzero(Tensor([354240],"bool"), )
paddle.nonzero(Tensor([388740],"bool"), )
paddle.nonzero(Tensor([226800],"bool"), )
paddle.nonzero(Tensor([102400],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([322245],"bool"), )
paddle.nonzero(Tensor([238080],"bool"), )
paddle.nonzero(Tensor([184320],"bool"), )
paddle.nonzero(Tensor([241920],"bool"), )
paddle.nonzero(Tensor([320739],"bool"), )
paddle.nonzero(Tensor([184320],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([705960],"bool"), )
paddle.nonzero(Tensor([286464],"bool"), )
paddle.nonzero(Tensor([165888],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([292500],"bool"), )
paddle.nonzero(Tensor([851136],"bool"), )
paddle.nonzero(Tensor([356541],"bool"), )
paddle.nonzero(Tensor([172032],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([228000],"bool"), )
paddle.nonzero(Tensor([949440],"bool"), )
paddle.nonzero(Tensor([155904],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([207000],"bool"), )
paddle.nonzero(Tensor([184832],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([810288],"bool"), )
paddle.nonzero(Tensor([434826],"bool"), )
paddle.nonzero(Tensor([324000],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([129792],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([192960],"bool"), )
paddle.nonzero(Tensor([244800],"bool"), )
paddle.nonzero(Tensor([208692],"bool"), )
paddle.nonzero(Tensor([785664],"bool"), )
paddle.nonzero(Tensor([331452],"bool"), )
paddle.nonzero(Tensor([284400],"bool"), )
paddle.nonzero(Tensor([666132],"bool"), )
paddle.nonzero(Tensor([198912],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([314640],"bool"), )
paddle.nonzero(Tensor([136448],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([241560],"bool"), )
paddle.nonzero(Tensor([237000],"bool"), )
paddle.nonzero(Tensor([261120],"bool"), )
paddle.nonzero(Tensor([277380],"bool"), )
paddle.nonzero(Tensor([270096],"bool"), )
paddle.nonzero(Tensor([296400],"bool"), )
paddle.nonzero(Tensor([299250],"bool"), )
paddle.nonzero(Tensor([742764],"bool"), )
paddle.nonzero(Tensor([189696],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([231840],"bool"), )
paddle.nonzero(Tensor([310992],"bool"), )
paddle.nonzero(Tensor([158760],"bool"), )
paddle.nonzero(Tensor([189440],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([267030],"bool"), )
paddle.nonzero(Tensor([267840],"bool"), )
paddle.nonzero(Tensor([187200],"bool"), )
paddle.nonzero(Tensor([966924],"bool"), )
paddle.nonzero(Tensor([174720],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([241800],"bool"), )
paddle.nonzero(Tensor([226920],"bool"), )
paddle.nonzero(Tensor([423360],"bool"), )
paddle.nonzero(Tensor([245823],"bool"), )
paddle.nonzero(Tensor([272118],"bool"), )
paddle.nonzero(Tensor([392832],"bool"), )
paddle.nonzero(Tensor([367920],"bool"), )
paddle.nonzero(Tensor([911676],"bool"), )
paddle.nonzero(Tensor([290052],"bool"), )
paddle.nonzero(Tensor([226560],"bool"), )
paddle.nonzero(Tensor([193200],"bool"), )
paddle.nonzero(Tensor([272649],"bool"), )
paddle.nonzero(Tensor([257400],"bool"), )
paddle.nonzero(Tensor([753024],"bool"), )
paddle.nonzero(Tensor([322272],"bool"), )
paddle.nonzero(Tensor([188256],"bool"), )
paddle.nonzero(Tensor([289080],"bool"), )
paddle.nonzero(Tensor([281400],"bool"), )
paddle.nonzero(Tensor([273360],"bool"), )
paddle.nonzero(Tensor([856428],"bool"), )
paddle.nonzero(Tensor([176490],"bool"), )
paddle.nonzero(Tensor([236313],"bool"), )
paddle.nonzero(Tensor([979200],"bool"), )
paddle.nonzero(Tensor([205923],"bool"), )
paddle.nonzero(Tensor([180540],"bool"), )
paddle.nonzero(Tensor([180048],"bool"), )
paddle.nonzero(Tensor([317520],"bool"), )
paddle.nonzero(Tensor([156672],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([174240],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([369303],"bool"), )
paddle.nonzero(Tensor([213000],"bool"), )
paddle.nonzero(Tensor([253728],"bool"), )
paddle.nonzero(Tensor([720192],"bool"), )
paddle.nonzero(Tensor([335568],"bool"), )
paddle.nonzero(Tensor([333018],"bool"), )
paddle.nonzero(Tensor([219453],"bool"), )
paddle.nonzero(Tensor([212784],"bool"), )
paddle.nonzero(Tensor([895308],"bool"), )
paddle.nonzero(Tensor([222720],"bool"), )
paddle.nonzero(Tensor([289440],"bool"), )
paddle.nonzero(Tensor([330429],"bool"), )
paddle.nonzero(Tensor([332880],"bool"), )
paddle.nonzero(Tensor([354501],"bool"), )
paddle.nonzero(Tensor([147456],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([311535],"bool"), )
paddle.nonzero(Tensor([362880],"bool"), )
paddle.nonzero(Tensor([220992],"bool"), )
paddle.nonzero(Tensor([277200],"bool"), )
paddle.nonzero(Tensor([932976],"bool"), )
paddle.nonzero(Tensor([339150],"bool"), )
paddle.nonzero(Tensor([397467],"bool"), )
paddle.nonzero(Tensor([182400],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([496128],"bool"), )
paddle.nonzero(Tensor([293460],"bool"), )
paddle.nonzero(Tensor([250920],"bool"), )
paddle.nonzero(Tensor([110464],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([243474],"bool"), )
paddle.nonzero(Tensor([324000],"bool"), )
paddle.nonzero(Tensor([329205],"bool"), )
paddle.nonzero(Tensor([368280],"bool"), )
paddle.nonzero(Tensor([797940],"bool"), )
paddle.nonzero(Tensor([204672],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([264600],"bool"), )
paddle.nonzero(Tensor([340176],"bool"), )
paddle.nonzero(Tensor([305520],"bool"), )
paddle.nonzero(Tensor([268560],"bool"), )
paddle.nonzero(Tensor([243360],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([276210],"bool"), )
paddle.nonzero(Tensor([126464],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([313038],"bool"), )
paddle.nonzero(Tensor([183000],"bool"), )
paddle.nonzero(Tensor([973896],"bool"), )
paddle.nonzero(Tensor([123904],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([257796],"bool"), )
paddle.nonzero(Tensor([210000],"bool"), )
paddle.nonzero(Tensor([252681],"bool"), )
paddle.nonzero(Tensor([236334],"bool"), )
paddle.nonzero(Tensor([275940],"bool"), )
paddle.nonzero(Tensor([369105],"bool"), )
paddle.nonzero(Tensor([217413],"bool"), )
paddle.nonzero(Tensor([297360],"bool"), )
paddle.nonzero(Tensor([246051],"bool"), )
paddle.nonzero(Tensor([227124],"bool"), )
paddle.nonzero(Tensor([300762],"bool"), )
paddle.nonzero(Tensor([908496],"bool"), )
paddle.nonzero(Tensor([252540],"bool"), )
paddle.nonzero(Tensor([249240],"bool"), )
paddle.nonzero(Tensor([234000],"bool"), )
paddle.nonzero(Tensor([248640],"bool"), )
paddle.nonzero(Tensor([367059],"bool"), )
paddle.nonzero(Tensor([258720],"bool"), )
paddle.nonzero(Tensor([282240],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([169728],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([164928],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([359100],"bool"), )
paddle.nonzero(Tensor([982080],"bool"), )
paddle.nonzero(Tensor([507456],"bool"), )
paddle.nonzero(Tensor([248616],"bool"), )
paddle.nonzero(Tensor([214107],"bool"), )
paddle.nonzero(Tensor([204800],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([103320],"bool"), )
paddle.nonzero(Tensor([230175],"bool"), )
paddle.nonzero(Tensor([317160],"bool"), )
paddle.nonzero(Tensor([271560],"bool"), )
paddle.nonzero(Tensor([920808],"bool"), )
paddle.nonzero(Tensor([207360],"bool"), )
paddle.nonzero(Tensor([175104],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([174080],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([307200],"bool"), )
paddle.nonzero(Tensor([337620],"bool"), )
paddle.nonzero(Tensor([105840],"bool"), )
paddle.nonzero(Tensor([191301],"bool"), )
paddle.nonzero(Tensor([379050],"bool"), )
paddle.nonzero(Tensor([253440],"bool"), )
paddle.nonzero(Tensor([192000],"bool"), )
paddle.nonzero(Tensor([223554],"bool"), )
paddle.nonzero(Tensor([324720],"bool"), )
paddle.nonzero(Tensor([112500],"bool"), )
paddle.nonzero(Tensor([285660],"bool"), )
paddle.nonzero(Tensor([287280],"bool"), )
paddle.nonzero(Tensor([832788],"bool"), )
paddle.nonzero(Tensor([268569],"bool"), )
paddle.nonzero(Tensor([198720],"bool"), )
paddle.nonzero(Tensor([170240],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([214830],"bool"), )
paddle.nonzero(Tensor([350178],"bool"), )
paddle.nonzero(Tensor([184140],"bool"), )
paddle.nonzero(Tensor([413280],"bool"), )
paddle.nonzero(Tensor([241200],"bool"), )
paddle.nonzero(Tensor([293397],"bool"), )
paddle.nonzero(Tensor([945336],"bool"), )
paddle.nonzero(Tensor([197640],"bool"), )
paddle.nonzero(Tensor([185691],"bool"), )
paddle.nonzero(Tensor([291555],"bool"), )
paddle.nonzero(Tensor([194560],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([201600],"bool"), )
paddle.nonzero(Tensor([247086],"bool"), )
paddle.nonzero(Tensor([237870],"bool"), )
paddle.nonzero(Tensor([844152],"bool"), )
paddle.nonzero(Tensor([398487],"bool"), )
paddle.nonzero(Tensor([242991],"bool"), )
paddle.nonzero(Tensor([143370],"bool"), )
paddle.nonzero(Tensor([280320],"bool"), )
paddle.nonzero(Tensor([383040],"bool"), )
paddle.nonzero(Tensor([177408],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([225792],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([199680],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([638400],"bool"), )
paddle.nonzero(Tensor([115050],"bool"), )
paddle.nonzero(Tensor([155760],"bool"), )
paddle.nonzero(Tensor([337590],"bool"), )
paddle.nonzero(Tensor([883872],"bool"), )
paddle.nonzero(Tensor([328500],"bool"), )
paddle.nonzero(Tensor([225000],"bool"), )
paddle.nonzero(Tensor([139776],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([138120],"bool"), )
paddle.nonzero(Tensor([158580],"bool"), )
paddle.nonzero(Tensor([279720],"bool"), )
paddle.nonzero(Tensor([190440],"bool"), )
paddle.nonzero(Tensor([792996],"bool"), )
paddle.nonzero(Tensor([208320],"bool"), )
paddle.nonzero(Tensor([916608],"bool"), )
paddle.nonzero(Tensor([204624],"bool"), )
paddle.nonzero(Tensor([939216],"bool"), )
paddle.nonzero(Tensor([283500],"bool"), )
paddle.nonzero(Tensor([378540],"bool"), )
paddle.nonzero(Tensor([823692],"bool"), )
paddle.nonzero(Tensor([429660],"bool"), )
paddle.nonzero(Tensor([386694],"bool"), )
paddle.nonzero(Tensor([321759],"bool"), )
paddle.nonzero(Tensor([212400],"bool"), )
paddle.nonzero(Tensor([328320],"bool"), )
paddle.nonzero(Tensor([217689],"bool"), )
paddle.nonzero(Tensor([312324],"bool"), )
paddle.nonzero(Tensor([256680],"bool"), )
paddle.nonzero(Tensor([306900],"bool"), )
paddle.nonzero(Tensor([307440],"bool"), )
paddle.nonzero(Tensor([946464],"bool"), )
paddle.nonzero(Tensor([119040],"bool"), )
paddle.nonzero(Tensor([217080],"bool"), )
paddle.nonzero(Tensor([229965],"bool"), )
paddle.nonzero(Tensor([301500],"bool"), )
paddle.nonzero(Tensor([184920],"bool"), )
paddle.nonzero(Tensor([141056],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([273600],"bool"), )
paddle.nonzero(Tensor([455838],"bool"), )
paddle.nonzero(Tensor([278562],"bool"), )
paddle.nonzero(Tensor([219480],"bool"), )
paddle.nonzero(Tensor([337500],"bool"), )
paddle.nonzero(Tensor([451143],"bool"), )
paddle.nonzero(Tensor([261681],"bool"), )
paddle.nonzero(Tensor([315360],"bool"), )
paddle.nonzero(Tensor([761184],"bool"), )
paddle.nonzero(Tensor([239382],"bool"), )
paddle.nonzero(Tensor([298080],"bool"), )
paddle.nonzero(Tensor([269040],"bool"), )
paddle.nonzero(Tensor([153450],"bool"), )
paddle.nonzero(Tensor([223560],"bool"), )
paddle.nonzero(Tensor([253260],"bool"), )
paddle.nonzero(Tensor([264960],"bool"), )
paddle.nonzero(Tensor([220968],"bool"), )
paddle.nonzero(Tensor([176880],"bool"), )
paddle.nonzero(Tensor([295647],"bool"), )
paddle.nonzero(Tensor([773472],"bool"), )
paddle.nonzero(Tensor([277539],"bool"), )
paddle.nonzero(Tensor([236880],"bool"), )
paddle.nonzero(Tensor([687552],"bool"), )
paddle.nonzero(Tensor([165376],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([213840],"bool"), )
paddle.nonzero(Tensor([319200],"bool"), )
paddle.nonzero(Tensor([230202],"bool"), )
paddle.nonzero(Tensor([352800],"bool"), )
paddle.nonzero(Tensor([333660],"bool"), )
paddle.nonzero(Tensor([883968],"bool"), )
paddle.nonzero(Tensor([211680],"bool"), )
paddle.nonzero(Tensor([100352],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([215040],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([220800],"bool"), )
paddle.nonzero(Tensor([306360],"bool"), )
paddle.nonzero(Tensor([941280],"bool"), )
paddle.nonzero(Tensor([241731],"bool"), )
paddle.nonzero(Tensor([260865],"bool"), )
paddle.nonzero(Tensor([209664],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([258420],"bool"), )
paddle.nonzero(Tensor([237360],"bool"), )
paddle.nonzero(Tensor([179968],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([265440],"bool"), )
paddle.nonzero(Tensor([198249],"bool"), )
paddle.nonzero(Tensor([195840],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([983292],"bool"), )
paddle.nonzero(Tensor([204960],"bool"), )
paddle.nonzero(Tensor([304368],"bool"), )
paddle.nonzero(Tensor([124032],"bool"), )
paddle.nonzero(Tensor([171888],"bool"), )
paddle.nonzero(Tensor([327360],"bool"), )
paddle.nonzero(Tensor([340686],"bool"), )
paddle.nonzero(Tensor([408177],"bool"), )
paddle.nonzero(Tensor([274500],"bool"), )
paddle.nonzero(Tensor([241221],"bool"), )
paddle.nonzero(Tensor([870756],"bool"), )
paddle.nonzero(Tensor([194176],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([301320],"bool"), )
paddle.nonzero(Tensor([349866],"bool"), )
paddle.nonzero(Tensor([378480],"bool"), )
paddle.nonzero(Tensor([221760],"bool"), )
paddle.nonzero(Tensor([250800],"bool"), )
paddle.nonzero(Tensor([988344],"bool"), )
paddle.nonzero(Tensor([120960],"bool"), )
paddle.nonzero(Tensor([204288],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([869652],"bool"), )
paddle.nonzero(Tensor([185220],"bool"), )
paddle.nonzero(Tensor([877812],"bool"), )
paddle.nonzero(Tensor([278256],"bool"), )
paddle.nonzero(Tensor([134784],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([346560],"bool"), )
paddle.nonzero(Tensor([246000],"bool"), )
paddle.nonzero(Tensor([136000],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([729564],"bool"), )
paddle.nonzero(Tensor([148740],"bool"), )
paddle.nonzero(Tensor([765204],"bool"), )
paddle.nonzero(Tensor([288000],"bool"), )
paddle.nonzero(Tensor([291840],"bool"), )
paddle.nonzero(Tensor([200022],"bool"), )
paddle.nonzero(Tensor([347760],"bool"), )
paddle.nonzero(Tensor([269340],"bool"), )
paddle.nonzero(Tensor([345618],"bool"), )
paddle.nonzero(Tensor([229455],"bool"), )
paddle.nonzero(Tensor([859392],"bool"), )
paddle.nonzero(Tensor([233244],"bool"), )
paddle.nonzero(Tensor([178560],"bool"), )
paddle.nonzero(Tensor([216000],"bool"), )
paddle.nonzero(Tensor([252000],"bool"), )
paddle.nonzero(Tensor([131328],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([187680],"bool"), )
paddle.nonzero(Tensor([182784],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([223020],"bool"), )
paddle.nonzero(Tensor([208197],"bool"), )
paddle.nonzero(Tensor([325113],"bool"), )
paddle.nonzero(Tensor([269355],"bool"), )
paddle.nonzero(Tensor([166533],"bool"), )
paddle.nonzero(Tensor([317580],"bool"), )
paddle.nonzero(Tensor([178432],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([134400],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([767340],"bool"), )
paddle.nonzero(Tensor([322560],"bool"), )
paddle.nonzero(Tensor([311040],"bool"), )
paddle.nonzero(Tensor([124800],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([964884],"bool"), )
paddle.nonzero(Tensor([262194],"bool"), )
paddle.nonzero(Tensor([245520],"bool"), )
paddle.nonzero(Tensor([234804],"bool"), )
paddle.nonzero(Tensor([225120],"bool"), )
paddle.nonzero(Tensor([190080],"bool"), )
paddle.nonzero(Tensor([229152],"bool"), )
paddle.nonzero(Tensor([301302],"bool"), )
paddle.nonzero(Tensor([110592],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([283905],"bool"), )
paddle.nonzero(Tensor([318780],"bool"), )
paddle.nonzero(Tensor([262428],"bool"), )
paddle.nonzero(Tensor([199485],"bool"), )
paddle.nonzero(Tensor([286977],"bool"), )
paddle.nonzero(Tensor([997620],"bool"), )
paddle.nonzero(Tensor([222012],"bool"), )
paddle.nonzero(Tensor([359613],"bool"), )
paddle.nonzero(Tensor([984204],"bool"), )
paddle.nonzero(Tensor([172800],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([296700],"bool"), )
paddle.nonzero(Tensor([894216],"bool"), )
paddle.nonzero(Tensor([214848],"bool"), )
paddle.nonzero(Tensor([313347],"bool"), )
paddle.nonzero(Tensor([279300],"bool"), )
paddle.nonzero(Tensor([150402],"bool"), )
paddle.nonzero(Tensor([378000],"bool"), )
paddle.nonzero(Tensor([343728],"bool"), )
paddle.nonzero(Tensor([375984],"bool"), )
paddle.nonzero(Tensor([309960],"bool"), )
paddle.nonzero(Tensor([255780],"bool"), )
paddle.nonzero(Tensor([675180],"bool"), )
paddle.not_equal(Tensor([2112],"int64"), Tensor([2112],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([4224],"int64"), Tensor([4224],"int64"), )
paddle.not_equal(Tensor([2944],"int64"), Tensor([2944],"int64"), )
paddle.numel(Tensor([1000, 784],"float32"), )
paddle.numel(Tensor([64, 50, 36],"float32"), )
paddle.numel(Tensor([64, 47, 36],"float32"), )
paddle.numel(Tensor([393216],"float32"), )
paddle.numel(Tensor([64, 51, 36],"float32"), )
paddle.numel(Tensor([64, 44, 36],"float32"), )
paddle.numel(Tensor([64, 48, 36],"float32"), )
paddle.numel(Tensor([50000, 2],"float32"), )
paddle.numel(Tensor([131072],"float32"), )
paddle.numel(Tensor([50000, 2, 3],"float64"), )
paddle.numel(Tensor([64, 54, 36],"float32"), )
paddle.numel(Tensor([64, 77, 36],"float32"), )
paddle.numel(Tensor([64, 46, 36],"float32"), )
paddle.numel(Tensor([524288],"float32"), )
paddle.numel(Tensor([100000, 4],"float64"), )
paddle.numel(Tensor([64, 52, 36],"float32"), )
paddle.numel(Tensor([64, 53, 36],"float32"), )
paddle.numel(Tensor([64, 38, 36],"float32"), )
paddle.numel(Tensor([16, 52, 27],"float32"), )
paddle.numel(Tensor([5000, 2],"float32"), )
paddle.numel(Tensor([4, 465, 27],"float32"), )
paddle.numel(Tensor([16, 77, 27],"float32"), )
paddle.numel(Tensor([36, 2304],"float32"), )
paddle.numel(Tensor([16, 35, 27],"float32"), )
paddle.numel(Tensor([16, 48, 27],"float32"), )
paddle.numel(Tensor([4, 180, 27],"float32"), )
paddle.numel(Tensor([4, 127, 27],"float32"), )
paddle.numel(Tensor([96, 96, 3, 3],"float32"), )
paddle.numel(Tensor([4, 166, 27],"float32"), )
paddle.numel(Tensor([64, 18, 36],"float32"), )
paddle.numel(Tensor([64, 40, 36],"float32"), )
paddle.numel(Tensor([16, 54, 27],"float32"), )
paddle.numel(Tensor([16, 32, 27],"float32"), )
paddle.numel(Tensor([384, 192, 1, 1],"float32"), )
paddle.numel(Tensor([64, 26, 36],"float32"), )
paddle.numel(Tensor([64, 42, 36],"float32"), )
paddle.numel(Tensor([16, 25, 27],"float32"), )
paddle.numel(Tensor([4, 99, 27],"float32"), )
paddle.numel(Tensor([192, 96, 1, 1],"float32"), )
paddle.numel(Tensor([4, 176, 27],"float32"), )
paddle.numel(Tensor([64, 41, 36],"float32"), )
paddle.numel(Tensor([64, 32, 36],"float32"), )
paddle.numel(Tensor([64, 35, 36],"float32"), )
paddle.numel(Tensor([16, 55, 27],"float32"), )
paddle.numel(Tensor([16, 39, 27],"float32"), )
paddle.numel(Tensor([4, 121, 27],"float32"), )
paddle.numel(Tensor([16, 26, 27],"float32"), )
paddle.numel(Tensor([16, 28, 27],"float32"), )
paddle.numel(Tensor([2, 1, 512, 4, 4],"float32"), )
paddle.numel(Tensor([4, 113, 27],"float32"), )
paddle.numel(Tensor([64, 16, 36],"float32"), )
paddle.numel(Tensor([16, 33, 27],"float32"), )
paddle.numel(Tensor([8, 54, 27],"float32"), )
paddle.numel(Tensor([64, 36, 36],"float32"), )
paddle.numel(Tensor([16, 34, 27],"float32"), )
paddle.numel(Tensor([64, 20, 36],"float32"), )
paddle.numel(Tensor([96, 192, 1, 1],"float32"), )
paddle.numel(Tensor([16, 45, 27],"float32"), )
paddle.numel(Tensor([64, 39, 36],"float32"), )
paddle.numel(Tensor([64, 24, 36],"float32"), )
paddle.numel(Tensor([16, 24, 27],"float32"), )
paddle.numel(Tensor([64, 43, 36],"float32"), )
paddle.numel(Tensor([64, 15, 36],"float32"), )
paddle.numel(Tensor([48, 48, 3, 3],"float32"), )
paddle.numel(Tensor([16, 29, 27],"float32"), )
paddle.numel(Tensor([4, 135, 27],"float32"), )
paddle.numel(Tensor([64, 37, 36],"float32"), )
paddle.numel(Tensor([4, 173, 27],"float32"), )
paddle.numel(Tensor([64, 34, 36],"float32"), )
paddle.numel(Tensor([64, 23, 36],"float32"), )
paddle.numel(Tensor([8, 48, 27],"float32"), )
paddle.numel(Tensor([4, 171, 27],"float32"), )
paddle.numel(Tensor([64, 14, 36],"float32"), )
paddle.numel(Tensor([8, 50, 27],"float32"), )
paddle.numel(Tensor([64, 22, 36],"float32"), )
paddle.numel(Tensor([64, 19, 36],"float32"), )
paddle.numel(Tensor([4, 95, 27],"float32"), )
paddle.numel(Tensor([64, 29, 36],"float32"), )
paddle.numel(Tensor([10000, 2, 3],"float32"), )
paddle.numel(Tensor([16, 37, 27],"float32"), )
paddle.numel(Tensor([64, 28, 36],"float32"), )
paddle.numel(Tensor([8, 47, 27],"float32"), )
paddle.numel(Tensor([38, 2560],"float32"), )
paddle.numel(Tensor([16, 30, 27],"float32"), )
paddle.numel(Tensor([64, 21, 36],"float32"), )
paddle.numel(Tensor([8, 52, 27],"float32"), )
paddle.numel(Tensor([10000, 2, 3],"float64"), )
paddle.numel(Tensor([96, 384, 1, 1],"float32"), )
paddle.numel(Tensor([4, 2, 1, 512, 4, 4],"float32"), )
paddle.numel(Tensor([16, 49, 27],"float32"), )
paddle.numel(Tensor([16, 40, 27],"float32"), )
paddle.numel(Tensor([4, 211, 27],"float32"), )
paddle.numel(Tensor([4, 174, 27],"float32"), )
paddle.numel(Tensor([4, 167, 27],"float32"), )
paddle.numel(Tensor([16, 27, 27],"float32"), )
paddle.numel(Tensor([4, 418, 27],"float32"), )
paddle.numel(Tensor([16, 50, 27],"float32"), )
paddle.numel(Tensor([384, 96, 1, 1],"float32"), )
paddle.numel(Tensor([10000],"float32"), )
paddle.numel(Tensor([64, 27, 36],"float32"), )
paddle.numel(Tensor([64, 30, 36],"float32"), )
paddle.numel(Tensor([4, 120, 27],"float32"), )
paddle.numel(Tensor([64, 25, 36],"float32"), )
paddle.numel(Tensor([4, 130, 27],"float32"), )
paddle.numel(Tensor([64, 17, 36],"float32"), )
paddle.numel(Tensor([16, 42, 27],"float32"), )
paddle.numel(Tensor([64, 33, 36],"float32"), )
paddle.numel(Tensor([4, 119, 27],"float32"), )
paddle.numel(Tensor([4, 163, 27],"float32"), )
paddle.numel(Tensor([4, 272, 27],"float32"), )
paddle.numel(Tensor([4, 98, 27],"float32"), )
paddle.numel(Tensor([16, 36, 27],"float32"), )
paddle.numel(Tensor([4, 333, 27],"float32"), )
paddle.numel(Tensor([4, 394, 27],"float32"), )
paddle.numel(Tensor([16, 31, 27],"float32"), )
paddle.numel(Tensor([16, 43, 27],"float32"), )
paddle.numel(Tensor([16, 38, 27],"float32"), )
paddle.numel(Tensor([9, 1280],"float32"), )
paddle.numel(Tensor([4, 97, 27],"float32"), )
paddle.numel(Tensor([64, 13, 36],"float32"), )
paddle.numel(Tensor([4, 525, 27],"float32"), )
paddle.numel(Tensor([4, 234, 27],"float32"), )
paddle.numel(Tensor([8, 53, 27],"float32"), )
paddle.numel(Tensor([64, 31, 36],"float32"), )
paddle.numel(Tensor([4, 45, 27],"float32"), )
paddle.numel(Tensor([8, 22, 27],"float32"), )
paddle.numel(Tensor([4, 19, 27],"float32"), )
paddle.numel(Tensor([4, 83, 27],"float32"), )
paddle.numel(Tensor([4, 43, 27],"float32"), )
paddle.numel(Tensor([4, 80, 27],"float32"), )
paddle.numel(Tensor([8, 45, 27],"float32"), )
paddle.numel(Tensor([8, 46, 27],"float32"), )
paddle.numel(Tensor([8, 27, 27],"float32"), )
paddle.numel(Tensor([64, 16, 1, 1],"float32"), )
paddle.numel(Tensor([4, 47, 27],"float32"), )
paddle.numel(Tensor([16, 13, 27],"float32"), )
paddle.numel(Tensor([16, 5, 27],"float32"), )
paddle.numel(Tensor([64, 44, 1],"float32"), )
paddle.numel(Tensor([4, 90, 27],"float32"), )
paddle.numel(Tensor([8, 5, 27],"float32"), )
paddle.numel(Tensor([4, 53, 27],"float32"), )
paddle.numel(Tensor([64, 16, 1],"float32"), )
paddle.numel(Tensor([8, 24, 27],"float32"), )
paddle.numel(Tensor([16, 17, 27],"float32"), )
paddle.numel(Tensor([4, 78, 27],"float32"), )
paddle.numel(Tensor([4, 77, 27],"float32"), )
paddle.numel(Tensor([192, 48, 1, 1],"float32"), )
paddle.numel(Tensor([64, 33, 1],"float32"), )
paddle.numel(Tensor([64, 34, 1],"float32"), )
paddle.numel(Tensor([8, 10, 27],"float32"), )
paddle.numel(Tensor([4, 23, 27],"float32"), )
paddle.numel(Tensor([8, 21, 27],"float32"), )
paddle.numel(Tensor([4, 25, 27],"float32"), )
paddle.numel(Tensor([64, 24, 1],"float32"), )
paddle.numel(Tensor([8, 7, 27],"float32"), )
paddle.numel(Tensor([2, 25, 36],"float32"), )
paddle.numel(Tensor([4, 37, 27],"float32"), )
paddle.numel(Tensor([8, 26, 27],"float32"), )
paddle.numel(Tensor([16, 15, 27],"float32"), )
paddle.numel(Tensor([64, 42, 1],"float32"), )
paddle.numel(Tensor([96, 64, 1, 1],"float32"), )
paddle.numel(Tensor([2, 30, 36],"float32"), )
paddle.numel(Tensor([24, 96, 1, 1],"float32"), )
paddle.numel(Tensor([4, 10, 27],"float32"), )
paddle.numel(Tensor([4, 62, 27],"float32"), )
paddle.numel(Tensor([4, 30, 27],"float32"), )
paddle.numel(Tensor([64, 48, 1],"float32"), )
paddle.numel(Tensor([8, 42, 27],"float32"), )
paddle.numel(Tensor([4, 272, 1],"float32"), )
paddle.numel(Tensor([8, 6, 27],"float32"), )
paddle.numel(Tensor([8, 31, 27],"float32"), )
paddle.numel(Tensor([8192],"float32"), )
paddle.numel(Tensor([4, 465, 1],"float32"), )
paddle.numel(Tensor([16, 16, 3, 3],"float32"), )
paddle.numel(Tensor([16, 96, 1],"float32"), )
paddle.numel(Tensor([16, 3, 36],"float32"), )
paddle.numel(Tensor([4, 15, 27],"float32"), )
paddle.numel(Tensor([4, 35, 27],"float32"), )
paddle.numel(Tensor([64, 50, 1],"float32"), )
paddle.numel(Tensor([4, 29, 27],"float32"), )
paddle.numel(Tensor([8, 33, 27],"float32"), )
paddle.numel(Tensor([8, 39, 27],"float32"), )
paddle.numel(Tensor([4, 89, 27],"float32"), )
paddle.numel(Tensor([1444],"float32"), )
paddle.numel(Tensor([2, 16, 36],"float32"), )
paddle.numel(Tensor([4, 50, 27],"float32"), )
paddle.numel(Tensor([64, 39, 1],"float32"), )
paddle.numel(Tensor([64, 18, 1],"float32"), )
paddle.numel(Tensor([48, 192, 1, 1],"float32"), )
paddle.numel(Tensor([64, 37, 1],"float32"), )
paddle.numel(Tensor([8, 17, 27],"float32"), )
paddle.numel(Tensor([64, 27, 1],"float32"), )
paddle.numel(Tensor([4, 27, 27],"float32"), )
paddle.numel(Tensor([64, 3, 7, 7],"float32"), )
paddle.numel(Tensor([16, 96, 2],"float32"), )
paddle.numel(Tensor([8, 23, 27],"float32"), )
paddle.numel(Tensor([13, 96, 1],"float32"), )
paddle.numel(Tensor([64, 25, 1],"float32"), )
paddle.numel(Tensor([64, 52, 1],"float32"), )
paddle.numel(Tensor([64, 47, 1],"float32"), )
paddle.numel(Tensor([64, 43, 1],"float32"), )
paddle.numel(Tensor([16, 14, 27],"float32"), )
paddle.numel(Tensor([8, 19, 27],"float32"), )
paddle.numel(Tensor([4, 17, 27],"float32"), )
paddle.numel(Tensor([64, 51, 1],"float32"), )
paddle.numel(Tensor([16, 6, 27],"float32"), )
paddle.numel(Tensor([4, 92, 27],"float32"), )
paddle.numel(Tensor([4, 16, 27],"float32"), )
paddle.numel(Tensor([16, 18, 27],"float32"), )
paddle.numel(Tensor([2, 21, 36],"float32"), )
paddle.numel(Tensor([64, 26, 1],"float32"), )
paddle.numel(Tensor([16, 11, 27],"float32"), )
paddle.numel(Tensor([4, 46, 27],"float32"), )
paddle.numel(Tensor([16, 2, 36],"float32"), )
paddle.numel(Tensor([8, 35, 27],"float32"), )
paddle.numel(Tensor([8, 37, 27],"float32"), )
paddle.numel(Tensor([2, 28, 36],"float32"), )
paddle.numel(Tensor([4, 56, 27],"float32"), )
paddle.numel(Tensor([16, 9, 27],"float32"), )
paddle.numel(Tensor([5000],"float64"), )
paddle.numel(Tensor([4, 28, 27],"float32"), )
paddle.numel(Tensor([2, 18, 36],"float32"), )
paddle.numel(Tensor([4, 58, 27],"float32"), )
paddle.numel(Tensor([64, 32, 1, 1],"float32"), )
paddle.numel(Tensor([48, 96, 1, 1],"float32"), )
paddle.numel(Tensor([64, 28, 1],"float32"), )
paddle.numel(Tensor([4, 73, 27],"float32"), )
paddle.numel(Tensor([4, 22, 27],"float32"), )
paddle.numel(Tensor([64, 20, 1],"float32"), )
paddle.numel(Tensor([64, 53, 1],"float32"), )
paddle.numel(Tensor([2, 14, 36],"float32"), )
paddle.numel(Tensor([64, 21, 1],"float32"), )
paddle.numel(Tensor([8, 9, 27],"float32"), )
paddle.numel(Tensor([4, 394, 1],"float32"), )
paddle.numel(Tensor([64, 41, 1],"float32"), )
paddle.numel(Tensor([16, 20, 27],"float32"), )
paddle.numel(Tensor([4, 48, 27],"float32"), )
paddle.numel(Tensor([64, 40, 1],"float32"), )
paddle.numel(Tensor([5000, 1],"float64"), )
paddle.numel(Tensor([4, 333, 1],"float32"), )
paddle.numel(Tensor([8, 18, 27],"float32"), )
paddle.numel(Tensor([8, 36, 27],"float32"), )
paddle.numel(Tensor([64, 46, 1],"float32"), )
paddle.numel(Tensor([8, 28, 27],"float32"), )
paddle.numel(Tensor([64, 30, 1],"float32"), )
paddle.numel(Tensor([64, 23, 1],"float32"), )
paddle.numel(Tensor([16, 256],"float32"), )
paddle.numel(Tensor([4, 40, 27],"float32"), )
paddle.numel(Tensor([16, 8, 27],"float32"), )
paddle.numel(Tensor([4, 39, 27],"float32"), )
paddle.numel(Tensor([4, 34, 27],"float32"), )
paddle.numel(Tensor([16, 12, 27],"float32"), )
paddle.numel(Tensor([8, 38, 27],"float32"), )
paddle.numel(Tensor([8, 15, 27],"float32"), )
paddle.numel(Tensor([2, 22, 36],"float32"), )
paddle.numel(Tensor([8, 16, 27],"float32"), )
paddle.numel(Tensor([4, 52, 27],"float32"), )
paddle.numel(Tensor([16, 256],"float64"), )
paddle.numel(Tensor([8, 8, 27],"float32"), )
paddle.numel(Tensor([8, 11, 27],"float32"), )
paddle.numel(Tensor([4, 41, 27],"float32"), )
paddle.numel(Tensor([4, 20, 27],"float32"), )
paddle.numel(Tensor([32, 32],"float32"), )
paddle.numel(Tensor([4, 24, 27],"float32"), )
paddle.numel(Tensor([64, 36, 1],"float32"), )
paddle.numel(Tensor([16, 5, 36],"float32"), )
paddle.numel(Tensor([4, 26, 27],"float32"), )
paddle.numel(Tensor([96, 24, 1, 1],"float32"), )
paddle.numel(Tensor([64, 38, 1],"float32"), )
paddle.numel(Tensor([16, 22, 27],"float32"), )
paddle.numel(Tensor([16, 10, 27],"float32"), )
paddle.numel(Tensor([8, 25, 27],"float32"), )
paddle.numel(Tensor([8, 29, 27],"float32"), )
paddle.numel(Tensor([64, 22, 1],"float32"), )
paddle.numel(Tensor([16, 21, 27],"float32"), )
paddle.numel(Tensor([64, 19, 1],"float32"), )
paddle.numel(Tensor([64, 54, 1],"float32"), )
paddle.numel(Tensor([8, 41, 27],"float32"), )
paddle.numel(Tensor([4, 525, 1],"float32"), )
paddle.numel(Tensor([1024],"float32"), )
paddle.numel(Tensor([2, 19, 36],"float32"), )
paddle.numel(Tensor([64, 29, 1],"float32"), )
paddle.numel(Tensor([8, 13, 27],"float32"), )
paddle.numel(Tensor([4, 418, 1],"float32"), )
paddle.numel(Tensor([16, 7, 27],"float32"), )
paddle.numel(Tensor([2, 15, 36],"float32"), )
paddle.numel(Tensor([16, 77, 1],"float32"), )
paddle.numel(Tensor([64, 31, 1],"float32"), )
paddle.numel(Tensor([8, 20, 27],"float32"), )
paddle.numel(Tensor([64, 77, 1],"float32"), )
paddle.numel(Tensor([4, 63, 27],"float32"), )
paddle.numel(Tensor([16, 16, 27],"float32"), )
paddle.numel(Tensor([64, 17, 1],"float32"), )
paddle.numel(Tensor([16, 19, 27],"float32"), )
paddle.numel(Tensor([64, 32, 1],"float32"), )
paddle.numel(Tensor([8, 43, 27],"float32"), )
paddle.numel(Tensor([8, 44, 27],"float32"), )
paddle.numel(Tensor([64, 35, 1],"float32"), )
paddle.numel(Tensor([8, 14, 27],"float32"), )
paddle.numel(Tensor([4, 36, 27],"float32"), )
paddle.numel(Tensor([4, 64, 27],"float32"), )
paddle.numel(Tensor([8, 12, 27],"float32"), )
paddle.numel(Tensor([4, 51, 27],"float32"), )
paddle.numel(Tensor([8, 40, 27],"float32"), )
paddle.numel(Tensor([2, 20, 36],"float32"), )
paddle.numel(Tensor([4, 65, 27],"float32"), )
paddle.numel(Tensor([1024],"bool"), )
paddle.numel(Tensor([8, 32, 27],"float32"), )
paddle.numel(Tensor([24, 64, 1, 1],"float32"), )
paddle.numel(Tensor([4, 33, 27],"float32"), )
paddle.numel(Tensor([4, 31, 27],"float32"), )
paddle.numel(Tensor([4, 12, 27],"float32"), )
paddle.numel(Tensor([16, 23, 27],"float32"), )
paddle.numel(Tensor([8, 34, 27],"float32"), )
paddle.numel(Tensor([8, 30, 27],"float32"), )
paddle.numel(Tensor([2, 23, 36],"float32"), )
paddle.numel(Tensor([24, 24, 3, 3],"float32"), )
paddle.ones_like(Tensor([65712, 4],"float32"), )
paddle.ones_like(Tensor([57285, 4],"float32"), )
paddle.ones_like(Tensor([76608, 4],"float32"), )
paddle.ones_like(Tensor([1, 243474],"int32"), )
paddle.ones_like(Tensor([1, 166533],"int32"), )
paddle.ones_like(Tensor([189312, 4],"float32"), )
paddle.ones_like(Tensor([62700, 4],"float32"), )
paddle.ones_like(Tensor([193536, 4],"float32"), )
paddle.ones_like(Tensor([53100, 4],"float32"), )
paddle.ones_like(Tensor([44928, 4],"float32"), )
paddle.ones_like(Tensor([69120, 4],"float32"), )
paddle.ones_like(Tensor([57960, 4],"float32"), )
paddle.ones_like(Tensor([68310, 4],"float32"), )
paddle.ones_like(Tensor([53250, 4],"float32"), )
paddle.ones_like(Tensor([161280, 4],"float32"), )
paddle.ones_like(Tensor([143616, 4],"float32"), )
paddle.ones_like(Tensor([2, 512, 512],"int64"), )
paddle.ones_like(Tensor([1, 202572],"int32"), )
paddle.ones_like(Tensor([1, 320739],"int32"), )
paddle.ones_like(Tensor([78750, 4],"float32"), )
paddle.ones_like(Tensor([76800, 4],"float32"), )
paddle.ones_like(Tensor([54720, 4],"float32"), )
paddle.ones_like(Tensor([42624, 4],"float32"), )
paddle.ones_like(Tensor([1, 245823],"int32"), )
paddle.ones_like(Tensor([222720, 4],"float32"), )
paddle.ones_like(Tensor([48300, 4],"float32"), )
paddle.ones_like(Tensor([33792, 4],"float32"), )
paddle.ones_like(Tensor([42780, 4],"float32"), )
paddle.ones_like(Tensor([25920, 4],"float32"), )
paddle.ones_like(Tensor([1, 283167],"int32"), )
paddle.ones_like(Tensor([240768, 4],"float32"), )
paddle.ones_like(Tensor([226176, 4],"float32"), )
paddle.ones_like(Tensor([1, 451143],"int32"), )
paddle.ones_like(Tensor([184320, 4],"float32"), )
paddle.ones_like(Tensor([1, 255780],"int32"), )
paddle.ones_like(Tensor([1, 333018],"int32"), )
paddle.ones_like(Tensor([1, 339150],"int32"), )
paddle.ones_like(Tensor([77025, 4],"float32"), )
paddle.ones_like(Tensor([45540, 4],"float32"), )
paddle.ones_like(Tensor([1, 200022],"int32"), )
paddle.ones_like(Tensor([46368, 4],"float32"), )
paddle.ones_like(Tensor([221952, 4],"float32"), )
paddle.ones_like(Tensor([1, 294624],"int32"), )
paddle.ones_like(Tensor([142848, 4],"float32"), )
paddle.ones_like(Tensor([73500, 4],"float32"), )
paddle.ones_like(Tensor([1, 253728],"int32"), )
paddle.ones_like(Tensor([1, 217413],"int32"), )
paddle.ones_like(Tensor([1, 378540],"int32"), )
paddle.ones_like(Tensor([1, 252195],"int32"), )
paddle.ones_like(Tensor([52416, 4],"float32"), )
paddle.ones_like(Tensor([64350, 4],"float32"), )
paddle.ones_like(Tensor([86940, 4],"float32"), )
paddle.ones_like(Tensor([1, 214830],"int32"), )
paddle.ones_like(Tensor([1, 330429],"int32"), )
paddle.ones_like(Tensor([72270, 4],"float32"), )
paddle.ones_like(Tensor([1, 346086],"int32"), )
paddle.ones_like(Tensor([71820, 4],"float32"), )
paddle.ones_like(Tensor([84420, 4],"float32"), )
paddle.ones_like(Tensor([76590, 4],"float32"), )
paddle.ones_like(Tensor([35904, 4],"float32"), )
paddle.ones_like(Tensor([1, 306900],"int32"), )
paddle.ones_like(Tensor([1, 171888],"int32"), )
paddle.ones_like(Tensor([172608, 4],"float32"), )
paddle.ones_like(Tensor([75840, 4],"float32"), )
paddle.ones_like(Tensor([112896, 4],"float32"), )
paddle.ones_like(Tensor([1, 278562],"int32"), )
paddle.ones_like(Tensor([1, 375984],"int32"), )
paddle.ones_like(Tensor([62310, 4],"float32"), )
paddle.ones_like(Tensor([54432, 4],"float32"), )
paddle.ones_like(Tensor([1, 329205],"int32"), )
paddle.ones_like(Tensor([72816, 4],"float32"), )
paddle.ones_like(Tensor([44250, 4],"float32"), )
paddle.ones_like(Tensor([60300, 4],"float32"), )
paddle.ones_like(Tensor([158400, 4],"float32"), )
paddle.ones_like(Tensor([46920, 4],"float32"), )
paddle.ones_like(Tensor([82656, 4],"float32"), )
paddle.ones_like(Tensor([81180, 4],"float32"), )
paddle.ones_like(Tensor([1, 398487],"int32"), )
paddle.ones_like(Tensor([52500, 4],"float32"), )
paddle.ones_like(Tensor([67392, 4],"float32"), )
paddle.ones_like(Tensor([35280, 4],"float32"), )
paddle.ones_like(Tensor([32256, 4],"float32"), )
paddle.ones_like(Tensor([43560, 4],"float32"), )
paddle.ones_like(Tensor([163200, 4],"float32"), )
paddle.ones_like(Tensor([66912, 4],"float32"), )
paddle.ones_like(Tensor([1, 191301],"int32"), )
paddle.ones_like(Tensor([69930, 4],"float32"), )
paddle.ones_like(Tensor([42000, 4],"float32"), )
paddle.ones_like(Tensor([1, 229455],"int32"), )
paddle.ones_like(Tensor([1, 283905],"int32"), )
paddle.ones_like(Tensor([71610, 4],"float32"), )
paddle.ones_like(Tensor([67260, 4],"float32"), )
paddle.ones_like(Tensor([69750, 4],"float32"), )
paddle.ones_like(Tensor([62208, 4],"float32"), )
paddle.ones_like(Tensor([1, 252681],"int32"), )
paddle.ones_like(Tensor([1, 279300],"int32"), )
paddle.ones_like(Tensor([1, 319200],"int32"), )
paddle.ones_like(Tensor([38400, 4],"float32"), )
paddle.ones_like(Tensor([218880, 4],"float32"), )
paddle.ones_like(Tensor([235200, 4],"float32"), )
paddle.ones_like(Tensor([1, 241731],"int32"), )
paddle.ones_like(Tensor([50250, 4],"float32"), )
paddle.ones_like(Tensor([53568, 4],"float32"), )
paddle.ones_like(Tensor([61440, 4],"float32"), )
paddle.ones_like(Tensor([170496, 4],"float32"), )
paddle.ones_like(Tensor([59040, 4],"float32"), )
paddle.ones_like(Tensor([1, 212784],"int32"), )
paddle.ones_like(Tensor([1, 105840],"int32"), )
paddle.ones_like(Tensor([221184, 4],"float32"), )
paddle.ones_like(Tensor([1, 185691],"int32"), )
paddle.ones_like(Tensor([49152, 4],"float32"), )
paddle.ones_like(Tensor([84375, 4],"float32"), )
paddle.ones_like(Tensor([1, 359100],"int32"), )
paddle.ones_like(Tensor([52920, 4],"float32"), )
paddle.ones_like(Tensor([213120, 4],"float32"), )
paddle.ones_like(Tensor([1, 237870],"int32"), )
paddle.ones_like(Tensor([202368, 4],"float32"), )
paddle.ones_like(Tensor([59250, 4],"float32"), )
paddle.ones_like(Tensor([1, 158580],"int32"), )
paddle.ones_like(Tensor([38640, 4],"float32"), )
paddle.ones_like(Tensor([60480, 4],"float32"), )
paddle.ones_like(Tensor([1, 291555],"int32"), )
paddle.ones_like(Tensor([65280, 4],"float32"), )
paddle.ones_like(Tensor([1, 249405],"int32"), )
paddle.ones_like(Tensor([227328, 4],"float32"), )
paddle.ones_like(Tensor([63360, 4],"float32"), )
paddle.ones_like(Tensor([57120, 4],"float32"), )
paddle.ones_like(Tensor([43056, 4],"float32"), )
paddle.ones_like(Tensor([70848, 4],"float32"), )
paddle.ones_like(Tensor([1, 208692],"int32"), )
paddle.ones_like(Tensor([73920, 4],"float32"), )
paddle.ones_like(Tensor([90060, 4],"float32"), )
paddle.ones_like(Tensor([55440, 4],"float32"), )
paddle.ones_like(Tensor([136896, 4],"float32"), )
paddle.ones_like(Tensor([44520, 4],"float32"), )
paddle.ones_like(Tensor([36432, 4],"float32"), )
paddle.ones_like(Tensor([48, 49, 49],"float32"), )
paddle.ones_like(Tensor([208896, 4],"float32"), )
paddle.ones_like(Tensor([69030, 4],"float32"), )
paddle.ones_like(Tensor([59520, 4],"float32"), )
paddle.ones_like(Tensor([74250, 4],"float32"), )
paddle.ones_like(Tensor([47424, 4],"float32"), )
paddle.ones_like(Tensor([46230, 4],"float32"), )
paddle.ones_like(Tensor([79695, 4],"float32"), )
paddle.ones_like(Tensor([244032, 4],"float32"), )
paddle.ones_like(Tensor([12, 144, 144],"float32"), )
paddle.ones_like(Tensor([1, 191835],"int32"), )
paddle.ones_like(Tensor([177408, 4],"float32"), )
paddle.ones_like(Tensor([1, 386694],"int32"), )
paddle.ones_like(Tensor([1, 270096],"int32"), )
paddle.ones_like(Tensor([68625, 4],"float32"), )
paddle.ones_like(Tensor([53136, 4],"float32"), )
paddle.ones_like(Tensor([248832, 4],"float32"), )
paddle.ones_like(Tensor([75330, 4],"float32"), )
paddle.ones_like(Tensor([1, 327360],"int32"), )
paddle.ones_like(Tensor([61500, 4],"float32"), )
paddle.ones_like(Tensor([1, 302832],"int32"), )
paddle.ones_like(Tensor([35328, 4],"float32"), )
paddle.ones_like(Tensor([48384, 4],"float32"), )
paddle.ones_like(Tensor([1, 429660],"int32"), )
paddle.ones_like(Tensor([60192, 4],"float32"), )
paddle.ones_like(Tensor([53280, 4],"float32"), )
paddle.ones_like(Tensor([1, 285444],"int32"), )
paddle.ones_like(Tensor([1, 272118],"int32"), )
paddle.ones_like(Tensor([94620, 4],"float32"), )
paddle.ones_like(Tensor([1, 261888],"int32"), )
paddle.ones_like(Tensor([71040, 4],"float32"), )
paddle.ones_like(Tensor([147456, 4],"float32"), )
paddle.ones_like(Tensor([85320, 4],"float32"), )
paddle.ones_like(Tensor([62016, 4],"float32"), )
paddle.ones_like(Tensor([56832, 4],"float32"), )
paddle.ones_like(Tensor([60750, 4],"float32"), )
paddle.ones_like(Tensor([58608, 4],"float32"), )
paddle.ones_like(Tensor([1, 349866],"int32"), )
paddle.ones_like(Tensor([1, 223827],"int32"), )
paddle.ones_like(Tensor([1, 322272],"int32"), )
paddle.ones_like(Tensor([51072, 4],"float32"), )
paddle.ones_like(Tensor([178560, 4],"float32"), )
paddle.ones_like(Tensor([43008, 4],"float32"), )
paddle.ones_like(Tensor([1, 241221],"int32"), )
paddle.ones_like(Tensor([57600, 4],"float32"), )
paddle.ones_like(Tensor([1, 367059],"int32"), )
paddle.ones_like(Tensor([54270, 4],"float32"), )
paddle.ones_like(Tensor([1, 138120],"int32"), )
paddle.ones_like(Tensor([1, 32, 128, 32],"float32"), )
paddle.ones_like(Tensor([139392, 4],"float32"), )
paddle.ones_like(Tensor([228096, 4],"float32"), )
paddle.ones_like(Tensor([64605, 4],"float32"), )
paddle.ones_like(Tensor([79380, 4],"float32"), )
paddle.ones_like(Tensor([214272, 4],"float32"), )
paddle.ones_like(Tensor([215424, 4],"float32"), )
paddle.ones_like(Tensor([48000, 4],"float32"), )
paddle.ones_like(Tensor([54750, 4],"float32"), )
paddle.ones_like(Tensor([66360, 4],"float32"), )
paddle.ones_like(Tensor([33264, 4],"float32"), )
paddle.ones_like(Tensor([74550, 4],"float32"), )
paddle.ones_like(Tensor([207360, 4],"float32"), )
paddle.ones_like(Tensor([55056, 4],"float32"), )
paddle.ones_like(Tensor([1, 317160],"int32"), )
paddle.ones_like(Tensor([55104, 4],"float32"), )
paddle.ones_like(Tensor([1, 220992],"int32"), )
paddle.ones_like(Tensor([135168, 4],"float32"), )
paddle.ones_like(Tensor([28800, 4],"float32"), )
paddle.ones_like(Tensor([47232, 4],"float32"), )
paddle.ones_like(Tensor([83070, 4],"float32"), )
paddle.ones_like(Tensor([1, 198249],"int32"), )
paddle.ones_like(Tensor([63135, 4],"float32"), )
paddle.ones_like(Tensor([1, 321759],"int32"), )
paddle.ones_like(Tensor([45936, 4],"float32"), )
paddle.ones_like(Tensor([1, 312324],"int32"), )
paddle.ones_like(Tensor([202176, 4],"float32"), )
paddle.ones_like(Tensor([40800, 4],"float32"), )
paddle.ones_like(Tensor([77490, 4],"float32"), )
paddle.ones_like(Tensor([1, 250656],"int32"), )
paddle.ones_like(Tensor([71415, 4],"float32"), )
paddle.ones_like(Tensor([37536, 4],"float32"), )
paddle.ones_like(Tensor([1, 230202],"int32"), )
paddle.ones_like(Tensor([58368, 4],"float32"), )
paddle.ones_like(Tensor([1, 180048],"int32"), )
paddle.ones_like(Tensor([1, 204624],"int32"), )
paddle.ones_like(Tensor([63000, 4],"float32"), )
paddle.ones_like(Tensor([39600, 4],"float32"), )
paddle.ones_like(Tensor([204288, 4],"float32"), )
paddle.ones_like(Tensor([70875, 4],"float32"), )
paddle.ones_like(Tensor([138240, 4],"float32"), )
paddle.ones_like(Tensor([1, 229965],"int32"), )
paddle.ones_like(Tensor([53460, 4],"float32"), )
paddle.ones_like(Tensor([1, 295647],"int32"), )
paddle.ones_like(Tensor([47610, 4],"float32"), )
paddle.ones_like(Tensor([1, 236313],"int32"), )
paddle.ones_like(Tensor([192000, 4],"float32"), )
paddle.ones_like(Tensor([1, 223554],"int32"), )
paddle.ones_like(Tensor([59220, 4],"float32"), )
paddle.ones_like(Tensor([172032, 4],"float32"), )
paddle.ones_like(Tensor([196992, 4],"float32"), )
paddle.ones_like(Tensor([147840, 4],"float32"), )
paddle.ones_like(Tensor([47616, 4],"float32"), )
paddle.ones_like(Tensor([58500, 4],"float32"), )
paddle.ones_like(Tensor([225792, 4],"float32"), )
paddle.ones_like(Tensor([41664, 4],"float32"), )
paddle.ones_like(Tensor([57240, 4],"float32"), )
paddle.ones_like(Tensor([168000, 4],"float32"), )
paddle.ones_like(Tensor([44064, 4],"float32"), )
paddle.ones_like(Tensor([75075, 4],"float32"), )
paddle.ones_like(Tensor([1, 331722],"int32"), )
paddle.ones_like(Tensor([67500, 4],"float32"), )
paddle.ones_like(Tensor([1, 293622],"int32"), )
paddle.ones_like(Tensor([33120, 4],"float32"), )
paddle.ones_like(Tensor([1, 322245],"int32"), )
paddle.ones_like(Tensor([1, 245520],"int32"), )
paddle.ones_like(Tensor([149760, 4],"float32"), )
paddle.ones_like(Tensor([67890, 4],"float32"), )
paddle.ones_like(Tensor([1, 260865],"int32"), )
paddle.ones_like(Tensor([37200, 4],"float32"), )
paddle.ones_like(Tensor([159744, 4],"float32"), )
paddle.ones_like(Tensor([1, 369303],"int32"), )
paddle.ones_like(Tensor([55296, 4],"float32"), )
paddle.ones_like(Tensor([56160, 4],"float32"), )
paddle.ones_like(Tensor([190464, 4],"float32"), )
paddle.ones_like(Tensor([215040, 4],"float32"), )
paddle.ones_like(Tensor([76260, 4],"float32"), )
paddle.ones_like(Tensor([1, 354501],"int32"), )
paddle.ones_like(Tensor([245760, 4],"float32"), )
paddle.ones_like(Tensor([1, 182391],"int32"), )
paddle.ones_like(Tensor([68544, 4],"float32"), )
paddle.ones_like(Tensor([1, 301302],"int32"), )
paddle.ones_like(Tensor([63315, 4],"float32"), )
paddle.ones_like(Tensor([1, 359613],"int32"), )
paddle.ones_like(Tensor([186624, 4],"float32"), )
paddle.ones_like(Tensor([201600, 4],"float32"), )
paddle.ones_like(Tensor([35712, 4],"float32"), )
paddle.ones_like(Tensor([1, 227919],"int32"), )
paddle.ones_like(Tensor([55200, 4],"float32"), )
paddle.ones_like(Tensor([81900, 4],"float32"), )
paddle.ones_like(Tensor([34560, 4],"float32"), )
paddle.ones_like(Tensor([41952, 4],"float32"), )
paddle.ones_like(Tensor([1, 278256],"int32"), )
paddle.ones_like(Tensor([59904, 4],"float32"), )
paddle.ones_like(Tensor([56544, 4],"float32"), )
paddle.ones_like(Tensor([1, 246051],"int32"), )
paddle.ones_like(Tensor([1, 190296],"int32"), )
paddle.ones_like(Tensor([1, 103320],"int32"), )
paddle.ones_like(Tensor([1, 331251],"int32"), )
paddle.ones_like(Tensor([1, 365211],"int32"), )
paddle.ones_like(Tensor([132480, 4],"float32"), )
paddle.ones_like(Tensor([1, 262428],"int32"), )
paddle.ones_like(Tensor([64320, 4],"float32"), )
paddle.ones_like(Tensor([61008, 4],"float32"), )
paddle.ones_like(Tensor([52224, 4],"float32"), )
paddle.ones_like(Tensor([156672, 4],"float32"), )
paddle.ones_like(Tensor([63648, 4],"float32"), )
paddle.ones_like(Tensor([1, 205923],"int32"), )
paddle.ones_like(Tensor([36864, 4],"float32"), )
paddle.ones_like(Tensor([56280, 4],"float32"), )
paddle.ones_like(Tensor([68040, 4],"float32"), )
paddle.ones_like(Tensor([46128, 4],"float32"), )
paddle.ones_like(Tensor([4, 392, 392],"float32"), )
paddle.ones_like(Tensor([1, 264978],"int32"), )
paddle.ones_like(Tensor([150144, 4],"float32"), )
paddle.ones_like(Tensor([43200, 4],"float32"), )
paddle.ones_like(Tensor([1, 247086],"int32"), )
paddle.ones_like(Tensor([1, 345618],"int32"), )
paddle.ones_like(Tensor([233472, 4],"float32"), )
paddle.ones_like(Tensor([57024, 4],"float32"), )
paddle.ones_like(Tensor([198912, 4],"float32"), )
paddle.ones_like(Tensor([1, 176490],"int32"), )
paddle.ones_like(Tensor([1, 310992],"int32"), )
paddle.ones_like(Tensor([75555, 4],"float32"), )
paddle.ones_like(Tensor([189696, 4],"float32"), )
paddle.ones_like(Tensor([1, 150402],"int32"), )
paddle.ones_like(Tensor([64170, 4],"float32"), )
paddle.ones_like(Tensor([44400, 4],"float32"), )
paddle.ones_like(Tensor([171072, 4],"float32"), )
paddle.ones_like(Tensor([81000, 4],"float32"), )
paddle.ones_like(Tensor([77625, 4],"float32"), )
paddle.ones_like(Tensor([75615, 4],"float32"), )
paddle.ones_like(Tensor([38016, 4],"float32"), )
paddle.ones_like(Tensor([84672, 4],"float32"), )
paddle.ones_like(Tensor([46176, 4],"float32"), )
paddle.ones_like(Tensor([44160, 4],"float32"), )
paddle.ones_like(Tensor([1, 286977],"int32"), )
paddle.ones_like(Tensor([238080, 4],"float32"), )
paddle.ones_like(Tensor([1, 257796],"int32"), )
paddle.ones_like(Tensor([241920, 4],"float32"), )
paddle.ones_like(Tensor([105840, 4],"float32"), )
paddle.ones_like(Tensor([166656, 4],"float32"), )
paddle.ones_like(Tensor([1, 325113],"int32"), )
paddle.ones_like(Tensor([164736, 4],"float32"), )
paddle.ones_like(Tensor([1, 234804],"int32"), )
paddle.ones_like(Tensor([165888, 4],"float32"), )
paddle.ones_like(Tensor([172800, 4],"float32"), )
paddle.ones_like(Tensor([40176, 4],"float32"), )
paddle.ones_like(Tensor([177600, 4],"float32"), )
paddle.ones_like(Tensor([34848, 4],"float32"), )
paddle.ones_like(Tensor([90720, 4],"float32"), )
paddle.ones_like(Tensor([228480, 4],"float32"), )
paddle.ones_like(Tensor([64680, 4],"float32"), )
paddle.ones_like(Tensor([68340, 4],"float32"), )
paddle.ones_like(Tensor([79395, 4],"float32"), )
paddle.ones_like(Tensor([1, 293397],"int32"), )
paddle.ones_like(Tensor([414, 49, 49],"float32"), )
paddle.ones_like(Tensor([232128, 4],"float32"), )
paddle.ones_like(Tensor([220224, 4],"float32"), )
paddle.ones_like(Tensor([1, 335568],"int32"), )
paddle.ones_like(Tensor([133056, 4],"float32"), )
paddle.ones_like(Tensor([1, 369105],"int32"), )
paddle.ones_like(Tensor([58752, 4],"float32"), )
paddle.ones_like(Tensor([221760, 4],"float32"), )
paddle.ones_like(Tensor([1, 230175],"int32"), )
paddle.ones_like(Tensor([1, 313038],"int32"), )
paddle.ones_like(Tensor([208320, 4],"float32"), )
paddle.ones_like(Tensor([69345, 4],"float32"), )
paddle.ones_like(Tensor([45360, 4],"float32"), )
paddle.ones_like(Tensor([103680, 4],"float32"), )
paddle.ones_like(Tensor([1, 220968],"int32"), )
paddle.ones_like(Tensor([1, 267030],"int32"), )
paddle.ones_like(Tensor([76380, 4],"float32"), )
paddle.ones_like(Tensor([41472, 4],"float32"), )
paddle.ones_like(Tensor([56430, 4],"float32"), )
paddle.ones_like(Tensor([187200, 4],"float32"), )
paddle.ones_like(Tensor([28224, 4],"float32"), )
paddle.ones_like(Tensor([79680, 4],"float32"), )
paddle.ones_like(Tensor([153600, 4],"float32"), )
paddle.ones_like(Tensor([46656, 4],"float32"), )
paddle.ones_like(Tensor([45696, 4],"float32"), )
paddle.ones_like(Tensor([1, 214107],"int32"), )
paddle.ones_like(Tensor([49728, 4],"float32"), )
paddle.ones_like(Tensor([196608, 4],"float32"), )
paddle.ones_like(Tensor([1, 268560],"int32"), )
paddle.ones_like(Tensor([72000, 4],"float32"), )
paddle.ones_like(Tensor([55680, 4],"float32"), )
paddle.ones_like(Tensor([53760, 4],"float32"), )
paddle.ones_like(Tensor([1, 32, 128, 128],"float16"), )
paddle.ones_like(Tensor([54000, 4],"float32"), )
paddle.ones_like(Tensor([1, 211038],"int32"), )
paddle.ones_like(Tensor([43152, 4],"float32"), )
paddle.ones_like(Tensor([53856, 4],"float32"), )
paddle.ones_like(Tensor([62400, 4],"float32"), )
paddle.ones_like(Tensor([47520, 4],"float32"), )
paddle.ones_like(Tensor([2, 392, 392],"float32"), )
paddle.ones_like(Tensor([103320, 4],"float32"), )
paddle.ones_like(Tensor([175104, 4],"float32"), )
paddle.ones_like(Tensor([230400, 4],"float32"), )
paddle.ones_like(Tensor([69312, 4],"float32"), )
paddle.ones_like(Tensor([1, 331452],"int32"), )
paddle.ones_like(Tensor([1, 262194],"int32"), )
paddle.ones_like(Tensor([49410, 4],"float32"), )
paddle.ones_like(Tensor([1, 229152],"int32"), )
paddle.ones_like(Tensor([61380, 4],"float32"), )
paddle.ones_like(Tensor([1, 199485],"int32"), )
paddle.ones_like(Tensor([1, 276210],"int32"), )
paddle.ones_like(Tensor([1, 222012],"int32"), )
paddle.ones_like(Tensor([67200, 4],"float32"), )
paddle.ones_like(Tensor([80640, 4],"float32"), )
paddle.ones_like(Tensor([209664, 4],"float32"), )
paddle.ones_like(Tensor([204672, 4],"float32"), )
paddle.ones_like(Tensor([71685, 4],"float32"), )
paddle.ones_like(Tensor([55755, 4],"float32"), )
paddle.ones_like(Tensor([48, 144, 144],"float32"), )
paddle.ones_like(Tensor([154560, 4],"float32"), )
paddle.outer(Tensor([32768],"float32"), Tensor([32],"float32"), )
paddle.outer(Tensor([4096],"float32"), Tensor([32],"float32"), )
paddle.outer(Tensor([20, 50],"complex128"), Tensor([50],"complex128"), )
paddle.outer(Tensor([2048],"float32"), Tensor([32],"float32"), )
paddle.outer(Tensor([2048],"float32"), Tensor([2],"float32"), )
paddle.outer(Tensor([2048],"float32"), Tensor([1],"float32"), )
paddle.outer(Tensor([20, 50],"float64"), Tensor([50],"float64"), )
paddle.outer(Tensor([2048],"float32"), Tensor([4],"float32"), )
paddle.outer(Tensor([2048],"float32"), Tensor([64],"float32"), )
paddle.outer(Tensor([8192],"float32"), Tensor([4],"float32"), )
paddle.outer(Tensor([8192],"float32"), Tensor([2],"float32"), )
paddle.pdist(Tensor([50, 20],"float64"), 2.0, )
paddle.positive(Tensor([10, 1024],"float32"), )
paddle.pow(Tensor([64, 51, 36],"float32"), 2, )
paddle.pow(Tensor([4, 2, 248, 216],"float32"), 4, )
paddle.pow(Tensor([64, 46, 36],"float32"), 2, )
paddle.pow(Tensor([50000, 2, 3],"float64"), 2, )
paddle.pow(Tensor([64, 47, 36],"float32"), 2, )
paddle.pow(Tensor([4, 2, 128, 128],"float32"), 2, )
paddle.pow(Tensor([64, 54, 36],"float32"), 2, )
paddle.pow(Tensor([4, 1, 248, 216],"float32"), 4, )
paddle.pow(Tensor([100000, 4],"float64"), 2, )
paddle.pow(Tensor([50000, 2],"float32"), 2, )
paddle.pow(Tensor([20, 1, 152, 272],"float32"), 4, )
paddle.pow(Tensor([4, 4, 128, 128],"float32"), 4, )
paddle.pow(Tensor([8, 1, 128, 128],"float32"), 2, )
paddle.pow(Tensor([4, 4, 128, 128],"float32"), 2.0, )
paddle.pow(Tensor([64, 77, 36],"float32"), 2, )
paddle.pow(Tensor([4, 1, 248, 216],"float32"), 2, )
paddle.pow(Tensor([64, 48, 36],"float32"), 2, )
paddle.pow(Tensor([8, 2, 128, 128],"float32"), 4, )
paddle.pow(Tensor([64, 44, 36],"float32"), 2, )
paddle.pow(Tensor([20, 1, 152, 272],"float32"), 2.0, )
paddle.pow(Tensor([2, 107136, 1],"float32"), 2.0, )
paddle.pow(Tensor([4, 2, 248, 216],"float32"), 2, )
paddle.pow(Tensor([1000, 784],"float32"), 2, )
paddle.pow(Tensor([64, 53, 36],"float32"), 2, )
paddle.pow(Tensor([4, 2, 128, 128],"float32"), 4, )
paddle.pow(Tensor([64, 50, 36],"float32"), 2, )
paddle.pow(Tensor([8, 1, 128, 128],"float32"), 4, )
paddle.pow(Tensor([64, 52, 36],"float32"), 2, )
paddle.pow(Tensor([8, 2, 128, 128],"float32"), 2, )
paddle.pow(Tensor([64, 31, 36],"float32"), 2, )
paddle.pow(Tensor([64, 37, 36],"float32"), 2, )
paddle.pow(Tensor([64, 28, 36],"float32"), 2, )
paddle.pow(Tensor([4, 121, 27],"float32"), 2, )
paddle.pow(Tensor([3, 40, 40, 3],"float32"), 0.75, )
paddle.pow(Tensor([16, 32, 27],"float32"), 2, )
paddle.pow(Tensor([4, 95, 27],"float32"), 2, )
paddle.pow(Tensor([4, 120, 27],"float32"), 2, )
paddle.pow(Tensor([64, 18, 36],"float32"), 2, )
paddle.pow(Tensor([48, 48, 3, 3],"float32"), 2, )
paddle.pow(Tensor([64, 29, 36],"float32"), 2, )
paddle.pow(Tensor([16, 30, 27],"float32"), 2, )
paddle.pow(Tensor([96, 384, 1, 1],"float32"), 2, )
paddle.pow(Tensor([10000, 2, 3],"float64"), 2, )
paddle.pow(Tensor([64, 22, 36],"float32"), 2, )
paddle.pow(Tensor([16, 40, 27],"float32"), 2, )
paddle.pow(Tensor([64, 13, 36],"float32"), 2, )
paddle.pow(Tensor([64, 24, 36],"float32"), 2, )
paddle.pow(Tensor([4, 174, 27],"float32"), 2, )
paddle.pow(Tensor([38, 2560],"float32"), 2, )
paddle.pow(Tensor([64, 35, 36],"float32"), 2, )
paddle.pow(Tensor([4, 465, 27],"float32"), 2, )
paddle.pow(Tensor([64, 30, 36],"float32"), 2, )
paddle.pow(Tensor([4, 1, 128, 128],"float32"), 2, )
paddle.pow(Tensor([16, 77, 27],"float32"), 2, )
paddle.pow(Tensor([64, 23, 36],"float32"), 2, )
paddle.pow(Tensor([64, 41, 36],"float32"), 2, )
paddle.pow(Tensor([16, 26, 27],"float32"), 2, )
paddle.pow(Tensor([64, 17, 36],"float32"), 2, )
paddle.pow(Tensor([16, 34, 27],"float32"), 2, )
paddle.pow(Tensor([5000, 2],"float32"), 2, )
paddle.pow(Tensor([8, 52, 27],"float32"), 2, )
paddle.pow(Tensor([4, 130, 27],"float32"), 2, )
paddle.pow(Tensor([64, 20, 36],"float32"), 2, )
paddle.pow(Tensor([96, 192, 1, 1],"float32"), 2, )
paddle.pow(Tensor([64, 38, 36],"float32"), 2, )
paddle.pow(Tensor([4, 333, 27],"float32"), 2, )
paddle.pow(Tensor([4, 418, 27],"float32"), 2, )
paddle.pow(Tensor([4, 525, 27],"float32"), 2, )
paddle.pow(Tensor([4, 163, 27],"float32"), 2, )
paddle.pow(Tensor([4, 180, 27],"float32"), 2, )
paddle.pow(Tensor([16, 42, 27],"float32"), 2, )
paddle.pow(Tensor([8, 48, 27],"float32"), 2, )
paddle.pow(Tensor([16, 50, 27],"float32"), 2, )
paddle.pow(Tensor([4, 394, 27],"float32"), 2, )
paddle.pow(Tensor([10, 1024],"float32"), 2, )
paddle.pow(Tensor([16, 36, 27],"float32"), 2, )
paddle.pow(Tensor([3, 3, 40, 40, 3],"float32"), 0.75, )
paddle.pow(Tensor([16, 37, 27],"float32"), 2, )
paddle.pow(Tensor([384, 96, 1, 1],"float32"), 2, )
paddle.pow(Tensor([192, 96, 1, 1],"float32"), 2, )
paddle.pow(Tensor([4, 166, 27],"float32"), 2, )
paddle.pow(Tensor([64, 25, 36],"float32"), 2, )
paddle.pow(Tensor([3, 3, 40, 40],"float32"), 0.75, )
paddle.pow(Tensor([16, 43, 27],"float32"), 2, )
paddle.pow(Tensor([14, 10, 128],"float32"), 3.0, )
paddle.pow(Tensor([4, 272, 27],"float32"), 2, )
paddle.pow(Tensor([14, 8, 128],"float32"), 3.0, )
paddle.pow(Tensor([64, 16, 36],"float32"), 2, )
paddle.pow(Tensor([64, 40, 36],"float32"), 2, )
paddle.pow(Tensor([4, 97, 27],"float32"), 2, )
paddle.pow(Tensor([8, 50, 27],"float32"), 2, )
paddle.pow(Tensor([16, 49, 27],"float32"), 2, )
paddle.pow(Tensor([16, 54, 27],"float32"), 2, )
paddle.pow(Tensor([8, 47, 27],"float32"), 2, )
paddle.pow(Tensor([64, 26, 36],"float32"), 2, )
paddle.pow(Tensor([64, 36, 36],"float32"), 2, )
paddle.pow(Tensor([16, 29, 27],"float32"), 2, )
paddle.pow(Tensor([64, 33, 36],"float32"), 2, )
paddle.pow(Tensor([16, 38, 27],"float32"), 2, )
paddle.pow(Tensor([16, 28, 27],"float32"), 2, )
paddle.pow(Tensor([14, 7, 128],"float32"), 3.0, )
paddle.pow(Tensor([4, 234, 27],"float32"), 2, )
paddle.pow(Tensor([64, 34, 36],"float32"), 2, )
paddle.pow(Tensor([64, 14, 36],"float32"), 2, )
paddle.pow(Tensor([20000, 1],"float32"), Tensor([],"float32"), )
paddle.pow(Tensor([10000],"float32"), 2, )
paddle.pow(Tensor([64, 43, 36],"float32"), 2, )
paddle.pow(Tensor([8, 53, 27],"float32"), 2, )
paddle.pow(Tensor([36, 2304],"float32"), 2, )
paddle.pow(Tensor([64, 21, 36],"float32"), 2, )
paddle.pow(Tensor([20600, 1],"float32"), Tensor([],"float32"), )
paddle.pow(Tensor([16, 45, 27],"float32"), 2, )
paddle.pow(Tensor([4, 173, 27],"float32"), 2, )
paddle.pow(Tensor([64, 15, 36],"float32"), 2, )
paddle.pow(Tensor([39, 7, 64],"float32"), 3.0, )
paddle.pow(Tensor([4, 135, 27],"float32"), 2, )
paddle.pow(Tensor([4, 99, 27],"float32"), 2, )
paddle.pow(Tensor([16, 48, 27],"float32"), 2, )
paddle.pow(Tensor([16, 27, 27],"float32"), 2, )
paddle.pow(Tensor([16, 52, 27],"float32"), 2, )
paddle.pow(Tensor([3, 3, 3, 40, 40],"float32"), 0.75, )
paddle.pow(Tensor([64, 27, 36],"float32"), 2, )
paddle.pow(Tensor([4, 113, 27],"float32"), 2, )
paddle.pow(Tensor([384, 192, 1, 1],"float32"), 2, )
paddle.pow(Tensor([16, 55, 27],"float32"), 2, )
paddle.pow(Tensor([4, 98, 27],"float32"), 2, )
paddle.pow(Tensor([4, 176, 27],"float32"), 2, )
paddle.pow(Tensor([96, 96, 3, 3],"float32"), 2, )
paddle.pow(Tensor([4, 127, 27],"float32"), 2, )
paddle.pow(Tensor([4, 211, 27],"float32"), 2, )
paddle.pow(Tensor([4, 1, 128, 128],"float32"), 4, )
paddle.pow(Tensor([64, 39, 36],"float32"), 2, )
paddle.pow(Tensor([8, 54, 27],"float32"), 2, )
paddle.pow(Tensor([16, 24, 27],"float32"), 2, )
paddle.pow(Tensor([16, 25, 27],"float32"), 2, )
paddle.pow(Tensor([16, 31, 27],"float32"), 2, )
paddle.pow(Tensor([9, 1280],"float32"), 2, )
paddle.pow(Tensor([10000, 2, 3],"float32"), 2, )
paddle.pow(Tensor([16, 39, 27],"float32"), 2, )
paddle.pow(Tensor([16, 35, 27],"float32"), 2, )
paddle.pow(Tensor([4, 171, 27],"float32"), 2, )
paddle.pow(Tensor([4, 119, 27],"float32"), 2, )
paddle.pow(Tensor([64, 42, 36],"float32"), 2, )
paddle.pow(Tensor([64, 19, 36],"float32"), 2, )
paddle.pow(Tensor([4, 167, 27],"float32"), 2, )
paddle.pow(Tensor([16, 33, 27],"float32"), 2, )
paddle.pow(Tensor([52, 8, 37],"float32"), 3.0, )
paddle.pow(Tensor([64, 32, 36],"float32"), 2, )
paddle.pow(Tensor([8, 500],"float32"), 2, )
paddle.pow(Tensor([4, 77, 27],"float32"), 2, )
paddle.pow(Tensor([2, 23, 36],"float32"), 2, )
paddle.pow(Tensor([5000],"float64"), 2, )
paddle.pow(Tensor([8, 29, 27],"float32"), 2, )
paddle.pow(Tensor([4, 29, 27],"float32"), 2, )
paddle.pow(Tensor([8, 13, 27],"float32"), 2, )
paddle.pow(Tensor([4, 90, 27],"float32"), 2, )
paddle.pow(Tensor([14, 3, 128],"float32"), 3.0, )
paddle.pow(Tensor([8, 43, 27],"float32"), 2, )
paddle.pow(Tensor([8, 12, 27],"float32"), 2, )
paddle.pow(Tensor([16, 5, 27],"float32"), 2, )
paddle.pow(Tensor([8, 19, 27],"float32"), 2, )
paddle.pow(Tensor([8, 32, 27],"float32"), 2, )
paddle.pow(Tensor([16, 2, 36],"float32"), 2, )
paddle.pow(Tensor([8, 35, 27],"float32"), 2, )
paddle.pow(Tensor([4, 23, 27],"float32"), 2, )
paddle.pow(Tensor([16, 16, 27],"float32"), 2, )
paddle.pow(Tensor([16, 96, 2],"float32"), 2, )
paddle.pow(Tensor([13, 9, 37],"float32"), 3.0, )
paddle.pow(Tensor([13, 9, 32],"float32"), 2, )
paddle.pow(Tensor([8, 26, 27],"float32"), 2, )
paddle.pow(Tensor([16, 256],"float64"), 2, )
paddle.pow(Tensor([4, 83, 27],"float32"), 2, )
paddle.pow(Tensor([5000, 1],"float64"), 2, )
paddle.pow(Tensor([8, 33, 27],"float32"), 2, )
paddle.pow(Tensor([4, 53, 27],"float32"), 2, )
paddle.pow(Tensor([13, 7, 37],"float32"), 3.0, )
paddle.pow(Tensor([2, 21, 36],"float32"), 2, )
paddle.pow(Tensor([2, 30, 36],"float32"), 2, )
paddle.pow(Tensor([12, 17, 32],"float32"), 2, )
paddle.pow(Tensor([4, 47, 27],"float32"), 2, )
paddle.pow(Tensor([13, 96, 1],"float32"), 2, )
paddle.pow(Tensor([16, 17, 27],"float32"), 2, )
paddle.pow(Tensor([4, 46, 27],"float32"), 2, )
paddle.pow(Tensor([16, 10, 27],"float32"), 2, )
paddle.pow(Tensor([8, 25, 27],"float32"), 2, )
paddle.pow(Tensor([192, 48, 1, 1],"float32"), 2, )
paddle.pow(Tensor([4, 3, 128],"float32"), 3.0, )
paddle.pow(Tensor([4, 63, 27],"float32"), 2, )
paddle.pow(Tensor([2, 28, 36],"float32"), 2, )
paddle.pow(Tensor([24, 96, 1, 1],"float32"), 2, )
paddle.pow(Tensor([4, 27, 27],"float32"), 2, )
paddle.pow(Tensor([16, 9, 27],"float32"), 2, )
paddle.pow(Tensor([4, 50, 27],"float32"), 2, )
paddle.pow(Tensor([2, 14, 36],"float32"), 2, )
paddle.pow(Tensor([4, 34, 27],"float32"), 2, )
paddle.pow(Tensor([16, 21, 27],"float32"), 2, )
paddle.pow(Tensor([4, 35, 27],"float32"), 2, )
paddle.pow(Tensor([13, 8, 32],"float32"), 3.0, )
paddle.pow(Tensor([13, 8, 32],"float32"), 2, )
paddle.pow(Tensor([8, 38, 27],"float32"), 2, )
paddle.pow(Tensor([8, 11, 27],"float32"), 2, )
paddle.pow(Tensor([8, 24, 27],"float32"), 2, )
paddle.pow(Tensor([32, 32],"float32"), 2, )
paddle.pow(Tensor([2, 22, 36],"float32"), 2, )
paddle.pow(Tensor([14, 1, 128],"float32"), 3.0, )
paddle.pow(Tensor([8, 17, 27],"float32"), 2, )
paddle.pow(Tensor([4, 15, 27],"float32"), 2, )
paddle.pow(Tensor([8, 9, 27],"float32"), 2, )
paddle.pow(Tensor([4, 73, 27],"float32"), 2, )
paddle.pow(Tensor([8, 6, 27],"float32"), 2, )
paddle.pow(Tensor([8, 16, 27],"float32"), 2, )
paddle.pow(Tensor([8, 37, 27],"float32"), 2, )
paddle.pow(Tensor([4, 45, 27],"float32"), 2, )
paddle.pow(Tensor([16, 19, 27],"float32"), 2, )
paddle.pow(Tensor([8, 22, 27],"float32"), 2, )
paddle.pow(Tensor([4, 64, 27],"float32"), 2, )
paddle.pow(Tensor([8, 44, 27],"float32"), 2, )
paddle.pow(Tensor([4, 58, 27],"float32"), 2, )
paddle.pow(Tensor([4, 12, 27],"float32"), 2, )
paddle.pow(Tensor([4, 30, 27],"float32"), 2, )
paddle.pow(Tensor([8, 30, 27],"float32"), 2, )
paddle.pow(Tensor([64, 32, 1, 1],"float32"), 2, )
paddle.pow(Tensor([4, 22, 27],"float32"), 2, )
paddle.pow(Tensor([8, 20, 27],"float32"), 2, )
paddle.pow(Tensor([64, 3, 7, 7],"float32"), 2, )
paddle.pow(Tensor([8, 18, 27],"float32"), 2, )
paddle.pow(Tensor([8, 5, 27],"float32"), 2, )
paddle.pow(Tensor([4, 92, 27],"float32"), 2, )
paddle.pow(Tensor([4, 33, 27],"float32"), 2, )
paddle.pow(Tensor([4, 500],"float32"), 2, )
paddle.pow(Tensor([8, 10, 27],"float32"), 2, )
paddle.pow(Tensor([16, 96, 1],"float32"), 2, )
paddle.pow(Tensor([12, 9, 32],"float32"), 2, )
paddle.pow(Tensor([13, 7, 32],"float32"), 2, )
paddle.pow(Tensor([16, 14, 27],"float32"), 2, )
paddle.pow(Tensor([16, 11, 27],"float32"), 2, )
paddle.pow(Tensor([13, 7, 32],"float32"), 3.0, )
paddle.pow(Tensor([13, 10, 37],"float32"), 3.0, )
paddle.pow(Tensor([13, 4, 32],"float32"), 3.0, )
paddle.pow(Tensor([16, 6, 27],"float32"), 2, )
paddle.pow(Tensor([4, 28, 27],"float32"), 2, )
paddle.pow(Tensor([4, 36, 27],"float32"), 2, )
paddle.pow(Tensor([13, 3, 32],"float32"), 2, )
paddle.pow(Tensor([8, 27, 27],"float32"), 2, )
paddle.pow(Tensor([2, 16, 36],"float32"), 2, )
paddle.pow(Tensor([8, 23, 27],"float32"), 2, )
paddle.pow(Tensor([8, 15, 27],"float32"), 2, )
paddle.pow(Tensor([16, 8, 27],"float32"), 2, )
paddle.pow(Tensor([13, 10, 32],"float32"), 2, )
paddle.pow(Tensor([4, 80, 27],"float32"), 2, )
paddle.pow(Tensor([13, 3, 37],"float32"), 3.0, )
paddle.pow(Tensor([16, 13, 27],"float32"), 2, )
paddle.pow(Tensor([4, 40, 27],"float32"), 2, )
paddle.pow(Tensor([8, 34, 27],"float32"), 2, )
paddle.pow(Tensor([4, 78, 27],"float32"), 2, )
paddle.pow(Tensor([2, 25, 36],"float32"), 2, )
paddle.pow(Tensor([16, 15, 27],"float32"), 2, )
paddle.pow(Tensor([4, 19, 27],"float32"), 2, )
paddle.pow(Tensor([16, 20, 27],"float32"), 2, )
paddle.pow(Tensor([4, 65, 27],"float32"), 2, )
paddle.pow(Tensor([16, 23, 27],"float32"), 2, )
paddle.pow(Tensor([8, 31, 27],"float32"), 2, )
paddle.pow(Tensor([4, 17, 27],"float32"), 2, )
paddle.pow(Tensor([2, 15, 36],"float32"), 2, )
paddle.pow(Tensor([8, 40, 27],"float32"), 2, )
paddle.pow(Tensor([13, 8, 37],"float32"), 3.0, )
paddle.pow(Tensor([4, 41, 27],"float32"), 2, )
paddle.pow(Tensor([4, 56, 27],"float32"), 2, )
paddle.pow(Tensor([4, 16, 27],"float32"), 2, )
paddle.pow(Tensor([48, 192, 1, 1],"float32"), 2, )
paddle.pow(Tensor([16, 7, 27],"float32"), 2, )
paddle.pow(Tensor([8, 36, 27],"float32"), 2, )
paddle.pow(Tensor([48, 96, 1, 1],"float32"), 2, )
paddle.pow(Tensor([96, 64, 1, 1],"float32"), 2, )
paddle.pow(Tensor([8, 45, 27],"float32"), 2, )
paddle.pow(Tensor([2, 18, 36],"float32"), 2, )
paddle.pow(Tensor([16, 16, 3, 3],"float32"), 2, )
paddle.pow(Tensor([4, 48, 27],"float32"), 2, )
paddle.pow(Tensor([1000, 1],"float32"), Tensor([],"float32"), )
paddle.pow(Tensor([6, 3, 128],"float32"), 3.0, )
paddle.pow(Tensor([13, 7, 64],"float32"), 3.0, )
paddle.pow(Tensor([16, 256],"float32"), 2, )
paddle.pow(Tensor([8, 8, 27],"float32"), 2, )
paddle.pow(Tensor([8, 28, 27],"float32"), 2, )
paddle.pow(Tensor([2, 19, 36],"float32"), 2, )
paddle.pow(Tensor([8, 21, 27],"float32"), 2, )
paddle.pow(Tensor([4, 26, 27],"float32"), 2, )
paddle.pow(Tensor([8, 7, 27],"float32"), 2, )
paddle.pow(Tensor([4, 62, 27],"float32"), 2, )
paddle.pow(Tensor([4, 31, 27],"float32"), 2, )
paddle.pow(Tensor([4, 89, 27],"float32"), 2, )
paddle.pow(Tensor([8, 14, 27],"float32"), 2, )
paddle.pow(Tensor([4, 37, 27],"float32"), 2, )
paddle.pow(Tensor([24, 64, 1, 1],"float32"), 2, )
paddle.pow(Tensor([4, 43, 27],"float32"), 2, )
paddle.pow(Tensor([8, 16, 32],"float32"), 3, )
paddle.pow(Tensor([8, 39, 27],"float32"), 2, )
paddle.pow(Tensor([16, 12, 27],"float32"), 2, )
paddle.pow(Tensor([16, 22, 27],"float32"), 2, )
paddle.pow(Tensor([2, 20, 36],"float32"), 2, )
paddle.pow(Tensor([8, 42, 27],"float32"), 2, )
paddle.pow(Tensor([96, 24, 1, 1],"float32"), 2, )
paddle.pow(Tensor([4, 25, 27],"float32"), 2, )
paddle.pow(Tensor([4, 51, 27],"float32"), 2, )
paddle.pow(Tensor([4, 52, 27],"float32"), 2, )
paddle.pow(Tensor([16, 18, 27],"float32"), 2, )
paddle.pow(Tensor([4, 10, 27],"float32"), 2, )
paddle.pow(Tensor([64, 16, 1, 1],"float32"), 2, )
paddle.pow(Tensor([8, 46, 27],"float32"), 2, )
paddle.pow(Tensor([3, 40, 40],"float32"), 0.75, )
paddle.pow(Tensor([4, 39, 27],"float32"), 2, )
paddle.pow(Tensor([4, 20, 27],"float32"), 2, )
paddle.pow(Tensor([24, 24, 3, 3],"float32"), 2, )
paddle.pow(Tensor([8, 41, 27],"float32"), 2, )
paddle.pow(Tensor([16, 3, 36],"float32"), 2, )
paddle.pow(Tensor([4, 24, 27],"float32"), 2, )
paddle.pow(Tensor([16, 5, 36],"float32"), 2, )
paddle.prod(Tensor([16, 1024],"float32"), -1, )
paddle.prod(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.prod(Tensor([5, 6, 2, 3, 4, 2],"float64"), list[2,3,4,], False, )
paddle.prod(Tensor([2, 5, 3, 2, 2, 3, 4, 2],"float32"), list[2,3,4,], False, )
paddle.prod(Tensor([5, 6, 2, 3, 4, 2],"float32"), list[2,3,4,], False, )
paddle.prod(Tensor([2, 5, 3, 2, 2, 3, 4, 2],"float64"), list[2,3,4,], False, )
paddle.prod(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.put_along_axis(Tensor([10, 10, 10],"float32"), Tensor([5, 5, 5],"int64"), Tensor([5, 5, 5],"float32"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([10, 10, 10],"int32"), Tensor([5, 5, 5],"int32"), Tensor([5, 5, 5],"int32"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([10, 10, 10],"int64"), Tensor([5, 5, 5],"int64"), Tensor([5, 5, 5],"int64"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([10, 10, 10],"uint8"), Tensor([5, 5, 5],"int64"), Tensor([5, 5, 5],"uint8"), 1, "mul", True, False, )
paddle.quantile(Tensor([1124, 32],"float32"), 0.30000000000000004, )
paddle.quantile(Tensor([512, 32],"float32"), 0.30000000000000004, )
paddle.quantile(x=Tensor([3, 6, 3, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.quantile(Tensor([32, 37],"float32"), 0.30000000000000004, )
paddle.quantile(x=Tensor([3, 6, 3, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.quantile(Tensor([3, 6, 3, 4, 2, 5],"float64"), q=0.5, )
paddle.quantile(x=Tensor([3, 6, 3, 4, 2, 5],"float64"), q=0.75, axis=5, )
paddle.quantile(Tensor([37, 32],"float32"), 0.30000000000000004, )
paddle.quantile(Tensor([32, 32],"float32"), 0.30000000000000004, )
paddle.quantile(x=Tensor([3, 6, 3, 4, 2, 5],"float64"), q=0.75, axis=3, keepdim=True, )
paddle.rad2deg(Tensor([8, 16, 32],"float32"), )
paddle.real(Tensor([10, 10, 10, 20],"complex64"), )
paddle.reduce_as(Tensor([30, 200, 40],"float32"), Tensor([200, 40],"float32"), )
paddle.repeat_interleave(Tensor([1, 1500, 512],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([7, 1, 192, 672],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([1, 1500, 384],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([15548, 1, 2],"float32"), 1358, axis=1, )
paddle.repeat_interleave(Tensor([11661, 1, 2],"float32"), 1358, axis=1, )
paddle.repeat_interleave(Tensor([6684, 1, 2],"float32"), 3029, axis=1, )
paddle.repeat_interleave(Tensor([26736, 1, 2],"float32"), 3029, axis=1, )
paddle.repeat_interleave(Tensor([13, 384, 1],"float32"), 1, 2, )
paddle.repeat_interleave(Tensor([1, 3029, 2],"float32"), 6684, axis=0, )
paddle.repeat_interleave(Tensor([1, 1358, 2],"float32"), 15548, axis=0, )
paddle.repeat_interleave(Tensor([16, 384, 1],"float32"), 1, 2, )
paddle.repeat_interleave(Tensor([3, 384, 1],"float32"), 1, 2, )
paddle.repeat_interleave(Tensor([1, 3029, 2],"float32"), 26736, axis=0, )
paddle.repeat_interleave(Tensor([1, 1358, 2],"float32"), 11661, axis=0, )
paddle.repeat_interleave(Tensor([3029, 1, 2],"float32"), 458, axis=1, )
paddle.repeat_interleave(Tensor([3887, 1, 2],"float32"), 1358, axis=1, )
paddle.repeat_interleave(Tensor([1, 1358, 2],"float32"), 3887, axis=0, )
paddle.reverse(Tensor([4, 12, 32],"float64"), axis=1, )
paddle.roll(Tensor([4, 12, 12, 1536],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 7, 7, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([8, 7, 7, 1536],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 7, 7, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([16, 32, 20, 11],"complex64"), Tensor([1],"int64"), list[-2,], name=None, )
paddle.roll(Tensor([12, 16, 16, 64],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([16, 128, 10, 6],"complex64"), Tensor([1],"int64"), list[-2,], name=None, )
paddle.roll(Tensor([4, 14, 14, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 7, 7, 1024],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([4, 12, 12, 1024],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 7, 7, 1024],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([4, 7, 7, 1536],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([16, 7, 7, 1024],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([16, 96, 20, 11],"complex64"), Tensor([1],"int64"), list[-2,], name=None, )
paddle.roll(Tensor([12, 16, 16, 64],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 21, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([16, 64, 19, 10],"complex64"), Tensor([1],"int64"), list[-2,], name=None, )
paddle.roll(Tensor([1, 42, 35, 384],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([4, 12, 12, 1024],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([8, 7, 7, 1536],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 42, 35, 384],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 24, 1536],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([4, 7, 7, 1536],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([2, 28, 21, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 32, 32],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([4, 12, 12, 1536],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 21, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([2, 28, 21, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 24, 1536],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([4, 14, 14, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 32, 32],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([16, 7, 7, 1024],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 8, 8, 128],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([16, 32, 16, 9],"complex64"), Tensor([1],"int64"), list[-2,], name=None, )
paddle.roll(Tensor([16, 32, 19, 10],"complex64"), Tensor([1],"int64"), list[-2,], name=None, )
paddle.roll(Tensor([12, 8, 8, 128],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([16, 64, 10, 6],"complex64"), Tensor([1],"int64"), list[-2,], name=None, )
paddle.roll(Tensor([16, 1, 16, 16],"float32"), shifts=1, axis=-2, )
paddle.roll(Tensor([16, 1, 16, 16],"float32"), shifts=1, axis=-1, )
paddle.roll(Tensor([16, 1, 16, 16],"float32"), shifts=-1, axis=-2, )
paddle.roll(Tensor([16, 1, 16, 16],"float32"), shifts=-1, axis=-1, )
paddle.round(Tensor([128, 128],"float32"), )
paddle.round(Tensor([16, 256],"float64"), )
paddle.rsqrt(Tensor([10000, 2, 3],"float64"), )
paddle.rsqrt(Tensor([10000, 2, 3],"float32"), )
paddle.rsqrt(Tensor([10000],"float32"), )
paddle.rsqrt(Tensor([13, 1007, 1],"float32"), )
paddle.rsqrt(Tensor([4, 304, 1],"float32"), )
paddle.rsqrt(Tensor([1, 1, 4096],"float32"), )
paddle.rsqrt(Tensor([4, 512],"float32"), )
paddle.rsqrt(Tensor([8, 512],"float32"), )
paddle.rsqrt(Tensor([1, 4096, 1],"float32"), )
paddle.rsqrt(Tensor([2048, 1, 1],"float32"), )
paddle.rsqrt(Tensor([4, 256],"float32"), )
paddle.rsqrt(Tensor([1, 2048, 1],"float32"), )
paddle.rsqrt(Tensor([1, 1024, 1],"float32"), )
paddle.rsqrt(Tensor([4, 377, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2, 16, 4, 1],"float32"), )
paddle.rsqrt(Tensor([4, 396, 1],"float32"), )
paddle.rsqrt(Tensor([8, 256],"float32"), )
paddle.rsqrt(Tensor([8, 128],"float32"), )
paddle.rsqrt(Tensor([4, 346, 1],"float32"), )
paddle.rsqrt(Tensor([8, 512, 1],"float32"), )
paddle.scale(Tensor([16, 32, 20, 20],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([64, 32, 20, 20],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([1, 8, 128, 128],"float32"), 0.25, )
paddle.scale(Tensor([2, 256, 16, 16],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([1, 128, 32, 32],"float32"), 0.17677669529663687, )
paddle.scale(Tensor([8, 1024, 7, 7],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([1, 128, 32, 32],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([1, 128, 32, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([3, 40, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(x=Tensor([32, 4, 512],"float32"), scale=22.627416997969522, )
paddle.scale(Tensor([3, 3, 40, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([13, 8, 4, 32],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([5, 10, 15, 20],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([1, 16, 32, 32],"float32"), 0.25, )
paddle.scale(Tensor([3, 3, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([8, 16, 1, 129],"float32"), scale=0.125, )
paddle.scale(Tensor([3, 3, 3, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([5, 10, 15, 20],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([40, 40],"float32"), scale=1.0, )
paddle.scale(Tensor([1024],"float16"), 0.125, )
paddle.scale(Tensor([1, 8, 32, 32],"float32"), 0.35355339059327373, )
paddle.scale(Tensor([40, 40],"bfloat16"), scale=-1.7580993408473766, )
paddle.scale(Tensor([40, 40],"bfloat16"), scale=0.0, )
paddle.scale(Tensor([40, 40],"float32"), scale=0.0, )
paddle.scale(Tensor([1024],"float16"), 0.25, )
paddle.scale(Tensor([32, 8, 4, 4],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([40, 40],"bfloat16"), scale=1.0, )
paddle.scale(Tensor([3, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([40, 40],"float32"), scale=-1.7580993408473766, )
paddle.scatter(Tensor([262194],"int32"), Tensor([11],"int32"), Tensor([11],"int32"), )
paddle.scatter(Tensor([294624],"int32"), Tensor([245],"int32"), Tensor([245],"int32"), )
paddle.scatter(Tensor([319200],"int32"), Tensor([159],"int32"), Tensor([159],"int32"), )
paddle.scatter(Tensor([249405],"int32"), Tensor([170],"int32"), Tensor([170],"int32"), )
paddle.scatter(Tensor([286464],"int32"), Tensor([149],"int32"), Tensor([149],"int32"), )
paddle.scatter(Tensor([223554],"int32"), Tensor([237],"int32"), Tensor([237],"int32"), )
paddle.scatter(Tensor([330429],"int32"), Tensor([41],"int32"), Tensor([41],"int32"), )
paddle.scatter(Tensor([313038],"int32"), Tensor([28],"int32"), Tensor([28],"int32"), )
paddle.scatter(Tensor([245520],"int32"), Tensor([233],"int32"), Tensor([233],"int32"), )
paddle.scatter(Tensor([330429],"int32"), Tensor([246],"int32"), Tensor([246],"int32"), )
paddle.scatter(Tensor([227919],"int32"), Tensor([253],"int32"), Tensor([253],"int32"), )
paddle.scatter(Tensor([293397],"int32"), Tensor([32],"int32"), Tensor([32],"int32"), )
paddle.scatter(Tensor([220968],"int32"), Tensor([15],"int32"), Tensor([15],"int32"), )
paddle.scatter(Tensor([408177],"int32"), Tensor([22],"int32"), Tensor([22],"int32"), )
paddle.scatter(Tensor([285444],"int32"), Tensor([214],"int32"), Tensor([214],"int32"), )
paddle.scatter(Tensor([408177],"int32"), Tensor([167],"int32"), Tensor([167],"int32"), )
paddle.scatter(Tensor([239382],"int32"), Tensor([15],"int32"), Tensor([15],"int32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52407],"int32"), updates=Tensor([52407],"int32"), )
paddle.scatter(Tensor([252681],"int32"), Tensor([179],"int32"), Tensor([179],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([182],"int32"), Tensor([182],"int32"), )
paddle.scatter(Tensor([247086],"int32"), Tensor([158],"int32"), Tensor([158],"int32"), )
paddle.scatter(Tensor([346086],"int32"), Tensor([233],"int32"), Tensor([233],"int32"), )
paddle.scatter(Tensor([349155],"int32"), Tensor([94],"int32"), Tensor([94],"int32"), )
paddle.scatter(Tensor([283167],"int32"), Tensor([79],"int32"), Tensor([79],"int32"), )
paddle.scatter(Tensor([257796],"int32"), Tensor([189],"int32"), Tensor([189],"int32"), )
paddle.scatter(Tensor([299250],"int32"), Tensor([15],"int32"), Tensor([15],"int32"), )
paddle.scatter(Tensor([301302],"int32"), Tensor([220],"int32"), Tensor([220],"int32"), )
paddle.scatter(Tensor([250656],"int32"), Tensor([21],"int32"), Tensor([21],"int32"), )
paddle.scatter(Tensor([451143],"int32"), Tensor([50],"int32"), Tensor([50],"int32"), )
paddle.scatter(Tensor([386694],"int32"), Tensor([217],"int32"), Tensor([217],"int32"), )
paddle.scatter(Tensor([269586],"int32"), Tensor([226],"int32"), Tensor([226],"int32"), )
paddle.scatter(Tensor([286464],"int32"), Tensor([90],"int32"), Tensor([90],"int32"), )
paddle.scatter(Tensor([294624],"int32"), Tensor([247],"int32"), Tensor([247],"int32"), )
paddle.scatter(Tensor([247086],"int32"), Tensor([8],"int32"), Tensor([8],"int32"), )
paddle.scatter(Tensor([286977],"int32"), Tensor([7],"int32"), Tensor([7],"int32"), )
paddle.scatter(Tensor([349866],"int32"), Tensor([184],"int32"), Tensor([184],"int32"), )
paddle.scatter(Tensor([303858],"int32"), Tensor([64],"int32"), Tensor([64],"int32"), )
paddle.scatter(Tensor([440433],"int32"), Tensor([54],"int32"), Tensor([54],"int32"), )
paddle.scatter(Tensor([378540],"int32"), Tensor([233],"int32"), Tensor([233],"int32"), )
paddle.scatter(Tensor([368280],"int32"), Tensor([10],"int32"), Tensor([10],"int32"), )
paddle.scatter(Tensor([306900],"int32"), Tensor([223],"int32"), Tensor([223],"int32"), )
paddle.scatter(Tensor([105840],"int32"), Tensor([53],"int32"), Tensor([53],"int32"), )
paddle.scatter(Tensor([343728],"int32"), Tensor([211],"int32"), Tensor([211],"int32"), )
paddle.scatter(Tensor([309255],"int32"), Tensor([128],"int32"), Tensor([128],"int32"), )
paddle.scatter(Tensor([375984],"int32"), Tensor([60],"int32"), Tensor([60],"int32"), )
paddle.scatter(Tensor([243474],"int32"), Tensor([228],"int32"), Tensor([228],"int32"), )
paddle.scatter(Tensor([349866],"int32"), Tensor([36],"int32"), Tensor([36],"int32"), )
paddle.scatter(Tensor([230202],"int32"), Tensor([253],"int32"), Tensor([253],"int32"), )
paddle.scatter(Tensor([268569],"int32"), Tensor([225],"int32"), Tensor([225],"int32"), )
paddle.scatter(Tensor([302832],"int32"), Tensor([207],"int32"), Tensor([207],"int32"), )
paddle.scatter(Tensor([304368],"int32"), Tensor([210],"int32"), Tensor([210],"int32"), )
paddle.scatter(Tensor([283167],"int32"), Tensor([206],"int32"), Tensor([206],"int32"), )
paddle.scatter(Tensor([236334],"int32"), Tensor([229],"int32"), Tensor([229],"int32"), )
paddle.scatter(Tensor([325113],"int32"), Tensor([229],"int32"), Tensor([229],"int32"), )
paddle.scatter(Tensor([295443],"int32"), Tensor([24],"int32"), Tensor([24],"int32"), )
paddle.scatter(Tensor([322272],"int32"), Tensor([241],"int32"), Tensor([241],"int32"), )
paddle.scatter(Tensor([223827],"int32"), Tensor([248],"int32"), Tensor([248],"int32"), )
paddle.scatter(Tensor([319200],"int32"), Tensor([87],"int32"), Tensor([87],"int32"), )
paddle.scatter(Tensor([295647],"int32"), Tensor([40],"int32"), Tensor([40],"int32"), )
paddle.scatter(Tensor([205923],"int32"), Tensor([4],"int32"), Tensor([4],"int32"), )
paddle.scatter(Tensor([217413],"int32"), Tensor([14],"int32"), Tensor([14],"int32"), )
paddle.scatter(Tensor([220968],"int32"), Tensor([65],"int32"), Tensor([65],"int32"), )
paddle.scatter(Tensor([340176],"int32"), Tensor([97],"int32"), Tensor([97],"int32"), )
paddle.scatter(Tensor([368280],"int32"), Tensor([18],"int32"), Tensor([18],"int32"), )
paddle.scatter(Tensor([217413],"int32"), Tensor([58],"int32"), Tensor([58],"int32"), )
paddle.scatter(Tensor([214107],"int32"), Tensor([170],"int32"), Tensor([170],"int32"), )
paddle.scatter(Tensor([230202],"int32"), Tensor([104],"int32"), Tensor([104],"int32"), )
paddle.scatter(Tensor([190296],"int32"), Tensor([224],"int32"), Tensor([224],"int32"), )
paddle.scatter(Tensor([330429],"int32"), Tensor([6],"int32"), Tensor([6],"int32"), )
paddle.scatter(Tensor([222012],"int32"), Tensor([233],"int32"), Tensor([233],"int32"), )
paddle.scatter(Tensor([295443],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), )
paddle.scatter(Tensor([325113],"int32"), Tensor([251],"int32"), Tensor([251],"int32"), )
paddle.scatter(Tensor([369303],"int32"), Tensor([31],"int32"), Tensor([31],"int32"), )
paddle.scatter(Tensor([310992],"int32"), Tensor([217],"int32"), Tensor([217],"int32"), )
paddle.scatter(Tensor([301302],"int32"), Tensor([226],"int32"), Tensor([226],"int32"), )
paddle.scatter(Tensor([313038],"int32"), Tensor([128],"int32"), Tensor([128],"int32"), )
paddle.scatter(Tensor([217689],"int32"), Tensor([243],"int32"), Tensor([243],"int32"), )
paddle.scatter(Tensor([320739],"int32"), Tensor([48],"int32"), Tensor([48],"int32"), )
paddle.scatter(Tensor([214848],"int32"), Tensor([249],"int32"), Tensor([249],"int32"), )
paddle.scatter(Tensor([347820],"int32"), Tensor([17],"int32"), Tensor([17],"int32"), )
paddle.scatter(Tensor([220968],"int32"), Tensor([124],"int32"), Tensor([124],"int32"), )
paddle.scatter(Tensor([223827],"int32"), Tensor([209],"int32"), Tensor([209],"int32"), )
paddle.scatter(Tensor([451143],"int32"), Tensor([147],"int32"), Tensor([147],"int32"), )
paddle.scatter(Tensor([236334],"int32"), Tensor([225],"int32"), Tensor([225],"int32"), )
paddle.scatter(Tensor([235320],"int32"), Tensor([174],"int32"), Tensor([174],"int32"), )
paddle.scatter(Tensor([347820],"int32"), Tensor([205],"int32"), Tensor([205],"int32"), )
paddle.scatter(Tensor([214848],"int32"), Tensor([7],"int32"), Tensor([7],"int32"), )
paddle.scatter(Tensor([257796],"int32"), Tensor([137],"int32"), Tensor([137],"int32"), )
paddle.scatter(Tensor([230202],"int32"), Tensor([10],"int32"), Tensor([10],"int32"), )
paddle.scatter(Tensor([268560],"int32"), Tensor([246],"int32"), Tensor([246],"int32"), )
paddle.scatter(Tensor([272118],"int32"), Tensor([159],"int32"), Tensor([159],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([253],"int32"), Tensor([253],"int32"), )
paddle.scatter(Tensor([196416],"int32"), Tensor([128],"int32"), Tensor([128],"int32"), )
paddle.scatter(Tensor([208692],"int32"), Tensor([25],"int32"), Tensor([25],"int32"), )
paddle.scatter(Tensor([196944],"int32"), Tensor([220],"int32"), Tensor([220],"int32"), )
paddle.scatter(Tensor([205923],"int32"), Tensor([216],"int32"), Tensor([216],"int32"), )
paddle.scatter(Tensor([386694],"int32"), Tensor([220],"int32"), Tensor([220],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([173],"int32"), Tensor([173],"int32"), )
paddle.scatter(Tensor([227124],"int32"), Tensor([239],"int32"), Tensor([239],"int32"), )
paddle.scatter(Tensor([185691],"int32"), Tensor([253],"int32"), Tensor([253],"int32"), )
paddle.scatter(Tensor([199485],"int32"), Tensor([6],"int32"), Tensor([6],"int32"), )
paddle.scatter(Tensor([279300],"int32"), Tensor([16],"int32"), Tensor([16],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([215],"int32"), Tensor([215],"int32"), )
paddle.scatter(Tensor([368280],"int32"), Tensor([108],"int32"), Tensor([108],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([62],"int32"), Tensor([62],"int32"), )
paddle.scatter(Tensor([294624],"int32"), Tensor([189],"int32"), Tensor([189],"int32"), )
paddle.scatter(Tensor([252195],"int32"), Tensor([248],"int32"), Tensor([248],"int32"), )
paddle.scatter(Tensor([262428],"int32"), Tensor([255],"int32"), Tensor([255],"int32"), )
paddle.scatter(Tensor([268560],"int32"), Tensor([205],"int32"), Tensor([205],"int32"), )
paddle.scatter(Tensor([272118],"int32"), Tensor([26],"int32"), Tensor([26],"int32"), )
paddle.scatter(Tensor([245823],"int32"), Tensor([242],"int32"), Tensor([242],"int32"), )
paddle.scatter(Tensor([257796],"int32"), Tensor([100],"int32"), Tensor([100],"int32"), )
paddle.scatter(Tensor([317160],"int32"), Tensor([34],"int32"), Tensor([34],"int32"), )
paddle.scatter(Tensor([261888],"int32"), Tensor([219],"int32"), Tensor([219],"int32"), )
paddle.scatter(Tensor([340176],"int32"), Tensor([105],"int32"), Tensor([105],"int32"), )
paddle.scatter(Tensor([245520],"int32"), Tensor([30],"int32"), Tensor([30],"int32"), )
paddle.scatter(Tensor([261888],"int32"), Tensor([226],"int32"), Tensor([226],"int32"), )
paddle.scatter(Tensor([304368],"int32"), Tensor([218],"int32"), Tensor([218],"int32"), )
paddle.scatter(Tensor([212784],"int32"), Tensor([7],"int32"), Tensor([7],"int32"), )
paddle.scatter(Tensor([272649],"int32"), Tensor([44],"int32"), Tensor([44],"int32"), )
paddle.scatter(Tensor([257796],"int32"), Tensor([43],"int32"), Tensor([43],"int32"), )
paddle.scatter(Tensor([220968],"int32"), Tensor([6],"int32"), Tensor([6],"int32"), )
paddle.scatter(Tensor([217413],"int32"), Tensor([182],"int32"), Tensor([182],"int32"), )
paddle.scatter(Tensor([246051],"int32"), Tensor([237],"int32"), Tensor([237],"int32"), )
paddle.scatter(Tensor([217413],"int32"), Tensor([249],"int32"), Tensor([249],"int32"), )
paddle.scatter(Tensor([230202],"int32"), Tensor([226],"int32"), Tensor([226],"int32"), )
paddle.scatter(Tensor([369303],"int32"), Tensor([177],"int32"), Tensor([177],"int32"), )
paddle.scatter(Tensor([272118],"int32"), Tensor([227],"int32"), Tensor([227],"int32"), )
paddle.scatter(Tensor([214107],"int32"), Tensor([14],"int32"), Tensor([14],"int32"), )
paddle.scatter(Tensor([269586],"int32"), Tensor([28],"int32"), Tensor([28],"int32"), )
paddle.scatter(Tensor([388740],"int32"), Tensor([180],"int32"), Tensor([180],"int32"), )
paddle.scatter(Tensor([346086],"int32"), Tensor([24],"int32"), Tensor([24],"int32"), )
paddle.scatter(Tensor([241731],"int32"), Tensor([30],"int32"), Tensor([30],"int32"), )
paddle.scatter(Tensor([276210],"int32"), Tensor([59],"int32"), Tensor([59],"int32"), )
paddle.scatter(Tensor([278256],"int32"), Tensor([128],"int32"), Tensor([128],"int32"), )
paddle.scatter(Tensor([349866],"int32"), Tensor([218],"int32"), Tensor([218],"int32"), )
paddle.scatter(Tensor([331251],"int32"), Tensor([232],"int32"), Tensor([232],"int32"), )
paddle.scatter(Tensor([278256],"int32"), Tensor([41],"int32"), Tensor([41],"int32"), )
paddle.scatter(Tensor([313347],"int32"), Tensor([206],"int32"), Tensor([206],"int32"), )
paddle.scatter(Tensor([375984],"int32"), Tensor([44],"int32"), Tensor([44],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([47],"int32"), Tensor([47],"int32"), )
paddle.scatter(Tensor([261888],"int32"), Tensor([110],"int32"), Tensor([110],"int32"), )
paddle.scatter(Tensor([299250],"int32"), Tensor([163],"int32"), Tensor([163],"int32"), )
paddle.scatter(Tensor([229152],"int32"), Tensor([18],"int32"), Tensor([18],"int32"), )
paddle.scatter(Tensor([313038],"int32"), Tensor([4],"int32"), Tensor([4],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([232],"int32"), Tensor([232],"int32"), )
paddle.scatter(Tensor([322272],"int32"), Tensor([49],"int32"), Tensor([49],"int32"), )
paddle.scatter(Tensor([299250],"int32"), Tensor([140],"int32"), Tensor([140],"int32"), )
paddle.scatter(Tensor([285444],"int32"), Tensor([56],"int32"), Tensor([56],"int32"), )
paddle.scatter(Tensor([369303],"int32"), Tensor([41],"int32"), Tensor([41],"int32"), )
paddle.scatter(Tensor([310992],"int32"), Tensor([207],"int32"), Tensor([207],"int32"), )
paddle.scatter(Tensor([208692],"int32"), Tensor([221],"int32"), Tensor([221],"int32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52503],"int32"), updates=Tensor([52503],"int32"), )
paddle.scatter(Tensor([205923],"int32"), Tensor([225],"int32"), Tensor([225],"int32"), )
paddle.scatter(Tensor([268560],"int32"), Tensor([239],"int32"), Tensor([239],"int32"), )
paddle.scatter(Tensor([196944],"int32"), Tensor([36],"int32"), Tensor([36],"int32"), )
paddle.scatter(Tensor([322245],"int32"), Tensor([80],"int32"), Tensor([80],"int32"), )
paddle.scatter(Tensor([285444],"int32"), Tensor([250],"int32"), Tensor([250],"int32"), )
paddle.scatter(Tensor([320739],"int32"), Tensor([177],"int32"), Tensor([177],"int32"), )
paddle.scatter(Tensor([245520],"int32"), Tensor([31],"int32"), Tensor([31],"int32"), )
paddle.scatter(Tensor([252195],"int32"), Tensor([24],"int32"), Tensor([24],"int32"), )
paddle.scatter(Tensor([313347],"int32"), Tensor([174],"int32"), Tensor([174],"int32"), )
paddle.scatter(Tensor([320739],"int32"), Tensor([214],"int32"), Tensor([214],"int32"), )
paddle.scatter(Tensor([278256],"int32"), Tensor([178],"int32"), Tensor([178],"int32"), )
paddle.scatter(Tensor([245823],"int32"), Tensor([42],"int32"), Tensor([42],"int32"), )
paddle.scatter(Tensor([236616],"int32"), Tensor([228],"int32"), Tensor([228],"int32"), )
paddle.scatter(Tensor([272118],"int32"), Tensor([220],"int32"), Tensor([220],"int32"), )
paddle.scatter(Tensor([350178],"int32"), Tensor([183],"int32"), Tensor([183],"int32"), )
paddle.scatter(Tensor([327360],"int32"), Tensor([215],"int32"), Tensor([215],"int32"), )
paddle.scatter(Tensor([354501],"int32"), Tensor([50],"int32"), Tensor([50],"int32"), )
paddle.scatter(Tensor([350178],"int32"), Tensor([248],"int32"), Tensor([248],"int32"), )
paddle.scatter(Tensor([191301],"int32"), Tensor([205],"int32"), Tensor([205],"int32"), )
paddle.scatter(Tensor([270096],"int32"), Tensor([244],"int32"), Tensor([244],"int32"), )
paddle.scatter(Tensor([339150],"int32"), Tensor([247],"int32"), Tensor([247],"int32"), )
paddle.scatter(Tensor([327360],"int32"), Tensor([20],"int32"), Tensor([20],"int32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52612],"int32"), updates=Tensor([52612],"int32"), )
paddle.scatter(Tensor([291555],"int32"), Tensor([229],"int32"), Tensor([229],"int32"), )
paddle.scatter(Tensor([321759],"int32"), Tensor([246],"int32"), Tensor([246],"int32"), )
paddle.scatter(Tensor([451143],"int32"), Tensor([6],"int32"), Tensor([6],"int32"), )
paddle.scatter(Tensor([202572],"int32"), Tensor([140],"int32"), Tensor([140],"int32"), )
paddle.scatter(Tensor([283905],"int32"), Tensor([5],"int32"), Tensor([5],"int32"), )
paddle.scatter(Tensor([369303],"int32"), Tensor([156],"int32"), Tensor([156],"int32"), )
paddle.scatter(Tensor([333018],"int32"), Tensor([30],"int32"), Tensor([30],"int32"), )
paddle.scatter(Tensor([196416],"int32"), Tensor([221],"int32"), Tensor([221],"int32"), )
paddle.scatter(Tensor([171888],"int32"), Tensor([203],"int32"), Tensor([203],"int32"), )
paddle.scatter(Tensor([245520],"int32"), Tensor([245],"int32"), Tensor([245],"int32"), )
paddle.scatter(Tensor([369303],"int32"), Tensor([251],"int32"), Tensor([251],"int32"), )
paddle.scatter(Tensor([264978],"int32"), Tensor([227],"int32"), Tensor([227],"int32"), )
paddle.scatter(Tensor([291555],"int32"), Tensor([95],"int32"), Tensor([95],"int32"), )
paddle.scatter(Tensor([369303],"int32"), Tensor([108],"int32"), Tensor([108],"int32"), )
paddle.scatter(Tensor([286977],"int32"), Tensor([14],"int32"), Tensor([14],"int32"), )
paddle.scatter(Tensor([313347],"int32"), Tensor([33],"int32"), Tensor([33],"int32"), )
paddle.scatter(Tensor([369303],"int32"), Tensor([75],"int32"), Tensor([75],"int32"), )
paddle.scatter(Tensor([268569],"int32"), Tensor([13],"int32"), Tensor([13],"int32"), )
paddle.scatter(Tensor([365211],"int32"), Tensor([235],"int32"), Tensor([235],"int32"), )
paddle.scatter(Tensor([337620],"int32"), Tensor([243],"int32"), Tensor([243],"int32"), )
paddle.scatter(Tensor([335568],"int32"), Tensor([11],"int32"), Tensor([11],"int32"), )
paddle.scatter(Tensor([291555],"int32"), Tensor([59],"int32"), Tensor([59],"int32"), )
paddle.scatter(Tensor([255780],"int32"), Tensor([18],"int32"), Tensor([18],"int32"), )
paddle.scatter(Tensor([217413],"int32"), Tensor([81],"int32"), Tensor([81],"int32"), )
paddle.scatter(Tensor([408177],"int32"), Tensor([11],"int32"), Tensor([11],"int32"), )
paddle.scatter(Tensor([367059],"int32"), Tensor([106],"int32"), Tensor([106],"int32"), )
paddle.scatter(Tensor([286464],"int32"), Tensor([85],"int32"), Tensor([85],"int32"), )
paddle.scatter(Tensor([278562],"int32"), Tensor([6],"int32"), Tensor([6],"int32"), )
paddle.scatter(Tensor([388740],"int32"), Tensor([235],"int32"), Tensor([235],"int32"), )
paddle.scatter(Tensor([379050],"int32"), Tensor([69],"int32"), Tensor([69],"int32"), )
paddle.scatter(Tensor([340176],"int32"), Tensor([222],"int32"), Tensor([222],"int32"), )
paddle.scatter(Tensor([304368],"int32"), Tensor([227],"int32"), Tensor([227],"int32"), )
paddle.scatter(Tensor([171888],"int32"), Tensor([222],"int32"), Tensor([222],"int32"), )
paddle.scatter(Tensor([408177],"int32"), Tensor([49],"int32"), Tensor([49],"int32"), )
paddle.scatter(Tensor([306900],"int32"), Tensor([176],"int32"), Tensor([176],"int32"), )
paddle.scatter(Tensor([277539],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), )
paddle.scatter(Tensor([191301],"int32"), Tensor([253],"int32"), Tensor([253],"int32"), )
paddle.scatter(Tensor([320739],"int32"), Tensor([110],"int32"), Tensor([110],"int32"), )
paddle.scatter(Tensor([269586],"int32"), Tensor([71],"int32"), Tensor([71],"int32"), )
paddle.scatter(Tensor([306900],"int32"), Tensor([243],"int32"), Tensor([243],"int32"), )
paddle.scatter(Tensor([321759],"int32"), Tensor([189],"int32"), Tensor([189],"int32"), )
paddle.scatter(Tensor([302832],"int32"), Tensor([84],"int32"), Tensor([84],"int32"), )
paddle.scatter(Tensor([202572],"int32"), Tensor([17],"int32"), Tensor([17],"int32"), )
paddle.scatter(Tensor([245823],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), )
paddle.scatter(Tensor([247086],"int32"), Tensor([48],"int32"), Tensor([48],"int32"), )
paddle.scatter(Tensor([236616],"int32"), Tensor([210],"int32"), Tensor([210],"int32"), )
paddle.scatter(Tensor([245520],"int32"), Tensor([182],"int32"), Tensor([182],"int32"), )
paddle.scatter(Tensor([343728],"int32"), Tensor([81],"int32"), Tensor([81],"int32"), )
paddle.scatter(Tensor([214848],"int32"), Tensor([24],"int32"), Tensor([24],"int32"), )
paddle.scatter(Tensor([340176],"int32"), Tensor([224],"int32"), Tensor([224],"int32"), )
paddle.scatter(Tensor([408177],"int32"), Tensor([208],"int32"), Tensor([208],"int32"), )
paddle.scatter(Tensor([278256],"int32"), Tensor([6],"int32"), Tensor([6],"int32"), )
paddle.scatter(Tensor([408177],"int32"), Tensor([220],"int32"), Tensor([220],"int32"), )
paddle.scatter(Tensor([269586],"int32"), Tensor([80],"int32"), Tensor([80],"int32"), )
paddle.scatter(Tensor([331251],"int32"), Tensor([155],"int32"), Tensor([155],"int32"), )
paddle.scatter(Tensor([343728],"int32"), Tensor([232],"int32"), Tensor([232],"int32"), )
paddle.scatter(Tensor([386694],"int32"), Tensor([210],"int32"), Tensor([210],"int32"), )
paddle.scatter(Tensor([276210],"int32"), Tensor([236],"int32"), Tensor([236],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([56],"int32"), Tensor([56],"int32"), )
paddle.scatter(Tensor([310992],"int32"), Tensor([23],"int32"), Tensor([23],"int32"), )
paddle.scatter(Tensor([168795],"int32"), Tensor([185],"int32"), Tensor([185],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([195],"int32"), Tensor([195],"int32"), )
paddle.scatter(Tensor([302832],"int32"), Tensor([12],"int32"), Tensor([12],"int32"), )
paddle.scatter(Tensor([388740],"int32"), Tensor([183],"int32"), Tensor([183],"int32"), )
paddle.scatter(Tensor([270096],"int32"), Tensor([14],"int32"), Tensor([14],"int32"), )
paddle.scatter(Tensor([330429],"int32"), Tensor([9],"int32"), Tensor([9],"int32"), )
paddle.scatter(Tensor([379050],"int32"), Tensor([224],"int32"), Tensor([224],"int32"), )
paddle.scatter(Tensor([217413],"int32"), Tensor([65],"int32"), Tensor([65],"int32"), )
paddle.scatter(Tensor([252681],"int32"), Tensor([31],"int32"), Tensor([31],"int32"), )
paddle.scatter(Tensor([241731],"int32"), Tensor([4],"int32"), Tensor([4],"int32"), )
paddle.scatter(Tensor([220968],"int32"), Tensor([9],"int32"), Tensor([9],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([197],"int32"), Tensor([197],"int32"), )
paddle.scatter(Tensor([386694],"int32"), Tensor([44],"int32"), Tensor([44],"int32"), )
paddle.scatter(Tensor([340176],"int32"), Tensor([37],"int32"), Tensor([37],"int32"), )
paddle.scatter(Tensor([234804],"int32"), Tensor([208],"int32"), Tensor([208],"int32"), )
paddle.scatter(Tensor([283905],"int32"), Tensor([223],"int32"), Tensor([223],"int32"), )
paddle.scatter(Tensor([331251],"int32"), Tensor([85],"int32"), Tensor([85],"int32"), )
paddle.scatter(Tensor([303858],"int32"), Tensor([207],"int32"), Tensor([207],"int32"), )
paddle.scatter(Tensor([301302],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), )
paddle.scatter(Tensor([349866],"int32"), Tensor([32],"int32"), Tensor([32],"int32"), )
paddle.scatter(Tensor([377514],"int32"), Tensor([244],"int32"), Tensor([244],"int32"), )
paddle.scatter(Tensor([340176],"int32"), Tensor([9],"int32"), Tensor([9],"int32"), )
paddle.scatter(Tensor([313347],"int32"), Tensor([22],"int32"), Tensor([22],"int32"), )
paddle.scatter(Tensor([350178],"int32"), Tensor([12],"int32"), Tensor([12],"int32"), )
paddle.scatter(Tensor([322272],"int32"), Tensor([207],"int32"), Tensor([207],"int32"), )
paddle.scatter(Tensor([279300],"int32"), Tensor([226],"int32"), Tensor([226],"int32"), )
paddle.scatter(Tensor([327360],"int32"), Tensor([144],"int32"), Tensor([144],"int32"), )
paddle.scatter(Tensor([208692],"int32"), Tensor([128],"int32"), Tensor([128],"int32"), )
paddle.scatter(Tensor([291555],"int32"), Tensor([128],"int32"), Tensor([128],"int32"), )
paddle.scatter(Tensor([208197],"int32"), Tensor([242],"int32"), Tensor([242],"int32"), )
paddle.scatter(Tensor([397467],"int32"), Tensor([16],"int32"), Tensor([16],"int32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52607],"int32"), updates=Tensor([52607],"int32"), )
paddle.scatter(Tensor([236616],"int32"), Tensor([248],"int32"), Tensor([248],"int32"), )
paddle.scatter(Tensor([247086],"int32"), Tensor([37],"int32"), Tensor([37],"int32"), )
paddle.scatter(Tensor([365211],"int32"), Tensor([233],"int32"), Tensor([233],"int32"), )
paddle.scatter(Tensor([188256],"int32"), Tensor([153],"int32"), Tensor([153],"int32"), )
paddle.scatter(Tensor([354501],"int32"), Tensor([247],"int32"), Tensor([247],"int32"), )
paddle.scatter(Tensor([301302],"int32"), Tensor([122],"int32"), Tensor([122],"int32"), )
paddle.scatter(Tensor([313347],"int32"), Tensor([243],"int32"), Tensor([243],"int32"), )
paddle.scatter(Tensor([327360],"int32"), Tensor([239],"int32"), Tensor([239],"int32"), )
paddle.scatter(Tensor([314595],"int32"), Tensor([9],"int32"), Tensor([9],"int32"), )
paddle.scatter(Tensor([321759],"int32"), Tensor([196],"int32"), Tensor([196],"int32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52583],"int32"), updates=Tensor([52583],"int32"), )
paddle.scatter(Tensor([278256],"int32"), Tensor([37],"int32"), Tensor([37],"int32"), )
paddle.scatter(Tensor([369105],"int32"), Tensor([7],"int32"), Tensor([7],"int32"), )
paddle.scatter(Tensor([268569],"int32"), Tensor([50],"int32"), Tensor([50],"int32"), )
paddle.scatter(Tensor([310992],"int32"), Tensor([48],"int32"), Tensor([48],"int32"), )
paddle.scatter(Tensor([349866],"int32"), Tensor([248],"int32"), Tensor([248],"int32"), )
paddle.scatter(Tensor([253728],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), )
paddle.scatter(Tensor([214107],"int32"), Tensor([10],"int32"), Tensor([10],"int32"), )
paddle.scatter(Tensor([356541],"int32"), Tensor([18],"int32"), Tensor([18],"int32"), )
paddle.scatter(Tensor([235320],"int32"), Tensor([78],"int32"), Tensor([78],"int32"), )
paddle.scatter(Tensor([291555],"int32"), Tensor([11],"int32"), Tensor([11],"int32"), )
paddle.scatter(Tensor([200022],"int32"), Tensor([252],"int32"), Tensor([252],"int32"), )
paddle.scatter(Tensor([343728],"int32"), Tensor([142],"int32"), Tensor([142],"int32"), )
paddle.scatter(Tensor([322272],"int32"), Tensor([181],"int32"), Tensor([181],"int32"), )
paddle.scatter(Tensor([200022],"int32"), Tensor([253],"int32"), Tensor([253],"int32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52618],"int32"), updates=Tensor([52618],"int32"), )
paddle.scatter(Tensor([250656],"int32"), Tensor([66],"int32"), Tensor([66],"int32"), )
paddle.scatter(Tensor([223827],"int32"), Tensor([162],"int32"), Tensor([162],"int32"), )
paddle.scatter(Tensor([330429],"int32"), Tensor([153],"int32"), Tensor([153],"int32"), )
paddle.scatter(Tensor([346086],"int32"), Tensor([31],"int32"), Tensor([31],"int32"), )
paddle.scatter(Tensor([313347],"int32"), Tensor([253],"int32"), Tensor([253],"int32"), )
paddle.scatter(Tensor([236313],"int32"), Tensor([6],"int32"), Tensor([6],"int32"), )
paddle.scatter(Tensor([337620],"int32"), Tensor([10],"int32"), Tensor([10],"int32"), )
paddle.scatter(Tensor([369105],"int32"), Tensor([239],"int32"), Tensor([239],"int32"), )
paddle.scatter(Tensor([236616],"int32"), Tensor([214],"int32"), Tensor([214],"int32"), )
paddle.scatter(Tensor([375984],"int32"), Tensor([15],"int32"), Tensor([15],"int32"), )
paddle.scatter(Tensor([262428],"int32"), Tensor([222],"int32"), Tensor([222],"int32"), )
paddle.scatter(Tensor([291555],"int32"), Tensor([243],"int32"), Tensor([243],"int32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52443],"int32"), updates=Tensor([52443],"int32"), )
paddle.scatter(Tensor([185691],"int32"), Tensor([36],"int32"), Tensor([36],"int32"), )
paddle.scatter(Tensor([220968],"int32"), Tensor([192],"int32"), Tensor([192],"int32"), )
paddle.scatter(Tensor([356541],"int32"), Tensor([19],"int32"), Tensor([19],"int32"), )
paddle.scatter(Tensor([349866],"int32"), Tensor([207],"int32"), Tensor([207],"int32"), )
paddle.scatter(Tensor([196416],"int32"), Tensor([103],"int32"), Tensor([103],"int32"), )
paddle.scatter(Tensor([272118],"int32"), Tensor([248],"int32"), Tensor([248],"int32"), )
paddle.scatter(Tensor([270096],"int32"), Tensor([215],"int32"), Tensor([215],"int32"), )
paddle.scatter(Tensor([190296],"int32"), Tensor([227],"int32"), Tensor([227],"int32"), )
paddle.scatter(Tensor([239382],"int32"), Tensor([224],"int32"), Tensor([224],"int32"), )
paddle.scatter(Tensor([268569],"int32"), Tensor([240],"int32"), Tensor([240],"int32"), )
paddle.scatter(Tensor([237360],"int32"), Tensor([227],"int32"), Tensor([227],"int32"), )
paddle.scatter(Tensor([451143],"int32"), Tensor([11],"int32"), Tensor([11],"int32"), )
paddle.scatter(Tensor([294624],"int32"), Tensor([12],"int32"), Tensor([12],"int32"), )
paddle.scatter(Tensor([227124],"int32"), Tensor([4],"int32"), Tensor([4],"int32"), )
paddle.scatter(Tensor([250656],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), )
paddle.scatter(Tensor([327360],"int32"), Tensor([9],"int32"), Tensor([9],"int32"), )
paddle.scatter(Tensor([208197],"int32"), Tensor([112],"int32"), Tensor([112],"int32"), )
paddle.scatter(Tensor([257796],"int32"), Tensor([192],"int32"), Tensor([192],"int32"), )
paddle.scatter(Tensor([248616],"int32"), Tensor([253],"int32"), Tensor([253],"int32"), )
paddle.scatter(Tensor([229152],"int32"), Tensor([7],"int32"), Tensor([7],"int32"), )
paddle.scatter(Tensor([260865],"int32"), Tensor([226],"int32"), Tensor([226],"int32"), )
paddle.scatter(Tensor([269586],"int32"), Tensor([88],"int32"), Tensor([88],"int32"), )
paddle.scatter(Tensor([330429],"int32"), Tensor([44],"int32"), Tensor([44],"int32"), )
paddle.scatter(Tensor([369303],"int32"), Tensor([10],"int32"), Tensor([10],"int32"), )
paddle.scatter(Tensor([200022],"int32"), Tensor([43],"int32"), Tensor([43],"int32"), )
paddle.scatter(Tensor([279300],"int32"), Tensor([247],"int32"), Tensor([247],"int32"), )
paddle.scatter(Tensor([217413],"int32"), Tensor([128],"int32"), Tensor([128],"int32"), )
paddle.scatter(Tensor([408177],"int32"), Tensor([8],"int32"), Tensor([8],"int32"), )
paddle.scatter(Tensor([333018],"int32"), Tensor([224],"int32"), Tensor([224],"int32"), )
paddle.scatter(Tensor([220968],"int32"), Tensor([46],"int32"), Tensor([46],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([202],"int32"), Tensor([202],"int32"), )
paddle.scatter(Tensor([375984],"int32"), Tensor([173],"int32"), Tensor([173],"int32"), )
paddle.scatter(Tensor([397467],"int32"), Tensor([204],"int32"), Tensor([204],"int32"), )
paddle.scatter(Tensor([236616],"int32"), Tensor([14],"int32"), Tensor([14],"int32"), )
paddle.scatter(Tensor([340176],"int32"), Tensor([18],"int32"), Tensor([18],"int32"), )
paddle.scatter(Tensor([291555],"int32"), Tensor([83],"int32"), Tensor([83],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([103],"int32"), Tensor([103],"int32"), )
paddle.scatter(Tensor([227124],"int32"), Tensor([38],"int32"), Tensor([38],"int32"), )
paddle.scatter(Tensor([229152],"int32"), Tensor([5],"int32"), Tensor([5],"int32"), )
paddle.scatter(Tensor([270096],"int32"), Tensor([31],"int32"), Tensor([31],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([45],"int32"), Tensor([45],"int32"), )
paddle.scatter(Tensor([191301],"int32"), Tensor([241],"int32"), Tensor([241],"int32"), )
paddle.scatter(Tensor([261681],"int32"), Tensor([235],"int32"), Tensor([235],"int32"), )
paddle.scatter(Tensor([168795],"int32"), Tensor([8],"int32"), Tensor([8],"int32"), )
paddle.scatter(Tensor([236616],"int32"), Tensor([52],"int32"), Tensor([52],"int32"), )
paddle.scatter(Tensor([269586],"int32"), Tensor([250],"int32"), Tensor([250],"int32"), )
paddle.scatter(Tensor([331251],"int32"), Tensor([87],"int32"), Tensor([87],"int32"), )
paddle.scatter(Tensor([255780],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([240],"int32"), Tensor([240],"int32"), )
paddle.scatter(Tensor([262194],"int32"), Tensor([47],"int32"), Tensor([47],"int32"), )
paddle.scatter(Tensor([272118],"int32"), Tensor([40],"int32"), Tensor([40],"int32"), )
paddle.scatter(Tensor([365211],"int32"), Tensor([248],"int32"), Tensor([248],"int32"), )
paddle.scatter(Tensor([349866],"int32"), Tensor([70],"int32"), Tensor([70],"int32"), )
paddle.scatter(Tensor([196416],"int32"), Tensor([224],"int32"), Tensor([224],"int32"), )
paddle.scatter(Tensor([268560],"int32"), Tensor([248],"int32"), Tensor([248],"int32"), )
paddle.scatter(Tensor([331251],"int32"), Tensor([11],"int32"), Tensor([11],"int32"), )
paddle.scatter(Tensor([299250],"int32"), Tensor([241],"int32"), Tensor([241],"int32"), )
paddle.scatter(Tensor([229965],"int32"), Tensor([233],"int32"), Tensor([233],"int32"), )
paddle.scatter(Tensor([214848],"int32"), Tensor([215],"int32"), Tensor([215],"int32"), )
paddle.scatter(Tensor([205923],"int32"), Tensor([144],"int32"), Tensor([144],"int32"), )
paddle.scatter(Tensor([367059],"int32"), Tensor([32],"int32"), Tensor([32],"int32"), )
paddle.scatter(Tensor([270096],"int32"), Tensor([209],"int32"), Tensor([209],"int32"), )
paddle.scatter(Tensor([277539],"int32"), Tensor([149],"int32"), Tensor([149],"int32"), )
paddle.scatter(Tensor([229965],"int32"), Tensor([29],"int32"), Tensor([29],"int32"), )
paddle.scatter(Tensor([340686],"int32"), Tensor([8],"int32"), Tensor([8],"int32"), )
paddle.scatter(Tensor([349866],"int32"), Tensor([7],"int32"), Tensor([7],"int32"), )
paddle.scatter(Tensor([397467],"int32"), Tensor([46],"int32"), Tensor([46],"int32"), )
paddle.scatter(Tensor([301302],"int32"), Tensor([171],"int32"), Tensor([171],"int32"), )
paddle.scatter(Tensor([313347],"int32"), Tensor([151],"int32"), Tensor([151],"int32"), )
paddle.scatter(Tensor([369303],"int32"), Tensor([15],"int32"), Tensor([15],"int32"), )
paddle.scatter(Tensor([302832],"int32"), Tensor([128],"int32"), Tensor([128],"int32"), )
paddle.scatter(Tensor([253728],"int32"), Tensor([74],"int32"), Tensor([74],"int32"), )
paddle.scatter(Tensor([268569],"int32"), Tensor([2],"int32"), Tensor([2],"int32"), )
paddle.scatter(Tensor([242991],"int32"), Tensor([98],"int32"), Tensor([98],"int32"), )
paddle.scatter(Tensor([300762],"int32"), Tensor([188],"int32"), Tensor([188],"int32"), )
paddle.scatter(Tensor([223554],"int32"), Tensor([252],"int32"), Tensor([252],"int32"), )
paddle.scatter(Tensor([277539],"int32"), Tensor([245],"int32"), Tensor([245],"int32"), )
paddle.scatter(Tensor([286977],"int32"), Tensor([251],"int32"), Tensor([251],"int32"), )
paddle.scatter(Tensor([333018],"int32"), Tensor([63],"int32"), Tensor([63],"int32"), )
paddle.scatter(Tensor([217413],"int32"), Tensor([16],"int32"), Tensor([16],"int32"), )
paddle.scatter(Tensor([322272],"int32"), Tensor([4],"int32"), Tensor([4],"int32"), )
paddle.scatter(Tensor([304368],"int32"), Tensor([223],"int32"), Tensor([223],"int32"), )
paddle.scatter(Tensor([188256],"int32"), Tensor([246],"int32"), Tensor([246],"int32"), )
paddle.scatter(Tensor([230202],"int32"), Tensor([128],"int32"), Tensor([128],"int32"), )
paddle.scatter(Tensor([248616],"int32"), Tensor([34],"int32"), Tensor([34],"int32"), )
paddle.scatter(Tensor([330429],"int32"), Tensor([107],"int32"), Tensor([107],"int32"), )
paddle.scatter(Tensor([262194],"int32"), Tensor([69],"int32"), Tensor([69],"int32"), )
paddle.scatter(Tensor([245823],"int32"), Tensor([69],"int32"), Tensor([69],"int32"), )
paddle.scatter(Tensor([331251],"int32"), Tensor([76],"int32"), Tensor([76],"int32"), )
paddle.scatter(Tensor([220992],"int32"), Tensor([231],"int32"), Tensor([231],"int32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52466],"int32"), updates=Tensor([52466],"int32"), )
paddle.scatter(Tensor([302832],"int32"), Tensor([233],"int32"), Tensor([233],"int32"), )
paddle.scatter(Tensor([301302],"int32"), Tensor([23],"int32"), Tensor([23],"int32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7200, 2],"int64"), Tensor([7200, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7290, 2],"int64"), Tensor([7290, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3345, 2],"int64"), Tensor([3345, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6870, 2],"int64"), Tensor([6870, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6831, 2],"int64"), Tensor([6831, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([1906, 2],"int64"), Tensor([1906, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([4059, 2],"int64"), Tensor([4059, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7015, 2],"int64"), Tensor([7015, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6954, 2],"int64"), Tensor([6954, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6391, 2],"int64"), Tensor([6391, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6084, 2],"int64"), Tensor([6084, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3579, 2],"int64"), Tensor([3579, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7165, 2],"int64"), Tensor([7165, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([2811, 2],"int64"), Tensor([2811, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3702, 2],"int64"), Tensor([3702, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([383, 2],"int64"), Tensor([383, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6255, 2],"int64"), Tensor([6255, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6544, 2],"int64"), Tensor([6544, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6950, 2],"int64"), Tensor([6950, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3072, 2],"int64"), Tensor([3072, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3658, 2],"int64"), Tensor([3658, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3534, 2],"int64"), Tensor([3534, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([5735, 2],"int64"), Tensor([5735, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([4554, 2],"int64"), Tensor([4554, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6410, 2],"int64"), Tensor([6410, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3438, 2],"int64"), Tensor([3438, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6117, 2],"int64"), Tensor([6117, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6282, 2],"int64"), Tensor([6282, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([4816, 2],"int64"), Tensor([4816, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7573, 2],"int64"), Tensor([7573, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6805, 2],"int64"), Tensor([6805, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6351, 2],"int64"), Tensor([6351, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6291, 2],"int64"), Tensor([6291, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7780, 2],"int64"), Tensor([7780, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([1, 2],"int64"), Tensor([1, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([2277, 2],"int64"), Tensor([2277, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6098, 2],"int64"), Tensor([6098, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([8162, 2],"int64"), Tensor([8162, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([4359, 2],"int64"), Tensor([4359, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3411, 2],"int64"), Tensor([3411, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([4293, 2],"int64"), Tensor([4293, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([5084, 2],"int64"), Tensor([5084, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7270, 2],"int64"), Tensor([7270, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([4533, 2],"int64"), Tensor([4533, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7052, 2],"int64"), Tensor([7052, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([4843, 2],"int64"), Tensor([4843, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7183, 2],"int64"), Tensor([7183, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([5060, 2],"int64"), Tensor([5060, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([5548, 2],"int64"), Tensor([5548, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([4458, 2],"int64"), Tensor([4458, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3699, 2],"int64"), Tensor([3699, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6911, 2],"int64"), Tensor([6911, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([2946, 2],"int64"), Tensor([2946, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6122, 2],"int64"), Tensor([6122, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3060, 2],"int64"), Tensor([3060, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([5842, 2],"int64"), Tensor([5842, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7164, 2],"int64"), Tensor([7164, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([5976, 2],"int64"), Tensor([5976, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3795, 2],"int64"), Tensor([3795, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6935, 2],"int64"), Tensor([6935, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6960, 2],"int64"), Tensor([6960, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7020, 2],"int64"), Tensor([7020, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6976, 2],"int64"), Tensor([6976, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6369, 2],"int64"), Tensor([6369, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6992, 2],"int64"), Tensor([6992, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3783, 2],"int64"), Tensor([3783, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3831, 2],"int64"), Tensor([3831, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6248, 2],"int64"), Tensor([6248, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7710, 2],"int64"), Tensor([7710, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3399, 2],"int64"), Tensor([3399, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6753, 2],"int64"), Tensor([6753, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6880, 2],"int64"), Tensor([6880, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7065, 2],"int64"), Tensor([7065, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([7175, 2],"int64"), Tensor([7175, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6296, 2],"int64"), Tensor([6296, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([3036, 2],"int64"), Tensor([3036, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6474, 2],"int64"), Tensor([6474, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6502, 2],"int64"), Tensor([6502, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([5566, 2],"int64"), Tensor([5566, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 32],"float32"), Tensor([6929, 2],"int64"), Tensor([6929, 32],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5824, 2],"int64"), Tensor([5824, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5583, 2],"int64"), Tensor([5583, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5840, 2],"int64"), Tensor([5840, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5859, 2],"int64"), Tensor([5859, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5825, 2],"int64"), Tensor([5825, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5788, 2],"int64"), Tensor([5788, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5555, 2],"int64"), Tensor([5555, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5837, 2],"int64"), Tensor([5837, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5514, 2],"int64"), Tensor([5514, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5831, 2],"int64"), Tensor([5831, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5670, 2],"int64"), Tensor([5670, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5833, 2],"int64"), Tensor([5833, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5835, 2],"int64"), Tensor([5835, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5488, 2],"int64"), Tensor([5488, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5657, 2],"int64"), Tensor([5657, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5849, 2],"int64"), Tensor([5849, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5814, 2],"int64"), Tensor([5814, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5876, 2],"int64"), Tensor([5876, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5807, 2],"int64"), Tensor([5807, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5761, 2],"int64"), Tensor([5761, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5572, 2],"int64"), Tensor([5572, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5619, 2],"int64"), Tensor([5619, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5585, 2],"int64"), Tensor([5585, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5741, 2],"int64"), Tensor([5741, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5801, 2],"int64"), Tensor([5801, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5544, 2],"int64"), Tensor([5544, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5953, 2],"int64"), Tensor([5953, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5800, 2],"int64"), Tensor([5800, 1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([5818, 2],"int64"), Tensor([5818, 1],"float32"), )
paddle.scatter_nd_add(Tensor([3, 5, 9, 10],"float32"), Tensor([3, 2],"int64"), Tensor([3, 9, 10],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 1],"float32"), Tensor([1, 2],"int64"), Tensor([1, 1],"float32"), )
paddle.searchsorted(Tensor([1024],"int64"), Tensor([512],"int64"), )
paddle.searchsorted(Tensor([1024],"float64"), Tensor([512],"float64"), )
paddle.searchsorted(Tensor([1024],"float32"), Tensor([512],"float32"), )
paddle.searchsorted(Tensor([1024],"int32"), Tensor([512],"int32"), )
paddle.shape(Tensor([8, 124, 512],"float32"), )
paddle.shape(Tensor([5, 57, 512],"float32"), )
paddle.shape(Tensor([9, 61, 512],"float32"), )
paddle.shape(Tensor([2, 208, 512],"float32"), )
paddle.shape(Tensor([9, 110, 512],"float32"), )
paddle.shape(Tensor([10, 53, 512],"float32"), )
paddle.shape(Tensor([8, 42, 512],"float32"), )
paddle.shape(Tensor([10, 101, 512],"float32"), )
paddle.shape(Tensor([9, 72, 512],"float32"), )
paddle.shape(Tensor([3, 158, 512],"float32"), )
paddle.shape(Tensor([8, 225, 512],"float32"), )
paddle.shape(Tensor([5, 56, 512],"float32"), )
paddle.shape(Tensor([3, 141, 512],"float32"), )
paddle.shape(Tensor([7, 123, 512],"float32"), )
paddle.shape(Tensor([7, 100, 512],"float32"), )
paddle.shape(Tensor([10, 109, 512],"float32"), )
paddle.shape(Tensor([8, 169, 512],"float32"), )
paddle.shape(Tensor([3, 122, 512],"float32"), )
paddle.shape(Tensor([2, 206, 512],"float32"), )
paddle.shape(Tensor([10, 154, 512],"float32"), )
paddle.shape(Tensor([7, 115, 512],"float32"), )
paddle.shape(Tensor([4, 121, 512],"float32"), )
paddle.shape(Tensor([9, 46, 512],"float32"), )
paddle.shape(Tensor([9, 35, 512],"float32"), )
paddle.shape(Tensor([5, 95, 512],"float32"), )
paddle.shape(Tensor([6, 143, 512],"float32"), )
paddle.shape(Tensor([4, 66, 512],"float32"), )
paddle.shape(Tensor([3, 156, 512],"float32"), )
paddle.shape(Tensor([4, 49, 512],"float32"), )
paddle.shape(Tensor([2, 160, 44, 44],"float32"), )
paddle.shape(Tensor([10, 41, 512],"float32"), )
paddle.shape(Tensor([8, 204, 512],"float32"), )
paddle.shape(Tensor([8, 130, 512],"float32"), )
paddle.shape(Tensor([8, 149, 512],"float32"), )
paddle.shape(Tensor([6, 162, 512],"float32"), )
paddle.shape(Tensor([4, 256, 8, 80],"float32"), )
paddle.shape(Tensor([1, 235, 512],"float32"), )
paddle.shape(Tensor([1, 261, 512],"float32"), )
paddle.shape(Tensor([5, 140, 512],"float32"), )
paddle.shape(Tensor([8, 49, 512],"float32"), )
paddle.shape(Tensor([4, 87, 512],"float32"), )
paddle.shape(Tensor([8, 234, 512],"float32"), )
paddle.shape(Tensor([8, 89, 512],"float32"), )
paddle.shape(Tensor([10, 116, 512],"float32"), )
paddle.shape(Tensor([2, 209, 512],"float32"), )
paddle.shape(Tensor([12, 24, 38, 68],"float16"), )
paddle.shape(Tensor([8, 128, 512],"float32"), )
paddle.shape(Tensor([8, 189, 512],"float32"), )
paddle.shape(Tensor([4, 128, 22, 22],"float32"), )
paddle.shape(Tensor([10, 147, 512],"float32"), )
paddle.shape(Tensor([4, 127, 512],"float32"), )
paddle.shape(Tensor([8, 115, 512],"float32"), )
paddle.shape(Tensor([3, 82, 512],"float32"), )
paddle.shape(Tensor([5, 60, 512],"float32"), )
paddle.shape(Tensor([3, 162, 512],"float32"), )
paddle.shape(Tensor([3, 163, 512],"float32"), )
paddle.shape(Tensor([4, 116, 512],"float32"), )
paddle.shape(Tensor([1, 221, 512],"float32"), )
paddle.shape(Tensor([3, 72, 512],"float32"), )
paddle.shape(Tensor([10, 185, 512],"float32"), )
paddle.shape(Tensor([3, 113, 512],"float32"), )
paddle.shape(Tensor([3, 107, 512],"float32"), )
paddle.shape(Tensor([4, 101, 512],"float32"), )
paddle.shape(Tensor([6, 69, 512],"float32"), )
paddle.shape(Tensor([8, 116, 512],"float32"), )
paddle.shape(Tensor([10, 29, 512],"float32"), )
paddle.shape(Tensor([4, 134, 512],"float32"), )
paddle.shape(Tensor([6, 74, 512],"float32"), )
paddle.shape(Tensor([8, 244, 512],"float32"), )
paddle.shape(Tensor([3, 136, 512],"float32"), )
paddle.shape(Tensor([8, 55, 512],"float32"), )
paddle.shape(Tensor([10, 110, 512],"float32"), )
paddle.shape(Tensor([10, 27, 512],"float32"), )
paddle.shape(Tensor([10, 104, 512],"float32"), )
paddle.shape(Tensor([3, 125, 512],"float32"), )
paddle.shape(Tensor([2, 165, 512],"float32"), )
paddle.shape(Tensor([7, 30, 512],"float32"), )
paddle.shape(Tensor([4, 167, 512],"float32"), )
paddle.shape(Tensor([7, 79, 512],"float32"), )
paddle.shape(Tensor([3, 118, 512],"float32"), )
paddle.shape(Tensor([5, 51, 512],"float32"), )
paddle.shape(Tensor([10, 174, 512],"float32"), )
paddle.shape(Tensor([8, 140, 512],"float32"), )
paddle.shape(Tensor([8, 47, 512],"float32"), )
paddle.shape(Tensor([3, 99, 512],"float32"), )
paddle.shape(Tensor([4, 128, 44, 44],"float32"), )
paddle.shape(Tensor([1, 229, 512],"float32"), )
paddle.shape(Tensor([7, 64, 512],"float32"), )
paddle.shape(Tensor([4, 175, 512],"float32"), )
paddle.shape(Tensor([1, 232, 512],"float32"), )
paddle.shape(Tensor([4, 96, 30, 30],"float32"), )
paddle.shape(Tensor([4, 122, 512],"float32"), )
paddle.shape(Tensor([1, 256, 45, 36],"float32"), )
paddle.shape(Tensor([6, 44, 512],"float32"), )
paddle.shape(Tensor([10, 37, 512],"float32"), )
paddle.shape(Tensor([5, 94, 512],"float32"), )
paddle.shape(Tensor([4, 78, 512],"float32"), )
paddle.shape(Tensor([2, 115, 512],"float32"), )
paddle.shape(Tensor([1, 204, 512],"float32"), )
paddle.shape(Tensor([6, 139, 512],"float32"), )
paddle.shape(Tensor([2, 160, 512],"float32"), )
paddle.shape(Tensor([8, 233, 512],"float32"), )
paddle.shape(Tensor([1, 160, 40, 40],"float32"), )
paddle.shape(Tensor([6, 45, 512],"float32"), )
paddle.shape(Tensor([9, 114, 512],"float32"), )
paddle.shape(Tensor([6, 174, 512],"float32"), )
paddle.shape(Tensor([5, 145, 512],"float32"), )
paddle.shape(Tensor([10, 129, 512],"float32"), )
paddle.shape(Tensor([7, 167, 512],"float32"), )
paddle.shape(Tensor([1, 199, 512],"float32"), )
paddle.shape(Tensor([1, 208, 512],"float32"), )
paddle.shape(Tensor([6, 101, 512],"float32"), )
paddle.shape(Tensor([5, 101, 512],"float32"), )
paddle.shape(Tensor([8, 27, 512],"float32"), )
paddle.shape(Tensor([5, 107, 512],"float32"), )
paddle.shape(Tensor([3, 151, 512],"float32"), )
paddle.shape(Tensor([2, 187, 512],"float32"), )
paddle.shape(Tensor([9, 41, 512],"float32"), )
paddle.shape(Tensor([6, 150, 512],"float32"), )
paddle.shape(Tensor([10, 55, 512],"float32"), )
paddle.shape(Tensor([4, 2100, 68],"float32"), )
paddle.shape(Tensor([10, 149, 512],"float32"), )
paddle.shape(Tensor([3, 92, 512],"float32"), )
paddle.shape(Tensor([2, 113, 512],"float32"), )
paddle.shape(Tensor([4, 85, 512],"float32"), )
paddle.shape(Tensor([5, 106, 512],"float32"), )
paddle.shape(Tensor([7, 61, 512],"float32"), )
paddle.shape(Tensor([7, 157, 512],"float32"), )
paddle.shape(Tensor([6, 93, 512],"float32"), )
paddle.shape(Tensor([9, 54, 512],"float32"), )
paddle.shape(Tensor([2, 116, 512],"float32"), )
paddle.shape(Tensor([7, 76, 512],"float32"), )
paddle.shape(Tensor([9, 25, 512],"float32"), )
paddle.shape(Tensor([6, 167, 512],"float32"), )
paddle.shape(Tensor([4, 60, 512],"float32"), )
paddle.shape(Tensor([7, 66, 512],"float32"), )
paddle.shape(Tensor([1, 242, 512],"float32"), )
paddle.shape(Tensor([7, 117, 512],"float32"), )
paddle.shape(Tensor([6, 41, 512],"float32"), )
paddle.shape(Tensor([2, 7581, 40],"float32"), )
paddle.shape(Tensor([3, 133, 512],"float32"), )
paddle.shape(Tensor([1, 246, 512],"float32"), )
paddle.shape(Tensor([9, 76, 512],"float32"), )
paddle.shape(Tensor([2, 122, 512],"float32"), )
paddle.shape(Tensor([2, 96, 68, 68],"float32"), )
paddle.shape(Tensor([7, 53, 512],"float32"), )
paddle.shape(Tensor([6, 182, 512],"float32"), )
paddle.shape(Tensor([8, 29, 512],"float32"), )
paddle.shape(Tensor([1, 223, 512],"float32"), )
paddle.shape(Tensor([6, 152, 512],"float32"), )
paddle.shape(Tensor([4, 2541, 68],"float32"), )
paddle.shape(Tensor([7, 44, 512],"float32"), )
paddle.shape(Tensor([7, 99, 512],"float32"), )
paddle.shape(Tensor([8, 218, 512],"float32"), )
paddle.shape(Tensor([10, 146, 512],"float32"), )
paddle.shape(Tensor([10, 28, 512],"float32"), )
paddle.shape(Tensor([8, 144, 512],"float32"), )
paddle.shape(Tensor([2, 2100, 40],"float32"), )
paddle.shape(Tensor([4, 128, 26, 26],"float32"), )
paddle.shape(Tensor([8, 95, 512],"float32"), )
paddle.shape(Tensor([2, 96, 60, 60],"float32"), )
paddle.shape(Tensor([9, 57, 512],"float32"), )
paddle.shape(Tensor([4, 52, 512],"float32"), )
paddle.shape(Tensor([4, 119, 512],"float32"), )
paddle.shape(Tensor([4, 69, 512],"float32"), )
paddle.shape(Tensor([6, 181, 512],"float32"), )
paddle.shape(Tensor([8, 98, 512],"float32"), )
paddle.shape(Tensor([10, 49, 512],"float32"), )
paddle.shape(Tensor([7, 119, 512],"float32"), )
paddle.shape(Tensor([8, 155, 512],"float32"), )
paddle.shape(Tensor([4, 92, 512],"float32"), )
paddle.shape(Tensor([5, 59, 512],"float32"), )
paddle.shape(Tensor([10, 72, 512],"float32"), )
paddle.shape(Tensor([3, 160, 512],"float32"), )
paddle.shape(Tensor([10, 32, 512],"float32"), )
paddle.shape(Tensor([8, 70, 512],"float32"), )
paddle.shape(Tensor([8, 34, 512],"float32"), )
paddle.shape(Tensor([6, 37, 512],"float32"), )
paddle.shape(Tensor([8, 77, 512],"float32"), )
paddle.shape(Tensor([10, 171, 512],"float32"), )
paddle.shape(Tensor([2, 141, 512],"float32"), )
paddle.shape(Tensor([5, 125, 512],"float32"), )
paddle.shape(Tensor([6, 149, 512],"float32"), )
paddle.shape(Tensor([5, 79, 512],"float32"), )
paddle.shape(Tensor([8, 127, 512],"float32"), )
paddle.shape(Tensor([8, 239, 512],"float32"), )
paddle.shape(Tensor([10, 120, 512],"float32"), )
paddle.shape(Tensor([2, 145, 512],"float32"), )
paddle.shape(Tensor([8, 180, 512],"float32"), )
paddle.shape(Tensor([8, 160, 9, 9],"float32"), )
paddle.shape(Tensor([2, 147, 512],"float32"), )
paddle.shape(Tensor([5, 62, 512],"float32"), )
paddle.shape(Tensor([4, 147, 512],"float32"), )
paddle.shape(Tensor([8, 66, 512],"float32"), )
paddle.shape(Tensor([5, 92, 512],"float32"), )
paddle.shape(Tensor([4, 137, 512],"float32"), )
paddle.shape(Tensor([6, 78, 512],"float32"), )
paddle.shape(Tensor([10, 52, 512],"float32"), )
paddle.shape(Tensor([6, 168, 512],"float32"), )
paddle.shape(Tensor([5, 89, 512],"float32"), )
paddle.shape(Tensor([9, 27, 512],"float32"), )
paddle.shape(Tensor([10, 181, 512],"float32"), )
paddle.shape(Tensor([4, 84, 512],"float32"), )
paddle.shape(Tensor([6, 95, 512],"float32"), )
paddle.shape(Tensor([7, 109, 512],"float32"), )
paddle.shape(Tensor([9, 82, 512],"float32"), )
paddle.shape(Tensor([8, 176, 512],"float32"), )
paddle.shape(Tensor([6, 61, 512],"float32"), )
paddle.shape(Tensor([7, 82, 512],"float32"), )
paddle.shape(Tensor([6, 112, 512],"float32"), )
paddle.shape(Tensor([2, 160, 21, 21],"float32"), )
paddle.shape(Tensor([6, 125, 512],"float32"), )
paddle.shape(Tensor([5, 96, 512],"float32"), )
paddle.shape(Tensor([8, 175, 512],"float32"), )
paddle.shape(Tensor([5, 74, 512],"float32"), )
paddle.shape(Tensor([4, 55, 512],"float32"), )
paddle.shape(Tensor([2, 96, 32, 32],"float32"), )
paddle.shape(Tensor([1, 96, 68, 68],"float32"), )
paddle.shape(Tensor([4, 136, 512],"float32"), )
paddle.shape(Tensor([8, 30, 512],"float32"), )
paddle.shape(Tensor([9, 85, 512],"float32"), )
paddle.shape(Tensor([4, 57, 512],"float32"), )
paddle.shape(Tensor([4, 150, 512],"float32"), )
paddle.shape(Tensor([6, 91, 512],"float32"), )
paddle.shape(Tensor([4, 79, 512],"float32"), )
paddle.shape(Tensor([10, 50, 512],"float32"), )
paddle.shape(Tensor([10, 140, 512],"float32"), )
paddle.shape(Tensor([10, 151, 512],"float32"), )
paddle.shape(Tensor([5, 81, 512],"float32"), )
paddle.shape(Tensor([6, 155, 512],"float32"), )
paddle.shape(Tensor([8, 32, 512],"float32"), )
paddle.shape(Tensor([2, 134, 512],"float32"), )
paddle.shape(Tensor([16, 96, 12, 12],"float32"), )
paddle.shape(Tensor([9, 29, 512],"float32"), )
paddle.shape(Tensor([7, 73, 512],"float32"), )
paddle.shape(Tensor([6, 130, 512],"float32"), )
paddle.shape(Tensor([8, 167, 512],"float32"), )
paddle.shape(Tensor([3, 144, 512],"float32"), )
paddle.shape(Tensor([4, 62, 512],"float32"), )
paddle.shape(Tensor([2, 203, 512],"float32"), )
paddle.shape(Tensor([7, 33, 512],"float32"), )
paddle.shape(Tensor([2, 12096, 40],"float32"), )
paddle.shape(Tensor([7, 80, 512],"float32"), )
paddle.shape(Tensor([6, 166, 512],"float32"), )
paddle.shape(Tensor([4, 124, 512],"float32"), )
paddle.shape(Tensor([2, 168, 512],"float32"), )
paddle.shape(Tensor([2, 136, 512],"float32"), )
paddle.shape(Tensor([6, 141, 512],"float32"), )
paddle.shape(Tensor([8, 86, 512],"float32"), )
paddle.shape(Tensor([3, 85, 512],"float32"), )
paddle.shape(Tensor([8, 200, 512],"float32"), )
paddle.shape(Tensor([8, 68, 512],"float32"), )
paddle.shape(Tensor([1, 240, 512],"float32"), )
paddle.shape(Tensor([3, 84, 512],"float32"), )
paddle.shape(Tensor([4, 96, 26, 26],"float32"), )
paddle.shape(Tensor([2, 6804, 68],"float32"), )
paddle.shape(Tensor([9, 73, 512],"float32"), )
paddle.shape(Tensor([5, 105, 512],"float32"), )
paddle.shape(Tensor([10, 172, 512],"float32"), )
paddle.shape(Tensor([9, 86, 512],"float32"), )
paddle.shape(Tensor([8, 76, 512],"float32"), )
paddle.shape(Tensor([7, 96, 512],"float32"), )
paddle.shape(Tensor([5, 49, 512],"float32"), )
paddle.shape(Tensor([7, 78, 512],"float32"), )
paddle.shape(Tensor([6, 132, 512],"float32"), )
paddle.shape(Tensor([8, 153, 512],"float32"), )
paddle.shape(Tensor([8, 160, 20, 20],"float32"), )
paddle.shape(Tensor([8, 148, 512],"float32"), )
paddle.shape(Tensor([1, 243, 512],"float32"), )
paddle.shape(Tensor([2, 155, 512],"float32"), )
paddle.shape(Tensor([2, 138, 512],"float32"), )
paddle.shape(Tensor([1, 237, 512],"float32"), )
paddle.shape(Tensor([7, 86, 512],"float32"), )
paddle.shape(Tensor([8, 126, 512],"float32"), )
paddle.shape(Tensor([5, 136, 512],"float32"), )
paddle.shape(Tensor([6, 160, 512],"float32"), )
paddle.shape(Tensor([2, 160, 42, 42],"float32"), )
paddle.shape(Tensor([7, 163, 512],"float32"), )
paddle.shape(Tensor([10, 96, 512],"float32"), )
paddle.shape(Tensor([7, 43, 512],"float32"), )
paddle.shape(Tensor([4, 123, 512],"float32"), )
paddle.shape(Tensor([2, 100, 512],"float32"), )
paddle.shape(Tensor([3, 153, 512],"float32"), )
paddle.shape(Tensor([4, 159, 512],"float32"), )
paddle.shape(Tensor([7, 170, 512],"float32"), )
paddle.shape(Tensor([2, 161, 512],"float32"), )
paddle.shape(Tensor([8, 227, 512],"float32"), )
paddle.shape(Tensor([4, 96, 512],"float32"), )
paddle.shape(Tensor([5, 66, 512],"float32"), )
paddle.shape(Tensor([8, 50, 512],"float32"), )
paddle.shape(Tensor([2, 160, 38, 38],"float32"), )
paddle.shape(Tensor([6, 169, 512],"float32"), )
paddle.shape(Tensor([4, 141, 512],"float32"), )
paddle.shape(Tensor([5, 47, 512],"float32"), )
paddle.shape(Tensor([7, 161, 512],"float32"), )
paddle.shape(Tensor([2, 157, 512],"float32"), )
paddle.shape(Tensor([4, 102, 512],"float32"), )
paddle.shape(Tensor([8, 93, 512],"float32"), )
paddle.shape(Tensor([2, 148, 512],"float32"), )
paddle.shape(Tensor([6, 90, 512],"float32"), )
paddle.shape(Tensor([6, 170, 512],"float32"), )
paddle.shape(Tensor([2, 98, 512],"float32"), )
paddle.shape(Tensor([7, 81, 512],"float32"), )
paddle.shape(Tensor([6, 86, 512],"float32"), )
paddle.shape(Tensor([6, 177, 512],"float32"), )
paddle.shape(Tensor([10, 89, 512],"float32"), )
paddle.shape(Tensor([9, 90, 512],"float32"), )
paddle.shape(Tensor([3, 95, 512],"float32"), )
paddle.shape(Tensor([10, 33, 512],"float32"), )
paddle.shape(Tensor([10, 60, 512],"float32"), )
paddle.shape(Tensor([10, 107, 512],"float32"), )
paddle.shape(Tensor([4, 63, 512],"float32"), )
paddle.shape(Tensor([8, 83, 512],"float32"), )
paddle.shape(Tensor([2, 96, 64, 64],"float32"), )
paddle.shape(Tensor([10, 80, 512],"float32"), )
paddle.shape(Tensor([3, 98, 512],"float32"), )
paddle.shape(Tensor([2, 164, 512],"float32"), )
paddle.shape(Tensor([6, 145, 512],"float32"), )
paddle.shape(Tensor([3, 69, 512],"float32"), )
paddle.shape(Tensor([2, 162, 512],"float32"), )
paddle.shape(Tensor([5, 112, 512],"float32"), )
paddle.shape(Tensor([7, 148, 512],"float32"), )
paddle.shape(Tensor([9, 87, 512],"float32"), )
paddle.shape(Tensor([1, 231, 512],"float32"), )
paddle.shape(Tensor([6, 140, 512],"float32"), )
paddle.shape(Tensor([6, 137, 512],"float32"), )
paddle.shape(Tensor([8, 231, 512],"float32"), )
paddle.shape(Tensor([9, 93, 512],"float32"), )
paddle.shape(Tensor([8, 186, 512],"float32"), )
paddle.shape(Tensor([8, 156, 512],"float32"), )
paddle.shape(Tensor([2, 199, 512],"float32"), )
paddle.shape(Tensor([7, 55, 512],"float32"), )
paddle.shape(Tensor([4, 178, 512],"float32"), )
paddle.shape(Tensor([8, 223, 512],"float32"), )
paddle.shape(Tensor([9, 116, 512],"float32"), )
paddle.shape(Tensor([2, 2541, 68],"float32"), )
paddle.shape(Tensor([7, 111, 512],"float32"), )
paddle.shape(Tensor([7, 38, 512],"float32"), )
paddle.shape(Tensor([8, 197, 512],"float32"), )
paddle.shape(Tensor([8, 196, 512],"float32"), )
paddle.shape(Tensor([8, 99, 512],"float32"), )
paddle.shape(Tensor([8, 192, 512],"float32"), )
paddle.shape(Tensor([8, 139, 512],"float32"), )
paddle.shape(Tensor([4, 3549, 68],"float32"), )
paddle.shape(Tensor([2, 129, 512],"float32"), )
paddle.shape(Tensor([4, 104, 512],"float32"), )
paddle.shape(Tensor([8, 191, 512],"float32"), )
paddle.shape(Tensor([2, 160, 40, 40],"float32"), )
paddle.shape(Tensor([64, 96, 11, 11],"float32"), )
paddle.shape(Tensor([10, 92, 512],"float32"), )
paddle.shape(Tensor([6, 122, 512],"float32"), )
paddle.shape(Tensor([4, 132, 512],"float32"), )
paddle.shape(Tensor([6, 70, 512],"float32"), )
paddle.shape(Tensor([8, 106, 512],"float32"), )
paddle.shape(Tensor([8, 53, 512],"float32"), )
paddle.shape(Tensor([1, 224, 512],"float32"), )
paddle.shape(Tensor([6, 71, 512],"float32"), )
paddle.shape(Tensor([6, 151, 512],"float32"), )
paddle.shape(Tensor([6, 42, 512],"float32"), )
paddle.shape(Tensor([9, 100, 512],"float32"), )
paddle.shape(Tensor([9, 51, 512],"float32"), )
paddle.shape(Tensor([6, 111, 512],"float32"), )
paddle.shape(Tensor([8, 31, 512],"float32"), )
paddle.shape(Tensor([7, 104, 512],"float32"), )
paddle.shape(Tensor([3, 146, 512],"float32"), )
paddle.shape(Tensor([1, 201, 512],"float32"), )
paddle.shape(Tensor([9, 44, 512],"float32"), )
paddle.shape(Tensor([8, 183, 512],"float32"), )
paddle.shape(Tensor([1, 244, 512],"float32"), )
paddle.shape(Tensor([2, 170, 512],"float32"), )
paddle.shape(Tensor([6, 64, 512],"float32"), )
paddle.shape(Tensor([1, 210, 512],"float32"), )
paddle.shape(Tensor([7, 47, 512],"float32"), )
paddle.shape(Tensor([10, 22, 512],"float32"), )
paddle.shape(Tensor([8, 134, 512],"float32"), )
paddle.shape(Tensor([3, 100, 512],"float32"), )
paddle.shape(Tensor([28800, 4],"float32"), )
paddle.shape(Tensor([8, 38, 512],"float32"), )
paddle.shape(Tensor([5, 138, 512],"float32"), )
paddle.shape(Tensor([5, 54, 512],"float32"), )
paddle.shape(Tensor([10, 166, 512],"float32"), )
paddle.shape(Tensor([2, 186, 512],"float32"), )
paddle.shape(Tensor([7, 146, 512],"float32"), )
paddle.shape(Tensor([1, 247, 512],"float32"), )
paddle.shape(Tensor([8, 162, 512],"float32"), )
paddle.shape(Tensor([9, 105, 512],"float32"), )
paddle.shape(Tensor([5, 84, 512],"float32"), )
paddle.shape(Tensor([9, 109, 512],"float32"), )
paddle.shape(Tensor([1, 206, 512],"float32"), )
paddle.shape(Tensor([7, 95, 512],"float32"), )
paddle.shape(Tensor([2, 169, 512],"float32"), )
paddle.shape(Tensor([8, 137, 512],"float32"), )
paddle.shape(Tensor([8, 35, 512],"float32"), )
paddle.shape(Tensor([2, 158, 512],"float32"), )
paddle.shape(Tensor([16, 32, 20, 11],"complex64"), )
paddle.shape(Tensor([10, 122, 512],"float32"), )
paddle.shape(Tensor([8, 107, 512],"float32"), )
paddle.shape(Tensor([9, 84, 512],"float32"), )
paddle.shape(Tensor([6, 103, 512],"float32"), )
paddle.shape(Tensor([4, 146, 512],"float32"), )
paddle.sign(Tensor([32, 32, 128],"float32"), )
paddle.sign(Tensor([64, 1, 28, 28],"float32"), )
paddle.sign(Tensor([11, 17, 10],"int32"), )
paddle.sign(Tensor([11, 17, 10],"int16"), )
paddle.sign(Tensor([6, 1, 384],"int64"), )
paddle.sign(Tensor([7, 1, 384],"int64"), )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, None, None, None, False, False, True, None, False, )
paddle.signal.istft(Tensor([257, 471],"complex128"), 512, None, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, None, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, 99, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, None, None, None, True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, None, None, None, False, False, True, 1888, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, 99, 299, Tensor([299],"float64"), True, False, True, None, False, )
paddle.signal.stft(Tensor([160000],"float64"), 512, None, None, Tensor([512],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 160000],"float64"), 512, None, None, None, False, "reflect", False, True, )
paddle.signal.stft(Tensor([16, 25500],"float32"), 512, 50, 240, window=Tensor([240],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([16, 25500],"float32"), 1024, 120, 600, window=Tensor([600],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([16, 25500],"float32"), 2048, 240, 1200, window=Tensor([1200],"float32"), center=True, pad_mode="reflect", )
paddle.signal.stft(Tensor([1, 160000],"float64"), 512, 255, 499, Tensor([499],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 160000],"float64"), 512, 255, None, Tensor([512],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 160000],"float64"), 512, None, None, Tensor([512],"float64"), True, "reflect", False, True, )
paddle.signal.stft(Tensor([1, 160000],"float64"), 512, None, None, None, True, "reflect", False, True, )
paddle.signal.stft(Tensor([79949],"float32"), 400, 160, window=Tensor([400],"float32"), )
paddle.signal.stft(n_fft=400, x=Tensor([4410],"float32"), )
paddle.signbit(Tensor([11, 17, 10],"int16"), )
paddle.signbit(Tensor([11, 17, 10],"int32"), )
paddle.sin(Tensor([400, 260],"float32"), )
paddle.sin(Tensor([6512, 50],"float32"), )
paddle.sin(Tensor([17152, 50],"float32"), )
paddle.sin(Tensor([3600, 256],"float32"), )
paddle.sin(Tensor([1500, 384],"float32"), )
paddle.sin(Tensor([1, 8192, 64],"float32"), )
paddle.sin(Tensor([2916, 256],"float32"), )
paddle.sin(Tensor([1, 4096, 1, 64],"float32"), )
paddle.sin(Tensor([1024, 256],"float32"), )
paddle.sin(Tensor([1600, 256],"float32"), )
paddle.sin(Tensor([1500, 512],"float32"), )
paddle.sin(Tensor([1500, 192],"float32"), )
paddle.sin(Tensor([1156, 256],"float32"), )
paddle.sin(Tensor([2304, 256],"float32"), )
paddle.sin(Tensor([2116, 256],"float32"), )
paddle.sin(Tensor([2116, 64],"float32"), )
paddle.sin(Tensor([5000, 192],"float32"), )
paddle.sin(Tensor([1002, 100],"float32"), )
paddle.sin(Tensor([2500, 256],"float32"), )
paddle.sin(Tensor([529, 256],"float32"), )
paddle.sin(Tensor([1500, 640],"float32"), )
paddle.sin(Tensor([8810, 100],"float32"), )
paddle.sin(Tensor([441, 256],"float32"), )
paddle.sin(Tensor([6512, 100],"float32"), )
paddle.sin(Tensor([1, 4096, 1, 128],"float32"), )
paddle.sin(Tensor([576, 256],"float32"), )
paddle.sin(Tensor([3364, 256],"float32"), )
paddle.sin(Tensor([1444, 256],"float32"), )
paddle.sin(Tensor([400, 256],"float32"), )
paddle.sin(Tensor([1500, 256],"float32"), )
paddle.sin(Tensor([4096, 128],"float32"), )
paddle.sin(Tensor([484, 256],"float32"), )
paddle.sin(Tensor([1024, 102],"float32"), )
paddle.sin(Tensor([2304, 64],"float32"), )
paddle.sin(Tensor([1296, 256],"float32"), )
paddle.sin(Tensor([10000, 50],"float32"), )
paddle.sin(Tensor([1764, 256],"float32"), )
paddle.sin(Tensor([1936, 256],"float32"), )
paddle.sin(Tensor([4, 157920, 1],"float32"), )
paddle.sin(Tensor([2, 107136, 1],"float32"), )
paddle.sin(Tensor([6284, 20],"float32"), )
paddle.sin(Tensor([1600, 64],"float32"), )
paddle.sin(Tensor([3136, 256],"float32"), )
paddle.sin(Tensor([2704, 256],"float32"), )
paddle.sin(Tensor([169, 256],"float32"), )
paddle.sin(Tensor([289, 64],"float32"), )
paddle.sin(Tensor([200, 64],"float32"), )
paddle.sin(Tensor([441, 128],"float32"), )
paddle.sin(Tensor([144, 256],"float32"), )
paddle.sin(Tensor([324, 256],"float32"), )
paddle.sin(Tensor([289, 128],"float32"), )
paddle.sin(Tensor([512, 128],"float32"), )
paddle.sin(Tensor([36, 306],"float32"), )
paddle.sin(Tensor([402, 50],"float32"), )
paddle.sin(Tensor([196, 256],"float32"), )
paddle.sin(Tensor([361, 128],"float32"), )
paddle.sin(Tensor([1800, 20],"float32"), )
paddle.sin(Tensor([169, 128],"float32"), )
paddle.sin(Tensor([144, 128],"float32"), )
paddle.sin(Tensor([512, 100],"float32"), )
paddle.sin(Tensor([16800, 1],"float32"), )
paddle.sin(Tensor([1002, 50],"float32"), )
paddle.sin(Tensor([576, 128],"float32"), )
paddle.sin(Tensor([202, 50],"float32"), )
paddle.sin(Tensor([324, 128],"float32"), )
paddle.sin(Tensor([225, 256],"float32"), )
paddle.sin(Tensor([225, 128],"float32"), )
paddle.sin(Tensor([289, 256],"float32"), )
paddle.sin(Tensor([529, 96],"float32"), )
paddle.sin(Tensor([4000, 12],"float32"), )
paddle.sin(Tensor([256, 256],"float32"), )
paddle.sin(Tensor([4004, 12],"float32"), )
paddle.sin(Tensor([400, 128],"float32"), )
paddle.sin(Tensor([202, 100],"float32"), )
paddle.sin(Tensor([196, 128],"float32"), )
paddle.sin(Tensor([225, 64],"float32"), )
paddle.sin(Tensor([400, 64],"float32"), )
paddle.sin(Tensor([200, 128],"float32"), )
paddle.sin(Tensor([512, 50],"float32"), )
paddle.sin(Tensor([121, 128],"float32"), )
paddle.sin(Tensor([100, 256],"float32"), )
paddle.sin(Tensor([400, 234],"float32"), )
paddle.sin(Tensor([1000, 10],"float32"), )
paddle.sin(Tensor([400, 180],"float32"), )
paddle.sin(Tensor([100, 128],"float32"), )
paddle.sin(Tensor([256, 128],"float32"), )
paddle.sin(Tensor([2885, 20],"float32"), )
paddle.sin(Tensor([361, 256],"float32"), )
paddle.sin(Tensor([484, 128],"float32"), )
paddle.sin(Tensor([400, 96],"float32"), )
paddle.sin(Tensor([256, 100],"float32"), )
paddle.sin(Tensor([22120, 1],"float32"), )
paddle.sin(Tensor([502, 100],"float32"), )
paddle.sin(Tensor([529, 64],"float32"), )
paddle.sin(Tensor([196, 192],"float32"), )
paddle.sin(Tensor([402, 100],"float32"), )
paddle.sin(Tensor([256, 50],"float32"), )
paddle.sin(Tensor([121, 256],"float32"), )
paddle.sin(Tensor([256, 64],"float32"), )
paddle.sin(Tensor([2048, 32],"float32"), )
paddle.sin(Tensor([502, 50],"float32"), )
paddle.sin(Tensor([529, 128],"float32"), )
paddle.sin(Tensor([4096, 1],"float32"), )
paddle.sin(Tensor([454, 12],"float32"), )
paddle.sin(Tensor([8, 16, 32],"complex128"), )
paddle.sin(Tensor([250, 30],"float32"), )
paddle.sin(Tensor([512, 8],"float32"), )
paddle.sin(Tensor([50, 128],"float32"), )
paddle.sin(Tensor([100, 20],"float32"), )
paddle.sin(Tensor([8, 16, 32],"float32"), )
paddle.sin(Tensor([1, 128, 1, 32],"float32"), )
paddle.sin(Tensor([256, 30],"float32"), )
paddle.sin(Tensor([2048, 1],"float32"), )
paddle.sin(Tensor([4800, 1],"float32"), )
paddle.sin(Tensor([450, 12],"float32"), )
paddle.sin(Tensor([8192, 1],"float32"), )
paddle.sin(Tensor([8000, 1],"float32"), )
paddle.sin(Tensor([8, 16, 32],"complex64"), )
paddle.sin(Tensor([512, 16],"float32"), )
paddle.sin(Tensor([8, 16, 32],"float64"), )
paddle.sin(Tensor([64, 50],"float32"), )
paddle.sin(x=Tensor([30, 128],"float32"), )
paddle.sin(Tensor([2048, 2],"float32"), )
paddle.sinc(Tensor([16, 64],"float64"), )
paddle.sinc(Tensor([16, 64],"float32"), )
paddle.sinh(Tensor([8, 16, 32],"complex128"), )
paddle.sinh(Tensor([8, 16, 32],"complex64"), )
paddle.sinh(Tensor([8, 16, 32],"float32"), )
paddle.sinh(Tensor([8, 16, 32],"float64"), )
paddle.slice(Tensor([332879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299063],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268998],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329415],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303381],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397311],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([352697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301055],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300976],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327536],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291244],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187630],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220309],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364889],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246903],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260810],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339019],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([195927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202054],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259869],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356256],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235619],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244121],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300591],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335320],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274368],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([397300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278250],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196294],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242631],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([254790],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245405],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269422],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348806],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354107],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([352406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260898],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236145],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242093],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([273195],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([312769],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324568],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214612],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([355227],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201202],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([253248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276292],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255783],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([224047],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([342187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385223],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270393],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([353988],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261046],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234774],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303492],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242526],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216356],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310643],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302040],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219409],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([277021],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241588],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368937],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256105],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386461],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235733],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268193],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([283686],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([263723],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([313053],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330175],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303197],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217166],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216922],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220856],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268871],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367585],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245203],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([203473],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215725],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216804],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239037],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294503],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242512],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340292],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195516],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284833],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293959],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339716],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300850],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245370],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240961],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223268],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294930],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([314240],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257234],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310667],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358467],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248763],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([320594],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257337],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294465],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199629],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367535],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242515],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([348782],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331142],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329595],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199032],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311228],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364797],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233551],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([343190],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294269],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310850],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204358],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259649],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([227592],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275486],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358342],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243312],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285109],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310487],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232007],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268739],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248584],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363351],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([395032],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349069],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([169584],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242394],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241467],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319959],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233779],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([231951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386186],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239059],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([216964],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215891],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397101],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212073],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([197432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375642],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([182115],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204352],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([170745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239289],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([330047],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213847],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([254371],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228805],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([205784],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338980],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299420],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([406257],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349361],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282293],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262219],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266366],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([211897],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([194661],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214595],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293179],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([398329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([323234],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250855],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([363993],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([310017],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([387617],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312430],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216139],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342988],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275485],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277319],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216420],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261912],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343461],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215500],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257223],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196293],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259370],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342419],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242578],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([371513],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([339827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302845],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205757],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292700],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285140],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375695],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214631],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347663],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201287],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349363],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335008],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285557],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220477],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([437477],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([321675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217084],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([368761],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255428],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342211],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215236],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241653],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([101950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240064],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([292971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215968],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245010],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290471],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239160],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308000],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293778],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([247296],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310897],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374847],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259436],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291032],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269050],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([193432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285339],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([219947],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214448],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292411],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([103565],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([271592],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285748],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357383],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301687],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242258],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285292],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339169],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([263965],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([264632],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328499],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261575],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([367149],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([268523],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290545],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355940],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([318217],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329151],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290973],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223020],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241637],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([451002],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239036],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([208467],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261359],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218955],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([215372],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214626],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260332],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324869],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329819],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358198],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214498],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261236],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221771],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([237077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([193006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303652],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([181847],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310760],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([258619],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348380],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293524],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293234],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321298],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([158439],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368820],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([313067],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202513],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300521],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233663],"int32"), axes=list[0,], starts=list[0,], ends=list[128,], )
paddle.slice(Tensor([294953],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261692],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376554],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285123],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285702],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364209],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286230],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300527],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228389],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187145],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199671],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300969],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406806],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168376],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187426],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310346],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float64"), Tensor([8, 6, 3, 2],"float64"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 6, 3, 9],"float32"), Tensor([8, 6, 3, 2],"float32"), axes=list[3,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.split(Tensor([180, 3584],"float32"), num_or_sections=list[4,92,24,4,4,52,], axis=0, )
paddle.split(Tensor([172, 3584],"float32"), num_or_sections=list[0,96,4,4,36,32,], axis=0, )
paddle.split(Tensor([172, 3584],"float32"), num_or_sections=list[56,16,92,4,4,0,], axis=0, )
paddle.split(Tensor([116, 7168],"float32"), num_or_sections=list[48,36,8,4,12,8,], axis=0, )
paddle.split(Tensor([104, 7168],"float32"), num_or_sections=list[4,4,60,32,0,4,], axis=0, )
paddle.split(Tensor([64, 3584],"float32"), num_or_sections=list[8,36,16,0,0,4,], axis=0, )
paddle.split(Tensor([96, 3584],"float32"), num_or_sections=list[24,16,8,40,4,4,], axis=0, )
paddle.split(Tensor([92, 3584],"float32"), num_or_sections=list[44,12,4,12,4,16,], axis=0, )
paddle.split(Tensor([68, 7168],"float32"), num_or_sections=list[52,0,0,0,0,16,], axis=0, )
paddle.split(Tensor([128, 7168],"float32"), num_or_sections=list[36,4,4,4,72,8,], axis=0, )
paddle.split(Tensor([156, 3584],"float32"), num_or_sections=list[48,4,64,4,4,32,], axis=0, )
paddle.split(Tensor([92, 7168],"float32"), num_or_sections=list[4,12,0,4,28,44,], axis=0, )
paddle.split(Tensor([128, 7168],"float32"), num_or_sections=list[4,64,4,40,12,4,], axis=0, )
paddle.split(Tensor([272, 3584],"float32"), num_or_sections=list[172,24,0,4,4,68,], axis=0, )
paddle.split(Tensor([124, 3584],"float32"), num_or_sections=list[24,60,4,4,28,4,], axis=0, )
paddle.split(Tensor([104, 7168],"float32"), num_or_sections=list[0,4,0,4,0,96,], axis=0, )
paddle.split(Tensor([92, 3584],"float32"), num_or_sections=list[4,8,8,32,8,32,], axis=0, )
paddle.split(Tensor([100, 3584],"float32"), num_or_sections=list[20,24,8,8,16,24,], axis=0, )
paddle.split(Tensor([64, 3584],"float32"), num_or_sections=list[28,4,8,12,8,4,], axis=0, )
paddle.split(Tensor([100, 3584],"float32"), num_or_sections=list[4,48,16,8,24,0,], axis=0, )
paddle.split(Tensor([140, 3584],"float32"), num_or_sections=list[4,16,8,20,80,12,], axis=0, )
paddle.split(Tensor([140, 3584],"float32"), num_or_sections=list[64,4,16,20,32,4,], axis=0, )
paddle.split(Tensor([36, 7168],"float32"), num_or_sections=list[16,0,0,4,12,4,], axis=0, )
paddle.split(Tensor([68, 3584],"float32"), num_or_sections=list[4,4,4,4,8,44,], axis=0, )
paddle.split(Tensor([64, 3584],"float32"), num_or_sections=list[4,8,4,24,20,4,], axis=0, )
paddle.split(Tensor([72, 3584],"float32"), num_or_sections=list[0,44,4,4,16,4,], axis=0, )
paddle.split(Tensor([92, 3584],"float32"), num_or_sections=list[12,64,0,0,4,12,], axis=0, )
paddle.split(Tensor([108, 7168],"float32"), num_or_sections=list[0,76,4,4,24,0,], axis=0, )
paddle.split(Tensor([168, 3584],"float32"), num_or_sections=list[8,8,0,4,0,148,], axis=0, )
paddle.split(Tensor([112, 3584],"float32"), num_or_sections=list[8,8,12,28,52,4,], axis=0, )
paddle.split(Tensor([84, 3584],"float32"), num_or_sections=list[4,4,4,32,8,32,], axis=0, )
paddle.split(Tensor([60, 7168],"float32"), num_or_sections=list[12,12,28,0,4,4,], axis=0, )
paddle.split(Tensor([144, 3584],"float32"), num_or_sections=list[56,4,4,0,4,76,], axis=0, )
paddle.split(Tensor([100, 7168],"float32"), num_or_sections=list[32,8,4,48,4,4,], axis=0, )
paddle.split(Tensor([140, 3584],"float32"), num_or_sections=list[4,0,4,64,60,8,], axis=0, )
paddle.split(Tensor([92, 7168],"float32"), num_or_sections=list[4,0,44,24,12,8,], axis=0, )
paddle.split(Tensor([56, 7168],"float32"), num_or_sections=list[4,24,0,20,4,4,], axis=0, )
paddle.split(Tensor([48, 7168],"float32"), num_or_sections=list[16,4,8,12,8,0,], axis=0, )
paddle.split(Tensor([88, 3584],"float32"), num_or_sections=list[0,8,44,4,32,0,], axis=0, )
paddle.split(Tensor([60, 3584],"float32"), num_or_sections=list[4,4,20,0,8,24,], axis=0, )
paddle.split(Tensor([152, 3584],"float32"), num_or_sections=list[36,4,0,92,16,4,], axis=0, )
paddle.split(Tensor([116, 7168],"float32"), num_or_sections=list[8,12,8,84,0,4,], axis=0, )
paddle.split(Tensor([44, 7168],"float32"), num_or_sections=list[4,8,8,20,0,4,], axis=0, )
paddle.split(Tensor([92, 7168],"float32"), num_or_sections=list[40,4,0,24,4,20,], axis=0, )
paddle.split(Tensor([84, 3584],"float32"), num_or_sections=list[12,4,4,32,12,20,], axis=0, )
paddle.split(Tensor([104, 3584],"float32"), num_or_sections=list[24,4,0,56,0,20,], axis=0, )
paddle.split(Tensor([44, 7168],"float32"), num_or_sections=list[0,20,16,0,4,4,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[32,28,4,4,40,4,], axis=0, )
paddle.split(Tensor([40, 3584],"float32"), num_or_sections=list[4,4,20,4,4,4,], axis=0, )
paddle.split(Tensor([80, 3584],"float32"), num_or_sections=list[24,52,0,0,0,4,], axis=0, )
paddle.split(Tensor([92, 7168],"float32"), num_or_sections=list[4,32,52,0,0,4,], axis=0, )
paddle.split(Tensor([112, 3584],"float32"), num_or_sections=list[4,0,0,0,40,68,], axis=0, )
paddle.split(Tensor([64, 7168],"float32"), num_or_sections=list[4,4,12,44,0,0,], axis=0, )
paddle.split(Tensor([36, 7168],"float32"), num_or_sections=list[8,0,8,4,12,4,], axis=0, )
paddle.split(Tensor([40, 3584],"float32"), num_or_sections=list[12,0,4,16,4,4,], axis=0, )
paddle.split(Tensor([112, 3584],"float32"), num_or_sections=list[8,0,96,4,4,0,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[40,48,4,4,12,4,], axis=0, )
paddle.split(Tensor([140, 3584],"float32"), num_or_sections=list[8,12,64,48,4,4,], axis=0, )
paddle.split(Tensor([108, 3584],"float32"), num_or_sections=list[8,4,4,68,4,20,], axis=0, )
paddle.split(Tensor([84, 7168],"float32"), num_or_sections=list[4,4,4,4,20,48,], axis=0, )
paddle.split(Tensor([108, 3584],"float32"), num_or_sections=list[16,0,24,28,4,36,], axis=0, )
paddle.split(Tensor([160, 3584],"float32"), num_or_sections=list[0,0,24,128,4,4,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[4,0,4,24,8,32,], axis=0, )
paddle.split(Tensor([244, 3584],"float32"), num_or_sections=list[96,8,0,4,132,4,], axis=0, )
paddle.split(Tensor([40, 3584],"float32"), num_or_sections=list[20,0,4,4,12,0,], axis=0, )
paddle.split(Tensor([152, 3584],"float32"), num_or_sections=list[24,36,64,12,4,12,], axis=0, )
paddle.split(Tensor([252, 3584],"float32"), num_or_sections=list[108,4,68,44,28,0,], axis=0, )
paddle.split(Tensor([80, 7168],"float32"), num_or_sections=list[0,20,4,32,20,4,], axis=0, )
paddle.split(Tensor([236, 3584],"float32"), num_or_sections=list[4,8,104,4,60,56,], axis=0, )
paddle.split(Tensor([256, 3584],"float32"), num_or_sections=list[216,8,4,4,20,4,], axis=0, )
paddle.split(Tensor([164, 3584],"float32"), num_or_sections=list[128,4,8,4,12,8,], axis=0, )
paddle.split(Tensor([76, 7168],"float32"), num_or_sections=list[8,56,0,4,8,0,], axis=0, )
paddle.split(Tensor([76, 3584],"float32"), num_or_sections=list[0,4,32,12,0,28,], axis=0, )
paddle.split(Tensor([96, 3584],"float32"), num_or_sections=list[32,4,40,12,4,4,], axis=0, )
paddle.split(Tensor([80, 3584],"float32"), num_or_sections=list[0,8,0,4,64,4,], axis=0, )
paddle.split(Tensor([200, 3584],"float32"), num_or_sections=list[128,60,4,4,0,4,], axis=0, )
paddle.split(Tensor([76, 3584],"float32"), num_or_sections=list[40,4,4,4,12,12,], axis=0, )
paddle.split(Tensor([156, 3584],"float32"), num_or_sections=list[4,76,52,4,0,20,], axis=0, )
paddle.split(Tensor([96, 3584],"float32"), num_or_sections=list[12,4,56,12,8,4,], axis=0, )
paddle.split(Tensor([60, 3584],"float32"), num_or_sections=list[4,12,4,0,0,40,], axis=0, )
paddle.split(Tensor([212, 3584],"float32"), num_or_sections=list[116,4,4,68,4,16,], axis=0, )
paddle.split(Tensor([116, 7168],"float32"), num_or_sections=list[4,20,0,4,4,84,], axis=0, )
paddle.split(Tensor([104, 3584],"float32"), num_or_sections=list[4,0,8,8,4,80,], axis=0, )
paddle.split(Tensor([116, 7168],"float32"), num_or_sections=list[44,4,32,0,4,32,], axis=0, )
paddle.split(Tensor([160, 3584],"float32"), num_or_sections=list[4,0,36,64,8,48,], axis=0, )
paddle.split(Tensor([52, 7168],"float32"), num_or_sections=list[28,0,8,8,4,4,], axis=0, )
paddle.split(Tensor([176, 3584],"float32"), num_or_sections=list[112,32,4,4,0,24,], axis=0, )
paddle.split(Tensor([96, 3584],"float32"), num_or_sections=list[4,16,4,40,8,24,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[4,4,4,52,20,28,], axis=0, )
paddle.split(Tensor([132, 7168],"float32"), num_or_sections=list[4,108,0,8,4,8,], axis=0, )
paddle.split(Tensor([124, 3584],"float32"), num_or_sections=list[4,32,32,4,52,0,], axis=0, )
paddle.split(Tensor([60, 7168],"float32"), num_or_sections=list[4,4,12,32,0,8,], axis=0, )
paddle.split(Tensor([136, 3584],"float32"), num_or_sections=list[4,4,20,60,4,44,], axis=0, )
paddle.split(Tensor([116, 3584],"float32"), num_or_sections=list[4,48,4,4,4,52,], axis=0, )
paddle.split(Tensor([184, 3584],"float32"), num_or_sections=list[144,0,4,20,4,12,], axis=0, )
paddle.split(Tensor([136, 7168],"float32"), num_or_sections=list[0,0,4,4,88,40,], axis=0, )
paddle.split(Tensor([60, 3584],"float32"), num_or_sections=list[8,4,4,24,16,4,], axis=0, )
paddle.split(Tensor([132, 7168],"float32"), num_or_sections=list[0,4,8,68,48,4,], axis=0, )
paddle.split(Tensor([64, 3584],"float32"), num_or_sections=list[4,4,8,16,24,8,], axis=0, )
paddle.split(Tensor([124, 3584],"float32"), num_or_sections=list[4,4,4,44,44,24,], axis=0, )
paddle.split(Tensor([56, 3584],"float32"), num_or_sections=list[16,0,28,4,4,4,], axis=0, )
paddle.split(Tensor([116, 3584],"float32"), num_or_sections=list[20,4,76,4,4,8,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[8,4,40,8,4,32,], axis=0, )
paddle.split(Tensor([140, 3584],"float32"), num_or_sections=list[0,44,4,12,4,76,], axis=0, )
paddle.split(Tensor([228, 3584],"float32"), num_or_sections=list[64,52,60,0,4,48,], axis=0, )
paddle.split(Tensor([148, 3584],"float32"), num_or_sections=list[68,4,24,44,4,4,], axis=0, )
paddle.split(Tensor([88, 7168],"float32"), num_or_sections=list[8,28,4,28,12,8,], axis=0, )
paddle.split(Tensor([104, 7168],"float32"), num_or_sections=list[4,20,8,40,28,4,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[48,16,4,4,0,0,], axis=0, )
paddle.split(Tensor([120, 3584],"float32"), num_or_sections=list[64,44,4,4,0,4,], axis=0, )
paddle.split(Tensor([120, 7168],"float32"), num_or_sections=list[60,0,4,4,0,52,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[68,8,12,4,0,4,], axis=0, )
paddle.split(Tensor([200, 3584],"float32"), num_or_sections=list[0,20,56,60,0,64,], axis=0, )
paddle.split(Tensor([100, 7168],"float32"), num_or_sections=list[52,4,12,24,0,8,], axis=0, )
paddle.split(Tensor([136, 7168],"float32"), num_or_sections=list[0,48,4,4,64,16,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[4,0,24,4,0,80,], axis=0, )
paddle.split(Tensor([80, 3584],"float32"), num_or_sections=list[8,4,8,0,52,8,], axis=0, )
paddle.split(Tensor([152, 3584],"float32"), num_or_sections=list[76,0,12,4,16,44,], axis=0, )
paddle.split(Tensor([132, 3584],"float32"), num_or_sections=list[24,52,48,4,4,0,], axis=0, )
paddle.split(Tensor([204, 3584],"float32"), num_or_sections=list[4,0,0,80,0,120,], axis=0, )
paddle.split(Tensor([216, 3584],"float32"), num_or_sections=list[60,12,4,36,4,100,], axis=0, )
paddle.split(Tensor([24, 7168],"float32"), num_or_sections=list[0,12,0,4,4,4,], axis=0, )
paddle.split(Tensor([180, 3584],"float32"), num_or_sections=list[0,4,148,0,24,4,], axis=0, )
paddle.split(Tensor([60, 3584],"float32"), num_or_sections=list[4,12,12,8,20,4,], axis=0, )
paddle.split(Tensor([136, 3584],"float32"), num_or_sections=list[12,56,4,40,4,20,], axis=0, )
paddle.split(Tensor([144, 3584],"float32"), num_or_sections=list[80,4,24,16,16,4,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[12,36,56,0,4,4,], axis=0, )
paddle.split(Tensor([64, 7168],"float32"), num_or_sections=list[4,8,20,12,4,16,], axis=0, )
paddle.split(Tensor([128, 7168],"float32"), num_or_sections=list[4,8,8,12,60,36,], axis=0, )
paddle.split(Tensor([144, 3584],"float32"), num_or_sections=list[4,20,4,4,112,0,], axis=0, )
paddle.split(Tensor([92, 3584],"float32"), num_or_sections=list[4,4,12,12,56,4,], axis=0, )
paddle.split(Tensor([80, 3584],"float32"), num_or_sections=list[52,8,12,4,0,4,], axis=0, )
paddle.split(Tensor([88, 7168],"float32"), num_or_sections=list[4,8,60,4,8,4,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[4,20,4,52,0,16,], axis=0, )
paddle.split(Tensor([100, 7168],"float32"), num_or_sections=list[60,4,4,8,8,16,], axis=0, )
paddle.split(Tensor([172, 3584],"float32"), num_or_sections=list[48,4,4,36,76,4,], axis=0, )
paddle.split(Tensor([60, 7168],"float32"), num_or_sections=list[16,4,20,0,4,16,], axis=0, )
paddle.split(Tensor([168, 3584],"float32"), num_or_sections=list[4,68,28,0,0,68,], axis=0, )
paddle.split(Tensor([104, 7168],"float32"), num_or_sections=list[12,60,0,4,24,4,], axis=0, )
paddle.split(Tensor([60, 3584],"float32"), num_or_sections=list[8,8,24,4,4,12,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[32,4,12,4,44,0,], axis=0, )
paddle.split(Tensor([104, 7168],"float32"), num_or_sections=list[4,12,4,4,12,68,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[4,8,72,0,8,4,], axis=0, )
paddle.split(Tensor([156, 3584],"float32"), num_or_sections=list[4,0,4,20,4,124,], axis=0, )
paddle.split(Tensor([116, 3584],"float32"), num_or_sections=list[4,4,20,4,52,32,], axis=0, )
paddle.split(Tensor([140, 3584],"float32"), num_or_sections=list[0,4,56,36,36,8,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[12,4,0,4,64,12,], axis=0, )
paddle.split(Tensor([116, 3584],"float32"), num_or_sections=list[4,12,72,4,20,4,], axis=0, )
paddle.split(Tensor([136, 7168],"float32"), num_or_sections=list[0,12,24,4,4,92,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[48,4,56,0,4,0,], axis=0, )
paddle.split(Tensor([112, 3584],"float32"), num_or_sections=list[4,4,20,4,72,8,], axis=0, )
paddle.split(Tensor([192, 3584],"float32"), num_or_sections=list[60,4,28,16,72,12,], axis=0, )
paddle.split(Tensor([168, 3584],"float32"), num_or_sections=list[0,56,0,4,104,4,], axis=0, )
paddle.split(Tensor([52, 3584],"float32"), num_or_sections=list[12,20,4,0,4,12,], axis=0, )
paddle.split(Tensor([116, 7168],"float32"), num_or_sections=list[40,12,0,0,4,60,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[0,28,0,8,4,32,], axis=0, )
paddle.split(Tensor([112, 3584],"float32"), num_or_sections=list[12,4,4,24,60,8,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[40,4,24,20,4,4,], axis=0, )
paddle.split(Tensor([120, 7168],"float32"), num_or_sections=list[48,4,28,8,24,8,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[8,24,8,12,4,16,], axis=0, )
paddle.split(Tensor([136, 7168],"float32"), num_or_sections=list[8,8,104,4,8,4,], axis=0, )
paddle.split(Tensor([116, 7168],"float32"), num_or_sections=list[48,52,4,4,8,0,], axis=0, )
paddle.split(Tensor([80, 7168],"float32"), num_or_sections=list[4,12,0,52,8,4,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[20,0,0,52,0,0,], axis=0, )
paddle.split(Tensor([136, 3584],"float32"), num_or_sections=list[0,36,4,4,88,4,], axis=0, )
paddle.split(Tensor([72, 3584],"float32"), num_or_sections=list[4,8,4,4,0,52,], axis=0, )
paddle.split(Tensor([244, 3584],"float32"), num_or_sections=list[0,0,212,0,28,4,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[4,12,4,16,72,4,], axis=0, )
paddle.split(Tensor([172, 3584],"float32"), num_or_sections=list[96,0,56,8,4,8,], axis=0, )
paddle.split(Tensor([180, 3584],"float32"), num_or_sections=list[84,4,4,24,64,0,], axis=0, )
paddle.split(Tensor([120, 7168],"float32"), num_or_sections=list[4,0,4,0,56,56,], axis=0, )
paddle.split(Tensor([64, 3584],"float32"), num_or_sections=list[0,8,20,28,4,4,], axis=0, )
paddle.split(Tensor([44, 7168],"float32"), num_or_sections=list[4,16,0,8,12,4,], axis=0, )
paddle.split(Tensor([176, 3584],"float32"), num_or_sections=list[68,0,96,4,4,4,], axis=0, )
paddle.split(Tensor([80, 7168],"float32"), num_or_sections=list[0,48,16,12,4,0,], axis=0, )
paddle.split(Tensor([224, 3584],"float32"), num_or_sections=list[8,12,16,68,8,112,], axis=0, )
paddle.split(Tensor([32, 3584],"float32"), num_or_sections=list[0,12,0,0,8,12,], axis=0, )
paddle.split(Tensor([72, 3584],"float32"), num_or_sections=list[20,12,4,12,20,4,], axis=0, )
paddle.split(Tensor([92, 3584],"float32"), num_or_sections=list[4,4,52,20,4,8,], axis=0, )
paddle.split(Tensor([72, 3584],"float32"), num_or_sections=list[4,12,8,44,0,4,], axis=0, )
paddle.split(Tensor([60, 7168],"float32"), num_or_sections=list[24,4,8,12,4,8,], axis=0, )
paddle.split(Tensor([108, 3584],"float32"), num_or_sections=list[4,8,4,68,20,4,], axis=0, )
paddle.split(Tensor([132, 7168],"float32"), num_or_sections=list[72,4,16,4,32,4,], axis=0, )
paddle.split(Tensor([76, 7168],"float32"), num_or_sections=list[4,4,8,8,8,44,], axis=0, )
paddle.split(Tensor([88, 7168],"float32"), num_or_sections=list[4,40,4,4,8,28,], axis=0, )
paddle.split(Tensor([124, 3584],"float32"), num_or_sections=list[4,4,96,12,4,4,], axis=0, )
paddle.split(Tensor([36, 3584],"float32"), num_or_sections=list[0,0,0,32,4,0,], axis=0, )
paddle.split(Tensor([108, 3584],"float32"), num_or_sections=list[4,4,56,36,4,4,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[4,8,4,20,24,52,], axis=0, )
paddle.split(Tensor([136, 3584],"float32"), num_or_sections=list[0,60,4,28,4,40,], axis=0, )
paddle.split(Tensor([76, 7168],"float32"), num_or_sections=list[28,40,4,0,0,4,], axis=0, )
paddle.split(Tensor([100, 3584],"float32"), num_or_sections=list[52,16,4,4,0,24,], axis=0, )
paddle.split(Tensor([104, 3584],"float32"), num_or_sections=list[20,4,16,4,60,0,], axis=0, )
paddle.split(Tensor([124, 7168],"float32"), num_or_sections=list[8,16,84,8,4,4,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[60,4,4,4,4,20,], axis=0, )
paddle.split(Tensor([76, 3584],"float32"), num_or_sections=list[24,0,48,4,0,0,], axis=0, )
paddle.split(Tensor([136, 7168],"float32"), num_or_sections=list[128,4,0,0,4,0,], axis=0, )
paddle.split(Tensor([100, 7168],"float32"), num_or_sections=list[28,4,12,56,0,0,], axis=0, )
paddle.split(Tensor([88, 7168],"float32"), num_or_sections=list[0,24,44,0,16,4,], axis=0, )
paddle.split(Tensor([72, 3584],"float32"), num_or_sections=list[8,4,0,8,36,16,], axis=0, )
paddle.split(Tensor([132, 3584],"float32"), num_or_sections=list[4,0,16,0,112,0,], axis=0, )
paddle.split(Tensor([120, 3584],"float32"), num_or_sections=list[24,4,40,4,44,4,], axis=0, )
paddle.split(Tensor([92, 3584],"float32"), num_or_sections=list[76,16,0,0,0,0,], axis=0, )
paddle.split(Tensor([88, 3584],"float32"), num_or_sections=list[4,20,36,4,20,4,], axis=0, )
paddle.split(Tensor([224, 3584],"float32"), num_or_sections=list[8,0,88,120,4,4,], axis=0, )
paddle.split(Tensor([64, 3584],"float32"), num_or_sections=list[4,16,4,24,16,0,], axis=0, )
paddle.split(Tensor([32, 7168],"float32"), num_or_sections=list[8,4,4,12,4,0,], axis=0, )
paddle.split(Tensor([64, 7168],"float32"), num_or_sections=list[4,12,16,4,16,12,], axis=0, )
paddle.split(Tensor([104, 3584],"float32"), num_or_sections=list[0,20,36,16,28,4,], axis=0, )
paddle.split(Tensor([188, 3584],"float32"), num_or_sections=list[28,4,36,20,96,4,], axis=0, )
paddle.split(Tensor([136, 3584],"float32"), num_or_sections=list[0,108,4,4,20,0,], axis=0, )
paddle.split(Tensor([112, 3584],"float32"), num_or_sections=list[48,4,4,44,0,12,], axis=0, )
paddle.split(Tensor([68, 3584],"float32"), num_or_sections=list[8,12,4,24,8,12,], axis=0, )
paddle.split(Tensor([152, 3584],"float32"), num_or_sections=list[4,68,4,32,32,12,], axis=0, )
paddle.split(Tensor([104, 7168],"float32"), num_or_sections=list[4,0,28,60,8,4,], axis=0, )
paddle.split(Tensor([104, 3584],"float32"), num_or_sections=list[36,40,4,12,8,4,], axis=0, )
paddle.split(Tensor([48, 7168],"float32"), num_or_sections=list[4,4,24,8,4,4,], axis=0, )
paddle.split(Tensor([92, 3584],"float32"), num_or_sections=list[4,0,32,8,0,48,], axis=0, )
paddle.split(Tensor([80, 3584],"float32"), num_or_sections=list[4,12,20,4,28,12,], axis=0, )
paddle.split(Tensor([48, 3584],"float32"), num_or_sections=list[12,4,12,8,4,8,], axis=0, )
paddle.split(Tensor([252, 3584],"float32"), num_or_sections=list[4,4,0,236,4,4,], axis=0, )
paddle.split(Tensor([68, 3584],"float32"), num_or_sections=list[0,16,20,8,4,20,], axis=0, )
paddle.split(Tensor([68, 3584],"float32"), num_or_sections=list[16,4,40,4,0,4,], axis=0, )
paddle.split(Tensor([260, 3584],"float32"), num_or_sections=list[76,4,104,4,8,64,], axis=0, )
paddle.split(Tensor([124, 7168],"float32"), num_or_sections=list[56,60,4,0,0,4,], axis=0, )
paddle.split(Tensor([80, 7168],"float32"), num_or_sections=list[28,0,44,0,4,4,], axis=0, )
paddle.split(Tensor([76, 7168],"float32"), num_or_sections=list[0,40,4,4,20,8,], axis=0, )
paddle.split(Tensor([104, 3584],"float32"), num_or_sections=list[0,40,4,52,8,0,], axis=0, )
paddle.split(Tensor([100, 7168],"float32"), num_or_sections=list[40,36,8,4,8,4,], axis=0, )
paddle.split(Tensor([116, 3584],"float32"), num_or_sections=list[24,28,48,4,4,8,], axis=0, )
paddle.split(Tensor([92, 7168],"float32"), num_or_sections=list[8,0,4,64,4,12,], axis=0, )
paddle.split(Tensor([104, 3584],"float32"), num_or_sections=list[8,44,0,4,44,4,], axis=0, )
paddle.split(Tensor([124, 3584],"float32"), num_or_sections=list[96,4,0,4,16,4,], axis=0, )
paddle.split(Tensor([84, 7168],"float32"), num_or_sections=list[28,4,16,12,4,20,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[4,4,28,4,4,28,], axis=0, )
paddle.split(Tensor([84, 3584],"float32"), num_or_sections=list[4,24,48,8,0,0,], axis=0, )
paddle.split(Tensor([24, 7168],"float32"), num_or_sections=list[4,0,4,8,8,0,], axis=0, )
paddle.split(Tensor([124, 7168],"float32"), num_or_sections=list[72,4,8,4,0,36,], axis=0, )
paddle.split(Tensor([52, 7168],"float32"), num_or_sections=list[20,16,4,0,8,4,], axis=0, )
paddle.split(Tensor([192, 3584],"float32"), num_or_sections=list[56,56,4,4,68,4,], axis=0, )
paddle.split(Tensor([92, 7168],"float32"), num_or_sections=list[0,72,4,0,16,0,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[16,8,44,24,4,0,], axis=0, )
paddle.split(Tensor([144, 3584],"float32"), num_or_sections=list[4,4,0,32,4,100,], axis=0, )
paddle.split(Tensor([132, 3584],"float32"), num_or_sections=list[52,4,8,12,36,20,], axis=0, )
paddle.split(Tensor([100, 3584],"float32"), num_or_sections=list[28,8,4,8,4,48,], axis=0, )
paddle.split(Tensor([120, 3584],"float32"), num_or_sections=list[20,4,88,0,4,4,], axis=0, )
paddle.split(Tensor([144, 3584],"float32"), num_or_sections=list[32,4,4,68,32,4,], axis=0, )
paddle.split(Tensor([48, 3584],"float32"), num_or_sections=list[0,0,0,32,16,0,], axis=0, )
paddle.split(Tensor([120, 3584],"float32"), num_or_sections=list[0,0,0,56,0,64,], axis=0, )
paddle.split(Tensor([128, 7168],"float32"), num_or_sections=list[36,84,0,4,4,0,], axis=0, )
paddle.split(Tensor([144, 3584],"float32"), num_or_sections=list[4,0,100,4,4,32,], axis=0, )
paddle.split(Tensor([64, 3584],"float32"), num_or_sections=list[4,20,32,0,0,8,], axis=0, )
paddle.split(Tensor([212, 3584],"float32"), num_or_sections=list[0,0,4,4,4,200,], axis=0, )
paddle.split(Tensor([120, 7168],"float32"), num_or_sections=list[20,4,4,12,36,44,], axis=0, )
paddle.split(Tensor([60, 7168],"float32"), num_or_sections=list[32,4,4,0,8,12,], axis=0, )
paddle.split(Tensor([96, 3584],"float32"), num_or_sections=list[12,68,4,0,4,8,], axis=0, )
paddle.split(Tensor([72, 3584],"float32"), num_or_sections=list[12,8,16,24,4,8,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[0,64,0,8,20,4,], axis=0, )
paddle.split(Tensor([212, 3584],"float32"), num_or_sections=list[88,68,8,24,20,4,], axis=0, )
paddle.split(Tensor([88, 3584],"float32"), num_or_sections=list[0,8,12,32,24,12,], axis=0, )
paddle.split(Tensor([204, 3584],"float32"), num_or_sections=list[4,100,84,8,4,4,], axis=0, )
paddle.split(Tensor([88, 7168],"float32"), num_or_sections=list[24,24,4,20,4,12,], axis=0, )
paddle.split(Tensor([80, 3584],"float32"), num_or_sections=list[12,16,24,16,4,8,], axis=0, )
paddle.split(Tensor([64, 3584],"float32"), num_or_sections=list[4,20,8,8,20,4,], axis=0, )
paddle.split(Tensor([68, 3584],"float32"), num_or_sections=list[4,4,36,4,4,16,], axis=0, )
paddle.split(Tensor([88, 3584],"float32"), num_or_sections=list[0,12,36,12,28,0,], axis=0, )
paddle.split(Tensor([124, 7168],"float32"), num_or_sections=list[28,4,4,56,28,4,], axis=0, )
paddle.split(Tensor([68, 3584],"float32"), num_or_sections=list[4,32,4,4,8,16,], axis=0, )
paddle.split(Tensor([88, 3584],"float32"), num_or_sections=list[16,4,44,12,8,4,], axis=0, )
paddle.split(Tensor([148, 3584],"float32"), num_or_sections=list[4,52,0,8,4,80,], axis=0, )
paddle.split(Tensor([84, 3584],"float32"), num_or_sections=list[0,4,4,60,12,4,], axis=0, )
paddle.split(Tensor([116, 7168],"float32"), num_or_sections=list[4,4,0,52,0,56,], axis=0, )
paddle.split(Tensor([136, 3584],"float32"), num_or_sections=list[0,0,60,4,24,48,], axis=0, )
paddle.split(Tensor([140, 3584],"float32"), num_or_sections=list[84,32,4,4,12,4,], axis=0, )
paddle.split(Tensor([116, 3584],"float32"), num_or_sections=list[8,0,4,52,52,0,], axis=0, )
paddle.split(Tensor([104, 7168],"float32"), num_or_sections=list[20,52,4,8,12,8,], axis=0, )
paddle.split(Tensor([228, 3584],"float32"), num_or_sections=list[0,116,108,4,0,0,], axis=0, )
paddle.split(Tensor([64, 3584],"float32"), num_or_sections=list[4,8,32,0,16,4,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[12,8,16,4,4,28,], axis=0, )
paddle.split(Tensor([64, 3584],"float32"), num_or_sections=list[0,0,12,36,12,4,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[8,20,28,0,4,12,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[20,4,80,4,0,4,], axis=0, )
paddle.split(Tensor([100, 3584],"float32"), num_or_sections=list[8,20,0,4,64,4,], axis=0, )
paddle.split(Tensor([104, 3584],"float32"), num_or_sections=list[8,4,4,28,0,60,], axis=0, )
paddle.split(Tensor([156, 3584],"float32"), num_or_sections=list[12,0,0,88,4,52,], axis=0, )
paddle.split(Tensor([64, 7168],"float32"), num_or_sections=list[36,8,0,4,4,12,], axis=0, )
paddle.split(Tensor([72, 3584],"float32"), num_or_sections=list[24,4,8,0,0,36,], axis=0, )
paddle.split(Tensor([92, 7168],"float32"), num_or_sections=list[68,0,4,4,12,4,], axis=0, )
paddle.split(Tensor([84, 7168],"float32"), num_or_sections=list[4,16,8,8,20,28,], axis=0, )
paddle.split(Tensor([60, 3584],"float32"), num_or_sections=list[12,8,16,8,12,4,], axis=0, )
paddle.split(Tensor([180, 3584],"float32"), num_or_sections=list[4,4,116,4,48,4,], axis=0, )
paddle.split(Tensor([84, 3584],"float32"), num_or_sections=list[24,12,4,4,28,12,], axis=0, )
paddle.split(Tensor([60, 3584],"float32"), num_or_sections=list[4,0,24,28,4,0,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[8,60,4,20,16,4,], axis=0, )
paddle.split(Tensor([140, 3584],"float32"), num_or_sections=list[4,44,4,48,4,36,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[4,8,20,4,8,52,], axis=0, )
paddle.split(Tensor([52, 3584],"float32"), num_or_sections=list[4,4,4,8,32,0,], axis=0, )
paddle.split(Tensor([80, 7168],"float32"), num_or_sections=list[4,4,4,40,20,8,], axis=0, )
paddle.split(Tensor([148, 3584],"float32"), num_or_sections=list[4,68,4,68,0,4,], axis=0, )
paddle.split(Tensor([124, 7168],"float32"), num_or_sections=list[4,28,64,0,24,4,], axis=0, )
paddle.split(Tensor([144, 3584],"float32"), num_or_sections=list[32,4,24,8,56,20,], axis=0, )
paddle.split(Tensor([68, 7168],"float32"), num_or_sections=list[0,4,28,8,8,20,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[8,4,0,8,4,48,], axis=0, )
paddle.split(Tensor([132, 3584],"float32"), num_or_sections=list[8,4,4,4,52,60,], axis=0, )
paddle.split(Tensor([56, 7168],"float32"), num_or_sections=list[20,4,0,12,16,4,], axis=0, )
paddle.split(Tensor([148, 3584],"float32"), num_or_sections=list[16,32,4,4,20,72,], axis=0, )
paddle.split(Tensor([96, 3584],"float32"), num_or_sections=list[24,56,8,0,4,4,], axis=0, )
paddle.split(Tensor([152, 3584],"float32"), num_or_sections=list[0,8,0,24,32,88,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[4,12,20,4,28,44,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[40,4,4,4,8,12,], axis=0, )
paddle.split(Tensor([252, 3584],"float32"), num_or_sections=list[4,28,52,60,0,108,], axis=0, )
paddle.split(Tensor([148, 3584],"float32"), num_or_sections=list[56,20,4,64,0,4,], axis=0, )
paddle.split(Tensor([144, 3584],"float32"), num_or_sections=list[4,40,4,84,12,0,], axis=0, )
paddle.split(Tensor([116, 3584],"float32"), num_or_sections=list[76,8,12,16,4,0,], axis=0, )
paddle.split(Tensor([120, 3584],"float32"), num_or_sections=list[4,24,56,24,4,8,], axis=0, )
paddle.split(Tensor([152, 3584],"float32"), num_or_sections=list[0,0,140,4,4,4,], axis=0, )
paddle.split(Tensor([164, 3584],"float32"), num_or_sections=list[76,4,4,4,24,52,], axis=0, )
paddle.split(Tensor([100, 3584],"float32"), num_or_sections=list[24,60,4,8,0,4,], axis=0, )
paddle.split(Tensor([176, 3584],"float32"), num_or_sections=list[4,0,64,48,48,12,], axis=0, )
paddle.split(Tensor([128, 3584],"float32"), num_or_sections=list[12,28,0,4,4,80,], axis=0, )
paddle.split(Tensor([120, 3584],"float32"), num_or_sections=list[0,96,4,4,12,4,], axis=0, )
paddle.split(Tensor([132, 3584],"float32"), num_or_sections=list[8,96,4,4,16,4,], axis=0, )
paddle.split(Tensor([80, 3584],"float32"), num_or_sections=list[4,32,24,0,8,12,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[4,0,72,24,0,12,], axis=0, )
paddle.split(Tensor([64, 3584],"float32"), num_or_sections=list[8,8,12,4,24,8,], axis=0, )
paddle.split(Tensor([196, 3584],"float32"), num_or_sections=list[16,24,24,4,124,4,], axis=0, )
paddle.split(Tensor([208, 3584],"float32"), num_or_sections=list[8,8,0,52,60,80,], axis=0, )
paddle.split(Tensor([152, 3584],"float32"), num_or_sections=list[4,52,32,0,60,4,], axis=0, )
paddle.split(Tensor([136, 7168],"float32"), num_or_sections=list[4,4,4,60,64,0,], axis=0, )
paddle.split(Tensor([64, 7168],"float32"), num_or_sections=list[0,4,16,4,12,28,], axis=0, )
paddle.split(Tensor([192, 3584],"float32"), num_or_sections=list[0,36,84,60,4,8,], axis=0, )
paddle.split(Tensor([96, 3584],"float32"), num_or_sections=list[4,64,0,24,4,0,], axis=0, )
paddle.split(Tensor([96, 7168],"float32"), num_or_sections=list[4,4,24,0,4,60,], axis=0, )
paddle.split(Tensor([44, 7168],"float32"), num_or_sections=list[32,0,0,0,12,0,], axis=0, )
paddle.split(Tensor([156, 3584],"float32"), num_or_sections=list[8,4,0,76,8,60,], axis=0, )
paddle.split(Tensor([192, 3584],"float32"), num_or_sections=list[4,4,4,60,116,4,], axis=0, )
paddle.split(Tensor([152, 3584],"float32"), num_or_sections=list[64,28,4,4,4,48,], axis=0, )
paddle.split(Tensor([68, 3584],"float32"), num_or_sections=list[0,4,4,20,0,40,], axis=0, )
paddle.split(Tensor([116, 3584],"float32"), num_or_sections=list[0,4,4,32,24,52,], axis=0, )
paddle.split(Tensor([120, 3584],"float32"), num_or_sections=list[4,28,8,0,4,76,], axis=0, )
paddle.split(Tensor([44, 7168],"float32"), num_or_sections=list[0,4,4,4,32,0,], axis=0, )
paddle.split(Tensor([68, 3584],"float32"), num_or_sections=list[8,0,4,4,12,40,], axis=0, )
paddle.split(Tensor([124, 7168],"float32"), num_or_sections=list[16,48,48,4,4,4,], axis=0, )
paddle.split(Tensor([132, 7168],"float32"), num_or_sections=list[16,48,12,52,4,0,], axis=0, )
paddle.split(Tensor([40, 7168],"float32"), num_or_sections=list[4,12,4,8,8,4,], axis=0, )
paddle.split(Tensor([84, 7168],"float32"), num_or_sections=list[4,8,32,4,0,36,], axis=0, )
paddle.split(Tensor([120, 3584],"float32"), num_or_sections=list[24,16,4,4,4,68,], axis=0, )
paddle.split(Tensor([108, 7168],"float32"), num_or_sections=list[24,40,8,4,0,32,], axis=0, )
paddle.split(Tensor([92, 7168],"float32"), num_or_sections=list[4,0,4,60,20,4,], axis=0, )
paddle.split(Tensor([104, 3584],"float32"), num_or_sections=list[16,8,4,4,0,72,], axis=0, )
paddle.split(Tensor([84, 3584],"float32"), num_or_sections=list[32,8,16,4,20,4,], axis=0, )
paddle.split(Tensor([208, 3584],"float32"), num_or_sections=list[0,200,4,4,0,0,], axis=0, )
paddle.split(Tensor([88, 7168],"float32"), num_or_sections=list[4,4,12,12,0,56,], axis=0, )
paddle.split(Tensor([132, 7168],"float32"), num_or_sections=list[12,4,16,64,4,32,], axis=0, )
paddle.split(Tensor([116, 7168],"float32"), num_or_sections=list[4,4,0,0,64,44,], axis=0, )
paddle.split(Tensor([148, 3584],"float32"), num_or_sections=list[4,12,76,0,4,52,], axis=0, )
paddle.split(Tensor([60, 3584],"float32"), num_or_sections=list[28,8,12,4,4,4,], axis=0, )
paddle.split(Tensor([84, 7168],"float32"), num_or_sections=list[60,4,16,0,0,4,], axis=0, )
paddle.split(Tensor([112, 3584],"float32"), num_or_sections=list[32,4,52,4,16,4,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[12,48,0,32,4,16,], axis=0, )
paddle.split(Tensor([76, 3584],"float32"), num_or_sections=list[16,0,0,0,0,60,], axis=0, )
paddle.split(Tensor([112, 3584],"float32"), num_or_sections=list[16,84,0,8,0,4,], axis=0, )
paddle.split(Tensor([148, 3584],"float32"), num_or_sections=list[44,4,4,4,68,24,], axis=0, )
paddle.split(Tensor([64, 7168],"float32"), num_or_sections=list[4,28,8,0,4,20,], axis=0, )
paddle.split(Tensor([124, 7168],"float32"), num_or_sections=list[8,0,4,4,64,44,], axis=0, )
paddle.split(Tensor([84, 7168],"float32"), num_or_sections=list[4,16,28,32,0,4,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[4,0,20,8,20,20,], axis=0, )
paddle.split(Tensor([148, 3584],"float32"), num_or_sections=list[36,4,4,4,0,100,], axis=0, )
paddle.split(Tensor([120, 7168],"float32"), num_or_sections=list[8,52,48,4,4,4,], axis=0, )
paddle.split(Tensor([64, 7168],"float32"), num_or_sections=list[8,0,24,0,4,28,], axis=0, )
paddle.split(Tensor([84, 7168],"float32"), num_or_sections=list[4,0,4,36,12,28,], axis=0, )
paddle.split(Tensor([236, 3584],"float32"), num_or_sections=list[0,0,0,4,0,232,], axis=0, )
paddle.split(Tensor([120, 7168],"float32"), num_or_sections=list[20,28,56,4,4,8,], axis=0, )
paddle.split(Tensor([148, 3584],"float32"), num_or_sections=list[4,12,0,104,0,28,], axis=0, )
paddle.split(Tensor([88, 7168],"float32"), num_or_sections=list[0,16,0,4,40,28,], axis=0, )
paddle.split(Tensor([216, 3584],"float32"), num_or_sections=list[36,0,0,180,0,0,], axis=0, )
paddle.split(Tensor([136, 7168],"float32"), num_or_sections=list[88,0,4,4,40,0,], axis=0, )
paddle.split(Tensor([148, 3584],"float32"), num_or_sections=list[52,84,4,4,0,4,], axis=0, )
paddle.split(Tensor([136, 3584],"float32"), num_or_sections=list[16,0,40,4,8,68,], axis=0, )
paddle.split(Tensor([124, 3584],"float32"), num_or_sections=list[56,4,20,32,12,0,], axis=0, )
paddle.split(Tensor([128, 3584],"float32"), num_or_sections=list[0,68,4,20,32,4,], axis=0, )
paddle.split(Tensor([160, 3584],"float32"), num_or_sections=list[64,48,4,32,4,8,], axis=0, )
paddle.split(Tensor([212, 3584],"float32"), num_or_sections=list[0,184,24,0,4,0,], axis=0, )
paddle.split(Tensor([88, 3584],"float32"), num_or_sections=list[20,8,4,0,52,4,], axis=0, )
paddle.split(Tensor([112, 7168],"float32"), num_or_sections=list[8,4,4,20,4,72,], axis=0, )
paddle.split(Tensor([68, 7168],"float32"), num_or_sections=list[4,0,4,24,4,32,], axis=0, )
paddle.split(Tensor([72, 7168],"float32"), num_or_sections=list[40,4,4,8,4,12,], axis=0, )
paddle.split(Tensor([108, 7168],"float32"), num_or_sections=list[8,4,56,8,4,28,], axis=0, )
paddle.split(Tensor([120, 3584],"float32"), num_or_sections=list[0,96,8,4,12,0,], axis=0, )
paddle.split(Tensor([76, 7168],"float32"), num_or_sections=list[36,0,4,12,4,20,], axis=0, )
paddle.split(Tensor([120, 3584],"float32"), num_or_sections=list[20,4,24,0,68,4,], axis=0, )
paddle.split(Tensor([72, 3584],"float32"), num_or_sections=list[24,0,4,0,4,40,], axis=0, )
paddle.split(Tensor([76, 3584],"float32"), num_or_sections=list[4,32,16,16,4,4,], axis=0, )
paddle.split(Tensor([52, 7168],"float32"), num_or_sections=list[8,8,0,36,0,0,], axis=0, )
paddle.split(Tensor([96, 3584],"float32"), num_or_sections=list[28,32,20,4,4,8,], axis=0, )
paddle.split(Tensor([96, 3584],"float32"), num_or_sections=list[4,4,28,4,4,52,], axis=0, )
paddle.split(Tensor([136, 7168],"float32"), num_or_sections=list[4,36,4,4,8,80,], axis=0, )
paddle.split(Tensor([100, 3584],"float32"), num_or_sections=list[8,0,4,60,28,0,], axis=0, )
paddle.split(Tensor([124, 3584],"float32"), num_or_sections=list[8,0,52,24,4,36,], axis=0, )
paddle.split(Tensor([104, 3584],"float32"), num_or_sections=list[0,4,32,4,4,60,], axis=0, )
paddle.sqrt(Tensor([32, 32, 128],"float32"), )
paddle.sqrt(Tensor([124, 1, 48, 48],"float32"), )
paddle.sqrt(Tensor([128, 1, 48, 48],"float32"), )
paddle.sqrt(Tensor([4, 94, 311],"float32"), )
paddle.sqrt(Tensor([124, 1, 56, 56],"float32"), )
paddle.sqrt(Tensor([128, 1, 56, 56],"float32"), )
paddle.sqrt(Tensor([64, 1, 56, 56],"float32"), )
paddle.sqrt(Tensor([16, 1, 96, 96],"float32"), )
paddle.sqrt(Tensor([128, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([256512, 1],"float32"), )
paddle.sqrt(Tensor([32, 1, 56, 56],"float32"), )
paddle.sqrt(Tensor([128, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([128, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([124, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([1, 93431],"float32"), )
paddle.sqrt(Tensor([16, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([16, 1, 56, 56],"float32"), )
paddle.sqrt(Tensor([2, 1, 512, 4, 4],"float32"), )
paddle.sqrt(Tensor([16, 1, 48, 48],"float32"), )
paddle.sqrt(Tensor([8, 1, 96, 96],"float32"), )
paddle.sqrt(Tensor([8, 1, 48, 48],"float32"), )
paddle.sqrt(Tensor([32, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([64, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([64, 995],"float32"), )
paddle.sqrt(Tensor([64, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([124, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([124, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([40, 995],"float32"), )
paddle.sqrt(Tensor([64, 50, 1],"float32"), )
paddle.sqrt(Tensor([64, 29, 1],"float32"), )
paddle.sqrt(Tensor([64, 24, 1],"float32"), )
paddle.sqrt(Tensor([64, 54, 1],"float32"), )
paddle.sqrt(Tensor([64, 27, 1],"float32"), )
paddle.sqrt(Tensor([64, 52, 1],"float32"), )
paddle.sqrt(Tensor([1444],"float32"), )
paddle.sqrt(Tensor([64, 17, 1],"float32"), )
paddle.sqrt(Tensor([64, 23, 1],"float32"), )
paddle.sqrt(Tensor([16, 77, 1],"float32"), )
paddle.sqrt(Tensor([64, 51, 1],"float32"), )
paddle.sqrt(Tensor([64, 21, 1],"float32"), )
paddle.sqrt(Tensor([8, 1, 32, 32],"float32"), )
paddle.sqrt(Tensor([64, 40, 1],"float32"), )
paddle.sqrt(Tensor([64, 77, 1],"float32"), )
paddle.sqrt(Tensor([64, 30, 1],"float32"), )
paddle.sqrt(Tensor([64, 43, 1],"float32"), )
paddle.sqrt(Tensor([32, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([64, 28, 1],"float32"), )
paddle.sqrt(Tensor([16, 159],"float32"), )
paddle.sqrt(Tensor([64, 33, 1],"float32"), )
paddle.sqrt(Tensor([64, 34, 1],"float32"), )
paddle.sqrt(Tensor([4, 272, 1],"float32"), )
paddle.sqrt(Tensor([64, 53, 1],"float32"), )
paddle.sqrt(Tensor([4, 394, 1],"float32"), )
paddle.sqrt(Tensor([64, 46, 1],"float32"), )
paddle.sqrt(Tensor([64, 38, 1],"float32"), )
paddle.sqrt(Tensor([64, 20, 1],"float32"), )
paddle.sqrt(Tensor([32, 159],"float32"), )
paddle.sqrt(Tensor([64, 39, 1],"float32"), )
paddle.sqrt(Tensor([64, 47, 1],"float32"), )
paddle.sqrt(Tensor([64, 32, 1],"float32"), )
paddle.sqrt(Tensor([16, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([64, 36, 1],"float32"), )
paddle.sqrt(Tensor([64, 44, 1],"float32"), )
paddle.sqrt(Tensor([64, 22, 1],"float32"), )
paddle.sqrt(Tensor([64, 41, 1],"float32"), )
paddle.sqrt(Tensor([4, 525, 1],"float32"), )
paddle.sqrt(Tensor([64, 25, 1],"float32"), )
paddle.sqrt(Tensor([4, 333, 1],"float32"), )
paddle.sqrt(Tensor([64, 48, 1],"float32"), )
paddle.sqrt(Tensor([16, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([64, 26, 1],"float32"), )
paddle.sqrt(Tensor([64, 18, 1],"float32"), )
paddle.sqrt(Tensor([4, 465, 1],"float32"), )
paddle.sqrt(Tensor([64, 37, 1],"float32"), )
paddle.sqrt(Tensor([64, 35, 1],"float32"), )
paddle.sqrt(Tensor([4, 418, 1],"float32"), )
paddle.sqrt(Tensor([4, 1, 32, 32],"float32"), )
paddle.sqrt(Tensor([8, 16, 32],"float32"), )
paddle.sqrt(Tensor([8, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([64, 42, 1],"float32"), )
paddle.sqrt(Tensor([64, 19, 1],"float32"), )
paddle.sqrt(Tensor([64, 16, 1],"float32"), )
paddle.sqrt(Tensor([64, 31, 1],"float32"), )
paddle.square(Tensor([500000],"float32"), )
paddle.square(Tensor([500032],"float32"), )
paddle.square(Tensor([524288],"float32"), )
paddle.square(Tensor([156816, 1],"float32"), name=None, )
paddle.square(Tensor([64, 64, 64, 1],"float32"), name=None, )
paddle.square(Tensor([128512, 1],"float32"), name=None, )
paddle.square(Tensor([282600, 1],"float32"), name=None, )
paddle.square(Tensor([483100, 1],"float32"), name=None, )
paddle.square(Tensor([100000, 1],"float32"), name=None, )
paddle.square(Tensor([304794, 1],"float32"), name=None, )
paddle.square(Tensor([147015, 1],"float32"), name=None, )
paddle.square(Tensor([228595, 1],"float32"), name=None, )
paddle.square(Tensor([512, 995],"float32"), )
paddle.square(Tensor([1, 196608],"float32"), )
paddle.square(Tensor([128512, 1],"float32"), )
paddle.square(Tensor([256, 128, 1],"float32"), name=None, )
paddle.square(Tensor([26736, 3],"float32"), )
paddle.square(Tensor([11661, 3],"float32"), )
paddle.square(Tensor([32, 501, 4],"float32"), )
paddle.square(Tensor([256, 15, 3],"float32"), name=None, )
paddle.square(Tensor([10240, 1],"float32"), name=None, )
paddle.square(Tensor([17152, 1],"float32"), )
paddle.square(Tensor([1000, 10],"float32"), )
paddle.square(Tensor([128, 128],"float32"), )
paddle.square(Tensor([34304, 1],"float32"), )
paddle.square(Tensor([32, 512],"float32"), )
paddle.square(Tensor([10000, 1],"float32"), )
paddle.square(Tensor([50000, 1],"float32"), )
paddle.square(Tensor([32812, 1],"float32"), name=None, )
paddle.square(Tensor([68608, 1],"float32"), )
paddle.square(Tensor([40, 995],"float32"), )
paddle.square(Tensor([34304, 1],"float32"), name=None, )
paddle.square(Tensor([104, 128],"float32"), )
paddle.square(Tensor([68, 376, 1],"float32"), )
paddle.square(Tensor([18211, 1],"float32"), )
paddle.square(Tensor([15548, 3],"float32"), )
paddle.square(Tensor([512, 15, 3],"float32"), name=None, )
paddle.square(Tensor([52, 7, 32],"float32"), )
paddle.square(Tensor([50000, 1],"float32"), name=None, )
paddle.square(Tensor([40, 512],"float32"), )
paddle.square(Tensor([20600, 1],"float32"), name=None, )
paddle.square(Tensor([93401, 1],"float32"), name=None, )
paddle.square(Tensor([512, 159],"float32"), )
paddle.square(Tensor([20000, 1],"float32"), name=None, )
paddle.square(Tensor([100, 376, 1],"float32"), )
paddle.square(Tensor([68608, 1],"float32"), name=None, )
paddle.square(Tensor([8, 1501, 1],"float32"), )
paddle.square(Tensor([20000, 1],"float32"), )
paddle.square(Tensor([64, 512],"float32"), )
paddle.square(Tensor([10000, 1],"float32"), name=None, )
paddle.square(Tensor([20569, 1],"float32"), name=None, )
paddle.square(Tensor([10201, 1],"float32"), name=None, )
paddle.square(Tensor([1024, 10],"float32"), )
paddle.square(Tensor([256, 16, 3],"float32"), name=None, )
paddle.square(Tensor([39992, 1],"float32"), name=None, )
paddle.square(Tensor([17152, 1],"float32"), name=None, )
paddle.square(Tensor([50, 1501, 1],"float32"), )
paddle.square(Tensor([512, 16, 3],"float32"), name=None, )
paddle.square(Tensor([64, 995],"float32"), )
paddle.square(Tensor([100, 100],"float32"), name=None, )
paddle.square(Tensor([16, 96, 2],"float32"), )
paddle.square(Tensor([5200, 1],"float32"), name=None, )
paddle.square(Tensor([1000, 1],"float32"), name=None, )
paddle.square(Tensor([8, 16, 32],"float32"), )
paddle.square(Tensor([1609, 1],"float32"), name=None, )
paddle.square(Tensor([16, 96, 1],"float32"), )
paddle.square(Tensor([2885, 1],"float32"), )
paddle.square(Tensor([1100, 1],"float32"), name=None, )
paddle.square(Tensor([8192, 1],"float32"), name=None, )
paddle.square(Tensor([2020, 1],"float32"), name=None, )
paddle.square(Tensor([1, 64, 64, 1],"float64"), name=None, )
paddle.square(Tensor([1200, 1],"float32"), )
paddle.square(Tensor([64, 1, 64, 1],"float64"), name=None, )
paddle.square(Tensor([2, 1501, 1],"float32"), )
paddle.square(Tensor([2430, 1],"float32"), name=None, )
paddle.square(Tensor([9420, 1],"float32"), name=None, )
paddle.square(Tensor([8000, 1],"float32"), name=None, )
paddle.square(Tensor([9330, 1],"float32"), name=None, )
paddle.square(Tensor([8, 16, 32],"complex128"), )
paddle.square(Tensor([2000, 1],"float32"), name=None, )
paddle.square(Tensor([1024],"float32"), )
paddle.square(Tensor([16, 96, 2],"float32"), name=None, )
paddle.square(Tensor([2601, 1],"float32"), name=None, )
paddle.square(Tensor([26, 7, 32],"float32"), )
paddle.square(Tensor([2048, 1],"float32"), name=None, )
paddle.square(Tensor([1000],"float32"), )
paddle.square(Tensor([7999, 1],"float32"), name=None, )
paddle.square(Tensor([17, 376, 1],"float32"), )
paddle.square(Tensor([4096],"float32"), )
paddle.square(Tensor([16, 159],"float32"), )
paddle.square(Tensor([6512, 1],"float32"), name=None, )
paddle.square(Tensor([4096, 1],"float32"), name=None, )
paddle.square(Tensor([1209, 1],"float32"), name=None, )
paddle.square(Tensor([1820, 1],"float32"), name=None, )
paddle.square(Tensor([1024, 2],"float32"), )
paddle.square(Tensor([6512, 1],"float32"), )
paddle.square(Tensor([1024, 1],"float32"), name=None, )
paddle.square(Tensor([8, 16, 32],"complex64"), )
paddle.square(Tensor([6284, 1],"float32"), )
paddle.square(Tensor([1168, 1],"float32"), name=None, )
paddle.square(Tensor([2419, 1],"float32"), name=None, )
paddle.square(Tensor([1291, 1],"float32"), )
paddle.square(Tensor([1800, 1],"float32"), )
paddle.square(Tensor([6000, 1],"float32"), name=None, )
paddle.square(Tensor([8490, 1],"float32"), name=None, )
paddle.square(Tensor([64, 64, 1, 1],"float64"), name=None, )
paddle.square(Tensor([13, 7, 32],"float32"), )
paddle.square(Tensor([1, 3072],"float32"), )
paddle.square(Tensor([8, 16, 32],"float64"), )
paddle.square(Tensor([1485, 1],"float32"), name=None, )
paddle.square(Tensor([5000, 1],"float32"), )
paddle.square(Tensor([1300, 1],"float32"), name=None, )
paddle.square(Tensor([4830, 1],"float32"), name=None, )
paddle.square(Tensor([16, 512],"float32"), )
paddle.square(Tensor([8810, 1],"float32"), name=None, )
paddle.square(Tensor([8810, 1],"float32"), )
paddle.square(Tensor([32, 159],"float32"), )
paddle.square(Tensor([9801, 1],"float32"), name=None, )
paddle.square(Tensor([1515, 1],"float32"), name=None, )
paddle.squeeze(Tensor([1, 1, 800, 533],"int64"), axis=1, )
paddle.squeeze(Tensor([218240, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 871],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1234],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1090],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 531],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1249],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1150],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1188],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 496, 512],"int32"), axis=1, )
paddle.squeeze(Tensor([190960, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([272800, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1208],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 640],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1198],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 896],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 536],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1197],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1133],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 536],"int64"), axis=1, )
paddle.squeeze(Tensor([512, 1248, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1, 1, 800, 531],"int64"), axis=1, )
paddle.squeeze(Tensor([210056, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 496, 512],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1124],"int32"), axis=1, )
paddle.squeeze(Tensor([220968, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 534],"int64"), axis=1, )
paddle.squeeze(Tensor([218240, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1067],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 187679, 3],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 1, 800, 600],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1200],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1119],"int64"), axis=1, )
paddle.squeeze(Tensor([245520, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1231],"int32"), axis=1, )
paddle.squeeze(Tensor([240064, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1165],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1202],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1067],"int32"), axis=1, )
paddle.squeeze(Tensor([512, 872, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1, 1, 800, 1073],"int64"), axis=1, )
paddle.squeeze(Tensor([300080, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([128, 1280, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1, 1, 800, 600],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1200],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 645],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1124],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 534],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 512, 512],"int64"), axis=1, )
paddle.squeeze(Tensor([128, 1280, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([270072, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([110484, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([330088, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([8, 2048, 1, 7, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([1, 187679, 4],"float32"), axis=0, )
paddle.squeeze(Tensor([300080, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 640],"int32"), axis=1, )
paddle.squeeze(Tensor([240064, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([220968, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 512, 512],"int32"), axis=1, )
paddle.squeeze(Tensor([190960, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 639],"int32"), axis=1, )
paddle.squeeze(Tensor([2, 512, 512, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1203],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1249],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1166],"int32"), axis=1, )
paddle.squeeze(Tensor([330088, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1203],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1207],"int64"), axis=1, )
paddle.squeeze(Tensor([4, 157920, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1211],"int32"), axis=1, )
paddle.squeeze(Tensor([110484, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1074],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1150],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1166],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1037],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1211],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1198],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 871],"int64"), axis=1, )
paddle.squeeze(Tensor([330088, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([270072, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([210056, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([210056, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1090],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1207],"int32"), axis=1, )
paddle.squeeze(Tensor([190960, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([300080, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1119],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 849],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 800],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 896],"int64"), axis=1, )
paddle.squeeze(Tensor([245520, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([218240, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1202],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1074],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 645],"int32"), axis=1, )
paddle.squeeze(Tensor([272800, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1165],"int64"), axis=1, )
paddle.squeeze(Tensor([240064, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1073],"int32"), axis=1, )
paddle.squeeze(Tensor([512, 872, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([135036, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([135036, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([5168, 128],"float32"), )
paddle.squeeze(Tensor([1, 1, 800, 1231],"int64"), axis=1, )
paddle.squeeze(Tensor([245520, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1208],"int32"), axis=1, )
paddle.squeeze(Tensor([272800, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([512, 624, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([122760, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([220968, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 800],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1133],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1234],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1081],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 849],"int32"), axis=1, )
paddle.squeeze(Tensor([512, 624, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1, 1, 800, 1158],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 533],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1188],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1037],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1197],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 1158],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 800, 639],"int64"), axis=1, )
paddle.squeeze(Tensor([270072, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 800, 1081],"int32"), axis=1, )
paddle.squeeze(Tensor([512, 1248, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([122760, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([3, 1, 3, 40, 40],"float32"), axis=1, )
paddle.squeeze(Tensor([512, 92, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([10496, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([32, 1, 576],"float32"), axis=1, )
paddle.squeeze(Tensor([95480, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([10496, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([8, 1, 100, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([85932, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([8, 1, 100, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([16032, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([10308, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([64, 1536, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([64, 1536, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([3, 1, 3, 3, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([512, 156, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([14800, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([95480, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([512, 156, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([10008, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([64, 1024, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([512, 92, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([14860, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([64, 1, 995],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([10008, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([40, 1, 995],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([3, 1, 40, 40, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([10308, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([58086, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([4, 125, 125, 1],"float64"), -1, )
paddle.squeeze(Tensor([16, 1024, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([3, 1, 3, 1600, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([64, 1024, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([85932, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([200, 14, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([6012, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([496, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([192, 25, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([1088, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([8300, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([464, 11, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([254, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([310, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([56, 59, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([492, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([254, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1271, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([352, 14, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([96, 48, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([690, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([794, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([413, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([368, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([5048, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([9592, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([24, 176, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([719, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1068, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([48, 102, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([3212, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([516, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([458, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([7484, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([538, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([405, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([3880, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([192, 20, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([437, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([160, 29, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([7408, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([144, 30, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([1572, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2920, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([6548, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([361, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1196, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([266, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([3232, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([4624, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([306, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([184, 17, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([7584, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([564, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([6564, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([6432, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([64, 72, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([208, 16, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([1700, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([128, 31, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([72, 71, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([6896, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([3952, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2244, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1220, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([6208, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([5640, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([64, 76, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([184, 18, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([9732, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([3656, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([5716, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([6420, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([763, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([40, 91, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([425, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([7928, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([5944, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([56, 88, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([1968, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([579, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([8380, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([464, 9, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([24, 153, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([1536, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([240, 21, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([800, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([32, 158, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([6912, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([9084, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([559, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([40, 111, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([1524, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([288, 14, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([630, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1156, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([8600, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1432, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([6840, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([80, 48, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([307, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([467, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1436, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([272, 11, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([344, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([877, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([9632, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([136, 27, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([2916, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([16, 1, 159],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([7080, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([4176, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([216, 21, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([7972, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([322, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([8856, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([6956, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([120, 32, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([7368, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([392, 11, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([280, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([5668, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1012, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1740, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([818, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([430, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([9688, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([152, 19, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([2996, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([9012, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([470, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([24, 151, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([32, 104, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([152, 24, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([104, 36, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([2376, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1435, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([7120, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([7128, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([371, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([7952, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([7448, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([342, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([6236, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1256, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([64, 56, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([2160, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([282, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([40, 107, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([1312, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([5236, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([320, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([160, 27, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([3440, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([7576, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([240, 19, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([260, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1780, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([40, 94, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([136, 30, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([2312, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([793, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([3752, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([9024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([48, 96, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([2068, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1924, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([48, 106, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([503, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([3388, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1172, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([232, 19, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([476, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([7776, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([152, 22, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([571, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2988, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([3224, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([8160, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2544, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([397, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1060, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([40, 128, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([112, 26, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([6684, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([8604, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([56, 71, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([3072, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([72, 67, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([208, 14, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([56, 85, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([2008, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([428, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([324, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([96, 53, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([56, 76, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([1336, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([3516, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([575, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([701, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([376, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([9960, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([16, 109, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([104, 35, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([7104, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([408, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1104, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([6800, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([392, 12, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([72, 43, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([136, 31, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([3684, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([56, 84, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([3724, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([24, 140, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([6864, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([112, 41, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([270, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([216, 17, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([3216, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([537, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2436, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([8680, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([6384, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([7516, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([300, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([24, 130, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([772, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([291, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([398, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([6272, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([32, 157, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([419, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([136, 25, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([128, 32, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([32, 90, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([1096, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([24, 136, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([2708, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([408, 12, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([152, 26, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([395, 4, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([8440, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([336, 4, 1],"float32"), axis=-1, )
paddle.stack(tuple(Tensor([92352],"float32"),Tensor([92352],"float32"),Tensor([92352],"float32"),Tensor([92352],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([223827],"float32"),Tensor([223827],"float32"),Tensor([223827],"float32"),Tensor([223827],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 15],"float32"),Tensor([3598, 15],"float32"),Tensor([3598, 15],"float32"),Tensor([3598, 15],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([65536],"float32"),Tensor([65536],"float32"),Tensor([65536],"float32"),Tensor([65536],"float32"),), axis=1, )
paddle.stack(list[Tensor([100352],"float32"),Tensor([100352],"float32"),Tensor([100352],"float32"),Tensor([100352],"float32"),], -1, )
paddle.stack(list[Tensor([2577, 18],"float32"),Tensor([2577, 18],"float32"),Tensor([2577, 18],"float32"),Tensor([2577, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 8],"float32"),Tensor([11050, 8],"float32"),Tensor([11050, 8],"float32"),Tensor([11050, 8],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([60480],"float32"),Tensor([60480],"float32"),Tensor([60480],"float32"),Tensor([60480],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([43560],"float32"),Tensor([43560],"float32"),Tensor([43560],"float32"),Tensor([43560],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([217689],"float32"),Tensor([217689],"float32"),Tensor([217689],"float32"),Tensor([217689],"float32"),), axis=1, )
paddle.stack(list[Tensor([38402, 4],"float32"),], 0, )
paddle.stack(tuple(Tensor([168795],"float32"),Tensor([168795],"float32"),Tensor([168795],"float32"),Tensor([168795],"float32"),), axis=1, )
paddle.stack(list[Tensor([9180, 6],"float32"),Tensor([9180, 6],"float32"),Tensor([9180, 6],"float32"),Tensor([9180, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 37],"float32"),Tensor([3060, 37],"float32"),Tensor([3060, 37],"float32"),Tensor([3060, 37],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([62976],"float32"),Tensor([62976],"float32"),Tensor([62976],"float32"),Tensor([62976],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([94500],"float32"),Tensor([94500],"float32"),Tensor([94500],"float32"),Tensor([94500],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([185691],"float32"),Tensor([185691],"float32"),Tensor([185691],"float32"),Tensor([185691],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([171888],"float32"),Tensor([171888],"float32"),Tensor([171888],"float32"),Tensor([171888],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63000],"float32"),Tensor([63000],"float32"),Tensor([63000],"float32"),Tensor([63000],"float32"),), axis=1, )
paddle.stack(list[Tensor([9180, 4],"float32"),Tensor([9180, 4],"float32"),Tensor([9180, 4],"float32"),Tensor([9180, 4],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([214848],"float32"),Tensor([214848],"float32"),Tensor([214848],"float32"),Tensor([214848],"float32"),), axis=1, )
paddle.stack(list[Tensor([4789, 16],"float32"),Tensor([4789, 16],"float32"),Tensor([4789, 16],"float32"),Tensor([4789, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 24],"float32"),Tensor([4789, 24],"float32"),Tensor([4789, 24],"float32"),Tensor([4789, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 14],"float32"),Tensor([11050, 14],"float32"),Tensor([11050, 14],"float32"),Tensor([11050, 14],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([77025],"float32"),Tensor([77025],"float32"),Tensor([77025],"float32"),Tensor([77025],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1, 89, 72, 64],"float32"),Tensor([1, 89, 72, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([55440],"float32"),Tensor([55440],"float32"),Tensor([55440],"float32"),Tensor([55440],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 26],"float32"),Tensor([3598, 26],"float32"),Tensor([3598, 26],"float32"),Tensor([3598, 26],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([70080],"float32"),Tensor([70080],"float32"),Tensor([70080],"float32"),Tensor([70080],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([58880],"float32"),Tensor([58880],"float32"),Tensor([58880],"float32"),Tensor([58880],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([56000],"float32"),Tensor([56000],"float32"),Tensor([56000],"float32"),Tensor([56000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([233244],"float32"),Tensor([233244],"float32"),Tensor([233244],"float32"),Tensor([233244],"float32"),), axis=1, )
paddle.stack(list[Tensor([27540, 9],"float32"),Tensor([27540, 9],"float32"),Tensor([27540, 9],"float32"),Tensor([27540, 9],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([102144],"float32"),Tensor([102144],"float32"),Tensor([102144],"float32"),Tensor([102144],"float32"),), axis=1, )
paddle.stack(list[Tensor([115200],"float32"),Tensor([115200],"float32"),Tensor([115200],"float32"),Tensor([115200],"float32"),], -1, )
paddle.stack(tuple(Tensor([80512],"float32"),Tensor([80512],"float32"),Tensor([80512],"float32"),Tensor([80512],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([235320],"float32"),Tensor([235320],"float32"),Tensor([235320],"float32"),Tensor([235320],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 28],"float32"),Tensor([3598, 28],"float32"),Tensor([3598, 28],"float32"),Tensor([3598, 28],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([67335],"float32"),Tensor([67335],"float32"),Tensor([67335],"float32"),Tensor([67335],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61200],"float32"),Tensor([61200],"float32"),Tensor([61200],"float32"),Tensor([61200],"float32"),), axis=1, )
paddle.stack(list[Tensor([1726, 33],"float32"),Tensor([1726, 33],"float32"),Tensor([1726, 33],"float32"),Tensor([1726, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 3],"float32"),Tensor([10105, 3],"float32"),Tensor([10105, 3],"float32"),Tensor([10105, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 35],"float32"),Tensor([4165, 35],"float32"),Tensor([4165, 35],"float32"),Tensor([4165, 35],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([60300],"float32"),Tensor([60300],"float32"),Tensor([60300],"float32"),Tensor([60300],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([184140],"float32"),Tensor([184140],"float32"),Tensor([184140],"float32"),Tensor([184140],"float32"),), axis=1, )
paddle.stack(list[Tensor([4789, 9],"float32"),Tensor([4789, 9],"float32"),Tensor([4789, 9],"float32"),Tensor([4789, 9],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([50250],"float32"),Tensor([50250],"float32"),Tensor([50250],"float32"),Tensor([50250],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([227919],"float32"),Tensor([227919],"float32"),Tensor([227919],"float32"),Tensor([227919],"float32"),), axis=1, )
paddle.stack(list[Tensor([200, 200],"float32"),Tensor([200, 200],"float32"),Tensor([200, 200],"float32"),Tensor([200, 200],"float32"),], axis=-1, )
paddle.stack(list[Tensor([70560],"float32"),Tensor([70560],"float32"),Tensor([70560],"float32"),Tensor([70560],"float32"),], -1, )
paddle.stack(list[Tensor([207360],"float32"),Tensor([207360],"float32"),Tensor([207360],"float32"),Tensor([207360],"float32"),], -1, )
paddle.stack(list[Tensor([4165, 15],"float32"),Tensor([4165, 15],"float32"),Tensor([4165, 15],"float32"),Tensor([4165, 15],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([230202],"float32"),Tensor([230202],"float32"),Tensor([230202],"float32"),Tensor([230202],"float32"),), axis=1, )
paddle.stack(list[Tensor([4789, 39],"float32"),Tensor([4789, 39],"float32"),Tensor([4789, 39],"float32"),Tensor([4789, 39],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 32],"float32"),Tensor([1726, 32],"float32"),Tensor([1726, 32],"float32"),Tensor([1726, 32],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([86640],"float32"),Tensor([86640],"float32"),Tensor([86640],"float32"),Tensor([86640],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69300],"float32"),Tensor([69300],"float32"),Tensor([69300],"float32"),Tensor([69300],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([66960],"float32"),Tensor([66960],"float32"),Tensor([66960],"float32"),Tensor([66960],"float32"),), axis=1, )
paddle.stack(list[Tensor([4789, 26],"float32"),Tensor([4789, 26],"float32"),Tensor([4789, 26],"float32"),Tensor([4789, 26],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([75392],"float32"),Tensor([75392],"float32"),Tensor([75392],"float32"),Tensor([75392],"float32"),), axis=1, )
paddle.stack(list[Tensor([2577, 27],"float32"),Tensor([2577, 27],"float32"),Tensor([2577, 27],"float32"),Tensor([2577, 27],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([85320],"float32"),Tensor([85320],"float32"),Tensor([85320],"float32"),Tensor([85320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([60928],"float32"),Tensor([60928],"float32"),Tensor([60928],"float32"),Tensor([60928],"float32"),), axis=1, )
paddle.stack(list[Tensor([2125, 26],"float32"),Tensor([2125, 26],"float32"),Tensor([2125, 26],"float32"),Tensor([2125, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 42],"float32"),Tensor([2125, 42],"float32"),Tensor([2125, 42],"float32"),Tensor([2125, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 4],"float32"),Tensor([24565, 4],"float32"),Tensor([24565, 4],"float32"),Tensor([24565, 4],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([2, 19, 29, 64],"float32"),Tensor([2, 19, 29, 64],"float32"),), axis=4, )
paddle.stack(list[Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([1, 45, 36, 64],"float32"),Tensor([1, 45, 36, 64],"float32"),), axis=4, )
paddle.stack(list[Tensor([2125, 39],"float32"),Tensor([2125, 39],"float32"),Tensor([2125, 39],"float32"),Tensor([2125, 39],"float32"),], axis=1, )
paddle.stack(list[Tensor([9261, 6],"float32"),Tensor([9261, 6],"float32"),Tensor([9261, 6],"float32"),Tensor([9261, 6],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([37800],"float32"),Tensor([37800],"float32"),Tensor([37800],"float32"),Tensor([37800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([50400],"float32"),Tensor([50400],"float32"),Tensor([50400],"float32"),Tensor([50400],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 30],"float32"),Tensor([3598, 30],"float32"),Tensor([3598, 30],"float32"),Tensor([3598, 30],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([248616],"float32"),Tensor([248616],"float32"),Tensor([248616],"float32"),Tensor([248616],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57024],"float32"),Tensor([57024],"float32"),Tensor([57024],"float32"),Tensor([57024],"float32"),), axis=1, )
paddle.stack(list[Tensor([184, 184],"float32"),Tensor([184, 184],"float32"),Tensor([184, 184],"float32"),Tensor([184, 184],"float32"),], axis=-1, )
paddle.stack(list[Tensor([12240, 16],"float32"),Tensor([12240, 16],"float32"),Tensor([12240, 16],"float32"),Tensor([12240, 16],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([59520],"float32"),Tensor([59520],"float32"),Tensor([59520],"float32"),Tensor([59520],"float32"),), axis=1, )
paddle.stack(list[Tensor([384, 8, 1, 40],"bfloat16"),Tensor([384, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(tuple(Tensor([56430],"float32"),Tensor([56430],"float32"),Tensor([56430],"float32"),Tensor([56430],"float32"),), axis=1, )
paddle.stack(list[Tensor([27540, 3],"float32"),Tensor([27540, 3],"float32"),Tensor([27540, 3],"float32"),Tensor([27540, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 55],"float32"),Tensor([4165, 55],"float32"),Tensor([4165, 55],"float32"),Tensor([4165, 55],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 16],"float32"),Tensor([2577, 16],"float32"),Tensor([2577, 16],"float32"),Tensor([2577, 16],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([91840],"float32"),Tensor([91840],"float32"),Tensor([91840],"float32"),Tensor([91840],"float32"),), axis=1, )
paddle.stack(list[Tensor([4789, 22],"float32"),Tensor([4789, 22],"float32"),Tensor([4789, 22],"float32"),Tensor([4789, 22],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([66360],"float32"),Tensor([66360],"float32"),Tensor([66360],"float32"),Tensor([66360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([66330],"float32"),Tensor([66330],"float32"),Tensor([66330],"float32"),Tensor([66330],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([54870],"float32"),Tensor([54870],"float32"),Tensor([54870],"float32"),Tensor([54870],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 24],"float32"),Tensor([3598, 24],"float32"),Tensor([3598, 24],"float32"),Tensor([3598, 24],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([94720],"float32"),Tensor([94720],"float32"),Tensor([94720],"float32"),Tensor([94720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([62720],"float32"),Tensor([62720],"float32"),Tensor([62720],"float32"),Tensor([62720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([52096],"float32"),Tensor([52096],"float32"),Tensor([52096],"float32"),Tensor([52096],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([70680],"float32"),Tensor([70680],"float32"),Tensor([70680],"float32"),Tensor([70680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([86940],"float32"),Tensor([86940],"float32"),Tensor([86940],"float32"),Tensor([86940],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([35280],"float32"),Tensor([35280],"float32"),Tensor([35280],"float32"),Tensor([35280],"float32"),), axis=1, )
paddle.stack(list[Tensor([12240, 5],"float32"),Tensor([12240, 5],"float32"),Tensor([12240, 5],"float32"),Tensor([12240, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 33],"float32"),Tensor([2577, 33],"float32"),Tensor([2577, 33],"float32"),Tensor([2577, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 19],"float32"),Tensor([2125, 19],"float32"),Tensor([2125, 19],"float32"),Tensor([2125, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 35],"float32"),Tensor([1360, 35],"float32"),Tensor([1360, 35],"float32"),Tensor([1360, 35],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 18],"float32"),Tensor([4165, 18],"float32"),Tensor([4165, 18],"float32"),Tensor([4165, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 2],"float32"),Tensor([16660, 2],"float32"),Tensor([16660, 2],"float32"),Tensor([16660, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 29],"float32"),Tensor([2125, 29],"float32"),Tensor([2125, 29],"float32"),Tensor([2125, 29],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([70290],"float32"),Tensor([70290],"float32"),Tensor([70290],"float32"),Tensor([70290],"float32"),), axis=1, )
paddle.stack(list[Tensor([4, 22400],"int64"),Tensor([4, 22400],"int64"),], axis=-1, )
paddle.stack(tuple(Tensor([95760],"float32"),Tensor([95760],"float32"),Tensor([95760],"float32"),Tensor([95760],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([138120],"float32"),Tensor([138120],"float32"),Tensor([138120],"float32"),Tensor([138120],"float32"),), axis=1, )
paddle.stack(list[Tensor([10285, 16],"float32"),Tensor([10285, 16],"float32"),Tensor([10285, 16],"float32"),Tensor([10285, 16],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([81344],"float32"),Tensor([81344],"float32"),Tensor([81344],"float32"),Tensor([81344],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([198249],"float32"),Tensor([198249],"float32"),Tensor([198249],"float32"),Tensor([198249],"float32"),), axis=1, )
paddle.stack(list[Tensor([9261, 5],"float32"),Tensor([9261, 5],"float32"),Tensor([9261, 5],"float32"),Tensor([9261, 5],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([79680],"float32"),Tensor([79680],"float32"),Tensor([79680],"float32"),Tensor([79680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([60800],"float32"),Tensor([60800],"float32"),Tensor([60800],"float32"),Tensor([60800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([229965],"float32"),Tensor([229965],"float32"),Tensor([229965],"float32"),Tensor([229965],"float32"),), axis=1, )
paddle.stack(list[Tensor([4165, 13],"float32"),Tensor([4165, 13],"float32"),Tensor([4165, 13],"float32"),Tensor([4165, 13],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([47104],"float32"),Tensor([47104],"float32"),Tensor([47104],"float32"),Tensor([47104],"float32"),), axis=1, )
paddle.stack(list[Tensor([4789, 18],"float32"),Tensor([4789, 18],"float32"),Tensor([4789, 18],"float32"),Tensor([4789, 18],"float32"),], axis=1, )
paddle.stack(x=tuple(Tensor([1, 16, 256, 32],"float32"),Tensor([1, 16, 256, 32],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([239382],"float32"),Tensor([239382],"float32"),Tensor([239382],"float32"),Tensor([239382],"float32"),), axis=1, )
paddle.stack(list[Tensor([9180, 19],"float32"),Tensor([9180, 19],"float32"),Tensor([9180, 19],"float32"),Tensor([9180, 19],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([204624],"float32"),Tensor([204624],"float32"),Tensor([204624],"float32"),Tensor([204624],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1, 40, 30, 64],"float32"),Tensor([1, 40, 30, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([78144],"float32"),Tensor([78144],"float32"),Tensor([78144],"float32"),Tensor([78144],"float32"),), axis=1, )
paddle.stack(list[Tensor([134, 4, 4, 32],"float16"),Tensor([134, 4, 4, 32],"float16"),], -1, )
paddle.stack(tuple(Tensor([44352],"float32"),Tensor([44352],"float32"),Tensor([44352],"float32"),Tensor([44352],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1, 300, 4, 64],"float32"),Tensor([1, 300, 4, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([75615],"float32"),Tensor([75615],"float32"),Tensor([75615],"float32"),Tensor([75615],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 43],"float32"),Tensor([3598, 43],"float32"),Tensor([3598, 43],"float32"),Tensor([3598, 43],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([223554],"float32"),Tensor([223554],"float32"),Tensor([223554],"float32"),Tensor([223554],"float32"),), axis=1, )
paddle.stack(list[Tensor([3060, 17],"float32"),Tensor([3060, 17],"float32"),Tensor([3060, 17],"float32"),Tensor([3060, 17],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([90060],"float32"),Tensor([90060],"float32"),Tensor([90060],"float32"),Tensor([90060],"float32"),), axis=1, )
paddle.stack(list[Tensor([232, 232],"float32"),Tensor([232, 232],"float32"),Tensor([232, 232],"float32"),Tensor([232, 232],"float32"),], axis=-1, )
paddle.stack(list[Tensor([4165, 20],"float32"),Tensor([4165, 20],"float32"),Tensor([4165, 20],"float32"),Tensor([4165, 20],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([68224],"float32"),Tensor([68224],"float32"),Tensor([68224],"float32"),Tensor([68224],"float32"),), axis=1, )
paddle.stack(list[Tensor([4789, 33],"float32"),Tensor([4789, 33],"float32"),Tensor([4789, 33],"float32"),Tensor([4789, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([123904],"float32"),Tensor([123904],"float32"),Tensor([123904],"float32"),Tensor([123904],"float32"),], -1, )
paddle.stack(list[Tensor([3060, 36],"float32"),Tensor([3060, 36],"float32"),Tensor([3060, 36],"float32"),Tensor([3060, 36],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([58800],"float32"),Tensor([58800],"float32"),Tensor([58800],"float32"),Tensor([58800],"float32"),), axis=1, )
paddle.stack(list[Tensor([2577, 30],"float32"),Tensor([2577, 30],"float32"),Tensor([2577, 30],"float32"),Tensor([2577, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 18],"float32"),Tensor([3598, 18],"float32"),Tensor([3598, 18],"float32"),Tensor([3598, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([199680],"float32"),Tensor([199680],"float32"),Tensor([199680],"float32"),Tensor([199680],"float32"),], -1, )
paddle.stack(tuple(Tensor([176490],"float32"),Tensor([176490],"float32"),Tensor([176490],"float32"),Tensor([176490],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([62310],"float32"),Tensor([62310],"float32"),Tensor([62310],"float32"),Tensor([62310],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75840],"float32"),Tensor([75840],"float32"),Tensor([75840],"float32"),Tensor([75840],"float32"),), axis=1, )
paddle.stack(list[Tensor([2577, 41],"float32"),Tensor([2577, 41],"float32"),Tensor([2577, 41],"float32"),Tensor([2577, 41],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([83328],"float32"),Tensor([83328],"float32"),Tensor([83328],"float32"),Tensor([83328],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75240],"float32"),Tensor([75240],"float32"),Tensor([75240],"float32"),Tensor([75240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([66304],"float32"),Tensor([66304],"float32"),Tensor([66304],"float32"),Tensor([66304],"float32"),), axis=1, )
paddle.stack(list[Tensor([4165, 10],"float32"),Tensor([4165, 10],"float32"),Tensor([4165, 10],"float32"),Tensor([4165, 10],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([46230],"float32"),Tensor([46230],"float32"),Tensor([46230],"float32"),Tensor([46230],"float32"),), axis=1, )
paddle.stack(list[Tensor([49920],"float32"),Tensor([49920],"float32"),Tensor([49920],"float32"),Tensor([49920],"float32"),], -1, )
paddle.stack(list[Tensor([3598, 13],"float32"),Tensor([3598, 13],"float32"),Tensor([3598, 13],"float32"),Tensor([3598, 13],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([56, 32, 32],"float32"),Tensor([56, 32, 32],"float32"),), axis=3, )
paddle.stack(list[Tensor([3060, 39],"float32"),Tensor([3060, 39],"float32"),Tensor([3060, 39],"float32"),Tensor([3060, 39],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([56280],"float32"),Tensor([56280],"float32"),Tensor([56280],"float32"),Tensor([56280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75555],"float32"),Tensor([75555],"float32"),Tensor([75555],"float32"),Tensor([75555],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 10],"float32"),Tensor([3598, 10],"float32"),Tensor([3598, 10],"float32"),Tensor([3598, 10],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([230175],"float32"),Tensor([230175],"float32"),Tensor([230175],"float32"),Tensor([230175],"float32"),), axis=1, )
paddle.stack(list[Tensor([4165, 39],"float32"),Tensor([4165, 39],"float32"),Tensor([4165, 39],"float32"),Tensor([4165, 39],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([90720],"float32"),Tensor([90720],"float32"),Tensor([90720],"float32"),Tensor([90720],"float32"),), axis=1, )
paddle.stack(list[Tensor([157920],"int32"),Tensor([157920],"int32"),Tensor([157920],"int32"),Tensor([157920],"int32"),], axis=0, )
paddle.stack(list[Tensor([27648],"float32"),Tensor([27648],"float32"),Tensor([27648],"float32"),Tensor([27648],"float32"),], -1, )
paddle.stack(list[Tensor([3598, 21],"float32"),Tensor([3598, 21],"float32"),Tensor([3598, 21],"float32"),Tensor([3598, 21],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([64320],"float32"),Tensor([64320],"float32"),Tensor([64320],"float32"),Tensor([64320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([64605],"float32"),Tensor([64605],"float32"),Tensor([64605],"float32"),Tensor([64605],"float32"),), axis=1, )
paddle.stack(list[Tensor([6804, 5],"float32"),Tensor([6804, 5],"float32"),Tensor([6804, 5],"float32"),Tensor([6804, 5],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([57000],"float32"),Tensor([57000],"float32"),Tensor([57000],"float32"),Tensor([57000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([54000],"float32"),Tensor([54000],"float32"),Tensor([54000],"float32"),Tensor([54000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([89600],"float32"),Tensor([89600],"float32"),Tensor([89600],"float32"),Tensor([89600],"float32"),), axis=1, )
paddle.stack(list[Tensor([10285, 4],"float32"),Tensor([10285, 4],"float32"),Tensor([10285, 4],"float32"),Tensor([10285, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 11],"float32"),Tensor([10105, 11],"float32"),Tensor([10105, 11],"float32"),Tensor([10105, 11],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([89984],"float32"),Tensor([89984],"float32"),Tensor([89984],"float32"),Tensor([89984],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([55845],"float32"),Tensor([55845],"float32"),Tensor([55845],"float32"),Tensor([55845],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([52560],"float32"),Tensor([52560],"float32"),Tensor([52560],"float32"),Tensor([52560],"float32"),), axis=1, )
paddle.stack(list[Tensor([19125, 7],"float32"),Tensor([19125, 7],"float32"),Tensor([19125, 7],"float32"),Tensor([19125, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 15],"float32"),Tensor([4789, 15],"float32"),Tensor([4789, 15],"float32"),Tensor([4789, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 32],"float32"),Tensor([4789, 32],"float32"),Tensor([4789, 32],"float32"),Tensor([4789, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 45],"float32"),Tensor([2125, 45],"float32"),Tensor([2125, 45],"float32"),Tensor([2125, 45],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([75375],"float32"),Tensor([75375],"float32"),Tensor([75375],"float32"),Tensor([75375],"float32"),), axis=1, )
paddle.stack(list[Tensor([1360, 21],"float32"),Tensor([1360, 21],"float32"),Tensor([1360, 21],"float32"),Tensor([1360, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([150528],"float32"),Tensor([150528],"float32"),Tensor([150528],"float32"),Tensor([150528],"float32"),], -1, )
paddle.stack(list[Tensor([4165, 17],"float32"),Tensor([4165, 17],"float32"),Tensor([4165, 17],"float32"),Tensor([4165, 17],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([57408],"float32"),Tensor([57408],"float32"),Tensor([57408],"float32"),Tensor([57408],"float32"),), axis=1, )
paddle.stack(list[Tensor([16, 476, 4],"float32"),Tensor([16, 476, 4],"float32"),Tensor([16, 476, 4],"float32"),Tensor([16, 476, 4],"float32"),Tensor([16, 476, 4],"float32"),Tensor([16, 476, 4],"float32"),], )
paddle.stack(tuple(Tensor([92416],"float32"),Tensor([92416],"float32"),Tensor([92416],"float32"),Tensor([92416],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([78336],"float32"),Tensor([78336],"float32"),Tensor([78336],"float32"),Tensor([78336],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([54400],"float32"),Tensor([54400],"float32"),Tensor([54400],"float32"),Tensor([54400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([51200],"float32"),Tensor([51200],"float32"),Tensor([51200],"float32"),Tensor([51200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([64170],"float32"),Tensor([64170],"float32"),Tensor([64170],"float32"),Tensor([64170],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([237870],"float32"),Tensor([237870],"float32"),Tensor([237870],"float32"),Tensor([237870],"float32"),), axis=1, )
paddle.stack(list[Tensor([12240, 20],"float32"),Tensor([12240, 20],"float32"),Tensor([12240, 20],"float32"),Tensor([12240, 20],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([4, 25, 29, 64],"float32"),Tensor([4, 25, 29, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([188256],"float32"),Tensor([188256],"float32"),Tensor([188256],"float32"),Tensor([188256],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([52920],"float32"),Tensor([52920],"float32"),Tensor([52920],"float32"),Tensor([52920],"float32"),), axis=1, )
paddle.stack(list[Tensor([5376, 7],"float32"),Tensor([5376, 7],"float32"),Tensor([5376, 7],"float32"),Tensor([5376, 7],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([56640],"float32"),Tensor([56640],"float32"),Tensor([56640],"float32"),Tensor([56640],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61065],"float32"),Tensor([61065],"float32"),Tensor([61065],"float32"),Tensor([61065],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([26880],"float32"),Tensor([26880],"float32"),Tensor([26880],"float32"),Tensor([26880],"float32"),), axis=1, )
paddle.stack(list[Tensor([2577, 21],"float32"),Tensor([2577, 21],"float32"),Tensor([2577, 21],"float32"),Tensor([2577, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 20],"float32"),Tensor([4789, 20],"float32"),Tensor([4789, 20],"float32"),Tensor([4789, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([2577, 31],"float32"),Tensor([2577, 31],"float32"),Tensor([2577, 31],"float32"),Tensor([2577, 31],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([69632],"float32"),Tensor([69632],"float32"),Tensor([69632],"float32"),Tensor([69632],"float32"),), axis=1, )
paddle.stack(list[Tensor([34000, 5],"float32"),Tensor([34000, 5],"float32"),Tensor([34000, 5],"float32"),Tensor([34000, 5],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([61440],"float32"),Tensor([61440],"float32"),Tensor([61440],"float32"),Tensor([61440],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([46464],"float32"),Tensor([46464],"float32"),Tensor([46464],"float32"),Tensor([46464],"float32"),), axis=1, )
paddle.stack(list[Tensor([11050, 13],"float32"),Tensor([11050, 13],"float32"),Tensor([11050, 13],"float32"),Tensor([11050, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 28],"float32"),Tensor([3060, 28],"float32"),Tensor([3060, 28],"float32"),Tensor([3060, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 15],"float32"),Tensor([1726, 15],"float32"),Tensor([1726, 15],"float32"),Tensor([1726, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 21],"float32"),Tensor([11050, 21],"float32"),Tensor([11050, 21],"float32"),Tensor([11050, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 31],"float32"),Tensor([1360, 31],"float32"),Tensor([1360, 31],"float32"),Tensor([1360, 31],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([42780],"float32"),Tensor([42780],"float32"),Tensor([42780],"float32"),Tensor([42780],"float32"),), axis=1, )
paddle.stack(list[Tensor([13125, 2],"float32"),Tensor([13125, 2],"float32"),Tensor([13125, 2],"float32"),Tensor([13125, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 5],"float32"),Tensor([19125, 5],"float32"),Tensor([19125, 5],"float32"),Tensor([19125, 5],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([229455],"float32"),Tensor([229455],"float32"),Tensor([229455],"float32"),Tensor([229455],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69120],"float32"),Tensor([69120],"float32"),Tensor([69120],"float32"),Tensor([69120],"float32"),), axis=1, )
paddle.stack(list[Tensor([1360, 33],"float32"),Tensor([1360, 33],"float32"),Tensor([1360, 33],"float32"),Tensor([1360, 33],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([80256],"float32"),Tensor([80256],"float32"),Tensor([80256],"float32"),Tensor([80256],"float32"),), axis=1, )
paddle.stack(list[Tensor([4789, 29],"float32"),Tensor([4789, 29],"float32"),Tensor([4789, 29],"float32"),Tensor([4789, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([28800],"float32"),Tensor([28800],"float32"),Tensor([28800],"float32"),Tensor([28800],"float32"),], -1, )
paddle.stack(tuple(Tensor([220968],"float32"),Tensor([220968],"float32"),Tensor([220968],"float32"),Tensor([220968],"float32"),), axis=1, )
paddle.stack(list[Tensor([4165, 19],"float32"),Tensor([4165, 19],"float32"),Tensor([4165, 19],"float32"),Tensor([4165, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 23],"float32"),Tensor([1726, 23],"float32"),Tensor([1726, 23],"float32"),Tensor([1726, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 8],"float32"),Tensor([12240, 8],"float32"),Tensor([12240, 8],"float32"),Tensor([12240, 8],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([34560],"float32"),Tensor([34560],"float32"),Tensor([34560],"float32"),Tensor([34560],"float32"),), axis=1, )
paddle.stack(list[Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([180048],"float32"),Tensor([180048],"float32"),Tensor([180048],"float32"),Tensor([180048],"float32"),), axis=1, )
paddle.stack(list[Tensor([4165, 42],"float32"),Tensor([4165, 42],"float32"),Tensor([4165, 42],"float32"),Tensor([4165, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 13],"float32"),Tensor([19125, 13],"float32"),Tensor([19125, 13],"float32"),Tensor([19125, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3060, 16],"float32"),Tensor([3060, 16],"float32"),Tensor([3060, 16],"float32"),Tensor([3060, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 14],"float32"),Tensor([4789, 14],"float32"),Tensor([4789, 14],"float32"),Tensor([4789, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([13125, 5],"float32"),Tensor([13125, 5],"float32"),Tensor([13125, 5],"float32"),Tensor([13125, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 43],"float32"),Tensor([2577, 43],"float32"),Tensor([2577, 43],"float32"),Tensor([2577, 43],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 50],"float32"),Tensor([4165, 50],"float32"),Tensor([4165, 50],"float32"),Tensor([4165, 50],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 12],"float32"),Tensor([2577, 12],"float32"),Tensor([2577, 12],"float32"),Tensor([2577, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 10],"float32"),Tensor([10285, 10],"float32"),Tensor([10285, 10],"float32"),Tensor([10285, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 12],"float32"),Tensor([16660, 12],"float32"),Tensor([16660, 12],"float32"),Tensor([16660, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 12],"float32"),Tensor([19125, 12],"float32"),Tensor([19125, 12],"float32"),Tensor([19125, 12],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([45135],"float32"),Tensor([45135],"float32"),Tensor([45135],"float32"),Tensor([45135],"float32"),), axis=1, )
paddle.stack(list[Tensor([10285, 14],"float32"),Tensor([10285, 14],"float32"),Tensor([10285, 14],"float32"),Tensor([10285, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 4],"float32"),Tensor([16660, 4],"float32"),Tensor([16660, 4],"float32"),Tensor([16660, 4],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([52800],"float32"),Tensor([52800],"float32"),Tensor([52800],"float32"),Tensor([52800],"float32"),), axis=1, )
paddle.stack(list[Tensor([1360, 25],"float32"),Tensor([1360, 25],"float32"),Tensor([1360, 25],"float32"),Tensor([1360, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([182400],"float32"),Tensor([182400],"float32"),Tensor([182400],"float32"),Tensor([182400],"float32"),], -1, )
paddle.stack(list[Tensor([2577, 44],"float32"),Tensor([2577, 44],"float32"),Tensor([2577, 44],"float32"),Tensor([2577, 44],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([63488],"float32"),Tensor([63488],"float32"),Tensor([63488],"float32"),Tensor([63488],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([88704],"float32"),Tensor([88704],"float32"),Tensor([88704],"float32"),Tensor([88704],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([65472],"float32"),Tensor([65472],"float32"),Tensor([65472],"float32"),Tensor([65472],"float32"),), axis=1, )
paddle.stack(list[Tensor([10105, 8],"float32"),Tensor([10105, 8],"float32"),Tensor([10105, 8],"float32"),Tensor([10105, 8],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([55200],"float32"),Tensor([55200],"float32"),Tensor([55200],"float32"),Tensor([55200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([77952],"float32"),Tensor([77952],"float32"),Tensor([77952],"float32"),Tensor([77952],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([59250],"float32"),Tensor([59250],"float32"),Tensor([59250],"float32"),Tensor([59250],"float32"),), axis=1, )
paddle.stack(list[Tensor([4165, 43],"float32"),Tensor([4165, 43],"float32"),Tensor([4165, 43],"float32"),Tensor([4165, 43],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([220992],"float32"),Tensor([220992],"float32"),Tensor([220992],"float32"),Tensor([220992],"float32"),), axis=1, )
paddle.stack(list[Tensor([4789, 31],"float32"),Tensor([4789, 31],"float32"),Tensor([4789, 31],"float32"),Tensor([4789, 31],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([236616],"float32"),Tensor([236616],"float32"),Tensor([236616],"float32"),Tensor([236616],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([48576],"float32"),Tensor([48576],"float32"),Tensor([48576],"float32"),Tensor([48576],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([67260],"float32"),Tensor([67260],"float32"),Tensor([67260],"float32"),Tensor([67260],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61500],"float32"),Tensor([61500],"float32"),Tensor([61500],"float32"),Tensor([61500],"float32"),), axis=1, )
paddle.stack(list[Tensor([1726, 24],"float32"),Tensor([1726, 24],"float32"),Tensor([1726, 24],"float32"),Tensor([1726, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([32448],"float32"),Tensor([32448],"float32"),Tensor([32448],"float32"),Tensor([32448],"float32"),], -1, )
paddle.stack(tuple(Tensor([45632],"float32"),Tensor([45632],"float32"),Tensor([45632],"float32"),Tensor([45632],"float32"),), axis=1, )
paddle.stack(list[Tensor([2048, 1, 4, 32],"float16"),Tensor([2048, 1, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([1726, 30],"float32"),Tensor([1726, 30],"float32"),Tensor([1726, 30],"float32"),Tensor([1726, 30],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([71100],"float32"),Tensor([71100],"float32"),Tensor([71100],"float32"),Tensor([71100],"float32"),), axis=1, )
paddle.stack(list[Tensor([34000, 6],"float32"),Tensor([34000, 6],"float32"),Tensor([34000, 6],"float32"),Tensor([34000, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 17],"float32"),Tensor([1726, 17],"float32"),Tensor([1726, 17],"float32"),Tensor([1726, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 50],"float32"),Tensor([3598, 50],"float32"),Tensor([3598, 50],"float32"),Tensor([3598, 50],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([86016],"float32"),Tensor([86016],"float32"),Tensor([86016],"float32"),Tensor([86016],"float32"),), axis=1, )
paddle.stack(list[Tensor([2577, 37],"float32"),Tensor([2577, 37],"float32"),Tensor([2577, 37],"float32"),Tensor([2577, 37],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([79935],"float32"),Tensor([79935],"float32"),Tensor([79935],"float32"),Tensor([79935],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([177276],"float32"),Tensor([177276],"float32"),Tensor([177276],"float32"),Tensor([177276],"float32"),), axis=1, )
paddle.stack(list[Tensor([4725, 10],"float32"),Tensor([4725, 10],"float32"),Tensor([4725, 10],"float32"),Tensor([4725, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 33],"float32"),Tensor([3598, 33],"float32"),Tensor([3598, 33],"float32"),Tensor([3598, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 23],"float32"),Tensor([10285, 23],"float32"),Tensor([10285, 23],"float32"),Tensor([10285, 23],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([77760],"float32"),Tensor([77760],"float32"),Tensor([77760],"float32"),Tensor([77760],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([73984],"float32"),Tensor([73984],"float32"),Tensor([73984],"float32"),Tensor([73984],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([76860],"float32"),Tensor([76860],"float32"),Tensor([76860],"float32"),Tensor([76860],"float32"),), axis=1, )
paddle.stack(list[Tensor([128, 512],"float16"),Tensor([128, 512],"float16"),Tensor([128, 512],"float16"),], axis=1, )
paddle.stack(tuple(Tensor([62208],"float32"),Tensor([62208],"float32"),Tensor([62208],"float32"),Tensor([62208],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63360],"float32"),Tensor([63360],"float32"),Tensor([63360],"float32"),Tensor([63360],"float32"),), axis=1, )
paddle.stack(list[Tensor([27540, 6],"float32"),Tensor([27540, 6],"float32"),Tensor([27540, 6],"float32"),Tensor([27540, 6],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([49410],"float32"),Tensor([49410],"float32"),Tensor([49410],"float32"),Tensor([49410],"float32"),), axis=1, )
paddle.stack(list[Tensor([2577, 54],"float32"),Tensor([2577, 54],"float32"),Tensor([2577, 54],"float32"),Tensor([2577, 54],"float32"),], axis=1, )
paddle.stack(list[Tensor([243360],"float32"),Tensor([243360],"float32"),Tensor([243360],"float32"),Tensor([243360],"float32"),], -1, )
paddle.stack(list[Tensor([61952],"float32"),Tensor([61952],"float32"),Tensor([61952],"float32"),Tensor([61952],"float32"),], -1, )
paddle.stack(tuple(Tensor([91980],"float32"),Tensor([91980],"float32"),Tensor([91980],"float32"),Tensor([91980],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([202572],"float32"),Tensor([202572],"float32"),Tensor([202572],"float32"),Tensor([202572],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([51840],"float32"),Tensor([51840],"float32"),Tensor([51840],"float32"),Tensor([51840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([28800],"float32"),Tensor([28800],"float32"),Tensor([28800],"float32"),Tensor([28800],"float32"),), axis=1, )
paddle.stack(list[Tensor([3060, 34],"float32"),Tensor([3060, 34],"float32"),Tensor([3060, 34],"float32"),Tensor([3060, 34],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([61568],"float32"),Tensor([61568],"float32"),Tensor([61568],"float32"),Tensor([61568],"float32"),), axis=1, )
paddle.stack(list[Tensor([102400],"float32"),Tensor([102400],"float32"),Tensor([102400],"float32"),Tensor([102400],"float32"),], -1, )
paddle.stack(list[Tensor([2125, 22],"float32"),Tensor([2125, 22],"float32"),Tensor([2125, 22],"float32"),Tensor([2125, 22],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([1, 1100, 64],"float32"),Tensor([1, 1100, 64],"float32"),), axis=3, )
paddle.stack(list[Tensor([3598, 37],"float32"),Tensor([3598, 37],"float32"),Tensor([3598, 37],"float32"),Tensor([3598, 37],"float32"),], axis=1, )
paddle.stack(list[Tensor([5376, 8],"float32"),Tensor([5376, 8],"float32"),Tensor([5376, 8],"float32"),Tensor([5376, 8],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([84864],"float32"),Tensor([84864],"float32"),Tensor([84864],"float32"),Tensor([84864],"float32"),), axis=1, )
paddle.stack(list[Tensor([3060, 54],"float32"),Tensor([3060, 54],"float32"),Tensor([3060, 54],"float32"),Tensor([3060, 54],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([96768],"float32"),Tensor([96768],"float32"),Tensor([96768],"float32"),Tensor([96768],"float32"),), axis=1, )
paddle.stack(list[Tensor([147456],"float32"),Tensor([147456],"float32"),Tensor([147456],"float32"),Tensor([147456],"float32"),], -1, )
paddle.stack(list[Tensor([2577, 52],"float32"),Tensor([2577, 52],"float32"),Tensor([2577, 52],"float32"),Tensor([2577, 52],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([94464],"float32"),Tensor([94464],"float32"),Tensor([94464],"float32"),Tensor([94464],"float32"),), axis=1, )
paddle.stack(list[Tensor([1360, 40],"float32"),Tensor([1360, 40],"float32"),Tensor([1360, 40],"float32"),Tensor([1360, 40],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 17],"float32"),Tensor([2125, 17],"float32"),Tensor([2125, 17],"float32"),Tensor([2125, 17],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([85120],"float32"),Tensor([85120],"float32"),Tensor([85120],"float32"),Tensor([85120],"float32"),), axis=1, )
paddle.stack(list[Tensor([9180, 10],"float32"),Tensor([9180, 10],"float32"),Tensor([9180, 10],"float32"),Tensor([9180, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 23],"float32"),Tensor([2577, 23],"float32"),Tensor([2577, 23],"float32"),Tensor([2577, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 14],"float32"),Tensor([4165, 14],"float32"),Tensor([4165, 14],"float32"),Tensor([4165, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([86528],"float32"),Tensor([86528],"float32"),Tensor([86528],"float32"),Tensor([86528],"float32"),], -1, )
paddle.stack(tuple(Tensor([190296],"float32"),Tensor([190296],"float32"),Tensor([190296],"float32"),Tensor([190296],"float32"),), axis=1, )
paddle.stack(list[Tensor([12240, 7],"float32"),Tensor([12240, 7],"float32"),Tensor([12240, 7],"float32"),Tensor([12240, 7],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([51030],"float32"),Tensor([51030],"float32"),Tensor([51030],"float32"),Tensor([51030],"float32"),), axis=1, )
paddle.stack(list[Tensor([8, 32, 21, 4],"float32"),Tensor([8, 32, 21, 4],"float32"),Tensor([8, 32, 21, 4],"float32"),Tensor([8, 32, 21, 4],"float32"),Tensor([8, 32, 21, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([2125, 44],"float32"),Tensor([2125, 44],"float32"),Tensor([2125, 44],"float32"),Tensor([2125, 44],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 36],"float32"),Tensor([4165, 36],"float32"),Tensor([4165, 36],"float32"),Tensor([4165, 36],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([79872],"float32"),Tensor([79872],"float32"),Tensor([79872],"float32"),Tensor([79872],"float32"),), axis=1, )
paddle.stack(list[Tensor([24565, 2],"float32"),Tensor([24565, 2],"float32"),Tensor([24565, 2],"float32"),Tensor([24565, 2],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([51240],"float32"),Tensor([51240],"float32"),Tensor([51240],"float32"),Tensor([51240],"float32"),), axis=1, )
paddle.stack(list[Tensor([4789, 23],"float32"),Tensor([4789, 23],"float32"),Tensor([4789, 23],"float32"),Tensor([4789, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([8, 32, 22, 4],"float32"),Tensor([8, 32, 22, 4],"float32"),Tensor([8, 32, 22, 4],"float32"),Tensor([8, 32, 22, 4],"float32"),Tensor([8, 32, 22, 4],"float32"),], axis=-2, )
paddle.stack(tuple(Tensor([99456],"float32"),Tensor([99456],"float32"),Tensor([99456],"float32"),Tensor([99456],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([37632],"float32"),Tensor([37632],"float32"),Tensor([37632],"float32"),Tensor([37632],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([58752],"float32"),Tensor([58752],"float32"),Tensor([58752],"float32"),Tensor([58752],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([194157],"float32"),Tensor([194157],"float32"),Tensor([194157],"float32"),Tensor([194157],"float32"),), axis=1, )
paddle.stack(list[Tensor([3060, 45],"float32"),Tensor([3060, 45],"float32"),Tensor([3060, 45],"float32"),Tensor([3060, 45],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([166533],"float32"),Tensor([166533],"float32"),Tensor([166533],"float32"),Tensor([166533],"float32"),), axis=1, )
paddle.stack(list[Tensor([1726, 36],"float32"),Tensor([1726, 36],"float32"),Tensor([1726, 36],"float32"),Tensor([1726, 36],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([62730],"float32"),Tensor([62730],"float32"),Tensor([62730],"float32"),Tensor([62730],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([60450],"float32"),Tensor([60450],"float32"),Tensor([60450],"float32"),Tensor([60450],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1, 80, 60, 64],"float32"),Tensor([1, 80, 60, 64],"float32"),), axis=4, )
paddle.stack(list[Tensor([4165, 9],"float32"),Tensor([4165, 9],"float32"),Tensor([4165, 9],"float32"),Tensor([4165, 9],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([73125],"float32"),Tensor([73125],"float32"),Tensor([73125],"float32"),Tensor([73125],"float32"),), axis=1, )
paddle.stack(list[Tensor([1360, 24],"float32"),Tensor([1360, 24],"float32"),Tensor([1360, 24],"float32"),Tensor([1360, 24],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([72960],"float32"),Tensor([72960],"float32"),Tensor([72960],"float32"),Tensor([72960],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([205923],"float32"),Tensor([205923],"float32"),Tensor([205923],"float32"),Tensor([205923],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([78660],"float32"),Tensor([78660],"float32"),Tensor([78660],"float32"),Tensor([78660],"float32"),), axis=1, )
paddle.stack(list[Tensor([10105, 5],"float32"),Tensor([10105, 5],"float32"),Tensor([10105, 5],"float32"),Tensor([10105, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 27],"float32"),Tensor([1360, 27],"float32"),Tensor([1360, 27],"float32"),Tensor([1360, 27],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([1, 96, 72, 64],"float32"),Tensor([1, 96, 72, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([63840],"float32"),Tensor([63840],"float32"),Tensor([63840],"float32"),Tensor([63840],"float32"),), axis=1, )
paddle.stack(list[Tensor([3060, 23],"float32"),Tensor([3060, 23],"float32"),Tensor([3060, 23],"float32"),Tensor([3060, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 31],"float32"),Tensor([4165, 31],"float32"),Tensor([4165, 31],"float32"),Tensor([4165, 31],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 21],"float32"),Tensor([4789, 21],"float32"),Tensor([4789, 21],"float32"),Tensor([4789, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 19],"float32"),Tensor([1726, 19],"float32"),Tensor([1726, 19],"float32"),Tensor([1726, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 300, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 300, 256],"float32"),], )
paddle.stack(tuple(Tensor([75075],"float32"),Tensor([75075],"float32"),Tensor([75075],"float32"),Tensor([75075],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 49],"float32"),Tensor([3598, 49],"float32"),Tensor([3598, 49],"float32"),Tensor([3598, 49],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([75776],"float32"),Tensor([75776],"float32"),Tensor([75776],"float32"),Tensor([75776],"float32"),), axis=1, )
paddle.stack(list[Tensor([27540, 4],"float32"),Tensor([27540, 4],"float32"),Tensor([27540, 4],"float32"),Tensor([27540, 4],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([47616],"float32"),Tensor([47616],"float32"),Tensor([47616],"float32"),Tensor([47616],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([55890],"float32"),Tensor([55890],"float32"),Tensor([55890],"float32"),Tensor([55890],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 42],"float32"),Tensor([3598, 42],"float32"),Tensor([3598, 42],"float32"),Tensor([3598, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([240, 240],"float32"),Tensor([240, 240],"float32"),Tensor([240, 240],"float32"),Tensor([240, 240],"float32"),], axis=-1, )
paddle.stack(tuple(Tensor([68625],"float32"),Tensor([68625],"float32"),Tensor([68625],"float32"),Tensor([68625],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75330],"float32"),Tensor([75330],"float32"),Tensor([75330],"float32"),Tensor([75330],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([36000],"float32"),Tensor([36000],"float32"),Tensor([36000],"float32"),Tensor([36000],"float32"),), axis=1, )
paddle.stack(list[Tensor([13125, 10],"float32"),Tensor([13125, 10],"float32"),Tensor([13125, 10],"float32"),Tensor([13125, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 12],"float32"),Tensor([3060, 12],"float32"),Tensor([3060, 12],"float32"),Tensor([3060, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([37632],"float32"),Tensor([37632],"float32"),Tensor([37632],"float32"),Tensor([37632],"float32"),], -1, )
paddle.stack(tuple(Tensor([242991],"float32"),Tensor([242991],"float32"),Tensor([242991],"float32"),Tensor([242991],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57285],"float32"),Tensor([57285],"float32"),Tensor([57285],"float32"),Tensor([57285],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63720],"float32"),Tensor([63720],"float32"),Tensor([63720],"float32"),Tensor([63720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61824],"float32"),Tensor([61824],"float32"),Tensor([61824],"float32"),Tensor([61824],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 32],"float32"),Tensor([3598, 32],"float32"),Tensor([3598, 32],"float32"),Tensor([3598, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([6804, 10],"float32"),Tensor([6804, 10],"float32"),Tensor([6804, 10],"float32"),Tensor([6804, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 3],"float32"),Tensor([9180, 3],"float32"),Tensor([9180, 3],"float32"),Tensor([9180, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 14],"float32"),Tensor([16660, 14],"float32"),Tensor([16660, 14],"float32"),Tensor([16660, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 7],"float32"),Tensor([10105, 7],"float32"),Tensor([10105, 7],"float32"),Tensor([10105, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 11],"float32"),Tensor([10285, 11],"float32"),Tensor([10285, 11],"float32"),Tensor([10285, 11],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([72360],"float32"),Tensor([72360],"float32"),Tensor([72360],"float32"),Tensor([72360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([191301],"float32"),Tensor([191301],"float32"),Tensor([191301],"float32"),Tensor([191301],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([65664],"float32"),Tensor([65664],"float32"),Tensor([65664],"float32"),Tensor([65664],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 29],"float32"),Tensor([3598, 29],"float32"),Tensor([3598, 29],"float32"),Tensor([3598, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 42],"float32"),Tensor([4789, 42],"float32"),Tensor([4789, 42],"float32"),Tensor([4789, 42],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([55936],"float32"),Tensor([55936],"float32"),Tensor([55936],"float32"),Tensor([55936],"float32"),), axis=1, )
paddle.stack(list[Tensor([1726, 22],"float32"),Tensor([1726, 22],"float32"),Tensor([1726, 22],"float32"),Tensor([1726, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 8],"float32"),Tensor([3598, 8],"float32"),Tensor([3598, 8],"float32"),Tensor([3598, 8],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([54750],"float32"),Tensor([54750],"float32"),Tensor([54750],"float32"),Tensor([54750],"float32"),), axis=1, )
paddle.stack(list[Tensor([4165, 54],"float32"),Tensor([4165, 54],"float32"),Tensor([4165, 54],"float32"),Tensor([4165, 54],"float32"),], axis=1, )
paddle.stack(list[Tensor([43200],"float32"),Tensor([43200],"float32"),Tensor([43200],"float32"),Tensor([43200],"float32"),], -1, )
paddle.stack(tuple(Tensor([79360],"float32"),Tensor([79360],"float32"),Tensor([79360],"float32"),Tensor([79360],"float32"),), axis=1, )
paddle.stack(list[Tensor([2125, 14],"float32"),Tensor([2125, 14],"float32"),Tensor([2125, 14],"float32"),Tensor([2125, 14],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([73472],"float32"),Tensor([73472],"float32"),Tensor([73472],"float32"),Tensor([73472],"float32"),), axis=1, )
paddle.stack(list[Tensor([3598, 12],"float32"),Tensor([3598, 12],"float32"),Tensor([3598, 12],"float32"),Tensor([3598, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([216, 216],"float32"),Tensor([216, 216],"float32"),Tensor([216, 216],"float32"),Tensor([216, 216],"float32"),], axis=-1, )
paddle.stack(tuple(Tensor([77220],"float32"),Tensor([77220],"float32"),Tensor([77220],"float32"),Tensor([77220],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([249405],"float32"),Tensor([249405],"float32"),Tensor([249405],"float32"),Tensor([249405],"float32"),), axis=1, )
paddle.stack(list[Tensor([4165, 48],"float32"),Tensor([4165, 48],"float32"),Tensor([4165, 48],"float32"),Tensor([4165, 48],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 38],"float32"),Tensor([1360, 38],"float32"),Tensor([1360, 38],"float32"),Tensor([1360, 38],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([48600],"float32"),Tensor([48600],"float32"),Tensor([48600],"float32"),Tensor([48600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([247086],"float32"),Tensor([247086],"float32"),Tensor([247086],"float32"),Tensor([247086],"float32"),), axis=1, )
paddle.stack(list[Tensor([11050, 16],"float32"),Tensor([11050, 16],"float32"),Tensor([11050, 16],"float32"),Tensor([11050, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 14],"float32"),Tensor([10105, 14],"float32"),Tensor([10105, 14],"float32"),Tensor([10105, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 77],"float32"),Tensor([2125, 77],"float32"),Tensor([2125, 77],"float32"),Tensor([2125, 77],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([60750],"float32"),Tensor([60750],"float32"),Tensor([60750],"float32"),Tensor([60750],"float32"),), axis=1, )
paddle.stack(list[Tensor([16660, 15],"float32"),Tensor([16660, 15],"float32"),Tensor([16660, 15],"float32"),Tensor([16660, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 48],"float32"),Tensor([2577, 48],"float32"),Tensor([2577, 48],"float32"),Tensor([2577, 48],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([69930],"float32"),Tensor([69930],"float32"),Tensor([69930],"float32"),Tensor([69930],"float32"),), axis=1, )
paddle.std(Tensor([32, 32],"float32"), )
paddle.subtract(Tensor([156816, 1],"float32"), Tensor([156816, 1],"float32"), )
paddle.subtract(Tensor([304794, 1],"float32"), Tensor([304794, 1],"float32"), )
paddle.subtract(Tensor([32, 501, 4],"float32"), Tensor([32, 501, 4],"float32"), )
paddle.subtract(Tensor([50, 1501, 1],"float32"), Tensor([50, 1501, 1],"float32"), )
paddle.subtract(Tensor([100000, 1],"float32"), Tensor([100000, 1],"float32"), )
paddle.subtract(Tensor([68608, 1],"float32"), Tensor([68608, 1],"float32"), )
paddle.subtract(Tensor([483100, 1],"float32"), Tensor([483100, 1],"float32"), )
paddle.subtract(Tensor([228595, 1],"float32"), Tensor([228595, 1],"float32"), )
paddle.subtract(Tensor([282600, 1],"float32"), Tensor([282600, 1],"float32"), )
paddle.subtract(Tensor([128512, 1],"float32"), Tensor([128512, 1],"float32"), )
paddle.subtract(Tensor([64, 64, 64, 1],"float32"), Tensor([64, 64, 64, 1],"float32"), )
paddle.subtract(Tensor([93401, 1],"float32"), Tensor([93401, 1],"float32"), )
paddle.subtract(Tensor([147015, 1],"float32"), Tensor([147015, 1],"float32"), )
paddle.subtract(Tensor([26736, 3],"float32"), Tensor([26736, 3],"float32"), )
paddle.subtract(Tensor([512, 768],"float32"), Tensor([512, 768],"float32"), )
paddle.subtract(Tensor([50000, 1],"float32"), Tensor([50000, 1],"float32"), )
paddle.subtract(Tensor([160, 3072],"float32"), Tensor([160, 3072],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([20000, 1],"float32"), Tensor([20000, 1],"float32"), )
paddle.subtract(Tensor([15548, 3],"float32"), Tensor([15548, 3],"float32"), )
paddle.subtract(Tensor([10000, 1],"float32"), Tensor([10000, 1],"float32"), )
paddle.subtract(Tensor([8810, 1],"float32"), Tensor([8810, 1],"float32"), )
paddle.subtract(Tensor([100, 376, 1],"float32"), Tensor([100, 376, 1],"float32"), )
paddle.subtract(Tensor([17152, 1],"float32"), Tensor([17152, 1],"float32"), )
paddle.subtract(Tensor([7999, 1],"float32"), Tensor([7999, 1],"float32"), )
paddle.subtract(Tensor([6512, 1],"float32"), Tensor([6512, 1],"float32"), )
paddle.subtract(Tensor([512, 15, 3],"float32"), Tensor([512, 15, 3],"float32"), )
paddle.subtract(Tensor([3, 100, 120],"float64"), Tensor([3, 100, 120],"float64"), )
paddle.subtract(Tensor([8490, 1],"float32"), Tensor([8490, 1],"float32"), )
paddle.subtract(Tensor([9420, 1],"float32"), Tensor([9420, 1],"float32"), )
paddle.subtract(Tensor([256, 15, 3],"float32"), Tensor([256, 15, 3],"float32"), )
paddle.subtract(Tensor([16, 3072],"float32"), Tensor([16, 3072],"float32"), )
paddle.subtract(Tensor([32812, 1],"float32"), Tensor([32812, 1],"float32"), )
paddle.subtract(Tensor([20600, 1],"float32"), Tensor([20600, 1],"float32"), )
paddle.subtract(Tensor([16, 768],"float32"), Tensor([16, 768],"float32"), )
paddle.subtract(Tensor([11661, 3],"float32"), Tensor([11661, 3],"float32"), )
paddle.subtract(Tensor([256, 128, 1],"float32"), Tensor([256, 128, 1],"float32"), )
paddle.subtract(Tensor([256, 16, 3],"float32"), Tensor([256, 16, 3],"float32"), )
paddle.subtract(Tensor([512, 16, 3],"float32"), Tensor([512, 16, 3],"float32"), )
paddle.subtract(Tensor([9330, 1],"float32"), Tensor([9330, 1],"float32"), )
paddle.subtract(Tensor([8, 1501, 1],"float32"), Tensor([8, 1501, 1],"float32"), )
paddle.subtract(Tensor([8192, 1],"float32"), Tensor([8192, 1],"float32"), )
paddle.subtract(Tensor([39992, 1],"float32"), Tensor([39992, 1],"float32"), )
paddle.subtract(Tensor([2, 3, 32, 32],"float32"), Tensor([2, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([34304, 1],"float32"), Tensor([34304, 1],"float32"), )
paddle.subtract(Tensor([9801, 1],"float32"), Tensor([9801, 1],"float32"), )
paddle.subtract(Tensor([17, 376, 1],"float32"), Tensor([17, 376, 1],"float32"), )
paddle.subtract(Tensor([5, 10, 15, 20],"float32"), Tensor([5, 10, 15, 20],"float32"), )
paddle.subtract(Tensor([20569, 1],"float32"), Tensor([20569, 1],"float32"), )
paddle.subtract(Tensor([6000, 1],"float32"), Tensor([6000, 1],"float32"), )
paddle.subtract(Tensor([5200, 1],"float32"), Tensor([5200, 1],"float32"), )
paddle.subtract(Tensor([8000, 1],"float32"), Tensor([8000, 1],"float32"), )
paddle.subtract(Tensor([10201, 1],"float32"), Tensor([10201, 1],"float32"), )
paddle.subtract(Tensor([10240, 1],"float32"), Tensor([10240, 1],"float32"), )
paddle.subtract(Tensor([68, 376, 1],"float32"), Tensor([68, 376, 1],"float32"), )
paddle.subtract(Tensor([64, 64, 1, 1],"float32"), Tensor([64, 64, 1, 1],"float64"), )
paddle.subtract(Tensor([3, 3, 10, 10],"float32"), Tensor([3, 3, 10, 10],"float32"), )
paddle.subtract(Tensor([8, 5, 7, 7],"float32"), Tensor([8, 5, 7, 7],"float32"), )
paddle.subtract(Tensor([2000, 1],"float32"), Tensor([2000, 1],"float32"), )
paddle.subtract(Tensor([512, 1],"float32"), Tensor([512, 1],"float32"), )
paddle.subtract(Tensor([1100, 1],"float32"), Tensor([1100, 1],"float32"), )
paddle.subtract(Tensor([501, 1],"float32"), Tensor([501, 1],"float32"), )
paddle.subtract(Tensor([992, 1],"float32"), Tensor([992, 1],"float32"), )
paddle.subtract(Tensor([2601, 1],"float32"), Tensor([2601, 1],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 30],"float32"), Tensor([1, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([1000, 1],"float32"), Tensor([1000, 1],"float32"), )
paddle.subtract(Tensor([1515, 1],"float32"), Tensor([1515, 1],"float32"), )
paddle.subtract(Tensor([1168, 1],"float32"), Tensor([1168, 1],"float32"), )
paddle.subtract(Tensor([4096, 1],"float32"), Tensor([4096, 1],"float32"), )
paddle.subtract(Tensor([1485, 1],"float32"), Tensor([1485, 1],"float32"), )
paddle.subtract(Tensor([2020, 1],"float32"), Tensor([2020, 1],"float32"), )
paddle.subtract(Tensor([2048, 1],"float32"), Tensor([2048, 1],"float32"), )
paddle.subtract(Tensor([40, 40],"bfloat16"), Tensor([40, 40],"bfloat16"), )
paddle.subtract(Tensor([1209, 1],"float32"), Tensor([1209, 1],"float32"), )
paddle.subtract(Tensor([2430, 1],"float32"), Tensor([2430, 1],"float32"), )
paddle.subtract(Tensor([64, 1, 64, 1],"float32"), Tensor([64, 1, 64, 1],"float64"), )
paddle.subtract(Tensor([16, 96, 1],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.subtract(Tensor([1, 64, 64, 1],"float32"), Tensor([1, 64, 64, 1],"float64"), )
paddle.subtract(Tensor([544, 1],"float32"), Tensor([544, 1],"float32"), )
paddle.subtract(Tensor([4830, 1],"float32"), Tensor([4830, 1],"float32"), )
paddle.subtract(Tensor([40, 40],"float32"), Tensor([40, 40],"float32"), )
paddle.subtract(Tensor([2, 1501, 1],"float32"), Tensor([2, 1501, 1],"float32"), )
paddle.subtract(Tensor([2419, 1],"float32"), Tensor([2419, 1],"float32"), )
paddle.subtract(Tensor([1820, 1],"float32"), Tensor([1820, 1],"float32"), )
paddle.subtract(Tensor([1300, 1],"float32"), Tensor([1300, 1],"float32"), )
paddle.subtract(Tensor([600, 1],"float32"), Tensor([600, 1],"float64"), )
paddle.subtract(Tensor([650, 1],"float32"), Tensor([650, 1],"float32"), )
paddle.subtract(Tensor([1024, 1],"float32"), Tensor([1024, 1],"float32"), )
paddle.subtract(Tensor([16, 96, 2],"float32"), Tensor([16, 96, 2],"float32"), )
paddle.subtract(Tensor([600, 1],"float32"), Tensor([600, 1],"float32"), )
paddle.subtract(Tensor([1609, 1],"float32"), Tensor([1609, 1],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 32],"float32"), Tensor([1, 3, 32, 32],"float32"), )
paddle.sum(Tensor([907038],"float32"), )
paddle.sum(Tensor([9, 60800],"float32"), axis=1, )
paddle.sum(Tensor([851411],"float32"), )
paddle.sum(Tensor([795938],"float32"), )
paddle.sum(Tensor([1024, 384],"int64"), axis=0, )
paddle.sum(Tensor([220968, 1],"float32"), )
paddle.sum(Tensor([920889],"float32"), )
paddle.sum(Tensor([6, 304, 200],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([190960],"float32"), )
paddle.sum(Tensor([128512, 1],"float32"), name=None, )
paddle.sum(Tensor([919706],"float32"), )
paddle.sum(Tensor([8, 280, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([984839],"float32"), )
paddle.sum(Tensor([757880],"float32"), )
paddle.sum(Tensor([1, 196608],"float32"), axis=1, )
paddle.sum(Tensor([791136],"float32"), )
paddle.sum(Tensor([1, 800, 1207],"int64"), )
paddle.sum(Tensor([835357],"float32"), )
paddle.sum(Tensor([64, 52, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([883912],"float32"), )
paddle.sum(Tensor([854188],"float32"), )
paddle.sum(Tensor([850906],"float32"), )
paddle.sum(Tensor([64, 48, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([224480],"float32"), )
paddle.sum(Tensor([945157],"float32"), )
paddle.sum(Tensor([912645],"float32"), )
paddle.sum(Tensor([8, 102144],"float32"), axis=1, )
paddle.sum(Tensor([986636],"float32"), )
paddle.sum(Tensor([842436],"float32"), )
paddle.sum(Tensor([1, 800, 1203],"int64"), )
paddle.sum(Tensor([923373],"float32"), )
paddle.sum(Tensor([865513],"float32"), )
paddle.sum(Tensor([855961],"float32"), )
paddle.sum(Tensor([8, 280, 272],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([952036],"float32"), )
paddle.sum(Tensor([815795],"float32"), )
paddle.sum(Tensor([8, 92416],"float32"), axis=1, )
paddle.sum(Tensor([821415],"float32"), )
paddle.sum(Tensor([890649],"float32"), )
paddle.sum(Tensor([853688],"float32"), )
paddle.sum(Tensor([1, 800, 1165],"int64"), )
paddle.sum(Tensor([823140],"float32"), )
paddle.sum(Tensor([951555],"float32"), )
paddle.sum(Tensor([1, 800, 1158],"int64"), )
paddle.sum(Tensor([12, 73984],"float32"), axis=1, )
paddle.sum(Tensor([892196],"float32"), )
paddle.sum(Tensor([878938],"float32"), )
paddle.sum(Tensor([829772],"float32"), )
paddle.sum(Tensor([16, 200, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([859234],"float32"), )
paddle.sum(Tensor([725292],"float32"), )
paddle.sum(Tensor([894148],"float32"), )
paddle.sum(Tensor([1, 800, 536],"int64"), )
paddle.sum(Tensor([849654],"float32"), )
paddle.sum(Tensor([64, 50, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([957158],"float32"), )
paddle.sum(Tensor([944323],"float32"), )
paddle.sum(Tensor([832970],"float32"), )
paddle.sum(Tensor([6, 200, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([64, 51, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([818738],"float32"), )
paddle.sum(Tensor([922233],"float32"), )
paddle.sum(Tensor([966472],"float32"), )
paddle.sum(Tensor([859626],"float32"), )
paddle.sum(Tensor([222528],"float32"), )
paddle.sum(Tensor([995655],"float32"), )
paddle.sum(Tensor([980291],"float32"), )
paddle.sum(Tensor([330088, 1],"float32"), )
paddle.sum(Tensor([885970],"float32"), )
paddle.sum(Tensor([512, 8, 14, 14],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([913677],"float32"), )
paddle.sum(Tensor([300080],"float32"), )
paddle.sum(Tensor([8, 60800],"float32"), axis=1, )
paddle.sum(Tensor([849937],"float32"), )
paddle.sum(Tensor([1, 800, 1211],"int64"), )
paddle.sum(Tensor([847066],"float32"), )
paddle.sum(Tensor([221728],"float32"), )
paddle.sum(x=Tensor([87, 2888],"float32"), axis=1, )
paddle.sum(Tensor([874312],"float32"), )
paddle.sum(Tensor([1, 800, 645],"int64"), )
paddle.sum(Tensor([904294],"float32"), )
paddle.sum(Tensor([888865],"float32"), )
paddle.sum(Tensor([860364],"float32"), )
paddle.sum(Tensor([878743],"float32"), )
paddle.sum(Tensor([961422],"float32"), )
paddle.sum(Tensor([221920],"float32"), )
paddle.sum(Tensor([4, 272, 272],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([8, 304, 272],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([64, 54, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([919510],"float32"), )
paddle.sum(Tensor([219840],"float32"), )
paddle.sum(Tensor([995434],"float32"), )
paddle.sum(Tensor([830677],"float32"), )
paddle.sum(Tensor([860575],"float32"), )
paddle.sum(Tensor([802611],"float32"), )
paddle.sum(Tensor([901559],"float32"), )
paddle.sum(Tensor([841983],"float32"), )
paddle.sum(Tensor([958929],"float32"), )
paddle.sum(Tensor([809481],"float32"), )
paddle.sum(Tensor([12, 280, 272],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([990386],"float32"), )
paddle.sum(Tensor([913434],"float32"), )
paddle.sum(Tensor([941057],"float32"), )
paddle.sum(Tensor([982059],"float32"), )
paddle.sum(Tensor([889653],"float32"), )
paddle.sum(Tensor([907504],"float32"), )
paddle.sum(Tensor([860976],"float32"), )
paddle.sum(Tensor([393448],"float32"), )
paddle.sum(Tensor([843279],"float32"), )
paddle.sum(Tensor([986661],"float32"), )
paddle.sum(Tensor([110484],"float32"), )
paddle.sum(Tensor([218240],"float32"), )
paddle.sum(Tensor([872239],"float32"), )
paddle.sum(Tensor([910594],"float32"), )
paddle.sum(Tensor([886248],"float32"), )
paddle.sum(Tensor([790612],"float32"), )
paddle.sum(Tensor([4, 92416],"float32"), axis=1, )
paddle.sum(Tensor([931439],"float32"), )
paddle.sum(Tensor([524288],"float32"), )
paddle.sum(Tensor([270072],"float32"), )
paddle.sum(Tensor([957711],"float32"), )
paddle.sum(Tensor([8, 89216],"float32"), axis=1, )
paddle.sum(Tensor([12, 56576],"float32"), axis=1, )
paddle.sum(Tensor([834985],"float32"), )
paddle.sum(Tensor([12, 200, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([842480],"float32"), )
paddle.sum(Tensor([996211],"float32"), )
paddle.sum(Tensor([512, 256],"float32"), )
paddle.sum(Tensor([944052],"float32"), )
paddle.sum(Tensor([64, 47, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([940340],"float32"), )
paddle.sum(Tensor([779371],"float32"), )
paddle.sum(Tensor([932844],"float32"), )
paddle.sum(Tensor([640, 1000],"float32"), axis=-1, )
paddle.sum(Tensor([100000, 4],"float64"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([201472],"float32"), )
paddle.sum(Tensor([218240, 1],"float32"), )
paddle.sum(Tensor([904357],"float32"), )
paddle.sum(Tensor([946388],"float32"), )
paddle.sum(Tensor([943234],"float32"), )
paddle.sum(Tensor([408921],"float32"), )
paddle.sum(Tensor([8, 304, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([256, 1000],"float32"), axis=-1, )
paddle.sum(Tensor([8, 82688],"float32"), axis=1, )
paddle.sum(Tensor([882837],"float32"), )
paddle.sum(Tensor([788071],"float32"), )
paddle.sum(Tensor([784000],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([623489],"float32"), )
paddle.sum(Tensor([1, 800, 1166],"int64"), )
paddle.sum(Tensor([8, 304, 328],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([747492],"float32"), )
paddle.sum(Tensor([947132],"float32"), )
paddle.sum(Tensor([8, 272, 328],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([961565],"float32"), )
paddle.sum(Tensor([945343],"float32"), )
paddle.sum(Tensor([64, 53, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([936705],"float32"), )
paddle.sum(Tensor([799391],"float32"), )
paddle.sum(Tensor([1, 800, 534],"int64"), )
paddle.sum(Tensor([792742],"float32"), )
paddle.sum(Tensor([879741],"float32"), )
paddle.sum(Tensor([936939],"float32"), )
paddle.sum(Tensor([64, 128, 96],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([8, 304, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([817632],"float32"), )
paddle.sum(Tensor([792604],"float32"), )
paddle.sum(Tensor([12, 82688],"float32"), axis=1, )
paddle.sum(Tensor([899796],"float32"), )
paddle.sum(Tensor([4, 200, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([718484],"float32"), )
paddle.sum(Tensor([910889],"float32"), )
paddle.sum(Tensor([822155],"float32"), )
paddle.sum(Tensor([724723],"float32"), )
paddle.sum(Tensor([904803],"float32"), )
paddle.sum(Tensor([4096, 64],"float32"), axis=0, )
paddle.sum(Tensor([1, 128, 32, 32],"float32"), 1, keepdim=True, )
paddle.sum(Tensor([222720],"float32"), )
paddle.sum(Tensor([12, 272, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([855080],"float32"), )
paddle.sum(Tensor([955839],"float32"), )
paddle.sum(Tensor([873305],"float32"), )
paddle.sum(Tensor([934407],"float32"), )
paddle.sum(Tensor([4, 112896],"float32"), axis=1, )
paddle.sum(Tensor([1, 800, 1200],"int64"), )
paddle.sum(Tensor([808670],"float32"), )
paddle.sum(Tensor([938269],"float32"), )
paddle.sum(Tensor([969848],"float32"), )
paddle.sum(Tensor([1, 800, 1208],"int64"), )
paddle.sum(Tensor([12, 208, 272],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([941063],"float32"), )
paddle.sum(Tensor([911146],"float32"), )
paddle.sum(Tensor([897440],"float32"), )
paddle.sum(Tensor([210056, 1],"float32"), )
paddle.sum(Tensor([918389],"float32"), )
paddle.sum(Tensor([926920],"float32"), )
paddle.sum(Tensor([1, 800, 1249],"int64"), )
paddle.sum(Tensor([828406],"float32"), )
paddle.sum(Tensor([894751],"float32"), )
paddle.sum(Tensor([875320],"float32"), )
paddle.sum(Tensor([854532],"float32"), )
paddle.sum(Tensor([790301],"float32"), )
paddle.sum(Tensor([64, 46, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([862614],"float32"), )
paddle.sum(Tensor([920493],"float32"), )
paddle.sum(Tensor([985929],"float32"), )
paddle.sum(Tensor([512, 1, 200],"float32"), axis=-1, )
paddle.sum(Tensor([916011],"float32"), )
paddle.sum(Tensor([819339],"float32"), )
paddle.sum(Tensor([1000, 784],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([1, 800, 1124],"int64"), )
paddle.sum(Tensor([958864],"float32"), )
paddle.sum(Tensor([905414],"float32"), )
paddle.sum(Tensor([223744],"float32"), )
paddle.sum(Tensor([833791],"float32"), )
paddle.sum(x=Tensor([256, 2888],"float32"), axis=1, )
paddle.sum(Tensor([835629],"float32"), )
paddle.sum(Tensor([956773],"float32"), )
paddle.sum(Tensor([512, 995],"float32"), axis=0, keepdim=True, )
paddle.sum(Tensor([992456],"float32"), )
paddle.sum(Tensor([500032],"float32"), )
paddle.sum(Tensor([226080],"float32"), )
paddle.sum(Tensor([965841],"float32"), )
paddle.sum(Tensor([8, 320, 272],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([912773],"float32"), )
paddle.sum(Tensor([223232],"float32"), )
paddle.sum(Tensor([408910],"float32"), )
paddle.sum(Tensor([8, 304, 280],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([727244],"float32"), )
paddle.sum(Tensor([9, 200, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([910109],"float32"), )
paddle.sum(Tensor([817975],"float32"), )
paddle.sum(Tensor([8, 272, 320],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([968731],"float32"), )
paddle.sum(Tensor([936297],"float32"), )
paddle.sum(Tensor([822454],"float32"), )
paddle.sum(Tensor([4, 73984],"float32"), axis=1, )
paddle.sum(Tensor([852880],"float32"), )
paddle.sum(Tensor([816181],"float32"), )
paddle.sum(Tensor([898752],"float32"), )
paddle.sum(Tensor([9, 54400],"float32"), axis=1, )
paddle.sum(Tensor([1, 800, 1037],"int64"), )
paddle.sum(Tensor([929509],"float32"), )
paddle.sum(Tensor([4, 336, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([924014],"float32"), )
paddle.sum(Tensor([871263],"float32"), )
paddle.sum(Tensor([819889],"float32"), )
paddle.sum(Tensor([944676],"float32"), )
paddle.sum(Tensor([902319],"float32"), )
paddle.sum(Tensor([782767],"float32"), )
paddle.sum(Tensor([826111],"float32"), )
paddle.sum(Tensor([926213],"float32"), )
paddle.sum(Tensor([966506],"float32"), )
paddle.sum(Tensor([941136],"float32"), )
paddle.sum(Tensor([802335],"float32"), )
paddle.sum(Tensor([943166],"float32"), )
paddle.sum(Tensor([733968],"float32"), )
paddle.sum(Tensor([895846],"float32"), )
paddle.sum(Tensor([831166],"float32"), )
paddle.sum(Tensor([1, 800, 1198],"int64"), )
paddle.sum(Tensor([913153],"float32"), )
paddle.sum(Tensor([210056],"float32"), )
paddle.sum(Tensor([890854],"float32"), )
paddle.sum(Tensor([4, 82688],"float32"), axis=1, )
paddle.sum(Tensor([891361],"float32"), )
paddle.sum(Tensor([920358],"float32"), )
paddle.sum(Tensor([56, 5776],"float32"), axis=1, )
paddle.sum(Tensor([910774],"float32"), )
paddle.sum(Tensor([805830],"float32"), )
paddle.sum(Tensor([245520, 1],"float32"), )
paddle.sum(Tensor([9, 200, 312],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([1, 800, 1133],"int64"), )
paddle.sum(Tensor([1000, 100],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([797269],"float32"), )
paddle.sum(Tensor([837723],"float32"), )
paddle.sum(Tensor([827954],"float32"), )
paddle.sum(Tensor([847507],"float32"), )
paddle.sum(Tensor([946295],"float32"), )
paddle.sum(Tensor([904945],"float32"), )
paddle.sum(Tensor([768095],"float32"), )
paddle.sum(Tensor([717215],"float32"), )
paddle.sum(Tensor([4, 272, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([877310],"float32"), )
paddle.sum(Tensor([912939],"float32"), )
paddle.sum(Tensor([931692],"float32"), )
paddle.sum(Tensor([9, 62400],"float32"), axis=1, )
paddle.sum(Tensor([894537],"float32"), )
paddle.sum(Tensor([144, 1000],"float32"), axis=-1, )
paddle.sum(Tensor([232640],"float32"), )
paddle.sum(Tensor([330088],"float32"), )
paddle.sum(Tensor([907369],"float32"), )
paddle.sum(Tensor([951834],"float32"), )
paddle.sum(Tensor([952616],"float32"), )
paddle.sum(Tensor([849465],"float32"), )
paddle.sum(Tensor([920069],"float32"), )
paddle.sum(Tensor([245520],"float32"), )
paddle.sum(Tensor([110484, 1],"float32"), )
paddle.sum(Tensor([512, 320],"bool"), )
paddle.sum(Tensor([1, 64, 64, 64],"float32"), 1, )
paddle.sum(Tensor([4, 102144],"float32"), axis=1, )
paddle.sum(Tensor([790972],"float32"), )
paddle.sum(Tensor([917660],"float32"), )
paddle.sum(Tensor([933492],"float32"), )
paddle.sum(Tensor([849325],"float32"), )
paddle.sum(Tensor([890392],"float32"), )
paddle.sum(Tensor([836381],"float32"), )
paddle.sum(Tensor([8, 94080],"float32"), axis=1, )
paddle.sum(Tensor([917966],"float32"), )
paddle.sum(Tensor([844320],"float32"), )
paddle.sum(Tensor([743793],"float32"), )
paddle.sum(Tensor([882763],"float32"), )
paddle.sum(Tensor([8, 200, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([911663],"float32"), )
paddle.sum(Tensor([16, 62400],"float32"), axis=1, )
paddle.sum(Tensor([962872],"float32"), )
paddle.sum(Tensor([786202],"float32"), )
paddle.sum(Tensor([8, 304, 312],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([899302],"float32"), )
paddle.sum(Tensor([866066],"float32"), )
paddle.sum(Tensor([939644],"float32"), )
paddle.sum(Tensor([8, 1, 128, 128],"float32"), )
paddle.sum(Tensor([994032],"float32"), )
paddle.sum(Tensor([935575],"float32"), )
paddle.sum(x=Tensor([100, 2888],"float32"), axis=1, )
paddle.sum(Tensor([926271],"float32"), )
paddle.sum(Tensor([409600],"float32"), )
paddle.sum(Tensor([4, 304, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([908431],"float32"), )
paddle.sum(Tensor([4096, 64],"int64"), axis=0, )
paddle.sum(Tensor([1, 800, 533],"int64"), )
paddle.sum(Tensor([793034],"float32"), )
paddle.sum(Tensor([32, 64, 128],"float32"), axis=0, )
paddle.sum(Tensor([961439],"float32"), )
paddle.sum(Tensor([830827],"float32"), )
paddle.sum(Tensor([8, 328, 296],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([964107],"float32"), )
paddle.sum(Tensor([230400],"float32"), )
paddle.sum(Tensor([916356],"float32"), )
paddle.sum(Tensor([844621],"float32"), )
paddle.sum(Tensor([868526],"float32"), )
paddle.sum(Tensor([16, 54400],"float32"), axis=1, )
paddle.sum(Tensor([64, 44, 36],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([8, 84864],"float32"), axis=1, )
paddle.sum(Tensor([20, 1, 152, 272],"float32"), )
paddle.sum(Tensor([16, 60800],"float32"), axis=1, )
paddle.sum(Tensor([12, 272, 272],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([1, 800, 1202],"int64"), )
paddle.sum(Tensor([906698],"float32"), )
paddle.sum(Tensor([944010],"float32"), )
paddle.sum(Tensor([4, 320, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([867771],"float32"), )
paddle.sum(Tensor([4, 87360],"float32"), axis=1, )
paddle.sum(Tensor([4, 4, 128, 128],"float32"), )
paddle.sum(Tensor([1, 800, 1090],"int64"), )
paddle.sum(Tensor([752583],"float32"), )
paddle.sum(Tensor([888312],"float32"), )
paddle.sum(Tensor([229280],"float32"), )
paddle.sum(Tensor([825644],"float32"), )
paddle.sum(Tensor([4148, 30],"bool"), )
paddle.sum(Tensor([128, 32, 32],"float32"), axis=0, )
paddle.sum(Tensor([8, 67200],"float32"), axis=1, )
paddle.sum(Tensor([8, 94848],"float32"), axis=1, )
paddle.sum(Tensor([1000, 400],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([929142],"float32"), )
paddle.sum(Tensor([1, 800, 849],"int64"), )
paddle.sum(Tensor([797922],"float32"), )
paddle.sum(Tensor([848715],"float32"), )
paddle.sum(Tensor([16, 200, 312],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([923942],"float32"), )
paddle.sum(Tensor([8, 99712],"float32"), axis=1, )
paddle.sum(Tensor([402297],"float32"), )
paddle.sum(Tensor([889719],"float32"), )
paddle.sum(Tensor([930253],"float32"), )
paddle.sum(Tensor([846218],"float32"), )
paddle.sum(Tensor([797394],"float32"), )
paddle.sum(Tensor([887580],"float32"), )
paddle.sum(Tensor([802823],"float32"), )
paddle.sum(Tensor([915856],"float32"), )
paddle.sum(Tensor([943934],"float32"), )
paddle.sum(Tensor([8, 336, 320],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([957708],"float32"), )
paddle.sum(Tensor([885918],"float32"), )
paddle.sum(Tensor([8, 73984],"float32"), axis=1, )
paddle.sum(Tensor([512, 1000],"float32"), axis=-1, )
paddle.sum(Tensor([8, 272, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([26182, 2, 16],"float32"), axis=0, )
paddle.sum(Tensor([9, 304, 200],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([882579],"float32"), )
paddle.sum(Tensor([881672],"float32"), )
paddle.sum(Tensor([994466],"float32"), )
paddle.sum(Tensor([865633],"float32"), )
paddle.sum(Tensor([32, 128, 128],"float32"), )
paddle.sum(Tensor([905529],"float32"), )
paddle.sum(Tensor([1, 800, 1188],"int64"), )
paddle.sum(Tensor([776379],"float32"), )
paddle.sum(Tensor([805559],"float32"), )
paddle.sum(Tensor([8, 85120],"float32"), axis=1, )
paddle.sum(Tensor([854590],"float32"), )
paddle.sum(Tensor([248960],"float32"), )
paddle.sum(Tensor([1, 800, 1231],"int64"), )
paddle.sum(Tensor([1, 800, 871],"int64"), )
paddle.t(Tensor([512, 512],"int64"), )
paddle.take_along_axis(Tensor([1, 36828, 4],"float32"), Tensor([1, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 2],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 6],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([4096, 64],"float32"), Tensor([4096, 8],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([1, 38367, 4],"float32"), Tensor([1, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 4],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 8],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 7],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([8, 63, 768],"float32"), axis=1, indices=Tensor([8, 7, 768],"int64"), )
paddle.take_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 1],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 5],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([1, 6380, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([52, 4, 7, 14],"float32"), axis=-1, indices=Tensor([52, 4, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([35968],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([16384],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([1, 8550, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"int32"), axis=4, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"int32"), axis=3, )
paddle.take_along_axis(Tensor([1024],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([128, 8],"float32"), Tensor([128, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([2160],"float64"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([13, 4, 7, 14],"float32"), axis=-1, indices=Tensor([13, 4, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([1184],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 5],"float64"), Tensor([3, 6, 3, 4, 2, 1],"int32"), axis=5, )
paddle.tan(Tensor([8, 16, 32],"complex64"), )
paddle.tan(Tensor([8, 16, 32],"float32"), )
paddle.tan(Tensor([8, 16, 32],"float64"), )
paddle.tan(Tensor([8, 16, 32],"complex128"), )
paddle.tanh(Tensor([4, 256, 512],"float32"), )
paddle.tanh(Tensor([6284, 30],"float32"), )
paddle.tanh(Tensor([1, 3, 256, 256],"float32"), )
paddle.tanh(Tensor([18211, 30],"float32"), )
paddle.tanh(Tensor([5000, 30],"float32"), )
paddle.tanh(Tensor([52, 8, 37],"float32"), )
paddle.tanh(Tensor([14, 8, 128],"float32"), )
paddle.tanh(Tensor([39, 7, 64],"float32"), )
paddle.tanh(Tensor([14, 10, 128],"float32"), )
paddle.tanh(Tensor([14, 7, 128],"float32"), )
paddle.tanh(Tensor([4, 10, 128],"float32"), )
paddle.tanh(Tensor([6, 10, 128],"float32"), )
paddle.tanh(Tensor([1, 3, 32, 32],"float32"), )
paddle.tanh(Tensor([1, 20, 128],"float32"), )
paddle.tanh(Tensor([32, 32],"float32"), )
paddle.tanh(Tensor([13, 9, 37],"float32"), )
paddle.tanh(Tensor([4, 3, 128],"float32"), )
paddle.tanh(Tensor([13, 8, 32],"float32"), )
paddle.tanh(Tensor([6, 3, 128],"float32"), )
paddle.tanh(Tensor([200, 30],"float32"), )
paddle.tanh(Tensor([1, 1, 1792],"float32"), )
paddle.tanh(Tensor([4, 512],"float32"), )
paddle.tanh(Tensor([13, 10, 37],"float32"), )
paddle.tanh(Tensor([8, 16, 32],"complex128"), )
paddle.tanh(Tensor([2, 3, 32, 32],"float32"), )
paddle.tanh(Tensor([13, 4, 32],"float32"), )
paddle.tanh(Tensor([100, 30],"float32"), )
paddle.tanh(Tensor([14, 1, 128],"float32"), )
paddle.tanh(Tensor([13, 8, 37],"float32"), )
paddle.tanh(Tensor([13, 3, 37],"float32"), )
paddle.tanh(Tensor([32, 32],"float64"), )
paddle.tanh(Tensor([8, 16, 32],"float64"), )
paddle.tanh(Tensor([2, 1, 1792],"float32"), )
paddle.tanh(Tensor([8, 512],"float32"), )
paddle.tanh(Tensor([8, 16, 32],"complex64"), )
paddle.tanh(Tensor([13, 7, 32],"float32"), )
paddle.tanh(Tensor([13, 7, 37],"float32"), )
paddle.tanh(Tensor([2, 20, 128],"float32"), )
paddle.tanh(Tensor([2, 21, 128],"float32"), )
paddle.tanh(Tensor([2, 10, 128],"float32"), )
paddle.tanh(Tensor([8, 16, 32],"float32"), )
paddle.tanh(Tensor([2, 23, 128],"float32"), )
paddle.tanh(Tensor([32, 256],"float32"), )
paddle.tanh(Tensor([24, 256],"float32"), )
paddle.tanh(Tensor([1, 58, 64],"float32"), )
paddle.tanh(Tensor([13, 7, 64],"float32"), )
paddle.tanh(Tensor([1242, 2],"float32"), )
paddle.tanh(Tensor([14, 3, 128],"float32"), )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,],list[],], )
paddle.tensordot(x=Tensor([4, 2, 3, 5, 4],"float64"), y=Tensor([2, 4, 3, 5, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tile(Tensor([16, 10, 1, 58, 58],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([16, 1, 1, 3, 64, 64],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([216, 248, 1, 1, 2],"float32"), list[1,1,1,1,1,], )
paddle.tile(Tensor([4, 22400, 1],"bool"), list[1,1,4,], )
paddle.tile(Tensor([728, 14, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([1, 1, 64, 64, 2],"float32"), tuple(16,1,1,1,1,), )
paddle.tile(Tensor([364, 7, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([1, 2, 1, 64, 16],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([13, 2, 16, 16],"float32"), repeat_times=list[1,1,4,1,], )
paddle.tile(Tensor([16, 176, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([4, 200, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([13, 2, 1, 64],"int64"), repeat_times=list[1,1,16,1,], )
paddle.tile(Tensor([1, 13, 7, 14],"int32"), repeat_times=list[2,1,4,1,], )
paddle.tile(Tensor([8, 200, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1960, 1],"bool"), list[1,24,], )
paddle.topk(Tensor([2, 35, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 29, 3024],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 7, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 295443],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 261888],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 32, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 21, 2116],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 68340],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 37, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 29, 2704],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 4, 4096],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 10, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 12, 1764],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 14, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([10, 63360],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4, 51030],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3, 83415],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 30, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 67200],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 11, 48384],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([14, 59220],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 8, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 74550],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 27, 2116],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 39, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 10, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 28, 1296],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 63, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 26, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 25, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 28, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 14, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 20, 2704],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 17, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 12, 2116],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 34, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 13, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([3, 269586],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4, 46, 1156],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 17, 900],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([14, 48300],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 13, 4096],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 190296],"float32"), k=1, axis=0, )
paddle.topk(Tensor([13, 74520],"float32"), k=1, axis=0, )
paddle.topk(Tensor([64, 17, 324],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 13, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 296700],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2812, 56],"float32"), 10, axis=0, )
paddle.topk(Tensor([2, 58, 3024],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 20, 1764],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 25, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([13, 49410],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3060, 39],"float32"), 10, axis=0, )
paddle.topk(Tensor([16, 52, 169],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 48, 100],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 30, 2541],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 21, 4116],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 68340],"float32"), k=1, axis=0, )
paddle.topk(Tensor([10, 75555],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 20, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([3, 54750],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 279300],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 68340],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 47, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 72, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 3, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 44, 361],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 70, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 47, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([5, 61200],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4, 62, 3136],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 44220],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 9, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 32, 784],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 252195],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 18, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 13, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 60450],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 32, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 92, 3549],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 32, 1024],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 59250],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 23, 1156],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 19, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 29, 361],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([10, 38940],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 27, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([64, 30, 324],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([6, 61065],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 10, 1764],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 13, 121],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 37, 256],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 5, 5184],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 17, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 23, 1024],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 241731],"float32"), k=1, axis=0, )
paddle.topk(Tensor([11, 79680],"float32"), k=1, axis=0, )
paddle.topk(Tensor([64, 19, 121],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 90720],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 7, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 91, 2541],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 35, 900],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 37, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([4, 81180],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 75375],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 211038],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3, 64350],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 22, 1764],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 35280],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 24, 21504],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([4, 205923],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 27, 529],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 13, 1764],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 9, 784],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 22, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 14, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 41, 1764],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 235320],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 44, 1444],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 158580],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 17, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 30, 576],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 243474],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 22, 21504],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 13, 2704],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 10, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 31, 256],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 17, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 64, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 321759],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3, 83220],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 21, 676],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3520, 53],"float32"), 10, axis=0, )
paddle.topk(Tensor([1837, 83],"float32"), 10, axis=0, )
paddle.topk(Tensor([2, 66, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 8, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 227124],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 23, 2116],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 17, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([10, 75840],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 11, 5184],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 237360],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 16, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 18, 784],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 22, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 267030],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 17, 1444],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 41, 5184],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 52, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 35, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 327360],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 59295],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 13, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([4, 49680],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 25, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([12, 48240],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4, 51840],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 6, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3364, 39],"float32"), 10, axis=0, )
paddle.topk(Tensor([16, 18, 900],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([5, 83220],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 22, 2116],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 77, 2541],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 8, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 18, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 60, 2100],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([64, 22, 121],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 278256],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 52560],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 42, 256],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 150, 2100],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([26182, 16],"float32"), 2, axis=-1, )
paddle.topk(Tensor([2, 14, 4096],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 60480],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 286440],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 12, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 24, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 17, 1156],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([6, 47610],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 50, 144],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 26, 2704],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 333018],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3, 322272],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2966, 35],"float32"), 10, axis=0, )
paddle.topk(Tensor([2, 16, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 6, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 26, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 13, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 277539],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 10, 5184],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 99, 1296],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 7, 21504],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 208692],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 11, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([13, 75375],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 15, 4116],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([9, 58800],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 48, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([3923, 39],"float32"), 10, axis=0, )
paddle.topk(Tensor([1, 294624],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 40, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 27, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 63720],"float32"), k=1, axis=0, )
paddle.topk(Tensor([7, 74520],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 2, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([64, 28, 64],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 43, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 153, 2541],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([3, 79695],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 202572],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 35, 784],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 28, 1156],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 21, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 51, 144],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 85, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 29, 3600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 22, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([4, 73920],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 15, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([12, 72360],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 35, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 43, 3024],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 36, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([10, 63840],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 15, 1764],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 61065],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 14, 1024],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 10, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 20, 676],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 23, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 88, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([64, 31, 121],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([15, 64170],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 58, 2541],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 48, 324],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 38, 324],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 17, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 9, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 28, 4096],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 222012],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4, 217413],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3, 168795],"float32"), k=1, axis=0, )
paddle.topk(Tensor([15, 50250],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3, 74550],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3, 286440],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 81, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([64, 16, 121],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 18, 3600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 19, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 19, 784],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 388740],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 78840],"float32"), k=1, axis=0, )
paddle.topk(Tensor([64, 23, 81],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 10, 48384],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 17, 1024],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 79935],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 13, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 58320],"float32"), k=1, axis=0, )
paddle.topk(Tensor([64, 22, 100],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([12, 78120],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 29, 784],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([11, 83220],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4, 68625],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 24, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 15, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 56, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 36, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 180048],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 15, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 12, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 16, 3136],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 21, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 45, 361],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 72, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([9, 69345],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 16, 2704],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 23, 289],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3163, 88],"float32"), 10, axis=0, )
paddle.topk(Tensor([14, 44250],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 75, 4116],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 28, 324],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 220992],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 36, 576],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([11, 64680],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 32, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([64, 22, 576],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 243474],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 13, 21504],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 9, 9261],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 27, 2541],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 12, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 12, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 12, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 17, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 108, 2100],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 13, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 46, 400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 204624],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 28, 1444],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([6, 51030],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 16, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 64, 4116],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 49, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([64, 31, 144],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 11, 576],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 204624],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 80400],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 138120],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4, 84420],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2333, 51],"float32"), 10, axis=0, )
paddle.topk(Tensor([1, 325113],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3, 55440],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 22, 529],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([12, 82080],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3258, 32],"float32"), 10, axis=0, )
paddle.topk(Tensor([13091, 16],"float32"), 2, axis=-1, )
paddle.topk(Tensor([2, 29, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([64, 40, 256],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 54, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 13, 3600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 11, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 39, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([64, 24, 144],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 25, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 67890],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 55, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([64, 21, 144],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 13, 3136],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([13, 53760],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 4, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([3635, 95],"float32"), 10, axis=0, )
paddle.topk(Tensor([4, 87600],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3, 64680],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 18, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 37, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 54, 324],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 27, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 26, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 29, 400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 51, 4116],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 43, 1296],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 29, 3549],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 63, 3549],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([4, 39, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 78, 2541],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([6, 56730],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 28, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([11, 50250],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 10, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 27, 400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([7, 81000],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 14, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 3, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 40, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 18, 900],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 9, 4096],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 20, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 200022],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 14, 1156],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 22, 676],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 18, 1024],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 32, 196],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 13, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([3, 75240],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 51840],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 14, 1156],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 15, 900],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 60300],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 43, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 41, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 9, 52500],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1024, 384],"float32"), 5, axis=-1, )
paddle.topk(Tensor([2, 379050],"float32"), k=1, axis=0, )
paddle.topk(Tensor([5, 75075],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3, 249405],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 9, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 290052],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 217413],"float32"), k=1, axis=0, )
paddle.topk(Tensor([17, 51840],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 54270],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 24, 2704],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 14, 3600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 75375],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 23, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 270096],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 18, 1156],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 19, 1024],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 46, 1444],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([3, 322245],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 3, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([4, 77, 361],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 32, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 83, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 34, 3024],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([12, 75375],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 184140],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 15, 900],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 13, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 12, 4096],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 237870],"float32"), k=1, axis=0, )
paddle.transpose(Tensor([28, 8448],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 3, 148, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 250, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([8, 3, 68, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 108],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 8192],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 3, 200, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([30848, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 80, 20, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 34816],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 12, 37, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 28, 25600],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 108, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 168, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 192],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([19840, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 76, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 9472],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 12, 72, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([20096, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 15, 48, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 47, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 200, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 54, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([27520, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 112, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([64, 9600],"float32"), list[1,0,], )
paddle.transpose(Tensor([9600, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 15, 60, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 296, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 57],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([11136, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 148, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([11392, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 132, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 77],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 63, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([10752, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 68, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 27264],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 56, 3584],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([8, 3, 54, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 281, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 12, 100, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 128, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 15, 54, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([5, 24, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([4, 3, 208, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 113, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 56, 16384],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 68, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 8, 529, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([8, 4, 88, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 64, 12800],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 140, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 8, 400, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([4, 60, 67, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([26880, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([2, 4, 100, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([8, 12, 42, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 256, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([64, 6272],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 66, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([64, 2048],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 3, 128, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 52, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 270, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 12, 46, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 312, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([100, 1000],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 68, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 80, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 4, 324, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([28928, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 3, 336, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 83],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 29568],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 82, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 33536],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 144, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 8704],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([1, 3, 248, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 32, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28672, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 3, 70, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 204, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([64, 11008],"float32"), list[1,0,], )
paddle.transpose(Tensor([2, 4, 289, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([8, 12, 72, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([15488, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 12, 52, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 256, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([5376, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 72, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 129, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([28, 19584],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 66, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 128, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 57, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([6, 6, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 56, 15360],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 74, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 32512],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 3, 72, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 52, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 15872],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 3, 140, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 64, 6016],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 3, 92, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 4, 144, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([8, 3, 76, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 78, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 22, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 58, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 80, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 216, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 22, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 28, 6144],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([28, 4480],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 12, 160, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 99, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([28, 13312],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 144, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 8192],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 15, 64, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 28, 29696],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([8, 3, 60, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 102, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([8, 3, 70, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 64, 7296],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([8, 12, 70, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 5760],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 15, 64, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 17792],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 28, 22016],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([31488, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([28, 14336],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 3, 156, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 11776],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 56, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([64, 11264],"float32"), list[1,0,], )
paddle.transpose(Tensor([2, 136, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([8, 80, 40, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 53, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 28, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 54, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 75, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([8, 1, 160, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 26, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 64, 11008],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 60, 50, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 32000],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 12, 35, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 55, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 12032],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 44, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([5, 21, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([4, 12, 124, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 104, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 48, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 22528],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 3, 66, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 74, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 72, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([14336, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 54, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([22784, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([28, 11008],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 3, 100, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([64, 14592],"float32"), list[1,0,], )
paddle.transpose(Tensor([2, 4, 324, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([4, 12, 62, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 14848],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([8, 3, 74, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 112, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 12672],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 3, 124, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 64, 10240],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([1, 56, 4992],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 100, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 8, 400, 48],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 28, 9216],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([8, 3, 84, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 8, 256, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([4, 3, 100, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8192, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 3, 168, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 304, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 3, 312, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 5760],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([1, 64, 11392],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 132, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 14592],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([8, 12, 42, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 84, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 8, 529, 48],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([4, 15, 67, 57],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([64, 5120],"float32"), list[1,0,], )
paddle.transpose(Tensor([4480, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([14976, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 12, 30, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 168, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 232, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 15232],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 70, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 14336],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 50, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 9600],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 3, 224, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 64, 9984],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([28, 6656],"float32"), list[1,0,], )
paddle.transpose(Tensor([28, 15744],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 64, 15104],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 15, 42, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 24960],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 6, 1500, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([4, 12, 76, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2688, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([4992, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 3, 72, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([25216, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 3, 136, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 86, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 3, 152, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([64, 12928],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 164, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 28, 5632],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4864, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 100, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 44, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([21248, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 56, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([5, 16, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 16, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([8, 3, 124, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 21120],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 104, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 64, 5632],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([32768, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 72, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 512, 40],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([2, 154, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 15, 66, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 4992],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 62, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 9216],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 3, 92, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 88, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 64, 6144],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([2, 93, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 12, 70, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 108],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 116, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 226, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 15, 67, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 232, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 232, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 5120],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 3, 112, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([64, 15488],"float32"), list[1,0,], )
paddle.tril(Tensor([512, 512],"bool"), )
paddle.tril(Tensor([377, 377],"bool"), )
paddle.tril(Tensor([4, 1, 168, 168],"float32"), )
paddle.tril(Tensor([346, 346],"bool"), )
paddle.tril(Tensor([1, 1, 512, 512],"int64"), )
paddle.tril(Tensor([4, 1, 182, 182],"bool"), )
paddle.tril(Tensor([499, 499],"float32"), )
paddle.tril(Tensor([512, 512],"float32"), )
paddle.tril(Tensor([396, 396],"bool"), )
paddle.tril(Tensor([111, 111],"float16"), )
paddle.tril(Tensor([147, 147],"bool"), )
paddle.tril(Tensor([107, 107],"float16"), )
paddle.tril(Tensor([172, 172],"bool"), )
paddle.tril(Tensor([112, 112],"bool"), )
paddle.tril(Tensor([109, 109],"bool"), )
paddle.tril(Tensor([232, 232],"float16"), )
paddle.tril(Tensor([288, 288],"bool"), )
paddle.tril(Tensor([110, 110],"bool"), )
paddle.tril(Tensor([114, 114],"bool"), )
paddle.tril(Tensor([164, 164],"bool"), )
paddle.tril(Tensor([4, 1, 148, 148],"bool"), )
paddle.tril(Tensor([111, 111],"bool"), )
paddle.tril(Tensor([109, 109],"float16"), )
paddle.tril(Tensor([4, 1, 145, 145],"float32"), )
paddle.tril(Tensor([4, 1, 158, 158],"float32"), )
paddle.tril(Tensor([115, 115],"bool"), )
paddle.tril(Tensor([302, 302],"bool"), )
paddle.tril(Tensor([112, 112],"float16"), )
paddle.tril(Tensor([110, 110],"float16"), )
paddle.tril(Tensor([107, 107],"bool"), )
paddle.tril(Tensor([304, 304],"bool"), )
paddle.tril(Tensor([127, 127],"bool"), )
paddle.tril(Tensor([198, 198],"bool"), )
paddle.tril(Tensor([4, 1, 156, 156],"bool"), )
paddle.tril(Tensor([4, 1, 132, 132],"bool"), )
paddle.tril(Tensor([152, 152],"bool"), )
paddle.tril(Tensor([4, 1, 134, 134],"float32"), )
paddle.tril(Tensor([148, 148],"bool"), )
paddle.tril(Tensor([41, 41],"float16"), )
paddle.tril(Tensor([91, 91],"bool"), )
paddle.tril(Tensor([2, 1, 39, 39],"bool"), )
paddle.tril(Tensor([90, 90],"float16"), )
paddle.tril(Tensor([45, 45],"float16"), )
paddle.tril(Tensor([49, 49],"float16"), )
paddle.tril(Tensor([64, 64],"float16"), )
paddle.tril(Tensor([36, 36],"float16"), )
paddle.tril(Tensor([53, 53],"float16"), )
paddle.tril(Tensor([92, 92],"float16"), )
paddle.tril(Tensor([2, 1, 57, 57],"bool"), )
paddle.tril(Tensor([39, 39],"float16"), )
paddle.tril(Tensor([2, 1, 51, 51],"bool"), )
paddle.tril(Tensor([35, 35],"float16"), )
paddle.tril(Tensor([2, 1, 35, 35],"bool"), )
paddle.tril(Tensor([2, 1, 54, 54],"float16"), )
paddle.tril(Tensor([1, 1, 58, 58],"float32"), )
paddle.tril(Tensor([32, 32],"float16"), )
paddle.tril(Tensor([79, 79],"float16"), )
paddle.tril(Tensor([52, 52],"float16"), )
paddle.tril(Tensor([74, 74],"float16"), )
paddle.tril(Tensor([1, 1, 58, 58],"bool"), )
paddle.tril(Tensor([57, 57],"float16"), )
paddle.tril(Tensor([38, 38],"float16"), )
paddle.tril(Tensor([43, 43],"float16"), )
paddle.tril(Tensor([2, 1, 38, 38],"float16"), )
paddle.tril(Tensor([50, 50],"bool"), )
paddle.tril(Tensor([47, 47],"float16"), )
paddle.tril(Tensor([37, 37],"float16"), )
paddle.tril(Tensor([32, 32],"float32"), -1, )
paddle.tril(Tensor([82, 82],"float16"), )
paddle.tril(Tensor([51, 51],"float16"), )
paddle.tril(Tensor([60, 60],"float16"), )
paddle.tril(Tensor([2, 1, 37, 37],"bool"), )
paddle.tril(Tensor([46, 46],"float16"), )
paddle.tril(Tensor([2, 1, 41, 41],"float16"), )
paddle.tril(Tensor([2, 1, 38, 38],"bool"), )
paddle.tril(Tensor([82, 82],"bool"), )
paddle.tril(Tensor([2, 1, 39, 39],"float16"), )
paddle.tril(Tensor([80, 80],"bool"), )
paddle.tril(Tensor([80, 80],"float16"), )
paddle.tril(Tensor([2, 1, 47, 47],"float16"), )
paddle.tril(Tensor([59, 59],"float16"), )
paddle.tril(Tensor([40, 40],"float16"), )
paddle.tril(Tensor([2, 1, 50, 50],"bool"), )
paddle.tril(Tensor([74, 74],"bool"), )
paddle.tril(Tensor([2, 1, 51, 51],"float16"), )
paddle.tril(Tensor([2, 1, 57, 57],"float16"), )
paddle.tril(Tensor([54, 54],"float16"), )
paddle.tril(Tensor([2, 1, 40, 40],"float16"), )
paddle.tril(Tensor([91, 91],"float16"), )
paddle.tril(Tensor([64, 64],"float32"), )
paddle.tril(Tensor([50, 50],"float16"), )
paddle.tril(Tensor([2, 1, 45, 45],"bool"), )
paddle.tril(Tensor([58, 58],"bool"), )
paddle.tril(Tensor([79, 79],"bool"), )
paddle.tril(Tensor([2, 1, 52, 52],"bool"), )
paddle.tril(Tensor([2, 1, 53, 53],"float16"), )
paddle.tril(Tensor([63, 63],"float16"), )
paddle.triu(Tensor([448, 1280],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 1, 198, 198],"float16"), )
paddle.triu(Tensor([1, 128, 32, 32],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 1, 346, 346],"float16"), )
paddle.triu(Tensor([4, 1, 377, 377],"float16"), )
paddle.triu(Tensor([4, 1, 164, 164],"float16"), )
paddle.triu(Tensor([448, 1024],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 1, 396, 396],"float16"), )
paddle.triu(Tensor([4, 1, 172, 172],"float16"), )
paddle.triu(Tensor([448, 512],"float32"), diagonal=1, )
paddle.triu(Tensor([448, 384],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 512, 512],"float32"), diagonal=1, )
paddle.triu(Tensor([448, 768],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 1, 304, 304],"float16"), )
paddle.triu(Tensor([2, 1, 111, 111],"float16"), )
paddle.triu(Tensor([4, 1, 127, 127],"float16"), )
paddle.triu(Tensor([4, 1, 147, 147],"float16"), )
paddle.triu(Tensor([128, 128],"float32"), diagonal=0, )
paddle.triu(Tensor([2, 1, 109, 109],"float16"), )
paddle.triu(Tensor([2, 1, 80, 80],"float16"), )
paddle.triu(Tensor([2, 1, 74, 74],"float16"), )
paddle.triu(Tensor([4, 1, 152, 152],"float16"), )
paddle.triu(Tensor([4, 1, 115, 115],"float16"), )
paddle.triu(Tensor([2, 1, 79, 79],"float16"), )
paddle.triu(Tensor([128, 128],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 1, 148, 148],"float16"), )
paddle.triu(Tensor([2, 1, 91, 91],"float16"), )
paddle.triu(Tensor([2, 1, 112, 112],"float16"), )
paddle.triu(Tensor([2, 1, 107, 107],"float16"), )
paddle.triu(Tensor([8, 1, 63, 63],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 82, 82],"float16"), )
paddle.triu(Tensor([2, 1, 110, 110],"float16"), )
paddle.triu(Tensor([128, 128],"float32"), 1, )
paddle.triu(Tensor([12, 1, 24, 24],"float32"), diagonal=1, )
paddle.triu(Tensor([77, 77],"float32"), 1, )
paddle.triu(Tensor([1, 1, 58, 58],"float32"), diagonal=1, )
paddle.trunc(input=Tensor([6, 6, 6, 6],"float64"), )
paddle.trunc(input=Tensor([3, 6, 6, 6, 6],"float64"), )
paddle.unsqueeze(Tensor([512, 624],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([64, 26, 512],"float16"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([4, 157920],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8, 241, 241],"float32"), axis=1, )
paddle.unsqueeze(Tensor([512, 1248],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([8, 26, 512],"float32"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([2, 512, 512],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3, 256, 256],"float32"), 0, )
paddle.unsqueeze(Tensor([64, 26, 512],"float32"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([52, 50, 256],"float32"), axis=2, )
paddle.unsqueeze(Tensor([124032],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4, 512, 81],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([496128],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([512, 872],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([512, 624],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([512, 872],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([512, 1248],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([1, 8192, 64],"complex64"), axis=2, )
paddle.unsqueeze(Tensor([128, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([512, 30],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([108, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([20, 64, 64],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([136, 156],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([132, 160],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([14940],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([152, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([160, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([132, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([100, 164],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([100, 160],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([116, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([16, 1024],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([64, 187],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([20, 500],"int32"), axis=2, )
paddle.unsqueeze(Tensor([168, 140],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([112, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([498, 80],"float32"), 0, )
paddle.unsqueeze(Tensor([136, 148],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([152, 164],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([140, 164],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([100, 144],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([14860],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([168, 160],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([20, 30, 40],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([3, 3, 3, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([164, 148],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([132, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([136, 164],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([11070],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([152, 140],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([100, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([124, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([512, 92],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([156, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([104, 164],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([36, 306],"float32"), axis=0, )
paddle.unsqueeze(Tensor([100, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([3, 3, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([100, 148],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([104, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([10496],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([152, 132],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([140, 140],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([144, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([160, 160],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([132, 144],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([168, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([512, 156],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([164, 100],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([512, 156],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([148, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([10080],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([152, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([50, 256],"float32"), 0, )
paddle.unsqueeze(Tensor([144, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([152, 148],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([14310],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([128, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([31008],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([136, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([32, 512],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([152, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([168, 156],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([104, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([152, 144],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([152, 160],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([168, 100],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([136, 100],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([3, 3, 40, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([164, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([136, 140],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([104, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([140, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([168, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([164, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([136, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([140, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([152, 156],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([4, 125, 125],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([132, 148],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([108, 156],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([152, 108],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([32, 512],"float16"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([136, 108],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([136, 160],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([124, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([10008],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([140, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([152, 100],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([116, 160],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([168, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([10650],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([58086],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([156, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([13710],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([100, 156],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([3, 40, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([160, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([64, 256],"float16"), axis=1, )
paddle.unsqueeze(Tensor([120, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([144, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([14800],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([20, 500],"int64"), 2, )
paddle.unsqueeze(Tensor([512, 92],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([148, 164],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([108, 148],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([140, 156],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([148, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([148, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([128, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([100, 140],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([124, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([16032],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([136, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([416, 30],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([100, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([156, 148],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([10170],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([10308],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([156, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([2772],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3180],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7376],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([374, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6904],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([596, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([5048],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([519, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2400],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2152],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1481, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3220],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7470],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2244],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([815, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3392],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8, 139],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([42, 38],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([2916],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([50, 80],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([299, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4320],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1120],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([9084],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([919, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2140],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([58, 80],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([8280],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([535, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1176],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1232],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([597, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([677, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2172],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1177],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1090, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1123],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([5436],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1943],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([453, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2252],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2264],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2776],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1364],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([292, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1840],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6100],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7572],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2724],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7684],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([283, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([365, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2496],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2268],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([54, 76],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([471, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4420],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([466, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3300],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1588],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([575, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([569, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8310],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1363],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2792],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7740],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([607, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([508, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1880],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3880],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2148],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1928],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([409, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7316],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([288, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8, 149],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7384],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1736],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7944],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6810],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([5640],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1448],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6936],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1131, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([31, 42],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([2696],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1468],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2688],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([42, 42],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([2364],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([639, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3212],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2500],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([686, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([9396],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([595, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([538, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2524],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1228],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([502, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1088],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4230],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1184],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2096],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1052],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7360],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2052],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([5616],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2704],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1200],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([651, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2720],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([35, 35],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([42, 34],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([2452],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([705, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([738, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([5831, 1],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([5849, 1],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3900],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6964],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([332, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([70, 70],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([302, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([76, 82],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([4004],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([539, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([522, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1543],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([636, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([355, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([564, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2824],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2628],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6276],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([491, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8, 128],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1349],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3680],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2104],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8212],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2324],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([76, 54],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([1524],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4530],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6944],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([5953, 1],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2956],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2032],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([325, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1668],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6820],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1084],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1456],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1916],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8, 131],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8040],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1848],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([645, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([386, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([440, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([630, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1517],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([896, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([304, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1170],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([517, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2612],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3064],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2468],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1972],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1884],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([270, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1214],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1008],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([703, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([726, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1660],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2736],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([72, 76],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([465, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2596],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1514],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([41, 38],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([493, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8584],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1552],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([310, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1, 128, 32],"float32"), 2, )
paddle.unsqueeze(Tensor([2002],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6652],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([542, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6120],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1156],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([70, 76],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([4008],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([717, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2844],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1221],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2072],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([5514, 1],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2964],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([76, 50],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([549, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8, 167],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([693, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2550],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([313, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1250],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6996],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([532, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8684],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1282, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1292],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8, 154],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7080],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4920],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8976],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1143],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2081],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4470],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([521, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2060],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2276],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1270],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([26, 41],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([5859, 1],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([264, 4],"float32"), 1, )
paddle.unsqueeze(Tensor([614, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1584],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8, 126],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([263, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([713, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([801, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([72, 68],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([1915, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1287],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([513, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3856],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([76, 76],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([7120],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6748],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3088],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1904],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([5824, 1],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2732],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6192],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([68, 82],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([2544],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8532],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7068],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2336],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([6836],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3312],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([8, 145],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3128],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([1048],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([28, 38],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([9732],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2190],"int64"), axis=-1, )
paddle.unstack(x=Tensor([2, 32, 512],"float32"), axis=0, )
paddle.var(Tensor([96, 96, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([96, 192, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([96, 384, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([384, 192, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([384, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([48, 48, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([192, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([48, 192, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([64, 3, 7, 7],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([16, 96, 2],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 256],"float64"), axis=-1, keepdim=True, )
paddle.var(x=Tensor([16, 96, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(Tensor([48, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 256],"float32"), axis=-1, keepdim=True, )
paddle.var(Tensor([96, 64, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([96, 24, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 64, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 24, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([64, 16, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 16, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([192, 48, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([64, 32, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([13, 96, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.view(Tensor([10, 10, 10, 20],"float32"), list[10,100,-1,], )
paddle.view(Tensor([10, 10, 10, 20],"float32"), list[10,100,20,], )
paddle.view(Tensor([10, 10, 10, 20],"float32"), list[1000,-1,], )
paddle.view(Tensor([10, 10, 10, 20],"float32"), list[-1,], )
paddle.view(Tensor([10, 10, 10, 20],"float32"), list[10,10,10,10,-1,], )
paddle.view_as(Tensor([10, 10, 10, 20],"float32"), Tensor([10, 100, 20],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 90, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, mask=Tensor([4, 45, 5, 5],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 18, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, mask=Tensor([4, 9, 5, 5],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 90, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(Tensor([2, 3, 5, 5],"float32"), Tensor([2, 18, 5, 5],"float32"), Tensor([6, 3, 3, 3],"float32"), None, list[2,2,], list[3,3,], list[1,1,], 1, 1, Tensor([2, 9, 5, 5],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([2, 3, 5, 5],"float32"), Tensor([2, 18, 5, 5],"float32"), Tensor([6, 3, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 1, Tensor([2, 9, 5, 5],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([2, 8, 4, 4],"float32"), Tensor([2, 18, 4, 4],"float32"), Tensor([4, 4, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 2, Tensor([2, 9, 4, 4],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 7, 7],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 18, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 7, 7],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([2, 8, 4, 4],"float32"), Tensor([2, 18, 4, 4],"float32"), Tensor([4, 8, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 1, Tensor([2, 9, 4, 4],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([2, 3, 5, 5],"float32"), Tensor([2, 18, 5, 5],"float32"), Tensor([6, 3, 3, 3],"float32"), None, list[2,2,], list[3,3,], list[1,1,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(Tensor([4, 3, 4, 4],"float32"), Tensor([4, 18, 4, 4],"float32"), Tensor([6, 3, 3, 3],"float32"), None, list[1,1,], list[2,2,], list[2,2,], 1, 1, Tensor([4, 9, 4, 4],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 5, 7],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 90, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(Tensor([5, 3, 4, 4],"float32"), Tensor([5, 18, 4, 4],"float32"), Tensor([6, 3, 3, 3],"float32"), None, list[1,1,], list[2,2,], list[2,2,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 3, 3],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(Tensor([2, 6, 4, 4],"float64"), Tensor([2, 18, 4, 4],"float64"), Tensor([4, 6, 3, 3],"float64"), None, list[1,1,], list[1,1,], list[1,1,], 1, 1, Tensor([2, 9, 4, 4],"float64"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 18, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([5, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 3, 3],"float32"), )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 24],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 68, 44],"float32"), boxes=Tensor([121, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 76, 50],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 33],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 70, 46],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 39],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 34],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 32],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([156, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 31],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 29, 33],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 38],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 25],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 30],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 36],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 31],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 28],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 32],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([190, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 28, 21],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 27],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 31],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 24],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 64, 42],"float32"), boxes=Tensor([170, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 31],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 37],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 24],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 32],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 32, 21],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 26, 37],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([104, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 28, 21],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 28],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 22],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([181, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 62],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([183, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([165, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 31],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([151, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 62, 40],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 25],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 30],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([197, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 37],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([108, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([259, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 40],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 74, 48],"float32"), boxes=Tensor([201, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 35],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 32],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 35],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 28],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 27],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 32],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 32],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 34],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 30],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 18],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 32],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 31],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([160, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 34],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 35],"float32"), boxes=Tensor([4, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 39],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 35],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 29, 32],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 31, 20],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 34],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 76, 50],"float32"), boxes=Tensor([197, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 30],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([188, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([190, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 24],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 68, 44],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 76, 50],"float32"), boxes=Tensor([185, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 31, 23],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 31, 23],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 24],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 54],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 36],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 35, 23],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 31, 23],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 60],"float32"), boxes=Tensor([193, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 62],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([184, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 32],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([203, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 34],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([155, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([172, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 31, 20],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 35],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 37],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 28],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 29, 33],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 27],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 32],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 38],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 35],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 32, 21],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 34],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 31],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 34],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 31],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 76, 50],"float32"), boxes=Tensor([153, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 36],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 18],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 30],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 31],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 30],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 32],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([209, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 26],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 34],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 30],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([286, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 31],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 31, 20],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 36],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 70],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 25],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 41],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 33],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 31],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 39],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([297, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 24],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 18, 25],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 25],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([138, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 31],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 31],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 31],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 38],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 66],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 26],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 28],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 30],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 54],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 60],"float32"), boxes=Tensor([191, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 30],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 34, 22],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 62],"float32"), boxes=Tensor([140, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 35, 23],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 34],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 31],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 25],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 32],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 24],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 42],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 74, 48],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 35],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 27],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([140, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 33],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([193, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 39],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 41],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 32],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([4, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 37],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 35],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 32],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 22],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 28],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 24],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 30],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([166, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 35],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 35],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 35],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 32],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 31],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 33],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 33],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 32],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 32],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 33],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 35],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 24],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 30],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 66],"float32"), boxes=Tensor([259, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_pool(Tensor([1, 256, 32, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=3, )
paddle.vision.ops.roi_pool(Tensor([1, 256, 32, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(3,4,), )
paddle.vision.ops.roi_pool(x=Tensor([1, 256, 32, 32],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(4,3,), spatial_scale=1.0, )
paddle.where(Tensor([1, 79395],"bool"), Tensor([1, 79395],"int32"), Tensor([1, 79395],"int32"), )
paddle.where(Tensor([1, 290052],"bool"), Tensor([1, 290052],"int32"), Tensor([1, 290052],"int32"), )
paddle.where(Tensor([2, 61380],"bool"), Tensor([2, 61380],"float32"), Tensor([2, 61380],"float32"), )
paddle.where(Tensor([2, 20, 1],"bool"), Tensor([2, 20, 10164],"float32"), Tensor([2, 20, 10164],"float32"), )
paddle.where(Tensor([1, 64170],"bool"), Tensor([1, 64170],"int32"), Tensor([1, 64170],"int32"), )
paddle.where(Tensor([18, 1912],"bool"), Tensor([18, 1912],"float32"), Tensor([18, 1912],"float32"), )
paddle.where(Tensor([4, 67335],"bool"), Tensor([4, 67335],"float32"), Tensor([4, 67335],"float32"), )
paddle.where(Tensor([37, 1037],"bool"), Tensor([37, 1037],"float32"), Tensor([37, 1037],"float32"), )
paddle.where(Tensor([1, 51840],"bool"), Tensor([1, 51840],"float32"), Tensor([1, 51840],"float32"), )
paddle.where(Tensor([2, 17, 1],"bool"), Tensor([2, 17, 6804],"float32"), Tensor([2, 17, 6804],"float32"), )
paddle.where(Tensor([6, 48300],"bool"), Tensor([6, 48300],"float32"), Tensor([6, 48300],"float32"), )
paddle.where(Tensor([2, 70, 1],"bool"), Tensor([2, 70, 3024],"float32"), Tensor([2, 70, 3024],"float32"), )
paddle.where(Tensor([2, 8, 3598],"bool"), Tensor([2, 8, 3598],"float32"), Tensor([2, 8, 3598],"float32"), )
paddle.where(Tensor([2, 14, 1],"bool"), Tensor([2, 14, 4725],"float32"), Tensor([2, 14, 4725],"float32"), )
paddle.where(Tensor([4, 78660],"bool"), Tensor([4, 78660],"float32"), Tensor([4, 78660],"float32"), )
paddle.where(Tensor([1, 237870],"bool"), Tensor([1, 237870],"float32"), Tensor([1, 237870],"float32"), )
paddle.where(Tensor([16, 3024],"bool"), Tensor([16, 3024],"int32"), Tensor([16, 3024],"int32"), )
paddle.where(Tensor([2, 30, 2541],"bool"), Tensor([2, 30, 2541],"float32"), Tensor([2, 30, 2541],"float32"), )
paddle.where(Tensor([2, 25, 1],"bool"), Tensor([2, 25, 4116],"float32"), Tensor([2, 25, 4116],"float32"), )
paddle.where(Tensor([2, 29, 1],"bool"), Tensor([2, 29, 2541],"float32"), Tensor([2, 29, 2541],"float32"), )
paddle.where(Tensor([1, 82080],"bool"), Tensor([1, 82080],"float32"), Tensor([1, 82080],"float32"), )
paddle.where(Tensor([2, 45, 3549],"bool"), Tensor([2, 45, 3549],"float32"), Tensor([2, 45, 3549],"float32"), )
paddle.where(Tensor([1, 4, 1],"bool"), Tensor([1, 4, 48384],"float32"), Tensor([1, 4, 48384],"float32"), )
paddle.where(Tensor([2, 23, 1],"bool"), Tensor([2, 23, 2100],"float32"), Tensor([2, 23, 2100],"float32"), )
paddle.where(Tensor([1, 44640],"bool"), Tensor([1, 44640],"int32"), Tensor([1, 44640],"int32"), )
paddle.where(Tensor([2, 17, 1],"bool"), Tensor([2, 17, 11109],"float32"), Tensor([2, 17, 11109],"float32"), )
paddle.where(Tensor([2, 54, 3024],"bool"), Tensor([2, 54, 3024],"float32"), Tensor([2, 54, 3024],"float32"), )
paddle.where(Tensor([2, 60, 1],"bool"), Tensor([2, 60, 2541],"float32"), Tensor([2, 60, 2541],"float32"), )
paddle.where(Tensor([2, 37, 2541],"bool"), Tensor([2, 37, 2541],"float32"), Tensor([2, 37, 2541],"float32"), )
paddle.where(Tensor([2, 11, 7581],"bool"), Tensor([2, 11, 7581],"float32"), Tensor([2, 11, 7581],"float32"), )
paddle.where(Tensor([2, 20, 4116],"bool"), Tensor([2, 20, 4116],"float32"), Tensor([2, 20, 4116],"float32"), )
paddle.where(Tensor([1, 76860],"bool"), Tensor([1, 76860],"int32"), Tensor([1, 76860],"int32"), )
paddle.where(Tensor([1, 249405],"bool"), Tensor([1, 249405],"int32"), Tensor([1, 249405],"int32"), )
paddle.where(Tensor([13, 4, 56, 56],"bool"), Tensor([13, 4, 56, 56],"float32"), Tensor([13, 4, 56, 56],"float32"), )
paddle.where(Tensor([1, 6, 1],"bool"), Tensor([1, 6, 65856],"float32"), Tensor([1, 6, 65856],"float32"), )
paddle.where(Tensor([1, 4, 1],"bool"), Tensor([1, 4, 37044],"float32"), Tensor([1, 4, 37044],"float32"), )
paddle.where(Tensor([2, 68, 2100],"bool"), Tensor([2, 68, 2100],"float32"), Tensor([2, 68, 2100],"float32"), )
paddle.where(Tensor([2, 9, 6069],"bool"), Tensor([2, 9, 6069],"float32"), Tensor([2, 9, 6069],"float32"), )
paddle.where(Tensor([2, 12, 4725],"bool"), Tensor([2, 12, 4725],"float32"), Tensor([2, 12, 4725],"float32"), )
paddle.where(Tensor([1, 3, 1],"bool"), Tensor([1, 3, 44436],"float32"), Tensor([1, 3, 44436],"float32"), )
paddle.where(Tensor([1, 325113],"bool"), Tensor([1, 325113],"int32"), Tensor([1, 325113],"int32"), )
paddle.where(Tensor([2, 49, 1],"bool"), Tensor([2, 49, 2100],"float32"), Tensor([2, 49, 2100],"float32"), )
paddle.where(Tensor([2, 54750],"bool"), Tensor([2, 54750],"float32"), Tensor([2, 54750],"float32"), )
paddle.where(Tensor([2, 61, 1],"bool"), Tensor([2, 61, 2100],"float32"), Tensor([2, 61, 2100],"float32"), )
paddle.where(Tensor([3, 51030],"bool"), Tensor([3, 51030],"float32"), Tensor([3, 51030],"float32"), )
paddle.where(Tensor([2, 60, 2100],"bool"), Tensor([2, 60, 2100],"float32"), Tensor([2, 60, 2100],"float32"), )
paddle.where(Tensor([2, 15, 3549],"bool"), Tensor([2, 15, 3549],"float32"), Tensor([2, 15, 3549],"float32"), )
paddle.where(Tensor([1, 279279],"bool"), Tensor([1, 279279],"int32"), Tensor([1, 279279],"int32"), )
paddle.where(Tensor([2, 11, 1],"bool"), Tensor([2, 11, 2541],"float32"), Tensor([2, 11, 2541],"float32"), )
paddle.where(Tensor([1, 9, 1],"bool"), Tensor([1, 9, 40656],"float32"), Tensor([1, 9, 40656],"float32"), )
paddle.where(Tensor([2, 24, 3024],"bool"), Tensor([2, 24, 3024],"float32"), Tensor([2, 24, 3024],"float32"), )
paddle.where(Tensor([2, 8, 4116],"bool"), Tensor([2, 8, 4116],"float32"), Tensor([2, 8, 4116],"float32"), )
paddle.where(Tensor([1, 278256],"bool"), Tensor([1, 278256],"float32"), Tensor([1, 278256],"float32"), )
paddle.where(Tensor([2, 69345],"bool"), Tensor([2, 69345],"float32"), Tensor([2, 69345],"float32"), )
paddle.where(Tensor([2, 66150],"bool"), Tensor([2, 66150],"float32"), Tensor([2, 66150],"float32"), )
paddle.where(Tensor([2, 51, 2541],"bool"), Tensor([2, 51, 2541],"float32"), Tensor([2, 51, 2541],"float32"), )
paddle.where(Tensor([1, 58800],"bool"), Tensor([1, 58800],"float32"), Tensor([1, 58800],"float32"), )
paddle.where(Tensor([492, 492],"bool"), Tensor([492, 492],"float32"), Tensor([492, 492],"float32"), )
paddle.where(Tensor([2, 44, 1],"bool"), Tensor([2, 44, 2541],"float32"), Tensor([2, 44, 2541],"float32"), )
paddle.where(Tensor([1, 2, 1],"bool"), Tensor([1, 2, 40656],"float32"), Tensor([1, 2, 40656],"float32"), )
paddle.where(Tensor([340, 25, 25],"bool"), Tensor([340, 25, 25],"float32"), Tensor([],"float32"), )
paddle.where(Tensor([2, 37, 1],"bool"), Tensor([2, 37, 2541],"float32"), Tensor([2, 37, 2541],"float32"), )
paddle.where(Tensor([1, 276210],"bool"), Tensor([1, 276210],"int32"), Tensor([1, 276210],"int32"), )
paddle.where(Tensor([1, 301302],"bool"), Tensor([1, 301302],"float32"), Tensor([1, 301302],"float32"), )
paddle.where(Tensor([496, 496],"bool"), Tensor([496, 496],"float32"), Tensor([496, 496],"float32"), )
paddle.where(Tensor([1, 8, 40656],"bool"), Tensor([1, 8, 40656],"float32"), Tensor([1, 8, 40656],"float32"), )
paddle.where(Tensor([1, 327360],"bool"), Tensor([1, 327360],"int32"), Tensor([1, 327360],"int32"), )
paddle.where(Tensor([30, 2030],"bool"), Tensor([30, 2030],"float32"), Tensor([30, 2030],"float32"), )
paddle.where(Tensor([1, 69930],"bool"), Tensor([1, 69930],"int32"), Tensor([1, 69930],"int32"), )
paddle.where(Tensor([2, 40, 3024],"bool"), Tensor([2, 40, 3024],"float32"), Tensor([2, 40, 3024],"float32"), )
paddle.where(Tensor([5, 56730],"bool"), Tensor([5, 56730],"float32"), Tensor([5, 56730],"float32"), )
paddle.where(Tensor([2, 55440],"bool"), Tensor([2, 55440],"float32"), Tensor([2, 55440],"float32"), )
paddle.where(Tensor([2, 17, 1],"bool"), Tensor([2, 17, 7581],"float32"), Tensor([2, 17, 7581],"float32"), )
paddle.where(Tensor([20, 1955],"bool"), Tensor([20, 1955],"float32"), Tensor([20, 1955],"float32"), )
paddle.where(Tensor([4, 76590],"bool"), Tensor([4, 76590],"float32"), Tensor([4, 76590],"float32"), )
paddle.where(Tensor([2, 13, 1],"bool"), Tensor([2, 13, 11109],"float32"), Tensor([2, 13, 11109],"float32"), )
paddle.where(Tensor([2, 56250],"bool"), Tensor([2, 56250],"float32"), Tensor([2, 56250],"float32"), )
paddle.where(Tensor([8, 10164],"bool"), Tensor([8, 10164],"int32"), Tensor([8, 10164],"int32"), )
paddle.where(Tensor([1, 73500],"bool"), Tensor([1, 73500],"int32"), Tensor([1, 73500],"int32"), )
paddle.where(Tensor([2, 55845],"bool"), Tensor([2, 55845],"float32"), Tensor([2, 55845],"float32"), )
paddle.where(Tensor([8, 6, 3024],"bool"), Tensor([8, 6, 3024],"float32"), Tensor([8, 6, 3024],"float32"), )
paddle.where(Tensor([1, 262428],"bool"), Tensor([1, 262428],"float32"), Tensor([1, 262428],"float32"), )
paddle.where(Tensor([1, 13, 1],"bool"), Tensor([1, 13, 37044],"float32"), Tensor([1, 13, 37044],"float32"), )
paddle.where(Tensor([1, 313347],"bool"), Tensor([1, 313347],"float32"), Tensor([1, 313347],"float32"), )
paddle.where(Tensor([2, 5, 4789],"bool"), Tensor([2, 5, 4789],"float32"), Tensor([2, 5, 4789],"float32"), )
paddle.where(Tensor([1, 180048],"bool"), Tensor([1, 180048],"int32"), Tensor([1, 180048],"int32"), )
paddle.where(Tensor([2, 26, 4725],"bool"), Tensor([2, 26, 4725],"float32"), Tensor([2, 26, 4725],"float32"), )
paddle.where(Tensor([2, 75, 1],"bool"), Tensor([2, 75, 2541],"float32"), Tensor([2, 75, 2541],"float32"), )
paddle.where(Tensor([1, 80400],"bool"), Tensor([1, 80400],"float32"), Tensor([1, 80400],"float32"), )
paddle.where(Tensor([2, 19, 1],"bool"), Tensor([2, 19, 9261],"float32"), Tensor([2, 19, 9261],"float32"), )
paddle.where(Tensor([2, 17, 1],"bool"), Tensor([2, 17, 2541],"float32"), Tensor([2, 17, 2541],"float32"), )
paddle.where(Tensor([2, 6, 9382],"bool"), Tensor([2, 6, 9382],"float32"), Tensor([2, 6, 9382],"float32"), )
paddle.where(Tensor([2, 27, 1],"bool"), Tensor([2, 27, 3549],"float32"), Tensor([2, 27, 3549],"float32"), )
paddle.where(Tensor([2, 12, 1],"bool"), Tensor([2, 12, 9261],"float32"), Tensor([2, 12, 9261],"float32"), )
paddle.where(Tensor([2, 68985],"bool"), Tensor([2, 68985],"float32"), Tensor([2, 68985],"float32"), )
paddle.where(Tensor([2, 39, 1],"bool"), Tensor([2, 39, 5376],"float32"), Tensor([2, 39, 5376],"float32"), )
paddle.where(Tensor([4, 75555],"bool"), Tensor([4, 75555],"float32"), Tensor([4, 75555],"float32"), )
paddle.where(Tensor([1, 310992],"bool"), Tensor([1, 310992],"int32"), Tensor([1, 310992],"int32"), )
paddle.where(Tensor([1, 233244],"bool"), Tensor([1, 233244],"float32"), Tensor([1, 233244],"float32"), )
paddle.where(Tensor([2, 26, 2541],"bool"), Tensor([2, 26, 2541],"float32"), Tensor([2, 26, 2541],"float32"), )
paddle.where(Tensor([51, 1051],"bool"), Tensor([51, 1051],"float32"), Tensor([51, 1051],"float32"), )
paddle.where(Tensor([2, 27, 2541],"bool"), Tensor([2, 27, 2541],"float32"), Tensor([2, 27, 2541],"float32"), )
paddle.where(Tensor([64, 2125],"bool"), Tensor([64, 2125],"int32"), Tensor([64, 2125],"int32"), )
paddle.where(Tensor([2, 17, 3549],"bool"), Tensor([2, 17, 3549],"float32"), Tensor([2, 17, 3549],"float32"), )
paddle.where(Tensor([1, 9, 8500],"bool"), Tensor([1, 9, 8500],"float32"), Tensor([1, 9, 8500],"float32"), )
paddle.where(Tensor([1, 48300],"bool"), Tensor([1, 48300],"float32"), Tensor([1, 48300],"float32"), )
paddle.where(Tensor([2, 18, 4725],"bool"), Tensor([2, 18, 4725],"float32"), Tensor([2, 18, 4725],"float32"), )
paddle.where(Tensor([2, 83220],"bool"), Tensor([2, 83220],"float32"), Tensor([2, 83220],"float32"), )
paddle.where(Tensor([7, 44640],"bool"), Tensor([7, 44640],"float32"), Tensor([7, 44640],"float32"), )
paddle.where(Tensor([1, 52920],"bool"), Tensor([1, 52920],"float32"), Tensor([1, 52920],"float32"), )
paddle.where(Tensor([1, 283905],"bool"), Tensor([1, 283905],"float32"), Tensor([1, 283905],"float32"), )
paddle.where(Tensor([1, 105840],"bool"), Tensor([1, 105840],"int32"), Tensor([1, 105840],"int32"), )
paddle.where(Tensor([8, 10, 2541],"bool"), Tensor([8, 10, 2541],"float32"), Tensor([8, 10, 2541],"float32"), )
paddle.where(Tensor([217, 217],"bool"), Tensor([217, 217],"float32"), Tensor([217, 217],"float32"), )
paddle.where(Tensor([262, 262],"bool"), Tensor([262, 262],"float32"), Tensor([262, 262],"float32"), )
paddle.where(Tensor([2, 30, 1],"bool"), Tensor([2, 30, 6804],"float32"), Tensor([2, 30, 6804],"float32"), )
paddle.where(Tensor([2, 26, 1],"bool"), Tensor([2, 26, 6069],"float32"), Tensor([2, 26, 6069],"float32"), )
paddle.where(Tensor([2, 25, 1],"bool"), Tensor([2, 25, 6804],"float32"), Tensor([2, 25, 6804],"float32"), )
paddle.where(Tensor([2, 49, 1],"bool"), Tensor([2, 49, 3549],"float32"), Tensor([2, 49, 3549],"float32"), )
paddle.where(Tensor([2, 88200],"bool"), Tensor([2, 88200],"float32"), Tensor([2, 88200],"float32"), )
paddle.where(Tensor([6, 47610],"bool"), Tensor([6, 47610],"float32"), Tensor([6, 47610],"float32"), )
paddle.where(Tensor([2, 14, 7681],"bool"), Tensor([2, 14, 7681],"float32"), Tensor([2, 14, 7681],"float32"), )
paddle.where(Tensor([1, 10, 30324],"bool"), Tensor([1, 10, 30324],"float32"), Tensor([1, 10, 30324],"float32"), )
paddle.where(Tensor([2, 84420],"bool"), Tensor([2, 84420],"float32"), Tensor([2, 84420],"float32"), )
paddle.where(Tensor([1, 223827],"bool"), Tensor([1, 223827],"int32"), Tensor([1, 223827],"int32"), )
paddle.where(Tensor([2, 70350],"bool"), Tensor([2, 70350],"float32"), Tensor([2, 70350],"float32"), )
paddle.where(Tensor([8, 2, 9261],"bool"), Tensor([8, 2, 9261],"float32"), Tensor([8, 2, 9261],"float32"), )
paddle.where(Tensor([2, 70080],"bool"), Tensor([2, 70080],"float32"), Tensor([2, 70080],"float32"), )
paddle.where(Tensor([4, 51030],"bool"), Tensor([4, 51030],"float32"), Tensor([4, 51030],"float32"), )
paddle.where(Tensor([2, 24, 3549],"bool"), Tensor([2, 24, 3549],"float32"), Tensor([2, 24, 3549],"float32"), )
paddle.where(Tensor([8, 2, 5376],"bool"), Tensor([8, 2, 5376],"float32"), Tensor([8, 2, 5376],"float32"), )
paddle.where(Tensor([2, 60, 1],"bool"), Tensor([2, 60, 3024],"float32"), Tensor([2, 60, 3024],"float32"), )
paddle.where(Tensor([2, 48, 3024],"bool"), Tensor([2, 48, 3024],"float32"), Tensor([2, 48, 3024],"float32"), )
paddle.where(Tensor([1, 223554],"bool"), Tensor([1, 223554],"int32"), Tensor([1, 223554],"int32"), )
paddle.where(Tensor([2, 76, 1],"bool"), Tensor([2, 76, 2541],"float32"), Tensor([2, 76, 2541],"float32"), )
paddle.where(Tensor([2, 52, 1],"bool"), Tensor([2, 52, 2100],"float32"), Tensor([2, 52, 2100],"float32"), )
paddle.where(Tensor([1, 72000],"bool"), Tensor([1, 72000],"float32"), Tensor([1, 72000],"float32"), )
paddle.where(Tensor([2, 45, 1],"bool"), Tensor([2, 45, 3024],"float32"), Tensor([2, 45, 3024],"float32"), )
paddle.where(Tensor([1, 268569],"bool"), Tensor([1, 268569],"float32"), Tensor([1, 268569],"float32"), )
paddle.where(Tensor([2, 31, 1],"bool"), Tensor([2, 31, 3549],"float32"), Tensor([2, 31, 3549],"float32"), )
paddle.where(Tensor([7, 43560],"bool"), Tensor([7, 43560],"float32"), Tensor([7, 43560],"float32"), )
paddle.where(Tensor([2, 54270],"bool"), Tensor([2, 54270],"float32"), Tensor([2, 54270],"float32"), )
paddle.where(Tensor([2, 21, 1],"bool"), Tensor([2, 21, 3024],"float32"), Tensor([2, 21, 3024],"float32"), )
paddle.where(Tensor([2, 22, 2541],"bool"), Tensor([2, 22, 2541],"float32"), Tensor([2, 22, 2541],"float32"), )
paddle.where(Tensor([1, 12, 3598],"bool"), Tensor([1, 12, 3598],"float32"), Tensor([1, 12, 3598],"float32"), )
paddle.where(Tensor([1, 66240],"bool"), Tensor([1, 66240],"int32"), Tensor([1, 66240],"int32"), )
paddle.where(Tensor([2, 23, 1],"bool"), Tensor([2, 23, 4116],"float32"), Tensor([2, 23, 4116],"float32"), )
paddle.where(Tensor([2, 12, 8500],"bool"), Tensor([2, 12, 8500],"float32"), Tensor([2, 12, 8500],"float32"), )
paddle.where(Tensor([3, 77625],"bool"), Tensor([3, 77625],"float32"), Tensor([3, 77625],"float32"), )
paddle.where(Tensor([2, 23, 3024],"bool"), Tensor([2, 23, 3024],"float32"), Tensor([2, 23, 3024],"float32"), )
paddle.where(Tensor([2, 14, 3598],"bool"), Tensor([2, 14, 3598],"float32"), Tensor([2, 14, 3598],"float32"), )
paddle.where(Tensor([2, 30, 1],"bool"), Tensor([2, 30, 2541],"float32"), Tensor([2, 30, 2541],"float32"), )
paddle.where(Tensor([2, 52, 1],"bool"), Tensor([2, 52, 2541],"float32"), Tensor([2, 52, 2541],"float32"), )
paddle.where(Tensor([2, 80400],"bool"), Tensor([2, 80400],"float32"), Tensor([2, 80400],"float32"), )
paddle.where(Tensor([2, 47, 1],"bool"), Tensor([2, 47, 4116],"float32"), Tensor([2, 47, 4116],"float32"), )
paddle.where(Tensor([5, 63000],"bool"), Tensor([5, 63000],"float32"), Tensor([5, 63000],"float32"), )
paddle.where(Tensor([1, 82080],"bool"), Tensor([1, 82080],"int32"), Tensor([1, 82080],"int32"), )
paddle.where(Tensor([1, 304368],"bool"), Tensor([1, 304368],"float32"), Tensor([1, 304368],"float32"), )
paddle.where(Tensor([2, 21, 4725],"bool"), Tensor([2, 21, 4725],"float32"), Tensor([2, 21, 4725],"float32"), )
paddle.where(Tensor([8, 4, 2541],"bool"), Tensor([8, 4, 2541],"float32"), Tensor([8, 4, 2541],"float32"), )
paddle.where(Tensor([2, 21, 1],"bool"), Tensor([2, 21, 2541],"float32"), Tensor([2, 21, 2541],"float32"), )
paddle.where(Tensor([2, 76590],"bool"), Tensor([2, 76590],"float32"), Tensor([2, 76590],"float32"), )
paddle.where(Tensor([2, 10, 11109],"bool"), Tensor([2, 10, 11109],"float32"), Tensor([2, 10, 11109],"float32"), )
paddle.where(Tensor([4, 144, 144],"bool"), Tensor([4, 144, 144],"float32"), Tensor([4, 144, 144],"float32"), )
paddle.where(Tensor([22, 1830],"bool"), Tensor([22, 1830],"float32"), Tensor([22, 1830],"float32"), )
paddle.where(Tensor([2, 22, 2100],"bool"), Tensor([2, 22, 2100],"float32"), Tensor([2, 22, 2100],"float32"), )
paddle.where(Tensor([2, 19, 1],"bool"), Tensor([2, 19, 11109],"float32"), Tensor([2, 19, 11109],"float32"), )
paddle.where(Tensor([1, 68310],"bool"), Tensor([1, 68310],"float32"), Tensor([1, 68310],"float32"), )
paddle.where(Tensor([1, 59520],"bool"), Tensor([1, 59520],"float32"), Tensor([1, 59520],"float32"), )
paddle.where(Tensor([3, 75075],"bool"), Tensor([3, 75075],"float32"), Tensor([3, 75075],"float32"), )
paddle.where(Tensor([1, 220992],"bool"), Tensor([1, 220992],"float32"), Tensor([1, 220992],"float32"), )
paddle.where(Tensor([2, 19, 4789],"bool"), Tensor([2, 19, 4789],"float32"), Tensor([2, 19, 4789],"float32"), )
paddle.where(Tensor([2, 11, 1],"bool"), Tensor([2, 11, 4725],"float32"), Tensor([2, 11, 4725],"float32"), )
paddle.where(Tensor([1, 55755],"bool"), Tensor([1, 55755],"int32"), Tensor([1, 55755],"int32"), )
paddle.where(Tensor([2, 12, 6804],"bool"), Tensor([2, 12, 6804],"float32"), Tensor([2, 12, 6804],"float32"), )
paddle.where(Tensor([2, 25, 5376],"bool"), Tensor([2, 25, 5376],"float32"), Tensor([2, 25, 5376],"float32"), )
paddle.where(Tensor([3, 55200],"bool"), Tensor([3, 55200],"float32"), Tensor([3, 55200],"float32"), )
paddle.where(Tensor([3, 47610],"bool"), Tensor([3, 47610],"float32"), Tensor([3, 47610],"float32"), )
paddle.where(Tensor([1, 18, 1],"bool"), Tensor([1, 18, 21504],"float32"), Tensor([1, 18, 21504],"float32"), )
paddle.where(Tensor([32, 2032],"bool"), Tensor([32, 2032],"float32"), Tensor([32, 2032],"float32"), )
paddle.where(Tensor([1, 205923],"bool"), Tensor([1, 205923],"int32"), Tensor([1, 205923],"int32"), )
paddle.where(Tensor([2, 27, 1],"bool"), Tensor([2, 27, 6804],"float32"), Tensor([2, 27, 6804],"float32"), )
paddle.where(Tensor([2, 52920],"bool"), Tensor([2, 52920],"float32"), Tensor([2, 52920],"float32"), )
paddle.where(Tensor([2, 67890],"bool"), Tensor([2, 67890],"float32"), Tensor([2, 67890],"float32"), )
paddle.where(Tensor([1, 83070],"bool"), Tensor([1, 83070],"int32"), Tensor([1, 83070],"int32"), )
paddle.where(Tensor([2, 58500],"bool"), Tensor([2, 58500],"float32"), Tensor([2, 58500],"float32"), )
paddle.where(Tensor([1, 10, 6885],"bool"), Tensor([1, 10, 6885],"float32"), Tensor([1, 10, 6885],"float32"), )
paddle.where(Tensor([243, 243],"bool"), Tensor([243, 243],"float32"), Tensor([243, 243],"float32"), )
paddle.where(Tensor([2, 7, 12096],"bool"), Tensor([2, 7, 12096],"float32"), Tensor([2, 7, 12096],"float32"), )
paddle.where(Tensor([2, 25, 1],"bool"), Tensor([2, 25, 6069],"float32"), Tensor([2, 25, 6069],"float32"), )
paddle.where(Tensor([2, 34, 1],"bool"), Tensor([2, 34, 5376],"float32"), Tensor([2, 34, 5376],"float32"), )
paddle.where(Tensor([1, 42780],"bool"), Tensor([1, 42780],"float32"), Tensor([1, 42780],"float32"), )
paddle.where(Tensor([2, 31, 4725],"bool"), Tensor([2, 31, 4725],"float32"), Tensor([2, 31, 4725],"float32"), )
paddle.where(Tensor([20, 1953],"bool"), Tensor([20, 1953],"float32"), Tensor([20, 1953],"float32"), )
paddle.where(Tensor([18, 2018],"bool"), Tensor([18, 2018],"float32"), Tensor([18, 2018],"float32"), )
paddle.where(Tensor([1, 88200],"bool"), Tensor([1, 88200],"int32"), Tensor([1, 88200],"int32"), )
paddle.where(Tensor([5, 47520],"bool"), Tensor([5, 47520],"float32"), Tensor([5, 47520],"float32"), )
paddle.where(Tensor([2, 32, 1],"bool"), Tensor([2, 32, 2100],"float32"), Tensor([2, 32, 2100],"float32"), )
paddle.where(Tensor([4, 50250],"bool"), Tensor([4, 50250],"float32"), Tensor([4, 50250],"float32"), )
paddle.where(Tensor([8, 5, 4725],"bool"), Tensor([8, 5, 4725],"float32"), Tensor([8, 5, 4725],"float32"), )
paddle.where(Tensor([1, 8, 1],"bool"), Tensor([1, 8, 21504],"float32"), Tensor([1, 8, 21504],"float32"), )
paddle.where(Tensor([1, 58500],"bool"), Tensor([1, 58500],"int32"), Tensor([1, 58500],"int32"), )
paddle.where(Tensor([2, 25, 4116],"bool"), Tensor([2, 25, 4116],"float32"), Tensor([2, 25, 4116],"float32"), )
paddle.where(Tensor([1, 35280],"bool"), Tensor([1, 35280],"int32"), Tensor([1, 35280],"int32"), )
paddle.where(Tensor([2, 2, 8500],"bool"), Tensor([2, 2, 8500],"float32"), Tensor([2, 2, 8500],"float32"), )
paddle.where(Tensor([2, 45, 2100],"bool"), Tensor([2, 45, 2100],"float32"), Tensor([2, 45, 2100],"float32"), )
paddle.where(Tensor([4, 68985],"bool"), Tensor([4, 68985],"float32"), Tensor([4, 68985],"float32"), )
paddle.where(Tensor([2, 8, 10164],"bool"), Tensor([2, 8, 10164],"float32"), Tensor([2, 8, 10164],"float32"), )
paddle.where(Tensor([2, 53460],"bool"), Tensor([2, 53460],"float32"), Tensor([2, 53460],"float32"), )
paddle.where(Tensor([35, 1035],"bool"), Tensor([35, 1035],"float32"), Tensor([35, 1035],"float32"), )
paddle.where(Tensor([2, 14, 9261],"bool"), Tensor([2, 14, 9261],"float32"), Tensor([2, 14, 9261],"float32"), )
paddle.where(Tensor([2, 11, 1],"bool"), Tensor([2, 11, 9261],"float32"), Tensor([2, 11, 9261],"float32"), )
paddle.where(Tensor([2, 67, 1],"bool"), Tensor([2, 67, 3024],"float32"), Tensor([2, 67, 3024],"float32"), )
paddle.where(Tensor([2, 60, 1],"bool"), Tensor([2, 60, 2100],"float32"), Tensor([2, 60, 2100],"float32"), )
paddle.where(Tensor([1, 35280],"bool"), Tensor([1, 35280],"float32"), Tensor([1, 35280],"float32"), )
paddle.where(Tensor([2, 68040],"bool"), Tensor([2, 68040],"float32"), Tensor([2, 68040],"float32"), )
paddle.where(Tensor([2, 34, 4116],"bool"), Tensor([2, 34, 4116],"float32"), Tensor([2, 34, 4116],"float32"), )
paddle.where(Tensor([2, 3, 6150],"bool"), Tensor([2, 3, 6150],"float32"), Tensor([2, 3, 6150],"float32"), )
paddle.where(Tensor([2, 30, 1],"bool"), Tensor([2, 30, 7581],"float32"), Tensor([2, 30, 7581],"float32"), )
paddle.where(Tensor([203, 203],"bool"), Tensor([203, 203],"float32"), Tensor([203, 203],"float32"), )
paddle.where(Tensor([1, 103320],"bool"), Tensor([1, 103320],"int32"), Tensor([1, 103320],"int32"), )
paddle.where(Tensor([1, 331251],"bool"), Tensor([1, 331251],"int32"), Tensor([1, 331251],"int32"), )
paddle.where(Tensor([1, 63135],"bool"), Tensor([1, 63135],"int32"), Tensor([1, 63135],"int32"), )
paddle.where(Tensor([2, 74520],"bool"), Tensor([2, 74520],"float32"), Tensor([2, 74520],"float32"), )
paddle.where(Tensor([2, 51, 3024],"bool"), Tensor([2, 51, 3024],"float32"), Tensor([2, 51, 3024],"float32"), )
paddle.where(Tensor([2, 31, 2541],"bool"), Tensor([2, 31, 2541],"float32"), Tensor([2, 31, 2541],"float32"), )
paddle.where(Tensor([2, 14, 1],"bool"), Tensor([2, 14, 3549],"float32"), Tensor([2, 14, 3549],"float32"), )
paddle.where(Tensor([1, 75240],"bool"), Tensor([1, 75240],"float32"), Tensor([1, 75240],"float32"), )
paddle.where(Tensor([2, 9, 1],"bool"), Tensor([2, 9, 7581],"float32"), Tensor([2, 9, 7581],"float32"), )
paddle.where(Tensor([1, 9, 1],"bool"), Tensor([1, 9, 30324],"float32"), Tensor([1, 9, 30324],"float32"), )
paddle.where(Tensor([1, 191301],"bool"), Tensor([1, 191301],"float32"), Tensor([1, 191301],"float32"), )
paddle.where(Tensor([1, 230175],"bool"), Tensor([1, 230175],"int32"), Tensor([1, 230175],"int32"), )
paddle.where(Tensor([2, 27, 1],"bool"), Tensor([2, 27, 5376],"float32"), Tensor([2, 27, 5376],"float32"), )
paddle.where(Tensor([2, 12, 2541],"bool"), Tensor([2, 12, 2541],"float32"), Tensor([2, 12, 2541],"float32"), )
paddle.where(Tensor([3, 43560],"bool"), Tensor([3, 43560],"float32"), Tensor([3, 43560],"float32"), )
paddle.where(Tensor([3, 59520],"bool"), Tensor([3, 59520],"float32"), Tensor([3, 59520],"float32"), )
paddle.where(Tensor([2, 7, 6069],"bool"), Tensor([2, 7, 6069],"float32"), Tensor([2, 7, 6069],"float32"), )
paddle.where(Tensor([2, 10, 6069],"bool"), Tensor([2, 10, 6069],"float32"), Tensor([2, 10, 6069],"float32"), )
paddle.where(Tensor([2, 80, 1],"bool"), Tensor([2, 80, 2100],"float32"), Tensor([2, 80, 2100],"float32"), )
paddle.where(Tensor([3, 49410],"bool"), Tensor([3, 49410],"float32"), Tensor([3, 49410],"float32"), )
paddle.where(Tensor([2, 35, 2100],"bool"), Tensor([2, 35, 2100],"float32"), Tensor([2, 35, 2100],"float32"), )
paddle.where(Tensor([3, 60750],"bool"), Tensor([3, 60750],"float32"), Tensor([3, 60750],"float32"), )
paddle.where(Tensor([2, 57750],"bool"), Tensor([2, 57750],"float32"), Tensor([2, 57750],"float32"), )
paddle.where(Tensor([2, 66, 1],"bool"), Tensor([2, 66, 3549],"float32"), Tensor([2, 66, 3549],"float32"), )
paddle.where(Tensor([29, 2029],"bool"), Tensor([29, 2029],"float32"), Tensor([29, 2029],"float32"), )
paddle.where(Tensor([8, 4, 8400],"bool"), Tensor([8, 4, 8400],"float32"), Tensor([8, 4, 8400],"float32"), )
paddle.where(Tensor([2, 12, 1],"bool"), Tensor([2, 12, 8400],"float32"), Tensor([2, 12, 8400],"float32"), )
paddle.where(Tensor([2, 38, 1],"bool"), Tensor([2, 38, 3024],"float32"), Tensor([2, 38, 3024],"float32"), )
paddle.where(Tensor([2, 36, 1],"bool"), Tensor([2, 36, 2541],"float32"), Tensor([2, 36, 2541],"float32"), )
paddle.where(Tensor([1, 68040],"bool"), Tensor([1, 68040],"float32"), Tensor([1, 68040],"float32"), )
paddle.where(Tensor([1, 304368],"bool"), Tensor([1, 304368],"int32"), Tensor([1, 304368],"int32"), )
paddle.where(Tensor([1, 46230],"bool"), Tensor([1, 46230],"float32"), Tensor([1, 46230],"float32"), )
paddle.where(Tensor([1, 45135],"bool"), Tensor([1, 45135],"int32"), Tensor([1, 45135],"int32"), )
paddle.where(Tensor([2, 4, 11109],"bool"), Tensor([2, 4, 11109],"float32"), Tensor([2, 4, 11109],"float32"), )
paddle.where(Tensor([2, 11, 6804],"bool"), Tensor([2, 11, 6804],"float32"), Tensor([2, 11, 6804],"float32"), )
paddle.where(Tensor([1, 55680],"bool"), Tensor([1, 55680],"int32"), Tensor([1, 55680],"int32"), )
paddle.where(Tensor([1, 76590],"bool"), Tensor([1, 76590],"int32"), Tensor([1, 76590],"int32"), )
paddle.where(Tensor([2, 28, 1],"bool"), Tensor([2, 28, 3549],"float32"), Tensor([2, 28, 3549],"float32"), )
paddle.where(Tensor([1, 252195],"bool"), Tensor([1, 252195],"float32"), Tensor([1, 252195],"float32"), )
paddle.where(Tensor([1, 220968],"bool"), Tensor([1, 220968],"float32"), Tensor([1, 220968],"float32"), )
paddle.where(Tensor([1, 3, 1],"bool"), Tensor([1, 3, 70644],"float32"), Tensor([1, 3, 70644],"float32"), )
paddle.where(Tensor([20, 1747],"bool"), Tensor([20, 1747],"float32"), Tensor([20, 1747],"float32"), )
paddle.where(Tensor([30, 30, 40],"bool"), Tensor([30, 30, 40],"float32"), Tensor([30, 30, 40],"float32"), )
paddle.where(Tensor([2, 9, 8400],"bool"), Tensor([2, 9, 8400],"float32"), Tensor([2, 9, 8400],"float32"), )
paddle.where(Tensor([6, 46080],"bool"), Tensor([6, 46080],"float32"), Tensor([6, 46080],"float32"), )
paddle.where(Tensor([2, 47, 1],"bool"), Tensor([2, 47, 3024],"float32"), Tensor([2, 47, 3024],"float32"), )
paddle.where(Tensor([2, 56, 1],"bool"), Tensor([2, 56, 4116],"float32"), Tensor([2, 56, 4116],"float32"), )
paddle.where(Tensor([3, 78120],"bool"), Tensor([3, 78120],"float32"), Tensor([3, 78120],"float32"), )
paddle.where(Tensor([2, 82, 1],"bool"), Tensor([2, 82, 2541],"float32"), Tensor([2, 82, 2541],"float32"), )
paddle.where(Tensor([8, 16, 2100],"bool"), Tensor([8, 16, 2100],"float32"), Tensor([8, 16, 2100],"float32"), )
paddle.where(Tensor([3, 60480],"bool"), Tensor([3, 60480],"float32"), Tensor([3, 60480],"float32"), )
paddle.where(Tensor([8, 4, 3024],"bool"), Tensor([8, 4, 3024],"float32"), Tensor([8, 4, 3024],"float32"), )
paddle.where(Tensor([3, 70290],"bool"), Tensor([3, 70290],"float32"), Tensor([3, 70290],"float32"), )
paddle.where(Tensor([16, 2541],"bool"), Tensor([16, 2541],"int32"), Tensor([16, 2541],"int32"), )
paddle.where(Tensor([1, 38367, 1],"bool"), Tensor([1, 38367, 4],"float32"), Tensor([],"float32"), )
paddle.where(Tensor([2, 8, 1],"bool"), Tensor([2, 8, 5376],"float32"), Tensor([2, 8, 5376],"float32"), )
paddle.where(Tensor([2, 55890],"bool"), Tensor([2, 55890],"float32"), Tensor([2, 55890],"float32"), )
paddle.where(Tensor([1, 50400],"bool"), Tensor([1, 50400],"int32"), Tensor([1, 50400],"int32"), )
paddle.where(Tensor([2, 40, 2541],"bool"), Tensor([2, 40, 2541],"float32"), Tensor([2, 40, 2541],"float32"), )
paddle.where(Tensor([4, 72000],"bool"), Tensor([4, 72000],"float32"), Tensor([4, 72000],"float32"), )
paddle.where(Tensor([6, 50250],"bool"), Tensor([6, 50250],"float32"), Tensor([6, 50250],"float32"), )
paddle.where(Tensor([2, 20, 1],"bool"), Tensor([2, 20, 4116],"float32"), Tensor([2, 20, 4116],"float32"), )
paddle.where(Tensor([2, 64, 1],"bool"), Tensor([2, 64, 2541],"float32"), Tensor([2, 64, 2541],"float32"), )
paddle.where(Tensor([2, 13, 12096],"bool"), Tensor([2, 13, 12096],"float32"), Tensor([2, 13, 12096],"float32"), )
paddle.where(Tensor([2, 27, 5376],"bool"), Tensor([2, 27, 5376],"float32"), Tensor([2, 27, 5376],"float32"), )
paddle.where(Tensor([1, 16, 6885],"bool"), Tensor([1, 16, 6885],"float32"), Tensor([1, 16, 6885],"float32"), )
paddle.where(Tensor([3, 68340],"bool"), Tensor([3, 68340],"float32"), Tensor([3, 68340],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 56784],"float32"), Tensor([1, 1, 56784],"float32"), )
paddle.where(Tensor([2, 5, 8500],"bool"), Tensor([2, 5, 8500],"float32"), Tensor([2, 5, 8500],"float32"), )
paddle.where(Tensor([1, 64170],"bool"), Tensor([1, 64170],"float32"), Tensor([1, 64170],"float32"), )
paddle.where(Tensor([2, 10, 5376],"bool"), Tensor([2, 10, 5376],"float32"), Tensor([2, 10, 5376],"float32"), )
paddle.where(Tensor([1, 1, 1],"bool"), Tensor([1, 1, 75600],"float32"), Tensor([1, 1, 75600],"float32"), )
paddle.where(Tensor([1, 205923],"bool"), Tensor([1, 205923],"float32"), Tensor([1, 205923],"float32"), )
paddle.where(Tensor([3, 71820],"bool"), Tensor([3, 71820],"float32"), Tensor([3, 71820],"float32"), )
paddle.where(Tensor([8, 12, 2100],"bool"), Tensor([8, 12, 2100],"float32"), Tensor([8, 12, 2100],"float32"), )
paddle.where(Tensor([1, 7, 6885],"bool"), Tensor([1, 7, 6885],"float32"), Tensor([1, 7, 6885],"float32"), )
paddle.where(Tensor([1, 47520],"bool"), Tensor([1, 47520],"float32"), Tensor([1, 47520],"float32"), )
paddle.where(Tensor([1, 74520],"bool"), Tensor([1, 74520],"int32"), Tensor([1, 74520],"int32"), )
paddle.where(Tensor([2, 21, 3549],"bool"), Tensor([2, 21, 3549],"float32"), Tensor([2, 21, 3549],"float32"), )
paddle.where(Tensor([5, 64170],"bool"), Tensor([5, 64170],"float32"), Tensor([5, 64170],"float32"), )
paddle.where(Tensor([1, 8, 1],"bool"), Tensor([1, 8, 33600],"float32"), Tensor([1, 8, 33600],"float32"), )
paddle.where(Tensor([1, 67890],"bool"), Tensor([1, 67890],"float32"), Tensor([1, 67890],"float32"), )
paddle.where(Tensor([2, 7, 1],"bool"), Tensor([2, 7, 6069],"float32"), Tensor([2, 7, 6069],"float32"), )
paddle.where(Tensor([2, 35, 4116],"bool"), Tensor([2, 35, 4116],"float32"), Tensor([2, 35, 4116],"float32"), )
paddle.where(Tensor([1, 229455],"bool"), Tensor([1, 229455],"int32"), Tensor([1, 229455],"int32"), )
paddle.where(Tensor([2, 15, 7581],"bool"), Tensor([2, 15, 7581],"float32"), Tensor([2, 15, 7581],"float32"), )
paddle.where(Tensor([2, 59, 1],"bool"), Tensor([2, 59, 4116],"float32"), Tensor([2, 59, 4116],"float32"), )
paddle.where(Tensor([2, 14, 6150],"bool"), Tensor([2, 14, 6150],"float32"), Tensor([2, 14, 6150],"float32"), )
paddle.where(Tensor([1, 72360],"bool"), Tensor([1, 72360],"int32"), Tensor([1, 72360],"int32"), )
paddle.where(Tensor([2, 9, 1],"bool"), Tensor([2, 9, 10164],"float32"), Tensor([2, 9, 10164],"float32"), )
paddle.where(Tensor([13, 1, 1024, 7],"bool"), Tensor([13, 1, 1024, 7],"float32"), Tensor([13, 1, 1024, 7],"float32"), )
paddle.where(Tensor([2, 26, 1],"bool"), Tensor([2, 26, 9261],"float32"), Tensor([2, 26, 9261],"float32"), )
paddle.where(Tensor([1, 71685],"bool"), Tensor([1, 71685],"float32"), Tensor([1, 71685],"float32"), )
paddle.where(Tensor([2, 12, 7581],"bool"), Tensor([2, 12, 7581],"float32"), Tensor([2, 12, 7581],"float32"), )
paddle.where(Tensor([1, 76260],"bool"), Tensor([1, 76260],"float32"), Tensor([1, 76260],"float32"), )
paddle.where(Tensor([3, 69345],"bool"), Tensor([3, 69345],"float32"), Tensor([3, 69345],"float32"), )
paddle.where(Tensor([1, 9, 1],"bool"), Tensor([1, 9, 48384],"float32"), Tensor([1, 9, 48384],"float32"), )
paddle.where(Tensor([16, 4725],"bool"), Tensor([16, 4725],"int32"), Tensor([16, 4725],"int32"), )
paddle.where(Tensor([3, 76380],"bool"), Tensor([3, 76380],"float32"), Tensor([3, 76380],"float32"), )
paddle.where(Tensor([2, 27, 1],"bool"), Tensor([2, 27, 3024],"float32"), Tensor([2, 27, 3024],"float32"), )
paddle.where(Tensor([2, 22, 1],"bool"), Tensor([2, 22, 4725],"float32"), Tensor([2, 22, 4725],"float32"), )
paddle.where(Tensor([8, 7, 4116],"bool"), Tensor([8, 7, 4116],"float32"), Tensor([8, 7, 4116],"float32"), )
paddle.where(Tensor([1, 255780],"bool"), Tensor([1, 255780],"float32"), Tensor([1, 255780],"float32"), )
paddle.where(Tensor([2, 22, 1],"bool"), Tensor([2, 22, 8400],"float32"), Tensor([2, 22, 8400],"float32"), )
paddle.where(Tensor([1, 84375],"bool"), Tensor([1, 84375],"int32"), Tensor([1, 84375],"int32"), )
paddle.where(Tensor([1, 75600],"bool"), Tensor([1, 75600],"int32"), Tensor([1, 75600],"int32"), )
paddle.where(Tensor([1, 2, 1],"bool"), Tensor([1, 2, 48384],"float32"), Tensor([1, 2, 48384],"float32"), )
paddle.where(Tensor([3, 62700],"bool"), Tensor([3, 62700],"float32"), Tensor([3, 62700],"float32"), )
paddle.where(Tensor([2, 22, 5376],"bool"), Tensor([2, 22, 5376],"float32"), Tensor([2, 22, 5376],"float32"), )
paddle.where(Tensor([2, 21, 6069],"bool"), Tensor([2, 21, 6069],"float32"), Tensor([2, 21, 6069],"float32"), )
paddle.where(Tensor([2, 26, 1],"bool"), Tensor([2, 26, 5376],"float32"), Tensor([2, 26, 5376],"float32"), )
paddle.where(Tensor([2, 12, 1],"bool"), Tensor([2, 12, 7581],"float32"), Tensor([2, 12, 7581],"float32"), )
paddle.where(Tensor([1, 62160],"bool"), Tensor([1, 62160],"int32"), Tensor([1, 62160],"int32"), )
paddle.where(Tensor([2, 45, 3024],"bool"), Tensor([2, 45, 3024],"float32"), Tensor([2, 45, 3024],"float32"), )
paddle.where(Tensor([2, 50250],"bool"), Tensor([2, 50250],"float32"), Tensor([2, 50250],"float32"), )
paddle.where(Tensor([2, 4, 5376],"bool"), Tensor([2, 4, 5376],"float32"), Tensor([2, 4, 5376],"float32"), )
paddle.where(Tensor([2, 50, 3024],"bool"), Tensor([2, 50, 3024],"float32"), Tensor([2, 50, 3024],"float32"), )
paddle.where(Tensor([2, 18, 5440],"bool"), Tensor([2, 18, 5440],"float32"), Tensor([2, 18, 5440],"float32"), )
paddle.where(Tensor([1, 262194],"bool"), Tensor([1, 262194],"float32"), Tensor([1, 262194],"float32"), )
paddle.where(Tensor([2, 46230],"bool"), Tensor([2, 46230],"float32"), Tensor([2, 46230],"float32"), )
paddle.where(Tensor([2, 24, 1],"bool"), Tensor([2, 24, 4725],"float32"), Tensor([2, 24, 4725],"float32"), )
paddle.where(Tensor([2, 16, 1],"bool"), Tensor([2, 16, 10164],"float32"), Tensor([2, 16, 10164],"float32"), )
paddle.where(Tensor([1, 300762],"bool"), Tensor([1, 300762],"int32"), Tensor([1, 300762],"int32"), )
paddle.where(Tensor([2, 17, 6069],"bool"), Tensor([2, 17, 6069],"float32"), Tensor([2, 17, 6069],"float32"), )
paddle.where(Tensor([2, 13, 1],"bool"), Tensor([2, 13, 5376],"float32"), Tensor([2, 13, 5376],"float32"), )
paddle.where(Tensor([1, 67335],"bool"), Tensor([1, 67335],"int32"), Tensor([1, 67335],"int32"), )
paddle.where(Tensor([1, 322245],"bool"), Tensor([1, 322245],"float32"), Tensor([1, 322245],"float32"), )
paddle.where(Tensor([1, 57750],"bool"), Tensor([1, 57750],"int32"), Tensor([1, 57750],"int32"), )
paddle.where(Tensor([5, 46230],"bool"), Tensor([5, 46230],"float32"), Tensor([5, 46230],"float32"), )
paddle.where(Tensor([2, 41, 2541],"bool"), Tensor([2, 41, 2541],"float32"), Tensor([2, 41, 2541],"float32"), )
paddle.where(Tensor([4, 7, 4725],"bool"), Tensor([4, 7, 4725],"float32"), Tensor([4, 7, 4725],"float32"), )
paddle.where(Tensor([1, 272118],"bool"), Tensor([1, 272118],"int32"), Tensor([1, 272118],"int32"), )
paddle.where(Tensor([1, 80400],"bool"), Tensor([1, 80400],"int32"), Tensor([1, 80400],"int32"), )
paddle.where(Tensor([2, 61, 2100],"bool"), Tensor([2, 61, 2100],"float32"), Tensor([2, 61, 2100],"float32"), )
paddle.where(Tensor([1, 5, 1],"bool"), Tensor([1, 5, 33600],"float32"), Tensor([1, 5, 33600],"float32"), )
paddle.where(Tensor([4, 3, 12096],"bool"), Tensor([4, 3, 12096],"float32"), Tensor([4, 3, 12096],"float32"), )
paddle.where(Tensor([2, 21, 1],"bool"), Tensor([2, 21, 8400],"float32"), Tensor([2, 21, 8400],"float32"), )
paddle.where(Tensor([2, 66, 2100],"bool"), Tensor([2, 66, 2100],"float32"), Tensor([2, 66, 2100],"float32"), )
paddle.where(Tensor([2, 7, 6150],"bool"), Tensor([2, 7, 6150],"float32"), Tensor([2, 7, 6150],"float32"), )
paddle.where(Tensor([2, 13, 1],"bool"), Tensor([2, 13, 10164],"float32"), Tensor([2, 13, 10164],"float32"), )
paddle.where(Tensor([2, 31, 1],"bool"), Tensor([2, 31, 6804],"float32"), Tensor([2, 31, 6804],"float32"), )
paddle.where(Tensor([2, 63840],"bool"), Tensor([2, 63840],"float32"), Tensor([2, 63840],"float32"), )
paddle.where(Tensor([1, 59295],"bool"), Tensor([1, 59295],"int32"), Tensor([1, 59295],"int32"), )
paddle.where(Tensor([1, 62730],"bool"), Tensor([1, 62730],"int32"), Tensor([1, 62730],"int32"), )
paddle.where(Tensor([2, 47, 2100],"bool"), Tensor([2, 47, 2100],"float32"), Tensor([2, 47, 2100],"float32"), )
paddle.where(Tensor([8, 3, 6069],"bool"), Tensor([8, 3, 6069],"float32"), Tensor([8, 3, 6069],"float32"), )
paddle.where(Tensor([2, 37, 1],"bool"), Tensor([2, 37, 5376],"float32"), Tensor([2, 37, 5376],"float32"), )
paddle.where(Tensor([2, 11, 1],"bool"), Tensor([2, 11, 7581],"float32"), Tensor([2, 11, 7581],"float32"), )
paddle.where(Tensor([2, 60390],"bool"), Tensor([2, 60390],"float32"), Tensor([2, 60390],"float32"), )
paddle.where(Tensor([1, 85320],"bool"), Tensor([1, 85320],"int32"), Tensor([1, 85320],"int32"), )
paddle.where(Tensor([3, 68040],"bool"), Tensor([3, 68040],"float32"), Tensor([3, 68040],"float32"), )
paddle.where(Tensor([1, 10, 1],"bool"), Tensor([1, 10, 21504],"float32"), Tensor([1, 10, 21504],"float32"), )
paddle.where(Tensor([4, 5, 4789],"bool"), Tensor([4, 5, 4789],"float32"), Tensor([4, 5, 4789],"float32"), )
paddle.where(Tensor([2, 20, 1],"bool"), Tensor([2, 20, 5376],"float32"), Tensor([2, 20, 5376],"float32"), )
paddle.where(Tensor([2, 54, 1],"bool"), Tensor([2, 54, 2541],"float32"), Tensor([2, 54, 2541],"float32"), )
paddle.where(Tensor([1, 57000],"bool"), Tensor([1, 57000],"float32"), Tensor([1, 57000],"float32"), )
paddle.where(Tensor([1, 237360],"bool"), Tensor([1, 237360],"int32"), Tensor([1, 237360],"int32"), )
paddle.where(Tensor([1, 78840],"bool"), Tensor([1, 78840],"int32"), Tensor([1, 78840],"int32"), )
paddle.where(Tensor([2, 33, 4116],"bool"), Tensor([2, 33, 4116],"float32"), Tensor([2, 33, 4116],"float32"), )
paddle.where(Tensor([2, 18, 1],"bool"), Tensor([2, 18, 4725],"float32"), Tensor([2, 18, 4725],"float32"), )
paddle.where(Tensor([1, 46920],"bool"), Tensor([1, 46920],"int32"), Tensor([1, 46920],"int32"), )
paddle.where(Tensor([4, 78840],"bool"), Tensor([4, 78840],"float32"), Tensor([4, 78840],"float32"), )
paddle.where(Tensor([2, 9, 4116],"bool"), Tensor([2, 9, 4116],"float32"), Tensor([2, 9, 4116],"float32"), )
paddle.where(Tensor([2, 32, 4725],"bool"), Tensor([2, 32, 4725],"float32"), Tensor([2, 32, 4725],"float32"), )
paddle.where(Tensor([4, 48000],"bool"), Tensor([4, 48000],"float32"), Tensor([4, 48000],"float32"), )
paddle.where(Tensor([2, 14, 3549],"bool"), Tensor([2, 14, 3549],"float32"), Tensor([2, 14, 3549],"float32"), )
paddle.where(Tensor([3, 56430],"bool"), Tensor([3, 56430],"float32"), Tensor([3, 56430],"float32"), )
paddle.where(Tensor([2, 23, 1],"bool"), Tensor([2, 23, 7581],"float32"), Tensor([2, 23, 7581],"float32"), )
paddle.where(Tensor([1, 5, 1],"bool"), Tensor([1, 5, 75600],"float32"), Tensor([1, 5, 75600],"float32"), )
paddle.where(Tensor([1, 66330],"bool"), Tensor([1, 66330],"int32"), Tensor([1, 66330],"int32"), )
paddle.where(Tensor([2, 26, 3024],"bool"), Tensor([2, 26, 3024],"float32"), Tensor([2, 26, 3024],"float32"), )
paddle.where(Tensor([4, 60480],"bool"), Tensor([4, 60480],"float32"), Tensor([4, 60480],"float32"), )
paddle.where(Tensor([2, 19, 3549],"bool"), Tensor([2, 19, 3549],"float32"), Tensor([2, 19, 3549],"float32"), )
paddle.where(Tensor([2, 12, 4116],"bool"), Tensor([2, 12, 4116],"float32"), Tensor([2, 12, 4116],"float32"), )
paddle.where(Tensor([1, 68310],"bool"), Tensor([1, 68310],"int32"), Tensor([1, 68310],"int32"), )
paddle.where(Tensor([8, 7, 3549],"bool"), Tensor([8, 7, 3549],"float32"), Tensor([8, 7, 3549],"float32"), )
paddle.where(Tensor([8, 8500],"bool"), Tensor([8, 8500],"int32"), Tensor([8, 8500],"int32"), )
paddle.where(Tensor([4, 3, 3598],"bool"), Tensor([4, 3, 3598],"float32"), Tensor([4, 3, 3598],"float32"), )
paddle.where(Tensor([2, 14, 6804],"bool"), Tensor([2, 14, 6804],"float32"), Tensor([2, 14, 6804],"float32"), )
paddle.where(Tensor([1, 182391],"bool"), Tensor([1, 182391],"float32"), Tensor([1, 182391],"float32"), )
paddle.zeros_like(Tensor([12, 48240],"float32"), )
paddle.zeros_like(Tensor([3, 312324],"float32"), )
paddle.zeros_like(Tensor([8, 18, 6804],"float32"), )
paddle.zeros_like(Tensor([16, 16, 3549],"float32"), )
paddle.zeros_like(Tensor([1, 375984],"int32"), )
paddle.zeros_like(Tensor([1, 245823],"float32"), )
paddle.zeros_like(Tensor([3, 81000],"float32"), )
paddle.zeros_like(Tensor([1, 198249],"float32"), )
paddle.zeros_like(Tensor([128, 128, 3, 3],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([10, 48000],"float32"), )
paddle.zeros_like(Tensor([3, 54750],"float32"), )
paddle.zeros_like(Tensor([640, 640, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([3, 74550],"float32"), )
paddle.zeros_like(Tensor([4, 61200],"float32"), )
paddle.zeros_like(Tensor([6, 74250],"float32"), )
paddle.zeros_like(Tensor([3, 75075],"float32"), )
paddle.zeros_like(Tensor([128, 128, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([10, 78750],"float32"), )
paddle.zeros_like(Tensor([4, 208197],"float32"), )
paddle.zeros_like(Tensor([3, 261681],"float32"), )
paddle.zeros_like(Tensor([13, 60750],"float32"), )
paddle.zeros_like(Tensor([1, 261681],"int32"), )
paddle.zeros_like(Tensor([2, 14, 4789],"float32"), )
paddle.zeros_like(Tensor([8, 4, 9261],"float32"), )
paddle.zeros_like(Tensor([14, 48300],"float32"), )
paddle.zeros_like(Tensor([4, 227124],"float32"), )
paddle.zeros_like(Tensor([1, 202572],"float32"), )
paddle.zeros_like(Tensor([2, 105840],"float32"), )
paddle.zeros_like(Tensor([12, 40320],"float32"), )
paddle.zeros_like(Tensor([2, 10, 9382],"float32"), )
paddle.zeros_like(Tensor([8, 7, 3549],"float32"), )
paddle.zeros_like(Tensor([7, 60480],"float32"), )
paddle.zeros_like(Tensor([1, 429660],"int32"), )
paddle.zeros_like(Tensor([8, 19, 5376],"float32"), )
paddle.zeros_like(Tensor([2, 53460],"float32"), )
paddle.zeros_like(Tensor([8, 71415],"float32"), )
paddle.zeros_like(Tensor([4, 37, 3024],"float32"), )
paddle.zeros_like(Tensor([1, 138120],"int32"), )
paddle.zeros_like(Tensor([192, 896, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([5, 77625],"float32"), )
paddle.zeros_like(Tensor([6, 45750],"float32"), )
paddle.zeros_like(Tensor([8, 14, 2100],"float32"), )
paddle.zeros_like(Tensor([12, 75840],"float32"), )
paddle.zeros_like(Tensor([2, 16, 3598],"float32"), )
paddle.zeros_like(Tensor([8, 16, 6069],"float32"), )
paddle.zeros_like(Tensor([256, 1024, 1, 1],"float32"), )
paddle.zeros_like(Tensor([512, 256, 1, 1],"float16"), )
paddle.zeros_like(Tensor([3, 69345],"float32"), )
paddle.zeros_like(Tensor([8, 16, 5376],"float32"), )
paddle.zeros_like(Tensor([13, 69750],"float32"), )
paddle.zeros_like(Tensor([1, 356541],"int32"), )
paddle.zeros_like(Tensor([1, 190296],"int32"), )
paddle.zeros_like(Tensor([8, 50250],"float32"), )
paddle.zeros_like(Tensor([1, 196944],"float32"), )
paddle.zeros_like(Tensor([256, 768, 1, 1],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([1, 301302],"int32"), )
paddle.zeros_like(Tensor([1, 166533],"float32"), )
paddle.zeros_like(Tensor([8, 20, 4725],"float32"), )
paddle.zeros_like(Tensor([8, 17, 3549],"float32"), )
paddle.zeros_like(Tensor([6, 46305],"float32"), )
paddle.zeros_like(Tensor([2, 68625],"float32"), )
paddle.zeros_like(Tensor([16, 46305],"float32"), )
paddle.zeros_like(Tensor([7, 55755],"float32"), )
paddle.zeros_like(Tensor([3, 329205],"float32"), )
paddle.zeros_like(Tensor([13, 46230],"float32"), )
paddle.zeros_like(Tensor([12, 78750],"float32"), )
paddle.zeros_like(Tensor([384, 256, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([8, 10, 6069],"float32"), )
paddle.zeros_like(Tensor([2, 52920],"float32"), )
paddle.zeros_like(Tensor([8, 23, 2541],"float32"), )
paddle.zeros_like(Tensor([17, 51750],"float32"), )
paddle.zeros_like(Tensor([2, 14, 7681],"float32"), )
paddle.zeros_like(Tensor([1, 227919],"float32"), )
paddle.zeros_like(Tensor([2, 262194],"float32"), )
paddle.zeros_like(Tensor([1, 204624],"int32"), )
paddle.zeros_like(Tensor([5, 51840],"float32"), )
paddle.zeros_like(Tensor([4, 22, 10164],"float32"), )
paddle.zeros_like(Tensor([5, 78120],"float32"), )
paddle.zeros_like(Tensor([1, 369105],"int32"), )
paddle.zeros_like(Tensor([256, 1344, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([5, 62310],"float32"), )
paddle.zeros_like(Tensor([2, 79380],"float32"), )
paddle.zeros_like(Tensor([128, 128, 3, 3],"float32"), )
paddle.zeros_like(Tensor([6, 39690],"float32"), )
paddle.zeros_like(Tensor([2, 10, 8500],"float32"), )
paddle.zeros_like(Tensor([16, 8, 3549],"float32"), )
paddle.zeros_like(Tensor([8, 8, 5376],"float32"), )
paddle.zeros_like(Tensor([8, 15, 6804],"float32"), )
paddle.zeros_like(Tensor([38402, 4],"float32"), )
paddle.zeros_like(Tensor([12, 74520],"float32"), )
paddle.zeros_like(Tensor([8, 70350],"float32"), )
paddle.zeros_like(Tensor([80, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([8, 11, 4725],"float32"), )
paddle.zeros_like(Tensor([3, 75330],"float32"), )
paddle.zeros_like(Tensor([1, 283905],"float32"), )
paddle.zeros_like(Tensor([12, 63720],"float32"), )
paddle.zeros_like(Tensor([5, 72960],"float32"), )
paddle.zeros_like(Tensor([10, 59250],"float32"), )
paddle.zeros_like(Tensor([8, 21, 3024],"float32"), )
paddle.zeros_like(Tensor([2, 56250],"float32"), )
paddle.zeros_like(Tensor([8, 7, 6804],"float32"), )
paddle.zeros_like(Tensor([2, 193368],"float32"), )
paddle.zeros_like(Tensor([3, 302832],"float32"), )
paddle.zeros_like(Tensor([10, 60480],"float32"), )
paddle.zeros_like(Tensor([1, 262428],"float32"), )
paddle.zeros_like(Tensor([9, 64680],"float32"), )
paddle.zeros_like(Tensor([1, 356541],"float32"), )
paddle.zeros_like(Tensor([8, 26, 4725],"float32"), )
paddle.zeros_like(Tensor([4, 73500],"float32"), )
paddle.zeros_like(Tensor([2, 59250],"float32"), )
paddle.zeros_like(Tensor([2, 11, 10285],"float32"), )
paddle.zeros_like(Tensor([9, 46305],"float32"), )
paddle.zeros_like(Tensor([256, 512, 1, 1],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([3, 71820],"float32"), )
paddle.zeros_like(Tensor([4, 200022],"float32"), )
paddle.zeros_like(Tensor([80, 768, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([3, 66150],"float32"), )
paddle.zeros_like(Tensor([1, 321759],"int32"), )
paddle.zeros_like(Tensor([288, 864, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([8, 13, 7581],"float32"), )
paddle.zeros_like(Tensor([8, 13, 6069],"float32"), )
paddle.zeros_like(Tensor([3, 69300],"float32"), )
paddle.zeros_like(Tensor([3, 85320],"float32"), )
paddle.zeros_like(Tensor([768, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([3, 50250],"float32"), )
paddle.zeros_like(Tensor([8, 7, 12096],"float32"), )
paddle.zeros_like(Tensor([10, 75555],"float32"), )
paddle.zeros_like(Tensor([8, 16, 3024],"float32"), )
paddle.zeros_like(Tensor([4, 220968],"float32"), )
paddle.zeros_like(Tensor([1, 335568],"float32"), )
paddle.zeros_like(Tensor([8, 9, 11109],"float32"), )
paddle.zeros_like(Tensor([1, 14, 9382],"float32"), )
paddle.zeros_like(Tensor([1, 339150],"int32"), )
paddle.zeros_like(Tensor([5, 191301],"float32"), )
paddle.zeros_like(Tensor([128, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 313347],"float32"), )
paddle.zeros_like(Tensor([2, 397467],"float32"), )
paddle.zeros_like(Tensor([10, 59520],"float32"), )
paddle.zeros_like(Tensor([11, 43560],"float32"), )
paddle.zeros_like(Tensor([5, 66330],"float32"), )
paddle.zeros_like(Tensor([3, 285444],"float32"), )
paddle.zeros_like(Tensor([11, 46800],"float32"), )
paddle.zeros_like(Tensor([3, 217413],"float32"), )
paddle.zeros_like(Tensor([4, 10, 2541],"float32"), )
paddle.zeros_like(Tensor([1, 327360],"int32"), )
paddle.zeros_like(Tensor([3, 295647],"float32"), )
paddle.zeros_like(Tensor([1, 261888],"int32"), )
paddle.zeros_like(Tensor([6, 48300],"float32"), )
paddle.zeros_like(Tensor([16, 13, 4725],"float32"), )
paddle.zeros_like(Tensor([8, 3, 9382],"float32"), )
paddle.zeros_like(Tensor([16, 9, 3549],"float32"), )
paddle.zeros_like(Tensor([16, 7, 4725],"float32"), )
paddle.zeros_like(Tensor([11, 75555],"float32"), )
paddle.zeros_like(Tensor([4, 67335],"float32"), )
paddle.zeros_like(Tensor([9, 54000],"float32"), )
paddle.zeros_like(Tensor([3, 283167],"float32"), )
paddle.zeros_like(Tensor([128, 512, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 347820],"float32"), )
paddle.zeros_like(Tensor([3, 270096],"float32"), )
paddle.zeros_like(Tensor([640, 320, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([17, 54000],"float32"), )
paddle.zeros_like(Tensor([2, 234804],"float32"), )
paddle.zeros_like(Tensor([5, 91980],"float32"), )
paddle.zeros_like(Tensor([9, 58800],"float32"), )
paddle.zeros_like(Tensor([8, 88560],"float32"), )
paddle.zeros_like(Tensor([1, 286440],"int32"), )
paddle.zeros_like(Tensor([168, 672, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([8, 19, 2541],"float32"), )
paddle.zeros_like(Tensor([1, 200022],"int32"), )
paddle.zeros_like(Tensor([5, 56730],"float32"), )
paddle.zeros_like(Tensor([8, 35, 3024],"float32"), )
paddle.zeros_like(Tensor([128, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2, 60480],"float32"), )
paddle.zeros_like(Tensor([7, 59520],"float32"), )
paddle.zeros_like(Tensor([384, 1152],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 63720],"float32"), )
paddle.zeros_like(Tensor([11, 69345],"float32"), )
paddle.zeros_like(Tensor([8, 26, 2100],"float32"), )
paddle.zeros_like(Tensor([258, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 359100],"float32"), )
paddle.zeros_like(Tensor([2, 302832],"float32"), )
paddle.zeros_like(Tensor([8, 22, 4116],"float32"), )
paddle.zeros_like(Tensor([1, 278562],"int32"), )
paddle.zeros_like(Tensor([4, 50400],"float32"), )
paddle.zeros_like(Tensor([3, 331452],"float32"), )
paddle.zeros_like(Tensor([2, 18, 5440],"float32"), )
paddle.zeros_like(Tensor([2, 176490],"float32"), )
paddle.zeros_like(Tensor([5, 168795],"float32"), )
paddle.zeros_like(Tensor([1, 337620],"int32"), )
paddle.zeros_like(Tensor([2, 220992],"float32"), )
paddle.zeros_like(Tensor([2, 327360],"float32"), )
paddle.zeros_like(Tensor([8, 2, 11109],"float32"), )
paddle.zeros_like(Tensor([1, 312324],"int32"), )
paddle.zeros_like(Tensor([1, 227919],"int32"), )
paddle.zeros_like(Tensor([3, 331251],"float32"), )
paddle.zeros_like(Tensor([6, 54000],"float32"), )
paddle.zeros_like(Tensor([8, 17, 5376],"float32"), )
paddle.zeros_like(Tensor([256, 512, 1, 1],"float32"), )
paddle.zeros_like(Tensor([1, 249405],"int32"), )
paddle.zeros_like(Tensor([5, 57960],"float32"), )
paddle.zeros_like(Tensor([2, 378540],"float32"), )
paddle.zeros_like(Tensor([11, 60750],"float32"), )
paddle.zeros_like(Tensor([2, 247086],"float32"), )
paddle.zeros_like(Tensor([4, 119, 2100],"float32"), )
paddle.zeros_like(Tensor([3, 71685],"float32"), )
paddle.zeros_like(Tensor([4, 35, 4725],"float32"), )
paddle.zeros_like(Tensor([16, 12, 3549],"float32"), )
paddle.zeros_like(Tensor([13, 56640],"float32"), )
paddle.zeros_like(Tensor([3, 76260],"float32"), )
paddle.zeros_like(Tensor([8, 29, 4116],"float32"), )
paddle.zeros_like(Tensor([8, 10, 4725],"float32"), )
paddle.zeros_like(Tensor([5, 56250],"float32"), )
paddle.zeros_like(Tensor([192, 576, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([16, 56700],"float32"), )
paddle.zeros_like(Tensor([8, 71610],"float32"), )
paddle.zeros_like(Tensor([2, 365211],"float32"), )
paddle.zeros_like(Tensor([8, 14, 3024],"float32"), )
paddle.zeros_like(Tensor([1, 369105],"float32"), )
paddle.zeros_like(Tensor([8, 13, 4116],"float32"), )
paddle.zeros_like(Tensor([8, 13, 9261],"float32"), )
paddle.zeros_like(Tensor([240, 480, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([11, 62730],"float32"), )
paddle.zeros_like(Tensor([2, 11, 5440],"float32"), )
paddle.zeros_like(Tensor([8, 12, 2541],"float32"), )
paddle.zeros_like(Tensor([3, 79680],"float32"), )
paddle.zeros_like(Tensor([384, 1536, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([8, 30, 2541],"float32"), )
paddle.zeros_like(Tensor([8, 23, 3024],"float32"), )
paddle.zeros_like(Tensor([4, 28, 3549],"float32"), )
paddle.zeros_like(Tensor([2, 219453],"float32"), )
paddle.zeros_like(Tensor([9, 57960],"float32"), )
paddle.zeros_like(Tensor([17, 56730],"float32"), )
paddle.zeros_like(Tensor([8, 9, 9261],"float32"), )
paddle.zeros_like(Tensor([8, 13, 2541],"float32"), )
paddle.zeros_like(Tensor([16, 11, 4725],"float32"), )
paddle.zeros_like(Tensor([1, 208197],"int32"), )
paddle.zeros_like(Tensor([1, 212784],"float32"), )
paddle.zeros_like(Tensor([16, 16, 3024],"float32"), )
paddle.zeros_like(Tensor([3, 90720],"float32"), )
paddle.zeros_like(Tensor([2, 243474],"float32"), )
paddle.zeros_like(Tensor([2, 63360],"float32"), )
paddle.zeros_like(Tensor([2, 236616],"float32"), )
paddle.zeros_like(Tensor([2, 241731],"float32"), )
paddle.zeros_like(Tensor([9, 69345],"float32"), )
paddle.zeros_like(Tensor([2, 57000],"float32"), )
paddle.zeros_like(Tensor([8, 48, 2100],"float32"), )
paddle.zeros_like(Tensor([1, 291555],"int32"), )
paddle.zeros_like(Tensor([16, 9, 4116],"float32"), )
paddle.zeros_like(Tensor([7, 75375],"float32"), )
paddle.zeros_like(Tensor([15, 52560],"float32"), )
paddle.zeros_like(Tensor([4, 78120],"float32"), )
paddle.zeros_like(Tensor([3, 313347],"float32"), )
paddle.zeros_like(Tensor([2, 15, 6150],"float32"), )
paddle.zeros_like(Tensor([192, 128, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2, 70875],"float32"), )
paddle.zeros_like(Tensor([2, 233244],"float32"), )
paddle.zeros_like(Tensor([3, 322245],"float32"), )
paddle.zeros_like(Tensor([2, 28, 5440],"float32"), )
paddle.zeros_like(Tensor([2, 60300],"float32"), )
paddle.zeros_like(Tensor([1, 220992],"int32"), )
paddle.zeros_like(Tensor([1, 16, 6885],"float32"), )
paddle.zeros_like(Tensor([4, 64320],"float32"), )
paddle.zeros_like(Tensor([1, 306900],"int32"), )
paddle.zeros_like(Tensor([5, 84375],"float32"), )
paddle.zeros_like(Tensor([2, 236334],"float32"), )
paddle.zeros_like(Tensor([3, 62730],"float32"), )
paddle.zeros_like(Tensor([16, 9, 2541],"float32"), )
paddle.zeros_like(Tensor([2, 70290],"float32"), )
paddle.zeros_like(Tensor([13, 76380],"float32"), )
paddle.zeros_like(Tensor([4, 26, 2541],"float32"), )
paddle.zeros_like(Tensor([1, 310992],"int32"), )
paddle.zeros_like(Tensor([1, 262194],"int32"), )
paddle.zeros_like(Tensor([8, 62400],"float32"), )
paddle.zeros_like(Tensor([2, 58800],"float32"), )
paddle.zeros_like(Tensor([6, 57750],"float32"), )
paddle.zeros_like(Tensor([384, 288, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([12, 57960],"float32"), )
paddle.zeros_like(Tensor([6, 67200],"float32"), )
paddle.zeros_like(Tensor([6, 46080],"float32"), )
paddle.zeros_like(Tensor([4, 56250],"float32"), )
paddle.zeros_like(Tensor([1, 300762],"int32"), )
paddle.zeros_like(Tensor([16, 18, 3024],"float32"), )
paddle.zeros_like(Tensor([2, 90720],"float32"), )
paddle.zeros_like(Tensor([16, 17, 2100],"float32"), )
paddle.zeros_like(Tensor([8, 27, 3024],"float32"), )
paddle.zeros_like(Tensor([14, 58800],"float32"), )
paddle.zeros_like(Tensor([2, 261888],"float32"), )
paddle.zeros_like(Tensor([7, 43560],"float32"), )
paddle.zeros_like(Tensor([4, 63135],"float32"), )
paddle.zeros_like(Tensor([2, 60450],"float32"), )
paddle.zeros_like(Tensor([8, 15, 4116],"float32"), )
paddle.zeros_like(Tensor([13, 72000],"float32"), )
paddle.zeros_like(Tensor([8, 11, 6804],"float32"), )
paddle.zeros_like(Tensor([1, 268569],"int32"), )
paddle.zeros_like(Tensor([8, 13, 2100],"float32"), )
paddle.zeros_like(Tensor([80, 192, 3, 3],"float16"), dtype="float32", )
paddle.zeros_like(Tensor([7, 64170],"float32"), )
paddle.zeros_like(Tensor([2, 68160],"float32"), )
paddle.zeros_like(Tensor([1, 239382],"int32"), )
paddle.zeros_like(Tensor([7, 77625],"float32"), )
paddle.zeros_like(Tensor([12, 59295],"float32"), )
paddle.zeros_like(Tensor([8, 6, 6804],"float32"), )
paddle.zeros_like(Tensor([1, 345618],"int32"), )
paddle.zeros_like(Tensor([10, 74100],"float32"), )
paddle.zeros_like(Tensor([2, 79680],"float32"), )
paddle.zeros_like(Tensor([3, 35280],"float32"), )
paddle.zeros_like(Tensor([2, 95760],"float32"), )
paddle.zeros_like(Tensor([11, 63360],"float32"), )
paddle.zeros_like(Tensor([8, 30, 3549],"float32"), )
paddle.zeros_like(Tensor([16, 8, 7581],"float32"), )
paddle.zeros_like(Tensor([16, 57000],"float32"), )
paddle.zeros_like(Tensor([1, 335568],"int32"), )
paddle.zeros_like(Tensor([1, 267030],"float32"), )
paddle.zeros_like(Tensor([1, 214848],"int32"), )
paddle.zeros_like(Tensor([1, 153450],"float32"), )
paddle.zeros_like(Tensor([3, 52560],"float32"), )
paddle.zeros_like(Tensor([7, 74520],"float32"), )
paddle.zeros_like(Tensor([9, 49680],"float32"), )
paddle.zeros_like(Tensor([16, 13, 4116],"float32"), )
paddle.zeros_like(Tensor([2, 330429],"float32"), )
paddle.zeros_like(Tensor([4, 68040],"float32"), )
paddle.zeros_like(Tensor([8, 66960],"float32"), )
paddle.zeros_like(Tensor([16, 14, 4116],"float32"), )
paddle.zeros_like(Tensor([8, 2, 8400],"float32"), )
paddle.zeros_like(Tensor([8, 84420],"float32"), )
paddle.zeros_like(Tensor([2, 9, 7681],"float32"), )
paddle.zeros_like(Tensor([2, 62310],"float32"), )
paddle.zeros_like(Tensor([12, 63000],"float32"), )
paddle.zeros_like(Tensor([1, 354501],"int32"), )
paddle.zeros_like(Tensor([3, 62310],"float32"), )
paddle.zeros_like(Tensor([5, 182391],"float32"), )
paddle.zeros_like(Tensor([7, 52560],"float32"), )
paddle.zeros_like(Tensor([2, 264978],"float32"), )
paddle.zeros_like(Tensor([8, 6, 12096],"float32"), )
paddle.zeros_like(Tensor([9, 75030],"float32"), )
paddle.zeros_like(Tensor([4, 214107],"float32"), )
paddle.zeros_like(Tensor([160, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 212784],"float32"), )
paddle.zeros_like(Tensor([4, 51, 4725],"float32"), )
paddle.zeros_like(Tensor([4, 41, 2541],"float32"), )
paddle.zeros_like(Tensor([3, 325113],"float32"), )
paddle.zeros_like(Tensor([512, 512, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 78840],"float32"), )
paddle.zeros_like(Tensor([192, 576],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 256, 3, 3],"float16"), )
paddle.zeros_like(Tensor([6, 91980],"float32"), )
paddle.zeros_like(Tensor([9, 61305],"float32"), )
paddle.zeros_like(Tensor([2, 9, 6150],"float32"), )
paddle.zeros_like(Tensor([3, 68340],"float32"), )
paddle.zeros_like(Tensor([144, 144, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 768],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 359613],"int32"), )
paddle.zeros_like(Tensor([1, 194157],"int32"), )
paddle.zeros_like(Tensor([1, 237360],"float32"), )
paddle.zeros_like(Tensor([8, 14, 4116],"float32"), )
paddle.zeros_like(Tensor([8, 18, 3024],"float32"), )
paddle.zeros_like(Tensor([2, 14, 6885],"float32"), )
paddle.zeros_like(Tensor([3, 241731],"float32"), )
paddle.zeros_like(Tensor([4, 77490],"float32"), )
paddle.zeros_like(Tensor([11, 68160],"float32"), )
paddle.zeros_like(Tensor([7, 44520],"float32"), )
paddle.zeros_like(Tensor([1, 223554],"int32"), )
paddle.zeros_like(Tensor([2, 249405],"float32"), )
paddle.zeros_like(Tensor([6, 72360],"float32"), )
paddle.zeros_like(Tensor([16, 10, 4725],"float32"), )
paddle.zeros_like(Tensor([4, 244800],"float32"), )
paddle.zeros_like(Tensor([6, 54600],"float32"), )
paddle.zeros_like(Tensor([3, 84420],"float32"), )
paddle.zeros_like(Tensor([3, 330429],"float32"), )
paddle.zeros_like(Tensor([16, 5, 3060],"float32"), )
paddle.zeros_like(Tensor([160, 672, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([9, 56640],"float32"), )
paddle.zeros_like(Tensor([8, 6, 4725],"float32"), )
paddle.zeros_like(Tensor([2, 286977],"float32"), )
paddle.zeros_like(Tensor([2, 19, 6885],"float32"), )
paddle.zeros_like(Tensor([8, 9, 12096],"float32"), )
paddle.zeros_like(Tensor([6, 67335],"float32"), )
paddle.zeros_like(Tensor([2, 320739],"float32"), )
paddle.zeros_like(Tensor([5, 68040],"float32"), )
paddle.zeros_like(Tensor([1, 278256],"int32"), )
paddle.zeros_like(Tensor([11, 61500],"float32"), )
paddle.zeros_like(Tensor([2, 18, 9382],"float32"), )
paddle.zeros_like(Tensor([8, 3, 10164],"float32"), )
paddle.zeros_like(Tensor([4, 15, 12096],"float32"), )
paddle.zeros_like(Tensor([2, 80640],"float32"), )
paddle.zeros_like(Tensor([2, 236313],"float32"), )
paddle.zeros_like(Tensor([2, 14, 5440],"float32"), )
paddle.zeros_like(Tensor([2, 303858],"float32"), )
paddle.zeros_like(Tensor([512, 1280, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([8, 8, 11109],"float32"), )
paddle.zeros_like(Tensor([3, 49410],"float32"), )
paddle.zeros_like(Tensor([8, 12, 6069],"float32"), )
paddle.zeros_like(Tensor([8, 26, 3024],"float32"), )
paddle.zeros_like(Tensor([2, 214107],"float32"), )
paddle.zeros_like(Tensor([1, 354501],"float32"), )
paddle.zeros_like(Tensor([128, 1280, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2, 290052],"float32"), )
paddle.zeros_like(Tensor([8, 14, 8400],"float32"), )
paddle.zeros_like(Tensor([8, 21, 2541],"float32"), )
paddle.zeros_like(Tensor([16, 51840],"float32"), )
paddle.nn.functional.gather_tree(Tensor([21, 8, 4],"int64"), Tensor([21, 8, 4],"int64"), )
paddle.Tensor.take_along_axis(Tensor([128, 1000],"float32"), indices=Tensor([128, 1],"int32"), axis=-1, )
paddle.Tensor.take_along_axis(Tensor([80, 1000],"float32"), indices=Tensor([80, 1],"int32"), axis=-1, )
paddle.Tensor.rank(Tensor([256, 768],"float32"), )
paddle.Tensor.rank(Tensor([2048, 256],"float32"), )
paddle.Tensor.rank(Tensor([256, 2048, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([256, 1024, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([512, 512],"float32"), )
paddle.Tensor.rank(Tensor([256, 2048],"float32"), )
paddle.Tensor.rank(Tensor([256, 512, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([256, 1536, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([900, 256],"float32"), )
paddle.Tensor.rank(Tensor([256, 768, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([512, 256],"float32"), )
paddle.Tensor.rank(Tensor([256, 384, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([256, 320],"float32"), )
paddle.Tensor.rank(Tensor([256, 256],"float32"), )
paddle.Tensor.rank(Tensor([256, 192, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([256, 128],"float32"), )
paddle.Tensor.rank(Tensor([256, 160],"float32"), )
paddle.Tensor.rank(Tensor([256, 256, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([2048],"float32"), )
paddle.Tensor.rank(Tensor([4, 256],"float32"), )
paddle.Tensor.rank(Tensor([5, 256],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([3, 1, 224, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([7, 11, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 32, 32],"float32"), )
paddle.reshape(Tensor([52416, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 69, 76, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 92, 160, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([81180, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 54, 61, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 52, 72, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 148, 140, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([8, 168, 132, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 132, 128, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(x=Tensor([4, 80640, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 136, 88, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 62, 84, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(x=Tensor([4, 87600, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 156, 124, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(x=Tensor([4, 75555, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([8, 76, 68, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(x=Tensor([4, 242991, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([8, 72, 84, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 92, 124, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([8, 31, 41, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([294000],"float32"), list[375,28,28,], )
paddle.reshape(Tensor([4, 128, 136, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 48, 70, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4958, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([120320],"float16"), shape=list[-1,128,], )
paddle.reshape(x=Tensor([4, 72360, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([308112],"float32"), list[393,28,28,], )
paddle.reshape(Tensor([8, 37, 35, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([127792],"float16"), list[163,28,28,], )
paddle.reshape(Tensor([8, 144, 140, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([134848],"float32"), list[172,28,28,], )
paddle.reshape(Tensor([8, 168, 168, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([56730, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 2, 67200],"float32"), shape=tuple(-1,200,336,), )
paddle.reshape(Tensor([141904],"float16"), list[181,28,28,], )
paddle.reshape(Tensor([78400, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([241920, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 104, 128, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([111328],"float16"), list[142,28,28,], )
paddle.reshape(Tensor([21216, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([71415, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([4, 66240, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([8, 37, 39, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 84, 84, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 124, 160, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 75, 69, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([63232, 4],"float32"), list[-1,1,4,], )
paddle.reshape(Tensor([86640, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([4, 40320, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 60, 44, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 84, 128, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 4, 62400],"float16"), shape=tuple(-1,200,312,), )
paddle.reshape(Tensor([206976],"float16"), list[264,28,28,], )
paddle.reshape(Tensor([6, 304, 200],"float32"), shape=tuple(6,-1,), )
paddle.reshape(x=Tensor([4, 220968, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([4, 57960, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([247104, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([47610, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([8, 112, 156, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([12, 4, 38, 68, 2],"float32"), list[-1,2,], )
paddle.reshape(Tensor([4, 44, 66, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([67456, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([57750, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([2277, 1, 64],"bfloat16"), list[2277,32,-1,], )
paddle.reshape(Tensor([8, 72, 74, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([41184, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 56, 79, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([44064, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 62, 67, 60],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([230400, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([4, 64170, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([8, 38, 34, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([39680, 4],"float32"), list[-1,1,4,], )
paddle.reshape(Tensor([3658, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([133120],"float32"), shape=list[-1,128,], )
paddle.reshape(Tensor([4, 2, 200, 336],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([120832],"float32"), shape=list[-1,128,], )
paddle.reshape(Tensor([70290, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([8, 35, 39, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 148, 168, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4774, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([4, 60, 79, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([248528],"float32"), list[317,28,28,], )
paddle.reshape(Tensor([4, 67, 76, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 144, 168, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 264, 304, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 48, 72, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 92, 148, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(x=Tensor([2, 50220, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([11408, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([8, 52, 84, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([13440, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([62496, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([4, 68985, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([32, 15, 8, 8, 32],"complex64"), list[32,15,8,256,], )
paddle.reshape(Tensor([4, 52, 82, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 78, 60, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([2, 256, 248, 3],"float32"), shape=tuple(2,-1,1,), )
paddle.reshape(x=Tensor([4, 54000, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([3350, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(x=Tensor([4, 62310, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([8, 160, 168, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 55, 76, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 50, 68, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([2596, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([4, 248, 296, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 288, 224, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 132, 164, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 76, 50, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([234432, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 3, 272, 272],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([43008, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([4, 128, 124, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 73, 67, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 58, 64, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([81900, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 71, 66, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 168, 168, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(x=Tensor([4, 46920, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([5084, 1, 64],"bfloat16"), list[5084,32,-1,], )
paddle.reshape(x=Tensor([4, 55845, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([48960, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([8, 108, 152, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(x=Tensor([4, 51840, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([336, 304],"float32"), list[-1,], )
paddle.reshape(Tensor([28800, 1, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([8, 54, 76, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([80400, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([2, 169, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(Tensor([188160],"float16"), list[240,28,28,], )
paddle.reshape(Tensor([164736, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([8, 144, 148, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 68, 70, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 156, 148, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 144, 140, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([256, 1, 1000],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([215424, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 76, 68, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([5092, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([4, 96, 164, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 66, 76, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 136, 96, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(x=Tensor([4, 43470, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 128, 112, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 46, 67, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 168, 256, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 168, 124, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([183456],"float32"), list[234,28,28,], )
paddle.reshape(Tensor([13056, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([4, 56, 62, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(x=Tensor([4, 56700, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 60, 67, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 128, 112, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([62208, 4],"float32"), list[-1,1,4,], )
paddle.reshape(Tensor([4, 52, 76, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([5313, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([4, 304, 240, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([200448, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 60, 60, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 50, 76, 60],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 50, 75, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 48, 73, 60],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([8, 36, 38, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 116, 136, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([8, 62, 68, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(x=Tensor([4, 85320, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 120, 148, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(x=Tensor([4, 57750, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([24320, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([79360, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([45056, 4],"float32"), list[-1,1,4,], )
paddle.reshape(Tensor([3450, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([4, 84, 62, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(x=Tensor([1, 44220, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 65, 77, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 56, 75, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([321440],"float16"), list[410,28,28,], )
paddle.reshape(Tensor([1, 176, 264, 3],"float32"), shape=tuple(1,-1,1,), )
paddle.reshape(Tensor([8, 124, 152, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 76, 62, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([2, 128, 120, 12],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([8, 66, 84, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([147456, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([137200],"float16"), list[175,28,28,], )
paddle.reshape(x=Tensor([4, 49410, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 232, 256, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(x=Tensor([4, 237360, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([12, 24, 38, 68],"float16"), list[Tensor([],"int64"),4,6,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([4, 184, 248, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 48, 64, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(x=Tensor([4, 256, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(Tensor([4, 69, 64, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([11264, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([20832, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([8, 54, 72, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([119168],"float32"), shape=list[-1,128,], )
paddle.reshape(Tensor([4, 272, 192, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([7020, 32],"bfloat16"), list[-1,], )
paddle.reshape(Tensor([8, 136, 168, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([163856],"float16"), list[209,28,28,], )
paddle.reshape(Tensor([4, 68, 60, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 240, 224, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 70, 76, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 152, 152, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(x=Tensor([2, 576, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([4, 84420, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 60, 64, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(x=Tensor([4, 236313, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 100, 164, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([8, 41, 42, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 70, 84, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 216, 280, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 84, 70, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 74, 66, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 1, 128, 128],"float32"), list[8,1,128,128,], )
paddle.reshape(Tensor([43470, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([4, 56250, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 76, 56, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([137984],"float32"), list[176,28,28,], )
paddle.reshape(Tensor([68040, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 72, 60, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 112, 140, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(x=Tensor([4, 57960, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4290, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([1024, 8, 48],"float32"), list[1024,-1,], )
paddle.reshape(Tensor([4, 59, 51, 60],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 2, 82688],"float16"), shape=tuple(-1,304,272,), )
paddle.reshape(x=Tensor([4, 234804, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([4, 59520, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([131712],"float16"), list[168,28,28,], )
paddle.reshape(Tensor([4, 57, 67, 60],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 2, 304, 328],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([4650, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(x=Tensor([4, 66330, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([8, 152, 164, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 100, 140, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 140, 148, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 160, 136, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 136, 128, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 136, 124, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([18720, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(x=Tensor([4, 63720, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 56, 66, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([348096],"float16"), list[444,28,28,], )
paddle.reshape(Tensor([8, 76, 84, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 136, 88, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([38016, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([8, 136, 148, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([244032, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([8, 38, 34, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(x=Tensor([1, 45540, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([8, 120, 156, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([122496],"float32"), shape=list[-1,128,], )
paddle.reshape(Tensor([161504],"float16"), list[206,28,28,], )
paddle.reshape(Tensor([215600],"float16"), list[275,28,28,], )
paddle.reshape(Tensor([107776],"float16"), shape=list[-1,128,], )
paddle.reshape(Tensor([4, 62, 56, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([7052, 32, 1],"float32"), list[-1,], )
paddle.reshape(Tensor([239120],"float32"), list[305,28,28,], )
paddle.reshape(Tensor([4, 108, 156, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 2, 102144],"float16"), shape=tuple(-1,336,304,), )
paddle.reshape(Tensor([8, 82, 72, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 184, 320, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([48384, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([341824],"float16"), list[436,28,28,], )
paddle.reshape(x=Tensor([4, 46800, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([4, 245823, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([77824, 4],"float32"), list[-1,1,4,], )
paddle.reshape(Tensor([8, 76, 74, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([127360],"float32"), shape=list[-1,128,], )
paddle.reshape(Tensor([6880, 32],"bfloat16"), list[-1,], )
paddle.reshape(Tensor([4, 128, 148, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 2, 84864],"float32"), shape=tuple(-1,272,312,), )
paddle.reshape(x=Tensor([4, 53460, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([337904],"float16"), list[431,28,28,], )
paddle.reshape(Tensor([12144, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([77490, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 96, 128, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 144, 144, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 60, 82, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 148, 152, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8192, 32],"int32"), list[-1,], )
paddle.reshape(Tensor([4, 64, 70, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 124, 156, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(x=Tensor([4, 400, 8, 64],"float32"), shape=list[0,0,512,], )
paddle.reshape(Tensor([4, 50, 70, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([8, 72, 80, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 67, 61, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 70, 72, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([136896, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([7052, 1, 64],"bfloat16"), list[7052,32,-1,], )
paddle.reshape(Tensor([4, 120, 128, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([12, 272, 304],"float32"), shape=tuple(12,-1,), )
paddle.reshape(Tensor([4, 62, 68, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4761, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(x=Tensor([4, 73365, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 128, 124, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 136, 140, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 136, 136, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 192, 256, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 59, 69, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 140, 128, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(x=Tensor([4, 70350, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([204672, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 108, 124, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([8, 78, 70, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4843, 1, 64],"bfloat16"), list[4843,32,-1,], )
paddle.reshape(Tensor([4, 100, 136, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 50, 81, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 128, 140, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 35, 42, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([220160],"bfloat16"), list[6880,32,], )
paddle.reshape(Tensor([8, 76, 72, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 88, 136, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 120, 124, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 64, 78, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(x=Tensor([4, 75240, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 132, 152, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 65, 77, 15],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([187200, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 76, 72, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([140336],"float32"), list[179,28,28,], )
paddle.reshape(Tensor([8, 144, 144, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(x=Tensor([4, 220992, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([4, 66360, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([13616, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(x=Tensor([4, 54000, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([301840],"float32"), list[385,28,28,], )
paddle.reshape(Tensor([148960],"float16"), list[190,28,28,], )
paddle.reshape(Tensor([4, 116, 132, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 124, 96, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 56, 72, 60],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 140, 96, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([36000, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 140, 144, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(x=Tensor([4, 45750, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([8, 72, 70, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 70, 72, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 82, 70, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(x=Tensor([4, 54270, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([8640, 3, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([275968],"float32"), list[352,28,28,], )
paddle.reshape(Tensor([8, 84, 72, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 63, 59, 60],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([8, 42, 32, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4575, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([4, 272, 240, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 144, 124, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([217168],"float32"), list[277,28,28,], )
paddle.reshape(Tensor([39168, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 2, 99712],"float16"), shape=tuple(-1,304,328,), )
paddle.reshape(Tensor([4, 42, 63, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 50, 73, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 48, 68, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([8, 144, 140, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(x=Tensor([4, 58500, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([2, 59, 44, 60],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([4, 132, 108, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 48, 72, 60],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(x=Tensor([4, 94620, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([1, 200, 312, 3],"float32"), shape=tuple(1,-1,1,), )
paddle.reshape(Tensor([141904],"float32"), list[181,28,28,], )
paddle.reshape(Tensor([8, 84, 66, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 240, 304, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(x=Tensor([1, 196944, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([1, 9, 60800],"float32"), shape=tuple(-1,200,304,), )
paddle.reshape(Tensor([310464],"float32"), list[396,28,28,], )
paddle.reshape(Tensor([4, 160, 144, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 34, 38, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([219840],"bfloat16"), list[6870,32,], )
paddle.reshape(Tensor([2, 124, 92, 12],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([8, 32, 42, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 34, 38, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 232, 320, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4956, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([4, 72, 56, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 92, 136, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 72, 74, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 30, 38, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 160, 128, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 66, 48, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(x=Tensor([4, 55755, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([124656],"float32"), list[159,28,28,], )
paddle.reshape(Tensor([338688],"float32"), list[432,28,28,], )
paddle.reshape(Tensor([4, 160, 128, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([53568, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([6098, 1, 64],"bfloat16"), list[6098,32,-1,], )
paddle.reshape(Tensor([4, 64, 56, 15],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([8, 128, 124, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 240, 176, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([44928, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([2, 300, 8, 32],"float16"), shape=list[0,0,256,], )
paddle.reshape(Tensor([8, 152, 140, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([57344, 4],"float32"), list[-1,1,4,], )
paddle.reshape(Tensor([2, 62, 46, 60],"float32"), shape=tuple(2,-1,4,), )
paddle.reshape(Tensor([8, 52, 84, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(x=Tensor([4, 49680, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([5628, 15, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([4, 176, 272, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([6870, 32, 1],"float32"), list[-1,], )
paddle.nn.functional.avg_pool1d(Tensor([16, 1, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([16, 2, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.avg_pool1d(Tensor([13, 1, 120],"float32"), 25, 1, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([91, 32, 7],"float32"), 7, )
paddle.Tensor.__getitem__(Tensor([5741, 32],"int64"), tuple(Ellipsis,5,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5831,None),19,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5572,None),2,), )
paddle.Tensor.__getitem__(Tensor([5849, 32],"int64"), tuple(Ellipsis,13,), )
paddle.Tensor.__getitem__(Tensor([5555, 32],"float32"), tuple(slice(None,None,None),24,), )
paddle.Tensor.__getitem__(Tensor([5837, 32],"float32"), tuple(slice(None,None,None),17,), )
paddle.Tensor.__getitem__(Tensor([6078, 32],"int64"), tuple(Ellipsis,3,), )
paddle.Tensor.__getitem__(Tensor([5807, 32],"int64"), tuple(Ellipsis,9,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5859,None),31,), )
paddle.Tensor.__getitem__(Tensor([5788, 32],"float32"), tuple(slice(None,None,None),18,), )
paddle.Tensor.__getitem__(Tensor([5572, 32],"int64"), tuple(Ellipsis,13,), )
paddle.Tensor.__getitem__(Tensor([5744, 32],"int64"), tuple(Ellipsis,11,), )
paddle.Tensor.__getitem__(Tensor([5619, 32],"int64"), tuple(Ellipsis,3,), )
paddle.Tensor.__getitem__(Tensor([5670, 32],"float32"), tuple(slice(None,None,None),10,), )
paddle.Tensor.__getitem__(Tensor([5833, 32],"float32"), tuple(slice(None,None,None),1,), )
paddle.Tensor.__getitem__(Tensor([1, 9856, 56],"float32"), tuple(slice(None,None,None),slice(None,9856,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5744, 32],"int64"), tuple(Ellipsis,13,), )
paddle.Tensor.__getitem__(Tensor([1, 8192, 32],"float32"), tuple(slice(None,None,None),slice(None,None,None),slice(None,26,None),), )
paddle.Tensor.__getitem__(Tensor([5849, 32],"float32"), tuple(slice(None,None,None),20,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5835,None),16,), )
paddle.Tensor.__getitem__(Tensor([5910, 32],"int64"), tuple(Ellipsis,11,), )
paddle.Tensor.__getitem__(Tensor([5583, 32],"float32"), tuple(slice(None,None,None),22,), )
paddle.Tensor.__getitem__(Tensor([5644, 32],"int64"), tuple(Ellipsis,9,), )
paddle.Tensor.__getitem__(Tensor([5801, 32],"int64"), tuple(Ellipsis,6,), )
paddle.Tensor.__getitem__(Tensor([5833, 32],"float32"), tuple(slice(None,None,None),2,), )
paddle.Tensor.__getitem__(Tensor([5859, 32],"float32"), tuple(slice(None,None,None),4,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5831,None),1,), )
paddle.Tensor.__getitem__(Tensor([5818, 32],"int64"), tuple(Ellipsis,21,), )
paddle.Tensor.__getitem__(Tensor([1, 8192, 32],"float32"), tuple(slice(None,None,None),slice(None,None,None),slice(None,22,None),), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5657,None),30,), )
paddle.Tensor.__getitem__(Tensor([5814, 32],"float32"), tuple(slice(None,None,None),4,), )
paddle.Tensor.__getitem__(Tensor([5840, 32],"float32"), tuple(slice(None,None,None),21,), )
paddle.Tensor.__getitem__(Tensor([6017, 32],"int64"), tuple(Ellipsis,8,), )
paddle.Tensor.__getitem__(Tensor([5831, 32],"int64"), tuple(Ellipsis,14,), )
paddle.Tensor.__getitem__(Tensor([5840, 32],"int64"), tuple(Ellipsis,22,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5583,None),15,), )
paddle.Tensor.__getitem__(Tensor([5657, 32],"float32"), tuple(slice(None,None,None),18,), )
paddle.Tensor.__getitem__(Tensor([5787, 32],"int64"), tuple(Ellipsis,7,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5544,None),13,), )
paddle.Tensor.__getitem__(Tensor([5583, 32],"int64"), tuple(Ellipsis,26,), )
paddle.Tensor.__getitem__(Tensor([5814, 32],"float32"), tuple(slice(None,None,None),5,), )
paddle.Tensor.__getitem__(Tensor([5969, 32],"int64"), tuple(Ellipsis,7,), )
paddle.Tensor.__getitem__(Tensor([5761, 32],"float32"), tuple(slice(None,None,None),27,), )
paddle.Tensor.__getitem__(Tensor([1, 12032, 64],"float32"), tuple(slice(None,None,None),slice(None,12032,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5670, 32],"int64"), tuple(Ellipsis,4,), )
paddle.Tensor.__getitem__(Tensor([5927, 32],"int64"), tuple(Ellipsis,13,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5807,None),29,), )
paddle.Tensor.__getitem__(Tensor([5585, 32],"int64"), tuple(Ellipsis,8,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5761,None),20,), )
paddle.Tensor.__getitem__(Tensor([5619, 32],"int64"), tuple(Ellipsis,28,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5825,None),24,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5849,None),6,), )
paddle.Tensor.__getitem__(Tensor([5656, 32],"int64"), tuple(Ellipsis,6,), )
paddle.Tensor.__getitem__(Tensor([5876, 32],"float32"), tuple(slice(None,None,None),17,), )
paddle.Tensor.__getitem__(Tensor([1, 8192, 32],"float32"), Ellipsis, )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5801,None),20,), )
paddle.Tensor.__getitem__(Tensor([5833, 32],"float32"), tuple(slice(None,None,None),17,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5807,None),31,), )
paddle.Tensor.__getitem__(Tensor([5825, 32],"float32"), tuple(slice(None,None,None),15,), )
paddle.Tensor.__getitem__(Tensor([6036, 32],"int64"), tuple(Ellipsis,2,), )
paddle.Tensor.__getitem__(Tensor([5788, 32],"float32"), tuple(slice(None,None,None),3,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5833,None),7,), )
paddle.Tensor.__getitem__(Tensor([5830, 32],"int64"), tuple(Ellipsis,12,), )
paddle.Tensor.__getitem__(Tensor([5807, 32],"int64"), tuple(Ellipsis,25,), )
paddle.Tensor.__getitem__(Tensor([5814, 32],"float32"), tuple(slice(None,None,None),31,), )
paddle.Tensor.__getitem__(Tensor([5825, 32],"float32"), tuple(slice(None,None,None),28,), )
paddle.Tensor.__getitem__(Tensor([5761, 32],"float32"), tuple(slice(None,None,None),6,), )
paddle.Tensor.__getitem__(Tensor([1, 13824, 64],"float32"), tuple(slice(None,None,None),slice(None,13824,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5788, 32],"float32"), tuple(slice(None,None,None),27,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5876,None),27,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5544,None),15,), )
paddle.Tensor.__getitem__(Tensor([6036, 32],"int64"), tuple(Ellipsis,19,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5585,None),2,), )
paddle.Tensor.__getitem__(Tensor([5833, 32],"float32"), tuple(slice(None,None,None),23,), )
paddle.Tensor.__getitem__(Tensor([5761, 32],"int64"), tuple(Ellipsis,5,), )
paddle.Tensor.__getitem__(Tensor([5761, 32],"float32"), tuple(slice(None,None,None),30,), )
paddle.Tensor.__getitem__(Tensor([1, 13440, 64],"float32"), tuple(slice(None,None,None),slice(None,13440,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5831, 32],"int64"), tuple(Ellipsis,6,), )
paddle.Tensor.__getitem__(Tensor([5831, 32],"float32"), tuple(slice(None,None,None),0,), )
paddle.Tensor.__getitem__(Tensor([1, 10496, 64],"float32"), tuple(slice(None,None,None),slice(None,10496,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5761, 32],"int64"), tuple(Ellipsis,4,), )
paddle.Tensor.__getitem__(Tensor([5835, 32],"float32"), tuple(slice(None,None,None),25,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5859,None),20,), )
paddle.Tensor.__getitem__(Tensor([5835, 32],"float32"), tuple(slice(None,None,None),29,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5657,None),4,), )
paddle.Tensor.__getitem__(Tensor([1, 9728, 28],"float32"), tuple(slice(None,None,None),slice(None,9728,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5514, 32],"float32"), tuple(slice(None,None,None),4,), )
paddle.Tensor.__getitem__(Tensor([5780, 32],"int64"), tuple(Ellipsis,11,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,1,None),2,), )
paddle.Tensor.__getitem__(Tensor([5996, 32],"int64"), tuple(Ellipsis,4,), )
paddle.Tensor.__getitem__(Tensor([5801, 32],"int64"), tuple(Ellipsis,14,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5824,None),1,), )
paddle.Tensor.__getitem__(Tensor([6010, 32],"int64"), tuple(Ellipsis,14,), )
paddle.Tensor.__getitem__(Tensor([5656, 32],"int64"), tuple(Ellipsis,10,), )
paddle.Tensor.__getitem__(Tensor([5833, 32],"int64"), tuple(Ellipsis,9,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5824,None),31,), )
paddle.Tensor.__getitem__(Tensor([5544, 32],"int64"), tuple(Ellipsis,5,), )
paddle.Tensor.__getitem__(Tensor([5835, 32],"float32"), tuple(slice(None,None,None),24,), )
paddle.Tensor.__getitem__(Tensor([1, 10368, 56],"float32"), tuple(slice(None,None,None),slice(None,10368,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5969, 32],"int64"), tuple(Ellipsis,26,), )
paddle.Tensor.__getitem__(Tensor([5488, 32],"int64"), tuple(Ellipsis,12,), )
paddle.Tensor.__getitem__(Tensor([5807, 32],"int64"), tuple(Ellipsis,0,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5953,None),30,), )
paddle.Tensor.__getitem__(Tensor([5741, 32],"float32"), tuple(slice(None,None,None),26,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5953,None),19,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5876,None),0,), )
paddle.Tensor.__getitem__(Tensor([5824, 32],"int64"), tuple(Ellipsis,13,), )
paddle.Tensor.__getitem__(Tensor([1, 4992, 64],"float32"), tuple(slice(None,None,None),slice(None,4992,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5835, 32],"float32"), tuple(slice(None,None,None),19,), )
paddle.Tensor.__getitem__(Tensor([5975, 32],"int64"), tuple(Ellipsis,29,), )
paddle.Tensor.__getitem__(Tensor([5818, 32],"float32"), tuple(slice(None,None,None),14,), )
paddle.Tensor.__getitem__(Tensor([5544, 32],"int64"), tuple(Ellipsis,15,), )
paddle.Tensor.__getitem__(Tensor([5876, 32],"int64"), tuple(Ellipsis,16,), )
paddle.Tensor.__getitem__(Tensor([5780, 32],"int64"), tuple(Ellipsis,8,), )
paddle.Tensor.__getitem__(Tensor([5788, 32],"int64"), tuple(Ellipsis,19,), )
paddle.Tensor.__getitem__(Tensor([5814, 32],"int64"), tuple(Ellipsis,14,), )
paddle.Tensor.__getitem__(Tensor([5757, 32],"int64"), tuple(Ellipsis,8,), )
paddle.Tensor.__getitem__(Tensor([5818, 32],"int64"), tuple(Ellipsis,10,), )
paddle.Tensor.__getitem__(Tensor([5876, 32],"int64"), tuple(Ellipsis,11,), )
paddle.Tensor.__getitem__(Tensor([5656, 32],"int64"), tuple(Ellipsis,31,), )
paddle.Tensor.__getitem__(Tensor([5657, 32],"int64"), tuple(Ellipsis,27,), )
paddle.Tensor.__getitem__(Tensor([5814, 32],"float32"), tuple(slice(None,None,None),18,), )
paddle.Tensor.__getitem__(Tensor([5801, 32],"int64"), tuple(Ellipsis,29,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5488,None),26,), )
paddle.Tensor.__getitem__(Tensor([5555, 32],"float32"), tuple(slice(None,None,None),18,), )
paddle.Tensor.__getitem__(Tensor([5824, 32],"float32"), tuple(slice(None,None,None),10,), )
paddle.Tensor.__getitem__(Tensor([5670, 32],"int64"), tuple(Ellipsis,30,), )
paddle.Tensor.__getitem__(Tensor([5824, 32],"float32"), tuple(slice(None,None,None),3,), )
paddle.Tensor.__getitem__(Tensor([5876, 32],"float32"), tuple(slice(None,None,None),22,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5555,None),19,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,1,None),14,), )
paddle.Tensor.__getitem__(Tensor([5761, 32],"float32"), tuple(slice(None,None,None),12,), )
paddle.Tensor.__getitem__(Tensor([5825, 32],"int64"), tuple(Ellipsis,2,), )
paddle.Tensor.__getitem__(Tensor([5780, 32],"int64"), tuple(Ellipsis,22,), )
paddle.Tensor.__getitem__(Tensor([5831, 32],"int64"), tuple(Ellipsis,20,), )
paddle.Tensor.__getitem__(Tensor([5656, 32],"int64"), tuple(Ellipsis,9,), )
paddle.Tensor.__getitem__(Tensor([5807, 32],"int64"), tuple(Ellipsis,5,), )
paddle.Tensor.__getitem__(Tensor([5788, 32],"float32"), tuple(slice(None,None,None),0,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5849,None),9,), )
paddle.Tensor.__getitem__(Tensor([5831, 32],"int64"), tuple(Ellipsis,22,), )
paddle.Tensor.__getitem__(Tensor([5802, 32],"int64"), tuple(Ellipsis,10,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5657,None),16,), )
paddle.Tensor.__getitem__(Tensor([1, 11648, 64],"float32"), tuple(slice(None,None,None),slice(None,11648,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 3072, 56],"float32"), tuple(slice(None,None,None),slice(None,3072,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 8192, 32],"float32"), tuple(slice(None,None,None),slice(None,None,None),slice(23,24,None),), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int32"), slice(None,3399,None), )
paddle.Tensor.__getitem__(Tensor([5818, 32],"float32"), tuple(slice(None,None,None),26,), )
paddle.Tensor.__getitem__(Tensor([5996, 32],"int64"), tuple(Ellipsis,26,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5514,None),15,), )
paddle.Tensor.__getitem__(Tensor([5761, 32],"float32"), tuple(slice(None,None,None),8,), )
paddle.Tensor.__getitem__(Tensor([1, 14720, 64],"float32"), tuple(slice(None,None,None),slice(None,14720,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5825,None),17,), )
paddle.Tensor.__getitem__(Tensor([1, 11776, 56],"float32"), tuple(slice(None,None,None),slice(None,11776,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5514, 32],"int64"), tuple(Ellipsis,29,), )
paddle.Tensor.__getitem__(Tensor([5761, 32],"float32"), tuple(slice(None,None,None),13,), )
paddle.Tensor.__getitem__(Tensor([7200, 32],"bfloat16"), slice(None,7200,None), )
paddle.Tensor.__getitem__(Tensor([5670, 32],"float32"), tuple(slice(None,None,None),8,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5572,None),18,), )
paddle.Tensor.__getitem__(Tensor([6017, 32],"int64"), tuple(Ellipsis,16,), )
paddle.Tensor.__getitem__(Tensor([5825, 32],"float32"), tuple(slice(None,None,None),17,), )
paddle.Tensor.__getitem__(Tensor([5825, 32],"float32"), tuple(slice(None,None,None),6,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5788,None),31,), )
paddle.Tensor.__getitem__(Tensor([5544, 32],"int64"), tuple(Ellipsis,6,), )
paddle.Tensor.__getitem__(Tensor([5761, 32],"float32"), tuple(slice(None,None,None),2,), )
paddle.Tensor.__getitem__(Tensor([5867, 32],"int64"), tuple(Ellipsis,3,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5825,None),22,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5761,None),24,), )
paddle.Tensor.__getitem__(Tensor([5583, 32],"float32"), tuple(slice(None,None,None),30,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5572,None),11,), )
paddle.Tensor.__getitem__(Tensor([5801, 32],"float32"), tuple(slice(None,None,None),8,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5835,None),25,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5825,None),9,), )
paddle.Tensor.__getitem__(Tensor([5859, 32],"float32"), tuple(slice(None,None,None),23,), )
paddle.Tensor.__getitem__(Tensor([5800, 32],"float32"), tuple(slice(None,None,None),6,), )
paddle.Tensor.__getitem__(Tensor([1, 17536, 56],"float32"), tuple(slice(None,None,None),slice(None,17536,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5488,None),31,), )
paddle.Tensor.__getitem__(Tensor([5969, 32],"int64"), tuple(Ellipsis,22,), )
paddle.Tensor.__getitem__(Tensor([5585, 32],"float32"), tuple(slice(None,None,None),1,), )
paddle.Tensor.__getitem__(Tensor([5825, 32],"int64"), tuple(Ellipsis,9,), )
paddle.Tensor.__getitem__(Tensor([5849, 32],"int64"), tuple(Ellipsis,6,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5544,None),16,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,1,None),28,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5824,None),29,), )
paddle.Tensor.__getitem__(Tensor([5670, 32],"float32"), tuple(slice(None,None,None),13,), )
paddle.Tensor.__getitem__(Tensor([5800, 32],"float32"), tuple(slice(None,None,None),30,), )
paddle.Tensor.__getitem__(Tensor([5849, 32],"int64"), tuple(Ellipsis,25,), )
paddle.Tensor.__getitem__(Tensor([5757, 32],"int64"), tuple(Ellipsis,22,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5657,None),31,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5555,None),7,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5831,None),27,), )
paddle.Tensor.__getitem__(Tensor([5927, 32],"int64"), tuple(Ellipsis,14,), )
paddle.Tensor.__getitem__(Tensor([1, 14720, 56],"float32"), tuple(slice(None,None,None),slice(None,14720,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5849, 32],"float32"), tuple(slice(None,None,None),8,), )
paddle.Tensor.__getitem__(Tensor([5927, 32],"int64"), tuple(Ellipsis,28,), )
paddle.Tensor.__getitem__(Tensor([5818, 32],"float32"), tuple(slice(None,None,None),25,), )
paddle.Tensor.__getitem__(Tensor([7052, 32],"bfloat16"), slice(None,7052,None), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5814,None),10,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5800,None),13,), )
paddle.Tensor.__getitem__(Tensor([5849, 32],"float32"), tuple(slice(None,None,None),1,), )
paddle.Tensor.__getitem__(Tensor([5788, 32],"float32"), tuple(slice(None,None,None),26,), )
paddle.Tensor.__getitem__(Tensor([5583, 32],"int64"), tuple(Ellipsis,20,), )
paddle.Tensor.__getitem__(Tensor([5835, 32],"float32"), tuple(slice(None,None,None),0,), )
paddle.Tensor.__getitem__(Tensor([5619, 32],"int64"), tuple(Ellipsis,27,), )
paddle.Tensor.__getitem__(Tensor([5544, 32],"int64"), tuple(Ellipsis,17,), )
paddle.Tensor.__getitem__(Tensor([5741, 32],"int64"), tuple(Ellipsis,24,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), slice(None,5802,None), )
paddle.Tensor.__getitem__(Tensor([5849, 32],"float32"), tuple(slice(None,None,None),12,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5824,None),12,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int32"), slice(None,6369,None), )
paddle.Tensor.__getitem__(Tensor([5867, 32],"int64"), tuple(Ellipsis,25,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5657,None),3,), )
paddle.Tensor.__getitem__(Tensor([5825, 32],"float32"), tuple(slice(None,None,None),23,), )
paddle.Tensor.__getitem__(Tensor([5644, 32],"int64"), tuple(Ellipsis,19,), )
paddle.Tensor.__getitem__(Tensor([5837, 32],"float32"), tuple(slice(None,None,None),29,), )
paddle.Tensor.__getitem__(Tensor([5572, 32],"float32"), tuple(slice(None,None,None),11,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5953,None),7,), )
paddle.Tensor.__getitem__(Tensor([5837, 32],"float32"), tuple(slice(None,None,None),2,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5818,None),31,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int32"), slice(None,7710,None), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5831,None),6,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5849,None),11,), )
paddle.Tensor.__getitem__(Tensor([5800, 32],"float32"), tuple(slice(None,None,None),2,), )
paddle.Tensor.__getitem__(Tensor([1, 9984, 56],"float32"), tuple(slice(None,None,None),slice(None,9984,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5787, 32],"int64"), tuple(Ellipsis,14,), )
paddle.Tensor.__getitem__(Tensor([1, 8576, 56],"float32"), tuple(slice(None,None,None),slice(None,8576,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5670,None),28,), )
paddle.Tensor.__getitem__(Tensor([5555, 32],"int64"), tuple(Ellipsis,30,), )
paddle.Tensor.__getitem__(Tensor([1, 10752, 56],"float32"), tuple(slice(None,None,None),slice(None,10752,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5814, 32],"int64"), tuple(Ellipsis,30,), )
paddle.Tensor.__getitem__(Tensor([5837, 32],"int64"), tuple(Ellipsis,26,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5831,None),17,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5833,None),0,), )
paddle.Tensor.__getitem__(Tensor([5514, 32],"int64"), tuple(Ellipsis,21,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5488,None),25,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), slice(None,5761,None), )
paddle.Tensor.__getitem__(Tensor([5927, 32],"int64"), tuple(Ellipsis,18,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), slice(None,5814,None), )
paddle.Tensor.__getitem__(Tensor([5833, 32],"float32"), tuple(slice(None,None,None),19,), )
paddle.Tensor.__getitem__(Tensor([1, 17152, 56],"float32"), tuple(slice(None,None,None),slice(None,17152,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5807, 32],"int64"), tuple(Ellipsis,8,), )
paddle.Tensor.__getitem__(Tensor([5788, 32],"float32"), tuple(slice(None,None,None),24,), )
paddle.Tensor.__getitem__(Tensor([3924, 32],"int64"), tuple(Ellipsis,6,), )
paddle.Tensor.__getitem__(Tensor([5656, 32],"int64"), tuple(Ellipsis,15,), )
paddle.Tensor.__getitem__(Tensor([5744, 32],"int64"), tuple(Ellipsis,6,), )
paddle.Tensor.__getitem__(Tensor([5514, 32],"float32"), tuple(slice(None,None,None),9,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), slice(None,5583,None), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,1,None),4,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5814,None),12,), )
paddle.Tensor.__getitem__(Tensor([5831, 32],"float32"), tuple(slice(None,None,None),22,), )
paddle.Tensor.__getitem__(Tensor([1, 5632, 64],"float32"), tuple(slice(None,None,None),slice(None,5632,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5644, 32],"int64"), tuple(Ellipsis,4,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5849,None),31,), )
paddle.Tensor.__getitem__(Tensor([5744, 32],"int64"), tuple(Ellipsis,15,), )
paddle.Tensor.__getitem__(Tensor([5555, 32],"int64"), tuple(Ellipsis,2,), )
paddle.Tensor.__getitem__(Tensor([1, 11520, 64],"float32"), tuple(slice(None,None,None),slice(None,11520,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5585, 32],"float32"), tuple(slice(None,None,None),16,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5585,None),5,), )
paddle.Tensor.__getitem__(Tensor([5619, 32],"int64"), tuple(Ellipsis,22,), )
paddle.Tensor.__getitem__(Tensor([5814, 32],"float32"), tuple(slice(None,None,None),6,), )
paddle.Tensor.__getitem__(Tensor([1, 17280, 56],"float32"), tuple(slice(None,None,None),slice(None,17280,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 8192, 32],"float32"), tuple(slice(None,None,None),slice(None,None,None),slice(None,27,None),), )
paddle.Tensor.__getitem__(Tensor([5818, 32],"float32"), tuple(slice(None,None,None),21,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5788,None),19,), )
paddle.Tensor.__getitem__(Tensor([5585, 32],"int64"), tuple(Ellipsis,10,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5831,None),22,), )
paddle.Tensor.__getitem__(Tensor([5585, 32],"float32"), tuple(slice(None,None,None),26,), )
paddle.Tensor.__getitem__(Tensor([5818, 32],"float32"), tuple(slice(None,None,None),29,), )
paddle.Tensor.__getitem__(Tensor([6017, 32],"int64"), tuple(Ellipsis,13,), )
paddle.Tensor.__getitem__(Tensor([1, 8192, 32],"float32"), tuple(slice(None,None,None),slice(None,None,None),slice(21,22,None),), )
paddle.Tensor.__getitem__(Tensor([5644, 32],"int64"), tuple(Ellipsis,11,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int32"), slice(None,6935,None), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5585,None),24,), )
paddle.Tensor.__getitem__(Tensor([5996, 32],"int64"), tuple(Ellipsis,8,), )
paddle.Tensor.__getitem__(Tensor([5572, 32],"int64"), tuple(Ellipsis,4,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5824,None),24,), )
paddle.Tensor.__getitem__(Tensor([5657, 32],"int64"), tuple(Ellipsis,3,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5544,None),11,), )
paddle.Tensor.__getitem__(Tensor([5741, 32],"int64"), tuple(Ellipsis,11,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5835,None),10,), )
paddle.Tensor.__getitem__(Tensor([5757, 32],"int64"), tuple(Ellipsis,27,), )
paddle.Tensor.__getitem__(Tensor([5837, 32],"int64"), tuple(Ellipsis,23,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5657,None),5,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5555,None),20,), )
paddle.Tensor.__getitem__(Tensor([1, 8192, 32],"float32"), tuple(slice(None,None,None),slice(None,None,None),slice(11,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 6016, 56],"float32"), tuple(slice(None,None,None),slice(None,6016,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 8192, 32],"float32"), tuple(slice(None,None,None),slice(None,None,None),slice(9,10,None),), )
paddle.Tensor.__getitem__(Tensor([5825, 32],"int64"), tuple(Ellipsis,14,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5840,None),31,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5807,None),15,), )
paddle.Tensor.__getitem__(Tensor([5833, 32],"float32"), tuple(slice(None,None,None),16,), )
paddle.Tensor.__getitem__(Tensor([5572, 32],"float32"), tuple(slice(None,None,None),27,), )
paddle.Tensor.__getitem__(Tensor([5840, 32],"int64"), tuple(Ellipsis,25,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5741,None),4,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5814,None),31,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5555,None),10,), )
paddle.Tensor.__getitem__(Tensor([5514, 32],"int64"), tuple(Ellipsis,8,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5488,None),16,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5555,None),24,), )
paddle.Tensor.__getitem__(Tensor([5927, 32],"int64"), tuple(Ellipsis,24,), )
paddle.Tensor.__getitem__(Tensor([5657, 32],"int64"), tuple(Ellipsis,25,), )
paddle.Tensor.__getitem__(Tensor([5572, 32],"int64"), tuple(Ellipsis,14,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5876,None),24,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), slice(None,3924,None), )
paddle.Tensor.__getitem__(Tensor([5969, 32],"int64"), tuple(Ellipsis,25,), )
paddle.Tensor.__getitem__(Tensor([5555, 32],"float32"), tuple(slice(None,None,None),15,), )
paddle.Tensor.__getitem__(Tensor([5488, 32],"int64"), tuple(Ellipsis,31,), )
paddle.Tensor.__getitem__(Tensor([5840, 32],"int64"), tuple(Ellipsis,5,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5953,None),8,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int32"), slice(None,7290,None), )
paddle.Tensor.__getitem__(Tensor([5578, 32],"int64"), tuple(Ellipsis,26,), )
paddle.Tensor.__getitem__(Tensor([5657, 32],"float32"), tuple(slice(None,None,None),21,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5849,None),21,), )
paddle.Tensor.__getitem__(Tensor([5761, 32],"float32"), tuple(slice(None,None,None),18,), )
paddle.Tensor.__getitem__(Tensor([5585, 32],"int64"), tuple(Ellipsis,22,), )
paddle.Tensor.__getitem__(Tensor([6078, 32],"int64"), tuple(Ellipsis,22,), )
paddle.Tensor.__getitem__(Tensor([5835, 32],"int64"), tuple(Ellipsis,7,), )
paddle.Tensor.__getitem__(Tensor([5572, 32],"int64"), tuple(Ellipsis,26,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5761,None),10,), )
paddle.Tensor.__getitem__(Tensor([5802, 32],"int64"), tuple(Ellipsis,21,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5800,None),0,), )
paddle.Tensor.__getitem__(Tensor([1, 14976, 64],"float32"), tuple(slice(None,None,None),slice(None,14976,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5969, 32],"int64"), tuple(Ellipsis,18,), )
paddle.Tensor.__getitem__(Tensor([5544, 32],"int64"), tuple(Ellipsis,9,), )
paddle.Tensor.__getitem__(Tensor([5800, 32],"int64"), tuple(Ellipsis,16,), )
paddle.Tensor.__getitem__(Tensor([5544, 32],"float32"), tuple(slice(None,None,None),3,), )
paddle.Tensor.__getitem__(Tensor([5788, 32],"int64"), tuple(Ellipsis,31,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5849,None),27,), )
paddle.Tensor.__getitem__(Tensor([5801, 32],"int64"), tuple(Ellipsis,22,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5800,None),2,), )
paddle.Tensor.__getitem__(Tensor([1, 6784, 64],"float32"), tuple(slice(None,None,None),slice(None,6784,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5788,None),5,), )
paddle.Tensor.__getitem__(Tensor([1, 8192, 32],"float32"), tuple(slice(None,None,None),slice(None,None,None),slice(24,25,None),), )
paddle.Tensor.__getitem__(Tensor([5953, 32],"int64"), tuple(Ellipsis,3,), )
paddle.Tensor.__getitem__(Tensor([5488, 32],"float32"), tuple(slice(None,None,None),5,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5859,None),11,), )
paddle.Tensor.__getitem__(Tensor([5927, 32],"int64"), tuple(Ellipsis,29,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5807,None),0,), )
paddle.Tensor.__getitem__(Tensor([5544, 32],"float32"), tuple(slice(None,None,None),11,), )
paddle.Tensor.__getitem__(Tensor([5670, 32],"float32"), tuple(slice(None,None,None),24,), )
paddle.Tensor.__getitem__(Tensor([5572, 32],"float32"), tuple(slice(None,None,None),0,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5814,None),27,), )
paddle.Tensor.__getitem__(Tensor([5831, 32],"float32"), tuple(slice(None,None,None),27,), )
paddle.Tensor.__getitem__(Tensor([5544, 32],"int64"), tuple(Ellipsis,8,), )
paddle.Tensor.__getitem__(Tensor([1, 8192, 32],"float32"), tuple(slice(None,None,None),slice(None,None,None),slice(None,5,None),), )
paddle.Tensor.__getitem__(Tensor([5859, 32],"float32"), tuple(slice(None,None,None),7,), )
paddle.Tensor.__getitem__(Tensor([5818, 32],"int64"), tuple(Ellipsis,24,), )
paddle.Tensor.__getitem__(Tensor([5572, 32],"float32"), tuple(slice(None,None,None),15,), )
paddle.Tensor.__getitem__(Tensor([5644, 32],"int64"), tuple(Ellipsis,10,), )
paddle.Tensor.__getitem__(Tensor([5831, 32],"float32"), tuple(slice(None,None,None),20,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5818,None),16,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int32"), slice(None,5976,None), )
paddle.Tensor.__getitem__(Tensor([5788, 32],"float32"), tuple(slice(None,None,None),12,), )
paddle.Tensor.__getitem__(Tensor([5801, 32],"int64"), tuple(Ellipsis,8,), )
paddle.Tensor.__getitem__(Tensor([5814, 32],"int64"), tuple(Ellipsis,18,), )
paddle.Tensor.__getitem__(Tensor([5761, 32],"int64"), tuple(Ellipsis,2,), )
paddle.Tensor.__getitem__(Tensor([5807, 32],"float32"), tuple(slice(None,None,None),7,), )
paddle.Tensor.__getitem__(Tensor([5840, 32],"float32"), tuple(slice(None,None,None),2,), )
paddle.Tensor.__getitem__(Tensor([1, 16128, 56],"float32"), tuple(slice(None,None,None),slice(None,16128,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5814,None),1,), )
paddle.Tensor.__getitem__(Tensor([5544, 32],"float32"), tuple(slice(None,None,None),5,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5488,None),27,), )
paddle.Tensor.__getitem__(Tensor([5644, 32],"int64"), tuple(Ellipsis,21,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5835,None),11,), )
paddle.Tensor.__getitem__(Tensor([5867, 32],"int64"), tuple(Ellipsis,29,), )
paddle.Tensor.__getitem__(Tensor([5619, 32],"float32"), tuple(slice(None,None,None),17,), )
paddle.Tensor.__getitem__(Tensor([5824, 32],"float32"), tuple(slice(None,None,None),17,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5818,None),22,), )
paddle.Tensor.__getitem__(Tensor([5953, 32],"float32"), tuple(slice(None,None,None),11,), )
paddle.Tensor.__getitem__(Tensor([5578, 32],"int64"), tuple(Ellipsis,14,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5859,None),25,), )
paddle.Tensor.__getitem__(Tensor([5833, 32],"float32"), tuple(slice(None,None,None),4,), )
paddle.Tensor.__getitem__(Tensor([5814, 32],"int64"), tuple(Ellipsis,25,), )
paddle.Tensor.__getitem__(Tensor([5910, 32],"int64"), tuple(Ellipsis,3,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5818,None),20,), )
paddle.Tensor.__getitem__(Tensor([5927, 32],"int64"), tuple(Ellipsis,5,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5837,None),3,), )
paddle.Tensor.__getitem__(Tensor([5975, 32],"int64"), tuple(Ellipsis,11,), )
paddle.Tensor.__getitem__(Tensor([1, 31232, 28],"float32"), tuple(slice(None,None,None),slice(None,31232,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5656, 32],"int64"), tuple(Ellipsis,3,), )
paddle.Tensor.__getitem__(Tensor([5814, 32],"int64"), tuple(Ellipsis,1,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5800,None),8,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5583,None),5,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5572,None),16,), )
paddle.Tensor.__getitem__(Tensor([6017, 32],"int64"), tuple(Ellipsis,2,), )
paddle.Tensor.__getitem__(Tensor([1, 3200, 56],"float32"), tuple(slice(None,None,None),slice(None,3200,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5831,None),28,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5555,None),27,), )
paddle.Tensor.__getitem__(Tensor([5996, 32],"int64"), tuple(Ellipsis,0,), )
paddle.Tensor.__getitem__(Tensor([1, 14336, 64],"float32"), tuple(slice(None,None,None),slice(None,14336,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5953, 32],"int64"), tuple(Ellipsis,22,), )
paddle.Tensor.__getitem__(Tensor([1, 13440, 56],"float32"), tuple(slice(None,None,None),slice(None,13440,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5657, 32],"int64"), tuple(Ellipsis,10,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5761,None),29,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5788,None),1,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5859,None),28,), )
paddle.Tensor.__getitem__(Tensor([5953, 32],"int64"), tuple(Ellipsis,12,), )
paddle.Tensor.__getitem__(Tensor([5657, 32],"int64"), tuple(Ellipsis,24,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5837,None),2,), )
paddle.Tensor.__getitem__(Tensor([5514, 32],"int64"), tuple(Ellipsis,0,), )
paddle.Tensor.__getitem__(Tensor([8192, 32],"int64"), tuple(slice(None,5840,None),15,), )
paddle.Tensor.__setitem__(Tensor([1, 5248, 64],"float32"), tuple(slice(None,None,None),slice(None,5248,None),slice(None,None,None),), Tensor([1, 5248, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3328, 56],"float32"), tuple(slice(None,None,None),slice(None,3328,None),slice(None,None,None),), Tensor([1, 3328, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3072, 56],"float32"), tuple(slice(None,None,None),slice(None,3072,None),slice(None,None,None),), Tensor([1, 3072, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 5248, 56],"float32"), tuple(slice(None,None,None),slice(None,5248,None),slice(None,None,None),), Tensor([1, 5248, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([6117, 32],"int32"), Tensor([6117, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 4096, 56],"float32"), tuple(slice(None,None,None),slice(None,4096,None),slice(None,None,None),), Tensor([1, 4096, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3712, 64],"float32"), tuple(slice(None,None,None),slice(None,3712,None),slice(None,None,None),), Tensor([1, 3712, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3968, 64],"float32"), tuple(slice(None,None,None),slice(None,3968,None),slice(None,None,None),), Tensor([1, 3968, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2688, 64],"float32"), tuple(slice(None,None,None),slice(None,2688,None),slice(None,None,None),), Tensor([1, 2688, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 15360, 28],"float32"), tuple(slice(None,None,None),slice(None,15360,None),slice(None,None,None),), Tensor([1, 15360, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 896, 64],"float32"), tuple(slice(None,None,None),slice(None,896,None),slice(None,None,None),), Tensor([1, 896, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([4458, 32],"int32"), Tensor([4458, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 5120, 28],"float32"), tuple(slice(None,None,None),slice(None,5120,None),slice(None,None,None),), Tensor([1, 5120, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([2277, 32],"int32"), Tensor([2277, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 1280, 64],"float32"), tuple(slice(None,None,None),slice(None,1280,None),slice(None,None,None),), Tensor([1, 1280, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 12288, 28],"float32"), tuple(slice(None,None,None),slice(None,12288,None),slice(None,None,None),), Tensor([1, 12288, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2560, 28],"float32"), tuple(slice(None,None,None),slice(None,2560,None),slice(None,None,None),), Tensor([1, 2560, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 5888, 56],"float32"), tuple(slice(None,None,None),slice(None,5888,None),slice(None,None,None),), Tensor([1, 5888, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([5976, 32],"int32"), Tensor([5976, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 6016, 56],"float32"), tuple(slice(None,None,None),slice(None,6016,None),slice(None,None,None),), Tensor([1, 6016, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 16384, 28],"float32"), tuple(slice(None,None,None),slice(None,16384,None),slice(None,None,None),), Tensor([1, 16384, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([4293, 32],"int32"), Tensor([4293, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 6272, 56],"float32"), tuple(slice(None,None,None),slice(None,6272,None),slice(None,None,None),), Tensor([1, 6272, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2048, 56],"float32"), tuple(slice(None,None,None),slice(None,2048,None),slice(None,None,None),), Tensor([1, 2048, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 1536, 56],"float32"), tuple(slice(None,None,None),slice(None,1536,None),slice(None,None,None),), Tensor([1, 1536, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3968, 56],"float32"), tuple(slice(None,None,None),slice(None,3968,None),slice(None,None,None),), Tensor([1, 3968, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([3534, 32],"int32"), Tensor([3534, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([6935, 32],"int32"), Tensor([6935, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 5632, 64],"float32"), tuple(slice(None,None,None),slice(None,5632,None),slice(None,None,None),), Tensor([1, 5632, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([7200, 32],"int32"), Tensor([7200, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([6870, 32],"int32"), Tensor([6870, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 7680, 64],"float32"), tuple(slice(None,None,None),slice(None,7680,None),slice(None,None,None),), Tensor([1, 7680, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([7165, 32],"int32"), Tensor([7165, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 28],"float32"), tuple(slice(None,None,None),slice(None,8192,None),slice(None,None,None),), Tensor([1, 8192, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 7680, 28],"float32"), tuple(slice(None,None,None),slice(None,7680,None),slice(None,None,None),), Tensor([1, 7680, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 11264, 28],"float32"), tuple(slice(None,None,None),slice(None,11264,None),slice(None,None,None),), Tensor([1, 11264, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 16896, 28],"float32"), tuple(slice(None,None,None),slice(None,16896,None),slice(None,None,None),), Tensor([1, 16896, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 1280, 56],"float32"), tuple(slice(None,None,None),slice(None,1280,None),slice(None,None,None),), Tensor([1, 1280, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2048, 28],"float32"), tuple(slice(None,None,None),slice(None,2048,None),slice(None,None,None),), Tensor([1, 2048, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4992, 64],"float32"), tuple(slice(None,None,None),slice(None,4992,None),slice(None,None,None),), Tensor([1, 4992, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2944, 64],"float32"), tuple(slice(None,None,None),slice(None,2944,None),slice(None,None,None),), Tensor([1, 2944, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([5084, 32],"int32"), Tensor([5084, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 6656, 64],"float32"), tuple(slice(None,None,None),slice(None,6656,None),slice(None,None,None),), Tensor([1, 6656, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 5120, 56],"float32"), tuple(slice(None,None,None),slice(None,5120,None),slice(None,None,None),), Tensor([1, 5120, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([5548, 32],"int32"), Tensor([5548, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 7168, 56],"float32"), tuple(slice(None,None,None),slice(None,7168,None),slice(None,None,None),), Tensor([1, 7168, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3456, 56],"float32"), tuple(slice(None,None,None),slice(None,3456,None),slice(None,None,None),), Tensor([1, 3456, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 12800, 28],"float32"), tuple(slice(None,None,None),slice(None,12800,None),slice(None,None,None),), Tensor([1, 12800, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 10240, 28],"float32"), tuple(slice(None,None,None),slice(None,10240,None),slice(None,None,None),), Tensor([1, 10240, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6400, 56],"float32"), tuple(slice(None,None,None),slice(None,6400,None),slice(None,None,None),), Tensor([1, 6400, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4608, 56],"float32"), tuple(slice(None,None,None),slice(None,4608,None),slice(None,None,None),), Tensor([1, 4608, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4480, 64],"float32"), tuple(slice(None,None,None),slice(None,4480,None),slice(None,None,None),), Tensor([1, 4480, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3200, 64],"float32"), tuple(slice(None,None,None),slice(None,3200,None),slice(None,None,None),), Tensor([1, 3200, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([7290, 32],"int32"), Tensor([7290, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 4608, 64],"float32"), tuple(slice(None,None,None),slice(None,4608,None),slice(None,None,None),), Tensor([1, 4608, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3584, 56],"float32"), tuple(slice(None,None,None),slice(None,3584,None),slice(None,None,None),), Tensor([1, 3584, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 7168, 56],"float32"), tuple(slice(None,None,None),slice(None,7168,None),slice(None,None,None),), Tensor([1, 7168, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 14848, 28],"float32"), tuple(slice(None,None,None),slice(None,14848,None),slice(None,None,None),), Tensor([1, 14848, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 17408, 28],"float32"), tuple(slice(None,None,None),slice(None,17408,None),slice(None,None,None),), Tensor([1, 17408, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([7573, 32],"int32"), Tensor([7573, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 2432, 64],"float32"), tuple(slice(None,None,None),slice(None,2432,None),slice(None,None,None),), Tensor([1, 2432, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6272, 64],"float32"), tuple(slice(None,None,None),slice(None,6272,None),slice(None,None,None),), Tensor([1, 6272, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6528, 56],"float32"), tuple(slice(None,None,None),slice(None,6528,None),slice(None,None,None),), Tensor([1, 6528, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2560, 56],"float32"), tuple(slice(None,None,None),slice(None,2560,None),slice(None,None,None),), Tensor([1, 2560, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 1664, 64],"float32"), tuple(slice(None,None,None),slice(None,1664,None),slice(None,None,None),), Tensor([1, 1664, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([7020, 32],"int32"), Tensor([7020, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([7065, 32],"int32"), Tensor([7065, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([7175, 32],"int32"), Tensor([7175, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 7680, 56],"float32"), tuple(slice(None,None,None),slice(None,7680,None),slice(None,None,None),), Tensor([1, 7680, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4096, 28],"float32"), tuple(slice(None,None,None),slice(None,4096,None),slice(None,None,None),), Tensor([1, 4096, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([4059, 32],"int32"), Tensor([4059, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 3584, 56],"float32"), tuple(slice(None,None,None),slice(None,3584,None),slice(None,None,None),), Tensor([1, 3584, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2048, 56],"float32"), tuple(slice(None,None,None),slice(None,2048,None),slice(None,None,None),), Tensor([1, 2048, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([7015, 32],"int32"), Tensor([7015, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([6122, 32],"int32"), Tensor([6122, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 6912, 64],"float32"), tuple(slice(None,None,None),slice(None,6912,None),slice(None,None,None),), Tensor([1, 6912, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6144, 64],"float32"), tuple(slice(None,None,None),slice(None,6144,None),slice(None,None,None),), Tensor([1, 6144, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([6282, 32],"int32"), Tensor([6282, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([7710, 32],"int32"), Tensor([7710, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8832, 56],"float32"), tuple(slice(None,None,None),slice(None,8832,None),slice(None,None,None),), Tensor([1, 8832, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([3702, 32],"int32"), Tensor([3702, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 5632, 56],"float32"), tuple(slice(None,None,None),slice(None,5632,None),slice(None,None,None),), Tensor([1, 5632, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3328, 64],"float32"), tuple(slice(None,None,None),slice(None,3328,None),slice(None,None,None),), Tensor([1, 3328, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 7168, 64],"float32"), tuple(slice(None,None,None),slice(None,7168,None),slice(None,None,None),), Tensor([1, 7168, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 9728, 28],"float32"), tuple(slice(None,None,None),slice(None,9728,None),slice(None,None,None),), Tensor([1, 9728, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3584, 28],"float32"), tuple(slice(None,None,None),slice(None,3584,None),slice(None,None,None),), Tensor([1, 3584, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3072, 28],"float32"), tuple(slice(None,None,None),slice(None,3072,None),slice(None,None,None),), Tensor([1, 3072, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 5120, 64],"float32"), tuple(slice(None,None,None),slice(None,5120,None),slice(None,None,None),), Tensor([1, 5120, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 7424, 64],"float32"), tuple(slice(None,None,None),slice(None,7424,None),slice(None,None,None),), Tensor([1, 7424, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 1408, 64],"float32"), tuple(slice(None,None,None),slice(None,1408,None),slice(None,None,None),), Tensor([1, 1408, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 13824, 28],"float32"), tuple(slice(None,None,None),slice(None,13824,None),slice(None,None,None),), Tensor([1, 13824, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([6992, 32],"int32"), Tensor([6992, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 4992, 56],"float32"), tuple(slice(None,None,None),slice(None,4992,None),slice(None,None,None),), Tensor([1, 4992, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6400, 64],"float32"), tuple(slice(None,None,None),slice(None,6400,None),slice(None,None,None),), Tensor([1, 6400, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3840, 64],"float32"), tuple(slice(None,None,None),slice(None,3840,None),slice(None,None,None),), Tensor([1, 3840, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8320, 56],"float32"), tuple(slice(None,None,None),slice(None,8320,None),slice(None,None,None),), Tensor([1, 8320, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4736, 64],"float32"), tuple(slice(None,None,None),slice(None,4736,None),slice(None,None,None),), Tensor([1, 4736, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4608, 56],"float32"), tuple(slice(None,None,None),slice(None,4608,None),slice(None,None,None),), Tensor([1, 4608, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2304, 56],"float32"), tuple(slice(None,None,None),slice(None,2304,None),slice(None,None,None),), Tensor([1, 2304, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4224, 64],"float32"), tuple(slice(None,None,None),slice(None,4224,None),slice(None,None,None),), Tensor([1, 4224, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 5632, 56],"float32"), tuple(slice(None,None,None),slice(None,5632,None),slice(None,None,None),), Tensor([1, 5632, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6144, 56],"float32"), tuple(slice(None,None,None),slice(None,6144,None),slice(None,None,None),), Tensor([1, 6144, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([3411, 32],"int32"), Tensor([3411, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 2048, 64],"float32"), tuple(slice(None,None,None),slice(None,2048,None),slice(None,None,None),), Tensor([1, 2048, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([3438, 32],"int32"), Tensor([3438, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 5504, 64],"float32"), tuple(slice(None,None,None),slice(None,5504,None),slice(None,None,None),), Tensor([1, 5504, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([6911, 32],"int32"), Tensor([6911, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([6248, 32],"int32"), Tensor([6248, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([3345, 32],"int32"), Tensor([3345, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([3072, 32],"int32"), Tensor([3072, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8576, 56],"float32"), tuple(slice(None,None,None),slice(None,8576,None),slice(None,None,None),), Tensor([1, 8576, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 7296, 64],"float32"), tuple(slice(None,None,None),slice(None,7296,None),slice(None,None,None),), Tensor([1, 7296, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([5842, 32],"int32"), Tensor([5842, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 2432, 56],"float32"), tuple(slice(None,None,None),slice(None,2432,None),slice(None,None,None),), Tensor([1, 2432, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([4843, 32],"int32"), Tensor([4843, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 2304, 64],"float32"), tuple(slice(None,None,None),slice(None,2304,None),slice(None,None,None),), Tensor([1, 2304, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([6296, 32],"int32"), Tensor([6296, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 5376, 64],"float32"), tuple(slice(None,None,None),slice(None,5376,None),slice(None,None,None),), Tensor([1, 5376, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6784, 64],"float32"), tuple(slice(None,None,None),slice(None,6784,None),slice(None,None,None),), Tensor([1, 6784, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 5760, 56],"float32"), tuple(slice(None,None,None),slice(None,5760,None),slice(None,None,None),), Tensor([1, 5760, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 9216, 28],"float32"), tuple(slice(None,None,None),slice(None,9216,None),slice(None,None,None),), Tensor([1, 9216, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 1536, 56],"float32"), tuple(slice(None,None,None),slice(None,1536,None),slice(None,None,None),), Tensor([1, 1536, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6656, 56],"float32"), tuple(slice(None,None,None),slice(None,6656,None),slice(None,None,None),), Tensor([1, 6656, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 1024, 64],"float32"), tuple(slice(None,None,None),slice(None,1024,None),slice(None,None,None),), Tensor([1, 1024, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 7296, 56],"float32"), tuple(slice(None,None,None),slice(None,7296,None),slice(None,None,None),), Tensor([1, 7296, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6656, 56],"float32"), tuple(slice(None,None,None),slice(None,6656,None),slice(None,None,None),), Tensor([1, 6656, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1906, 32],"int32"), Tensor([1906, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 3840, 56],"float32"), tuple(slice(None,None,None),slice(None,3840,None),slice(None,None,None),), Tensor([1, 3840, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6784, 56],"float32"), tuple(slice(None,None,None),slice(None,6784,None),slice(None,None,None),), Tensor([1, 6784, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([6098, 32],"int32"), Tensor([6098, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 7168, 28],"float32"), tuple(slice(None,None,None),slice(None,7168,None),slice(None,None,None),), Tensor([1, 7168, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([6805, 32],"int32"), Tensor([6805, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([3795, 32],"int32"), Tensor([3795, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([6502, 32],"int32"), Tensor([6502, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 4352, 64],"float32"), tuple(slice(None,None,None),slice(None,4352,None),slice(None,None,None),), Tensor([1, 4352, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([6255, 32],"int32"), Tensor([6255, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([6291, 32],"int32"), Tensor([6291, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([3658, 32],"int32"), Tensor([3658, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([6929, 32],"int32"), Tensor([6929, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([2946, 32],"int32"), Tensor([2946, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 2944, 56],"float32"), tuple(slice(None,None,None),slice(None,2944,None),slice(None,None,None),), Tensor([1, 2944, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([6976, 32],"int32"), Tensor([6976, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8704, 56],"float32"), tuple(slice(None,None,None),slice(None,8704,None),slice(None,None,None),), Tensor([1, 8704, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3712, 56],"float32"), tuple(slice(None,None,None),slice(None,3712,None),slice(None,None,None),), Tensor([1, 3712, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6144, 56],"float32"), tuple(slice(None,None,None),slice(None,6144,None),slice(None,None,None),), Tensor([1, 6144, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([3060, 32],"int32"), Tensor([3060, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 1024, 56],"float32"), tuple(slice(None,None,None),slice(None,1024,None),slice(None,None,None),), Tensor([1, 1024, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([5060, 32],"int32"), Tensor([5060, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 7808, 64],"float32"), tuple(slice(None,None,None),slice(None,7808,None),slice(None,None,None),), Tensor([1, 7808, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4352, 56],"float32"), tuple(slice(None,None,None),slice(None,4352,None),slice(None,None,None),), Tensor([1, 4352, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([6474, 32],"int32"), Tensor([6474, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 1664, 56],"float32"), tuple(slice(None,None,None),slice(None,1664,None),slice(None,None,None),), Tensor([1, 1664, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2816, 64],"float32"), tuple(slice(None,None,None),slice(None,2816,None),slice(None,None,None),), Tensor([1, 2816, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 1408, 56],"float32"), tuple(slice(None,None,None),slice(None,1408,None),slice(None,None,None),), Tensor([1, 1408, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4864, 64],"float32"), tuple(slice(None,None,None),slice(None,4864,None),slice(None,None,None),), Tensor([1, 4864, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([3579, 32],"int32"), Tensor([3579, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([7164, 32],"int32"), Tensor([7164, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 2816, 56],"float32"), tuple(slice(None,None,None),slice(None,2816,None),slice(None,None,None),), Tensor([1, 2816, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2560, 64],"float32"), tuple(slice(None,None,None),slice(None,2560,None),slice(None,None,None),), Tensor([1, 2560, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([3399, 32],"int32"), Tensor([3399, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 896, 56],"float32"), tuple(slice(None,None,None),slice(None,896,None),slice(None,None,None),), Tensor([1, 896, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3456, 64],"float32"), tuple(slice(None,None,None),slice(None,3456,None),slice(None,None,None),), Tensor([1, 3456, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([4359, 32],"int32"), Tensor([4359, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 1920, 64],"float32"), tuple(slice(None,None,None),slice(None,1920,None),slice(None,None,None),), Tensor([1, 1920, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 11776, 28],"float32"), tuple(slice(None,None,None),slice(None,11776,None),slice(None,None,None),), Tensor([1, 11776, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 56],"float32"), tuple(slice(None,None,None),slice(None,8192,None),slice(None,None,None),), Tensor([1, 8192, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([6950, 32],"int32"), Tensor([6950, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 3584, 64],"float32"), tuple(slice(None,None,None),slice(None,3584,None),slice(None,None,None),), Tensor([1, 3584, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8448, 56],"float32"), tuple(slice(None,None,None),slice(None,8448,None),slice(None,None,None),), Tensor([1, 8448, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3200, 56],"float32"), tuple(slice(None,None,None),slice(None,3200,None),slice(None,None,None),), Tensor([1, 3200, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([4816, 32],"int32"), Tensor([4816, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([3699, 32],"int32"), Tensor([3699, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([7052, 32],"int32"), Tensor([7052, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([6544, 32],"int32"), Tensor([6544, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([3831, 32],"int32"), Tensor([3831, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 7680, 56],"float32"), tuple(slice(None,None,None),slice(None,7680,None),slice(None,None,None),), Tensor([1, 7680, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4480, 56],"float32"), tuple(slice(None,None,None),slice(None,4480,None),slice(None,None,None),), Tensor([1, 4480, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6144, 28],"float32"), tuple(slice(None,None,None),slice(None,6144,None),slice(None,None,None),), Tensor([1, 6144, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([5735, 32],"int32"), Tensor([5735, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([6753, 32],"int32"), Tensor([6753, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 2560, 56],"float32"), tuple(slice(None,None,None),slice(None,2560,None),slice(None,None,None),), Tensor([1, 2560, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 7040, 64],"float32"), tuple(slice(None,None,None),slice(None,7040,None),slice(None,None,None),), Tensor([1, 7040, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([6960, 32],"int32"), Tensor([6960, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 5888, 64],"float32"), tuple(slice(None,None,None),slice(None,5888,None),slice(None,None,None),), Tensor([1, 5888, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([7270, 32],"int32"), Tensor([7270, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([5566, 32],"int32"), Tensor([5566, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 10752, 28],"float32"), tuple(slice(None,None,None),slice(None,10752,None),slice(None,None,None),), Tensor([1, 10752, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4736, 56],"float32"), tuple(slice(None,None,None),slice(None,4736,None),slice(None,None,None),), Tensor([1, 4736, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 7424, 56],"float32"), tuple(slice(None,None,None),slice(None,7424,None),slice(None,None,None),), Tensor([1, 7424, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4096, 56],"float32"), tuple(slice(None,None,None),slice(None,4096,None),slice(None,None,None),), Tensor([1, 4096, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([6831, 32],"int32"), Tensor([6831, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([3783, 32],"int32"), Tensor([3783, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 1152, 64],"float32"), tuple(slice(None,None,None),slice(None,1152,None),slice(None,None,None),), Tensor([1, 1152, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([4554, 32],"int32"), Tensor([4554, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 2688, 56],"float32"), tuple(slice(None,None,None),slice(None,2688,None),slice(None,None,None),), Tensor([1, 2688, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8704, 28],"float32"), tuple(slice(None,None,None),slice(None,8704,None),slice(None,None,None),), Tensor([1, 8704, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([6084, 32],"int32"), Tensor([6084, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([2811, 32],"int32"), Tensor([2811, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 56],"float32"), tuple(slice(None,None,None),slice(None,8192,None),slice(None,None,None),), Tensor([1, 8192, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4224, 56],"float32"), tuple(slice(None,None,None),slice(None,4224,None),slice(None,None,None),), Tensor([1, 4224, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([3036, 32],"int32"), Tensor([3036, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 3072, 56],"float32"), tuple(slice(None,None,None),slice(None,3072,None),slice(None,None,None),), Tensor([1, 3072, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 5632, 28],"float32"), tuple(slice(None,None,None),slice(None,5632,None),slice(None,None,None),), Tensor([1, 5632, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8064, 56],"float32"), tuple(slice(None,None,None),slice(None,8064,None),slice(None,None,None),), Tensor([1, 8064, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([8162, 32],"int32"), Tensor([8162, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 5760, 64],"float32"), tuple(slice(None,None,None),slice(None,5760,None),slice(None,None,None),), Tensor([1, 5760, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4096, 64],"float32"), tuple(slice(None,None,None),slice(None,4096,None),slice(None,None,None),), Tensor([1, 4096, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2176, 64],"float32"), tuple(slice(None,None,None),slice(None,2176,None),slice(None,None,None),), Tensor([1, 2176, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 3072, 64],"float32"), tuple(slice(None,None,None),slice(None,3072,None),slice(None,None,None),), Tensor([1, 3072, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 6656, 28],"float32"), tuple(slice(None,None,None),slice(None,6656,None),slice(None,None,None),), Tensor([1, 6656, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 1152, 56],"float32"), tuple(slice(None,None,None),slice(None,1152,None),slice(None,None,None),), Tensor([1, 1152, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([6351, 32],"int32"), Tensor([6351, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([6369, 32],"int32"), Tensor([6369, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 1792, 64],"float32"), tuple(slice(None,None,None),slice(None,1792,None),slice(None,None,None),), Tensor([1, 1792, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 4608, 28],"float32"), tuple(slice(None,None,None),slice(None,4608,None),slice(None,None,None),), Tensor([1, 4608, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 1024, 56],"float32"), tuple(slice(None,None,None),slice(None,1024,None),slice(None,None,None),), Tensor([1, 1024, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([4533, 32],"int32"), Tensor([4533, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 6912, 56],"float32"), tuple(slice(None,None,None),slice(None,6912,None),slice(None,None,None),), Tensor([1, 6912, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([6410, 32],"int32"), Tensor([6410, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 1536, 64],"float32"), tuple(slice(None,None,None),slice(None,1536,None),slice(None,None,None),), Tensor([1, 1536, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([7183, 32],"int32"), Tensor([7183, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 6016, 64],"float32"), tuple(slice(None,None,None),slice(None,6016,None),slice(None,None,None),), Tensor([1, 6016, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([6954, 32],"int32"), Tensor([6954, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 6528, 64],"float32"), tuple(slice(None,None,None),slice(None,6528,None),slice(None,None,None),), Tensor([1, 6528, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([7780, 32],"int32"), Tensor([7780, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 5120, 56],"float32"), tuple(slice(None,None,None),slice(None,5120,None),slice(None,None,None),), Tensor([1, 5120, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 7040, 56],"float32"), tuple(slice(None,None,None),slice(None,7040,None),slice(None,None,None),), Tensor([1, 7040, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 5504, 56],"float32"), tuple(slice(None,None,None),slice(None,5504,None),slice(None,None,None),), Tensor([1, 5504, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 5376, 56],"float32"), tuple(slice(None,None,None),slice(None,5376,None),slice(None,None,None),), Tensor([1, 5376, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([6880, 32],"int32"), Tensor([6880, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 4864, 56],"float32"), tuple(slice(None,None,None),slice(None,4864,None),slice(None,None,None),), Tensor([1, 4864, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 14336, 28],"float32"), tuple(slice(None,None,None),slice(None,14336,None),slice(None,None,None),), Tensor([1, 14336, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 1792, 56],"float32"), tuple(slice(None,None,None),slice(None,1792,None),slice(None,None,None),), Tensor([1, 1792, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8704, 56],"float32"), tuple(slice(None,None,None),slice(None,8704,None),slice(None,None,None),), Tensor([1, 8704, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 15872, 28],"float32"), tuple(slice(None,None,None),slice(None,15872,None),slice(None,None,None),), Tensor([1, 15872, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 7808, 56],"float32"), tuple(slice(None,None,None),slice(None,7808,None),slice(None,None,None),), Tensor([1, 7808, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 2176, 56],"float32"), tuple(slice(None,None,None),slice(None,2176,None),slice(None,None,None),), Tensor([1, 2176, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([6391, 32],"int32"), Tensor([6391, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 1920, 56],"float32"), tuple(slice(None,None,None),slice(None,1920,None),slice(None,None,None),), Tensor([1, 1920, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 13312, 28],"float32"), tuple(slice(None,None,None),slice(None,13312,None),slice(None,None,None),), Tensor([1, 13312, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3534, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 1024, 28],"float32"), tuple(slice(None,None,None),slice(None,1024,None),slice(None,None,None),), Tensor([1, 1024, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7573, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6880, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 512, 28],"float32"), tuple(slice(None,None,None),slice(None,512,None),slice(None,None,None),), Tensor([1, 512, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6935, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 384, 56],"float32"), tuple(slice(None,None,None),slice(None,384,None),slice(None,None,None),), Tensor([1, 384, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7780, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5583],"int64"), Tensor([5583],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([1906, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3399, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5800],"int64"), Tensor([5800],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5833, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5583, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5825, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5859],"int64"), Tensor([5859],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192],"int64"), Tensor([1, 8192],"bool"), -100, )
paddle.Tensor.__setitem__(Tensor([5741],"int64"), Tensor([5741],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([5835],"int64"), Tensor([5835],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5807, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6296, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([4816, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([4359, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3783, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 384, 64],"float32"), tuple(slice(None,None,None),slice(None,384,None),slice(None,None,None),), Tensor([1, 384, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6098, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5585],"int64"), Tensor([5585],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([5831],"int64"), Tensor([5831],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([383, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5514, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5849, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5761],"int64"), Tensor([5761],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5837, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 512, 56],"float32"), tuple(slice(None,None,None),slice(None,512,None),slice(None,None,None),), Tensor([1, 512, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([4458, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5657],"int64"), Tensor([5657],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 640, 56],"float32"), tuple(slice(None,None,None),slice(None,640,None),slice(None,None,None),), Tensor([1, 640, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([4554, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3072, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7015, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7290, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6410, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6369, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3411, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3702, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5761, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3345, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3831, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([4059, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5084, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6929, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6544, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 512, 64],"float32"), tuple(slice(None,None,None),slice(None,512,None),slice(None,None,None),), Tensor([1, 512, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5670, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6831, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5060, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7183, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7270, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3699, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5514],"int64"), Tensor([5514],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([4533, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([4293, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([4843, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 768, 56],"float32"), tuple(slice(None,None,None),slice(None,768,None),slice(None,None,None),), Tensor([1, 768, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6291, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([383, 32],"int32"), Tensor([383, 32],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5741, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([8162, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5859, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6753, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5657, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5801],"int64"), Tensor([5801],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6282, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7165, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7164, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6122, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 128, 64],"float32"), tuple(slice(None,None,None),slice(None,128,None),slice(None,None,None),), Tensor([1, 128, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([5876],"int64"), Tensor([5876],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3658, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5544],"int64"), Tensor([5544],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5566, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6248, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5807],"int64"), Tensor([5807],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([2811, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5800, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5818, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6805, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3438, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192],"int64"), Tensor([1, 8192],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 640, 64],"float32"), tuple(slice(None,None,None),slice(None,640,None),slice(None,None,None),), Tensor([1, 640, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5814, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3036, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3579, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5818],"int64"), Tensor([5818],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5585, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5619, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6992, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8193],"int64"), Tensor([1, 8193],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5976, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5488, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5735, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([2946, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5824, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5833],"int64"), Tensor([5833],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192],"int32"), Tensor([1, 8192],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6950, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6474, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([2277, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7020, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7175, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5835, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 768, 64],"float32"), tuple(slice(None,None,None),slice(None,768,None),slice(None,None,None),), Tensor([1, 768, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6117, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5488],"int64"), Tensor([5488],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([5788],"int64"), Tensor([5788],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3795, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5840, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5824],"int64"), Tensor([5824],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 1536, 28],"float32"), tuple(slice(None,None,None),slice(None,1536,None),slice(None,None,None),), Tensor([1, 1536, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6084, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5572],"int64"), Tensor([5572],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6954, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6960, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([0, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5619],"int64"), Tensor([5619],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6911, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6351, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5840],"int64"), Tensor([5840],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7710, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5831, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5814],"int64"), Tensor([5814],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([5837],"int64"), Tensor([5837],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5788, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5572, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5544, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6391, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5670],"int64"), Tensor([5670],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7065, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([3060, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5842, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5953, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 128, 56],"float32"), tuple(slice(None,None,None),slice(None,128,None),slice(None,None,None),), Tensor([1, 128, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5548, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5825],"int64"), Tensor([5825],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5555, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5876, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6255, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5953],"int64"), Tensor([5953],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7200, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6870, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([5801, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6976, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([5555],"int64"), Tensor([5555],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 256, 64],"float32"), tuple(slice(None,None,None),slice(None,256,None),slice(None,None,None),), Tensor([1, 256, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([5849],"int64"), Tensor([5849],"bool"), 0, )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([6502, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 256, 56],"float32"), tuple(slice(None,None,None),slice(None,256,None),slice(None,None,None),), Tensor([1, 256, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 512, 56],"float32"), tuple(slice(None,None,None),slice(None,512,None),slice(None,None,None),), Tensor([1, 512, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 1],"float32"), Tensor([1, 8192],"bool"), Tensor([7052, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192],"bool"), tuple(slice(None,None,None),0,), 1, )
paddle.Tensor.put_along_axis(Tensor([4096, 64],"float32"), Tensor([4096, 8],"int64"), Tensor([],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 6],"int64"), Tensor([],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 1],"int64"), Tensor([],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 7],"int64"), Tensor([],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 2],"int64"), Tensor([],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 4],"int64"), Tensor([],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 3],"int64"), Tensor([],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 5],"int64"), Tensor([],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([1024, 384],"float32"), Tensor([1024, 8],"int64"), Tensor([],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([1024, 8],"float32"), Tensor([1024, 4],"int64"), Tensor([],"float32"), axis=-1, )
paddle.empty_like(Tensor([4096, 64],"float32"), )
paddle.empty_like(Tensor([4096, 64],"bool"), )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([384, 1280],"bfloat16"), Tensor([384, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([8, 1280],"bfloat16"), Tensor([8, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([64, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([3072, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([64, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.nn.functional.dropout(Tensor([384, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([8, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
