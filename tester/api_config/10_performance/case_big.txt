paddle.Tensor.__abs__(Tensor([2228225, 1024],"float32"), )
paddle.Tensor.__abs__(Tensor([2281701379],"float32"), )
paddle.Tensor.__abs__(Tensor([10, 228170138],"float32"), )
paddle.Tensor.__add__(Tensor([1024, 768, 1, 1],"float32"), Tensor([1024, 768, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([33540, 80],"float32"), Tensor([33540, 80],"float32"), )
paddle.Tensor.__add__(Tensor([50, 232827, 14, 14, 1],"float32"), 1.7658252716064453, )
paddle.Tensor.__add__(Tensor([8, 256, 62, 84],"float16"), Tensor([8, 256, 62, 84],"float32"), )
paddle.Tensor.__add__(Tensor([63597, 80],"float32"), Tensor([63597, 80],"float32"), )
paddle.Tensor.__add__(Tensor([32, 8, 75, 75],"float32"), Tensor([32, 1, 1, 75],"float32"), )
paddle.Tensor.__add__(Tensor([280, 16, 18, 18],"float32"), Tensor([280, 1, 1, 18],"float32"), )
paddle.Tensor.__add__(Tensor([36511, 80],"float32"), Tensor([36511, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1, 15, 33600],"float32"), Tensor([1, 15, 33600],"float32"), )
paddle.Tensor.__add__(Tensor([2, 53, 11109],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([112, 8, 32, 36],"float32"), Tensor([112, 1, 1, 36],"float32"), )
paddle.Tensor.__add__(Tensor([4, 256, 192, 248],"float16"), Tensor([4, 256, 192, 248],"float32"), )
paddle.Tensor.__add__(Tensor([1, 218, 24276],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([15664, 80],"float32"), Tensor([15664, 80],"float32"), )
paddle.Tensor.__add__(Tensor([8247, 80],"float32"), Tensor([8247, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1, 78, 56784],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([40, 8, 98, 91],"float32"), Tensor([40, 1, 1, 91],"float32"), )
paddle.Tensor.__add__(Tensor([8, 256, 160, 144],"float32"), Tensor([8, 256, 160, 144],"float32"), )
paddle.Tensor.__add__(Tensor([1, 128, 256, 256],"float32"), Tensor([1, 128, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([4, 256, 76, 68],"float32"), Tensor([4, 256, 76, 68],"float32"), )
paddle.Tensor.__add__(Tensor([4, 256, 224, 256],"float16"), Tensor([4, 256, 224, 256],"float32"), )
paddle.Tensor.__add__(Tensor([80, 16, 59, 48],"float32"), Tensor([80, 1, 1, 48],"float32"), )
paddle.Tensor.__add__(Tensor([11594, 80],"float32"), Tensor([11594, 80],"float32"), )
paddle.Tensor.__add__(Tensor([9910, 80],"float32"), Tensor([9910, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 120, 6804],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([1, 16, 14, 18, 384],"float32"), Tensor([1, 16, 14, 18, 384],"float32"), )
paddle.Tensor.__add__(Tensor([1, 37, 65856],"float32"), Tensor([1, 37, 65856],"float32"), )
paddle.Tensor.__add__(Tensor([24, 174, 1024],"float32"), Tensor([24, 174, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([16, 34, 3549],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([4, 128, 72, 72],"float32"), Tensor([4, 128, 72, 72],"float32"), )
paddle.Tensor.__add__(Tensor([54752, 80],"float32"), Tensor([54752, 80],"float32"), )
paddle.Tensor.__add__(Tensor([16, 23, 8400],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([45580, 80],"float32"), Tensor([45580, 80],"float32"), )
paddle.Tensor.__add__(Tensor([56, 51, 512],"float32"), Tensor([56, 51, 512],"float32"), )
paddle.Tensor.__add__(Tensor([64, 63, 1024],"float32"), Tensor([64, 63, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([23, 33, 768],"float32"), Tensor([23, 33, 768],"float32"), )
paddle.Tensor.__add__(Tensor([13076, 80],"float32"), Tensor([13076, 80],"float32"), )
paddle.Tensor.__add__(Tensor([30, 1024, 4, 42],"float32"), Tensor([30, 1024, 4, 42],"float32"), )
paddle.Tensor.__add__(Tensor([8850, 80],"float32"), Tensor([8850, 80],"float32"), )
paddle.Tensor.__add__(Tensor([15300, 80],"float32"), Tensor([15300, 80],"float32"), )
paddle.Tensor.__add__(Tensor([7166, 80],"float32"), Tensor([7166, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2744, 8, 768],"float32"), Tensor([1, 8, 768],"float32"), )
paddle.Tensor.__add__(Tensor([24, 16, 173, 122],"float32"), Tensor([24, 1, 1, 122],"float32"), )
paddle.Tensor.__add__(Tensor([4, 256, 296, 288],"float32"), Tensor([4, 256, 296, 288],"float32"), )
paddle.Tensor.__add__(Tensor([24, 81, 1024],"float32"), Tensor([24, 81, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([30, 1024, 2, 28],"float32"), Tensor([30, 1024, 2, 28],"float32"), )
paddle.Tensor.__add__(Tensor([1, 58, 52500],"float32"), Tensor([1, 58, 52500],"float32"), )
paddle.Tensor.__add__(Tensor([1, 65, 24276],"float32"), Tensor([1, 65, 24276],"float32"), )
paddle.Tensor.__add__(Tensor([1, 384, 46, 46],"float32"), Tensor([1, 384, 46, 46],"float32"), )
paddle.Tensor.__add__(Tensor([64, 8, 59, 54],"float32"), Tensor([64, 1, 1, 54],"float32"), )
paddle.Tensor.__add__(Tensor([32, 16, 159, 126],"float32"), Tensor([32, 1, 1, 126],"float32"), )
paddle.Tensor.__add__(Tensor([1, 36, 33600],"float32"), Tensor([1, 36, 33600],"float32"), )
paddle.Tensor.__add__(Tensor([23032, 80],"float32"), Tensor([23032, 80],"float32"), )
paddle.Tensor.__add__(Tensor([16, 38, 7581],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([56, 8, 65, 69],"float32"), Tensor([56, 1, 1, 69],"float32"), )
paddle.Tensor.__add__(Tensor([10812, 80],"float32"), Tensor([10812, 80],"float32"), )
paddle.Tensor.__add__(Tensor([19110, 80],"float32"), Tensor([19110, 80],"float32"), )
paddle.Tensor.__add__(Tensor([2, 103, 2541],"float32"), Tensor([2, 103, 2541],"float32"), )
paddle.Tensor.__add__(Tensor([26213, 80],"float32"), Tensor([26213, 80],"float32"), )
paddle.Tensor.__add__(Tensor([20175, 80],"float32"), Tensor([20175, 80],"float32"), )
paddle.Tensor.__add__(Tensor([42804, 80],"float32"), Tensor([42804, 80],"float32"), )
paddle.Tensor.__add__(Tensor([1984, 1726],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([33300, 80],"float32"), Tensor([33300, 80],"float32"), )
paddle.Tensor.__add__(Tensor([7553, 80],"float32"), Tensor([7553, 80],"float32"), )
paddle.Tensor.__add__(Tensor([380, 9261],"float32"), 1e-10, )
paddle.Tensor.__add__(Tensor([32, 1, 241, 241],"float32"), 0.00574634, )
paddle.Tensor.__add__(Tensor([80, 8, 42, 47],"float32"), Tensor([80, 1, 1, 47],"float32"), )
paddle.Tensor.__add__(Tensor([368, 9, 512],"float32"), Tensor([368, 9, 512],"float32"), )
paddle.Tensor.__add__(Tensor([8, 15, 10164],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([216, 22, 1024],"float32"), Tensor([216, 22, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([168, 16, 26, 30],"float32"), Tensor([168, 1, 1, 30],"float32"), )
paddle.Tensor.__add__(Tensor([24, 162, 1024],"float32"), Tensor([24, 162, 1024],"float32"), )
paddle.Tensor.__add__(Tensor([72, 48, 512],"float32"), Tensor([72, 48, 512],"float32"), )
paddle.Tensor.__add__(Tensor([19128, 80],"float32"), Tensor([19128, 80],"float32"), )
paddle.Tensor.__add__(Tensor([20033, 80],"float32"), Tensor([20033, 80],"float32"), )
paddle.Tensor.__add__(Tensor([18505, 80],"float32"), Tensor([18505, 80],"float32"), )
paddle.Tensor.__add__(Tensor([176, 16, 19, 19],"float32"), Tensor([176, 1, 1, 19],"float32"), )
paddle.Tensor.__add__(Tensor([8, 3, 256, 256],"float32"), Tensor([1, 3, 1, 1],"float32"), )
paddle.Tensor.__add__(Tensor([14581, 80],"float32"), Tensor([14581, 80],"float32"), )
paddle.Tensor.__add__(Tensor([25032, 80],"float32"), Tensor([25032, 80],"float32"), )
paddle.Tensor.__add__(Tensor([190141782, 12],"float32"), 5, )
paddle.Tensor.__add__(Tensor([104, 37, 512],"float32"), Tensor([104, 37, 512],"float32"), )
paddle.Tensor.__add__(Tensor([6784, 80],"float32"), Tensor([6784, 80],"float32"), )
paddle.Tensor.__add__(Tensor([64, 16, 76, 74],"float32"), Tensor([64, 1, 1, 74],"float32"), )
paddle.Tensor.__add__(Tensor([4, 128, 64, 64],"float32"), Tensor([4, 128, 64, 64],"float32"), )
paddle.Tensor.__add__(Tensor([17440, 80],"float32"), Tensor([17440, 80],"float32"), )
paddle.Tensor.__add__(Tensor([6946, 80],"float32"), Tensor([6946, 80],"float32"), )
paddle.Tensor.__add__(Tensor([4, 256, 70, 56],"float32"), Tensor([4, 256, 70, 56],"float32"), )
paddle.Tensor.__add__(Tensor([2281701379],"float32"), -6.907755278982137, )
paddle.Tensor.__add__(Tensor([8, 21, 7581],"float32"), 1e-09, )
paddle.Tensor.__add__(Tensor([96, 8, 38, 38],"float32"), Tensor([96, 1, 1, 38],"float32"), )
paddle.Tensor.__add__(Tensor([4, 256, 72, 76],"float32"), Tensor([4, 256, 72, 76],"float32"), )
paddle.Tensor.__add__(Tensor([20636, 80],"float32"), Tensor([20636, 80],"float32"), )
paddle.Tensor.__add__(Tensor([30, 249, 256],"float32"), Tensor([30, 249, 256],"float32"), )
paddle.Tensor.__add__(Tensor([15380, 80],"float32"), Tensor([15380, 80],"float32"), )
paddle.Tensor.__add__(Tensor([43520, 80],"float32"), Tensor([43520, 80],"float32"), )
paddle.Tensor.__add__(Tensor([35098, 80],"float32"), Tensor([35098, 80],"float32"), )
paddle.Tensor.__add__(Tensor([27230, 80],"float32"), Tensor([27230, 80],"float32"), )
paddle.Tensor.__add__(Tensor([72, 16, 68, 68],"float32"), Tensor([68, 68],"float32"), )
paddle.Tensor.__add__(Tensor([11858, 80],"float32"), Tensor([11858, 80],"float32"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 25],"bool"), Tensor([1, 1, 91268056, 25],"bool"), )
paddle.Tensor.__and__(Tensor([1, 570425345, 4],"bool"), Tensor([1, 570425345, 4],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 1, 99204408, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1, 38367, 4],"bool"), Tensor([14868, 38367, 4],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([15489, 36828, 4],"bool"), Tensor([1, 36828, 4],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([142606337, 16],"bool"), Tensor([142606337, 16],"bool"), )
paddle.Tensor.__and__(Tensor([99204408, 1, 1, 23],"bool"), Tensor([1, 1, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.Tensor.__and__(Tensor([1, 99204408, 1, 23],"bool"), Tensor([1, 99204408, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.Tensor.__and__(Tensor([89409, 6380, 4],"bool"), Tensor([1, 6380, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 38367, 59471],"bool"), Tensor([1, 38367, 59471],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 26],"bool"), Tensor([1, 87757746, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([1, 106106, 21504],"bool"), Tensor([1, 106106, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([91268056, 1, 1, 25],"bool"), Tensor([91268056, 1, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([4245, 25, 21504],"bool"), Tensor([4245, 25, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([87757746, 1, 1, 26],"bool"), Tensor([87757746, 1, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 26],"bool"), Tensor([1, 1, 87757746, 26],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 95070891, 24],"bool"), Tensor([1, 1, 95070891, 24],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 99204408, 23],"bool"), Tensor([1, 1, 99204408, 23],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 1140850690],"bool"), Tensor([2, 1140850690],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.Tensor.__and__(Tensor([1, 95070891, 1, 24],"bool"), Tensor([1, 95070891, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([66717, 8550, 4],"bool"), Tensor([66717, 8550, 4],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([66717, 8550, 4],"bool"), Tensor([1, 8550, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 91268056, 1, 25],"bool"), Tensor([1, 91268056, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 25],"bool"), Tensor([91268056, 1, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([228170138, 10],"bool"), Tensor([228170138, 10],"bool"), )
paddle.Tensor.__and__(Tensor([1, 36828, 4],"bool"), Tensor([15489, 36828, 4],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([1, 6380, 357634],"bool"), Tensor([1, 6380, 357634],"bool"), )
paddle.Tensor.__and__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.Tensor.__and__(Tensor([5704254, 1, 20, 20],"bool"), Tensor([5704254, 1, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__and__(Tensor([1, 1, 87757746, 26],"bool"), Tensor([1, 1, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([91268056, 1, 1, 25],"bool"), Tensor([1, 1, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.Tensor.__and__(Tensor([1, 1, 91268056, 25],"bool"), Tensor([1, 1, 1, 25],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([1, 25, 21504],"bool"), Tensor([4245, 25, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 2048, 2048],"bool"), Tensor([1, 1, 2048, 2048],"bool"), )
paddle.Tensor.__and__(Tensor([87757746, 1, 1, 26],"bool"), Tensor([1, 1, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([1, 95070891, 1, 24],"bool"), Tensor([1, 1, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([285212673, 8],"bool"), Tensor([285212673, 8],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([14868, 38367, 4],"bool"), Tensor([1, 38367, 4],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 24],"bool"), Tensor([1, 95070891, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([1, 87757746, 1, 26],"bool"), Tensor([1, 1, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([15489, 36828, 4],"bool"), Tensor([15489, 36828, 4],"bool"), )
paddle.Tensor.__and__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([4, 1, 396, 396],"bool"), Tensor([4, 1, 396, 396],"bool"), )
paddle.Tensor.__and__(Tensor([1, 36828, 61956],"bool"), Tensor([1, 36828, 61956],"bool"), )
paddle.Tensor.__and__(Tensor([1140850690, 2],"bool"), Tensor([1140850690, 2],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([1, 25, 91268056],"bool"), Tensor([1, 25, 91268056],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 2281701379],"bool"), Tensor([1, 1, 1, 2281701379],"bool"), )
paddle.Tensor.__and__(Tensor([1, 5704254, 20, 20],"bool"), Tensor([1, 5704254, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 20, 20],"bool"), Tensor([5704254, 1, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([1, 99204408, 1, 23],"bool"), Tensor([1, 1, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 91268056, 25],"bool"), Tensor([1, 1, 91268056, 25],"bool"), )
paddle.Tensor.__and__(Tensor([99204408, 1, 1, 23],"bool"), Tensor([99204408, 1, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 23],"bool"), Tensor([1, 99204408, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 20, 114085069],"bool"), Tensor([1, 1, 20, 114085069],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.Tensor.__and__(Tensor([14868, 38367, 4],"bool"), Tensor([14868, 38367, 4],"bool"), )
paddle.Tensor.__and__(Tensor([8, 1, 512, 512],"bool"), Tensor([8, 1, 512, 512],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.Tensor.__and__(Tensor([13, 1, 1007, 1007],"bool"), Tensor([13, 1, 1007, 1007],"bool"), )
paddle.Tensor.__and__(Tensor([89409, 6380, 4],"bool"), Tensor([89409, 6380, 4],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([1, 25, 21504],"bool"), Tensor([1, 25, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 99204408, 23],"bool"), Tensor([1, 1, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([4245, 25, 21504],"bool"), Tensor([1, 25, 21504],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.Tensor.__and__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 24],"bool"), Tensor([95070891, 1, 1, 24],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 1, 23],"bool"), Tensor([99204408, 1, 1, 23],"bool"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.Tensor.__and__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.Tensor.__and__(Tensor([1, 87757746, 1, 26],"bool"), Tensor([1, 87757746, 1, 26],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 20, 20],"bool"), Tensor([1, 5704254, 20, 20],"bool"), )
paddle.Tensor.__and__(Tensor([1, 1, 87757746, 26],"bool"), Tensor([1, 1, 87757746, 26],"bool"), )
paddle.Tensor.__div__(Tensor([4456449, 16, 32],"float32"), 2, )
paddle.Tensor.__div__(Tensor([8, 8912897, 32],"float32"), 2, )
paddle.Tensor.__div__(Tensor([8, 16, 17825793],"float32"), 2, )
paddle.Tensor.__eq__(Tensor([1468236],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([31, 286464],"float32"), Tensor([31, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([6, 252195],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([11, 375984],"float32"), Tensor([11, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([6, 269586],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 130001, )
paddle.Tensor.__eq__(Tensor([1217472],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([325957340, 7, 1],"int32"), Tensor([325957340, 1, 7],"int32"), )
paddle.Tensor.__eq__(Tensor([1014705],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([5, 330429],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([21, 302832],"float32"), Tensor([21, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([15, 241731],"float32"), Tensor([15, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([31, 66960],"float32"), Tensor([31, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 128, 1782580, 10],"float32"), Tensor([1, 128, 1782580, 10],"float32"), )
paddle.Tensor.__eq__(Tensor([7, 375984],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([285212673, 8, 1, 1],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__eq__(Tensor([17, 171888],"float32"), Tensor([17, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([5, 340686],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 800, 3051],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([19, 208692],"float32"), Tensor([19, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([18, 59295],"float32"), Tensor([18, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([55, 349866],"float32"), Tensor([55, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([28, 303858],"float32"), Tensor([28, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 138, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 108, )
paddle.Tensor.__eq__(Tensor([7, 320739],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2148552],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([2801424],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([13, 262194],"float32"), Tensor([13, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2148480],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([3104256],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([2793240],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([5, 309255],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 800, 1261],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([16, 304368],"float32"), Tensor([16, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2504304],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([28, 322272],"float32"), Tensor([28, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([13, 7, 25073642],"int64"), Tensor([13, 1, 25073642],"int64"), )
paddle.Tensor.__eq__(Tensor([19, 304368],"float32"), Tensor([19, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1022957],"int64"), 1, )
paddle.Tensor.__eq__(Tensor([19, 245520],"float32"), Tensor([19, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([17, 80640],"float32"), Tensor([17, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([17, 83070],"float32"), Tensor([17, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 113, )
paddle.Tensor.__eq__(Tensor([17, 223827],"float32"), Tensor([17, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([22152441, 103],"int64"), 2, )
paddle.Tensor.__eq__(Tensor([8, 236334],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1632708],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([6, 255780],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 800, 1261],"int64"), 0, )
paddle.Tensor.__eq__(Tensor([14, 79380],"float32"), Tensor([14, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([13, 369303],"float32"), Tensor([13, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([23, 243474],"float32"), Tensor([23, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1816992],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([22, 50250],"float32"), Tensor([22, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([36, 331452],"float32"), Tensor([36, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([14, 78750],"float32"), Tensor([14, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([22, 57240],"float32"), Tensor([22, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([557057, 1024, 2, 2],"float32"), Tensor([1, 1024, 2, 2],"float32"), )
paddle.Tensor.__eq__(Tensor([1790616],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([3, 349155],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 97, )
paddle.Tensor.__eq__(Tensor([14, 278256],"float32"), Tensor([14, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([22, 196416],"float32"), Tensor([22, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([3, 408177],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([7, 190296],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([13, 205923],"float32"), Tensor([13, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1460844],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([16, 182391],"float32"), Tensor([16, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([7, 286977],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([5, 333018],"float32"), Tensor([5, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1600176],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([25, 286977],"float32"), Tensor([25, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1360704],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([64, 144, 144],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([21, 57000],"float32"), Tensor([21, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([18, 245823],"float32"), Tensor([18, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([8, 253728],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([1, 102, 22369622],"float32"), 0, )
paddle.Tensor.__eq__(Tensor([20, 331251],"float32"), Tensor([20, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([17, 303858],"float32"), Tensor([17, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([760567127, 3],"float32"), -1.0, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 57, )
paddle.Tensor.__eq__(Tensor([3, 354501],"float32"), Tensor([3, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([16, 299250],"float32"), Tensor([16, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([325957340, 7],"int64"), 255, )
paddle.Tensor.__eq__(Tensor([2281701379],"int64"), 69, )
paddle.Tensor.__eq__(Tensor([22, 322245],"float32"), Tensor([22, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([4, 570425345, 1, 1],"int32"), Tensor([2, 3],"int32"), )
paddle.Tensor.__eq__(Tensor([8, 230202],"float32"), Tensor([8, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([26, 313347],"float32"), Tensor([26, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([24, 347820],"float32"), Tensor([24, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([18, 223827],"float32"), Tensor([18, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([253522376, 9],"float32"), math.inf, )
paddle.Tensor.__eq__(Tensor([1, 800, 1422],"int32"), 0, )
paddle.Tensor.__eq__(Tensor([7, 236616],"float32"), Tensor([7, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([2455200],"int32"), 1, )
paddle.Tensor.__eq__(Tensor([53, 56700],"float32"), Tensor([53, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([18, 295647],"float32"), Tensor([18, 1],"float32"), )
paddle.Tensor.__eq__(Tensor([6, 331452],"float32"), Tensor([6, 1],"float32"), )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int64"), 7, )
paddle.Tensor.__floordiv__(Tensor([114085069, 20],"int32"), Tensor([114085069, 20],"int32"), )
paddle.Tensor.__floordiv__(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([1140850690, 2],"int64"), 32000, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"float32"), 1, )
paddle.Tensor.__floordiv__(Tensor([570425345, 4],"int64"), 256000, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"float16"), 1, )
paddle.Tensor.__floordiv__(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([570425345, 4],"int64"), 100, )
paddle.Tensor.__floordiv__(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int64"), Tensor([1],"int64"), )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"bfloat16"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"float16"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 1140850690],"int64"), 99, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"float16"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"bool"), 1, )
paddle.Tensor.__floordiv__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.Tensor.__floordiv__(Tensor([380283564, 3, 2],"bfloat16"), Tensor([380283564, 3, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"uint8"), 1, )
paddle.Tensor.__floordiv__(Tensor([4, 285212673, 2],"bfloat16"), Tensor([4, 285212673, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"bfloat16"), )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"float16"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"float32"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 570425345, 2],"int64"), 2, )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int64"), 2, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"int8"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"float32"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"float32"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"float32"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"float32"), 1, )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"bfloat16"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"float16"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"bfloat16"), )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int32"), 2, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"int8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"int64"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"int32"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([1, 2281701379],"int64"), 32000, )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"bfloat16"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"uint8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"int8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"bfloat16"), 1, )
paddle.Tensor.__floordiv__(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float64"), )
paddle.Tensor.__floordiv__(Tensor([570425345, 2, 2],"int64"), 2, )
paddle.Tensor.__floordiv__(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float16"), )
paddle.Tensor.__floordiv__(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.__floordiv__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"bfloat16"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__floordiv__(Tensor([4, 536870913, 2],"bfloat16"), Tensor([4, 536870913, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([570425345, 4],"int64"), 256, )
paddle.Tensor.__floordiv__(Tensor([285212673, 8],"int64"), 32000, )
paddle.Tensor.__floordiv__(Tensor([570425345, 4],"int64"), 123, )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.Tensor.__floordiv__(Tensor([2, 3, 715827883],"uint8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([2, 1140850690],"int64"), 256, )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"bool"), 1, )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"uint8"), 1, )
paddle.Tensor.__floordiv__(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([285212673, 8],"int64"), 99, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"int8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([1, 2281701379],"int64"), 99, )
paddle.Tensor.__floordiv__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__floordiv__(Tensor([190141782, 3, 4],"bool"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"bfloat16"), )
paddle.Tensor.__floordiv__(Tensor([570425345, 4],"int64"), 32000, )
paddle.Tensor.__floordiv__(Tensor([2228225, 1024],"float32"), Tensor([2228225, 1024],"float16"), )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"float16"), 1, )
paddle.Tensor.__floordiv__(Tensor([1140850690, 2],"int64"), 100, )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"uint8"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"bool"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([10, 228170138],"int64"), Tensor([10, 228170138],"int64"), )
paddle.Tensor.__floordiv__(Tensor([1],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.__floordiv__(Tensor([2, 1140850690],"int64"), 256000, )
paddle.Tensor.__floordiv__(Tensor([1140850690, 2],"int64"), 256000, )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([2228225, 1024],"int64"), Tensor([2228225, 1024],"int64"), )
paddle.Tensor.__floordiv__(Tensor([357913942, 3, 4],"uint8"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([1, 2281701379],"int64"), 250054, )
paddle.Tensor.__floordiv__(Tensor([2, 536870913, 4],"int8"), 1, )
paddle.Tensor.__floordiv__(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"bfloat16"), )
paddle.Tensor.__floordiv__(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.Tensor.__floordiv__(Tensor([10, 228170138],"int32"), Tensor([10, 228170138],"int32"), )
paddle.Tensor.__floordiv__(Tensor([2, 1140850690],"int64"), 123, )
paddle.Tensor.__floordiv__(Tensor([4, 536870913, 2],"bfloat16"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__floordiv__(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float64"), )
paddle.Tensor.__floordiv__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.__floordiv__(Tensor([2, 285212673, 4],"int64"), 1, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"bool"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([4, 570425345],"int64"), 4, )
paddle.Tensor.__floordiv__(Tensor([2, 3, 380283564],"int32"), 1.0, )
paddle.Tensor.__floordiv__(Tensor([1140850690, 2],"int64"), 256, )
paddle.Tensor.__ge__(Tensor([1178496],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2281701379],"int64"), 5, )
paddle.Tensor.__ge__(Tensor([1006704],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([15171, 150402],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([1145856],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float64"), )
paddle.Tensor.__ge__(Tensor([1878432],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([8388609, 512],"float16"), 127, )
paddle.Tensor.__ge__(Tensor([1043460],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2332440],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1074276],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1113024],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1761732],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2347176],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2021448],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.__ge__(Tensor([1739304],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1074240],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1197000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1173588],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1362744],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([4294967297, 1],"float16"), 0.0, )
paddle.Tensor.__ge__(Tensor([1237020],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1059912],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2148480],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2274877, 1003],"float32"), 0.5, )
paddle.Tensor.__ge__(Tensor([2946240],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.Tensor.__ge__(Tensor([1046724],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1546776],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([228170138, 5, 2],"float32"), 1, )
paddle.Tensor.__ge__(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), 0.5, )
paddle.Tensor.__ge__(Tensor([2643432],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1031184],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1203048],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2684544],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2664144],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1839720],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([38028357, 60],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), 4, )
paddle.Tensor.__ge__(Tensor([1473120],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1418004],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1554960],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([3020112],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.Tensor.__ge__(Tensor([1008780],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([4563403, 500],"float32"), -1.0, )
paddle.Tensor.__ge__(Tensor([11408507, 200],"float32"), Tensor([11408507, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([2119824],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2220312],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([21559, 105840],"float32"), 0.7, )
paddle.Tensor.__ge__(Tensor([2936472],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2952840],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__ge__(Tensor([1431655766, 3],"float16"), 0.0, )
paddle.Tensor.__ge__(Tensor([10, 429496730],"float16"), 1, )
paddle.Tensor.__ge__(Tensor([2852328],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2836008],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2910334, 784],"float32"), -18, )
paddle.Tensor.__ge__(Tensor([1, 14260634, 160],"float32"), Tensor([13, 14260634, 1],"float32"), )
paddle.Tensor.__ge__(Tensor([1068120],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([21298, 107136],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([162978670, 14],"int64"), 160, )
paddle.Tensor.__ge__(Tensor([1246140],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2226048],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1438452],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1276800],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2029824],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2097552],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2281701379],"int64"), 0, )
paddle.Tensor.__ge__(Tensor([2504304],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2782560],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2537280],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2265336],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2, 8, 4194305, 64],"float16"), 127, )
paddle.Tensor.__ge__(Tensor([2565912],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([134218, 32000],"float16"), Tensor([1, 1],"float16"), )
paddle.Tensor.__ge__(Tensor([3609144],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2394000],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2005248],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([7, 325957340],"int64"), 160, )
paddle.Tensor.__ge__(Tensor([1166220],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1252152],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), 3.0, )
paddle.Tensor.__ge__(Tensor([1080384],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1468236],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2086920],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1010724],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2, 2147483649],"float16"), 0.0, )
paddle.Tensor.__ge__(Tensor([1110156],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__ge__(Tensor([1400712],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([4456449, 512],"float32"), 0.6, )
paddle.Tensor.__ge__(Tensor([2363544],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([2578176],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([1253388],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([10, 228170138],"int32"), 0, )
paddle.Tensor.__ge__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.__ge__(Tensor([10, 228170138],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([41841, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([21765, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([25515, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([20550, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([48858, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([26964, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2281701379],"float32"), 1, )
paddle.Tensor.__gt__(Tensor([44050, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([16, 43, 10164],"float32"), Tensor([16, 43, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([14201, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([18828, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([33626, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([30912, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([14664, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([23775, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([13, 349866],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([23748, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([46683, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([32460, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([25, 277539],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 44, 52500],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([4, 23, 12096],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([15, 249405],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([16760, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([28800, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([36897, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([64, 35, 1726],"float32"), Tensor([64, 35, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([39806, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([22078, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 43, 33600],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([16, 77, 2541],"float32"), Tensor([16, 77, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([13576, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([14832, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10, 196416],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([17906, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([9, 301302],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([13920, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 88, 10164],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([56430, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([40225, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([39577, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 37, 56784],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([8, 28, 6069],"float32"), Tensor([8, 28, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([12864, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 43, 65856],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([64, 21, 1360],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([32800, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([49970, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([32736, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([27, 359613],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 145, 7581],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([20, 322272],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([21540, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([14220, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([18882, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([13752, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([11, 331251],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([29, 66240],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([17864, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 300, 136, 136],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 38, 56784],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([2, 114, 6069],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([6, 330429],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([47936, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([17192, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([19840, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([15960, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 400, 11109],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([1, 49, 37044],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([15, 317160],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([14144, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([13500, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([7, 229455],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([4, 94, 6068355],"float32"), 80, )
paddle.Tensor.__gt__(Tensor([8, 28, 7581],"float32"), Tensor([8, 28, 1],"float32"), )
paddle.Tensor.__gt__(Tensor([38240, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([22372, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([127044, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([10, 295647],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([42015, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([64, 18, 1726],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([65008, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([16344, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([40125, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([3, 369105],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2, 92, 8400],"float32"), 1e-09, )
paddle.Tensor.__gt__(Tensor([15141, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([5, 245520],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([16640, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([25143, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([1, 46, 40656],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([7, 248616],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([17, 349866],"float32"), 0, )
paddle.Tensor.__gt__(Tensor([2281701379],"int32"), 5, )
paddle.Tensor.__gt__(Tensor([15400, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([20088, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([13872, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([71484, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([19565, 80],"float32"), 0.0, )
paddle.Tensor.__gt__(Tensor([2, 118, 5376],"float32"), 1e-09, )
paddle.Tensor.__le__(Tensor([25968, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([32340, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([23496, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2, 524289, 64, 64],"float16"), -127, )
paddle.Tensor.__le__(Tensor([83743, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([32295, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([31740, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([21618, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([17964, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([33432, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([41316, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([76551, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([13245, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([33860, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([14744, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([23030, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([22539, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([13416, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([24864, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([16272, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12761, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([13167, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([21048, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([22074, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([24984, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([14927, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([31926, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([14166, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([20940, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([43176, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([181386, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([60102, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([36234, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([43398, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([16032, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([14686, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([47080, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([22128, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([22065, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([13280, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([23597, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([22680, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([23454, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([22323, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([43280, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([19974, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([145656, 11],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([14545, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([24750, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([24160, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([31480, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([23106, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([19010, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([24678, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([16248, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([43420, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12505, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([570425345, 2, 2],"int64"), Tensor([570425345, 2, 1],"int64"), )
paddle.Tensor.__le__(Tensor([14814, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([44142, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12585, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([33502, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([38259, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([54944, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([69940, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([41520, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([48763, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([15330, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([70496, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([73346, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([49120, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([21390, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([18102, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([24297, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([18540, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([28455, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12824, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([22049, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([18809, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([43795, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([15804, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([2, 162978670, 7],"float32"), 0.1111111111111111, )
paddle.Tensor.__le__(Tensor([21197, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([26502, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([20168, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([13680, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([44224, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([41668, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([25982, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([22216, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([43708, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([12640, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([24975, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([30792, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([43074, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([23639, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([13408, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([33423, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([23910, 80],"float32"), 0.0, )
paddle.Tensor.__le__(Tensor([21765, 80],"float32"), 0.0, )
paddle.Tensor.__len__(Tensor([3, 715827883, 2],"float16"), )
paddle.Tensor.__len__(Tensor([1, 3241054, 704],"float32"), )
paddle.Tensor.__len__(Tensor([325957340, 7, 1],"int32"), )
paddle.Tensor.__len__(Tensor([3, 8, 256, 314],"float32"), )
paddle.Tensor.__len__(Tensor([91268056, 5, 5],"float32"), )
paddle.Tensor.__len__(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.__len__(Tensor([1000110],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2674, 800, 1067],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 1906184, 1197],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1500, 1024],"float32"), )
paddle.Tensor.__len__(Tensor([2639, 1, 800, 1081],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1500, 768],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1590],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2281701379],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 4456449, 512],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 2126470, 1073],"int64"), )
paddle.Tensor.__len__(Tensor([1019733],"float32"), )
paddle.Tensor.__len__(Tensor([16, 3, 224, 224],"float32"), )
paddle.Tensor.__len__(Tensor([1, 5941931, 384],"float32"), )
paddle.Tensor.__len__(Tensor([1025994],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 1901418, 1200],"int64"), )
paddle.Tensor.__len__(Tensor([2281701379, 1],"int64"), )
paddle.Tensor.__len__(Tensor([200, 39, 20895, 14, 1],"float32"), )
paddle.Tensor.__len__(Tensor([10, 228170138],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 3961288, 576],"float32"), )
paddle.Tensor.__len__(Tensor([1000, 1140851, 2],"float32"), )
paddle.Tensor.__len__(Tensor([3, 380283564, 2],"float32"), )
paddle.Tensor.__len__(Tensor([1520121, 1501, 1],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 1970382, 1158],"int64"), )
paddle.Tensor.__len__(Tensor([3, 3, 253522376],"int32"), )
paddle.Tensor.__len__(Tensor([1, 139265, 32, 512],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1424],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2538, 800, 1124],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2449, 800, 1165],"int64"), )
paddle.Tensor.__len__(Tensor([50, 30403, 1501],"float32"), )
paddle.Tensor.__len__(Tensor([3548, 12, 170, 1],"float32"), )
paddle.Tensor.__len__(Tensor([2971, 1500, 512],"float32"), )
paddle.Tensor.__len__(Tensor([3, 5, 152113426],"float32"), )
paddle.Tensor.__len__(Tensor([22817014, 100],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1782580, 1280],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2177, 1024, 1024],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1440],"int64"), )
paddle.Tensor.__len__(Tensor([142606337, 16],"float32"), )
paddle.Tensor.__len__(Tensor([1, 131073, 32, 544],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2518, 800, 1133],"int64"), )
paddle.Tensor.__len__(Tensor([8705, 1, 512, 512],"int64"), )
paddle.Tensor.__len__(Tensor([3, 8, 256, 454],"float32"), )
paddle.Tensor.__len__(Tensor([50, 1501, 30403],"float32"), )
paddle.Tensor.__len__(Tensor([10000, 100],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2751, 800, 1037],"int64"), )
paddle.Tensor.__len__(Tensor([101, 22591103],"float32"), )
paddle.Tensor.__len__(Tensor([139265, 1, 32, 512],"float32"), )
paddle.Tensor.__len__(Tensor([10000, 228171],"float32"), )
paddle.Tensor.__len__(Tensor([106106, 1, 32, 672],"float32"), )
paddle.Tensor.__len__(Tensor([1013, 1501, 1501],"float32"), )
paddle.Tensor.__len__(Tensor([1000, 2001, 2],"float32"), )
paddle.Tensor.__len__(Tensor([1010673],"float32"), )
paddle.Tensor.__len__(Tensor([3, 8, 256, 372],"float32"), )
paddle.Tensor.__len__(Tensor([1010616],"float32"), )
paddle.Tensor.__len__(Tensor([2281701379],"float32"), )
paddle.Tensor.__len__(Tensor([2449, 1, 800, 1165],"int64"), )
paddle.Tensor.__len__(Tensor([1013482],"float32"), )
paddle.Tensor.__len__(Tensor([1, 4194305, 544],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2401, 800, 1188],"int64"), )
paddle.Tensor.__len__(Tensor([100, 60684, 376],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 1958542, 1165],"int64"), )
paddle.Tensor.__len__(Tensor([1, 123791, 32, 576],"float32"), )
paddle.Tensor.__len__(Tensor([200, 58207, 14, 14, 1],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 2852127],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 800, 1488],"int64"), )
paddle.Tensor.__len__(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.__len__(Tensor([7711, 544, 544],"float32"), )
paddle.Tensor.__len__(Tensor([3, 8, 256, 340],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 2228225, 1024],"int64"), )
paddle.Tensor.__len__(Tensor([1, 704, 3241054],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 1956863, 1166],"int64"), )
paddle.Tensor.__len__(Tensor([3802836, 30, 20],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 512, 4456449],"int64"), )
paddle.Tensor.__len__(Tensor([3, 286331154, 5],"float16"), )
paddle.Tensor.__len__(Tensor([1, 1, 1024, 1024],"int64"), )
paddle.Tensor.__len__(Tensor([2659, 1, 800, 1073],"int64"), )
paddle.Tensor.__len__(Tensor([1, 1, 1920625, 1188],"int64"), )
paddle.Tensor.__len__(Tensor([2656, 1, 800, 1074],"int64"), )
paddle.Tensor.__len__(Tensor([4148, 27504, 20],"float32"), )
paddle.Tensor.__len__(Tensor([713032, 3200],"float32"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 640],"float32"), )
paddle.Tensor.__len__(Tensor([1037889],"float32"), )
paddle.Tensor.__len__(Tensor([1, 1, 4194305, 544],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2617, 800, 1090],"int64"), )
paddle.Tensor.__len__(Tensor([2281701379, 1],"int32"), )
paddle.Tensor.__len__(Tensor([23211, 1, 192, 512],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2463, 800, 1158],"int64"), )
paddle.Tensor.__len__(Tensor([1, 8705, 512, 512],"int64"), )
paddle.Tensor.__len__(Tensor([100000, 22818],"float32"), )
paddle.Tensor.__len__(Tensor([1000, 2281702],"float32"), )
paddle.Tensor.__len__(Tensor([8, 3, 512, 512],"float32"), )
paddle.Tensor.__len__(Tensor([1005783],"float32"), )
paddle.Tensor.__len__(Tensor([1, 2373, 800, 1202],"int64"), )
paddle.Tensor.__len__(Tensor([30, 1, 64, 672],"float32"), )
paddle.Tensor.__len__(Tensor([570425345, 4],"float32"), )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int16"), Tensor([21474837],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.Tensor.__lshift__(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), )
paddle.Tensor.__lshift__(Tensor([4294967297],"int16"), Tensor([1],"int16"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.Tensor.__lshift__(Tensor([11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.Tensor.__lshift__(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.Tensor.__lshift__(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), )
paddle.Tensor.__lshift__(Tensor([11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int8"), Tensor([21474837],"int8"), )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.Tensor.__lshift__(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), )
paddle.Tensor.__lshift__(Tensor([11408507],"int32"), Tensor([200, 11408507],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int32"), Tensor([11408507],"int32"), )
paddle.Tensor.__lshift__(Tensor([4294967297],"int16"), Tensor([1],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([4294967297],"int16"), Tensor([4294967297],"int16"), )
paddle.Tensor.__lshift__(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int16"), Tensor([21474837],"int16"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), )
paddle.Tensor.__lshift__(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"uint8"), Tensor([21474837],"uint8"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"uint8"), Tensor([21474837],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), )
paddle.Tensor.__lshift__(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.Tensor.__lshift__(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int64"), Tensor([11408507],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.Tensor.__lshift__(Tensor([21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([1],"int16"), Tensor([4294967297],"int16"), )
paddle.Tensor.__lshift__(Tensor([11408507],"int64"), Tensor([200, 11408507],"int64"), False, )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int64"), Tensor([11408507],"int64"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int8"), Tensor([21474837],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.Tensor.__lshift__(Tensor([21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.Tensor.__lshift__(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.Tensor.__lshift__(Tensor([21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.Tensor.__lshift__(Tensor([1],"int16"), Tensor([4294967297],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([200, 11408507],"int32"), Tensor([11408507],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.Tensor.__lshift__(Tensor([4294967297],"int16"), Tensor([4294967297],"int16"), False, )
paddle.Tensor.__lshift__(Tensor([21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.__lshift__(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.Tensor.__lshift__(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 15, )
paddle.Tensor.__lt__(Tensor([12, 20, 17895698],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([47159, 12096, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([570425345, 4],"int64"), 3, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 0.45, )
paddle.Tensor.__lt__(Tensor([12, 128, 40, 37138],"float32"), 0.012311480455524772, )
paddle.Tensor.__lt__(Tensor([4, 2, 5, 57042535],"float32"), 0.55, )
paddle.Tensor.__lt__(Tensor([38028357, 60],"int32"), 2, )
paddle.Tensor.__lt__(Tensor([15489, 36828, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([12, 95070891, 2],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), Tensor([10, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([14260634, 1, 160],"float32"), Tensor([14260634, 1, 1],"float32"), )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), Tensor([1],"int64"), )
paddle.Tensor.__lt__(Tensor([174763, 3, 64, 128],"float16"), 1, )
paddle.Tensor.__lt__(Tensor([2228225, 1024],"float32"), Tensor([2228225, 1024],"float32"), )
paddle.Tensor.__lt__(Tensor([4, 4, 128, 1114113],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([14, 162978670],"int64"), -160, )
paddle.Tensor.__lt__(Tensor([11, 17, 22967740],"int16"), 0, )
paddle.Tensor.__lt__(Tensor([11, 39045158, 10],"int16"), 0, )
paddle.Tensor.__lt__(Tensor([256, 3, 64, 128],"float64"), 1, )
paddle.Tensor.__lt__(Tensor([14260634, 160, 1],"float32"), Tensor([14260634, 1, 1],"float32"), )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 4, )
paddle.Tensor.__lt__(Tensor([7761, 3, 280, 350],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 0, )
paddle.Tensor.__lt__(Tensor([2, 3, 4, 178956971],"int8"), 0, )
paddle.Tensor.__lt__(Tensor([760567127, 3],"int64"), 4, )
paddle.Tensor.__lt__(Tensor([228170138, 10],"int64"), 4, )
paddle.Tensor.__lt__(Tensor([2, 107374183, 4, 5],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([2281701379, 1],"float32"), 0.7853981633974483, )
paddle.Tensor.__lt__(Tensor([22084, 103320],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([71582789, 3, 4, 5],"int8"), 0, )
paddle.Tensor.__lt__(Tensor([134217729, 17],"int64"), 2, )
paddle.Tensor.__lt__(Tensor([325957340, 7],"int64"), Tensor([325957340, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([51349, 11109, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__lt__(Tensor([5, 5, 91268056],"int64"), 10, )
paddle.Tensor.__lt__(Tensor([200, 11408507],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([2281701379, 1],"int64"), 2, )
paddle.Tensor.__lt__(Tensor([4456449, 512],"float32"), 0.7, )
paddle.Tensor.__lt__(Tensor([12, 512, 10, 37138],"float32"), 0.017361111111111105, )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), 0, )
paddle.Tensor.__lt__(Tensor([20, 1, 419431, 272],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([1],"int32"), Tensor([2281701379],"int32"), )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), 11, )
paddle.Tensor.__lt__(Tensor([14868, 38367, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([2097152],"float32"), 0.7, )
paddle.Tensor.__lt__(Tensor([12, 512, 37138, 10],"float32"), 0.017361111111111105, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 0.35, )
paddle.Tensor.__lt__(Tensor([1, 1, 10, 228170138],"int64"), Tensor([1, 1, 1, 228170138],"int64"), )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), 4, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 1, )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 1],"int64"), Tensor([1, 1, 1, 2281701379],"int64"), )
paddle.Tensor.__lt__(Tensor([4194304],"float32"), 0.7, )
paddle.Tensor.__lt__(Tensor([12, 256, 20, 37138],"float32"), 0.01371742112482853, )
paddle.Tensor.__lt__(Tensor([7012, 3, 298, 364],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([5, 91268056, 5],"int32"), 10, )
paddle.Tensor.__lt__(Tensor([32, 71303169],"float32"), 1e-08, )
paddle.Tensor.__lt__(Tensor([71303169, 32],"float32"), 1e-08, )
paddle.Tensor.__lt__(Tensor([17, 134217729],"int64"), 2, )
paddle.Tensor.__lt__(Tensor([4, 157920, 7],"float32"), 0.1111111111111111, )
paddle.Tensor.__lt__(Tensor([3, 95070891, 2, 4],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([56123, 10164, 4],"float32"), 0.99, )
paddle.Tensor.__lt__(Tensor([71582789, 3, 4, 5],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([657931, 3, 34, 34],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([2274877, 1003],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([37, 61667605],"float32"), 1e-08, )
paddle.Tensor.__lt__(Tensor([4, 1782580, 5, 64],"float32"), 0.55, )
paddle.Tensor.__lt__(Tensor([162978670, 14],"int64"), -160, )
paddle.Tensor.__lt__(Tensor([357913942, 12],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([570425345, 1, 4],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([2281701379],"int64"), 5, )
paddle.Tensor.__lt__(Tensor([1, 1, 1, 1],"int64"), Tensor([2281701379, 1, 1, 1],"int64"), )
paddle.Tensor.__lt__(Tensor([325957340, 7],"int64"), 8, )
paddle.Tensor.__lt__(Tensor([21559, 105840],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([2, 3, 143165577, 5],"int8"), 0, )
paddle.Tensor.__lt__(Tensor([38028357, 60],"int32"), 20, )
paddle.Tensor.__lt__(Tensor([4, 570425345],"int32"), Tensor([4, 570425345],"int32"), )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), 10, )
paddle.Tensor.__lt__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__lt__(Tensor([4, 570425345],"float32"), Tensor([4, 570425345],"float32"), )
paddle.Tensor.__lt__(Tensor([22817014, 100],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([57042535, 20, 2],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([38028357, 60],"int32"), 30, )
paddle.Tensor.__lt__(Tensor([2, 3, 4, 178956971],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([8, 17, 5, 6, 1052689],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([1100, 1100],"float32"), 0, )
paddle.Tensor.__lt__(Tensor([727584, 56, 56],"int64"), 8, )
paddle.Tensor.__lt__(Tensor([5309, 3, 352, 407],"float32"), 0.5, )
paddle.Tensor.__lt__(Tensor([2, 1, 1140850690],"float32"), 0.3, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 1e-09, )
paddle.Tensor.__lt__(Tensor([30, 76056713],"int32"), 30, )
paddle.Tensor.__lt__(Tensor([2281701379],"int32"), -5, )
paddle.Tensor.__lt__(Tensor([4, 4, 1114113, 128],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([2281701379],"float32"), 0.7, )
paddle.Tensor.__lt__(Tensor([1],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.__lt__(Tensor([55189, 1, 152, 272],"float32"), 1, )
paddle.Tensor.__lt__(Tensor([4, 570425345, 1],"float32"), 0.35, )
paddle.Tensor.__lt__(Tensor([61667605, 37],"float32"), 1e-08, )
paddle.Tensor.__lt__(Tensor([8, 17, 751921, 6, 7],"float16"), 0, )
paddle.Tensor.__lt__(Tensor([2, 285212673, 4],"float32"), 0.3, )
paddle.Tensor.__matmul__(Tensor([40, 6, 392, 32],"float32"), Tensor([40, 6, 32, 392],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 8, 97, 97],"float32"), Tensor([10, 8, 97, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 2, 4096, 64],"float32"), Tensor([2, 2, 64, 256],"float32"), )
paddle.Tensor.__matmul__(Tensor([4194305, 4, 256],"float16"), Tensor([256, 256],"float16"), )
paddle.Tensor.__matmul__(Tensor([1, 599, 15872, 240],"float32"), Tensor([1, 599, 240, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([128, 3, 392, 392],"float32"), Tensor([128, 3, 392, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 5, 1024, 256],"float32"), Tensor([1, 5, 256, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 71303169, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 16384, 1024],"float32"), Tensor([1, 2, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 12, 1500, 1500],"float32"), Tensor([1, 12, 1500, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([128, 2, 784, 64],"float32"), Tensor([128, 2, 64, 49],"float32"), )
paddle.Tensor.__matmul__(Tensor([16777217, 4, 64],"float16"), Tensor([64, 8],"float16"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 1500],"float32"), Tensor([5, 12, 1500, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([128, 2, 342393, 49],"float16"), Tensor([128, 2, 49, 64],"float16"), )
paddle.Tensor.__matmul__(Tensor([40, 6, 392, 392],"float32"), Tensor([40, 6, 392, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([2330, 12, 392, 392],"float16"), Tensor([2330, 12, 392, 32],"float16"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 1, 1500],"float32"), Tensor([5, 6, 1500, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 64],"float32"), Tensor([5, 20, 64, 1500],"float32"), )
paddle.Tensor.__matmul__(Tensor([55901, 2, 784, 49],"float16"), Tensor([55901, 2, 49, 64],"float16"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 105, 105],"float32"), Tensor([30, 8, 105, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([128, 1, 3136, 64],"float32"), Tensor([128, 1, 64, 49],"float32"), )
paddle.Tensor.__matmul__(Tensor([114, 147169, 256],"float16"), Tensor([256, 256],"float16"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 8912897, 256],"float32"), Tensor([1, 1, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([128, 1, 684785, 49],"float16"), Tensor([128, 1, 49, 64],"float16"), )
paddle.Tensor.__matmul__(Tensor([570425345, 4],"float32"), Tensor([4, 4],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 5, 4096, 1024],"float32"), Tensor([4, 5, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 2, 4096, 256],"float32"), Tensor([2, 2, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 4096, 256],"float32"), Tensor([1, 2, 256, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 12201612, 2, 44],"float16"), Tensor([44, 44],"float16"), )
paddle.Tensor.__matmul__(Tensor([128, 8, 49, 64],"float32"), Tensor([128, 8, 64, 49],"float32"), )
paddle.Tensor.__matmul__(Tensor([176, 3, 392, 32],"float32"), Tensor([176, 3, 32, 392],"float32"), )
paddle.Tensor.__matmul__(Tensor([7, 8, 153, 153],"float32"), Tensor([7, 8, 153, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([128, 5, 196, 49],"float32"), Tensor([128, 5, 49, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 5, 1024, 256],"float32"), Tensor([2, 5, 256, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 12, 1, 64],"float32"), Tensor([5, 12, 64, 1500],"float32"), )
paddle.Tensor.__matmul__(Tensor([7158279, 100, 6],"float16"), Tensor([1, 6, 6],"float16"), )
paddle.Tensor.__matmul__(Tensor([128, 669, 784, 64],"float16"), Tensor([128, 669, 64, 49],"float16"), )
paddle.Tensor.__matmul__(Tensor([1, 20, 2, 16],"float32"), Tensor([16, 142606337],"float32"), )
paddle.Tensor.__matmul__(Tensor([7158279, 100, 6],"float16"), Tensor([7158279, 6, 6],"float16"), )
paddle.Tensor.__matmul__(Tensor([64, 4, 196, 64],"float32"), Tensor([64, 1, 64, 49],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 16777217, 2, 32],"float16"), Tensor([32, 32],"float16"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 169, 32],"float32"), Tensor([30, 8, 32, 169],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 6, 3, 64],"float32"), Tensor([5, 6, 64, 1500],"float32"), )
paddle.Tensor.__matmul__(Tensor([545, 1, 16384, 256],"float32"), Tensor([1, 1, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([536870913, 8],"float16"), Tensor([8, 20],"float16"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 145, 32],"float32"), Tensor([30, 8, 32, 145],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 16, 1, 1500],"float32"), Tensor([5, 16, 1500, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 1500, 1500],"float32"), Tensor([1, 8, 1500, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([12, 12, 392, 76088],"float16"), Tensor([12, 12, 76088, 392],"float16"), )
paddle.Tensor.__matmul__(Tensor([128, 5, 196, 64],"float32"), Tensor([128, 5, 64, 49],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 5, 992, 240],"float32"), Tensor([1, 5, 240, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([21474837, 100, 2],"float16"), Tensor([21474837, 2, 2],"float16"), )
paddle.Tensor.__matmul__(Tensor([32, 6, 392, 392],"float32"), Tensor([32, 6, 392, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 132, 254201, 32],"float16"), Tensor([32, 32],"float16"), )
paddle.Tensor.__matmul__(Tensor([32, 33554433],"float16"), Tensor([33554433, 128],"float16"), )
paddle.Tensor.__matmul__(Tensor([387353, 132, 3, 28],"float16"), Tensor([28, 28],"float16"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 61, 61],"float32"), Tensor([30, 8, 61, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 4096, 256],"float32"), Tensor([1, 2, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([10, 4],"float32"), Tensor([4, 570425345],"float32"), )
paddle.Tensor.__matmul__(Tensor([369746, 132, 2, 44],"float16"), Tensor([44, 44],"float16"), )
paddle.Tensor.__matmul__(Tensor([64, 4, 196, 49],"float32"), Tensor([64, 1, 49, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 127, 264209, 32],"float16"), Tensor([32, 32],"float16"), )
paddle.Tensor.__matmul__(Tensor([1, 545, 16384, 256],"float32"), Tensor([1, 1, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 545, 16384, 256],"float32"), Tensor([1, 545, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 115, 291778, 32],"float16"), Tensor([32, 32],"float16"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 57, 57],"float32"), Tensor([30, 8, 57, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([114, 4, 192],"float16"), Tensor([192, 22369622],"float16"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 3968, 240],"float32"), Tensor([1, 2, 240, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([144, 3, 392, 32],"float32"), Tensor([144, 3, 32, 392],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 384],"float32"), Tensor([384, 5941931],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 129, 32],"float32"), Tensor([30, 8, 32, 129],"float32"), )
paddle.Tensor.__matmul__(Tensor([48, 1024, 64],"float32"), Tensor([48, 64, 1024],"float32"), )
paddle.Tensor.__matmul__(Tensor([48, 6, 392, 392],"float32"), Tensor([48, 6, 392, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 81, 81],"float32"), Tensor([30, 8, 81, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 8, 1024, 1024],"float32"), Tensor([1, 8, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([12, 12, 392, 392],"float32"), Tensor([12, 12, 392, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 4, 2, 14],"float32"), Tensor([14, 162978670],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 2281702],"float32"), Tensor([2281702, 1000],"float32"), )
paddle.Tensor.__matmul__(Tensor([536870913, 2, 2],"float16"), Tensor([536870913, 2, 4],"float16"), )
paddle.Tensor.__matmul__(Tensor([1, 2, 3968, 240],"float32"), Tensor([1, 2, 240, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([864, 196, 64],"float32"), Tensor([864, 64, 196],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 24, 392, 32],"float32"), Tensor([2, 24, 32, 392],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 20, 1500, 1500],"float32"), Tensor([1, 20, 1500, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([28521268, 4, 2, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.Tensor.__matmul__(Tensor([1073741825, 4],"float16"), Tensor([4, 1],"float16"), )
paddle.Tensor.__matmul__(Tensor([128, 1, 3136, 10700],"float16"), Tensor([128, 1, 10700, 49],"float16"), )
paddle.Tensor.__matmul__(Tensor([16777217, 4, 64],"float16"), Tensor([64, 64],"float16"), )
paddle.Tensor.__matmul__(Tensor([2247, 1, 15872, 64],"float32"), Tensor([2247, 1, 64, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 121, 32],"float32"), Tensor([30, 8, 32, 121],"float32"), )
paddle.Tensor.__matmul__(Tensor([32, 8, 144, 144],"float32"), Tensor([32, 1, 144, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([176, 3, 392, 392],"float32"), Tensor([176, 3, 392, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 5, 1024, 256],"float32"), Tensor([2, 5, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([32, 134217729],"float16"), Tensor([134217729, 32],"float16"), )
paddle.Tensor.__matmul__(Tensor([2, 8, 256, 256],"float32"), Tensor([2, 8, 256, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 137, 32],"float32"), Tensor([30, 8, 32, 137],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 20, 1, 1500],"float32"), Tensor([5, 20, 1500, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([2970966, 768],"float32"), Tensor([768, 768],"float32"), )
paddle.Tensor.__matmul__(Tensor([30, 8, 69, 32],"float32"), Tensor([30, 8, 32, 69],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 15872, 143757],"float32"), Tensor([1, 1, 143757, 240],"float32"), )
paddle.Tensor.__matmul__(Tensor([128, 1, 3136, 10700],"float16"), Tensor([128, 1, 10700, 64],"float16"), )
paddle.Tensor.__mod__(Tensor([285212673, 8],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.Tensor.__mod__(Tensor([190141782, 3, 4],"float32"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 285212673, 4],"int32"), 1, )
paddle.Tensor.__mod__(Tensor([2, 285212673, 4],"float32"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 142606337, 8],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([2, 536870913, 4],"float16"), 1, )
paddle.Tensor.__mod__(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.Tensor.__mod__(Tensor([2, 3, 380283564],"float32"), 1.0, )
paddle.Tensor.__mod__(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.Tensor.__mod__(Tensor([35651585, 8, 8],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([2, 2, 570425345],"int64"), 2.0, )
paddle.Tensor.__mod__(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__mod__(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.Tensor.__mod__(Tensor([357913942, 3, 4],"float16"), 1, )
paddle.Tensor.__mod__(Tensor([190141782, 3, 4],"int32"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 3, 380283564],"float32"), 1, )
paddle.Tensor.__mod__(Tensor([570425345, 2, 2],"float32"), 2, )
paddle.Tensor.__mod__(Tensor([2, 2, 570425345],"float32"), 2.0, )
paddle.Tensor.__mod__(Tensor([2, 536870913, 4],"float16"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 570425345, 2],"float32"), 2.0, )
paddle.Tensor.__mod__(Tensor([28, 81489335],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([357913942, 3, 4],"float16"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 2, 570425345],"float32"), 2, )
paddle.Tensor.__mod__(Tensor([2, 285212673, 4],"int32"), 1.0, )
paddle.Tensor.__mod__(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.Tensor.__mod__(Tensor([570425345, 2, 2],"float32"), 2.0, )
paddle.Tensor.__mod__(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.Tensor.__mod__(Tensor([2, 8, 142606337],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([2, 570425345, 2],"float32"), 2, )
paddle.Tensor.__mod__(Tensor([2, 285212673, 4],"float32"), 1, )
paddle.Tensor.__mod__(Tensor([2, 3, 380283564],"int32"), 1.0, )
paddle.Tensor.__mod__(Tensor([2, 570425345, 2],"int64"), 2.0, )
paddle.Tensor.__mod__(Tensor([8, 285212673],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([190141782, 3, 4],"int32"), 1, )
paddle.Tensor.__mod__(Tensor([2, 285212673, 4],"int64"), 1.0, )
paddle.Tensor.__mod__(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.Tensor.__mod__(Tensor([81489335, 28],"int32"), 6, )
paddle.Tensor.__mod__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.__mod__(Tensor([2, 3, 715827883],"float16"), 1.0, )
paddle.Tensor.__mod__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__mod__(Tensor([2, 3, 715827883],"float16"), 1, )
paddle.Tensor.__mod__(Tensor([2, 3, 380283564],"int32"), 1, )
paddle.Tensor.__mod__(Tensor([190141782, 3, 4],"int64"), 1.0, )
paddle.Tensor.__mod__(Tensor([190141782, 3, 4],"float32"), 1, )
paddle.Tensor.__mod__(Tensor([570425345, 2, 2],"int64"), 2.0, )
paddle.Tensor.__mod__(Tensor([2, 3, 380283564],"int64"), 1.0, )
paddle.Tensor.__mul__(Tensor([8, 27, 5184],"float32"), Tensor([8, 27, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 67200],"float32"), Tensor([128, 67200],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 224],"float32"), 0.9554352697966813, )
paddle.Tensor.__mul__(Tensor([232, 16, 16, 64],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([11764, 80],"float32"), Tensor([11764, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([13040, 80],"float32"), Tensor([13040, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([16675, 80],"float32"), Tensor([16675, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([30, 8, 457, 153],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 224],"float32"), 0.2931713857368108, )
paddle.Tensor.__mul__(Tensor([13995, 80],"float32"), Tensor([13995, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 85, 33600],"float32"), Tensor([1, 85, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 3, 212212, 224],"float32"), 0.6538193274686024, )
paddle.Tensor.__mul__(Tensor([8, 8, 245, 113],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([8, 25, 7744],"float32"), Tensor([8, 25, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 150, 21504],"float32"), Tensor([1, 150, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 246, 1024],"float32"), Tensor([8, 246, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([9096, 80],"float32"), Tensor([9096, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 50, 1024],"float32"), Tensor([10, 50, 1024],"float32"), )
paddle.Tensor.__mul__(Tensor([72, 16, 70, 64],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([156, 62400],"float16"), Tensor([156, 62400],"float32"), )
paddle.Tensor.__mul__(Tensor([144, 8, 26, 64],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([9728, 80],"float32"), Tensor([9728, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([23775, 80],"float32"), Tensor([23775, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 26, 44436],"float32"), Tensor([1, 26, 44436],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 68, 68, 82],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 38, 8464],"float32"), Tensor([16, 38, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([943934],"float32"), Tensor([943934],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 16, 35, 64],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([29440, 80],"float32"), Tensor([29440, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 25, 44436],"float32"), Tensor([1, 25, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([12444, 80],"float32"), Tensor([12444, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([10960, 80],"float32"), Tensor([10960, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([26730, 80],"float32"), Tensor([26730, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 224],"float32"), 0.40658436121840064, )
paddle.Tensor.__mul__(Tensor([30, 8, 222, 222],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([8, 68, 132, 168],"float32"), Tensor([1],"float32"), )
paddle.Tensor.__mul__(Tensor([24, 16, 68, 64],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 34, 61236],"float32"), Tensor([1, 34, 61236],"float32"), )
paddle.Tensor.__mul__(Tensor([23758, 80],"float32"), Tensor([23758, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8442, 80],"float32"), Tensor([8442, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([100, 89984],"float16"), Tensor([100, 89984],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 19, 6804],"float32"), Tensor([16, 19, 6804],"float32"), )
paddle.Tensor.__mul__(Tensor([10614, 80],"float32"), Tensor([10614, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([10413, 80],"float32"), Tensor([10413, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([807549],"float32"), Tensor([807549],"float32"), )
paddle.Tensor.__mul__(Tensor([15895, 80],"float32"), Tensor([15895, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 192, 92, 92],"float16"), Tensor([16, 192, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 28, 6804],"float32"), Tensor([8, 28, 6804],"float32"), )
paddle.Tensor.__mul__(Tensor([128, 64, 28, 28],"float32"), Tensor([128, 1, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([961572],"float32"), Tensor([961572],"float32"), )
paddle.Tensor.__mul__(Tensor([6842, 80],"float32"), Tensor([6842, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 224],"float32"), 0.033209454313911535, )
paddle.Tensor.__mul__(Tensor([1, 65, 61236],"float32"), Tensor([1, 65, 61236],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 17, 11109],"float32"), Tensor([16, 17, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 32, 4116],"float32"), Tensor([8, 32, 4116],"float32"), )
paddle.Tensor.__mul__(Tensor([64, 47, 3060],"float32"), Tensor([64, 47, 3060],"float32"), )
paddle.Tensor.__mul__(Tensor([19824, 80],"float32"), Tensor([19824, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 52, 2704],"float32"), Tensor([16, 52, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([15000, 80],"float32"), Tensor([15000, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 224],"float32"), 0.851789179103168, )
paddle.Tensor.__mul__(Tensor([11963, 80],"float32"), Tensor([11963, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([12342, 80],"float32"), Tensor([12342, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([25860, 80],"float32"), Tensor([25860, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([22778, 80],"float32"), Tensor([22778, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([1, 192, 240, 240],"float32"), Tensor([1, 192, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 224],"float32"), 0.5486732975785535, )
paddle.Tensor.__mul__(Tensor([9240, 80],"float32"), Tensor([9240, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 30, 3549],"float32"), Tensor([8, 30, 3549],"float32"), )
paddle.Tensor.__mul__(Tensor([176, 92416],"float32"), Tensor([176, 92416],"float32"), )
paddle.Tensor.__mul__(Tensor([22150, 80],"float32"), Tensor([22150, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([24, 78144],"float16"), Tensor([24, 78144],"float32"), )
paddle.Tensor.__mul__(Tensor([11410, 80],"float32"), Tensor([11410, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([224, 8, 16, 64],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([11264, 3584],"bfloat16"), Tensor([11264, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([64, 17, 2577],"float32"), Tensor([64, 17, 2577],"float32"), )
paddle.Tensor.__mul__(Tensor([10952, 80],"float32"), Tensor([10952, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([768],"float32"), Tensor([16, 197, 768],"float32"), )
paddle.Tensor.__mul__(Tensor([8, 32, 3024],"float32"), Tensor([8, 32, 3024],"float32"), )
paddle.Tensor.__mul__(Tensor([64, 28, 1360],"float32"), Tensor([64, 28, 1360],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 2843, 224, 224],"float32"), 0.23278548155548612, )
paddle.Tensor.__mul__(Tensor([16, 142606337],"float32"), 0.009908092358717036, )
paddle.Tensor.__mul__(Tensor([12642, 80],"float32"), Tensor([12642, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([14840, 80],"float32"), Tensor([14840, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([23672, 80],"float32"), Tensor([23672, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([8451, 80],"float32"), Tensor([8451, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([10, 8, 112, 137],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 4096, 32, 128],"float32"), Tensor([1, 4096, 1, 128],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 3, 224, 224],"float32"), 0.6449077911344142, )
paddle.Tensor.__mul__(Tensor([13900, 80],"float32"), Tensor([13900, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([64, 624, 14, 14],"float32"), Tensor([64, 624, 1, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([112, 8, 21, 64],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([29495, 80],"float32"), Tensor([29495, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([16, 48, 6804],"float32"), Tensor([16, 48, 6804],"float32"), )
paddle.Tensor.__mul__(Tensor([78848, 3584],"bfloat16"), Tensor([78848, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([72, 8, 42, 64],"float32"), 0.125, )
paddle.Tensor.__mul__(Tensor([1, 53, 48384],"float32"), Tensor([1, 53, 48384],"float32"), )
paddle.Tensor.__mul__(Tensor([20033, 80],"float32"), Tensor([20033, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([14685, 80],"float32"), Tensor([14685, 80],"float32"), )
paddle.Tensor.__mul__(Tensor([4, 77, 7581],"float32"), Tensor([4, 77, 1],"float32"), )
paddle.Tensor.__mul__(Tensor([44940, 80],"float32"), Tensor([44940, 80],"float32"), )
paddle.Tensor.__ne__(Tensor([1, 800, 1440],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([100, 22817014],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([101862, 22400, 1],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([4, 512, 1024],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([48, 392, 392],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([6, 2, 38028357, 5],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([325957340, 7],"int32"), 1, )
paddle.Tensor.__ne__(Tensor([10, 228170138],"int64"), 42, )
paddle.Tensor.__ne__(Tensor([6, 380283564],"int64"), 98, )
paddle.Tensor.__ne__(Tensor([2228225, 32, 32, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 6, )
paddle.Tensor.__ne__(Tensor([10, 1, 10],"float32"), Tensor([1, 228170138, 10],"float32"), )
paddle.Tensor.__ne__(Tensor([83837, 27216],"int32"), 10, )
paddle.Tensor.__ne__(Tensor([1, 800, 1376],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 2281701379, 1],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int32"), 7, )
paddle.Tensor.__ne__(Tensor([4, 1, 512, 1024],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 15845149, 144],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([16, 142606337],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([1, 1024, 2228225],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 87652394, 49],"float16"), 0, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int32"), 7, )
paddle.Tensor.__ne__(Tensor([100, 22817014],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([897955, 2541],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([1, 2048, 1114113],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 98, )
paddle.Tensor.__ne__(Tensor([214748365, 20],"float16"), Tensor([214748365, 20],"float16"), )
paddle.Tensor.__ne__(Tensor([1, 2138427, 1067],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 6, )
paddle.Tensor.__ne__(Tensor([2, 32, 35651585, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([13, 25073642, 7],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([13, 175515491],"int32"), 8, )
paddle.Tensor.__ne__(Tensor([14, 162978670],"int64"), 98, )
paddle.Tensor.__ne__(Tensor([2, 35651585, 32, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 800, 1488],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([570425345, 4, 1],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2, 1024, 1114113, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([104, 21939437],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([5, 456340276],"int64"), 102, )
paddle.Tensor.__ne__(Tensor([1, 58, 39339679],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([2, 512, 2228225, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 1140850690, 1],"int64"), 4, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 42, )
paddle.Tensor.__ne__(Tensor([2, 512, 1024, 2177],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float64"), )
paddle.Tensor.__ne__(Tensor([2281701379],"int32"), 4, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.__ne__(Tensor([114085069, 20],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 98, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([2228225, 32, 32, 1],"int32"), 255, )
paddle.Tensor.__ne__(Tensor([1, 512, 4456449],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([76056713, 30, 1],"int64"), 4, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 7, )
paddle.Tensor.__ne__(Tensor([1086525, 2100],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([228170138, 1, 10],"float32"), Tensor([228170138, 1, 10],"float32"), )
paddle.Tensor.__ne__(Tensor([114085069, 20],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([2, 1, 2, 570425345],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1, 800, 1426],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([14, 162978670],"int32"), 7, )
paddle.Tensor.__ne__(Tensor([2, 1024, 1024],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 2, )
paddle.Tensor.__ne__(Tensor([4, 512, 1024, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([25, 1, 2074274, 44],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([1, 800, 1313],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([114085069, 20],"int64"), 0, )
paddle.Tensor.__ne__(Tensor([12, 392, 392],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.Tensor.__ne__(Tensor([2281701379],"int32"), -1, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([224489, 10164],"int32"), 80, )
paddle.Tensor.__ne__(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int32"), 8, )
paddle.Tensor.__ne__(Tensor([4, 512, 512],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([3200, 713032],"float32"), Tensor([3200, 713032],"float32"), )
paddle.Tensor.__ne__(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 6626, )
paddle.Tensor.__ne__(Tensor([100, 22817014],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([1, 2281701379],"int32"), 10, )
paddle.Tensor.__ne__(Tensor([2, 1140850690],"int64"), 151643, )
paddle.Tensor.__ne__(Tensor([768, 49, 49],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([40, 392, 392],"float32"), 0, )
paddle.Tensor.__ne__(Tensor([2281701379],"int32"), 0, )
paddle.Tensor.__ne__(Tensor([205393, 11109],"int32"), 4, )
paddle.Tensor.__ne__(Tensor([228170138, 10],"int64"), 1, )
paddle.Tensor.__ne__(Tensor([1048576],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 7, )
paddle.Tensor.__ne__(Tensor([13, 175515491],"int32"), 1, )
paddle.Tensor.__ne__(Tensor([101, 22591103],"int64"), -1, )
paddle.Tensor.__ne__(Tensor([228170138, 10],"float32"), 0.0, )
paddle.Tensor.__ne__(Tensor([2281701379, 1],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([8705, 512, 512],"int64"), 255, )
paddle.Tensor.__ne__(Tensor([4572548, 499],"int64"), 42, )
paddle.Tensor.__ne__(Tensor([39339679, 58],"int64"), -100, )
paddle.Tensor.__ne__(Tensor([570425345, 2, 2, 1],"int64"), -100, )
paddle.Tensor.__neg__(Tensor([1, 1024, 8, 524289],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 1, 8, 285212673],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2, 8, 142606337],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 8, 524289],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 2, 3, 715827883],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 2, 285212673, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1764, 1293482],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 268435457, 2, 8],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 30324, 75245],"float32"), )
paddle.Tensor.__neg__(Tensor([6288, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1810875, 1, 15, 84],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2704, 843825],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 21504, 106106],"float32"), )
paddle.Tensor.__neg__(Tensor([1043, 2187634],"float32"), )
paddle.Tensor.__neg__(Tensor([7184, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([4360, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([4536, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([760567127, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([363792, 3136, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([262145, 1024, 2, 8],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1082, 2108782],"float32"), )
paddle.Tensor.__neg__(Tensor([37623, 30324, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([7168, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([646741, 1764, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 11184811, 8, 48],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([5976, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 2, 3, 380283564],"float32"), )
paddle.Tensor.__neg__(Tensor([5088, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 1296, 1760573],"float32"), )
paddle.Tensor.__neg__(Tensor([3072, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([7184, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 285212673, 2, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 142606337, 16],"float32"), )
paddle.Tensor.__neg__(Tensor([4064, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([3416, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 25, 91268056],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 142606337, 1, 16],"float32"), )
paddle.Tensor.__neg__(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([715827883, 2, 3],"float16"), )
paddle.Tensor.__neg__(Tensor([1041, 2191837],"float32"), )
paddle.Tensor.__neg__(Tensor([4296, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([4560, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([7168, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([41919, 27216, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 11184811, 8, 48],"float16"), )
paddle.Tensor.__neg__(Tensor([589283, 1936, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([6760, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([128, 192612],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2, 1140850690],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1024, 87382, 48],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([17409, 16, 256, 32],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 276, 8267034],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1810875, 15, 84],"float32"), )
paddle.Tensor.__neg__(Tensor([4848, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([8168, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([13, 2, 5484860, 16, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([142606337, 1, 1, 16],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1, 46565335, 49],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([7296, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([5736, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 289, 7895161],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 760567127, 3],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 169, 13501192],"float32"), )
paddle.Tensor.__neg__(Tensor([3064, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([3400, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 17, 8, 16777217],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 17, 33554433, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([6416, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([5976, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 1600, 1426064],"float32"), )
paddle.Tensor.__neg__(Tensor([6256, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([80, 3, 576, 32],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 1444, 1580126, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([285212673, 1, 2, 4],"float32"), )
paddle.Tensor.__neg__(Tensor([7576, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1, 278529, 256, 32],"float32"), )
paddle.Tensor.__neg__(Tensor([171197, 1, 272, 49],"float32"), )
paddle.Tensor.__neg__(Tensor([134217729, 1, 8, 4],"float16"), )
paddle.Tensor.__neg__(Tensor([106, 21525485],"float32"), )
paddle.Tensor.__neg__(Tensor([6104, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([1024, 4194305],"float16"), )
paddle.Tensor.__neg__(Tensor([6128, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([3800, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([6544, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([421913, 2704, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([17825793, 2, 4, 16, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 2, 536870913, 4],"float16"), )
paddle.Tensor.__neg__(Tensor([357913942, 12],"float16"), )
paddle.Tensor.__neg__(Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.Tensor.__neg__(Tensor([91268056, 25, 1],"float32"), )
paddle.Tensor.__neg__(Tensor([380283564, 6],"float32"), )
paddle.Tensor.__neg__(Tensor([6120, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([4296, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([4294968, 1000],"float16"), )
paddle.Tensor.__neg__(Tensor([3400, 8, 2, 40],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([53053, 21504, 2],"float32"), )
paddle.Tensor.__neg__(Tensor([1, 67108865, 8, 8],"bfloat16"), )
paddle.Tensor.__neg__(Tensor([8, 512, 32, 64],"float16"), )
paddle.Tensor.__neg__(Tensor([3440, 8, 1, 40],"bfloat16"), )
paddle.Tensor.__or__(Tensor([2, 38, 12096],"bool"), Tensor([2, 38, 12096],"bool"), )
paddle.Tensor.__or__(Tensor([2, 53, 5376],"bool"), Tensor([2, 53, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 88, 4725],"bool"), Tensor([2, 88, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([1, 27, 27216],"bool"), Tensor([1, 27, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 196, 4116],"bool"), Tensor([2, 196, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([1, 35, 70644],"bool"), Tensor([1, 35, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([1, 35, 37044],"bool"), Tensor([1, 35, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([1, 65, 65856],"bool"), Tensor([1, 65, 65856],"bool"), )
paddle.Tensor.__or__(Tensor([1, 78, 33600],"bool"), Tensor([1, 78, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 47, 21504],"bool"), Tensor([1, 47, 21504],"bool"), )
paddle.Tensor.__or__(Tensor([2, 113, 7581],"bool"), Tensor([2, 113, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([1, 20, 44436],"bool"), Tensor([1, 20, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([2, 102, 7581],"bool"), Tensor([2, 102, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([2, 73, 8400],"bool"), Tensor([2, 73, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([2, 84, 12096],"bool"), Tensor([2, 84, 12096],"bool"), )
paddle.Tensor.__or__(Tensor([1, 20, 56784],"bool"), Tensor([1, 20, 56784],"bool"), )
paddle.Tensor.__or__(Tensor([1, 31, 44436],"bool"), Tensor([1, 31, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([2, 41, 9261],"bool"), Tensor([2, 41, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([2, 152, 12096],"bool"), Tensor([2, 152, 12096],"bool"), )
paddle.Tensor.__or__(Tensor([2, 78, 11109],"bool"), Tensor([2, 78, 11109],"bool"), )
paddle.Tensor.__or__(Tensor([2, 46, 7581],"bool"), Tensor([2, 46, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([1, 70, 40656],"bool"), Tensor([1, 70, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([1, 14, 44436],"bool"), Tensor([1, 14, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([2, 44, 11109],"bool"), Tensor([2, 44, 11109],"bool"), )
paddle.Tensor.__or__(Tensor([1, 30, 24276],"bool"), Tensor([1, 30, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([2, 63, 4116],"bool"), Tensor([2, 63, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 177, 3024],"bool"), Tensor([2, 177, 3024],"bool"), )
paddle.Tensor.__or__(Tensor([1, 86, 33600],"bool"), Tensor([1, 86, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 83, 65856],"bool"), Tensor([1, 83, 65856],"bool"), )
paddle.Tensor.__or__(Tensor([1, 26, 40656],"bool"), Tensor([1, 26, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([1, 65, 61236],"bool"), Tensor([1, 65, 61236],"bool"), )
paddle.Tensor.__or__(Tensor([2, 114, 5376],"bool"), Tensor([2, 114, 5376],"bool"), )
paddle.Tensor.__or__(Tensor([2, 40, 9261],"bool"), Tensor([2, 40, 9261],"bool"), )
paddle.Tensor.__or__(Tensor([1, 43, 30324],"bool"), Tensor([1, 43, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([1, 35, 56784],"bool"), Tensor([1, 35, 56784],"bool"), )
paddle.Tensor.__or__(Tensor([1, 19, 70644],"bool"), Tensor([1, 19, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__or__(Tensor([1, 17, 65856],"bool"), Tensor([1, 17, 65856],"bool"), )
paddle.Tensor.__or__(Tensor([1, 27, 70644],"bool"), Tensor([1, 27, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([1, 87, 70644],"bool"), Tensor([1, 87, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([1, 52, 48384],"bool"), Tensor([1, 52, 48384],"bool"), )
paddle.Tensor.__or__(Tensor([1, 54, 27216],"bool"), Tensor([1, 54, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([1, 54, 61236],"bool"), Tensor([1, 54, 61236],"bool"), )
paddle.Tensor.__or__(Tensor([1, 55, 70644],"bool"), Tensor([1, 55, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([1, 113, 56784],"bool"), Tensor([1, 113, 56784],"bool"), )
paddle.Tensor.__or__(Tensor([2, 77, 4116],"bool"), Tensor([2, 77, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([1, 22, 56784],"bool"), Tensor([1, 22, 56784],"bool"), )
paddle.Tensor.__or__(Tensor([1, 19, 56784],"bool"), Tensor([1, 19, 56784],"bool"), )
paddle.Tensor.__or__(Tensor([1, 71, 30324],"bool"), Tensor([1, 71, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([1, 25, 27216],"bool"), Tensor([1, 25, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([1, 54, 52500],"bool"), Tensor([1, 54, 52500],"bool"), )
paddle.Tensor.__or__(Tensor([2, 35, 8400],"bool"), Tensor([2, 35, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([1, 62, 61236],"bool"), Tensor([1, 62, 61236],"bool"), )
paddle.Tensor.__or__(Tensor([1, 24, 27216],"bool"), Tensor([1, 24, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([1, 46, 65856],"bool"), Tensor([1, 46, 65856],"bool"), )
paddle.Tensor.__or__(Tensor([13, 1, 7, 25073642],"bool"), Tensor([13, 1, 7, 25073642],"bool"), )
paddle.Tensor.__or__(Tensor([1, 14, 70644],"bool"), Tensor([1, 14, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.Tensor.__or__(Tensor([1, 25, 48384],"bool"), Tensor([1, 25, 48384],"bool"), )
paddle.Tensor.__or__(Tensor([1, 132, 27216],"bool"), Tensor([1, 132, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([2, 45, 8400],"bool"), Tensor([2, 45, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([1, 26, 44436],"bool"), Tensor([1, 26, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([1, 20, 40656],"bool"), Tensor([1, 20, 40656],"bool"), )
paddle.Tensor.__or__(Tensor([2, 102, 3549],"bool"), Tensor([2, 102, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 70, 6069],"bool"), Tensor([2, 70, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([1, 107, 24276],"bool"), Tensor([1, 107, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([1, 20, 37044],"bool"), Tensor([1, 20, 37044],"bool"), )
paddle.Tensor.__or__(Tensor([2, 33, 12096],"bool"), Tensor([2, 33, 12096],"bool"), )
paddle.Tensor.__or__(Tensor([2, 64, 4116],"bool"), Tensor([2, 64, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([2, 58, 6069],"bool"), Tensor([2, 58, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([1, 51, 61236],"bool"), Tensor([1, 51, 61236],"bool"), )
paddle.Tensor.__or__(Tensor([1, 39, 44436],"bool"), Tensor([1, 39, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([2, 99, 4116],"bool"), Tensor([2, 99, 4116],"bool"), )
paddle.Tensor.__or__(Tensor([1, 1, 44436],"bool"), Tensor([51349, 1, 44436],"bool"), )
paddle.Tensor.__or__(Tensor([2, 119, 4725],"bool"), Tensor([2, 119, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([1, 52, 24276],"bool"), Tensor([1, 52, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([1, 78, 30324],"bool"), Tensor([1, 78, 30324],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([1, 52, 75600],"bool"), Tensor([1, 52, 75600],"bool"), )
paddle.Tensor.__or__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__or__(Tensor([2, 117, 6069],"bool"), Tensor([2, 117, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([1, 83837, 27216],"bool"), Tensor([1, 1, 27216],"bool"), )
paddle.Tensor.__or__(Tensor([1, 71, 33600],"bool"), Tensor([1, 71, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 60, 75600],"bool"), Tensor([1, 60, 75600],"bool"), )
paddle.Tensor.__or__(Tensor([1, 9, 75600],"bool"), Tensor([1, 9, 75600],"bool"), )
paddle.Tensor.__or__(Tensor([2, 461, 3549],"bool"), Tensor([2, 461, 3549],"bool"), )
paddle.Tensor.__or__(Tensor([2, 286, 8400],"bool"), Tensor([2, 286, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([1, 77, 56784],"bool"), Tensor([1, 77, 56784],"bool"), )
paddle.Tensor.__or__(Tensor([1, 32, 24276],"bool"), Tensor([1, 32, 24276],"bool"), )
paddle.Tensor.__or__(Tensor([1, 23, 33600],"bool"), Tensor([1, 23, 33600],"bool"), )
paddle.Tensor.__or__(Tensor([2, 108, 7581],"bool"), Tensor([2, 108, 7581],"bool"), )
paddle.Tensor.__or__(Tensor([2, 42, 6069],"bool"), Tensor([2, 42, 6069],"bool"), )
paddle.Tensor.__or__(Tensor([2, 82, 4725],"bool"), Tensor([2, 82, 4725],"bool"), )
paddle.Tensor.__or__(Tensor([1, 63, 65856],"bool"), Tensor([1, 63, 65856],"bool"), )
paddle.Tensor.__or__(Tensor([1, 10, 70644],"bool"), Tensor([1, 10, 70644],"bool"), )
paddle.Tensor.__or__(Tensor([2, 49, 12096],"bool"), Tensor([2, 49, 12096],"bool"), )
paddle.Tensor.__or__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__or__(Tensor([2, 39, 8400],"bool"), Tensor([2, 39, 8400],"bool"), )
paddle.Tensor.__or__(Tensor([2, 48, 10164],"bool"), Tensor([2, 48, 10164],"bool"), )
paddle.Tensor.__or__(Tensor([2, 79, 9261],"bool"), Tensor([2, 79, 9261],"bool"), )
paddle.Tensor.__pow__(Tensor([2, 570425345, 2],"float32"), 3, )
paddle.Tensor.__pow__(Tensor([570425345, 2, 2],"float32"), 3.0, )
paddle.Tensor.__pow__(Tensor([774, 15, 3, 256, 256],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2, 14260634, 80],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([1320430, 3, 24, 24],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([357913942, 3, 4],"float16"), 1.0, )
paddle.Tensor.__pow__(Tensor([16, 10, 64, 111412, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 513, 213],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([570425345, 2, 2],"int64"), 3.0, )
paddle.Tensor.__pow__(Tensor([10, 20, 21474837],"float16"), 2, )
paddle.Tensor.__pow__(Tensor([190141782, 3, 4],"float32"), 1, )
paddle.Tensor.__pow__(Tensor([8705, 64, 64, 64],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2, 3, 380283564],"int64"), 1.0, )
paddle.Tensor.__pow__(Tensor([2, 3, 715827883],"float16"), 1, )
paddle.Tensor.__pow__(Tensor([190141782, 3, 4],"float32"), 1.0, )
paddle.Tensor.__pow__(Tensor([1431655766, 3],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([2, 3, 380283564],"int32"), 1, )
paddle.Tensor.__pow__(Tensor([4294967297],"float16"), 2.0, )
paddle.Tensor.__pow__(Tensor([1140850690, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([17409, 128, 32, 32],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([36, 63380594],"float32"), 3, )
paddle.Tensor.__pow__(Tensor([1, 2228225, 32, 32],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 257, 554889],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([13, 2, 16, 4, 1371215],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2, 536870913, 4],"float16"), 1.0, )
paddle.Tensor.__pow__(Tensor([2, 2, 570425345],"float32"), 3.0, )
paddle.Tensor.__pow__(Tensor([16, 1025, 139129],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 557057, 64, 64],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2, 570425345, 2],"int64"), 3.0, )
paddle.Tensor.__pow__(Tensor([4, 2902, 3, 256, 256],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([228170138, 10],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 8912897, 16, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([4, 15, 581, 256, 256],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([570425345, 2, 2],"float32"), 3, )
paddle.Tensor.__pow__(Tensor([2400, 950709],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([3, 3, 119304648, 4],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([20805, 1025, 107],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([214748365, 20, 1],"float16"), 2, )
paddle.Tensor.__pow__(Tensor([1, 3961288, 24, 24],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([8, 32, 241, 241],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1200, 1901418],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 3, 715827883],"float16"), 1.0, )
paddle.Tensor.__pow__(Tensor([16, 17409, 64, 64, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1800, 1267612],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 200, 5704254],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([1073741825, 4],"float16"), 2.0, )
paddle.Tensor.__pow__(Tensor([3, 1431655766],"float16"), 2, )
paddle.Tensor.__pow__(Tensor([2, 3, 380283564],"int32"), 1.0, )
paddle.Tensor.__pow__(Tensor([2281701379, 1],"float32"), 4, )
paddle.Tensor.__pow__(Tensor([3, 1431655766],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([1, 168715, 276, 49],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([142607, 200, 80],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([4, 157920, 7],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([3, 3, 4, 119304648],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([3, 89478486, 4, 4],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([10, 429496730, 1],"float16"), 2, )
paddle.Tensor.__pow__(Tensor([285212673, 8],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([1, 256, 557057, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 2, 1140850690],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2, 2147483649],"float16"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 300, 3802836],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([300, 7605672],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 285212673, 4],"int32"), 1, )
paddle.Tensor.__pow__(Tensor([1, 1, 27163112, 84],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 10, 64, 64, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([456340276, 5],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([31691, 900, 80],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 900, 1267612],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 536870913, 4],"float16"), 1, )
paddle.Tensor.__pow__(Tensor([4294967297],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([1, 64, 64, 557057],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 1, 46565335, 49],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 279074, 511],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([10, 228170138],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([2281701379, 1],"float32"), 2.0, )
paddle.Tensor.__pow__(Tensor([2, 3, 380283564],"float32"), 1, )
paddle.Tensor.__pow__(Tensor([16, 1025, 107],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([385, 11155760],"float16"), 2, )
paddle.Tensor.__pow__(Tensor([1, 1, 19, 120089547],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([4294967297],"float16"), 2, )
paddle.Tensor.__pow__(Tensor([2, 570425345, 2],"float32"), 3.0, )
paddle.Tensor.__pow__(Tensor([10, 20, 11408507],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 257, 511],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([16, 10, 64, 64, 3482],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 1429638, 19, 84],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([18, 238609295],"float16"), 2, )
paddle.Tensor.__pow__(Tensor([64, 35651585],"float32"), 3, )
paddle.Tensor.__pow__(Tensor([2, 285212673, 4],"int32"), 1.0, )
paddle.Tensor.__pow__(Tensor([16, 1332770, 107],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([13, 2, 1371215, 4, 16],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 3, 24, 31690297],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([1, 1140850690, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([100, 22817014],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([570425345, 2, 2],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([4, 15, 3, 256, 49517],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([3, 3, 477218589],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([89478486, 3, 4, 4],"float16"), 3, )
paddle.Tensor.__pow__(Tensor([1, 3, 31690297, 24],"float32"), 2, )
paddle.Tensor.__pow__(Tensor([190141782, 3, 4],"int64"), 1.0, )
paddle.Tensor.__radd__(Tensor([128, 1, 1, 17825793],"float32"), 0.825, )
paddle.Tensor.__radd__(Tensor([1431655766, 3],"float16"), 1.1447298858494002, )
paddle.Tensor.__radd__(Tensor([192, 240, 8, 80],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([192, 16, 32, 160],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.9727272726595402, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.8999999985098839, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.9363636374473572, )
paddle.Tensor.__radd__(Tensor([3, 1431655766],"float16"), 0.5, )
paddle.Tensor.__radd__(Tensor([1, 35651585, 64],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([4, 1393, 640, 640],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([8, 32, 320, 320],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.9909090911969543, )
paddle.Tensor.__radd__(Tensor([1, 1, 2281701379],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.8999999985098839, )
paddle.Tensor.__radd__(Tensor([8, 192, 40, 40],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([192, 17477, 16, 80],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1, 1],"float32"), 0.925, )
paddle.Tensor.__radd__(Tensor([8, 32, 160, 160],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.963636364787817, )
paddle.Tensor.__radd__(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1, 1],"float32"), 0.8875, )
paddle.Tensor.__radd__(Tensor([2, 1140850690],"float32"), 0.9189385332046727, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.8999999985098839, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.927272729575634, )
paddle.Tensor.__radd__(Tensor([4294967297],"float16"), 192.0, )
paddle.Tensor.__radd__(Tensor([96, 128, 16, 160],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([71303169, 32],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([39285, 1, 241, 241],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([16, 1, 268435457],"float16"), 0.8999999985098839, )
paddle.Tensor.__radd__(Tensor([614683, 58, 64],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([8, 48, 80, 80],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([8, 32, 320, 320],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([4294967297],"float16"), 0.9189385332046727, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9818181823939085, )
paddle.Tensor.__radd__(Tensor([1, 7, 325957340],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.875, )
paddle.Tensor.__radd__(Tensor([4, 480, 8, 80],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([192, 480, 8, 80],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([1, 61667605, 37],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([1431655766, 3],"float16"), 1.0, )
paddle.Tensor.__radd__(Tensor([5571, 1, 640, 640],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([4, 280, 376, 25],"float32"), -0.5, )
paddle.Tensor.__radd__(Tensor([16, 1, 222823, 640],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([4, 1, 960, 594194],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([96, 64, 16, 160],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([1, 20, 114085069],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([8, 32, 160, 160],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.9818181823939085, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9545454531908035, )
paddle.Tensor.__radd__(Tensor([1, 8912897, 256],"float32"), 4, )
paddle.Tensor.__radd__(Tensor([1, 17825793, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9727272726595402, )
paddle.Tensor.__radd__(Tensor([858993460, 5],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([8, 48, 160, 160],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([192, 8739, 16, 160],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([16, 64, 25500],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.925, )
paddle.Tensor.__radd__(Tensor([13, 3581949, 7, 7],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9909090911969543, )
paddle.Tensor.__radd__(Tensor([1, 128, 17825793],"float32"), 4, )
paddle.Tensor.__radd__(Tensor([1024, 1, 445645, 5],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([16, 5593, 25500],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([192, 240, 16, 80],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9363636374473572, )
paddle.Tensor.__radd__(Tensor([100, 433836, 99],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([760567127, 3],"float32"), 0.9189385332046727, )
paddle.Tensor.__radd__(Tensor([614683, 58, 64],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([96, 128, 16, 80],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9090909063816071, )
paddle.Tensor.__radd__(Tensor([16, 1, 142606337],"float32"), 0.9181818142533302, )
paddle.Tensor.__radd__(Tensor([96, 32, 32, 160],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([8, 1, 1183456, 241],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([1, 128, 17825793],"int32"), 0, )
paddle.Tensor.__radd__(Tensor([8, 96, 40, 40],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9727272726595402, )
paddle.Tensor.__radd__(Tensor([4, 619, 960, 960],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([760567127, 3],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([17825793, 1, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.9909090911969543, )
paddle.Tensor.__radd__(Tensor([192, 64, 16, 160],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([139265, 128, 128],"float32"), 4, )
paddle.Tensor.__radd__(Tensor([2281701379, 1, 1],"float32"), 0.9909090911969543, )
paddle.Tensor.__radd__(Tensor([8, 4911, 241, 241],"float32"), 1.0, )
paddle.Tensor.__radd__(Tensor([4, 240, 16, 80],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([8, 16, 320, 320],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([16, 64, 2228225],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([128, 17825793, 1, 1],"float32"), 0.8375, )
paddle.Tensor.__radd__(Tensor([8, 96, 80, 80],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([96, 240, 8, 80],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([891290, 20, 128],"float32"), 1, )
paddle.Tensor.__radd__(Tensor([8, 384, 20, 20],"float32"), 0, )
paddle.Tensor.__radd__(Tensor([16, 268435457, 1],"float16"), 0.9545454531908035, )
paddle.Tensor.__radd__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__radd__(Tensor([4294967297, 1, 1],"float16"), 0.9181818142533302, )
paddle.Tensor.__radd__(Tensor([128, 1, 17825793, 1],"float32"), 0.9125, )
paddle.Tensor.__radd__(Tensor([16, 142606337, 1],"float32"), 0.9363636374473572, )
paddle.Tensor.__radd__(Tensor([8, 48, 80, 80],"float16"), 0, )
paddle.Tensor.__radd__(Tensor([5, 858993460],"float16"), 1, )
paddle.Tensor.__radd__(Tensor([128, 1, 1, 17825793],"float32"), 0.9125, )
paddle.Tensor.__radd__(Tensor([128, 1, 17825793, 1],"float32"), 0.875, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"int16"), 63, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"int8"), 61, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"int16"), -212, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"int8"), 61, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"int8"), -24, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"int16"), -212, )
paddle.Tensor.__rlshift__(Tensor([7605672, 300],"int32"), 93, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"int16"), 63, )
paddle.Tensor.__rlshift__(Tensor([200, 11408507],"int64"), -125, )
paddle.Tensor.__rlshift__(Tensor([7605672, 300],"int64"), -79, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"int8"), -24, )
paddle.Tensor.__rlshift__(Tensor([200, 11408507],"int32"), -223, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"uint8"), 24, )
paddle.Tensor.__rlshift__(Tensor([7605672, 300],"int32"), -223, )
paddle.Tensor.__rlshift__(Tensor([200, 11408507],"int64"), -79, )
paddle.Tensor.__rlshift__(Tensor([7605672, 300],"int64"), -125, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"uint8"), 22, )
paddle.Tensor.__rlshift__(Tensor([14316558, 300],"uint8"), 24, )
paddle.Tensor.__rlshift__(Tensor([200, 21474837],"uint8"), 22, )
paddle.Tensor.__rlshift__(Tensor([200, 11408507],"int32"), 93, )
paddle.Tensor.__rmatmul__(Tensor([456340276, 5],"float32"), Tensor([2, 456340276],"float32"), )
paddle.Tensor.__rmatmul__(Tensor([3, 760567127],"float32"), Tensor([2, 3],"float32"), )
paddle.Tensor.__rmatmul__(Tensor([3, 5],"float32"), Tensor([760567127, 3],"float32"), )
paddle.Tensor.__rmod__(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3, 380283564],"float32"), )
paddle.Tensor.__rmod__(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 3, 4],"float32"), )
paddle.Tensor.__rmod__(Tensor([2, 285212673, 4],"float32"), Tensor([2, 285212673, 4],"float32"), )
paddle.Tensor.__rmul__(Tensor([1024, 3072],"float32"), 0.9605263157894737, )
paddle.Tensor.__rmul__(Tensor([2048, 1024],"float32"), 0.051136363636363646, )
paddle.Tensor.__rmul__(Tensor([1024, 3072],"float32"), 0.9769230769230769, )
paddle.Tensor.__rmul__(Tensor([12848, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([39370, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([256, 16, 512],"float32"), 22.627416997969522, )
paddle.Tensor.__rmul__(Tensor([42444, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([22198, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([2048, 1024],"float32"), 0.9778325123152709, )
paddle.Tensor.__rmul__(Tensor([1280, 1280, 1, 1],"float32"), 0.08256880733944949, )
paddle.Tensor.__rmul__(Tensor([13565, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([1024, 1024, 1, 1],"float32"), 0.7631578947368421, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.982791586998088, )
paddle.Tensor.__rmul__(Tensor([88, 33, 512],"float32"), 22.627416997969522, )
paddle.Tensor.__rmul__(Tensor([2048, 2048, 1, 1],"float32"), 0.2432432432432432, )
paddle.Tensor.__rmul__(Tensor([2048, 1024],"float32"), 0.017892644135188873, )
paddle.Tensor.__rmul__(Tensor([512, 2048],"float32"), 0.9862385321100917, )
paddle.Tensor.__rmul__(Tensor([1024, 2048],"float32"), 0.04109589041095896, )
paddle.Tensor.__rmul__(Tensor([1024, 1024],"float32"), 0.026548672566371723, )
paddle.Tensor.__rmul__(Tensor([1024, 1024],"float32"), 0.9731343283582089, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.014354066985645897, )
paddle.Tensor.__rmul__(Tensor([21439, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([2048, 1024],"float32"), 0.987012987012987, )
paddle.Tensor.__rmul__(Tensor([1024, 1024],"float32"), 0.009966777408637828, )
paddle.Tensor.__rmul__(Tensor([109935, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([2048, 512],"float32"), 0.013574660633484115, )
paddle.Tensor.__rmul__(Tensor([42015, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([640, 640, 3, 3],"float32"), 0.9980021984674663, )
paddle.Tensor.__rmul__(Tensor([2048, 1024],"float32"), 0.9702970297029703, )
paddle.Tensor.__rmul__(Tensor([34884, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([384, 384, 3, 3],"float32"), 0.9810924369747899, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.9864457831325302, )
paddle.Tensor.__rmul__(Tensor([2048, 512],"float32"), 0.9829545454545454, )
paddle.Tensor.__rmul__(Tensor([48, 104, 1024],"float32"), 32.0, )
paddle.Tensor.__rmul__(Tensor([12544, 1024],"float32"), 0.5714285714285714, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.014106583072100332, )
paddle.Tensor.__rmul__(Tensor([48, 66, 512],"float32"), 22.627416997969522, )
paddle.Tensor.__rmul__(Tensor([1024, 2048],"float32"), 0.9657794676806084, )
paddle.Tensor.__rmul__(Tensor([2048, 1024, 1, 1],"float32"), 0.3214285714285714, )
paddle.Tensor.__rmul__(Tensor([1024, 1024],"float32"), 0.9908536585365854, )
paddle.Tensor.__rmul__(Tensor([384, 384, 3, 3],"float32"), 0.016917293233082664, )
paddle.Tensor.__rmul__(Tensor([14992, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([1024, 3072],"float32"), 0.01598579040852577, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.9789227166276346, )
paddle.Tensor.__rmul__(Tensor([45976, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([1024, 512, 3, 3],"float32"), 0.6, )
paddle.Tensor.__rmul__(Tensor([512, 2048],"float32"), 0.016728624535315983, )
paddle.Tensor.__rmul__(Tensor([2048, 1024],"float32"), 0.9891304347826086, )
paddle.Tensor.__rmul__(Tensor([2048, 512],"float32"), 0.011479591836734748, )
paddle.Tensor.__rmul__(Tensor([1024, 3072],"float32"), 0.022222222222222254, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.9833024118738405, )
paddle.Tensor.__rmul__(Tensor([1, 1, 2281701379, 1],"float32"), 0.9629629629629629, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.009365244536940653, )
paddle.Tensor.__rmul__(Tensor([12544, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([1024, 1024],"float32"), 0.9844559585492227, )
paddle.Tensor.__rmul__(Tensor([14784, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([2048, 1024],"float32"), 0.9730538922155688, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.9451219512195121, )
paddle.Tensor.__rmul__(Tensor([17892, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([1024, 2048],"float32"), 0.9430379746835443, )
paddle.Tensor.__rmul__(Tensor([1280, 640, 3, 3],"float32"), 0.9910412747350064, )
paddle.Tensor.__rmul__(Tensor([384, 384, 3, 3],"float32"), 0.014778325123152691, )
paddle.Tensor.__rmul__(Tensor([1024, 2048],"float32"), 0.023376623376623384, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.02848101265822789, )
paddle.Tensor.__rmul__(Tensor([16600, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([27692, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([64524, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([512, 2048],"float32"), 0.9856459330143541, )
paddle.Tensor.__rmul__(Tensor([384, 384, 3, 3],"float32"), 0.010791366906474864, )
paddle.Tensor.__rmul__(Tensor([512, 2048],"float32"), 0.011673151750972721, )
paddle.Tensor.__rmul__(Tensor([384, 384, 3, 3],"float32"), 0.03488372093023251, )
paddle.Tensor.__rmul__(Tensor([1024, 2048],"float32"), 0.989749430523918, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.8448275862068966, )
paddle.Tensor.__rmul__(Tensor([384, 384, 3, 3],"float32"), 0.28125, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.013953488372092981, )
paddle.Tensor.__rmul__(Tensor([1024, 1024],"float32"), 0.9908722109533469, )
paddle.Tensor.__rmul__(Tensor([26455, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([19805, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([19536, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([2048, 1024],"float32"), 0.2142857142857143, )
paddle.Tensor.__rmul__(Tensor([512, 2048],"float32"), 0.9884020618556701, )
paddle.Tensor.__rmul__(Tensor([54538, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([13882, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([46900, 80],"float32"), 0.75, )
paddle.Tensor.__rmul__(Tensor([384, 384, 3, 3],"float32"), 0.9716981132075472, )
paddle.Tensor.__rmul__(Tensor([1024, 2048],"float32"), 0.02752293577981646, )
paddle.Tensor.__rmul__(Tensor([1280, 640, 3, 3],"float32"), 0.9885670156606883, )
paddle.Tensor.__rmul__(Tensor([1024, 3072],"float32"), 0.5, )
paddle.Tensor.__rmul__(Tensor([128, 96, 185686, 1],"float32"), 0.991044776119403, )
paddle.Tensor.__rmul__(Tensor([70560, 80],"float32"), 1.0, )
paddle.Tensor.__rmul__(Tensor([2048, 1024],"float32"), 0.9803921568627451, )
paddle.Tensor.__rmul__(Tensor([512, 2048],"float32"), 0.013636363636363669, )
paddle.Tensor.__rmul__(Tensor([384, 384, 3, 3],"float32"), 0.011124845488257096, )
paddle.Tensor.__rmul__(Tensor([1024, 2228225],"float32"), 0.953125, )
paddle.Tensor.__rmul__(Tensor([48, 67, 512],"float32"), 22.627416997969522, )
paddle.Tensor.__rmul__(Tensor([768, 512, 3, 3],"float32"), 0.9833333333333333, )
paddle.Tensor.__rmul__(Tensor([384, 384, 3, 3],"float32"), 0.2195121951219512, )
paddle.Tensor.__rmul__(Tensor([512, 2048],"float32"), 0.375, )
paddle.Tensor.__rmul__(Tensor([32, 123, 512],"float32"), 22.627416997969522, )
paddle.Tensor.__rmul__(Tensor([36864, 80],"float32"), 1.0, )
paddle.Tensor.__ror__(Tensor([2, 228170138, 5],"int32"), 5, )
paddle.Tensor.__ror__(Tensor([152113426, 3, 5],"int32"), 5, )
paddle.Tensor.__ror__(Tensor([2, 3, 380283564],"int32"), True, )
paddle.Tensor.__ror__(Tensor([2, 228170138, 5],"int32"), True, )
paddle.Tensor.__ror__(Tensor([2, 3, 380283564],"int32"), 5, )
paddle.Tensor.__ror__(Tensor([152113426, 3, 5],"int32"), True, )
paddle.Tensor.__rpow__(Tensor([2, 570425345, 2],"float32"), 3.0, )
paddle.Tensor.__rpow__(Tensor([10, 228170138],"float32"), 2, )
paddle.Tensor.__rpow__(Tensor([142606337, 16],"float32"), 10000.0, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 500000.0, )
paddle.Tensor.__rpow__(Tensor([2, 570425345, 2],"int64"), 3.0, )
paddle.Tensor.__rpow__(Tensor([570425345, 2, 2],"float32"), 3, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 550134.0076769129, )
paddle.Tensor.__rpow__(Tensor([228170138, 5, 2],"float32"), 2, )
paddle.Tensor.__rpow__(Tensor([357913942, 12],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 10000.0, )
paddle.Tensor.__rpow__(Tensor([570425345, 2, 2],"int64"), 3.0, )
paddle.Tensor.__rpow__(Tensor([2, 2, 570425345],"int64"), 3.0, )
paddle.Tensor.__rpow__(Tensor([4, 5, 114085069],"float32"), 2, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 107177664400.00002, )
paddle.Tensor.__rpow__(Tensor([1, 2281701379],"float32"), 10000.0, )
paddle.Tensor.__rpow__(Tensor([429496730, 5, 2],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([2, 2, 570425345],"float32"), 3, )
paddle.Tensor.__rpow__(Tensor([2, 2, 570425345],"float32"), 3.0, )
paddle.Tensor.__rpow__(Tensor([4, 285212673, 2],"float32"), 2, )
paddle.Tensor.__rpow__(Tensor([10, 429496730],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([4, 536870913, 2],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([570425345, 2, 2],"float32"), 3.0, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 20, )
paddle.Tensor.__rpow__(Tensor([190141782, 12],"float32"), 2, )
paddle.Tensor.__rpow__(Tensor([4294967297],"float16"), 10000, )
paddle.Tensor.__rpow__(Tensor([4294967297],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([4, 5, 214748365],"float16"), 2, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 1000000.0, )
paddle.Tensor.__rpow__(Tensor([2, 570425345, 2],"float32"), 3, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 10000, )
paddle.Tensor.__rpow__(Tensor([2281701379],"float32"), 63496.04207872797, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"uint8"), 45, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"int16"), -255, )
paddle.Tensor.__rrshift__(Tensor([7605672, 300],"int32"), 232, )
paddle.Tensor.__rrshift__(Tensor([7605672, 300],"int32"), 72, )
paddle.Tensor.__rrshift__(Tensor([200, 11408507],"int32"), 72, )
paddle.Tensor.__rrshift__(Tensor([200, 11408507],"int32"), 232, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"int8"), -24, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"uint8"), 45, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"int16"), 11, )
paddle.Tensor.__rrshift__(Tensor([7605672, 300],"int64"), -43, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"uint8"), 57, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"int16"), 11, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"int8"), 3, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"uint8"), 57, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"int8"), 3, )
paddle.Tensor.__rrshift__(Tensor([200, 11408507],"int64"), 155, )
paddle.Tensor.__rrshift__(Tensor([200, 21474837],"int8"), -24, )
paddle.Tensor.__rrshift__(Tensor([14316558, 300],"int16"), -255, )
paddle.Tensor.__rrshift__(Tensor([200, 11408507],"int64"), -43, )
paddle.Tensor.__rrshift__(Tensor([7605672, 300],"int64"), 155, )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"uint8"), Tensor([21474837],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 11408507],"int32"), Tensor([11408507],"int32"), )
paddle.Tensor.__rshift__(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([1],"int8"), Tensor([4294967297],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int16"), Tensor([21474837],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 11408507],"int64"), Tensor([11408507],"int64"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int8"), Tensor([21474837],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([4294967297],"int8"), Tensor([4294967297],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.Tensor.__rshift__(Tensor([21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.Tensor.__rshift__(Tensor([21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.Tensor.__rshift__(Tensor([4294967297],"int8"), Tensor([1],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 11408507],"int32"), Tensor([11408507],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int8"), Tensor([21474837],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int16"), Tensor([21474837],"int16"), )
paddle.Tensor.__rshift__(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([1],"int8"), Tensor([4294967297],"int8"), )
paddle.Tensor.__rshift__(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.Tensor.__rshift__(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.Tensor.__rshift__(Tensor([4294967297],"int8"), Tensor([1],"int8"), False, )
paddle.Tensor.__rshift__(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), )
paddle.Tensor.__rshift__(Tensor([11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.Tensor.__rshift__(Tensor([11408507],"int32"), Tensor([200, 11408507],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.Tensor.__rshift__(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.Tensor.__rshift__(Tensor([11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.Tensor.__rshift__(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), False, )
paddle.Tensor.__rshift__(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), )
paddle.Tensor.__rshift__(Tensor([4294967297],"int8"), Tensor([4294967297],"int8"), )
paddle.Tensor.__rshift__(Tensor([21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.Tensor.__rshift__(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), )
paddle.Tensor.__rshift__(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), False, )
paddle.Tensor.__rshift__(Tensor([200, 21474837],"uint8"), Tensor([21474837],"uint8"), )
paddle.Tensor.__rsub__(Tensor([1, 2281701379],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2944, 6629],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1010616],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([7, 1, 435, 435],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([4, 157920, 3],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4294967297],"float16"), 0.8, )
paddle.Tensor.__rsub__(Tensor([1010616],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 2, 2147483649],"float16"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([1025789],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([8, 2100, 80],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 2, 300, 7158279],"float16"), 1, )
paddle.Tensor.__rsub__(Tensor([1005783],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1901418, 3, 20, 20, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1037889],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1014563],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([13, 1, 43878873, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1015607],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([13, 1, 175515491],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1022957],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1038765],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([12, 3, 6338060, 10, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([3043, 107136, 7],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([20, 1, 419431, 272],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([11408507, 100, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([52, 1253683, 5, 1, 7],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4, 4, 1114113, 128],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([13, 87757746, 1, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 1, 1024, 1024],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1029329],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 2, 1140850690],"float32"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([214748365, 20],"float16"), 1, )
paddle.Tensor.__rsub__(Tensor([1025994],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 118839, 40, 40, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([100, 433836, 99],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([52, 4, 1567103, 1, 7],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([10, 228170138],"float32"), 0.1, )
paddle.Tensor.__rsub__(Tensor([13, 1, 1024, 1024],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([207427399, 1, 1, 11],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 190141782, 1, 12],"int64"), 1.0, )
paddle.Tensor.__rsub__(Tensor([3, 1431655766],"float16"), 0.0, )
paddle.Tensor.__rsub__(Tensor([1009453],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([16, 3549, 80],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 228170138, 1, 10],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2, 570425345, 2],"float32"), 1.5, )
paddle.Tensor.__rsub__(Tensor([1, 1100, 2074274],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([13, 43878873, 1, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1140850690, 1, 1, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1, 570425345, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([16, 10164, 80],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 3, 40, 40, 39613],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1901418, 2, 300, 2],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4, 3, 89478486, 4],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([10, 10, 42949673],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1019733],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4, 3, 357913942],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([1001730],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([16, 8400, 80],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([8, 10164, 80],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1014705],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([715827883, 2, 3],"float16"), 0.6931471805599453, )
paddle.Tensor.__rsub__(Tensor([1029329],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4, 157920, 3],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([12, 256, 20, 20],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2, 2, 570425345],"int64"), 1.5, )
paddle.Tensor.__rsub__(Tensor([2, 1140850690],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([12, 256, 20, 20],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([34817, 1, 256, 256],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([570425345, 2, 2],"float32"), 1.5, )
paddle.Tensor.__rsub__(Tensor([12, 3, 10, 10, 633806],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([119304648, 3, 3, 4],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([1017677],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([570425345, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4, 3, 3, 119304648],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([16, 7581, 80],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([228170138, 1, 1, 10],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1431655766, 3],"float16"), 0.0, )
paddle.Tensor.__rsub__(Tensor([12, 3, 20, 3169030, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([51856850, 11, 4],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([52, 4, 5, 313421, 7],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([20, 1, 152, 750560],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([4, 357913942, 3],"float16"), -4.0, )
paddle.Tensor.__rsub__(Tensor([13, 1, 1, 175515491],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([1001730],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2281701379],"float32"), 4, )
paddle.Tensor.__rsub__(Tensor([8, 5376, 80],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2147483649, 2],"float16"), 0.5, )
paddle.Tensor.__rsub__(Tensor([16121, 811],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([12, 128, 40, 40],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2, 1140850690, 1],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([12, 3, 1584515, 40, 1],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([4, 34817, 128, 128],"float32"), 0, )
paddle.Tensor.__rsub__(Tensor([16, 2100, 80],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([10, 429496730],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([100, 200, 214749],"float16"), 1.0, )
paddle.Tensor.__rsub__(Tensor([2, 107136, 7],"float32"), 1.0, )
paddle.Tensor.__rsub__(Tensor([1, 10164, 224489],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2, 2, 570425345],"float32"), 1.5, )
paddle.Tensor.__rsub__(Tensor([4224, 6629],"float32"), 1, )
paddle.Tensor.__rsub__(Tensor([2, 1140850690],"float32"), 2, )
paddle.Tensor.__rsub__(Tensor([1431655766, 3],"float16"), -4.0, )
paddle.Tensor.__rtruediv__(Tensor([421120, 25, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([3, 357913942, 4],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([456340276, 5],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([760567127, 3],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4294967297],"float16"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2, 2, 570425345],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2147483649, 2],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([867, 280, 376, 25, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([253522376, 9, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([15548, 146753],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4294967297, 1],"float16"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([3887, 1358],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([753286, 3029],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2, 2147483649],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1073741825, 4],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([63380594, 36, 1, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([4, 570425345],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1, 1444, 1580126, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 6.283185307179586, )
paddle.Tensor.__rtruediv__(Tensor([2, 570425345, 2],"int64"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4, 1073741825],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2, 2, 570425345],"int64"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2281701379, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([570425345, 2, 2],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2281701379, 1],"float32"), 0.5, )
paddle.Tensor.__rtruediv__(Tensor([6684, 341368],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2, 1140850690],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([8912897, 256],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([1228, 32, 241, 241],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([11661, 195670],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([190141782, 12],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([3887, 587009],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([60044774, 38, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2, 2, 570425345],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4, 280, 81490, 25, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4981881, 458],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2, 570425345, 2],"int64"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4, 280, 376, 25, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2281701379, 1],"float32"), 5.0, )
paddle.Tensor.__rtruediv__(Tensor([570425345, 2, 2],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([21474837, 200],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([4, 60684, 376, 25, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([6684, 3029],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([3, 760567127],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([421120, 25, 217],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([26736, 3029],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([6, 380283564],"float32"), 5.0, )
paddle.Tensor.__rtruediv__(Tensor([1, 2281701379, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1680193, 1358],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([4, 1073741825],"float16"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([3029, 753286],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([1, 9, 253522376],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([3, 6, 238609295],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([421120, 5419, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([8, 4911, 241, 241],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([6, 380283564],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([3, 1431655766],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([178956971, 6, 4],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([570425345, 2, 2],"int64"), 1, )
paddle.Tensor.__rtruediv__(Tensor([3, 760567127],"float32"), 0.5, )
paddle.Tensor.__rtruediv__(Tensor([2, 570425345, 2],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([512, 4456449],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([8, 32, 36983, 241],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2, 570425345, 2],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 2, )
paddle.Tensor.__rtruediv__(Tensor([1, 1444, 1, 1580126],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([8, 32, 241, 241],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([4294967297],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([3, 760567127],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 10.0, )
paddle.Tensor.__rtruediv__(Tensor([4, 570425345],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([26736, 85342],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2, 1140850690],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([8, 32, 241, 36983],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1580126, 1444, 1, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([1, 36, 1, 63380594],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([570425345, 2, 2],"int64"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([760567127, 3],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([4, 280, 376, 5419, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([1, 2281701379, 1, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([858993460, 5],"float16"), 1, )
paddle.Tensor.__rtruediv__(Tensor([3029, 458],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([1, 36, 63380594, 1],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([4294967297],"float16"), 127.0, )
paddle.Tensor.__rtruediv__(Tensor([91268056, 25, 1],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([10, 228170138],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([15548, 1358],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([1, 38, 60044774],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([2, 2, 570425345],"int64"), 1, )
paddle.Tensor.__rtruediv__(Tensor([11661, 1358],"float32"), 1.0, )
paddle.Tensor.__rtruediv__(Tensor([2281701379],"float32"), 2.0, )
paddle.Tensor.__rtruediv__(Tensor([380283564, 6],"float32"), 1, )
paddle.Tensor.__rtruediv__(Tensor([4, 280, 376, 25, 217],"float32"), 1.0, )
paddle.Tensor.__rxor__(Tensor([152113426, 3, 5],"int32"), True, )
paddle.Tensor.__rxor__(Tensor([2, 3, 380283564],"int32"), 5, )
paddle.Tensor.__rxor__(Tensor([2, 228170138, 5],"int32"), 5, )
paddle.Tensor.__rxor__(Tensor([2, 3, 380283564],"int32"), True, )
paddle.Tensor.__rxor__(Tensor([2, 228170138, 5],"int32"), True, )
paddle.Tensor.__rxor__(Tensor([152113426, 3, 5],"int32"), 5, )
paddle.Tensor.__sub__(Tensor([10595, 80],"float32"), Tensor([10595, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([272, 5376],"float32"), Tensor([272, 5376],"float32"), )
paddle.Tensor.__sub__(Tensor([15708, 80],"float32"), Tensor([15708, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 138, 56784, 1],"float32"), Tensor([1, 1, 56784, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([6670, 80],"float32"), Tensor([6670, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([24, 294624, 2],"float32"), Tensor([24, 294624, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([100, 1, 11408507, 2],"float32"), 0.5, )
paddle.Tensor.__sub__(Tensor([15, 350178],"float32"), Tensor([15, 350178],"float32"), )
paddle.Tensor.__sub__(Tensor([64, 29, 1360],"float32"), Tensor([64, 29, 1360],"float32"), )
paddle.Tensor.__sub__(Tensor([9, 63000, 2],"float32"), Tensor([9, 63000, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([13, 55680, 2],"float32"), Tensor([13, 55680, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([865633],"float32"), Tensor([865633],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 48, 10164, 2],"float32"), Tensor([2, 48, 10164, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([9669, 80],"float32"), Tensor([9669, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 130, 5376, 2],"float32"), Tensor([2, 130, 5376, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([11, 70290, 2],"float32"), Tensor([11, 70290, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 29, 24276, 2],"float32"), Tensor([1, 29, 24276, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([19418, 80],"float32"), Tensor([19418, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 61236, 1],"float32"), Tensor([1, 30, 61236, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([80, 11109, 2],"float32"), Tensor([80, 11109, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([12790, 80],"float32"), Tensor([12790, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([947132],"float32"), Tensor([947132],"float32"), )
paddle.Tensor.__sub__(Tensor([964440, 1],"float32"), Tensor([964440, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([32844, 80],"float32"), Tensor([32844, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 37, 5376, 2],"float32"), Tensor([2, 37, 5376, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 120, 10164, 1],"float32"), Tensor([1, 1, 10164, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([10, 320739],"float32"), Tensor([10, 320739],"float32"), )
paddle.Tensor.__sub__(Tensor([763097],"float32"), Tensor([763097],"float32"), )
paddle.Tensor.__sub__(Tensor([8456, 80],"float32"), Tensor([8456, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([64, 13, 2577, 2],"float32"), Tensor([64, 13, 2577, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([14780, 80],"float32"), Tensor([14780, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([6, 86640, 2],"float32"), Tensor([6, 86640, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([7276, 80],"float32"), Tensor([7276, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 119, 4725, 1],"float32"), Tensor([1, 1, 4725, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([16818, 80],"float32"), Tensor([16818, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([16, 22, 2541, 2],"float32"), Tensor([16, 22, 2541, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([508, 7581, 2],"float32"), Tensor([508, 7581, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([42648, 80],"float32"), Tensor([42648, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([21765, 80],"float32"), Tensor([21765, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([128, 17825793],"float32"), 20.0, )
paddle.Tensor.__sub__(Tensor([16, 28, 3549],"float32"), Tensor([16, 28, 3549],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 74, 65856],"float32"), Tensor([1, 74, 65856],"float32"), )
paddle.Tensor.__sub__(Tensor([16, 13, 8400],"float32"), Tensor([16, 13, 8400],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 50, 10164, 2],"float32"), Tensor([2, 50, 10164, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([60102, 80],"float32"), Tensor([60102, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 135, 7581, 2],"float32"), Tensor([4, 135, 7581, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([10518, 80],"float32"), Tensor([10518, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([23930, 80],"float32"), Tensor([23930, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([96, 8400, 2],"float32"), Tensor([96, 8400, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([9, 379050],"float32"), Tensor([9, 379050],"float32"), )
paddle.Tensor.__sub__(Tensor([544, 6804],"float32"), Tensor([544, 6804],"float32"), )
paddle.Tensor.__sub__(Tensor([849464],"float32"), Tensor([849464],"float32"), )
paddle.Tensor.__sub__(Tensor([8, 27, 12096, 2],"float32"), Tensor([8, 27, 12096, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([6288, 80],"float32"), Tensor([6288, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([12712, 80],"float32"), Tensor([12712, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([21776, 80],"float32"), Tensor([21776, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([33912, 80],"float32"), Tensor([33912, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 74, 6804, 2],"float32"), Tensor([2, 74, 6804, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([18792, 80],"float32"), Tensor([18792, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([13472, 80],"float32"), Tensor([13472, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([12800, 80],"float32"), Tensor([12800, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([8370, 80],"float32"), Tensor([8370, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([13680, 80],"float32"), Tensor([13680, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([7824, 80],"float32"), Tensor([7824, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([10, 193368],"float32"), Tensor([10, 193368],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 24, 40656, 1],"float32"), Tensor([1, 1, 40656, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([37155, 80],"float32"), Tensor([37155, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([13215, 80],"float32"), Tensor([13215, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([12, 294624, 2],"float32"), Tensor([12, 294624, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([20, 55200, 2],"float32"), Tensor([20, 55200, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([19812, 80],"float32"), Tensor([19812, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([16, 29, 2100],"float32"), Tensor([16, 29, 2100],"float32"), )
paddle.Tensor.__sub__(Tensor([11, 398487],"float32"), Tensor([11, 398487],"float32"), )
paddle.Tensor.__sub__(Tensor([6916, 80],"float32"), Tensor([6916, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([18522, 80],"float32"), Tensor([18522, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([51324, 80],"float32"), Tensor([51324, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([104, 11109, 2],"float32"), Tensor([104, 11109, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([33480, 80],"float32"), Tensor([33480, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([10, 369303, 2],"float32"), Tensor([10, 369303, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([27, 75840, 2],"float32"), Tensor([27, 75840, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([8558, 80],"float32"), Tensor([8558, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([11545, 80],"float32"), Tensor([11545, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([14672, 80],"float32"), Tensor([14672, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([11, 333018],"float32"), Tensor([11, 333018],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 221848, 10285, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([18171, 80],"float32"), Tensor([18171, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([2368, 1360, 2],"float32"), Tensor([2368, 1360, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([64, 52, 2577],"float32"), Tensor([64, 52, 2577],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 25, 11109],"float32"), Tensor([2, 25, 11109],"float32"), )
paddle.Tensor.__sub__(Tensor([822154],"float32"), Tensor([822154],"float32"), )
paddle.Tensor.__sub__(Tensor([2, 64, 9261, 1],"float32"), Tensor([1, 1, 9261, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([11825, 80],"float32"), Tensor([11825, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([18261, 80],"float32"), Tensor([18261, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([10755, 80],"float32"), Tensor([10755, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 1, 48384, 1],"float32"), Tensor([1, 75, 48384, 1],"float32"), )
paddle.Tensor.__sub__(Tensor([42156, 80],"float32"), Tensor([42156, 80],"float32"), )
paddle.Tensor.__sub__(Tensor([15, 262428],"float32"), Tensor([15, 262428],"float32"), )
paddle.Tensor.__sub__(Tensor([973555],"float32"), Tensor([973555],"float32"), )
paddle.Tensor.__sub__(Tensor([4, 79380, 2],"float32"), Tensor([4, 79380, 2],"float32"), )
paddle.Tensor.__sub__(Tensor([1, 15, 61236],"float32"), Tensor([1, 15, 61236],"float32"), )
paddle.Tensor.__truediv__(Tensor([16, 23, 10164],"float32"), Tensor([16, 23, 10164],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 327360],"float32"), Tensor([2, 327360],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 57, 30324],"float32"), Tensor([1, 57, 30324],"float32"), )
paddle.Tensor.__truediv__(Tensor([16, 7, 4725],"float32"), Tensor([16, 7, 4725],"float32"), )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 44, )
paddle.Tensor.__truediv__(Tensor([1216, 1360],"float32"), Tensor([1216, 1360],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 3, 19, 19, 1053418],"float32"), 19, )
paddle.Tensor.__truediv__(Tensor([1, 36, 37044],"float32"), Tensor([1, 36, 37044],"float32"), )
paddle.Tensor.__truediv__(Tensor([7, 252681],"float32"), Tensor([7, 252681],"float32"), )
paddle.Tensor.__truediv__(Tensor([11, 220992],"float32"), Tensor([11, 220992],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 160, 6804],"float32"), Tensor([2, 160, 6804],"float32"), )
paddle.Tensor.__truediv__(Tensor([30, 220968],"float32"), Tensor([30, 220968],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 88560],"float32"), Tensor([8, 88560],"float32"), )
paddle.Tensor.__truediv__(Tensor([11, 369303],"float32"), Tensor([11, 369303],"float32"), )
paddle.Tensor.__truediv__(Tensor([9, 295647],"float32"), Tensor([9, 295647],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 67, 8400],"float32"), Tensor([2, 67, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([48, 205923],"float32"), Tensor([48, 205923],"float32"), )
paddle.Tensor.__truediv__(Tensor([31, 60480],"float32"), Tensor([31, 60480],"float32"), )
paddle.Tensor.__truediv__(Tensor([915594],"float32"), Tensor([915594],"float32"), )
paddle.Tensor.__truediv__(Tensor([285213, 8000],"float32"), 0.333, )
paddle.Tensor.__truediv__(Tensor([208, 2541],"float32"), Tensor([208, 2541],"float32"), )
paddle.Tensor.__truediv__(Tensor([200, 3024],"float32"), Tensor([200, 3024],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 68, 37044],"float32"), Tensor([1, 68, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 167, 8400],"float32"), Tensor([4, 167, 8400],"float32"), )
paddle.Tensor.__truediv__(Tensor([905744],"float32"), Tensor([905744],"float32"), )
paddle.Tensor.__truediv__(Tensor([7, 249405],"float32"), Tensor([7, 249405],"float32"), )
paddle.Tensor.__truediv__(Tensor([16, 18, 3024],"float32"), Tensor([16, 18, 3024],"float32"), )
paddle.Tensor.__truediv__(Tensor([19, 53100],"float32"), Tensor([19, 53100],"float32"), )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 161, )
paddle.Tensor.__truediv__(Tensor([16, 256, 48, 48],"float32"), Tensor([16, 1, 48, 48],"float32"), )
paddle.Tensor.__truediv__(Tensor([5, 330429],"float32"), Tensor([5, 330429],"float32"), )
paddle.Tensor.__truediv__(Tensor([9, 268569],"float32"), Tensor([9, 268569],"float32"), )
paddle.Tensor.__truediv__(Tensor([3072, 742742],"float32"), 2.8284271247461903, )
paddle.Tensor.__truediv__(Tensor([1, 60, 56784],"float32"), Tensor([1, 60, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([128, 192, 7, 7],"float32"), 0.85, )
paddle.Tensor.__truediv__(Tensor([15, 279279],"float32"), Tensor([15, 279279],"float32"), )
paddle.Tensor.__truediv__(Tensor([49, 343728],"float32"), Tensor([49, 343728],"float32"), )
paddle.Tensor.__truediv__(Tensor([37, 359100],"float32"), Tensor([37, 359100],"float32"), )
paddle.Tensor.__truediv__(Tensor([6, 205923],"float32"), Tensor([6, 205923],"float32"), )
paddle.Tensor.__truediv__(Tensor([11, 78750],"float32"), Tensor([11, 78750],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 204624],"float32"), Tensor([4, 204624],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 33, 9261],"float32"), Tensor([8, 33, 9261],"float32"), )
paddle.Tensor.__truediv__(Tensor([946388],"float32"), Tensor([946388],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 43, 8400],"float32"), Tensor([2, 43, 8400],"float32"), )
paddle.Tensor.__truediv__(Tensor([31, 217413],"float32"), Tensor([31, 217413],"float32"), )
paddle.Tensor.__truediv__(Tensor([2048, 1024, 1, 1],"float32"), 0.9992704001300187, )
paddle.Tensor.__truediv__(Tensor([14, 80640],"float32"), Tensor([14, 80640],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 60, 8400],"float32"), Tensor([2, 60, 8400],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 1, 1, 2281701379],"float32"), 0.9992704001300187, )
paddle.Tensor.__truediv__(Tensor([7, 269586],"float32"), Tensor([7, 269586],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 45, 44436],"float32"), Tensor([1, 45, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([6, 331452],"float32"), Tensor([6, 331452],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 18, 4116],"float32"), Tensor([8, 18, 4116],"float32"), )
paddle.Tensor.__truediv__(Tensor([13, 84420],"float32"), Tensor([13, 84420],"float32"), )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 78, )
paddle.Tensor.__truediv__(Tensor([64, 42, 1360],"float32"), Tensor([64, 42, 1360],"float32"), )
paddle.Tensor.__truediv__(Tensor([16, 24, 9261],"float32"), Tensor([16, 24, 9261],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 64, 44436],"float32"), Tensor([1, 64, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([184, 8400],"float32"), Tensor([184, 8400],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 188256],"float32"), Tensor([4, 188256],"float32"), )
paddle.Tensor.__truediv__(Tensor([2176, 3060],"float32"), Tensor([2176, 3060],"float32"), )
paddle.Tensor.__truediv__(Tensor([16, 31, 3549],"float32"), Tensor([16, 31, 3549],"float32"), )
paddle.Tensor.__truediv__(Tensor([8, 25, 3024],"float32"), Tensor([8, 25, 3024],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 16, 70644],"float32"), Tensor([1, 16, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([18, 71820],"float32"), Tensor([18, 71820],"float32"), )
paddle.Tensor.__truediv__(Tensor([1017677],"float32"), Tensor([1017677],"float32"), )
paddle.Tensor.__truediv__(Tensor([966472],"float32"), Tensor([966472],"float32"), )
paddle.Tensor.__truediv__(Tensor([16, 45, 10164],"float32"), Tensor([16, 45, 10164],"float32"), )
paddle.Tensor.__truediv__(Tensor([224, 9261],"float32"), Tensor([224, 9261],"float32"), )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 163, )
paddle.Tensor.__truediv__(Tensor([1, 59, 52500],"float32"), Tensor([1, 59, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 36, 7581],"float32"), Tensor([2, 36, 7581],"float32"), )
paddle.Tensor.__truediv__(Tensor([15, 242991],"float32"), Tensor([15, 242991],"float32"), )
paddle.Tensor.__truediv__(Tensor([6, 333018],"float32"), Tensor([6, 333018],"float32"), )
paddle.Tensor.__truediv__(Tensor([28, 268569],"float32"), Tensor([28, 268569],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 73, 70644],"float32"), Tensor([1, 73, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([912645],"float32"), Tensor([912645],"float32"), )
paddle.Tensor.__truediv__(Tensor([3, 286977],"float32"), Tensor([3, 286977],"float32"), )
paddle.Tensor.__truediv__(Tensor([27, 86940],"float32"), Tensor([27, 86940],"float32"), )
paddle.Tensor.__truediv__(Tensor([10709, 405],"float32"), Tensor([10709, 405],"float32"), )
paddle.Tensor.__truediv__(Tensor([16, 40, 8400],"float32"), Tensor([16, 40, 8400],"float32"), )
paddle.Tensor.__truediv__(Tensor([28, 69750],"float32"), Tensor([28, 69750],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 54, 65856],"float32"), Tensor([1, 54, 65856],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 120, 10164],"float32"), Tensor([2, 120, 10164],"float32"), )
paddle.Tensor.__truediv__(Tensor([26, 61500],"float32"), Tensor([26, 61500],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 59, 27216],"float32"), Tensor([1, 59, 27216],"float32"), )
paddle.Tensor.__truediv__(Tensor([3, 368280],"float32"), Tensor([3, 368280],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 50, 8400],"float32"), Tensor([2, 50, 8400],"float32"), )
paddle.Tensor.__truediv__(Tensor([2048, 512, 1, 1],"float32"), 0.9996676942353445, )
paddle.Tensor.__truediv__(Tensor([13, 277539],"float32"), Tensor([13, 277539],"float32"), )
paddle.Tensor.__truediv__(Tensor([168, 10164],"float32"), Tensor([168, 10164],"float32"), )
paddle.Tensor.__truediv__(Tensor([2281701379],"float32"), 30, )
paddle.Tensor.__truediv__(Tensor([1, 108, 21504],"float32"), Tensor([1, 108, 1],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 133, 6069],"float32"), Tensor([2, 133, 6069],"float32"), )
paddle.Tensor.__truediv__(Tensor([15, 379050],"float32"), Tensor([15, 379050],"float32"), )
paddle.Tensor.__truediv__(Tensor([6, 260865],"float32"), Tensor([6, 260865],"float32"), )
paddle.Tensor.__truediv__(Tensor([2, 46, 8400],"float32"), Tensor([2, 46, 8400],"float32"), )
paddle.Tensor.__truediv__(Tensor([1, 16, 40656],"float32"), Tensor([1, 16, 40656],"float32"), )
paddle.Tensor.__truediv__(Tensor([13, 75555],"float32"), Tensor([13, 75555],"float32"), )
paddle.Tensor.__truediv__(Tensor([18, 75240],"float32"), Tensor([18, 75240],"float32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 228170138, 5],"int64"), Tensor([2, 228170138, 5],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), )
paddle.Tensor.__xor__(Tensor([152113426, 3, 5],"int64"), Tensor([152113426, 3, 5],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 380283564],"int64"), Tensor([2, 3, 380283564],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.Tensor.__xor__(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.Tensor.__xor__(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.Tensor.abs(Tensor([15804, 80],"float32"), )
paddle.Tensor.abs(Tensor([17880, 80],"float32"), )
paddle.Tensor.abs(Tensor([26100, 80],"float32"), )
paddle.Tensor.abs(Tensor([16230, 80],"float32"), )
paddle.Tensor.abs(Tensor([16160, 80],"float32"), )
paddle.Tensor.abs(Tensor([43812, 80],"float32"), )
paddle.Tensor.abs(Tensor([25676, 80],"float32"), )
paddle.Tensor.abs(Tensor([22770, 80],"float32"), )
paddle.Tensor.abs(Tensor([16405, 80],"float32"), )
paddle.Tensor.abs(Tensor([18556, 80],"float32"), )
paddle.Tensor.abs(Tensor([61100, 80],"float32"), )
paddle.Tensor.abs(Tensor([73728, 80],"float32"), )
paddle.Tensor.abs(Tensor([73920, 80],"float32"), )
paddle.Tensor.abs(Tensor([42848, 80],"float32"), )
paddle.Tensor.abs(Tensor([22049, 80],"float32"), )
paddle.Tensor.abs(Tensor([13200, 80],"float32"), )
paddle.Tensor.abs(Tensor([18340, 80],"float32"), )
paddle.Tensor.abs(Tensor([23353, 80],"float32"), )
paddle.Tensor.abs(Tensor([42675, 80],"float32"), )
paddle.Tensor.abs(Tensor([51425, 80],"float32"), )
paddle.Tensor.abs(Tensor([89550, 80],"float32"), )
paddle.Tensor.abs(Tensor([37650, 80],"float32"), )
paddle.Tensor.abs(Tensor([49878, 80],"float32"), )
paddle.Tensor.abs(Tensor([42498, 80],"float32"), )
paddle.Tensor.abs(Tensor([40411, 80],"float32"), )
paddle.Tensor.abs(Tensor([16492, 80],"float32"), )
paddle.Tensor.abs(Tensor([19884, 80],"float32"), )
paddle.Tensor.abs(Tensor([29640, 80],"float32"), )
paddle.Tensor.abs(Tensor([22971, 80],"float32"), )
paddle.Tensor.abs(Tensor([36315, 80],"float32"), )
paddle.Tensor.abs(Tensor([21492, 80],"float32"), )
paddle.Tensor.abs(Tensor([23870, 80],"float32"), )
paddle.Tensor.abs(Tensor([46208, 80],"float32"), )
paddle.Tensor.abs(Tensor([22664, 80],"float32"), )
paddle.Tensor.abs(Tensor([18236, 80],"float32"), )
paddle.Tensor.abs(Tensor([22113, 80],"float32"), )
paddle.Tensor.abs(Tensor([25860, 80],"float32"), )
paddle.Tensor.abs(Tensor([188160, 80],"float32"), )
paddle.Tensor.abs(Tensor([26129, 80],"float32"), )
paddle.Tensor.abs(Tensor([20784, 80],"float32"), )
paddle.Tensor.abs(Tensor([17225, 80],"float32"), )
paddle.Tensor.abs(Tensor([25522, 80],"float32"), )
paddle.Tensor.abs(Tensor([16260, 80],"float32"), )
paddle.Tensor.abs(Tensor([48840, 80],"float32"), )
paddle.Tensor.abs(Tensor([13185, 80],"float32"), )
paddle.Tensor.abs(Tensor([13380, 80],"float32"), )
paddle.Tensor.abs(Tensor([37125, 80],"float32"), )
paddle.Tensor.abs(Tensor([19116, 80],"float32"), )
paddle.Tensor.abs(Tensor([207360, 80],"float32"), )
paddle.Tensor.abs(Tensor([35168, 80],"float32"), )
paddle.Tensor.abs(Tensor([19475, 80],"float32"), )
paddle.Tensor.abs(Tensor([20529, 80],"float32"), )
paddle.Tensor.abs(Tensor([16965, 80],"float32"), )
paddle.Tensor.abs(Tensor([24048, 80],"float32"), )
paddle.Tensor.abs(Tensor([18249, 80],"float32"), )
paddle.Tensor.abs(Tensor([22872, 80],"float32"), )
paddle.Tensor.abs(Tensor([13392, 80],"float32"), )
paddle.Tensor.abs(Tensor([66435, 80],"float32"), )
paddle.Tensor.abs(Tensor([18689, 80],"float32"), )
paddle.Tensor.abs(Tensor([33344, 80],"float32"), )
paddle.Tensor.abs(Tensor([33583, 80],"float32"), )
paddle.Tensor.abs(Tensor([12762, 80],"float32"), )
paddle.Tensor.abs(Tensor([12825, 80],"float32"), )
paddle.Tensor.abs(Tensor([27216, 80],"float32"), )
paddle.Tensor.abs(Tensor([21505, 80],"float32"), )
paddle.Tensor.abs(Tensor([28524, 80],"float32"), )
paddle.Tensor.abs(Tensor([18768, 80],"float32"), )
paddle.Tensor.abs(Tensor([72520, 80],"float32"), )
paddle.Tensor.abs(Tensor([19112, 80],"float32"), )
paddle.Tensor.abs(Tensor([21455, 80],"float32"), )
paddle.Tensor.abs(Tensor([20048, 80],"float32"), )
paddle.Tensor.abs(Tensor([65780, 80],"float32"), )
paddle.Tensor.abs(Tensor([13014, 80],"float32"), )
paddle.Tensor.abs(Tensor([38063, 80],"float32"), )
paddle.Tensor.abs(Tensor([34175, 80],"float32"), )
paddle.Tensor.abs(Tensor([27721, 80],"float32"), )
paddle.Tensor.abs(Tensor([19904, 80],"float32"), )
paddle.Tensor.abs(Tensor([31542, 80],"float32"), )
paddle.Tensor.abs(Tensor([28872, 80],"float32"), )
paddle.Tensor.abs(Tensor([19515, 80],"float32"), )
paddle.Tensor.abs(Tensor([36450, 80],"float32"), )
paddle.Tensor.abs(Tensor([19175, 80],"float32"), )
paddle.Tensor.abs(Tensor([21344, 80],"float32"), )
paddle.Tensor.abs(Tensor([15127, 80],"float32"), )
paddle.Tensor.abs(Tensor([48544, 80],"float32"), )
paddle.Tensor.abs(Tensor([40212, 80],"float32"), )
paddle.Tensor.abs(Tensor([24339, 80],"float32"), )
paddle.Tensor.abs(Tensor([100548, 80],"float32"), )
paddle.Tensor.abs(Tensor([25675, 80],"float32"), )
paddle.Tensor.abs(Tensor([44142, 80],"float32"), )
paddle.Tensor.abs(Tensor([17448, 80],"float32"), )
paddle.Tensor.abs(Tensor([25279, 80],"float32"), )
paddle.Tensor.abs(Tensor([17320, 80],"float32"), )
paddle.Tensor.abs(Tensor([48874, 80],"float32"), )
paddle.Tensor.abs(Tensor([71484, 80],"float32"), )
paddle.Tensor.abs(Tensor([22077, 80],"float32"), )
paddle.Tensor.abs(Tensor([27024, 80],"float32"), )
paddle.Tensor.abs(Tensor([1002, 2277148],"float32"), )
paddle.Tensor.abs(Tensor([15536, 80],"float32"), )
paddle.Tensor.abs(Tensor([28452, 80],"float32"), )
paddle.Tensor.add(Tensor([50, 45634028],"float32"), Tensor([50, 45634028],"float32"), )
paddle.Tensor.add(Tensor([114085069, 20],"float32"), Tensor([114085069, 20],"float32"), )
paddle.Tensor.add(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), )
paddle.Tensor.add(Tensor([48, 47535446],"float32"), Tensor([48, 1],"float32"), )
paddle.Tensor.add(Tensor([35651585, 64],"float32"), Tensor([35651585, 64],"float32"), )
paddle.Tensor.add(Tensor([45634028, 50],"float32"), Tensor([45634028, 50],"float32"), )
paddle.Tensor.add(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.Tensor.add(Tensor([456340276, 5],"float32"), Tensor([456340276, 5],"float32"), )
paddle.Tensor.add(Tensor([64, 35651585],"float32"), Tensor([64, 35651585],"float32"), )
paddle.Tensor.add(Tensor([2, 285212673, 4],"float32"), Tensor([2, 285212673, 4],"float32"), )
paddle.Tensor.add(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), )
paddle.Tensor.add(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 3, 4],"float32"), )
paddle.Tensor.add(Tensor([20, 1],"float32"), Tensor([20, 114085069],"float32"), )
paddle.Tensor.add(Tensor([90, 25352238],"float32"), Tensor([90, 25352238],"float32"), )
paddle.Tensor.add(Tensor([20, 114085069],"float32"), Tensor([20, 114085069],"float32"), )
paddle.Tensor.add(Tensor([48, 1],"float32"), Tensor([48, 47535446],"float32"), )
paddle.Tensor.add(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), )
paddle.Tensor.add(Tensor([15, 152113426],"float32"), Tensor([15, 152113426],"float32"), )
paddle.Tensor.add(Tensor([47535446, 48],"float32"), Tensor([47535446, 48],"float32"), )
paddle.Tensor.add(Tensor([48, 47535446],"float32"), Tensor([48, 47535446],"float32"), )
paddle.Tensor.add(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.add(Tensor([25352238, 90],"float32"), Tensor([25352238, 90],"float32"), )
paddle.Tensor.add(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.add(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.add(Tensor([3, 760567127],"float32"), Tensor([3, 760567127],"float32"), )
paddle.Tensor.add(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3, 380283564],"float32"), )
paddle.Tensor.add(Tensor([20, 114085069],"float32"), Tensor([20, 1],"float32"), )
paddle.Tensor.all(Tensor([2, 10371370, 1, 110],"bool"), )
paddle.Tensor.all(Tensor([15489, 36828, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 1, 1114113, 2048],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10466521, 109],"bool"), )
paddle.Tensor.all(Tensor([20372334, 1, 1, 112],"bool"), )
paddle.Tensor.all(Tensor([7605672, 300],"bool"), )
paddle.Tensor.all(Tensor([2, 9507090, 1, 120],"bool"), )
paddle.Tensor.all(Tensor([7131, 10, 32000],"bool"), )
paddle.Tensor.all(Tensor([1901418, 48, 5, 5],"bool"), )
paddle.Tensor.all(Tensor([1, 14260634, 10, 16],"bool"), )
paddle.Tensor.all(Tensor([56123, 10164, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 1, 11076221, 103],"bool"), )
paddle.Tensor.all(Tensor([1, 1426064, 40, 40],"bool"), )
paddle.Tensor.all(Tensor([1, 64, 891290, 40],"bool"), )
paddle.Tensor.all(Tensor([1, 2281701379],"bool"), )
paddle.Tensor.all(Tensor([1, 576, 3961288, 1],"bool"), )
paddle.Tensor.all(Tensor([2, 9834920, 1, 116],"bool"), )
paddle.Tensor.all(Tensor([100, 22817014],"bool"), )
paddle.Tensor.all(Tensor([22283, 64, 40, 40],"bool"), )
paddle.Tensor.all(Tensor([1, 16, 3565159, 40],"bool"), )
paddle.Tensor.all(Tensor([1, 5376, 424424],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 1, 11295552, 101],"bool"), )
paddle.Tensor.all(Tensor([14260634, 1, 10, 16],"bool"), )
paddle.Tensor.all(Tensor([1, 1024, 1114113, 2],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10969719, 104],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10662156, 107],"bool"), )
paddle.Tensor.all(Tensor([19501722, 1, 1, 117],"bool"), )
paddle.Tensor.all(Tensor([20555869, 1, 1, 111],"bool"), )
paddle.Tensor.all(Tensor([2, 10466521, 1, 109],"bool"), )
paddle.Tensor.all(Tensor([2, 10662156, 1, 107],"bool"), )
paddle.Tensor.all(Tensor([2, 10563433, 1, 108],"bool"), )
paddle.Tensor.all(Tensor([57042535, 40],"bool"), )
paddle.Tensor.all(Tensor([19014179, 1, 1, 120],"bool"), )
paddle.Tensor.all(Tensor([545, 1, 2048, 2048],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10563433, 108],"bool"), )
paddle.Tensor.all(Tensor([1, 96, 3, 7922575],"bool"), )
paddle.Tensor.all(Tensor([19669840, 1, 1, 116],"bool"), )
paddle.Tensor.all(Tensor([20742740, 1, 1, 110],"bool"), )
paddle.Tensor.all(Tensor([1, 1, 142606337, 16],"bool"), )
paddle.Tensor.all(Tensor([6, 380283564],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 9668227, 118],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 11408507, 100],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10186167, 112],"bool"), )
paddle.Tensor.all(Tensor([1, 48, 5, 9507090],"bool"), )
paddle.Tensor.all(Tensor([1, 22817014, 10, 10],"bool"), )
paddle.Tensor.all(Tensor([1, 1, 2048, 2048],"bool"), )
paddle.Tensor.all(Tensor([2640859, 96, 3, 3],"bool"), )
paddle.Tensor.all(Tensor([21939437, 1, 1, 104],"bool"), )
paddle.Tensor.all(Tensor([1, 570425345, 2, 2],"bool"), )
paddle.Tensor.all(Tensor([2, 11645, 97970],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 38367, 59471],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([557057, 1024, 2, 2],"bool"), )
paddle.Tensor.all(Tensor([21525485, 1, 1, 106],"bool"), )
paddle.Tensor.all(Tensor([2, 10007463, 1, 114],"bool"), )
paddle.Tensor.all(Tensor([20192048, 1, 1, 113],"bool"), )
paddle.Tensor.all(Tensor([1, 8400, 271632],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 1, 11184811, 102],"bool"), )
paddle.Tensor.all(Tensor([22152441, 1, 1, 103],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 1, 1140850690],"bool"), )
paddle.Tensor.all(Tensor([1, 1024, 2, 1114113],"bool"), )
paddle.Tensor.all(Tensor([3961288, 576, 1, 1],"bool"), )
paddle.Tensor.all(Tensor([1, 545, 2048, 2048],"bool"), )
paddle.Tensor.all(Tensor([1, 512, 2, 2228225],"bool"), )
paddle.Tensor.all(Tensor([2, 11408507, 1, 100],"bool"), )
paddle.Tensor.all(Tensor([1, 24, 40, 2376773],"bool"), )
paddle.Tensor.all(Tensor([4563403, 500],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 9507090, 120],"bool"), )
paddle.Tensor.all(Tensor([89129, 16, 40, 40],"bool"), )
paddle.Tensor.all(Tensor([22817014, 1, 1, 100],"bool"), )
paddle.Tensor.all(Tensor([83837, 6804, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 91268056, 5, 5],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10096024, 113],"bool"), )
paddle.Tensor.all(Tensor([1114113, 512, 2, 2],"bool"), )
paddle.Tensor.all(Tensor([20014925, 1, 1, 114],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10371370, 110],"bool"), )
paddle.Tensor.all(Tensor([2, 4457, 256000],"bool"), )
paddle.Tensor.all(Tensor([456340276, 5],"bool"), )
paddle.Tensor.all(Tensor([2, 10865245, 1, 105],"bool"), )
paddle.Tensor.all(Tensor([93991, 6069, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([48985, 11645, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 9668227, 1, 118],"bool"), )
paddle.Tensor.all(Tensor([1, 10164, 224489],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 1, 9586981, 119],"bool"), )
paddle.Tensor.all(Tensor([1, 48, 9507090, 5],"bool"), )
paddle.Tensor.all(Tensor([2, 35652, 32000],"bool"), )
paddle.Tensor.all(Tensor([2, 9750861, 1, 117],"bool"), )
paddle.Tensor.all(Tensor([1, 576, 1, 3961288],"bool"), )
paddle.Tensor.all(Tensor([59420, 24, 40, 40],"bool"), )
paddle.Tensor.all(Tensor([47159, 12096, 4],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([2, 1, 10865245, 105],"bool"), )
paddle.Tensor.all(Tensor([1, 36828, 61956],"bool"), -1, keepdim=True, )
paddle.Tensor.all(Tensor([1, 2, 71303169, 16],"bool"), )
paddle.Tensor.all(Tensor([1, 1, 10, 228170138],"bool"), )
paddle.Tensor.all(Tensor([2, 11184811, 1, 102],"bool"), )
paddle.Tensor.all(Tensor([5, 91268056, 5],"bool"), )
paddle.Tensor.all(Tensor([19173962, 1, 1, 119],"bool"), )
paddle.Tensor.all(Tensor([2, 10969719, 1, 104],"bool"), )
paddle.Tensor.all(Tensor([1, 512, 2228225, 2],"bool"), )
paddle.Tensor.all(Tensor([2281701379],"bool"), )
paddle.Tensor.all(Tensor([2, 1, 10007463, 114],"bool"), )
paddle.Tensor.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([3, 38028357, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([570425345, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([2281701379],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([2, 5, 228170138],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([2281701379],"int32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 4, 95070891],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([114085069, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([3, 2, 76056713, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([2281701379],"int64"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([57042535, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([2, 285212673, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([2, 1140850690],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([2281701379],"int32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([57042535, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 4, 95070891],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([2, 1140850690],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([2, 285212673, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([114085069, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([570425345, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 76056713, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([2281701379],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([2, 5, 228170138],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([2281701379],"int64"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.Tensor.amin(Tensor([3, 38028357, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.any(Tensor([2, 61681, 136, 136],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([5, 3, 152113426],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([1, 300, 192, 192],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([325957340, 7],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([2, 285212673, 4],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([21, 108652447],"bool"), )
paddle.Tensor.any(Tensor([4, 7, 81489335],"bool"), axis=2, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4225373, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.any(Tensor([6380, 357634],"bool"), )
paddle.Tensor.any(Tensor([8912897, 64, 4],"bool"), )
paddle.Tensor.any(Tensor([54326224, 7, 6],"bool"), axis=2, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2112687, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([207, 300, 192, 192],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([14, 7, 23282668],"bool"), )
paddle.Tensor.any(Tensor([190141782, 12],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4225373, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2, 5281717],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([2281701379],"bool"), axis=tuple(), )
paddle.Tensor.any(Tensor([14, 5093084, 32],"bool"), )
paddle.Tensor.any(Tensor([9, 253522376],"bool"), )
paddle.Tensor.any(Tensor([95070891, 24],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([190141782, 3, 4],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([1, 2281701379],"bool"), )
paddle.Tensor.any(Tensor([225, 300, 184, 184],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([2, 1140850690],"bool"), )
paddle.Tensor.any(Tensor([4, 570425345],"bool"), )
paddle.Tensor.any(Tensor([253522376, 3, 3],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([5, 114085069, 4],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([1, 300, 176, 43215],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([3169030, 6, 3, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([1, 67395, 184, 184],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([760567127, 3],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([190141782, 3, 4],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([47535446, 8, 2, 3],"bool"), axis=tuple(-1,-2,), )
paddle.Tensor.any(Tensor([900, 2535224],"bool"), )
paddle.Tensor.any(Tensor([3, 760567127],"bool"), )
paddle.Tensor.any(Tensor([4, 8, 2, 35651585],"bool"), axis=tuple(-1,-2,), )
paddle.Tensor.any(Tensor([3, 6, 3169030, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([2, 1140850690],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([3169030, 6, 3, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([1, 300, 41336, 184],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([4, 95070891, 6],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2112687, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.any(Tensor([4, 8, 23767723, 3],"bool"), axis=tuple(-1,-2,), )
paddle.Tensor.any(Tensor([14, 10186167, 16],"bool"), )
paddle.Tensor.any(Tensor([570425345, 4],"bool"), )
paddle.Tensor.any(Tensor([3, 6, 3, 4225373, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([1, 300, 192, 39613],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([14, 64, 2546542],"bool"), )
paddle.Tensor.any(Tensor([3, 3, 253522376],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([1, 300, 184, 184],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([246, 300, 176, 176],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([3, 6, 3169030, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.any(Tensor([4, 570425345],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([14, 40744668, 4],"bool"), )
paddle.Tensor.any(Tensor([11, 207427399],"bool"), )
paddle.Tensor.any(Tensor([14, 1646250, 99],"bool"), )
paddle.Tensor.any(Tensor([3, 6, 3169030, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([1, 300, 176, 176],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([4554295, 501],"bool"), -1, )
paddle.Tensor.any(Tensor([2281701379],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([54326224, 7, 6],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2112687, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([1, 61896, 192, 192],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([8550, 266866],"bool"), )
paddle.Tensor.any(Tensor([8, 285212673],"bool"), -1, )
paddle.Tensor.any(Tensor([3, 6338060, 3, 4, 2, 5],"bool"), axis=3, keepdim=True, )
paddle.Tensor.any(Tensor([300, 7605672],"bool"), )
paddle.Tensor.any(Tensor([760567127, 3],"bool"), )
paddle.Tensor.any(Tensor([2, 3, 380283564],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([5, 456340276],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([2, 300, 27963, 136],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([114085069, 20],"bool"), )
paddle.Tensor.any(Tensor([3292499, 7, 99],"bool"), )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2, 5281717],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([2, 300, 136, 136],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([3, 6338060, 3, 4, 2, 5],"bool"), axis=5, keepdim=True, )
paddle.Tensor.any(Tensor([10186167, 7, 32],"bool"), )
paddle.Tensor.any(Tensor([1, 300, 39613, 192],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([4, 95070891, 6],"bool"), axis=2, keepdim=True, )
paddle.Tensor.any(Tensor([3169030, 6, 3, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.any(Tensor([4, 570425345],"bool"), -1, )
paddle.Tensor.any(Tensor([3, 6338060, 3, 4, 2, 5],"bool"), axis=4, keepdim=True, )
paddle.Tensor.any(Tensor([2228225, 64, 16],"bool"), )
paddle.Tensor.any(Tensor([2281701379],"bool"), )
paddle.Tensor.any(Tensor([1, 73661, 176, 176],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([1, 300, 184, 41336],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([4, 95070891, 2, 3],"bool"), axis=tuple(-1,-2,), )
paddle.Tensor.any(Tensor([54326224, 42],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([7, 325957340],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([3, 253522376, 3],"bool"), axis=0, keepdim=True, )
paddle.Tensor.any(Tensor([1, 300, 43215, 176],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([4, 7, 81489335],"bool"), axis=1, keepdim=True, )
paddle.Tensor.any(Tensor([22, 103713700],"bool"), )
paddle.Tensor.any(Tensor([18, 126761188],"bool"), )
paddle.Tensor.any(Tensor([2, 300, 136, 27963],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([412, 300, 136, 136],"bool"), axis=list[2,3,], )
paddle.Tensor.any(Tensor([200, 11408507],"bool"), )
paddle.Tensor.any(Tensor([3, 6, 3, 4, 2, 5281717],"bool"), axis=4, keepdim=True, )
paddle.Tensor.argmax(Tensor([2, 64, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 109, 33600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 34, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 45, 40656],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([30, 336, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([8, 35, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 9, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 83, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([64, 20, 1726],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 26, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 38, 75600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 35, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 31, 4725],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([30, 253, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([4, 234, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([30, 121, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2, 103, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 27, 37044],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 15, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 30, 65856],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 55, 61236],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 98, 3549],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 34, 3024],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 31, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 29, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 52, 75600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 13, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 92, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([30, 194, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([1, 46, 40656],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 57, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 24, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 121, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 21, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 90, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 26, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 105, 61236],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 77, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 59, 48384],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([8, 20, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 36, 37044],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 319, 2541],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 92, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 28, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 139, 44436],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([30, 118, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([8, 31, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 66, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 29, 52500],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([30, 83, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2282, 125, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2, 49, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 225, 44436],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 22, 65856],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([30, 212, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([16, 21, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 369, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([64, 53, 1726],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 19, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 85, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 1, 2281701379],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 54, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 26, 48384],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 117, 6069],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 171, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([45634028, 50],"float32"), axis=1, dtype="int32", )
paddle.Tensor.argmax(Tensor([1, 35, 75600],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 87, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([30, 139, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([1, 92, 30324],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 31, 52500],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([64, 21, 2577],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 24, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 240, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 190, 52500],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 18, 9261],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 46, 44436],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 28, 5376],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 16, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 159, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 65, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 31, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2770, 103, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([30, 17, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([1, 41, 61236],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 26, 10164],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([64, 44, 2577],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 34, 6804],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 35, 56784],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 17, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 26, 7581],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 45, 44436],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([4, 22, 12096],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([64, 28, 1360],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([2, 70, 8400],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([30, 298, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([2, 92, 11109],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 28, 4116],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([1, 331402, 6885],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([16, 21, 3024],"float32"), axis=-2, )
paddle.Tensor.astype(Tensor([81489335, 4, 7],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([1, 75600, 88],"int32"), "bool", )
paddle.Tensor.astype(Tensor([8, 22, 12096],"int32"), "bool", )
paddle.Tensor.astype(Tensor([570425345, 1, 2, 2],"int32"), "int64", )
paddle.Tensor.astype(Tensor([1, 169, 40656],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 45, 27216],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 83, 6069],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 16, 61, 56, 96],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 41, 2577],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 3, 257, 1479703],"float32"), dtype=VarType(float32), )
paddle.Tensor.astype(Tensor([16, 27, 5184],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 29, 9261],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 84, 6069],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([64, 37, 484],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 190141782, 2, 2, 3],"float32"), "int64", )
paddle.Tensor.astype(Tensor([1, 31, 70644],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 35, 4116],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 28, 5376],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 9, 8464],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([12, 128, 40, 40],"float32"), "float32", )
paddle.Tensor.astype(Tensor([8, 19, 8400],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 2, 87382, 128, 96],"float16"), "float16", )
paddle.Tensor.astype(Tensor([2, 190, 12096],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 1140850690],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([2, 285212673, 4],"int32"), type(numpy.int64), )
paddle.Tensor.astype(Tensor([31690297, 3, 2, 3, 4],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([8, 18, 11109],"int32"), "bool", )
paddle.Tensor.astype(Tensor([114085069, 20],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 21, 3600],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1280, 640, 3, 3],"float32"), "float32", )
paddle.Tensor.astype(Tensor([1, 1, 800, 1347],"uint8"), "int64", )
paddle.Tensor.astype(Tensor([64, 50, 2304],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 11, 12096],"int32"), "bool", )
paddle.Tensor.astype(Tensor([8, 22, 6069],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 28, 8400],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 45, 40656],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2048, 1, 512],"float16"), "float32", )
paddle.Tensor.astype(Tensor([16, 29, 7744],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 16, 8464],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 333, 40656],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 16, 12096],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 36, 2125],"int32"), "bool", )
paddle.Tensor.astype(Tensor([2, 116, 4725],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([4, 132, 151936],"float16"), "float32", )
paddle.Tensor.astype(Tensor([8, 43, 4116],"int32"), "bool", )
paddle.Tensor.astype(Tensor([8, 30, 7056],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 1, 800, 1424],"uint8"), "int64", )
paddle.Tensor.astype(Tensor([4, 97, 4096],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 37, 8400],"int32"), "bool", )
paddle.Tensor.astype(Tensor([1, 33, 40656],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([6480, 8, 1, 80],"bfloat16"), "float32", )
paddle.Tensor.astype(Tensor([6352, 8, 1, 80],"bfloat16"), "float32", )
paddle.Tensor.astype(Tensor([16, 32, 5184],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 72, 7581],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 93, 37044],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 55, 8400],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 46, 8400],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([3, 760567127],"int64"), type(bool), )
paddle.Tensor.astype(Tensor([1, 26, 75600],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([64, 34, 3060],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([6504, 8, 1, 80],"bfloat16"), "float32", )
paddle.Tensor.astype(Tensor([32, 13, 13, 35160, 12],"float32"), type(numpy.float64), )
paddle.Tensor.astype(Tensor([1024, 3072],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([2, 84, 6804],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 52, 12096],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 108, 6069],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 35, 10164],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 133, 6804],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 30, 6804],"int32"), "bool", )
paddle.Tensor.astype(Tensor([16, 38, 3549],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 57, 37044],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([8, 26, 8400],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([4, 465, 6069],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 2281701379],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 58, 32000],"float32"), "float32", )
paddle.Tensor.astype(Tensor([16, 13, 5376],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([8, 255, 32, 32],"float16"), "float32", )
paddle.Tensor.astype(Tensor([4, 570425345],"int64"), type(numpy.float32), )
paddle.Tensor.astype(Tensor([22591103, 1, 1, 101],"int64"), "bool", )
paddle.Tensor.astype(Tensor([16, 23, 4096],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 16, 56, 67, 96],"float16"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 14, 5376],"int32"), "bool", )
paddle.Tensor.astype(Tensor([1, 1073741825, 4],"float16"), "float32", )
paddle.Tensor.astype(Tensor([16, 21, 5376],"int32"), "bool", )
paddle.Tensor.astype(Tensor([16, 38, 6804],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([2, 196, 4116],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 1, 1, 4, 1, 570425345],"int64"), VarType(float32), )
paddle.Tensor.astype(Tensor([16, 20, 6804],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 28, 11109],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([64, 51, 3060],"int32"), "bool", )
paddle.Tensor.astype(Tensor([16, 21, 4116],"bool"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 16, 5776],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([16, 10, 9261],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([1, 25, 44436],"bool"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 285212673, 1, 4, 1, 2],"int64"), Dtype(float16), )
paddle.Tensor.astype(Tensor([64, 17, 1936],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([12, 9, 21126865],"bool"), Dtype(int64), )
paddle.Tensor.astype(Tensor([8, 35, 4725],"float32"), Dtype(float32), )
paddle.Tensor.astype(Tensor([22817014, 1, 100],"float32"), VarType(float32), )
paddle.Tensor.astype(Tensor([1, 27, 48384],"bool"), VarType(float32), )
paddle.Tensor.atanh(Tensor([760567127, 3],"float32"), )
paddle.Tensor.atanh(Tensor([380283564, 2, 3],"float32"), )
paddle.Tensor.atanh(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.atanh(Tensor([2281701379],"float32"), )
paddle.Tensor.atanh(Tensor([1, 2, 1140850690],"float32"), )
paddle.Tensor.atanh(Tensor([1, 760567127, 3],"float32"), )
paddle.Tensor.atanh(Tensor([715827883, 2, 3],"float16"), )
paddle.Tensor.atanh(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.atanh(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.atanh(Tensor([1, 1431655766, 3],"float16"), )
paddle.Tensor.atanh(Tensor([1, 2, 2147483649],"float16"), )
paddle.Tensor.atanh(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.atanh(Tensor([4294967297],"float16"), )
paddle.Tensor.bmm(Tensor([1, 4096, 557057],"float32"), Tensor([1, 557057, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 179876, 12685],"float32"), Tensor([1, 12685, 2],"float32"), )
paddle.Tensor.bmm(Tensor([4462, 170476, 3],"float32"), Tensor([4462, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([5065, 150164, 3],"float32"), Tensor([5065, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 143264, 15927],"float32"), Tensor([1, 15927, 2],"float32"), )
paddle.Tensor.bmm(Tensor([5309, 143264, 3],"float32"), Tensor([5309, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 170476, 13385],"float32"), Tensor([1, 13385, 2],"float32"), )
paddle.Tensor.bmm(Tensor([190141782, 4, 3],"float32"), Tensor([190141782, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 784, 2910334],"float32"), Tensor([1, 2910334, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 16, 142606337],"float32"), Tensor([1, 142606337, 2],"float32"), )
paddle.Tensor.bmm(Tensor([4229, 179876, 3],"float32"), Tensor([4229, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([7012, 108472, 3],"float32"), Tensor([7012, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 150164, 15195],"float32"), Tensor([1, 15195, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 153088, 14905],"float32"), Tensor([1, 14905, 2],"float32"), )
paddle.Tensor.bmm(Tensor([47535446, 16, 3],"float32"), Tensor([47535446, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 4, 3],"float32"), Tensor([1, 3, 760567127],"float32"), )
paddle.Tensor.bmm(Tensor([3977, 191277, 3],"float32"), Tensor([3977, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 5776, 395032],"float32"), Tensor([1, 395032, 2],"float32"), )
paddle.Tensor.bmm(Tensor([7761, 98000, 3],"float32"), Tensor([7761, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([657931, 1156, 3],"float32"), Tensor([657931, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 98000, 23283],"float32"), Tensor([1, 23283, 2],"float32"), )
paddle.Tensor.bmm(Tensor([914144, 832, 3],"float32"), Tensor([914144, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 191277, 11929],"float32"), Tensor([1, 11929, 2],"float32"), )
paddle.Tensor.bmm(Tensor([4969, 153088, 3],"float32"), Tensor([4969, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 1156, 1973791],"float32"), Tensor([1, 1973791, 2],"float32"), )
paddle.Tensor.bmm(Tensor([11883862, 64, 3],"float32"), Tensor([11883862, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 120000, 19015],"float32"), Tensor([1, 19015, 2],"float32"), )
paddle.Tensor.bmm(Tensor([93898, 8100, 3],"float32"), Tensor([93898, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 8100, 281692],"float32"), Tensor([1, 281692, 2],"float32"), )
paddle.Tensor.bmm(Tensor([6339, 120000, 3],"float32"), Tensor([6339, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 64, 35651585],"float32"), Tensor([1, 35651585, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 832, 2742430],"float32"), Tensor([1, 2742430, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 146200, 15607],"float32"), Tensor([1, 15607, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 760567127, 3],"float32"), Tensor([1, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([5203, 146200, 3],"float32"), Tensor([5203, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([970112, 784, 3],"float32"), Tensor([970112, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 108472, 21035],"float32"), Tensor([1, 21035, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 16, 3],"float32"), Tensor([1, 3, 760567127],"float32"), )
paddle.Tensor.bmm(Tensor([131678, 5776, 3],"float32"), Tensor([131678, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 4, 570425345],"float32"), Tensor([1, 570425345, 2],"float32"), )
paddle.Tensor.bmm(Tensor([185686, 4096, 3],"float32"), Tensor([185686, 3, 2],"float32"), )
paddle.Tensor.cast(Tensor([14963, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([40824, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([20825, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([12610, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([13325, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([12875, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([14180, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([28160, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([3, 379050],"bool"), "int32", )
paddle.Tensor.cast(Tensor([21185, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([23325, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([13975, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([14467, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([23350, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([41328, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([27580, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([52417, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([7, 1, 435, 435],"float32"), VarType(bool), )
paddle.Tensor.cast(Tensor([48216, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([42848, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([19432, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([33902, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([14773, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([30568, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([21919, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([24661, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([86521, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([13, 103320],"bool"), "int32", )
paddle.Tensor.cast(Tensor([24565, 180],"bool"), "int", )
paddle.Tensor.cast(Tensor([1536, 6626],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([16450, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([29676, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([23219, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([26809, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([1, 1, 640, 3565159],"float32"), "float32", )
paddle.Tensor.cast(Tensor([12745, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([21933, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([16464, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([17255, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([15238, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([45018, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([14956, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([24, 349866],"bool"), "int32", )
paddle.Tensor.cast(Tensor([23560, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([20556, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([18816, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([13472, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([27024, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([65075, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([32576, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(complex64), )
paddle.Tensor.cast(Tensor([13958, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([18564, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([28104, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([50400, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([22, 322245],"bool"), "int32", )
paddle.Tensor.cast(Tensor([28210, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([37785, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([5996, 896],"float32"), Dtype(float32), )
paddle.Tensor.cast(Tensor([28791, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([22374, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([46386, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([13266, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([19, 310992],"bool"), "int32", )
paddle.Tensor.cast(Tensor([53808, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([53703, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([2281701379],"float32"), dtype=Dtype(bool), )
paddle.Tensor.cast(Tensor([34000, 52],"bool"), "int", )
paddle.Tensor.cast(Tensor([12523, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([34538, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([17, 321759],"bool"), "int32", )
paddle.Tensor.cast(Tensor([18403, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([27573, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([56078, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([12584, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([25, 44640],"bool"), "int32", )
paddle.Tensor.cast(Tensor([32808, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([18259, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([20933041, 109],"float32"), VarType(bool), )
paddle.Tensor.cast(Tensor([26559, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([14390, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([29469, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([20616, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([16520, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([21408, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([36045, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([79550, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([32732, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([45331, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([17208, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([16744, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([23025, 80],"bool"), "float32", )
paddle.Tensor.cast(Tensor([45990, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([4, 261888],"bool"), "int32", )
paddle.Tensor.cast(Tensor([6, 285444],"bool"), "int32", )
paddle.Tensor.cast(Tensor([128, 32, 1, 1, 557057],"float32"), dtype=Dtype(float16), )
paddle.Tensor.cast(Tensor([10, 285444],"bool"), "int32", )
paddle.Tensor.cast(Tensor([18, 262428],"bool"), "int32", )
paddle.Tensor.cast(Tensor([45262, 80],"float64"), Dtype(float32), )
paddle.Tensor.cast(Tensor([28504, 80],"bool"), "float32", )
paddle.Tensor.ceil(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.ceil(Tensor([10, 228170138],"float32"), )
paddle.Tensor.ceil(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.ceil(Tensor([114085069, 20],"float32"), )
paddle.Tensor.ceil(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.ceil(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.ceil(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.chunk(Tensor([10, 168, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 150, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 102, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 163, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 75, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 456340276, 5],"float32"), 1, )
paddle.Tensor.chunk(Tensor([7, 127, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 181, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 86, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 79, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 1726, 1321960],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 135, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 838861, 1360, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 784, 22737],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 130, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([30, 29, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 157, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([594194, 320, 4, 3],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([8, 221, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 129, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 118, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 217, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([30, 75, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([16, 300, 475355],"float32"), 16, )
paddle.Tensor.chunk(Tensor([4, 167, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 283, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 46996, 24276, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([30, 76, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 289, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([512, 40, 32, 24],"float16"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([5, 104, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 84, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([16, 160, 8, 111412],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([4, 175, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 201, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 53053, 21504, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 285212673, 8],"float32"), 1, )
paddle.Tensor.chunk(Tensor([1, 108, 5281717, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 134, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 10, 57042535, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 285, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 141, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([536871, 1, 2125, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([100, 36, 3, 211269],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([1, 536871, 2125, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 116, 4917460, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 91, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 106, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 107, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 132, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 173, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 2541, 897955],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([56, 10186167, 2, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([87, 1444, 2, 9082],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([6, 185, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 130, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 238, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 176, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([30, 277, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([5, 114, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([16, 320, 74275, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([8, 167, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 69, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 138, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 178, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 181, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([56, 1444, 14109, 2],"float32"), chunks=2, axis=1, )
paddle.Tensor.chunk(Tensor([10, 62, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 155, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([30, 198, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([9, 114, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([570425345, 1, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([512, 1451, 64, 48],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([8, 247, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([46996, 1, 24276, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 88, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 196, 90948],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 196, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 164, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 2281701379, 1],"float32"), 1, )
paddle.Tensor.chunk(Tensor([10, 129, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 139, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 109, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 124, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 133, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 145, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([10, 80, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([30, 114, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 169, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 173, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 205, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([4, 127, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([7, 151, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 112, 1, 20372334],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 258, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 248, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([6, 172, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([87, 38, 690170],"float32"), chunks=2, axis=-1, )
paddle.Tensor.chunk(Tensor([30, 139, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([8, 253, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.clip(Tensor([21, 302832, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 62, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([9, 61305, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([23, 99204408],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([29, 286464, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 322245, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([16, 20, 5376, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 331251, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 302832, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 320739, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 13, 10164, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 36, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 154, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2281701379],"float32"), 0, 89.99, )
paddle.Tensor.clip(Tensor([38, 359613, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([13, 377514, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 169, 12096, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 159, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([144, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3, 243474, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 32, 44436, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([400, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([18, 217413, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([29, 375984, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([16, 29, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([6, 200022, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([29, 313038, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([16, 214848, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([64, 15, 1360, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 36, 10164, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([20092, 1, 56784, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 268560, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([432, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 39, 12096, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([17, 51750, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 79, 10164, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 11, 9261, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([64, 35, 2577, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 245520, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 23, 61236, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([15, 349866, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([204, 5376, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([3, 322272, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([7, 451143, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([16, 13, 8400, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([11, 268569, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 34, 6804, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([29, 72360, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([3, 208692, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 369, 6069, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([11, 279300, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([13, 103320, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([138588, 4116, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([1, 16, 65856, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([64, 20, 3060, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([27, 386694, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([9, 367059, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([152, 4725, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([13, 349866, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([608, 3549, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([22, 369303, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 127, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 13, 65856, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([320, 12096, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([8, 11, 10164, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([15, 79380, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 33, 65856, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 306900, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([83837, 6804, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 77, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([16, 86640, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 293622, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 160, 10164, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([18, 283905, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([11, 75555, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 98, 7581, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([10, 293397, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([248, 3024, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([25, 88200, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([14, 397467, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([12, 59295, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([22, 313347, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([16, 350178, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([4, 220992, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([11, 333018, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1536, 2577, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([4, 375984, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 102, 12096, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([19, 260865, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([8, 2352, 50, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([18, 227124, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([18, 277539, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([15, 66960, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([6, 261888, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 43, 10164, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([2, 98, 9261, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([9, 81180, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([448, 2541, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 67, 24276, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([14, 293622, 2],"float32"), min=0, )
paddle.Tensor.clone(Tensor([8, 8, 248, 113],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 103, 103],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 148, 89],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 174, 174],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 207, 113],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 111, 65],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 229, 229],"float32"), )
paddle.Tensor.clone(Tensor([5788, 32, 896],"bfloat16"), )
paddle.Tensor.clone(Tensor([4096, 8192],"bfloat16"), )
paddle.Tensor.clone(Tensor([30, 8, 133, 133],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 165, 81],"float32"), )
paddle.Tensor.clone(Tensor([64, 512, 1, 40],"float16"), )
paddle.Tensor.clone(Tensor([30, 8, 154, 65],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 144, 153],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 178, 153],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 166, 166],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 132, 105],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 262, 262],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 215, 215],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 135, 105],"float32"), )
paddle.Tensor.clone(Tensor([285212673, 8],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 191, 191],"float32"), )
paddle.Tensor.clone(Tensor([11225, 2541, 80],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 253, 113],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 198, 145],"float32"), )
paddle.Tensor.clone(Tensor([1, 53053, 168, 256],"float32"), )
paddle.Tensor.clone(Tensor([5544, 32, 896],"bfloat16"), )
paddle.Tensor.clone(Tensor([30, 8, 115, 115],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 97, 97],"float32"), )
paddle.Tensor.clone(Tensor([282950, 12, 21, 32],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 125, 129],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 134, 129],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 93, 137],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 121, 73],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 276, 276],"float32"), )
paddle.Tensor.clone(Tensor([5859, 32, 896],"bfloat16"), )
paddle.Tensor.clone(Tensor([10, 8, 171, 171],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 169, 37],"float32"), )
paddle.Tensor.clone(Tensor([6, 8, 168, 168],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 130, 105],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 293, 293],"float32"), )
paddle.Tensor.clone(Tensor([2, 64, 256, 512],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 94, 94],"float32"), )
paddle.Tensor.clone(Tensor([58584, 128],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 172, 153],"float32"), )
paddle.Tensor.clone(Tensor([16, 197, 768],"float16"), )
paddle.Tensor.clone(Tensor([8, 8, 155, 113],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 219, 113],"float32"), )
paddle.Tensor.clone(Tensor([4, 64, 512, 512],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 170, 170],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 184, 184],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 200, 200],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 256, 113],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 160, 153],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 140, 140],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 205, 113],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 120, 81],"float32"), )
paddle.Tensor.clone(Tensor([8162, 4, 1536],"bfloat16"), )
paddle.Tensor.clone(Tensor([6, 8, 151, 151],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 225, 225],"float32"), )
paddle.Tensor.clone(Tensor([2579, 256, 48, 72],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 174, 174],"float32"), )
paddle.Tensor.clone(Tensor([4, 64, 128, 128],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 154, 89],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 192, 113],"float32"), )
paddle.Tensor.clone(Tensor([1, 1140850690, 2],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 165, 89],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 160, 160],"float32"), )
paddle.Tensor.clone(Tensor([1, 1024, 30948, 72],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 190, 61],"float32"), )
paddle.Tensor.clone(Tensor([128, 1024, 1, 40],"float32"), )
paddle.Tensor.clone(Tensor([1, 12, 11883862, 16],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 108, 129],"float32"), )
paddle.Tensor.clone(Tensor([178258, 50, 256],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 149, 149],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 157, 105],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 140, 140],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 79, 57],"float32"), )
paddle.Tensor.clone(Tensor([5996, 32, 896],"bfloat16"), )
paddle.Tensor.clone(Tensor([7, 8, 142, 142],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 159, 89],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 134, 153],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 167, 97],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 148, 153],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 76, 76],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 145, 121],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 148, 105],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 155, 155],"float32"), )
paddle.Tensor.clone(Tensor([7074, 21504, 15],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 290, 290],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 128, 137],"float32"), )
paddle.Tensor.clone(Tensor([1, 625, 3650723],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 134, 134],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 146, 137],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 181, 181],"float32"), )
paddle.Tensor.clone(Tensor([30, 8, 129, 53],"float32"), )
paddle.Tensor.clone(Tensor([8, 8, 132, 121],"float32"), )
paddle.Tensor.clone(Tensor([7, 8, 149, 153],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 149, 89],"float32"), )
paddle.Tensor.clone(Tensor([10, 8, 146, 129],"float32"), )
paddle.Tensor.conj(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.conj(Tensor([5, 456340276],"float32"), )
paddle.Tensor.conj(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.conj(Tensor([570425345, 4],"float32"), )
paddle.Tensor.conj(Tensor([12, 190141782],"float32"), )
paddle.Tensor.conj(Tensor([4, 1073741825],"float16"), )
paddle.Tensor.conj(Tensor([2281701379],"float32"), )
paddle.Tensor.conj(Tensor([4, 570425345],"float32"), )
paddle.Tensor.conj(Tensor([429496730, 10],"float16"), )
paddle.Tensor.conj(Tensor([456340276, 5],"float32"), )
paddle.Tensor.conj(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.conj(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.conj(Tensor([214748365, 4, 5],"float16"), )
paddle.Tensor.conj(Tensor([10, 429496730],"float16"), )
paddle.Tensor.conj(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.conj(Tensor([214748365, 20],"float16"), )
paddle.Tensor.conj(Tensor([3, 760567127],"float32"), )
paddle.Tensor.conj(Tensor([3, 286331154, 5],"float16"), )
paddle.Tensor.conj(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.conj(Tensor([3, 1431655766],"float16"), )
paddle.Tensor.conj(Tensor([760567127, 3],"float32"), )
paddle.Tensor.conj(Tensor([2, 536870913, 4],"float16"), )
paddle.Tensor.conj(Tensor([5, 858993460],"float16"), )
paddle.Tensor.conj(Tensor([10, 228170138],"float32"), )
paddle.Tensor.conj(Tensor([357913942, 3, 4],"float16"), )
paddle.Tensor.conj(Tensor([4294967297, 1],"float16"), )
paddle.Tensor.conj(Tensor([12, 357913942],"float16"), )
paddle.Tensor.conj(Tensor([2147483649, 2],"float16"), )
paddle.Tensor.conj(Tensor([858993460, 5],"float16"), )
paddle.Tensor.conj(Tensor([20, 214748365],"float16"), )
paddle.Tensor.conj(Tensor([3, 4, 357913942],"float16"), )
paddle.Tensor.cos(Tensor([23767723, 96],"float32"), )
paddle.Tensor.cos(Tensor([1, 80, 445645, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 1188387, 15, 64],"float32"), )
paddle.Tensor.cos(Tensor([2281701379],"float32"), )
paddle.Tensor.cos(Tensor([1, 2742430, 13, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 76, 115, 130533],"float32"), )
paddle.Tensor.cos(Tensor([8912897, 256],"float32"), )
paddle.Tensor.cos(Tensor([4, 307342, 29, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 80, 60, 475355],"float32"), )
paddle.Tensor.cos(Tensor([495161, 18, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([93, 46182445],"float16"), )
paddle.Tensor.cos(Tensor([1485483, 24, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 48, 36, 1320430],"float32"), )
paddle.Tensor.cos(Tensor([1, 89, 400580, 64],"float32"), )
paddle.Tensor.cos(Tensor([79226, 18, 25, 64],"float32"), )
paddle.Tensor.cos(Tensor([330108, 12, 9, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 76, 115, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 21, 108652447],"float32"), )
paddle.Tensor.cos(Tensor([1, 12, 9, 21126865],"float32"), )
paddle.Tensor.cos(Tensor([64704, 19, 29, 64],"float32"), )
paddle.Tensor.cos(Tensor([4080, 76, 115, 64],"float32"), )
paddle.Tensor.cos(Tensor([71303169, 32],"float32"), )
paddle.Tensor.cos(Tensor([16, 2228225, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 12, 2970966, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 9, 13, 19501722],"float32"), )
paddle.Tensor.cos(Tensor([142, 16068320],"float32"), )
paddle.Tensor.cos(Tensor([1, 192, 144, 82527],"float32"), )
paddle.Tensor.cos(Tensor([2, 76, 234550, 64],"float32"), )
paddle.Tensor.cos(Tensor([3961288, 9, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 48, 742742, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 18, 25, 5070448],"float32"), )
paddle.Tensor.cos(Tensor([405132, 22, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([1620527, 22, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 21, 4, 27163112],"float32"), )
paddle.Tensor.cos(Tensor([5, 456340276],"float32"), )
paddle.Tensor.cos(Tensor([1, 144, 200, 79226],"float32"), )
paddle.Tensor.cos(Tensor([1, 45, 792258, 64],"float32"), )
paddle.Tensor.cos(Tensor([22008, 45, 36, 64],"float32"), )
paddle.Tensor.cos(Tensor([142606337, 16],"float32"), )
paddle.Tensor.cos(Tensor([32411, 1100, 64],"float32"), )
paddle.Tensor.cos(Tensor([4952, 72, 100, 64],"float32"), )
paddle.Tensor.cos(Tensor([1238, 144, 200, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 40, 30, 1901418],"float32"), )
paddle.Tensor.cos(Tensor([1, 96, 371371, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 17825793, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 356516, 100, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 18, 4, 31690297],"float32"), )
paddle.Tensor.cos(Tensor([1, 11, 4, 51856850],"float32"), )
paddle.Tensor.cos(Tensor([1, 1188387, 30, 64],"float32"), )
paddle.Tensor.cos(Tensor([131072, 16],"float32"), )
paddle.Tensor.cos(Tensor([1, 10, 3565159, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 20, 15, 7605672],"float32"), )
paddle.Tensor.cos(Tensor([7, 325957340],"float32"), )
paddle.Tensor.cos(Tensor([1, 144, 200, 64],"float32"), )
paddle.Tensor.cos(Tensor([6, 380283564],"float32"), )
paddle.Tensor.cos(Tensor([131072, 17409],"float32"), )
paddle.Tensor.cos(Tensor([16, 16, 8912897],"float32"), )
paddle.Tensor.cos(Tensor([1, 22, 4, 25928425],"float32"), )
paddle.Tensor.cos(Tensor([1, 144, 247581, 64],"float32"), )
paddle.Tensor.cos(Tensor([35651585, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 10, 8, 28521268],"float32"), )
paddle.Tensor.cos(Tensor([1, 713032, 50, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 18, 126761188],"float32"), )
paddle.Tensor.cos(Tensor([4096, 557057],"float32"), )
paddle.Tensor.cos(Tensor([16, 142606337],"float32"), )
paddle.Tensor.cos(Tensor([1, 8912897, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 19, 938200, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 22, 103713700],"float32"), )
paddle.Tensor.cos(Tensor([20632, 48, 36, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 10, 1782580, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 300, 4, 1901418],"float32"), )
paddle.Tensor.cos(Tensor([2228225, 16, 64],"float32"), )
paddle.Tensor.cos(Tensor([200, 11408507],"float32"), )
paddle.Tensor.cos(Tensor([2, 155007, 115, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 9, 4, 63380594],"float32"), )
paddle.Tensor.cos(Tensor([1, 21, 1697695, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 1426064, 25, 64],"float32"), )
paddle.Tensor.cos(Tensor([86115, 23, 18, 64],"float32"), )
paddle.Tensor.cos(Tensor([29710, 300, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 1980644, 18, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 300, 118839, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 1100, 2074274],"float32"), )
paddle.Tensor.cos(Tensor([237678, 10, 15, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 19, 29, 2070510],"float32"), )
paddle.Tensor.cos(Tensor([32768, 32],"float32"), )
paddle.Tensor.cos(Tensor([1, 89, 72, 356071],"float32"), )
paddle.Tensor.cos(Tensor([445645, 10, 8, 64],"float32"), )
paddle.Tensor.cos(Tensor([264, 8642809],"float32"), )
paddle.Tensor.cos(Tensor([58, 39339679],"float32"), )
paddle.Tensor.cos(Tensor([1, 9, 3961288, 64],"float32"), )
paddle.Tensor.cos(Tensor([20, 114085069],"float32"), )
paddle.Tensor.cos(Tensor([1, 594194, 60, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 10, 15, 7605672],"float32"), )
paddle.Tensor.cos(Tensor([34, 67108865],"float32"), )
paddle.Tensor.cos(Tensor([24, 24, 3961288],"float32"), )
paddle.Tensor.cos(Tensor([990322, 9, 4, 64],"float32"), )
paddle.Tensor.cos(Tensor([1, 2376773, 15, 64],"float32"), )
paddle.Tensor.cos(Tensor([2, 1100, 1037137],"float32"), )
paddle.Tensor.cos(Tensor([1, 23, 18, 5511356],"float32"), )
paddle.Tensor.cos(Tensor([4, 25, 29, 786794],"float32"), )
paddle.Tensor.cumsum(Tensor([27490379, 83],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([4, 19669840, 29],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 36, 63380594],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 253522376, 9],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([6, 380283564],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 192, 11883862],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([4294967297],"float16"), -1, )
paddle.Tensor.cumsum(Tensor([26531412, 86],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([50704476, 45],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([25352238, 90],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([45634028, 50],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([2, 19, 60044774],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2281701379],"float32"), -1, )
paddle.Tensor.cumsum(Tensor([1, 31690297, 72],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([475355, 80, 60],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([37404941, 61],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 89, 25637095],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([190141782, 12],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([60044774, 38],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([82527, 192, 144],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([4141019, 19, 29],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([261065, 76, 115],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 63380594, 36],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([2, 19669840, 58],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([19501722, 9, 13],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([44739243, 51],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([34571234, 66],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([28521268, 10, 8],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 22817014, 100],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([5511356, 23, 18],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1320430, 48, 36],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([261065, 76, 115],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([13, 175515491],"int32"), -1, )
paddle.Tensor.cumsum(Tensor([48546838, 47],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([61667605, 37],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([4141019, 19, 29],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([47535446, 48],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([25073642, 91],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 20, 114085069],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 91268056, 25],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 10, 114085069],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([5070448, 18, 25],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 22817014, 100],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 285212673, 8],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1140850690, 2],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([21126865, 12, 9],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([30833803, 74],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 48, 47535446],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([5511356, 23, 18],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1408458, 45, 36],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 45634028, 50],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([475355, 80, 60],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([24017910, 95],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([34055245, 67],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([82527, 192, 144],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 9920441, 115],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([36801636, 62],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([108652447, 21],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1267612, 36, 50],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([27825627, 82],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 80, 28521268],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([760567127, 3],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([22591103, 101],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([79226, 144, 200],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 15845149, 144],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([58505164, 39],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([15211343, 10, 15],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([31256184, 73],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([55651254, 41],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 38028357, 60],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([4, 25, 22817014],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([5070448, 18, 25],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([21939437, 104],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 144, 15845149],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 89, 25637095],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([25928425, 88],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([330108, 96, 72],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([57042535, 40],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([29252582, 78],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([330108, 96, 72],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([15211343, 10, 15],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 76056713, 30],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 40, 57042535],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1267612, 36, 50],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([2, 39339679, 29],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([27163112, 84],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([23047489, 99],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([23767723, 96],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([26843546, 85],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([49602204, 46],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([356071, 89, 72],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([21730490, 105],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 9, 253522376],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([46565335, 49],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([28521268, 10, 8],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 18, 126761188],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([22817014, 100],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([35103099, 65],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 45, 50704476],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1320430, 48, 36],"float32"), 2, )
paddle.Tensor.detach(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.detach(Tensor([111412, 20, 1024],"float32"), )
paddle.Tensor.detach(Tensor([6122, 4, 1536],"bfloat16"), )
paddle.Tensor.detach(Tensor([179968, 80],"float16"), )
paddle.Tensor.detach(Tensor([243360, 80],"float32"), )
paddle.Tensor.detach(Tensor([3566, 20, 32000],"float32"), )
paddle.Tensor.detach(Tensor([619, 100, 192, 192],"float32"), )
paddle.Tensor.detach(Tensor([43560, 80],"float32"), )
paddle.Tensor.detach(Tensor([225792, 80],"float16"), )
paddle.Tensor.detach(Tensor([4293, 4, 1536],"bfloat16"), )
paddle.Tensor.detach(Tensor([90, 2577, 80],"float32"), )
paddle.Tensor.detach(Tensor([184832, 80],"float32"), )
paddle.Tensor.detach(Tensor([16, 128, 8705, 128],"float32"), )
paddle.Tensor.detach(Tensor([5801, 32, 896],"bfloat16"), )
paddle.Tensor.detach(Tensor([7130317, 20, 16],"float32"), )
paddle.Tensor.detach(Tensor([42432, 80],"float32"), )
paddle.Tensor.detach(Tensor([5837, 7168],"bfloat16"), )
paddle.Tensor.detach(Tensor([6502, 4, 1536],"bfloat16"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float16"), )
paddle.Tensor.detach(Tensor([8388609, 2, 1, 256],"float16"), )
paddle.Tensor.detach(Tensor([2, 495161, 4, 2, 3, 4, 2, 3, 4],"float32"), )
paddle.Tensor.detach(Tensor([1, 6, 256, 1485483],"float32"), )
paddle.Tensor.detach(Tensor([2228225, 1024],"float32"), )
paddle.Tensor.detach(Tensor([5867, 32, 896],"bfloat16"), )
paddle.Tensor.detach(Tensor([5840, 7168],"bfloat16"), )
paddle.Tensor.detach(Tensor([621379, 3, 4, 2, 3, 4, 2, 3, 4],"float16"), )
paddle.Tensor.detach(Tensor([42560, 80],"float16"), )
paddle.Tensor.detach(Tensor([123904, 80],"float32"), )
paddle.Tensor.detach(Tensor([69633, 128, 16, 16],"float32"), )
paddle.Tensor.detach(Tensor([1, 1024, 65537, 64],"float16"), )
paddle.Tensor.detach(Tensor([87040, 80],"float32"), )
paddle.Tensor.detach(Tensor([7164, 4, 1536],"bfloat16"), )
paddle.Tensor.detach(Tensor([2048, 6144],"float16"), )
paddle.Tensor.detach(Tensor([129792, 80],"float32"), )
paddle.Tensor.detach(Tensor([13440, 80],"float32"), )
paddle.Tensor.detach(Tensor([44992, 80],"float32"), )
paddle.Tensor.detach(Tensor([5656, 32, 896],"bfloat16"), )
paddle.Tensor.detach(Tensor([100, 176, 176],"float32"), )
paddle.Tensor.detach(Tensor([50, 39, 14, 14, 5970],"float32"), )
paddle.Tensor.detach(Tensor([48640, 80],"float32"), )
paddle.Tensor.detach(Tensor([126464, 80],"float32"), )
paddle.Tensor.detach(Tensor([51856850, 11, 4],"float32"), )
paddle.Tensor.detach(Tensor([178432, 80],"float32"), )
paddle.Tensor.detach(Tensor([200, 136, 136],"float32"), )
paddle.Tensor.detach(Tensor([5831, 32, 896],"bfloat16"), )
paddle.Tensor.detach(Tensor([1024, 32769, 2, 64],"float16"), )
paddle.Tensor.detach(Tensor([7710, 4, 1536],"bfloat16"), )
paddle.Tensor.detach(Tensor([1, 2228225, 1024],"float32"), )
paddle.Tensor.detach(Tensor([61952, 80],"float32"), )
paddle.Tensor.detach(Tensor([48544, 80],"float16"), )
paddle.Tensor.detach(Tensor([298496, 39, 14, 14, 1],"float32"), )
paddle.Tensor.detach(Tensor([1, 10285, 221848],"float32"), )
paddle.Tensor.detach(Tensor([165376, 80],"float32"), )
paddle.Tensor.detach(Tensor([11008, 4096],"float32"), )
paddle.Tensor.detach(Tensor([5583, 7168],"bfloat16"), )
paddle.Tensor.detach(Tensor([90, 3060, 4],"float32"), )
paddle.Tensor.detach(Tensor([147456, 80],"float32"), )
paddle.Tensor.detach(Tensor([56448, 80],"float32"), )
paddle.Tensor.detach(Tensor([5761, 32, 896],"bfloat16"), )
paddle.Tensor.detach(Tensor([8, 3, 256, 256],"float32"), )
paddle.Tensor.detach(Tensor([183680, 80],"float16"), )
paddle.Tensor.detach(Tensor([48, 4789, 80],"float32"), )
paddle.Tensor.detach(Tensor([5, 1500, 512],"float32"), )
paddle.Tensor.detach(Tensor([155904, 80],"float16"), )
paddle.Tensor.detach(Tensor([6753, 4, 1536],"bfloat16"), )
paddle.Tensor.detach(Tensor([2281701379],"int64"), )
paddle.Tensor.detach(Tensor([198912, 80],"float16"), )
paddle.Tensor.detach(Tensor([5644, 32, 896],"bfloat16"), )
paddle.Tensor.detach(Tensor([13104, 80],"float16"), )
paddle.Tensor.detach(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.detach(Tensor([175104, 80],"float16"), )
paddle.Tensor.detach(Tensor([51168, 80],"float16"), )
paddle.Tensor.detach(Tensor([178432, 80],"float16"), )
paddle.Tensor.detach(Tensor([5842, 4, 1536],"bfloat16"), )
paddle.Tensor.detach(Tensor([3036, 4, 1536],"bfloat16"), )
paddle.Tensor.detach(Tensor([228170138, 10],"float32"), )
paddle.Tensor.detach(Tensor([43776, 80],"float16"), )
paddle.Tensor.detach(Tensor([34112, 80],"float16"), )
paddle.Tensor.detach(Tensor([128000, 80],"float16"), )
paddle.Tensor.detach(Tensor([14112, 80],"float16"), )
paddle.Tensor.detach(Tensor([100, 4, 633806, 9],"float32"), )
paddle.Tensor.detach(Tensor([100, 192, 192],"float32"), )
paddle.Tensor.detach(Tensor([28672, 8192],"bfloat16"), )
paddle.Tensor.detach(Tensor([2, 3, 4, 2, 3, 4, 330108, 3, 4],"float32"), )
paddle.Tensor.detach(Tensor([17409, 128, 32, 32],"float32"), )
paddle.Tensor.detach(Tensor([100, 15802, 38, 38],"float32"), )
paddle.Tensor.detach(Tensor([3438, 4, 1536],"bfloat16"), )
paddle.Tensor.detach(Tensor([115200, 80],"float32"), )
paddle.Tensor.detach(Tensor([49856, 80],"float32"), )
paddle.Tensor.detach(Tensor([27648, 80],"float32"), )
paddle.Tensor.detach(Tensor([1024, 2048],"float16"), )
paddle.Tensor.detach(Tensor([5578, 32, 896],"bfloat16"), )
paddle.Tensor.detach(Tensor([16, 64, 256, 256],"float32"), )
paddle.Tensor.detach(Tensor([4096, 4096],"float16"), )
paddle.Tensor.detach(Tensor([674, 100, 184, 184],"float32"), )
paddle.Tensor.detach(Tensor([1, 300, 176, 43215],"float32"), )
paddle.Tensor.detach(Tensor([16, 512, 32, 32],"float32"), )
paddle.Tensor.detach(Tensor([5802, 32, 896],"bfloat16"), )
paddle.Tensor.detach(Tensor([156672, 80],"float16"), )
paddle.Tensor.detach(Tensor([6017, 32, 896],"bfloat16"), )
paddle.Tensor.diag_embed(Tensor([1, 1140850690, 2],"float32"), )
paddle.Tensor.diag_embed(Tensor([1140850690, 1, 2],"float32"), )
paddle.Tensor.diagonal(Tensor([1140850690, 2],"float32"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([3, 1431655766],"float16"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([2, 1140850690],"float32"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([1431655766, 3],"float16"), axis1=-2, axis2=-1, )
paddle.Tensor.diff(x=Tensor([4, 4, 67108865, 4],"float16"), axis=-2, )
paddle.Tensor.diff(x=Tensor([268435457, 4, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 4, 4, 67108865],"float16"), axis=2, )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.diff(x=Tensor([2281701379],"float32"), )
paddle.Tensor.diff(x=Tensor([4, 4, 67108865, 4],"float16"), axis=2, )
paddle.Tensor.diff(Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 268435457, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([67108865, 4, 4, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.Tensor.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([2281701379],"int64"), )
paddle.Tensor.diff(x=Tensor([67108865, 4, 4, 4],"float16"), axis=-2, )
paddle.Tensor.diff(x=Tensor([2281701379],"int32"), )
paddle.Tensor.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 4, 67108865, 4],"float16"), )
paddle.Tensor.diff(Tensor([2281701379],"float32"), )
paddle.Tensor.diff(x=Tensor([4, 67108865, 4, 4],"float16"), axis=-2, )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 67108865, 4, 4],"float16"), axis=2, )
paddle.Tensor.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 4, 4, 67108865],"float16"), axis=-2, )
paddle.Tensor.diff(x=Tensor([4, 4, 4, 67108865],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 4, 268435457],"float16"), )
paddle.Tensor.diff(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.Tensor.diff(x=Tensor([67108865, 4, 4, 4],"float16"), axis=2, )
paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4],"float16"), )
paddle.Tensor.diff(x=Tensor([10, 429496730],"float16"), axis=0, prepend=Tensor([4, 429496730],"float16"), append=Tensor([4, 429496730],"float16"), )
paddle.Tensor.digamma(Tensor([760567127, 3],"float32"), )
paddle.Tensor.digamma(Tensor([5, 7, 122713352],"float16"), )
paddle.Tensor.digamma(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.digamma(Tensor([2281701379],"float32"), )
paddle.Tensor.digamma(Tensor([5, 7, 8, 15339169],"float16"), )
paddle.Tensor.digamma(Tensor([5, 107374183, 8],"float16"), )
paddle.Tensor.digamma(Tensor([5, 10737419, 8, 10],"float16"), )
paddle.Tensor.digamma(Tensor([5, 7, 12271336, 10],"float16"), )
paddle.Tensor.digamma(Tensor([76695845, 7, 8],"float16"), )
paddle.Tensor.digamma(Tensor([858993460, 5],"float16"), )
paddle.Tensor.digamma(Tensor([4, 1073741825],"float16"), )
paddle.Tensor.digamma(Tensor([7669585, 7, 8, 10],"float16"), )
paddle.Tensor.dim(Tensor([15104, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([70784, 56],"float32"), )
paddle.Tensor.dim(Tensor([7168, 28160],"bfloat16"), )
paddle.Tensor.dim(Tensor([41984, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([20608, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([63616, 64],"float32"), )
paddle.Tensor.dim(Tensor([29312, 64],"float32"), )
paddle.Tensor.dim(Tensor([72192, 56],"float32"), )
paddle.Tensor.dim(Tensor([98304, 28],"float32"), )
paddle.Tensor.dim(Tensor([51200, 64],"float32"), )
paddle.Tensor.dim(Tensor([7168, 49664],"bfloat16"), )
paddle.Tensor.dim(Tensor([7168, 9216],"bfloat16"), )
paddle.Tensor.dim(Tensor([45312, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([37376, 28],"float32"), )
paddle.Tensor.dim(Tensor([4, 190141782, 3],"float32"), )
paddle.Tensor.dim(Tensor([13568, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([67328, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([66688, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([61568, 28],"float32"), )
paddle.Tensor.dim(Tensor([51584, 64],"float32"), )
paddle.Tensor.dim(Tensor([76416, 28],"float32"), )
paddle.Tensor.dim(Tensor([44800, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([65408, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([22528, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([35200, 64],"float32"), )
paddle.Tensor.dim(Tensor([16640, 64],"float32"), )
paddle.Tensor.dim(Tensor([33792, 64],"float32"), )
paddle.Tensor.dim(Tensor([86528, 3584],"bfloat16"), )
paddle.Tensor.dim(Tensor([39680, 64],"float32"), )
paddle.Tensor.dim(Tensor([32512, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([27264, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([3584, 77312],"bfloat16"), )
paddle.Tensor.dim(Tensor([53760, 3584],"bfloat16"), )
paddle.Tensor.dim(Tensor([86016, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([77824, 56],"float32"), )
paddle.Tensor.dim(Tensor([45568, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([27776, 64],"float32"), )
paddle.Tensor.dim(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.dim(Tensor([2944, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([28160, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([62848, 56],"float32"), )
paddle.Tensor.dim(Tensor([93184, 28],"float32"), )
paddle.Tensor.dim(Tensor([7168, 93184],"bfloat16"), )
paddle.Tensor.dim(Tensor([14336, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([12416, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([39936, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([25344, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([61696, 28],"float32"), )
paddle.Tensor.dim(Tensor([36224, 28],"float32"), )
paddle.Tensor.dim(Tensor([36352, 28],"float32"), )
paddle.Tensor.dim(Tensor([65920, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([32000, 64],"float32"), )
paddle.Tensor.dim(Tensor([22528, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([88064, 56],"float32"), )
paddle.Tensor.dim(Tensor([54016, 64],"float32"), )
paddle.Tensor.dim(Tensor([66432, 28],"float32"), )
paddle.Tensor.dim(Tensor([74880, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([25088, 3584],"bfloat16"), )
paddle.Tensor.dim(Tensor([22528, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([34816, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([16768, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([13, 3, 224, 261184],"float32"), )
paddle.Tensor.dim(Tensor([35968, 28],"float32"), )
paddle.Tensor.dim(Tensor([77312, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([7168, 19968],"bfloat16"), )
paddle.Tensor.dim(Tensor([3584, 57344],"bfloat16"), )
paddle.Tensor.dim(Tensor([46848, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([3584, 35840],"bfloat16"), )
paddle.Tensor.dim(Tensor([72704, 56],"float32"), )
paddle.Tensor.dim(Tensor([51200, 28],"float32"), )
paddle.Tensor.dim(Tensor([18432, 64],"float32"), )
paddle.Tensor.dim(Tensor([10240, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([66304, 56],"float32"), )
paddle.Tensor.dim(Tensor([103424, 28],"float32"), )
paddle.Tensor.dim(Tensor([3584, 33280],"bfloat16"), )
paddle.Tensor.dim(Tensor([41472, 56],"float32"), )
paddle.Tensor.dim(Tensor([7168, 27136],"bfloat16"), )
paddle.Tensor.dim(Tensor([39808, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([22656, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([9600, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([1024, 3072],"float32"), )
paddle.Tensor.dim(Tensor([65408, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([69632, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([7168, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([18688, 56],"float32"), )
paddle.Tensor.dim(Tensor([50432, 28],"float32"), )
paddle.Tensor.dim(Tensor([42496, 56],"float32"), )
paddle.Tensor.dim(Tensor([81408, 3584],"bfloat16"), )
paddle.Tensor.dim(Tensor([58624, 28],"float32"), )
paddle.Tensor.dim(Tensor([78080, 28],"float32"), )
paddle.Tensor.dim(Tensor([61440, 56],"float32"), )
paddle.Tensor.dim(Tensor([7168, 36352],"bfloat16"), )
paddle.Tensor.dim(Tensor([37632, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([3584, 75776],"bfloat16"), )
paddle.Tensor.dim(Tensor([46592, 64],"float32"), )
paddle.Tensor.dim(Tensor([85376, 28],"float32"), )
paddle.Tensor.dim(Tensor([45952, 7168],"bfloat16"), )
paddle.Tensor.dim(Tensor([33920, 8192],"bfloat16"), )
paddle.Tensor.dim(Tensor([86016, 56],"float32"), )
paddle.Tensor.dim(Tensor([58880, 3584],"bfloat16"), )
paddle.Tensor.divide(Tensor([128, 384, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1408, 1408],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 18, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 256, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 576, 512],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 2304, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 128, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 192, 96, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 1024, 512],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 65536, 32],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 192, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 1152, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 192, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 58, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 144, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 1024, 12, 12],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 16384, 64],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 384, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 96, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 256, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 3136, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 512, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 15, 14, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 784, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([144, 49, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 784, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([144, 3136, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 576, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 61, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 16, 14, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 36, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 57, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 512, 12, 12],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 384, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 14, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 160, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 960, 12, 12],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 784, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([12, 784, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 30, 28, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 384, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 38, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 49, 1024],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([512, 100, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 192, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 27648, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 32, 28, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 196, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 256, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 67, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 192, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 3136, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 6912, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 784, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 197, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([512, 50, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 9408, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 64, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 29, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 30, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 384, 48, 48],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([12, 3136, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 1152, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 1536, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 192, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 65, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 59, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 70, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 256, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 1536, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 31, 28, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 784, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 768, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 192, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 128, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 37632, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 196, 512],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 256, 8, 8],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 1024, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 196, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 144, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 576, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 96, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 32, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 96, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 768, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 256, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 196, 320],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([512, 200, 64],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2730, 1024],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 2304, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 1024, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 60, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 3136, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 384, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 62, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 128, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 32, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 34, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.equal(Tensor([17825793, 128],"int64"), Tensor([17825793, 128],"int64"), )
paddle.Tensor.equal(Tensor([228170138, 10],"int64"), 3, )
paddle.Tensor.equal(Tensor([2, 1140850690],"int64"), 3, )
paddle.Tensor.equal(Tensor([128, 17825793],"int64"), Tensor([128, 17825793],"int64"), )
paddle.Tensor.equal_all(Tensor([8, 285212673],"int64"), Tensor([8, 285212673],"int64"), )
paddle.Tensor.equal_all(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.equal_all(Tensor([8, 285212673],"int64"), Tensor([8, 3],"int64"), )
paddle.Tensor.equal_all(Tensor([8, 3],"int64"), Tensor([8, 285212673],"int64"), )
paddle.Tensor.equal_all(Tensor([760567127, 3],"int64"), Tensor([8, 3],"int64"), )
paddle.Tensor.equal_all(Tensor([8],"int64"), Tensor([2281701379],"int64"), )
paddle.Tensor.equal_all(Tensor([760567127, 3],"int64"), Tensor([760567127, 3],"int64"), )
paddle.Tensor.equal_all(Tensor([2281701379],"int64"), Tensor([8],"int64"), )
paddle.Tensor.equal_all(Tensor([8, 3],"int64"), Tensor([760567127, 3],"int64"), )
paddle.Tensor.erfinv(x=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 3, 5, 35791395],"float16"), )
paddle.Tensor.erfinv(x=Tensor([715827883, 2, 3],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 3, 44739243, 4],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 357913942, 3],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 3, 178956971],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 107374183, 5],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4294967297],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 536870913],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 71582789, 3, 5],"float16"), )
paddle.Tensor.erfinv(x=Tensor([143165577, 2, 3, 5],"float16"), )
paddle.Tensor.erfinv(x=Tensor([35791395, 2, 3, 5, 4],"float16"), )
paddle.Tensor.erfinv(x=Tensor([2281701379],"float32"), )
paddle.Tensor.erfinv(x=Tensor([2147483649, 2],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 17895698, 3, 5, 4],"float16"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 26843546, 5, 4],"float16"), )
paddle.Tensor.exp(Tensor([5, 10, 45634028],"float32"), )
paddle.Tensor.exp(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.exp(Tensor([2, 1073741825, 2],"float16"), )
paddle.Tensor.exp(Tensor([2, 715827883, 3],"float16"), )
paddle.Tensor.exp(Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.exp(Tensor([477218589, 3, 3],"float16"), )
paddle.Tensor.exp(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.exp(Tensor([429496730, 10],"float16"), )
paddle.Tensor.exp(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.exp(Tensor([114085069, 20],"float32"), )
paddle.Tensor.exp(Tensor([4294967297],"float16"), name="Cauchy_prob", )
paddle.Tensor.exp(Tensor([2281701379],"float32"), )
paddle.Tensor.exp(Tensor([1000000, 4295],"float16"), )
paddle.Tensor.exp(Tensor([28521268, 10, 8],"float32"), )
paddle.Tensor.exp(Tensor([5, 858993460],"float16"), )
paddle.Tensor.exp(Tensor([2281701379],"float32"), name="Cauchy_prob", )
paddle.Tensor.exp(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.exp(Tensor([5, 57042535, 8],"float32"), )
paddle.Tensor.exp(Tensor([1000000, 4],"float64"), )
paddle.Tensor.exp(Tensor([4294967297],"float16"), )
paddle.Tensor.exp(Tensor([760567127, 3],"float32"), )
paddle.Tensor.exp(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.exp(Tensor([2147483649, 2],"float16"), )
paddle.Tensor.exp(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.exp(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.exp(Tensor([10, 228170138],"float32"), )
paddle.Tensor.exp(Tensor([64, 35651585],"float32"), )
paddle.Tensor.exp(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[3,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[7,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[7,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[6,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([5, 1408458, 18, 18],"float32"), tuple(-1,-1,18,-1,), )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), shape=list[-1,3,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 1024, 1024],"float32"), list[13,1,1024,1024,], )
paddle.Tensor.expand(Tensor([2281701379],"float32"), list[-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), shape=list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([71303169, 1, 32],"float32"), list[-1,7,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 1114113, 2048],"float32"), list[1,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 19840882, 1, 115],"float32"), list[4,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), shape=list[-1,2,-1,], )
paddle.Tensor.expand(Tensor([8912897, 1, 16, 16],"float32"), tuple(-1,-1,16,-1,), )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), shape=list[-1,1,-1,], )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), shape=list[-1,4,-1,], )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[3,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[6,-1,-1,], )
paddle.Tensor.expand(Tensor([2281701379],"int64"), tuple(1,-1,), )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), list[-1,2,-1,], )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[4,-1,-1,], )
paddle.Tensor.expand(Tensor([13, 1, 175515491],"int32"), shape=list[-1,2,-1,], )
paddle.Tensor.expand(Tensor([1, 1620527, 1408],"float32"), shape=list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 2970966, 768],"float32"), tuple(7,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 2281701379],"int64"), list[1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 1007, 1007],"bool"), list[13,1,1007,1007,], )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([5, 1, 16, 28521268],"float32"), tuple(-1,-1,16,-1,), )
paddle.Tensor.expand(Tensor([1, 20014925, 1, 114],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([2281701379, 1],"float32"), list[-1,4,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), tuple(7,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 1, 1, 2281701379],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 2281701379],"float32"), list[4,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 2228225, 1024],"float32"), shape=list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([325957340, 1, 7],"int32"), tuple(-1,4,-1,), )
paddle.Tensor.expand(Tensor([1, 1114113, 1, 2048],"float32"), list[1,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[5,-1,-1,], )
paddle.Tensor.expand(Tensor([13, 1, 175515491],"int32"), list[-1,2,-1,], )
paddle.Tensor.expand(Tensor([1, 142606337, 8, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([5, 1, 18, 25352238],"float32"), tuple(-1,-1,18,-1,), )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), tuple(4,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 20014925, 114],"float32"), list[1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2048, 2048],"bool"), list[Tensor([],"int64"),1,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), shape=list[2,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 8912897, 256],"float32"), list[5,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 10, 114085069, 2],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 1, 20014925, 114],"float32"), list[2,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 2281701379],"int64"), list[2,-1,], )
paddle.Tensor.expand(Tensor([2, 1, 1140850690],"int32"), shape=list[-1,3,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 1, 2281701379],"float32"), list[1,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([5, 1782580, 16, 16],"float32"), tuple(-1,-1,16,-1,), )
paddle.Tensor.expand(Tensor([1, 1, 2281701379],"float32"), list[4,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 1, 19840882, 115],"float32"), list[4,-1,-1,-1,], )
paddle.Tensor.expand(Tensor([1, 10, 8, 28521268],"float32"), tuple(1,-1,-1,-1,), )
paddle.Tensor.expand(Tensor([2, 1, 1140850690],"int32"), list[-1,3,-1,], )
paddle.Tensor.expand(Tensor([1, 2970966, 768],"float32"), tuple(4,-1,-1,), )
paddle.Tensor.expand(Tensor([13, 1, 175515491],"int32"), shape=list[-1,1,-1,], )
paddle.Tensor.expand(Tensor([7042289, 1, 18, 18],"float32"), tuple(-1,-1,18,-1,), )
paddle.Tensor.expand_as(Tensor([17825793, 1, 32],"float32"), Tensor([17825793, 4, 32],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 400, 1901418],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([914144, 3, 32, 26],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([7012, 3, 298, 364],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 128],"int32"), Tensor([17825793, 128],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 28, 27163112],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([4462, 3, 391, 436],"float32"), )
paddle.Tensor.expand_as(Tensor([2281701379, 1],"int32"), Tensor([2281701379, 1],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 352, 2160703],"float32"), )
paddle.Tensor.expand_as(Tensor([2, 1, 32],"float32"), Tensor([2, 35651585, 32],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 29252582, 26],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([6339, 3, 400, 300],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 1868716, 407],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 430, 1768761],"float32"), )
paddle.Tensor.expand_as(Tensor([2, 35651585, 32],"float32"), Tensor([2, 35651585, 32],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([5203, 3, 430, 340],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 2535224, 300],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 1828287, 416],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 15927, 352, 407],"float32"), )
paddle.Tensor.expand_as(Tensor([101862, 1],"float32"), Tensor([101862, 22400],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 368, 2066759],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 298, 2552239],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1],"int32"), Tensor([2281701379, 1],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 16],"float32"), Tensor([142606337, 16],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 14905, 368, 416],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 87757746],"int64"), Tensor([26, 87757746],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 34, 22369622],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 2236963, 340],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([5309, 3, 352, 407],"float32"), )
paddle.Tensor.expand_as(Tensor([4, 1],"float32"), Tensor([4, 570425345],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 35651585],"float32"), Tensor([64, 35651585],"float32"), )
paddle.Tensor.expand_as(Tensor([2, 1, 285212673],"float32"), Tensor([2, 4, 285212673],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 280, 2716312],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 64],"int64"), Tensor([35651585, 64],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 27163112, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 23283, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 15607, 430, 340],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1973791, 34, 34],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([7761, 3, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 1744421, 436],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 32, 23767723],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([4969, 3, 368, 416],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 2742430, 32, 26],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([970112, 3, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([4, 570425345],"float32"), Tensor([4, 570425345],"int64"), )
paddle.Tensor.expand_as(Tensor([142606337, 16],"float32"), Tensor([142606337, 16],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 13385, 391, 436],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1],"int32"), Tensor([5, 456340276],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 21035, 298, 364],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 22369622, 34],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 2089471, 364],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([657931, 3, 34, 34],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 456340276],"int32"), Tensor([5, 456340276],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 2173049, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 391, 1945185],"float32"), )
paddle.Tensor.expand_as(Tensor([17825793, 128],"int32"), Tensor([17825793, 128],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 2910334, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 19015, 400, 300],"float32"), )
paddle.Tensor.fill_(x=Tensor([4, 570425345],"float32"), value=4, )
paddle.Tensor.fill_(Tensor([2281701379],"float32"), 1.0, )
paddle.Tensor.fill_(Tensor([2281701379],"float32"), 1, )
paddle.Tensor.fill_(Tensor([4, 190141782, 3],"float32"), 0, )
paddle.Tensor.fill_(x=Tensor([4, 570425345],"int64"), value=4, )
paddle.Tensor.fill_(Tensor([71303169, 32],"float32"), 1.0, )
paddle.Tensor.fill_(Tensor([32, 71303169],"float32"), 1, )
paddle.Tensor.fill_(x=Tensor([570425345, 4],"int32"), value=4, )
paddle.Tensor.fill_(x=Tensor([570425345, 4],"int64"), value=4, )
paddle.Tensor.fill_(x=Tensor([268435457, 16],"float16"), value=41.2, )
paddle.Tensor.fill_(Tensor([380283564, 2, 3],"float32"), 0, )
paddle.Tensor.fill_(x=Tensor([16777217, 16, 16],"float16"), value=41.2, )
paddle.Tensor.fill_(Tensor([4294967297],"float16"), 1.0, )
paddle.Tensor.fill_(Tensor([10, 228170138],"float32"), 1, )
paddle.Tensor.fill_(Tensor([228170138, 10],"float32"), 1, )
paddle.Tensor.fill_(x=Tensor([10, 26843546, 16],"float16"), value=41.2, )
paddle.Tensor.fill_(Tensor([134217729, 32],"float16"), 1.0, )
paddle.Tensor.fill_(Tensor([32, 71303169],"int32"), 1.0, )
paddle.Tensor.fill_(Tensor([71303169, 32],"int32"), 1.0, )
paddle.Tensor.fill_(Tensor([71303169, 32],"int64"), 1.0, )
paddle.Tensor.fill_(Tensor([20, 114085069],"float32"), 1, )
paddle.Tensor.fill_(x=Tensor([570425345, 4],"float32"), value=4, )
paddle.Tensor.fill_(Tensor([32, 134217729],"float16"), 1.0, )
paddle.Tensor.fill_(x=Tensor([4294967297],"float16"), value=4.2, )
paddle.Tensor.fill_(x=Tensor([4, 1073741825],"float16"), value=4, )
paddle.Tensor.fill_(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.fill_(x=Tensor([10, 16, 26843546],"float16"), value=41.2, )
paddle.Tensor.fill_(Tensor([77, 29632486],"float32"), value=-math.inf, )
paddle.Tensor.fill_(Tensor([32, 71303169],"float32"), 1.0, )
paddle.Tensor.fill_(x=Tensor([4, 570425345],"int32"), value=4, )
paddle.Tensor.fill_(Tensor([4, 2, 285212673],"float32"), 0, )
paddle.Tensor.fill_(x=Tensor([16, 268435457],"float16"), value=41.2, )
paddle.Tensor.fill_(Tensor([32, 71303169],"int64"), 1.0, )
paddle.Tensor.fill_(Tensor([71303169, 32],"float32"), 1, )
paddle.Tensor.fill_(Tensor([76056713, 30],"float32"), 1, )
paddle.Tensor.fill_(Tensor([4294967297],"bfloat16"), 0, )
paddle.Tensor.fill_(x=Tensor([1073741825, 4],"float16"), value=4, )
paddle.Tensor.fill_(Tensor([29632486, 77],"float32"), value=-math.inf, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int64"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int64"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int32"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"float32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([17825793, 128],"float32"), 0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 1431655766],"float16"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 613566757],"float16"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([1431655766, 3],"float16"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"bool"), 0, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int32"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([5, 456340276],"int32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"float32"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([1431655766, 3],"float16"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int32"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int64"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"float32"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int64"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 1431655766],"float16"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"float32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"float32"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"float32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int32"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"bool"), 0, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([128, 17825793],"float32"), 0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 1431655766],"float16"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int32"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([1431655766, 3],"float16"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"float32"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int32"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int64"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([1431655766, 3],"float16"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"float32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"float32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 613566757],"float16"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"float32"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int32"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"int64"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 1431655766],"float16"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([5, 456340276],"float32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([5, 858993460],"float16"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 613566757],"float16"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([5, 456340276],"int64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 760567127],"int64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 325957340],"int64"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"float32"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([760567127, 3],"float32"), 4, 1, False, )
paddle.Tensor.fill_diagonal_tensor(Tensor([81489335, 4, 7],"int32"), Tensor([81489335, 4],"int32"), 0, 1, 2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"int32"), Tensor([3],"int32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"int32"), Tensor([3],"int32"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 570425345],"int32"), Tensor([3],"int32"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"int32"), Tensor([3],"int32"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 190141782, 3, 2],"int32"), Tensor([2, 2, 3],"int32"), offset=0, dim1=1, dim2=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 760567127],"int32"), Tensor([3],"int32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 760567127],"int32"), Tensor([2],"int32"), -1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 285212673, 4],"int32"), Tensor([4, 2],"int32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 760567127],"int32"), Tensor([1],"int32"), -2, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"int32"), Tensor([2],"int32"), offset=1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"int32"), Tensor([2],"int32"), 1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 285212673],"int32"), Tensor([2, 4],"int32"), 0, 1, 2, )
paddle.Tensor.flatten(Tensor([16, 24, 6804],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([8, 34, 9261],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([8, 41, 9261],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([8, 39, 3549],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 6912, 8, 32],"float32"), 2, )
paddle.Tensor.flatten(Tensor([16, 68, 96, 96],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 9216, 8, 32],"float32"), 2, )
paddle.Tensor.flatten(Tensor([16, 31, 6069],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 18, 990322, 64, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([8, 30, 5376],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([64, 36, 2125],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([64, 30, 2577],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([16, 24, 9261],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([128, 192, 24, 24],"float32"), 2, )
paddle.Tensor.flatten(Tensor([64, 29, 1726],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([16, 68, 68, 68],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 1024, 40, 40],"float32"), 2, )
paddle.Tensor.flatten(Tensor([79226, 144, 200],"float32"), 1, )
paddle.Tensor.flatten(Tensor([64, 80, 36, 36],"float16"), 2, )
paddle.Tensor.flatten(Tensor([883012, 4, 19, 34],"float32"), )
paddle.Tensor.flatten(Tensor([64, 43, 2577],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([128, 96, 56, 56],"float16"), 2, )
paddle.Tensor.flatten(Tensor([128, 1024, 28, 28],"float32"), 2, )
paddle.Tensor.flatten(Tensor([8, 80, 84, 84],"float32"), 2, )
paddle.Tensor.flatten(Tensor([30, 256, 4, 40],"float32"), 2, )
paddle.Tensor.flatten(Tensor([8, 21, 9261],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([2, 256, 60, 60],"float32"), 2, )
paddle.Tensor.flatten(Tensor([16, 68, 72, 72],"float32"), 2, )
paddle.Tensor.flatten(Tensor([16, 43, 9261],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([8, 17, 9261],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 28800, 8, 32],"float32"), 2, )
paddle.Tensor.flatten(Tensor([128, 1024, 28, 28],"float16"), 2, )
paddle.Tensor.flatten(Tensor([4, 64, 25, 376, 949],"float32"), start_axis=1, stop_axis=2, )
paddle.Tensor.flatten(Tensor([8, 32, 4116],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([2, 256, 76, 115],"float16"), 2, )
paddle.Tensor.flatten(Tensor([16, 39, 3549],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([16, 26, 12096],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([64, 22, 2577],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([16, 27, 7581],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([2, 256, 68, 68],"float32"), 2, )
paddle.Tensor.flatten(Tensor([2, 300, 12544],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([16, 22, 4725],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([12, 2796203, 68, 1],"float32"), )
paddle.Tensor.flatten(Tensor([16, 24, 12096],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([16, 18, 7581],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([13, 171402, 16, 4, 16],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([8, 14, 9261],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([100, 368, 368],"float32"), 1, )
paddle.Tensor.flatten(Tensor([8, 25, 6069],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([23767723, 6, 4, 4],"float32"), start_axis=1, stop_axis=3, )
paddle.Tensor.flatten(Tensor([8, 22, 10164],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([14, 1, 4, 2, 20372334],"float32"), -2, )
paddle.Tensor.flatten(Tensor([285212673, 1, 2, 2, 2],"float32"), 3, )
paddle.Tensor.flatten(Tensor([16, 16, 10164],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([16, 33, 4321405, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([64, 19, 2577],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([8, 68, 84, 84],"float32"), 2, )
paddle.Tensor.flatten(Tensor([2, 2204, 8, 32],"float32"), 2, )
paddle.Tensor.flatten(Tensor([16, 20, 5376],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([16, 68, 92, 92],"float32"), 2, )
paddle.Tensor.flatten(Tensor([16, 42, 3549],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([512, 256, 2, 25],"float16"), 2, )
paddle.Tensor.flatten(Tensor([16, 32, 12096],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([8, 14, 12096],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([8, 15, 12096],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 96, 16, 64, 56],"float32"), 2, )
paddle.Tensor.flatten(Tensor([64, 80, 48, 48],"float32"), 2, )
paddle.Tensor.flatten(Tensor([16, 26, 3549],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([16, 16, 8400],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 300, 39613, 192],"float32"), -2, )
paddle.Tensor.flatten(Tensor([8, 38, 3549],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([4, 46, 6069],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([13, 2, 8, 4, 2742430],"float32"), start_axis=2, stop_axis=3, )
paddle.Tensor.flatten(Tensor([22817014, 100],"float32"), 0, 1, )
paddle.Tensor.flatten(Tensor([4, 68, 72, 72],"float32"), 2, )
paddle.Tensor.flatten(Tensor([64, 44, 2577],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([16, 80, 38, 38],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 21, 4, 13581556, 2],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 1024, 32, 32],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 128, 176, 176],"float32"), 2, )
paddle.Tensor.flatten(Tensor([1, 96, 16, 56, 65],"float32"), 2, )
paddle.Tensor.flatten(Tensor([2279422, 1001],"int32"), )
paddle.Tensor.flatten(Tensor([8, 68, 44, 44],"float32"), 2, )
paddle.Tensor.flatten(Tensor([16, 142606337, 1, 1],"float32"), 1, )
paddle.Tensor.flatten(Tensor([8, 28, 6804],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([2, 256, 38, 58],"float16"), 2, )
paddle.Tensor.flatten(Tensor([30, 256, 6, 28],"float32"), 2, )
paddle.Tensor.flatten(Tensor([16, 35, 11109],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([21096, 10, 104, 104],"float32"), 2, )
paddle.Tensor.flatten(Tensor([4, 394, 4116],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([16, 21, 3549],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([16, 50, 3024],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 96, 16, 61, 56],"float32"), 2, )
paddle.Tensor.flatten(Tensor([16, 256, 40, 40],"float16"), 2, )
paddle.Tensor.flatten(Tensor([1, 2281701379],"int32"), )
paddle.Tensor.flatten(Tensor([7, 768, 28, 28],"float32"), 2, )
paddle.Tensor.flatten(Tensor([2, 6, 3, 3, 21126865],"float32"), -2, -1, )
paddle.Tensor.flatten(Tensor([16, 20, 9261],"float32"), stop_axis=-2, )
paddle.Tensor.flatten(Tensor([1, 91, 128, 128],"float32"), 2, )
paddle.Tensor.flatten(Tensor([8, 26, 7581],"float32"), stop_axis=-2, )
paddle.Tensor.flip(Tensor([16, 3, 212212, 224],"float32"), 0, )
paddle.Tensor.flip(Tensor([3, 2535224, 300],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([4, 2, 4456449, 64],"float32"), 1, )
paddle.Tensor.flip(Tensor([13, 175515491],"int32"), list[-1,], )
paddle.Tensor.flip(Tensor([4, 139265, 64, 64],"float32"), 1, )
paddle.Tensor.flip(Tensor([557057, 64, 64],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([4, 2, 64, 4456449],"float32"), 1, )
paddle.Tensor.flip(Tensor([3, 400, 1901418],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([2, 1140850690],"float32"), 1, )
paddle.Tensor.flip(Tensor([3, 224, 3395389],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([4, 570425345],"float32"), 1, )
paddle.Tensor.flip(Tensor([15158, 3, 224, 224],"float32"), 0, )
paddle.Tensor.flip(Tensor([3, 11883862, 64],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([16, 3, 224, 212212],"float32"), 0, )
paddle.Tensor.flip(Tensor([3, 2535224, 300],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([16, 3, 224, 224],"float32"), 0, )
paddle.Tensor.flip(Tensor([3, 280, 2716312],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 400, 1901418],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 2173049, 350],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 64, 11883862],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([23283, 280, 350],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 64, 11883862],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 3395389, 224],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 2173049, 350],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([760567127, 3],"float32"), 0, )
paddle.Tensor.flip(Tensor([2, 1140850690],"float32"), 0, )
paddle.Tensor.flip(Tensor([19015, 400, 300],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([45474, 224, 224],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([162978670, 14],"int32"), list[-1,], )
paddle.Tensor.flip(Tensor([1140850690, 2],"float32"), 1, )
paddle.Tensor.flip(Tensor([557057, 64, 64],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([19015, 400, 300],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 280, 2716312],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([278529, 2, 64, 64],"float32"), 1, )
paddle.Tensor.flip(Tensor([3, 11883862, 64],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([16, 2843, 224, 224],"float32"), 0, )
paddle.Tensor.flip(Tensor([23283, 280, 350],"float32"), axis=list[-2,], )
paddle.Tensor.floor(Tensor([112, 20372334],"float32"), )
paddle.Tensor.floor(Tensor([100, 22817014],"float32"), )
paddle.Tensor.floor(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.floor(Tensor([174, 13113227],"float32"), )
paddle.Tensor.floor(Tensor([122, 18702471],"float32"), )
paddle.Tensor.floor(Tensor([231, 9877496],"float32"), )
paddle.Tensor.floor(Tensor([157, 14533130],"float32"), )
paddle.Tensor.floor(Tensor([1872, 1218858],"float32"), )
paddle.Tensor.floor(Tensor([205, 11130251],"float32"), )
paddle.Tensor.floor(Tensor([17, 134217729],"float32"), )
paddle.Tensor.floor(Tensor([15, 152113426],"float32"), )
paddle.Tensor.floor(Tensor([1159, 1968682],"float32"), )
paddle.Tensor.floor(Tensor([178, 12818548],"float32"), )
paddle.Tensor.floor(Tensor([1069, 2134426],"float32"), )
paddle.Tensor.floor(Tensor([125, 18253612],"float32"), )
paddle.Tensor.floor(Tensor([134, 17027623],"float32"), )
paddle.Tensor.floor(Tensor([192, 11883862],"float32"), )
paddle.Tensor.floor(Tensor([1481, 1540650],"float32"), )
paddle.Tensor.floor(Tensor([23, 99204408],"float32"), )
paddle.Tensor.floor(Tensor([166, 13745190],"float32"), )
paddle.Tensor.floor(Tensor([142, 16068320],"float32"), )
paddle.Tensor.floor(Tensor([207, 11022712],"float32"), )
paddle.Tensor.floor(Tensor([200, 11408507],"float32"), )
paddle.Tensor.floor(Tensor([111, 20555869],"float32"), )
paddle.Tensor.floor(Tensor([1042, 2189733],"float32"), )
paddle.Tensor.floor(Tensor([237, 9627432],"float32"), )
paddle.Tensor.floor(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.floor(Tensor([137, 16654755],"float32"), )
paddle.Tensor.floor(Tensor([183, 12468314],"float32"), )
paddle.Tensor.floor(Tensor([201, 11351749],"float32"), )
paddle.Tensor.floor(Tensor([198, 11523745],"float32"), )
paddle.Tensor.floor(Tensor([1065, 2142443],"float32"), )
paddle.Tensor.floor(Tensor([110, 20742740],"float32"), )
paddle.Tensor.floor(Tensor([165, 13828494],"float32"), )
paddle.Tensor.floor(Tensor([144, 15845149],"float32"), )
paddle.Tensor.floor(Tensor([1163, 1961911],"float32"), )
paddle.Tensor.floor(Tensor([1915, 1191489],"float32"), )
paddle.Tensor.floor(Tensor([232, 9834920],"float32"), )
paddle.Tensor.floor(Tensor([114, 20014925],"float32"), )
paddle.Tensor.floor(Tensor([2, 142606337, 8],"float32"), )
paddle.Tensor.floor(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.floor(Tensor([220, 10371370],"float32"), )
paddle.Tensor.floor(Tensor([18, 126761188],"float32"), )
paddle.Tensor.floor(Tensor([203, 11239909],"float32"), )
paddle.Tensor.floor(Tensor([11, 207427399],"float32"), )
paddle.Tensor.floor(Tensor([113, 20192048],"float32"), )
paddle.Tensor.floor(Tensor([139, 16415118],"float32"), )
paddle.Tensor.floor(Tensor([235, 9709368],"float32"), )
paddle.Tensor.floor(Tensor([163, 13998168],"float32"), )
paddle.Tensor.floor(Tensor([123, 18550418],"float32"), )
paddle.Tensor.floor(Tensor([146, 15628092],"float32"), )
paddle.Tensor.floor(Tensor([108, 21126865],"float32"), )
paddle.Tensor.floor(Tensor([148, 15416902],"float32"), )
paddle.Tensor.floor(Tensor([173, 13189026],"float32"), )
paddle.Tensor.floor(Tensor([1230, 1855042],"float32"), )
paddle.Tensor.floor(Tensor([190, 12008955],"float32"), )
paddle.Tensor.floor(Tensor([185, 12333521],"float32"), )
paddle.Tensor.floor(Tensor([127, 17966153],"float32"), )
paddle.Tensor.floor(Tensor([1857, 1228703],"float32"), )
paddle.Tensor.floor(Tensor([13, 175515491],"float32"), )
paddle.Tensor.floor(Tensor([219, 10418728],"float32"), )
paddle.Tensor.floor(Tensor([1131, 2017420],"float32"), )
paddle.Tensor.floor(Tensor([120, 19014179],"float32"), )
paddle.Tensor.floor(Tensor([238, 9586981],"float32"), )
paddle.Tensor.floor(Tensor([1090, 2093305],"float32"), )
paddle.Tensor.floor(Tensor([171, 13343283],"float32"), )
paddle.Tensor.floor(Tensor([161, 14172059],"float32"), )
paddle.Tensor.floor(Tensor([1721, 1325800],"float32"), )
paddle.Tensor.floor(Tensor([151, 15110606],"float32"), )
paddle.Tensor.floor(Tensor([158, 14441148],"float32"), )
paddle.Tensor.floor(Tensor([181, 12606085],"float32"), )
paddle.Tensor.floor(Tensor([103, 22152441],"float32"), )
paddle.Tensor.floor(Tensor([159, 14350324],"float32"), )
paddle.Tensor.floor(Tensor([222, 10277935],"float32"), )
paddle.Tensor.floor(Tensor([22, 103713700],"float32"), )
paddle.Tensor.floor(Tensor([167, 13662883],"float32"), )
paddle.Tensor.floor(Tensor([1296, 1760573],"float32"), )
paddle.Tensor.floor(Tensor([233, 9792710],"float32"), )
paddle.Tensor.floor(Tensor([184, 12400551],"float32"), )
paddle.Tensor.floor(Tensor([179, 12746936],"float32"), )
paddle.Tensor.floor(Tensor([14, 162978670],"float32"), )
paddle.Tensor.floor(Tensor([150, 15211343],"float32"), )
paddle.Tensor.floor(Tensor([141, 16182280],"float32"), )
paddle.Tensor.floor(Tensor([193, 11822287],"float32"), )
paddle.Tensor.floor(Tensor([206, 11076221],"float32"), )
paddle.Tensor.floor(Tensor([177, 12890969],"float32"), )
paddle.Tensor.floor(Tensor([182, 12536821],"float32"), )
paddle.Tensor.floor(Tensor([128, 17825793],"float32"), )
paddle.Tensor.floor(Tensor([214, 10662156],"float32"), )
paddle.Tensor.floor(Tensor([35651585, 8, 8],"float32"), )
paddle.Tensor.floor(Tensor([197, 11582241],"float32"), )
paddle.Tensor.floor(Tensor([1282, 1779799],"float32"), )
paddle.Tensor.floor(Tensor([234, 9750861],"float32"), )
paddle.Tensor.floor(Tensor([223, 10231845],"float32"), )
paddle.Tensor.floor(Tensor([199, 11465837],"float32"), )
paddle.Tensor.floor(Tensor([115, 19840882],"float32"), )
paddle.Tensor.floor(Tensor([154, 14816243],"float32"), )
paddle.Tensor.floor(Tensor([162, 14084577],"float32"), )
paddle.Tensor.floor(Tensor([212, 10762743],"float32"), )
paddle.Tensor.floor(Tensor([143, 15955954],"float32"), )
paddle.Tensor.gather(Tensor([4, 570425345],"float32"), Tensor([4, 1],"int64"), 1, )
paddle.Tensor.gather_nd(Tensor([1, 20, 2],"float32"), Tensor([1, 2281701379],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 500, 570426],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([2632, 3, 80, 80, 85],"float16"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([16777217, 128, 2],"float16"), Tensor([16777217, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([12, 5941931, 32],"float32"), Tensor([12, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 34817],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([69633, 16384, 2],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([10186167, 7, 32],"float32"), Tensor([10186167, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([8, 987, 80, 80, 85],"float16"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 80, 80, 13982],"float16"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([4563403, 500, 1],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 10],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 10],"float32"), Tensor([8, 500, 570426],"int64"), )
paddle.Tensor.gather_nd(Tensor([162978670, 7, 2],"float32"), Tensor([14, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([16777217, 128, 2],"float16"), Tensor([7, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([1, 2048, 2097153],"float16"), Tensor([2, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([14, 7, 23282668],"float32"), Tensor([14, 23282668],"int64"), )
paddle.Tensor.gather_nd(Tensor([12, 7, 32],"float32"), Tensor([12, 190141782],"int32"), )
paddle.Tensor.gather_nd(Tensor([2, 10, 32],"float32"), Tensor([2, 1140850690],"int32"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 13982, 80, 85],"float32"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([13927, 16384, 10],"float32"), Tensor([13927, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([7, 128, 4793491],"float16"), Tensor([7, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 80, 80, 27963],"float16"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([1, 20, 114085069],"float32"), Tensor([1, 114085069],"int64"), )
paddle.Tensor.gather_nd(Tensor([7, 128, 2],"float16"), Tensor([7, 325957340],"int64"), )
paddle.Tensor.gather_nd(Tensor([16777217, 128, 2],"float16"), Tensor([32, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([32, 128, 1048577],"float16"), Tensor([32, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 2],"float32"), Tensor([4, 500, 1140851],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 525, 80, 80, 85],"float32"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 80, 80, 85],"float16"), Tensor([385, 5926498],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 500, 2],"float32"), Tensor([8, 500, 570426],"int64"), )
paddle.Tensor.gather_nd(Tensor([21298, 53568, 2],"float32"), Tensor([21298, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 34817],"float32"), Tensor([4, 500, 34817],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 500, 570426],"float32"), Tensor([8, 500, 570426],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 80, 80, 85],"float32"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([14, 7, 3],"float32"), Tensor([14, 162978670],"int64"), )
paddle.Tensor.gather_nd(Tensor([5325, 53568, 8],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 26318, 80, 85],"float16"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([2731, 2048, 768],"float16"), Tensor([2, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([2, 10, 114085069],"float32"), Tensor([2, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([8, 28521268, 10],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([42595, 53568, 1],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 71303169, 8],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 285212673, 1],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([2281702, 500, 2],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 53568, 10649],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([108652447, 7, 3],"float32"), Tensor([13, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([32, 128, 2],"float16"), Tensor([32, 71303169],"int64"), )
paddle.Tensor.gather_nd(Tensor([1, 1140850690, 2],"float32"), Tensor([1, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 142606337, 2],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([1, 5592406, 768],"float16"), Tensor([2, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 17409],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 80, 6991, 85],"float32"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 53568, 10649],"float32"), Tensor([4, 500, 10649],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 263, 80, 80, 85],"float32"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([14, 54326224, 3],"float32"), Tensor([14, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([7, 306783379, 2],"float16"), Tensor([7, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 570425345, 1],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([13, 7, 3],"float32"), Tensor([13, 175515491],"int64"), )
paddle.Tensor.gather_nd(Tensor([14, 7, 23282668],"float32"), Tensor([14, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([13927, 16384, 10],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([139265, 16384, 1],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 285212673, 2],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 17409],"float32"), Tensor([8, 500, 17409],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 285212673, 2],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([13, 58505164, 3],"float32"), Tensor([13, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([1, 2048, 768],"float16"), Tensor([2, 1140850690],"int64"), )
paddle.Tensor.gather_nd(Tensor([14, 81489335, 2],"float32"), Tensor([14, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 80, 80, 85],"float32"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 6991, 80, 85],"float32"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 57042535, 10],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 80, 13159, 85],"float16"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 80, 80, 14855],"float32"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([1399, 3, 80, 80, 85],"float32"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 53568, 8],"float32"), Tensor([4, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 80, 13982, 85],"float32"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 500, 1140851],"float32"), Tensor([4, 500, 1140851],"int64"), )
paddle.Tensor.gather_nd(Tensor([32, 128, 1048577],"float16"), Tensor([32, 1048577],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 80, 80, 85],"float32"), Tensor([516, 4421902],"int64"), )
paddle.Tensor.gather_nd(Tensor([139265, 16384, 1],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([32, 67108865, 2],"float16"), Tensor([32, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 80, 80, 85],"float16"), Tensor([516, 4421902],"int64"), )
paddle.Tensor.gather_nd(Tensor([4, 500, 1140851],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 13159, 80, 85],"float16"), Tensor([516, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 285212673, 1],"float32"), Tensor([8, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 1],"float32"), Tensor([8, 500, 570426],"int64"), )
paddle.Tensor.gather_nd(Tensor([4563403, 500, 1],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([1399, 3, 80, 80, 85],"float32"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 16384, 2],"float32"), Tensor([8, 500, 570426],"int64"), )
paddle.Tensor.gather_nd(Tensor([7130317, 10, 32],"float32"), Tensor([2, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([4, 16384, 10],"float32"), Tensor([4, 500, 1140851],"int64"), )
paddle.Tensor.gather_nd(Tensor([57042535, 20, 2],"float32"), Tensor([1, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([10186167, 7, 32],"float32"), Tensor([12, 2],"int32"), )
paddle.Tensor.gather_nd(Tensor([2632, 3, 80, 80, 85],"float16"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 142606337, 2],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([2281702, 500, 2],"float32"), Tensor([4, 500, 3],"int64"), )
paddle.Tensor.gather_nd(Tensor([13927, 16384, 10],"float32"), Tensor([8, 500, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([108652447, 7, 3],"float32"), Tensor([14, 2],"int64"), )
paddle.Tensor.gather_nd(Tensor([8, 3, 80, 26318, 85],"float16"), Tensor([385, 4],"int64"), )
paddle.Tensor.gather_nd(Tensor([16, 3, 80, 80, 7428],"float32"), Tensor([516, 4],"int64"), )
paddle.Tensor.imag(Tensor([16, 513, 213],"complex64"), )
paddle.Tensor.imag(Tensor([16, 257, 511],"complex64"), )
paddle.Tensor.imag(Tensor([16, 1025, 107],"complex64"), )
paddle.Tensor.index_select(Tensor([2281701379],"int32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([3, 1521135, 500],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([4294967297],"float16"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([3, 1, 500],"float32"), index=Tensor([2281701379],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([5704254, 1, 400],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([142606337, 16],"float32"), Tensor([30],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([95070891, 24],"float32"), axis=0, index=Tensor([130],"int64"), )
paddle.Tensor.index_select(Tensor([2281701379],"int64"), Tensor([6],"int64"), )
paddle.Tensor.index_select(Tensor([2281701379],"float32"), Tensor([6],"int64"), )
paddle.Tensor.index_select(Tensor([2, 1, 1140850690],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([285212673, 8],"float32"), Tensor([5],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([95070891, 24],"float32"), axis=0, index=Tensor([91],"int64"), )
paddle.Tensor.index_select(Tensor([2281701379],"float32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([12],"float32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([8, 285212673],"float32"), Tensor([5],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([2, 1, 400],"float32"), index=Tensor([2281701379],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([4563403, 1, 500],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([128, 17825793],"float32"), Tensor([28],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([454, 5025774],"float32"), axis=0, index=Tensor([39],"int64"), )
paddle.Tensor.index_select(Tensor([20],"float32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([454, 5025774],"float32"), axis=0, index=Tensor([91],"int64"), )
paddle.Tensor.index_select(Tensor([2281701379],"float32"), Tensor([1],"int64"), )
paddle.Tensor.index_select(Tensor([285212673, 8],"float32"), Tensor([285212673],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([95070891, 24],"float32"), axis=0, index=Tensor([182],"int64"), )
paddle.Tensor.index_select(Tensor([128, 17825793],"float32"), Tensor([30],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([4004, 569856],"float32"), axis=0, index=Tensor([182],"int64"), )
paddle.Tensor.index_select(Tensor([454, 5025774],"float32"), axis=0, index=Tensor([130],"int64"), )
paddle.Tensor.index_select(Tensor([142606337, 16],"float32"), Tensor([38],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([4, 570425345],"float32"), Tensor([4],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([12],"int32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([3, 1, 760567127],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([142606337, 16],"float32"), Tensor([28],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([2, 2852127, 400],"float32"), index=Tensor([2],"int64"), axis=-1, )
paddle.Tensor.index_select(Tensor([4294967297],"float16"), Tensor([6],"int64"), )
paddle.Tensor.index_select(Tensor([1],"float32"), Tensor([2281701379],"int64"), )
paddle.Tensor.index_select(Tensor([95070891, 24],"float32"), axis=0, index=Tensor([39],"int64"), )
paddle.Tensor.index_select(Tensor([4294967297],"float16"), Tensor([40],"int64"), )
paddle.Tensor.index_select(Tensor([285212673, 8],"float32"), Tensor([4],"int64"), axis=0, )
paddle.Tensor.index_select(Tensor([2281701379],"int32"), Tensor([6],"int64"), )
paddle.Tensor.index_select(Tensor([128, 17825793],"float32"), Tensor([38],"int64"), axis=0, )
paddle.Tensor.inner(x=Tensor([5, 3, 286331154],"float16"), y=Tensor([2, 5, 286331154],"float16"), )
paddle.Tensor.inner(x=Tensor([1073741825, 4],"float16"), y=Tensor([5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 143165577],"float16"), y=Tensor([3, 2, 5, 143165577],"float16"), )
paddle.Tensor.inner(x=Tensor([4, 4],"float16"), y=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([107374183, 2, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([536870913, 2, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([357913942, 3, 4],"float16"), y=Tensor([2, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 715827883],"float16"), y=Tensor([3, 2, 715827883],"float16"), )
paddle.Tensor.inner(x=Tensor([1073741825, 4],"float16"), y=Tensor([3, 2, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 143165577],"float16"), y=Tensor([3, 2, 5, 143165577],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 858993460],"float16"), y=Tensor([5, 858993460],"float16"), )
paddle.Tensor.inner(x=Tensor([1073741825, 4],"float16"), y=Tensor([4, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([3, 357913942, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([4, 4],"float32"), y=Tensor([570425345, 4],"float32"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([3, 71582789, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([5, 214748365, 4],"float16"), y=Tensor([2, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([4, 570425345],"float32"), y=Tensor([4, 570425345],"float32"), )
paddle.Tensor.inner(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.inner(x=Tensor([570425345, 4],"float32"), y=Tensor([4, 4],"float32"), )
paddle.Tensor.inner(x=Tensor([2, 178956971, 3, 4],"float16"), y=Tensor([3, 2, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([5, 3, 4],"float16"), y=Tensor([214748365, 5, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([5, 3, 4],"float16"), y=Tensor([2, 536870913, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([1073741825, 4],"float16"), y=Tensor([3, 2, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float16"), y=Tensor([3, 2, 178956971, 4],"float16"), )
paddle.Tensor.inverse(Tensor([142606337, 4, 4],"float32"), )
paddle.Tensor.inverse(Tensor([2, 126761188, 3, 3],"float32"), )
paddle.Tensor.inverse(Tensor([63380594, 4, 3, 3],"float32"), )
paddle.Tensor.is_complex(Tensor([2, 31580642, 4, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.is_complex(Tensor([42949673, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([2386093, 3, 100, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([126322568, 17, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([39768216, 3, 6, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 357913942, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 119304648, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 42107523, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 8947849, 40, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 12, 357913942],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 4, 357913942],"float16"), )
paddle.Tensor.is_complex(Tensor([268435457, 16],"float16"), )
paddle.Tensor.is_complex(Tensor([40, 107374183],"float16"), )
paddle.Tensor.is_complex(Tensor([7158279, 3, 100, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([357914, 3, 40, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([1073741825, 2, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([100, 42949673],"float16"), )
paddle.Tensor.is_complex(Tensor([715827883, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 2, 715827883],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3579140, 100, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([3579140, 3, 4, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([357914, 3, 100, 40],"float16"), )
paddle.Tensor.is_complex(Tensor([357913942, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.is_complex(Tensor([2, 5368710, 4, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 4473925, 40, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([29826162, 12, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([357913942, 3, 2, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([7158279, 100, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 6710887, 40, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 7158279, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 2, 357913942],"float16"), )
paddle.Tensor.is_complex(Tensor([4, 1073741825],"float16"), )
paddle.Tensor.is_complex(Tensor([536870913, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([268435457, 4, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 760567127],"int64"), )
paddle.Tensor.is_complex(Tensor([2, 2684355, 100, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([204522253, 21],"float16"), )
paddle.Tensor.is_complex(Tensor([4294967297],"float16"), )
paddle.Tensor.is_complex(Tensor([1140850690, 2],"int64"), )
paddle.Tensor.is_complex(Tensor([2, 3, 59652324, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([5368710, 100, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.is_complex(Tensor([63161284, 4, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([3579140, 3, 100, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 8, 536870913],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 6, 715827883],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 100, 7158279],"float16"), )
paddle.Tensor.is_complex(Tensor([22369622, 3, 8, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([2281701379],"float32"), )
paddle.Tensor.is_complex(Tensor([3, 178956971, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 1073741825, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([119304648, 6, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 5368710, 100, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 252645136, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 8, 178956971],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 357913942, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([8947849, 40, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([89478486, 3, 4, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([5, 858993460],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 14913081, 12, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([6, 715827883],"float16"), )
paddle.Tensor.is_complex(Tensor([21053762, 3, 4, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([3579140, 100, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([13421773, 40, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 536870913, 2, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([178956971, 3, 4, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([16, 268435457],"float16"), )
paddle.Tensor.is_complex(Tensor([17895698, 40, 6],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 17, 252645136],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 14316558, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 536871, 100, 40],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 42949673, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 40, 17895698],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 715827883, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 2147483649, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([1073742, 100, 40],"float16"), )
paddle.Tensor.is_complex(Tensor([252645136, 17],"float16"), )
paddle.Tensor.is_complex(Tensor([1193047, 3, 100, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([17, 252645136],"float16"), )
paddle.Tensor.is_complex(Tensor([4473925, 3, 40, 8],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 17, 84215046],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 536871, 40, 100],"float16"), )
paddle.Tensor.is_complex(Tensor([1, 40, 107374183],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 12, 119304648],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 10737419, 100, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([2147483649, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([63161284, 17, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([3, 35791395, 40],"float16"), )
paddle.Tensor.is_complex(Tensor([21474837, 100, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([2982617, 3, 40, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([21053762, 3, 17, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([12, 357913942],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 268435457, 4, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 63161284, 17, 2],"float16"), )
paddle.Tensor.is_complex(Tensor([760567127, 3],"float32"), )
paddle.Tensor.is_complex(Tensor([2, 134217729, 4, 4],"float16"), )
paddle.Tensor.is_complex(Tensor([9942054, 3, 12, 12],"float16"), )
paddle.Tensor.is_complex(Tensor([2, 3, 119304648, 6],"float16"), )
paddle.Tensor.isclose(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), )
paddle.Tensor.isclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.Tensor.isclose(x=Tensor([3, 4, 357913942],"float16"), y=Tensor([3, 4, 357913942],"float16"), )
paddle.Tensor.isnan(Tensor([477218589, 3, 3],"float16"), )
paddle.Tensor.isnan(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.Tensor.isnan(Tensor([613566757, 7],"float16"), )
paddle.Tensor.isnan(Tensor([3, 11930465, 3, 4, 2, 5],"float16"), )
paddle.Tensor.isnan(Tensor([3, 3, 477218589],"float16"), )
paddle.Tensor.isnan(Tensor([3, 253522376, 3],"float32"), )
paddle.Tensor.isnan(Tensor([5, 858993460],"float16"), )
paddle.Tensor.isnan(Tensor([7, 613566757],"float16"), )
paddle.Tensor.isnan(Tensor([4, 178956971, 6],"float16"), )
paddle.Tensor.isnan(Tensor([3, 477218589, 3],"float16"), )
paddle.Tensor.isnan(Tensor([2281701379],"float32"), )
paddle.Tensor.isnan(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), )
paddle.Tensor.isnan(Tensor([357913942, 3, 4],"float16"), )
paddle.Tensor.isnan(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.isnan(Tensor([178956971, 24],"float16"), )
paddle.Tensor.isnan(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.isnan(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.isnan(Tensor([2, 536870913, 4],"float16"), )
paddle.Tensor.isnan(Tensor([3, 3, 253522376],"float32"), )
paddle.Tensor.isnan(Tensor([760567127, 3],"float32"), )
paddle.Tensor.isnan(Tensor([4, 1073741825],"float16"), )
paddle.Tensor.isnan(Tensor([5, 3, 286331154],"float16"), )
paddle.Tensor.isnan(Tensor([4, 7, 153391690],"float16"), )
paddle.Tensor.isnan(Tensor([4294967297],"float16"), )
paddle.Tensor.isnan(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), )
paddle.Tensor.isnan(Tensor([325957340, 7],"float32"), )
paddle.Tensor.isnan(Tensor([5965233, 6, 3, 4, 2, 5],"float16"), )
paddle.Tensor.isnan(Tensor([3, 6, 5965233, 4, 2, 5],"float16"), )
paddle.Tensor.isnan(Tensor([4, 570425345],"float32"), )
paddle.Tensor.isnan(Tensor([253522376, 3, 3],"float32"), )
paddle.Tensor.isnan(Tensor([102261127, 42],"float16"), )
paddle.Tensor.isnan(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.isnan(Tensor([357913942, 12],"float16"), )
paddle.Tensor.isnan(Tensor([5, 214748365, 4],"float16"), )
paddle.Tensor.isnan(Tensor([102261127, 7, 6],"float16"), )
paddle.Tensor.item(Tensor([2281701379, 1, 1],"int32"), 0, )
paddle.Tensor.item(Tensor([2, 1140850690, 1],"int64"), 0, )
paddle.Tensor.item(Tensor([2281701379],"int32"), 0, )
paddle.Tensor.item(Tensor([760567127, 3],"float32"), 0, )
paddle.Tensor.item(Tensor([2281701379],"int64"), 0, )
paddle.Tensor.item(Tensor([2281701379, 1, 1],"int64"), 0, )
paddle.Tensor.item(Tensor([2, 1, 1140850690],"int32"), 0, )
paddle.Tensor.item(Tensor([2281701379],"float32"), 0, )
paddle.Tensor.item(Tensor([4294967297],"float16"), 0, )
paddle.Tensor.item(Tensor([2, 1, 1140850690],"int64"), 0, )
paddle.Tensor.item(Tensor([2, 1140850690, 1],"int32"), 0, )
paddle.Tensor.item(Tensor([3, 760567127],"float32"), 0, )
paddle.Tensor.kthvalue(Tensor([1140851, 200, 10],"float32"), k=200, axis=1, )
paddle.Tensor.kthvalue(Tensor([2, 114085069, 10],"float32"), k=200, axis=1, )
paddle.Tensor.kthvalue(Tensor([2, 200, 5704254],"float32"), k=200, axis=1, )
paddle.Tensor.lerp(x=Tensor([214748365, 5, 4],"float16"), y=Tensor([214748365, 5, 4],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([858993460, 5],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 214748365],"float16"), y=Tensor([4, 5, 214748365],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 268435457, 4],"float16"), y=Tensor([4, 268435457, 4],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([1],"float16"), weight=0.2, )
paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([1],"float16"), weight=0.2, )
paddle.Tensor.lerp(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), weight=0.5, )
paddle.Tensor.less(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.Tensor.less(Tensor([2228225, 1024],"float32"), Tensor([2228225, 1024],"float32"), )
paddle.Tensor.lgamma(Tensor([2281701379],"float32"), )
paddle.Tensor.lgamma(Tensor([100, 429497, 100],"float16"), )
paddle.Tensor.lgamma(Tensor([5, 7, 122713352],"float16"), )
paddle.Tensor.lgamma(Tensor([5, 7, 12271336, 10],"float16"), )
paddle.Tensor.lgamma(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.lgamma(Tensor([760567127, 3],"float32"), )
paddle.Tensor.lgamma(Tensor([429497, 100, 100],"float16"), )
paddle.Tensor.lgamma(Tensor([858993460, 5],"float16"), )
paddle.Tensor.lgamma(Tensor([4, 1073741825],"float16"), )
paddle.Tensor.lgamma(Tensor([5, 7, 8, 15339169],"float16"), )
paddle.Tensor.lgamma(Tensor([5, 10737419, 8, 10],"float16"), )
paddle.Tensor.lgamma(Tensor([100, 100, 429497],"float16"), )
paddle.Tensor.lgamma(Tensor([7669585, 7, 8, 10],"float16"), )
paddle.Tensor.lgamma(Tensor([76695845, 7, 8],"float16"), )
paddle.Tensor.lgamma(Tensor([5, 107374183, 8],"float16"), )
paddle.Tensor.lgamma(Tensor([100, 100, 100],"float64"), )
paddle.Tensor.log(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.log(Tensor([8550, 266866],"float32"), )
paddle.Tensor.log(Tensor([100, 200, 214749],"float16"), )
paddle.Tensor.log(Tensor([6380, 357634],"float32"), )
paddle.Tensor.log(Tensor([477218589, 3, 3],"float16"), )
paddle.Tensor.log(Tensor([600, 7158279],"float16"), )
paddle.Tensor.log(Tensor([2400, 950709],"float32"), )
paddle.Tensor.log(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.log(Tensor([600, 3802836],"float32"), )
paddle.Tensor.log(Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.log(Tensor([325957340, 7],"float32"), )
paddle.Tensor.log(Tensor([4800, 475355],"float32"), )
paddle.Tensor.log(Tensor([760567127, 3],"float32"), )
paddle.Tensor.log(Tensor([4294967297, 1],"float16"), )
paddle.Tensor.log(Tensor([1200, 1901418],"float32"), )
paddle.Tensor.log(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.log(Tensor([11, 207427399],"float32"), )
paddle.Tensor.log(Tensor([22591103, 101],"float32"), )
paddle.Tensor.log(Tensor([456340276, 5],"float32"), )
paddle.Tensor.log(Tensor([1, 2281701379],"float32"), )
paddle.Tensor.log(Tensor([3, 1431655766],"float16"), )
paddle.Tensor.log(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.log(Tensor([8, 536870913],"float16"), )
paddle.Tensor.log(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.log(Tensor([429496730, 10],"float16"), )
paddle.Tensor.log(Tensor([285212673, 8],"float32"), )
paddle.Tensor.log(Tensor([142606337, 16],"float32"), )
paddle.Tensor.log(Tensor([9, 253522376],"float32"), )
paddle.Tensor.log(Tensor([300, 7605672],"float32"), )
paddle.Tensor.log(Tensor([100, 429497, 100],"float16"), )
paddle.Tensor.log(Tensor([286331154, 5, 3],"float16"), )
paddle.Tensor.log(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.log(Tensor([4294967297],"float16"), )
paddle.Tensor.log(Tensor([8, 285212673],"float32"), )
paddle.Tensor.log(Tensor([2, 715827883, 3],"float16"), )
paddle.Tensor.log(Tensor([10000, 5, 85900],"float16"), )
paddle.Tensor.log(Tensor([10000, 429497],"float16"), )
paddle.Tensor.log(Tensor([2, 1073741825, 2],"float16"), )
paddle.Tensor.log(Tensor([570425345, 4],"float32"), )
paddle.Tensor.log(Tensor([10, 228170138],"float32"), )
paddle.Tensor.log(Tensor([2281701379],"float32"), )
paddle.Tensor.log(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.log(Tensor([10000, 143166, 3],"float16"), )
paddle.Tensor.log(Tensor([100, 200, 100],"float64"), )
paddle.Tensor.log(Tensor([214749, 200, 100],"float16"), )
paddle.Tensor.log(Tensor([900, 2535224],"float32"), )
paddle.Tensor.log(Tensor([1800, 1267612],"float32"), )
paddle.Tensor.log10(Tensor([4572548, 499],"float32"), )
paddle.Tensor.log10(Tensor([80, 28521268],"float32"), )
paddle.Tensor.log1p(Tensor([2281701379],"float32"), )
paddle.Tensor.log1p(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.log1p(Tensor([4294967297],"float16"), )
paddle.Tensor.log1p(Tensor([760567127, 3],"float32"), )
paddle.Tensor.log1p(Tensor([2, 1073741825, 2],"float16"), )
paddle.Tensor.log1p(Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.log1p(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.log1p(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.log1p(Tensor([2, 3, 715827883],"float16"), )
paddle.Tensor.logical_and(Tensor([760567127, 3],"bool"), Tensor([760567127, 3],"bool"), )
paddle.Tensor.logical_and(Tensor([2, 1140850690],"bool"), Tensor([2, 1140850690],"bool"), )
paddle.Tensor.logical_and(Tensor([2281701379],"bool"), Tensor([2281701379],"bool"), )
paddle.Tensor.logical_not(Tensor([2, 1140850690],"bool"), )
paddle.Tensor.logical_not(Tensor([4, 7, 81489335],"bool"), )
paddle.Tensor.logical_not(Tensor([5, 456340276],"bool"), )
paddle.Tensor.logical_not(Tensor([325957340, 7],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 6, 3, 4, 2112687, 5],"bool"), )
paddle.Tensor.logical_not(Tensor([2, 285212673, 4],"bool"), )
paddle.Tensor.logical_not(Tensor([13, 175515491],"float32"), )
paddle.Tensor.logical_not(Tensor([2, 3, 380283564],"bool"), )
paddle.Tensor.logical_not(Tensor([54326224, 7, 6],"bool"), )
paddle.Tensor.logical_not(Tensor([2281701379],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 6, 3, 4, 2, 5281717],"bool"), )
paddle.Tensor.logical_not(Tensor([95070891, 24],"bool"), )
paddle.Tensor.logical_not(Tensor([7, 325957340],"bool"), )
paddle.Tensor.logical_not(Tensor([5, 3, 152113426],"bool"), )
paddle.Tensor.logical_not(Tensor([4, 570425345],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 253522376, 3],"bool"), )
paddle.Tensor.logical_not(Tensor([54326224, 42],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 3, 253522376],"bool"), )
paddle.Tensor.logical_not(Tensor([190141782, 3, 4],"bool"), )
paddle.Tensor.logical_not(Tensor([253522376, 3, 3],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 6, 3, 4225373, 2, 5],"bool"), )
paddle.Tensor.logical_not(Tensor([253522376, 9],"float32"), )
paddle.Tensor.logical_not(Tensor([190141782, 12],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 6, 3169030, 4, 2, 5],"bool"), )
paddle.Tensor.logical_not(Tensor([3, 6338060, 3, 4, 2, 5],"bool"), )
paddle.Tensor.logical_not(Tensor([4, 95070891, 6],"bool"), )
paddle.Tensor.logical_not(Tensor([3169030, 6, 3, 4, 2, 5],"bool"), )
paddle.Tensor.logical_not(Tensor([760567127, 3],"bool"), )
paddle.Tensor.logical_not(Tensor([5, 114085069, 4],"bool"), )
paddle.Tensor.logical_or(Tensor([2281701379],"bool"), Tensor([2281701379],"bool"), )
paddle.Tensor.logit(x=Tensor([4, 107374183, 2, 5],"float16"), eps=0.2, )
paddle.Tensor.logit(x=Tensor([4, 3, 71582789, 5],"float16"), eps=0.2, )
paddle.Tensor.logit(x=Tensor([143165577, 3, 2, 5],"float16"), eps=0.2, )
paddle.Tensor.logit(x=Tensor([4, 3, 2, 178956971],"float16"), eps=0.2, )
paddle.Tensor.lu(Tensor([760567127, 3],"float32"), )
paddle.Tensor.masked_fill(Tensor([1, 38367, 59471],"float32"), Tensor([1, 38367, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1398, 6380, 256],"float32"), Tensor([1398, 6380, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 6380, 357634],"float32"), Tensor([1, 6380, 357634],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([13, 4, 6268411, 7],"float32"), Tensor([13, 4, 6268411, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 256],"float32"), Tensor([1, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 61956],"float32"), Tensor([1, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([243, 36828, 256],"float32"), Tensor([1, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([14868, 38367, 4],"float32"), Tensor([14868, 38367, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 6380, 256],"float32"), Tensor([1, 6380, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 6380, 357634],"float32"), Tensor([1, 6380, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([66717, 8550, 4],"float32"), Tensor([66717, 8550, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([52, 895488, 7, 7],"float32"), Tensor([52, 895488, 7, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 3581949, 7, 7],"float32"), Tensor([13, 3581949, 7, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 4, 1567103, 7],"float32"), Tensor([52, 4, 1567103, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([1, 8550, 266866],"float32"), Tensor([1, 8550, 266866],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 570425345, 4],"float32"), Tensor([1, 570425345, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 6380, 357634],"float32"), Tensor([1, 6380, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([89409, 6380, 4],"float32"), Tensor([89409, 6380, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 8912897, 256],"float32"), Tensor([1, 8912897, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1043, 8550, 256],"float32"), Tensor([1043, 8550, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 6380, 357634],"float32"), Tensor([1, 6380, 357634],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([14868, 38367, 4],"float32"), Tensor([1, 38367, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([15489, 36828, 4],"float32"), Tensor([15489, 36828, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([10, 9126806, 25],"float32"), Tensor([10, 9126806, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([15489, 36828, 4],"float32"), Tensor([1, 36828, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([27, 25, 3380299],"float32"), Tensor([27, 25, 3380299],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([233, 38367, 256],"float32"), Tensor([233, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 61956],"float32"), Tensor([1, 36828, 61956],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([11641334, 4, 7, 7],"float32"), Tensor([11641334, 4, 7, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([71303169, 32],"float32"), Tensor([71303169, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([1, 8550, 266866],"float32"), Tensor([1, 8550, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([340, 268436, 25],"float32"), Tensor([340, 268436, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 61956],"float32"), Tensor([1, 36828, 61956],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([243, 36828, 256],"float32"), Tensor([243, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([27, 3380299, 25],"float32"), Tensor([27, 3380299, 25],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([10, 25, 9126806],"float32"), Tensor([10, 25, 9126806],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([10186167, 7, 32],"float32"), Tensor([10186167, 7, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([1, 8550, 266866],"float32"), Tensor([1, 8550, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 59471],"float32"), Tensor([1, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 8550, 256],"float32"), Tensor([1, 8550, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([85, 1073742, 25],"float32"), Tensor([85, 1073742, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([52, 7, 6268411],"float32"), Tensor([52, 7, 6268411],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([10, 25, 9126806],"float32"), Tensor([10, 25, 9126806],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 59471],"float32"), Tensor([1, 38367, 59471],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([52, 43878873],"float32"), Tensor([52, 43878873],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 7, 25073642],"float32"), Tensor([13, 7, 25073642],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([66717, 8550, 4],"float32"), Tensor([1, 8550, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([10, 9126806, 25],"float32"), Tensor([10, 9126806, 25],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([13, 175515491],"float32"), Tensor([13, 175515491],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 4, 7, 1567103],"float32"), Tensor([52, 4, 7, 1567103],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([27, 3380299, 25],"float32"), Tensor([27, 3380299, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([1398, 6380, 256],"float32"), Tensor([1, 6380, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([13, 5484860, 32],"float32"), Tensor([13, 5484860, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([85, 25, 1073742],"float32"), Tensor([85, 25, 1073742],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([27, 25, 3380299],"float32"), Tensor([27, 25, 3380299],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1043, 8550, 256],"float32"), Tensor([1, 8550, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([340, 25, 268436],"float32"), Tensor([340, 25, 268436],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([13, 4, 7, 6268411],"float32"), Tensor([13, 4, 7, 6268411],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 256],"float32"), Tensor([1, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([233, 38367, 256],"float32"), Tensor([1, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([3650723, 25, 25],"float32"), Tensor([3650723, 25, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([3650723, 25, 25],"float32"), Tensor([3650723, 25, 25],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([89409, 6380, 4],"float32"), Tensor([1, 6380, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 61956],"float32"), Tensor([1, 36828, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 59471],"float32"), Tensor([1, 38367, 59471],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([52, 1371215, 32],"float32"), Tensor([52, 1371215, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([1, 8550, 266866],"float32"), Tensor([1, 8550, 266866],"bool"), 0.0, )
paddle.Tensor.masked_select(Tensor([2281701379],"int32"), Tensor([2281701379],"bool"), )
paddle.Tensor.masked_select(Tensor([3750, 608454],"float32"), Tensor([3750, 608454],"bool"), )
paddle.Tensor.masked_select(Tensor([45634028, 50],"float32"), Tensor([45634028, 50],"bool"), )
paddle.Tensor.masked_select(Tensor([15000, 152114],"float32"), Tensor([15000, 152114],"bool"), )
paddle.Tensor.masked_select(Tensor([2281701379],"float32"), Tensor([2281701379],"bool"), )
paddle.Tensor.masked_select(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"bool"), )
paddle.Tensor.masked_select(Tensor([15000, 50],"float32"), Tensor([15000, 50],"bool"), )
paddle.Tensor.masked_select(Tensor([60000, 38029],"float32"), Tensor([60000, 38029],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"bool"), )
paddle.Tensor.masked_select(Tensor([60000, 50],"float32"), Tensor([60000, 50],"bool"), )
paddle.Tensor.masked_select(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"bool"), )
paddle.Tensor.matmul(Tensor([128, 12, 64587, 23],"float32"), Tensor([128, 12, 23, 32],"float32"), )
paddle.Tensor.matmul(Tensor([42949673, 100, 1],"float16"), Tensor([42949673, 1, 4],"float16"), )
paddle.Tensor.matmul(Tensor([128, 8, 40, 40],"float32"), Tensor([128, 8, 40, 15],"float32"), )
paddle.Tensor.matmul(Tensor([10737419, 100, 4],"float16"), Tensor([1, 4, 4],"float16"), )
paddle.Tensor.matmul(Tensor([128, 12, 197, 64],"float16"), Tensor([128, 12, 64, 43691],"float16"), )
paddle.Tensor.matmul(Tensor([36890, 3, 197, 197],"float16"), Tensor([36890, 3, 197, 64],"float16"), )
paddle.Tensor.matmul(Tensor([124, 16, 257, 64],"float32"), Tensor([124, 16, 64, 17970],"float32"), )
paddle.Tensor.matmul(Tensor([3579140, 100, 12],"float16"), Tensor([1, 12, 12],"float16"), )
paddle.Tensor.matmul(Tensor([128, 3, 197, 197],"float16"), Tensor([128, 3, 197, 56776],"float16"), )
paddle.Tensor.matmul(Tensor([128, 12, 23, 40],"float16"), Tensor([128, 12, 40, 69906],"float16"), )
paddle.Tensor.matmul(Tensor([512, 8, 50, 50],"float32"), Tensor([512, 8, 50, 32],"float32"), )
paddle.Tensor.matmul(Tensor([10737419, 100, 4],"float16"), Tensor([10737419, 4, 4],"float16"), )
paddle.Tensor.matmul(Tensor([1, 100, 42949673],"float16"), Tensor([1, 42949673, 4],"float16"), )
paddle.Tensor.matmul(Tensor([64, 12, 197, 64],"float32"), Tensor([64, 12, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([1166, 21504, 1, 91],"float32"), Tensor([91],"float32"), )
paddle.Tensor.matmul(Tensor([3579140, 100, 12],"float16"), Tensor([1, 12, 40],"float16"), )
paddle.Tensor.matmul(Tensor([4, 8, 640, 640],"float32"), Tensor([4, 8, 640, 32],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 46422, 32],"float32"), Tensor([128, 12, 32, 23],"float32"), )
paddle.Tensor.matmul(Tensor([1, 357913942, 12],"float16"), Tensor([1, 12, 40],"float16"), )
paddle.Tensor.matmul(Tensor([512, 4, 100, 32],"float32"), Tensor([512, 4, 32, 100],"float32"), )
paddle.Tensor.matmul(Tensor([1, 21504, 1, 106106],"float32"), Tensor([106106],"float32"), )
paddle.Tensor.matmul(Tensor([4, 12, 785, 64],"float32"), Tensor([4, 12, 64, 785],"float32"), )
paddle.Tensor.matmul(Tensor([279621, 12, 23, 32],"float16"), Tensor([279621, 12, 32, 40],"float16"), )
paddle.Tensor.matmul(Tensor([32, 12, 197, 64],"float32"), Tensor([32, 12, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([128, 460, 197, 197],"float32"), Tensor([128, 460, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([21474837, 100, 2],"float16"), Tensor([21474837, 2, 4],"float16"), )
paddle.Tensor.matmul(Tensor([112, 525, 197, 197],"float32"), Tensor([112, 525, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 197, 197],"float16"), Tensor([128, 12, 197, 14194],"float16"), )
paddle.Tensor.matmul(Tensor([128, 45591, 23, 32],"float16"), Tensor([128, 45591, 32, 23],"float16"), )
paddle.Tensor.matmul(Tensor([96, 12, 22, 32],"float32"), Tensor([96, 12, 32, 22],"float32"), )
paddle.Tensor.matmul(Tensor([112, 1616, 197, 64],"float32"), Tensor([112, 1616, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([124, 16, 257, 257],"float32"), Tensor([124, 16, 257, 4475],"float32"), )
paddle.Tensor.matmul(Tensor([60, 12, 197, 197],"float32"), Tensor([60, 12, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 197, 197],"float32"), Tensor([128, 12, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 23211, 64],"float32"), Tensor([128, 12, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([8, 12, 785, 785],"float32"), Tensor([8, 12, 785, 64],"float32"), )
paddle.Tensor.matmul(Tensor([1, 21504, 1, 91],"float32"), Tensor([91],"float32"), )
paddle.Tensor.matmul(Tensor([16, 16, 257, 257],"float32"), Tensor([16, 16, 257, 64],"float32"), )
paddle.Tensor.matmul(Tensor([96, 12, 22, 40],"float32"), Tensor([96, 12, 40, 32],"float32"), )
paddle.Tensor.matmul(Tensor([512, 2, 200, 200],"float32"), Tensor([512, 2, 200, 32],"float32"), )
paddle.Tensor.matmul(Tensor([96, 12, 22, 22],"float32"), Tensor([96, 12, 22, 32],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 14194, 197],"float16"), Tensor([128, 12, 197, 64],"float16"), )
paddle.Tensor.matmul(Tensor([64, 12, 197, 197],"float32"), Tensor([64, 12, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([15082, 12, 197, 64],"float32"), Tensor([15082, 12, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 46422, 32],"float32"), Tensor([128, 12, 32, 40],"float32"), )
paddle.Tensor.matmul(Tensor([96, 12, 22, 32],"float32"), Tensor([96, 12, 32, 40],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 87382, 32],"float16"), Tensor([128, 12, 32, 40],"float16"), )
paddle.Tensor.matmul(Tensor([128, 3, 56776, 197],"float16"), Tensor([128, 3, 197, 64],"float16"), )
paddle.Tensor.matmul(Tensor([21474837, 100, 2],"float16"), Tensor([21474837, 2, 2],"float16"), )
paddle.Tensor.matmul(Tensor([1, 715827883, 6],"float16"), Tensor([1, 6, 40],"float16"), )
paddle.Tensor.matmul(Tensor([128, 12, 87382, 32],"float16"), Tensor([128, 12, 32, 23],"float16"), )
paddle.Tensor.matmul(Tensor([128, 3, 174763, 64],"float16"), Tensor([128, 3, 64, 197],"float16"), )
paddle.Tensor.matmul(Tensor([128, 12, 23, 32],"float16"), Tensor([128, 12, 32, 87382],"float16"), )
paddle.Tensor.matmul(Tensor([112, 12, 197, 64],"float32"), Tensor([112, 12, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([124, 16, 17970, 64],"float32"), Tensor([124, 16, 64, 257],"float32"), )
paddle.Tensor.matmul(Tensor([171798692, 25],"float16"), Tensor([25, 5],"float16"), )
paddle.Tensor.matmul(Tensor([512, 8, 50, 32],"float32"), Tensor([512, 8, 32, 50],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 197, 14194],"float16"), Tensor([128, 12, 14194, 197],"float16"), )
paddle.Tensor.matmul(Tensor([1, 10],"float16"), Tensor([10, 429496730],"float16"), )
paddle.Tensor.matmul(Tensor([7158279, 100, 6],"float16"), Tensor([7158279, 6, 40],"float16"), )
paddle.Tensor.matmul(Tensor([1, 25],"float16"), Tensor([25, 171798692],"float16"), )
paddle.Tensor.matmul(Tensor([128, 12, 23, 23],"float32"), Tensor([128, 12, 23, 32],"float32"), )
paddle.Tensor.matmul(Tensor([124, 16, 257, 4475],"float32"), Tensor([124, 16, 4475, 257],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 23, 121575],"float16"), Tensor([128, 12, 121575, 23],"float16"), )
paddle.Tensor.matmul(Tensor([112, 12, 197, 197],"float16"), Tensor([112, 12, 197, 16222],"float16"), )
paddle.Tensor.matmul(Tensor([1, 858993460],"float16"), Tensor([858993460, 5],"float16"), )
paddle.Tensor.matmul(Tensor([128, 12, 23, 87382],"float16"), Tensor([128, 12, 87382, 32],"float16"), )
paddle.Tensor.matmul(Tensor([4900, 12, 197, 197],"float32"), Tensor([4900, 12, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([359437, 12, 23, 23],"float32"), Tensor([359437, 12, 23, 32],"float32"), )
paddle.Tensor.matmul(Tensor([112, 12, 197, 197],"float32"), Tensor([112, 12, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([16, 16, 257, 64],"float32"), Tensor([16, 16, 64, 257],"float32"), )
paddle.Tensor.matmul(Tensor([171798692, 25],"float16"), Tensor([25, 1],"float16"), )
paddle.Tensor.matmul(Tensor([512, 2, 200, 32],"float32"), Tensor([512, 2, 32, 200],"float32"), )
paddle.Tensor.matmul(Tensor([112, 12, 26527, 64],"float32"), Tensor([112, 12, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([128, 13927, 23, 32],"float32"), Tensor([128, 13927, 32, 40],"float32"), )
paddle.Tensor.matmul(Tensor([7158279, 100, 6],"float16"), Tensor([1, 6, 6],"float16"), )
paddle.Tensor.matmul(Tensor([32, 12, 197, 197],"float32"), Tensor([32, 12, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 23, 64587],"float32"), Tensor([128, 12, 64587, 40],"float32"), )
paddle.Tensor.matmul(Tensor([429496730, 10],"float16"), Tensor([10, 1],"float16"), )
paddle.Tensor.matmul(Tensor([1, 100, 42949673],"float16"), Tensor([1, 42949673, 40],"float16"), )
paddle.Tensor.matmul(Tensor([128, 3, 197, 64],"float32"), Tensor([128, 3, 64, 197],"float32"), )
paddle.Tensor.matmul(Tensor([128, 3, 197, 56776],"float16"), Tensor([128, 3, 56776, 197],"float16"), )
paddle.Tensor.matmul(Tensor([128, 3, 197, 197],"float32"), Tensor([128, 3, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([128, 12, 23, 64587],"float32"), Tensor([128, 12, 64587, 23],"float32"), )
paddle.Tensor.matmul(Tensor([4, 12, 320, 320],"float32"), Tensor([4, 12, 320, 32],"float32"), )
paddle.Tensor.matmul(Tensor([1, 715827883, 6],"float16"), Tensor([1, 6, 6],"float16"), )
paddle.Tensor.matmul(Tensor([112, 12, 16222, 197],"float16"), Tensor([112, 12, 197, 64],"float16"), )
paddle.Tensor.matmul(Tensor([128, 12, 197, 64],"float32"), Tensor([128, 12, 64, 23211],"float32"), )
paddle.Tensor.matmul(Tensor([1, 25073642, 1, 91],"float32"), Tensor([91],"float32"), )
paddle.Tensor.matmul(Tensor([124, 16, 257, 64],"float32"), Tensor([124, 16, 64, 257],"float32"), )
paddle.Tensor.matmul(Tensor([3579140, 100, 12],"float16"), Tensor([3579140, 12, 40],"float16"), )
paddle.Tensor.matmul(Tensor([128, 12, 197, 7541],"float32"), Tensor([128, 12, 7541, 197],"float32"), )
paddle.Tensor.matmul(Tensor([64, 8, 40, 40],"float32"), Tensor([64, 8, 40, 15],"float32"), )
paddle.Tensor.matmul(Tensor([128, 24220, 23, 32],"float32"), Tensor([128, 24220, 32, 23],"float32"), )
paddle.Tensor.matmul(Tensor([128, 24220, 23, 23],"float32"), Tensor([128, 24220, 23, 32],"float32"), )
paddle.Tensor.matmul(Tensor([279621, 12, 23, 40],"float16"), Tensor([279621, 12, 40, 32],"float16"), )
paddle.Tensor.matmul(Tensor([3579140, 100, 12],"float16"), Tensor([3579140, 12, 12],"float16"), )
paddle.Tensor.matmul(Tensor([112, 12, 197, 16222],"float16"), Tensor([112, 12, 16222, 197],"float16"), )
paddle.Tensor.matmul(Tensor([128, 12, 197, 197],"float32"), Tensor([128, 12, 197, 7541],"float32"), )
paddle.Tensor.matmul(Tensor([128, 8, 40, 15],"float32"), Tensor([128, 8, 15, 40],"float32"), )
paddle.Tensor.max(Tensor([9, 313038],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 97, 7581],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 50, 33600],"float32"), -2, )
paddle.Tensor.max(Tensor([9, 261888],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 62, 21504],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([15, 262428],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 89, 7581],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 113, 11109],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 58, 52500],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 59, 52500],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 160, 10164],"float32"), -2, )
paddle.Tensor.max(Tensor([83837, 27216],"float32"), )
paddle.Tensor.max(Tensor([19, 227124],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 65, 24276],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 253728],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 227, 5376],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 43, 12096],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 111, 10164],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 350178],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([19, 367059],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([27, 313038],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 97, 12096],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 46, 75600],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 83, 12096],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([20, 343728],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([5, 313038],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([14, 78750],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 122, 75600],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 71, 33600],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 49, 11109],"float32"), -2, )
paddle.Tensor.max(Tensor([13, 58505164, 3],"float32"), 1, )
paddle.Tensor.max(Tensor([1, 63, 52500],"float32"), -2, )
paddle.Tensor.max(Tensor([2, 155, 7581],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([16, 20, 4116],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([13, 268569],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([18, 63000],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([6, 340176],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 45, 30324],"float32"), -2, )
paddle.Tensor.max(Tensor([17, 245823],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([20, 279300],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([16, 28, 10164],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([8, 21, 11109],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([8, 31, 6804],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([21, 80640],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([17, 365211],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([16, 268569],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 22, 56784],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 73, 4725],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([8, 313038],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([3, 369303],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 50, 12096],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 75, 9261],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 40, 75600],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([12, 4, 19, 34, 73585],"float32"), 1, )
paddle.Tensor.max(Tensor([9, 249405],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([33, 230202],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([18, 283905],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 49, 37044],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([15, 82080],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([31, 301302],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([11, 359613],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 62, 61236],"float32"), -2, )
paddle.Tensor.max(Tensor([243360, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([25, 408177],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([4, 211, 2541],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([16, 27, 7581],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([1, 18, 75600],"float32"), -2, )
paddle.Tensor.max(Tensor([8, 21, 10164],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([10, 194157],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 30, 44436],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([56448, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 116, 40656],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 17, 75600],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 57, 30324],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 45, 40656],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([38912, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([170240, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([8, 278256],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 78, 56784],"float32"), -2, )
paddle.Tensor.max(Tensor([19, 242991],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 64, 9261],"float32"), -2, )
paddle.Tensor.max(Tensor([16, 320739],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([10, 253728],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([31, 63000],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([43776, 80],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 29, 48384],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 28, 37044],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 105, 75600],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 93, 37044],"float32"), -2, )
paddle.Tensor.max(Tensor([12, 294338, 19, 34],"int64"), 1, )
paddle.Tensor.max(Tensor([2, 57, 12096],"float32"), -2, )
paddle.Tensor.max(Tensor([10, 388032],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 26, 40656],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 48, 56784],"float32"), -2, )
paddle.Tensor.max(Tensor([7, 295647],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([1, 79, 24276],"float32"), -2, )
paddle.Tensor.max(Tensor([4, 47, 10164],"float32"), axis=-2, )
paddle.Tensor.max(Tensor([28, 295647],"float32"), axis=1, keepdim=True, )
paddle.Tensor.max(Tensor([2, 116, 7581],"float32"), -2, )
paddle.Tensor.max(Tensor([1, 86, 56784],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([80, 576, 192],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 768, 46, 46],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([13, 5484860, 32],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([16, 64, 128, 128],"float32"), )
paddle.Tensor.mean(Tensor([101, 22591103],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 768, 14, 14],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([36, 63380594],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([16, 192, 84, 84],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([17895698, 2, 3, 4, 10],"float16"), )
paddle.Tensor.mean(Tensor([8, 192, 22, 127101],"float16"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 185686, 8],"float32"), -1, )
paddle.Tensor.mean(Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.mean(Tensor([912681, 1, 50, 50],"float32"), )
paddle.Tensor.mean(Tensor([2, 384, 44, 44],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 96, 160, 160],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([128, 96, 56, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([8, 48, 80, 80],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 48, 192, 192],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([16, 1536, 7, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([16, 384, 28, 28],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([10000, 2, 114086],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([300, 7605672],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 192, 92, 92],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([80, 28521268],"float32"), 0, )
paddle.Tensor.mean(Tensor([349526, 192, 8, 8],"float16"), -1, )
paddle.Tensor.mean(Tensor([4, 16777217, 8, 8],"float16"), -2, )
paddle.Tensor.mean(Tensor([3, 2, 3, 10, 10, 12, 198842],"float16"), )
paddle.Tensor.mean(Tensor([1, 768, 58, 58],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([21053762, 3, 4, 17],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 536871, 100, 40],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([64, 192, 28, 28],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 96, 184, 184],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([512, 256, 17409],"float32"), -1, )
paddle.Tensor.mean(Tensor([1, 71303169, 32],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 120, 88, 88],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 96, 152, 152],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([100, 22817014],"float32"), )
paddle.Tensor.mean(Tensor([4, 480, 44, 44],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([16, 96, 168, 168],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([858993460, 5],"float16"), axis=-1, )
paddle.Tensor.mean(Tensor([8, 192, 46, 46],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([16, 349526, 768],"float16"), 1, )
paddle.Tensor.mean(Tensor([1, 192, 160, 74275],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 768, 50, 50],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 768, 21, 21],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([100, 42949673],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 11883862, 192],"float32"), )
paddle.Tensor.mean(Tensor([1058304, 196, 11],"float32"), 1, )
paddle.Tensor.mean(Tensor([1024, 1024, 8],"float32"), )
paddle.Tensor.mean(Tensor([8, 384, 20, 20],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([22, 103713700],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([63380594, 1, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2281701379],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([50000, 2, 42950],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([124, 23471, 28, 28],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([16, 96, 112, 112],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 96, 84, 84],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 384, 349526, 8],"float16"), -1, )
paddle.Tensor.mean(Tensor([2, 1, 512, 4, 557057],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([8, 72, 112, 112],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1000000, 4],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([1, 1024, 2228225],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1073742, 40, 100],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([128, 384, 14, 6242],"float16"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 384, 92, 92],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 256, 84, 128],"float32"), )
paddle.Tensor.mean(Tensor([16, 192, 76, 76],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([15474, 1024, 12, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([4, 480, 40, 40],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 256, 16, 139265],"float32"), -1, )
paddle.Tensor.mean(Tensor([1, 15, 64, 2376773],"float32"), )
paddle.Tensor.mean(Tensor([16, 256, 16, 16],"float32"), )
paddle.Tensor.mean(Tensor([1, 10, 228170138],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([8, 48, 96, 96],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 96, 52, 52],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 71303169, 32],"float32"), )
paddle.Tensor.mean(Tensor([8, 96, 68, 68],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([8, 96, 184, 184],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([21474837, 10, 20],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([4, 570425345],"float32"), 1, )
paddle.Tensor.mean(Tensor([4, 256, 32, 32],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([4294967297, 1],"float16"), )
paddle.Tensor.mean(Tensor([357914, 3, 100, 40],"float16"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([4, 4194305, 16, 16],"float16"), -1, )
paddle.Tensor.mean(Tensor([162978670, 14],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 256, 495161, 18],"float32"), )
paddle.Tensor.mean(Tensor([8, 192, 26, 26],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 960, 24, 24],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 768, 54, 54],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 176, 67522],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.mean(Tensor([22, 1500, 14, 14],"float32"), )
paddle.Tensor.mean(Tensor([5000, 858994],"float16"), axis=0, )
paddle.Tensor.mean(Tensor([384, 192, 176, 176],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([2, 192, 84, 84],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 384, 72, 72],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([16, 512, 32, 32],"float32"), )
paddle.Tensor.mean(Tensor([4, 9216, 96],"float32"), )
paddle.Tensor.mean(Tensor([4, 120, 128, 128],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([4, 120, 120, 120],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.min(Tensor([2, 59, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([64, 39, 2125, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 19, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 19, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 60, 65856, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16, 9, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 31, 7581, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 31, 52500, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 45, 27216, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 71, 56784, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4, 19, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 88, 10164, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 21, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 48, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 38, 65856, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([64, 24, 1360, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 69, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 31, 12096, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 33, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16, 17, 2541, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 10, 7581, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 33, 27216, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 50, 11109, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 22, 61236, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 11, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 25, 6804, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 18, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16, 7, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 60, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 113, 11109, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 13, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 19, 44436, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16, 16, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16, 27, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 30, 6150, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 108, 7581, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([10105, 37634, 6],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 62, 75600, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([24565, 4, 12],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 78, 24276, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([10105, 12545, 18],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 32, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 31, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([12240, 4, 27],"float32"), axis=1, )
paddle.Tensor.min(Tensor([27540, 4, 37],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 57, 11109, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 18, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4, 28, 4116, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 52, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 32, 12096, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([4, 51, 5376, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 32, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 209, 33600, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([14031, 1, 40656, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 54, 75600, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 74, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16, 36, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 24276, 93991],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 168, 10164, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16660, 4, 49],"float32"), axis=1, )
paddle.Tensor.min(Tensor([1, 23, 30324, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([24565, 4, 67],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 33, 8400, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 36, 12096, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 72, 7581, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([10285, 4, 25],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 16, 8400, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 1, 52500, 43461],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 17, 27216, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 66, 8400, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 85, 8400, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 41, 7581, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 68, 11109, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16, 36, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([27540, 4, 420],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 32, 6804, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 68, 4725, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 82, 3549, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16, 8, 6804, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 12, 44436, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 53, 11109, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 63, 2100, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 6, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 82, 7581, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16, 38, 6804, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 150, 27216, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 23, 21504, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([16, 29, 6069, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([10285, 4, 45],"float32"), axis=1, )
paddle.Tensor.min(Tensor([8, 12, 9261, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 8, 44436, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 18, 21504, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 11, 11109, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 29, 44436, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([2, 37, 10164, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([1, 105, 61236, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([8, 7, 8400, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([64, 38, 2577, 4],"float32"), axis=-1, )
paddle.Tensor.min(Tensor([12240, 4, 22],"float32"), axis=1, )
paddle.Tensor.min(Tensor([2, 140, 8400, 4],"float32"), axis=-1, )
paddle.Tensor.mm(Tensor([228170138, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.Tensor.mm(Tensor([10, 10],"float32"), Tensor([10, 228170138],"float32"), )
paddle.Tensor.mode(Tensor([3, 2, 715827883],"float16"), )
paddle.Tensor.mode(Tensor([3, 2, 715827883],"float16"), axis=2, keepdim=True, )
paddle.Tensor.mode(Tensor([3, 477218589, 3],"float16"), axis=1, keepdim=False, )
paddle.Tensor.moveaxis(x=Tensor([4, 570425345],"float32"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([1140850690, 2],"float32"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 178956971],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 71582789, 3, 5],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(Tensor([2, 3, 715827883],"float16"), -2, -1, )
paddle.Tensor.moveaxis(x=Tensor([1140850690, 2],"int64"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([1140850690, 2],"int32"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 357913942, 3],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 5, 35791395],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([715827883, 2, 3],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 107374183, 5],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 25565282, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([4, 10226113, 3, 5, 7],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 15339169, 5, 7],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([2147483649, 2],"float16"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 5, 35791395],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([20452226, 2, 3, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(Tensor([286331154, 3, 5],"float16"), -2, -1, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 3, 25565282, 7],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(Tensor([2, 429496730, 5],"float16"), -2, -1, )
paddle.Tensor.moveaxis(x=Tensor([4, 10226113, 3, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.moveaxis(x=Tensor([20452226, 2, 3, 5, 7],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 570425345],"int32"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 570425345],"int64"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 536870913],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([143165577, 2, 3, 5],"float16"), source=0, destination=2, )
paddle.Tensor.moveaxis(x=Tensor([4, 1073741825],"float16"), source=0, destination=1, )
paddle.Tensor.moveaxis(x=Tensor([4, 2, 15339169, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.Tensor.multiply(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.multiply(Tensor([16, 142606337],"float32"), Tensor([16, 142606337],"float32"), )
paddle.Tensor.multiply(Tensor([160, 14260634],"float32"), Tensor([160, 1],"float32"), )
paddle.Tensor.multiply(Tensor([742742, 3072],"float32"), Tensor([742742, 1],"float32"), )
paddle.Tensor.multiply(Tensor([512, 4456449],"float32"), Tensor([512, 1],"float32"), )
paddle.Tensor.multiply(Tensor([160, 14260634],"float32"), Tensor([160, 14260634],"float32"), )
paddle.Tensor.multiply(Tensor([16, 142606337],"float32"), Tensor([16, 1],"float32"), )
paddle.Tensor.multiply(Tensor([2970966, 768],"float32"), Tensor([2970966, 1],"float32"), )
paddle.Tensor.multiply(Tensor([512, 4456449],"float32"), Tensor([512, 4456449],"float32"), )
paddle.Tensor.nansum(Tensor([3, 253522376, 3],"float32"), )
paddle.Tensor.nansum(Tensor([253522376, 3, 3],"float32"), )
paddle.Tensor.nansum(Tensor([3, 3, 253522376],"float32"), )
paddle.Tensor.neg(Tensor([2281701379],"float32"), )
paddle.Tensor.nonzero(Tensor([2281701379],"bool"), )
paddle.Tensor.nonzero(Tensor([760567127, 3],"bool"), )
paddle.Tensor.nonzero(Tensor([285212673, 8],"bool"), )
paddle.Tensor.nonzero(Tensor([175515491, 13],"bool"), )
paddle.Tensor.nonzero(Tensor([228170138, 10],"bool"), )
paddle.Tensor.nonzero(Tensor([207427399, 11],"bool"), )
paddle.Tensor.nonzero(Tensor([52640, 43346],"bool"), )
paddle.Tensor.nonzero(Tensor([1140850690, 2],"bool"), )
paddle.Tensor.nonzero(Tensor([190141782, 12],"bool"), )
paddle.Tensor.nonzero(Tensor([380283564, 6],"bool"), )
paddle.Tensor.nonzero(Tensor([253522376, 9],"bool"), )
paddle.Tensor.nonzero(Tensor([456340276, 5],"bool"), )
paddle.Tensor.nonzero(Tensor([325957340, 7],"bool"), )
paddle.Tensor.nonzero(Tensor([2281701379, 1],"bool"), )
paddle.Tensor.nonzero(Tensor([162978670, 14],"bool"), )
paddle.Tensor.nonzero(Tensor([570425345, 4],"bool"), )
paddle.Tensor.norm(Tensor([208, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([168, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([121600, 9382, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([110924, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([896, 3060, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([360, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([2816, 2577, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([88, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1472, 3060, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([232, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([102697, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([216, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 3549, 5741],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([185505, 6150, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([152, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([184, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([832, 2577, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([96, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([272, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([104, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([136, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8192, 57344],"float32"), )
paddle.Tensor.norm(Tensor([304, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([96, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([3584, 7168],"float32"), )
paddle.Tensor.norm(Tensor([2496, 2577, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([400, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 12096, 1685],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([256, 8912897],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([112, 10164, 2005],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([272, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([92, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([96, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([56, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([256, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([368, 6804, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([560, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([208, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([160, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([272, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1792, 3060, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([224, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([48, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([176, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([264, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([432, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([684, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1, 38402, 59417],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([312, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([2240, 3060, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([184, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([216, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([325957340, 7],"float32"), p=2, axis=1, keepdim=True, )
paddle.Tensor.norm(Tensor([8192, 7168],"float32"), )
paddle.Tensor.norm(Tensor([144, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([64, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([136, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1344, 1726, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([123189, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([448, 3549, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([128, 9261, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([112, 6069, 3357],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([72, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([496, 5376, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1576, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([360, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([296, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([296, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([160, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([240, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([540, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([2, 1140850690],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([432, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([216, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([432, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1088, 3060, 686],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([128, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([452, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([448, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1856, 2125, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([3584, 8192],"float32"), )
paddle.Tensor.norm(Tensor([1536, 1360, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([368, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([29709, 38402, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1860, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([384, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([692, 7581, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([936, 12096, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([8192, 10240],"float32"), )
paddle.Tensor.norm(Tensor([296, 8400, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([360, 6069, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([152, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([448978, 2541, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([200, 3024, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([192, 4725, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([2240, 2125, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([1280, 2577, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([256, 11109, 2],"float32"), 2, axis=-1, )
paddle.Tensor.norm(Tensor([7168, 12800],"float32"), )
paddle.Tensor.norm(Tensor([152, 4116, 2],"float32"), 2, axis=-1, )
paddle.Tensor.not_equal(Tensor([17825793, 128],"int64"), Tensor([17825793, 128],"int64"), )
paddle.Tensor.not_equal(Tensor([162978670, 14],"bool"), Tensor([1],"bool"), )
paddle.Tensor.not_equal(Tensor([325957340, 7],"int64"), Tensor([1],"int64"), )
paddle.Tensor.not_equal(Tensor([325957340, 7],"int32"), Tensor([1],"int32"), )
paddle.Tensor.not_equal(Tensor([162978670, 14],"int64"), Tensor([1],"int64"), )
paddle.Tensor.not_equal(Tensor([12, 190141782],"int64"), Tensor([1],"int64"), )
paddle.Tensor.not_equal(Tensor([13, 175515491],"bool"), Tensor([1],"bool"), )
paddle.Tensor.not_equal(Tensor([760567127, 3],"int64"), Tensor([1],"int64"), )
paddle.Tensor.not_equal(Tensor([12, 190141782],"int32"), Tensor([1],"int32"), )
paddle.Tensor.not_equal(Tensor([228170138, 10],"int64"), Tensor([1],"int64"), )
paddle.Tensor.not_equal(Tensor([128, 17825793],"int64"), Tensor([128, 17825793],"int64"), )
paddle.Tensor.not_equal(Tensor([13, 175515491],"int64"), Tensor([1],"int64"), )
paddle.Tensor.pow(Tensor([22100, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([33980, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([33396, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([20150, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([23016, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([18285, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([19416, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([14275, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([24888, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([33860, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([15288, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([198912, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([29342, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([15255, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([35400, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([17260, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([41124, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([35523, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([21670, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([20258, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([15150, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 92, 11109],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([19224, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([30464, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([20520, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 38, 65856],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([18360, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([13440, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([17045, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([54816, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([14427, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([16240, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([20785, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 461, 3549],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([13350, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([35002, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([23025, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([14462, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([21200, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([33878, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([25576, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([30030, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([32770, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([16003, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([13343, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([39222, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([24031, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([22016, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([27864, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([16569, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([18792, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([14155, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([98644, 11],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1935, 128, 96, 96],"float32"), 2, )
paddle.Tensor.pow(Tensor([35148, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([13446, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([36300, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([1, 56, 37044],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([24985, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([27762, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([35940, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([19120, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([18665, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([31863, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 56, 11109],"float32"), 1.0, )
paddle.Tensor.pow(Tensor([30506, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([26061, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([16645, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([35544, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 117, 6069],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([25448, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([27280, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([29394, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([24696, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([16031, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([26720, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([27252, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 52, 11109],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([15113, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([43245, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 139, 12096],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([8, 10164, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([19175, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([28984, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([42427, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([2, 80, 8400],"float32"), 6.0, )
paddle.Tensor.pow(Tensor([20817, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([21063, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([28496, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([19530, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([36387, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([21456, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([27870, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([15095, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([16296, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([17012, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([23030, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([17646, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([23316, 80],"float32"), 2.0, )
paddle.Tensor.pow(Tensor([19125, 80],"float32"), 2.0, )
paddle.Tensor.prod(Tensor([2, 62, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 293397, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([17, 242991, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([16, 365211, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([17, 299250, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([7, 200022, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 85, 11109, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 279300, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([14, 54270, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([9, 205923, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 105, 75600, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 37, 2100, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([36, 331452, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([384, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([9, 230202, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([22, 356541, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([45, 331452, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([3, 301302, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([35, 272118, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([240, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([14, 62700, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 46, 61236, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([544, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 60, 56784, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 42, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([9, 290052, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 73365, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([512, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([104, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 397467, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([28, 60480, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 45, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([18631, 1, 61236, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 30, 9261, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([16, 34, 3549, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([16, 15, 11109, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 398487, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([11, 303858, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1536, 3060, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([64, 35, 1726, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 89, 4116, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([10, 236616, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([15, 321759, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([184, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 54, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([12, 302832, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([192, 10164, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([14, 325113, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([3, 268560, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 10, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([304, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 44, 30324, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([7, 349866, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([6, 317160, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([8, 21, 9261, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 279300, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([448, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([15, 234804, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([25, 375984, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([19, 320739, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 10, 70644, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([320, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 22, 30324, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 53, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([4, 346086, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([5, 184140, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([5, 229965, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([3, 237360, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([3, 248616, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([4, 270096, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([484, 7581, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([1, 25, 40656, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 78660, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([11, 234804, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([15, 56250, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 26, 44436, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([64, 34, 2577, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 14, 6069, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([2, 73, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([6, 262428, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([2, 35, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([3, 185691, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([18, 63000, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([16, 220968, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([20, 313347, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([16, 31, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 309255, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([1, 28, 30324, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([3, 168795, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([784, 11109, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([14, 356541, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([16, 27, 12096, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([5, 261888, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([16, 202572, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([208, 5376, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([8, 28, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([29, 230202, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([11, 83220, 2],"float32"), axis=2, )
paddle.Tensor.prod(Tensor([16, 22, 8400, 2],"float32"), -1, )
paddle.Tensor.prod(Tensor([64, 40, 1360, 2],"float32"), -1, )
paddle.Tensor.rad2deg(x=Tensor([4, 268435457, 4],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([2281701379],"int64"), )
paddle.Tensor.rad2deg(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([268435457, 4, 4],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([4, 4, 268435457],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([67108865, 4, 4, 4],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([4294967297],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([2281701379],"float32"), )
paddle.Tensor.rad2deg(x=Tensor([2281701379],"int32"), )
paddle.Tensor.rad2deg(x=Tensor([4, 4, 4, 67108865],"float16"), )
paddle.Tensor.rad2deg(x=Tensor([4, 4, 67108865, 4],"float16"), )
paddle.Tensor.real(Tensor([16, 513, 213],"complex64"), )
paddle.Tensor.real(Tensor([16, 257, 511],"complex64"), )
paddle.Tensor.real(Tensor([16, 1025, 107],"complex64"), )
paddle.Tensor.real(Tensor([8, 32, 481, 481],"complex64"), )
paddle.Tensor.reciprocal(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.reciprocal(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.reciprocal(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.reciprocal(Tensor([190141782, 12],"float32"), )
paddle.Tensor.reciprocal(Tensor([10, 228170138],"float32"), )
paddle.Tensor.reciprocal(Tensor([2281701379],"float32"), )
paddle.Tensor.reciprocal(Tensor([114085069, 20],"float32"), )
paddle.Tensor.remainder(Tensor([2, 285212673, 4],"float32"), Tensor([2, 285212673, 4],"float32"), )
paddle.Tensor.remainder(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 3, 4],"float32"), )
paddle.Tensor.remainder(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3, 380283564],"float32"), )
paddle.Tensor.repeat_interleave(Tensor([2, 380283564, 1, 3],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 35651585, 32],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 380283564, 3],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 3, 380283564],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([23767723, 3, 32],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([760567127, 1, 1, 3],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 71303169, 16],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([47535446, 3, 16],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 1, 1140850690],"float32"), 1, axis=0, )
paddle.Tensor.reshape(Tensor([839, 19, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1344, 11, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2935, 11, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4183, 30, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2597, 9, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1882, 12, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1, 16, 32, 28, 192],"float32"), list[1,16,32,28,192,], )
paddle.Tensor.reshape(Tensor([1766, 22, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1606, 10, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4, 256, 16384],"float16"), list[0,0,128,128,], )
paddle.Tensor.reshape(Tensor([2253, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 104, 152, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3581, 17, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2764, 16, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4624, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 1, 512, 512],"float16"), list[8,1,512,512,], )
paddle.Tensor.reshape(Tensor([232, 9261],"float32"), list[8,-1,9261,], )
paddle.Tensor.reshape(Tensor([976, 17, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2193, 29, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1261, 18, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1113, 13, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1762, 8, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1732, 8, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([64, 197, 2304],"float16"), tuple(-1,197,3,12,64,), )
paddle.Tensor.reshape(Tensor([2510, 21, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1556, 23, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2947, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2816, 8192],"bfloat16"), list[-1,8192,], )
paddle.Tensor.reshape(Tensor([90, 26, 26, 32],"float32"), list[-1,32,], )
paddle.Tensor.reshape(Tensor([2, 288, 11008],"float16"), tuple(2,-1,), )
paddle.Tensor.reshape(Tensor([696, 21, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 144, 168, 80],"float16"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([878, 18, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1414, 18, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2459, 21, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([55424, 8192],"bfloat16"), list[-1,8192,], )
paddle.Tensor.reshape(Tensor([3195, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2951, 9, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1280, 1726],"float32"), list[64,-1,1726,], )
paddle.Tensor.reshape(Tensor([3851, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3733, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2021, 15, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4553, 4, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3375, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([128, 197, 3, 64],"float16"), tuple(-1,197,192,), )
paddle.Tensor.reshape(Tensor([846, 28, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 156, 168, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1885, 7, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([11520, 8192],"bfloat16"), list[-1,8192,], )
paddle.Tensor.reshape(Tensor([1985, 10, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([64, 3060, 32],"float32"), list[-1,32,], )
paddle.Tensor.reshape(Tensor([14, 8, 14, 14, 768],"float16"), list[-1,196,768,], )
paddle.Tensor.reshape(Tensor([1969, 25, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1, 2, 8, 2, 7, 2, 7, 384],"float16"), list[1,16,14,14,-1,], )
paddle.Tensor.reshape(Tensor([734, 20, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1868, 20, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1, 16, 28, 36, 192],"float32"), list[1,16,28,36,192,], )
paddle.Tensor.reshape(Tensor([4146, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([683, 20, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4295, 3, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([8, 58, 76, 68],"float16"), list[-1,68,], )
paddle.Tensor.reshape(Tensor([30, 80, 8, 64],"float32"), list[30,80,512,], )
paddle.Tensor.reshape(Tensor([1024, 144, 768],"float32"), list[1024,144,3,8,32,], )
paddle.Tensor.reshape(Tensor([1332, 15, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([3384, 16, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([16, 14, 14, 1024],"float32"), list[16,-1,1024,], )
paddle.Tensor.reshape(Tensor([30, 161, 8, 32],"float32"), list[30,161,256,], )
paddle.Tensor.reshape(Tensor([112, 9261],"float32"), list[8,-1,9261,], )
paddle.Tensor.reshape(Tensor([1220, 25, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2477, 10, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([16, 6069, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([176, 6069],"float32"), list[8,-1,6069,], )
paddle.Tensor.reshape(Tensor([4163, 16, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([773, 28, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([64, 32, 144, 144],"float32"), list[64,1,32,144,144,], )
paddle.Tensor.reshape(Tensor([2370, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([128, 8, 8, 7, 7, 128],"float16"), list[-1,7,7,128,], )
paddle.Tensor.reshape(Tensor([1984, 1360],"float32"), list[64,-1,1360,], )
paddle.Tensor.reshape(Tensor([3455, 5, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([16, 784, 256],"float32"), list[16,28,28,256,], )
paddle.Tensor.reshape(Tensor([45184, 8192],"bfloat16"), list[-1,8192,], )
paddle.Tensor.reshape(Tensor([3147, 13, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([67072, 8192],"bfloat16"), list[-1,8192,], )
paddle.Tensor.reshape(Tensor([1080, 28, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([240, 49, 1152],"float32"), list[240,49,3,12,32,], )
paddle.Tensor.reshape(Tensor([1216, 2577],"float32"), list[64,-1,2577,], )
paddle.Tensor.reshape(Tensor([2560, 8, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([2631, 8, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([1088, 9261],"float32"), list[4,-1,9261,], )
paddle.Tensor.reshape(Tensor([1944, 15, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([60, 4, 4, 7, 7, 256],"float32"), list[-1,7,7,256,], )
paddle.Tensor.reshape(Tensor([44032, 8192],"bfloat16"), list[-1,8192,], )
paddle.Tensor.reshape(Tensor([2859, 9, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4, 158, 65024],"float16"), list[-1,65024,], )
paddle.Tensor.reshape(Tensor([2801, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([18688, 8192],"bfloat16"), list[-1,8192,], )
paddle.Tensor.reshape(Tensor([1620, 17, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([4774, 6, 80],"float32"), list[-1,80,], )
paddle.Tensor.reshape(Tensor([28, 12, 12, 1536],"float32"), list[-1,1,1,12,12,1536,], )
paddle.Tensor.reshape(Tensor([200, 5376],"float32"), list[8,-1,5376,], )
paddle.Tensor.rot90(x=Tensor([4, 4, 67108865, 4],"float16"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 67108865],"float16"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.rot90(x=Tensor([4, 570425345],"float32"), )
paddle.Tensor.rot90(x=Tensor([1073741825, 4],"float16"), k=4, )
paddle.Tensor.rot90(x=Tensor([4, 4, 67108865, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([570425345, 4],"int32"), )
paddle.Tensor.rot90(x=Tensor([4, 268435457, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 67108865],"float16"), )
paddle.Tensor.rot90(x=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 570425345],"int32"), )
paddle.Tensor.rot90(x=Tensor([67108865, 4, 4, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 4, 268435457],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 67108865, 4, 4],"float16"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([4, 67108865, 4, 4],"float16"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.rot90(x=Tensor([268435457, 4, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([1073741825, 4],"float16"), k=-1, )
paddle.Tensor.rot90(x=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 4, 67108865, 4],"float16"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.rot90(x=Tensor([4, 1073741825],"float16"), k=4, )
paddle.Tensor.rot90(x=Tensor([2147483649, 2],"float16"), k=-4, )
paddle.Tensor.rot90(x=Tensor([67108865, 4, 4, 4],"float16"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.rot90(Tensor([1140850690, 2],"float32"), 1, axes=list[0,1,], )
paddle.Tensor.rot90(Tensor([3, 760567127],"float32"), 1, axes=list[0,1,], )
paddle.Tensor.rot90(x=Tensor([2, 2147483649],"float16"), k=-4, )
paddle.Tensor.rot90(x=Tensor([3, 1431655766],"float16"), )
paddle.Tensor.rot90(x=Tensor([4, 1073741825],"float16"), k=-1, )
paddle.Tensor.rot90(x=Tensor([67108865, 4, 4, 4],"float16"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 67108865],"float16"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.Tensor.rot90(x=Tensor([570425345, 4],"float32"), )
paddle.Tensor.round(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.round(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.round(Tensor([114085069, 20],"float32"), )
paddle.Tensor.round(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.round(Tensor([10, 228170138],"float32"), )
paddle.Tensor.rsqrt(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.rsqrt(Tensor([10, 228170138],"float32"), )
paddle.Tensor.rsqrt(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.rsqrt(Tensor([114085069, 20],"float32"), )
paddle.Tensor.rsqrt(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.scale(Tensor([8, 4, 1024, 131073],"float16"), 0.011048543456039804, )
paddle.Tensor.scale(Tensor([4097, 4, 1024, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([7168, 1152],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([16, 2, 1024, 64],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([1, 16, 1358156, 105],"float32"), 24, )
paddle.Tensor.scale(Tensor([8, 4, 524289, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([100352, 8192],"bfloat16"), 0.006378560586546936, )
paddle.Tensor.scale(Tensor([1, 16, 1, 142606337],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([228170138, 10],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([64, 294642, 11, 11],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([1, 22152441, 1, 103],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 22591103, 1, 101],"float32"), 24, )
paddle.Tensor.scale(Tensor([2, 1, 8388609, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([1, 2742430, 13, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([32, 16, 128, 128],"float16"), 24, )
paddle.Tensor.scale(Tensor([16, 2, 131073, 1024],"float16"), 16, )
paddle.Tensor.scale(Tensor([32, 16385, 128, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1, 21939437, 1, 104],"float32"), 24, )
paddle.Tensor.scale(Tensor([990322, 256, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([2049, 4, 1024, 512],"float16"), 0.011048543456039804, )
paddle.Tensor.scale(Tensor([8192, 10240],"bfloat16"), 0.006378560586546936, )
paddle.Tensor.scale(Tensor([2, 2, 1024, 1048577],"float16"), 16, )
paddle.Tensor.scale(Tensor([256, 990322, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([1358156, 16, 1, 105],"float32"), 24, )
paddle.Tensor.scale(Tensor([2049, 2, 1024, 1024],"float16"), 16, )
paddle.Tensor.scale(Tensor([7, 16, 128, 128],"float16"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1398102, 102],"float32"), 24, )
paddle.Tensor.scale(Tensor([1308316, 16, 1, 109],"float32"), 24, )
paddle.Tensor.scale(Tensor([1398102, 16, 1, 102],"float32"), 24, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 512],"float16"), 0.011048543456039804, )
paddle.Tensor.scale(Tensor([12800, 7168],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([7168, 7168],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([32769, 16, 128, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1, 16, 4194305, 64],"float16"), 0.00390625, )
paddle.Tensor.scale(Tensor([1, 21525485, 1, 106],"float32"), 24, )
paddle.Tensor.scale(Tensor([2, 1, 2097153, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([1371215, 16, 1, 104],"float32"), 24, )
paddle.Tensor.scale(Tensor([1320430, 192, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([1, 4097, 1024, 1024],"float16"), 32, )
paddle.Tensor.scale(Tensor([32, 16, 128, 65537],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([28672, 8192],"bfloat16"), 0.006378560586546936, )
paddle.Tensor.scale(Tensor([1320430, 16, 1, 108],"float32"), 24, )
paddle.Tensor.scale(Tensor([192, 64, 37138, 5],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([1, 16, 1411944, 101],"float32"), 24, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 131073],"float16"), 4, )
paddle.Tensor.scale(Tensor([2281701379],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([10, 228170138, 1],"float32"), scale=2.0, bias=3.0, )
paddle.Tensor.scale(Tensor([1, 16, 1371215, 104],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 1332770, 107],"float32"), 24, )
paddle.Tensor.scale(Tensor([16385, 1, 1024, 256],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([384, 660215, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([2, 2049, 1024, 1024],"float16"), 16, )
paddle.Tensor.scale(Tensor([1, 65537, 1024, 64],"float16"), 0.00390625, )
paddle.Tensor.scale(Tensor([8192, 7168],"bfloat16"), 0.006378560586546936, )
paddle.Tensor.scale(Tensor([16, 2, 1024, 131073],"float16"), 16, )
paddle.Tensor.scale(Tensor([8192, 57344],"bfloat16"), 0.006378560586546936, )
paddle.Tensor.scale(Tensor([1, 16, 1024, 262145],"float16"), 32, )
paddle.Tensor.scale(Tensor([64, 1, 11, 3241054],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([3584, 7168],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([4097, 16, 1024, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([4097, 16, 1024, 64],"float16"), 0.00390625, )
paddle.Tensor.scale(Tensor([1, 21126865, 1, 108],"float32"), 24, )
paddle.Tensor.scale(Tensor([7168, 12800],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([8192, 8192],"bfloat16"), 0.006378560586546936, )
paddle.Tensor.scale(Tensor([256, 384, 7737, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([2228225, 16, 1, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1, 16, 1024, 64],"float16"), 0.00390625, )
paddle.Tensor.scale(Tensor([1332770, 16, 1, 107],"float32"), 24, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 131073],"float16"), 0.015625, )
paddle.Tensor.scale(Tensor([256, 256, 3, 11606],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([8, 4, 131073, 1024],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([1, 22369622, 1, 102],"float32"), 24, )
paddle.Tensor.scale(Tensor([1, 16, 262145, 1024],"float16"), 32, )
paddle.Tensor.scale(Tensor([1, 16, 1024, 262145],"float16"), 0.00390625, )
paddle.Tensor.scale(Tensor([2, 2049, 1024, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([16, 16, 262145, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([2, 2, 1024, 1048577],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([660215, 384, 3, 3],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([32, 16, 131073, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1345343, 16, 1, 106],"float32"), 24, )
paddle.Tensor.scale(Tensor([2, 2, 1048577, 1024],"float16"), 16, )
paddle.Tensor.scale(Tensor([7, 16, 599187, 64],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([16, 16, 1024, 16385],"float16"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([3584, 8192],"bfloat16"), 0.006378560586546936, )
paddle.Tensor.scale(Tensor([16, 16, 1024, 1024],"float16"), 24, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 1024],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([2, 2, 1024, 1024],"float16"), 16, )
paddle.Tensor.scale(Tensor([1025, 4, 1024, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([8, 4, 131073, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([256, 384, 3, 7737],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([16, 2, 2097153, 64],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([192, 64, 5, 37138],"float32"), 0.5, )
paddle.Tensor.scale(Tensor([2, 1, 1024, 1024],"float16"), 4, )
paddle.Tensor.scale(Tensor([1, 16, 1320430, 108],"float32"), 24, )
paddle.Tensor.scale(Tensor([171402, 16, 13, 64],"float32"), 0.005208333333333333, )
paddle.Tensor.scale(Tensor([1384528, 16, 1, 103],"float32"), 24, )
paddle.Tensor.scale(Tensor([8, 4, 1024, 131073],"float16"), 0.0078125, )
paddle.Tensor.scale(Tensor([14336, 7168],"bfloat16"), 0.006818968095896705, )
paddle.Tensor.scale(Tensor([16, 4097, 1024, 64],"float16"), 0.0078125, )
paddle.Tensor.set_(Tensor([20],"float16"), Tensor([1431655766, 3],"float16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"float32"), Tensor([760567127, 3],"float32"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"bool"), Tensor([760567127, 3],"bool"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int64"), Tensor([760567127, 3],"int64"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([4294967297],"uint8"), Tensor([15, 3],"uint8"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int8"), Tensor([1431655766, 3],"int8"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([2281701379],"int32"), Tensor([15, 3],"int32"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int16"), Tensor([15, 286331154],"int16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([4294967297],"int16"), Tensor([15, 3],"int16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"float16"), Tensor([15, 286331154],"float16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([2281701379],"bool"), Tensor([15, 3],"bool"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"float32"), Tensor([15, 152113426],"float32"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([2281701379],"int64"), Tensor([15, 3],"int64"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"bool"), Tensor([15, 152113426],"bool"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([4294967297],"float16"), Tensor([15, 3],"float16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int32"), Tensor([15, 152113426],"int32"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"uint8"), Tensor([1431655766, 3],"uint8"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"uint8"), Tensor([15, 286331154],"uint8"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int16"), Tensor([1431655766, 3],"int16"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int64"), Tensor([15, 152113426],"int64"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int8"), Tensor([15, 286331154],"int8"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([4294967297],"int8"), Tensor([15, 3],"int8"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([2281701379],"float32"), Tensor([15, 3],"float32"), list[20,], list[2,], 0, )
paddle.Tensor.set_(Tensor([20],"int32"), Tensor([760567127, 3],"int32"), list[20,], list[2,], 0, )
paddle.Tensor.sigmoid(Tensor([1901418, 300, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([518569, 1100, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([51856850, 11, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 9, 253522376],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 300, 7605672],"float32"), )
paddle.Tensor.sigmoid(Tensor([633806, 900, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 1100, 2074274],"float32"), )
paddle.Tensor.sigmoid(Tensor([25928425, 22, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 18, 126761188],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 900, 2535224],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 570425345, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([89409, 6380, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 6380, 357634],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 21, 108652447],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 11, 207427399],"float32"), )
paddle.Tensor.sigmoid(Tensor([66717, 8550, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 8550, 266866],"float32"), )
paddle.Tensor.sigmoid(Tensor([1, 22, 103713700],"float32"), )
paddle.Tensor.sigmoid(Tensor([27163112, 21, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([63380594, 9, 4],"float32"), )
paddle.Tensor.sigmoid(Tensor([31690297, 18, 4],"float32"), )
paddle.Tensor.sign(Tensor([50000, 17180, 5],"float16"), )
paddle.Tensor.sign(Tensor([50000, 85900],"float16"), )
paddle.Tensor.sign(Tensor([50000, 5, 5],"float64"), )
paddle.Tensor.sign(Tensor([2147483649, 2],"float16"), )
paddle.Tensor.sign(Tensor([4, 570425345],"float32"), )
paddle.Tensor.sign(Tensor([2281701379],"float32"), )
paddle.Tensor.sign(Tensor([32, 71303169],"float32"), )
paddle.Tensor.sign(Tensor([4294967297],"float16"), )
paddle.Tensor.sign(Tensor([1124, 2029984],"float32"), )
paddle.Tensor.sign(Tensor([512, 4456449],"float32"), )
paddle.Tensor.sign(Tensor([16, 142606337],"float32"), )
paddle.Tensor.sign(Tensor([456340276, 5],"float32"), )
paddle.Tensor.sign(Tensor([171798692, 5, 5],"float16"), )
paddle.Tensor.sign(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.sign(Tensor([37, 61667605],"float32"), )
paddle.Tensor.sign(Tensor([50000, 5, 17180],"float16"), )
paddle.Tensor.sign(Tensor([71303169, 32],"float32"), )
paddle.Tensor.sign(Tensor([61667605, 37],"float32"), )
paddle.Tensor.signbit(Tensor([12, 178956971, 2],"uint8"), )
paddle.Tensor.signbit(Tensor([12, 20, 17895698],"float16"), )
paddle.Tensor.signbit(Tensor([12, 95070891, 2],"float32"), )
paddle.Tensor.signbit(Tensor([107374183, 20, 2],"int8"), )
paddle.Tensor.signbit(Tensor([107374183, 20, 2],"uint8"), )
paddle.Tensor.signbit(Tensor([57042535, 20, 2],"int32"), )
paddle.Tensor.signbit(Tensor([12, 178956971, 2],"int8"), )
paddle.Tensor.signbit(Tensor([12, 20, 17895698],"int8"), )
paddle.Tensor.signbit(Tensor([12, 20, 17895698],"uint8"), )
paddle.Tensor.signbit(Tensor([12, 95070891, 2],"int32"), )
paddle.Tensor.signbit(Tensor([12, 178956971, 2],"float16"), )
paddle.Tensor.signbit(Tensor([57042535, 20, 2],"float32"), )
paddle.Tensor.signbit(Tensor([107374183, 20, 2],"float16"), )
paddle.Tensor.signbit(Tensor([12, 178956971, 2],"int16"), )
paddle.Tensor.signbit(Tensor([12, 20, 17895698],"int16"), )
paddle.Tensor.signbit(Tensor([107374183, 20, 2],"int16"), )
paddle.Tensor.signbit(Tensor([12, 20, 9507090],"int32"), )
paddle.Tensor.signbit(Tensor([12, 20, 9507090],"float32"), )
paddle.Tensor.sin(Tensor([11, 207427399],"float32"), )
paddle.Tensor.sin(Tensor([20, 114085069],"float32"), )
paddle.Tensor.sin(Tensor([29710, 40, 30, 64],"float32"), )
paddle.Tensor.sin(Tensor([810264, 11, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 72, 100, 316903],"float32"), )
paddle.Tensor.sin(Tensor([118839, 20, 15, 64],"float32"), )
paddle.Tensor.sin(Tensor([10, 228170138],"float32"), )
paddle.Tensor.sin(Tensor([29710, 300, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 144, 247581, 64],"float32"), )
paddle.Tensor.sin(Tensor([34, 67108865],"float32"), )
paddle.Tensor.sin(Tensor([23767723, 96],"float32"), )
paddle.Tensor.sin(Tensor([1, 89, 72, 356071],"float32"), )
paddle.Tensor.sin(Tensor([1, 300, 4, 1901418],"float32"), )
paddle.Tensor.sin(Tensor([1, 21, 108652447],"float32"), )
paddle.Tensor.sin(Tensor([32768, 69633],"float32"), )
paddle.Tensor.sin(Tensor([1, 247581, 144, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 10, 8, 28521268],"float32"), )
paddle.Tensor.sin(Tensor([1, 8912897, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 9, 253522376],"float32"), )
paddle.Tensor.sin(Tensor([1, 36, 990322, 64],"float32"), )
paddle.Tensor.sin(Tensor([20632, 48, 36, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 10, 3565159, 64],"float32"), )
paddle.Tensor.sin(Tensor([1697695, 21, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 1426064, 25, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 18, 1980644, 64],"float32"), )
paddle.Tensor.sin(Tensor([424424, 21, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 45, 792258, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 48, 36, 1320430],"float32"), )
paddle.Tensor.sin(Tensor([1, 48, 742742, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 22, 1620527, 64],"float32"), )
paddle.Tensor.sin(Tensor([3961288, 9, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 713032, 50, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 9, 4, 63380594],"float32"), )
paddle.Tensor.sin(Tensor([131072, 8],"float32"), )
paddle.Tensor.sin(Tensor([71303169, 32],"float32"), )
paddle.Tensor.sin(Tensor([1, 40, 891290, 64],"float32"), )
paddle.Tensor.sin(Tensor([264, 8642809],"float32"), )
paddle.Tensor.sin(Tensor([131072, 128],"float32"), )
paddle.Tensor.sin(Tensor([1, 23, 1550069, 64],"float32"), )
paddle.Tensor.sin(Tensor([2, 17825793, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 18, 4, 31690297],"float32"), )
paddle.Tensor.sin(Tensor([495161, 18, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([4952, 72, 100, 64],"float32"), )
paddle.Tensor.sin(Tensor([1620527, 22, 64],"float32"), )
paddle.Tensor.sin(Tensor([8912897, 256],"float32"), )
paddle.Tensor.sin(Tensor([2, 76, 115, 64],"float32"), )
paddle.Tensor.sin(Tensor([19807, 36, 50, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 11, 3241054, 64],"float32"), )
paddle.Tensor.sin(Tensor([405132, 22, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 12, 2970966, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 9, 13, 19501722],"float32"), )
paddle.Tensor.sin(Tensor([35651585, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 96, 72, 330108],"float32"), )
paddle.Tensor.sin(Tensor([1, 11, 4, 51856850],"float32"), )
paddle.Tensor.sin(Tensor([16, 268435457],"float16"), )
paddle.Tensor.sin(Tensor([1, 2742430, 13, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 12, 9, 21126865],"float32"), )
paddle.Tensor.sin(Tensor([304715, 9, 13, 64],"float32"), )
paddle.Tensor.sin(Tensor([24, 24, 3961288],"float32"), )
paddle.Tensor.sin(Tensor([1, 144, 200, 64],"float32"), )
paddle.Tensor.sin(Tensor([86115, 23, 18, 64],"float32"), )
paddle.Tensor.sin(Tensor([7428, 80, 60, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 300, 118839, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 4456449, 8, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 96, 371371, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 20, 15, 7605672],"float32"), )
paddle.Tensor.sin(Tensor([285212673, 8],"float32"), )
paddle.Tensor.sin(Tensor([990322, 9, 4, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 3961288, 9, 64],"float32"), )
paddle.Tensor.sin(Tensor([17825793, 128],"float32"), )
paddle.Tensor.sin(Tensor([1, 192, 144, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 80, 60, 475355],"float32"), )
paddle.Tensor.sin(Tensor([24, 1485483, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 594194, 60, 64],"float32"), )
paddle.Tensor.sin(Tensor([131072, 17409],"float32"), )
paddle.Tensor.sin(Tensor([2, 19, 938200, 64],"float32"), )
paddle.Tensor.sin(Tensor([16, 2228225, 64],"float32"), )
paddle.Tensor.sin(Tensor([2, 1188387, 15, 64],"float32"), )
paddle.Tensor.sin(Tensor([5564, 89, 72, 64],"float32"), )
paddle.Tensor.sin(Tensor([134217729, 32],"float16"), )
paddle.Tensor.sin(Tensor([330108, 12, 9, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 990322, 36, 64],"float32"), )
paddle.Tensor.sin(Tensor([2, 614683, 29, 64],"float32"), )
paddle.Tensor.sin(Tensor([200, 11408507],"float32"), )
paddle.Tensor.sin(Tensor([1, 80, 445645, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 22, 103713700],"float32"), )
paddle.Tensor.sin(Tensor([760567127, 3],"float32"), )
paddle.Tensor.sin(Tensor([4096, 557057],"float32"), )
paddle.Tensor.sin(Tensor([2048, 1114113],"float32"), )
paddle.Tensor.sin(Tensor([1, 9, 3961288, 64],"float32"), )
paddle.Tensor.sin(Tensor([5158, 96, 72, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 144, 200, 79226],"float32"), )
paddle.Tensor.sin(Tensor([1, 45, 36, 1408458],"float32"), )
paddle.Tensor.sin(Tensor([1, 36, 50, 1267612],"float32"), )
paddle.Tensor.sin(Tensor([1, 40, 30, 1901418],"float32"), )
paddle.Tensor.sin(Tensor([1290, 192, 144, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 72, 495161, 64],"float32"), )
paddle.Tensor.sin(Tensor([22008, 45, 36, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 1980644, 18, 64],"float32"), )
paddle.Tensor.sin(Tensor([1, 2376773, 15, 64],"float32"), )
paddle.Tensor.slice_scatter(Tensor([8, 536870913],"float16"), Tensor([8, 3],"float16"), list[1,], list[0,], list[6,], list[2,], )
paddle.Tensor.slice_scatter(Tensor([715827883, 6],"float16"), Tensor([715827883, 3],"float16"), list[1,], list[0,], list[6,], list[2,], )
paddle.Tensor.split(Tensor([21846, 2, 128, 8, 96],"float16"), 2, )
paddle.Tensor.split(Tensor([108, 21126865],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1, 22, 103713700],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([243, 36828, 8, 32],"float32"), list[27648,6912,1728,432,108,], axis=1, )
paddle.Tensor.split(Tensor([1, 8400, 8, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([570425345, 4],"float32"), list[2,2,], -1, )
paddle.Tensor.split(Tensor([2, 11645, 8, 12247],"float32"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([16, 8400, 8, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([13, 7, 25073642],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([2, 6069, 8, 23498],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([24944704],"bfloat16"), list[6144,32,32,24938496,], axis=0, )
paddle.Tensor.split(Tensor([2048, 1, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([2, 8400, 8, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([160, 17, 3072],"float16"), 17, 1, )
paddle.Tensor.split(Tensor([2910334, 196, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([10, 14260634, 16],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([1, 142606337, 16],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([2359360],"bfloat16"), list[6144,32,32,2353152,], axis=0, )
paddle.Tensor.split(Tensor([16, 8400, 531, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([1140850690, 2],"float32"), list[1,1,], -1, )
paddle.Tensor.split(Tensor([1, 8550, 8, 32],"float32"), list[6408,1620,414,108,], axis=1, )
paddle.Tensor.split(Tensor([39137344],"bfloat16"), list[6144,32,32,39131136,], axis=0, )
paddle.Tensor.split(Tensor([2281701379, 1],"float32"), list[1,], -1, )
paddle.Tensor.split(Tensor([25928425, 22, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([71303169, 2, 16],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([8, 6069, 1469, 32],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([40212544],"bfloat16"), list[6144,32,32,40206336,], axis=0, )
paddle.Tensor.split(Tensor([1, 6380, 11177, 32],"float32"), list[4800,1200,300,80,], axis=1, )
paddle.Tensor.split(Tensor([1, 2281701379],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([26787904],"bfloat16"), list[6144,32,32,26781696,], axis=0, )
paddle.Tensor.split(Tensor([63380594, 9, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1, 6380, 8, 44705],"float32"), list[4800,1200,300,80,], axis=1, )
paddle.Tensor.split(Tensor([4, 2, 699051, 8, 96],"float16"), 2, )
paddle.Tensor.split(Tensor([1, 2281701379],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([1043, 8550, 8, 32],"float32"), list[6408,1620,414,108,], axis=1, )
paddle.Tensor.split(Tensor([2, 6069, 8, 32],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([285212673, 8],"float32"), list[1,1,1,1,1,1,1,1,], -1, )
paddle.Tensor.split(Tensor([37589056],"bfloat16"), list[6144,32,32,37582848,], axis=0, )
paddle.Tensor.split(Tensor([168, 24967, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([1441, 11645, 8, 32],"float16"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([31690297, 18, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([325957340, 7],"float32"), list[7,], -1, )
paddle.Tensor.split(Tensor([162978670, 7, 2],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([1, 6380, 8, 32],"float32"), list[4800,1200,300,80,], axis=1, )
paddle.Tensor.split(Tensor([1, 38367, 8, 7434],"float32"), list[28800,7200,1800,450,117,], axis=1, )
paddle.Tensor.split(Tensor([174763, 17, 768],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([285212673, 8],"float32"), list[8,], -1, )
paddle.Tensor.split(Tensor([2, 11645, 8, 32],"float32"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([1, 11109, 8, 25675],"float32"), list[8464,2116,529,], axis=1, )
paddle.Tensor.split(Tensor([1887, 4725, 8, 32],"float32"), list[3600,900,225,], axis=1, )
paddle.Tensor.split(Tensor([2, 2, 35651585, 2, 8],"float32"), 2, )
paddle.Tensor.split(Tensor([100, 22817014],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([47376448],"bfloat16"), list[6144,32,32,47370240,], axis=0, )
paddle.Tensor.split(Tensor([570425345, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([2, 11645, 3062, 32],"float32"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([2, 1, 2, 1, 570425345],"float32"), 2, )
paddle.Tensor.split(Tensor([803, 11109, 8, 32],"float32"), list[8464,2116,529,], axis=1, )
paddle.Tensor.split(Tensor([8, 6069, 8, 5875],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([1310, 6804, 8, 32],"float32"), list[5184,1296,324,], axis=1, )
paddle.Tensor.split(Tensor([11408507, 25, 4, 2],"float32"), 4, axis=2, )
paddle.Tensor.split(Tensor([1, 36828, 8, 32],"float32"), list[27648,6912,1728,432,108,], axis=1, )
paddle.Tensor.split(Tensor([34093120],"bfloat16"), list[6144,32,32,34086912,], axis=0, )
paddle.Tensor.split(Tensor([1048577, 4, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([1, 10164, 8, 32],"float32"), list[7744,1936,484,], axis=1, )
paddle.Tensor.split(Tensor([102, 22369622],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([456340276, 5],"float32"), list[5,], -1, )
paddle.Tensor.split(Tensor([2, 8400, 4245, 32],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([1, 18, 126761188],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([27163112, 21, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([23767723, 1, 96],"float32"), list[64,16,16,], axis=-1, )
paddle.Tensor.split(Tensor([3241054, 176, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([145, 28927, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([107, 21324312],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([8, 6069, 8, 32],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([2097153, 2, 1024],"float16"), list[512,256,256,], axis=-1, )
paddle.Tensor.split(Tensor([1, 8400, 8, 33954],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.split(Tensor([142606337, 16],"float32"), list[12,4,], -1, )
paddle.Tensor.split(Tensor([22480960],"bfloat16"), list[6144,32,32,22474752,], axis=0, )
paddle.Tensor.split(Tensor([35651585, 4, 16],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([2, 4725, 8, 32],"float32"), list[3600,900,225,], axis=1, )
paddle.Tensor.split(Tensor([570425345, 4],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([23767723, 6, 16],"float32"), list[8,4,4,], axis=-1, )
paddle.Tensor.split(Tensor([1, 300, 7605672],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([1469, 6069, 8, 32],"float32"), list[4624,1156,289,], axis=1, )
paddle.Tensor.split(Tensor([518569, 1100, 4],"float32"), 4, -1, )
paddle.Tensor.split(Tensor([160, 17, 3072],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([1, 36828, 1937, 32],"float32"), list[27648,6912,1728,432,108,], axis=1, )
paddle.Tensor.split(Tensor([13, 13, 13501192],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([1, 36828, 8, 7745],"float32"), list[27648,6912,1728,432,108,], axis=1, )
paddle.Tensor.split(Tensor([2, 11645, 5763, 32],"float16"), list[8740,2204,551,150,], axis=1, )
paddle.Tensor.split(Tensor([2, 4725, 7546, 32],"float32"), list[3600,900,225,], axis=1, )
paddle.Tensor.split(Tensor([16, 176, 810264],"float32"), 4, axis=-1, )
paddle.Tensor.split(Tensor([13, 32, 5484860],"float32"), 2, axis=-1, )
paddle.Tensor.split(Tensor([1, 38367, 1859, 32],"float32"), list[28800,7200,1800,450,117,], axis=1, )
paddle.Tensor.split(Tensor([1, 25, 4, 22817014],"float32"), 4, axis=2, )
paddle.Tensor.split(Tensor([4, 5376, 8, 32],"float32"), list[4096,1024,256,], axis=1, )
paddle.Tensor.split(Tensor([44138560],"bfloat16"), list[6144,32,32,44132352,], axis=0, )
paddle.Tensor.split(Tensor([43691, 17, 3072],"float32"), 17, 1, )
paddle.Tensor.split(Tensor([1, 8550, 8, 33359],"float32"), list[6408,1620,414,108,], axis=1, )
paddle.Tensor.split(Tensor([4, 8400, 8, 8489],"float32"), list[6400,1600,400,], axis=1, )
paddle.Tensor.sqrt(Tensor([64, 80, 8, 104858],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 80, 52429, 16],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 843825, 52, 52],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 104858, 8],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 51782, 36, 36],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 11, 10, 20742740],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 36, 5761873],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 93207, 9],"float16"), )
paddle.Tensor.sqrt(Tensor([372828, 80, 12, 12],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 11, 20, 10371370],"float32"), )
paddle.Tensor.sqrt(Tensor([8, 71303169, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 22, 9428519],"float32"), )
paddle.Tensor.sqrt(Tensor([10, 228170138],"float32"), )
paddle.Tensor.sqrt(Tensor([1714277, 11, 11, 11],"float32"), )
paddle.Tensor.sqrt(Tensor([662804, 80, 9, 9],"float16"), )
paddle.Tensor.sqrt(Tensor([640209, 11, 18, 18],"float32"), )
paddle.Tensor.sqrt(Tensor([2, 285212673, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 6482107, 32],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 83887, 10],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 80, 41944, 20],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 11, 30, 6914247],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 1, 2281701379],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 7977977, 26],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 34664, 44, 44],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 11, 38, 5458616],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 18, 11523745],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 4938748, 42],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 24, 24],"float32"), )
paddle.Tensor.sqrt(Tensor([306846, 11, 26, 26],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 1048577, 8, 8],"float16"), )
paddle.Tensor.sqrt(Tensor([428570, 11, 22, 22],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 727584, 56, 56],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 18, 18],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 1293482, 42, 42],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 12, 69906],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 80, 23302, 36],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 1973791, 34, 34],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 6100806, 34],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 6320503, 19, 19],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 209716, 4],"float16"), )
paddle.Tensor.sqrt(Tensor([61595, 9261, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([810264, 11, 16, 16],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 44, 4714260],"float32"), )
paddle.Tensor.sqrt(Tensor([838861, 80, 8, 8],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 80, 11, 76261],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 11, 12201612, 17],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 15955954, 13],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 21, 9877496],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 9877496, 21],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 2910334, 28, 28],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 29128, 48, 48],"float16"), )
paddle.Tensor.sqrt(Tensor([134218, 80, 20, 20],"float16"), )
paddle.Tensor.sqrt(Tensor([536871, 80, 10, 10],"float16"), )
paddle.Tensor.sqrt(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 14816243, 14],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 41944, 40, 40],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 65537, 32, 32],"float16"), )
paddle.Tensor.sqrt(Tensor([717742, 11, 17, 17],"float32"), )
paddle.Tensor.sqrt(Tensor([2281701379],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 262145, 16, 16],"float16"), )
paddle.Tensor.sqrt(Tensor([2074274, 11, 10, 10],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 40, 20972],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 1864136, 6, 6],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 11, 19, 10917232],"float32"), )
paddle.Tensor.sqrt(Tensor([470357, 11, 21, 21],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 139811, 6],"float16"), )
paddle.Tensor.sqrt(Tensor([443695, 80, 11, 11],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 466034, 12, 12],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 207127, 18, 18],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 80, 17477, 48],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 80, 76261, 11],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 828505, 9, 9],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 11, 28, 7408122],"float32"), )
paddle.Tensor.sqrt(Tensor([1491309, 80, 6, 6],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 11, 17, 12201612],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 19066, 44],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 2684355, 5, 5],"float16"), )
paddle.Tensor.sqrt(Tensor([27731, 80, 44, 44],"float16"), )
paddle.Tensor.sqrt(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 10140896, 15, 15],"float32"), )
paddle.Tensor.sqrt(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.sqrt(Tensor([264576, 11, 28, 28],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 11, 11523745, 18],"float32"), )
paddle.Tensor.sqrt(Tensor([138588, 4116, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 18, 46604],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 80, 5, 167773],"float16"), )
paddle.Tensor.sqrt(Tensor([64, 80, 20, 20],"float32"), )
paddle.Tensor.sqrt(Tensor([83837, 6804, 4],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 32, 26215],"float16"), )
paddle.Tensor.sqrt(Tensor([4, 6804, 83837],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 5173927, 21, 21],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 24, 34953],"float16"), )
paddle.Tensor.sqrt(Tensor([518569, 11, 20, 20],"float32"), )
paddle.Tensor.sqrt(Tensor([1, 2228225, 32, 32],"float32"), )
paddle.Tensor.sqrt(Tensor([228170138, 10],"float32"), )
paddle.Tensor.sqrt(Tensor([209716, 80, 16, 16],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 1426064, 40, 40],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 80, 16, 16],"float32"), )
paddle.Tensor.sqrt(Tensor([64, 4194305, 4, 4],"float16"), )
paddle.Tensor.sqrt(Tensor([1, 11, 14, 14816243],"float32"), )
paddle.Tensor.square(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.square(Tensor([8, 285212673],"float32"), )
paddle.Tensor.square(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.square(Tensor([2281701379],"float32"), )
paddle.Tensor.square(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.square(Tensor([17825793, 128],"float32"), )
paddle.Tensor.square(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.squeeze(Tensor([1, 30208, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 82944, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 28416, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([200, 1, 1, 37632],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([192, 559241, 1, 40],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([1, 57088, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 41344, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 73216, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 29568, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 69120, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([2281701379, 1],"int64"), 1, )
paddle.Tensor.squeeze(Tensor([1, 25472, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 100352, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 1, 2281701379],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1, 26112, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 89600, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 49664, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([128, 120, 1, 279621],"float16"), axis=2, )
paddle.Tensor.squeeze(Tensor([1, 62720, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 85504, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 55808, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 35968, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 77824, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 90880, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 64000, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 35712, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 36864, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 30336, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 20096, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 52736, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 57728, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 39680, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 262145, 128, 128],"float16"), )
paddle.Tensor.squeeze(Tensor([1, 41856, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([114085069, 20],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([1, 25216, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 33664, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([512, 192, 1, 25],"float32"), axis=2, )
paddle.Tensor.squeeze(Tensor([13, 1, 175515491, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 70784, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 27520, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 59136, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 181896, 12544],"float32"), list[1,2,], )
paddle.Tensor.squeeze(Tensor([1140850690, 2, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([1, 24576, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([13, 25073642, 1, 7],"int32"), -2, )
paddle.Tensor.squeeze(Tensor([1, 48128, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 50816, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 34688, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 59776, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 73728, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 75648, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 57984, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 52864, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 28672, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 79872, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 43136, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 66048, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 31616, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 68736, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 80896, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 53504, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 38144, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 52352, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 53248, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 34816, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 45696, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 35456, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 32256, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 38656, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 76800, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 22272, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 17409, 64, 64, 2, 1],"float32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 98816, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 42752, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 43392, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 97792, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 48000, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 29696, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 52736, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([16, 1, 80, 25500],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 76288, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 34560, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 1, 21504, 106106],"float32"), 1, )
paddle.Tensor.squeeze(Tensor([1, 78592, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2, 32, 32, 2097153],"float16"), 0, )
paddle.Tensor.squeeze(Tensor([1, 25344, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 75264, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 72704, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 21126865, 12, 9],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([325957340, 1, 1, 7],"int32"), -2, )
paddle.Tensor.squeeze(Tensor([1, 23552, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 31872, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([64, 1677722, 1, 40],"float16"), 2, )
paddle.Tensor.squeeze(Tensor([1, 40576, 64],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2281701379],"int32"), -1, )
paddle.Tensor.squeeze(Tensor([1, 46464, 56],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([1, 2281701379, 1],"float32"), axis=-1, )
paddle.Tensor.squeeze(Tensor([1, 93696, 28],"float32"), 0, )
paddle.Tensor.squeeze(Tensor([570425345, 4, 1],"float32"), 2, )
paddle.Tensor.std(Tensor([10563433, 6, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 6, 380283564],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 12, 11883862],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 3, 47535446],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 26, 5484860],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 3, 760567127],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 27, 5281717],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([9, 253522376],"float32"), axis=1, )
paddle.Tensor.std(Tensor([4971027, 17, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([7922575, 8, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 29, 4917460],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3250287, 26, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([5281717, 16, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([5633831, 15, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1024, 1024, 2177],"float32"), )
paddle.Tensor.std(Tensor([16, 2, 71303169],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([990322, 2304],"float32"), axis=1, )
paddle.Tensor.std(Tensor([16, 21, 6790778],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 22, 6482107],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 20, 7130317],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3380299, 25, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4694859, 18, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2816916, 30, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([42253730, 1, 54],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1024, 278529, 8],"float32"), )
paddle.Tensor.std(Tensor([1, 10, 228170138],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 8, 285212673],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 28, 5093084],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([891290, 2560],"float32"), axis=1, )
paddle.Tensor.std(Tensor([524289, 1024, 8],"float16"), )
paddle.Tensor.std(Tensor([1, 4, 570425345],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([38, 60044774],"float32"), axis=1, )
paddle.Tensor.std(Tensor([15845149, 4, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3674238, 23, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 16, 8912897],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 12, 190141782],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([50704476, 1, 45],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3961288, 16, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([5761873, 11, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([9054371, 7, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 9, 253522376],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 19, 7505597],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 1, 2281701379],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([7682497, 11, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([8450746, 10, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 11, 207427399],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 18, 7922575],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1024, 1024, 8],"float32"), )
paddle.Tensor.std(Tensor([3018124, 28, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 23, 6200276],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1444, 1580126],"float32"), axis=1, )
paddle.Tensor.std(Tensor([16, 17, 8388609],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4024165, 21, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([7042289, 9, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 11, 12964213],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 7, 325957340],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 15, 9507090],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 42253730, 54],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 50704476, 45],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 14, 10186167],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 14, 162978670],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([278529, 1024, 8],"float32"), )
paddle.Tensor.std(Tensor([6338060, 10, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([5281717, 12, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 10, 14260634],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4527186, 14, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 5281717, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 16, 142606337],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 13, 175515491],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([36, 63380594],"float32"), axis=1, )
paddle.Tensor.std(Tensor([7042289, 12, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4447761, 19, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 3961288, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1024, 1024, 4097],"float16"), )
paddle.Tensor.std(Tensor([1024, 524289, 8],"float16"), )
paddle.Tensor.std(Tensor([63380594, 1, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([2914051, 29, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([6036248, 14, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 24, 5941931],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4875431, 13, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([4225373, 20, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 30, 4753545],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1444, 1024],"float32"), axis=1, )
paddle.Tensor.std(Tensor([1, 63380594, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1782580, 1280],"float32"), axis=1, )
paddle.Tensor.std(Tensor([3841249, 22, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([12676119, 5, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([6500574, 13, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 2, 1140850690],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 13, 10969719],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 5, 456340276],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3129906, 27, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([16, 25, 5704254],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([3521145, 24, 27],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1024, 1024, 8],"float64"), )
paddle.Tensor.std(Tensor([2228225, 1024],"float32"), axis=1, )
paddle.Tensor.std(Tensor([31690297, 2, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([21126865, 3, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.subtract(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3, 380283564],"float32"), )
paddle.Tensor.subtract(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.subtract(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.subtract(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 3, 4],"float32"), )
paddle.Tensor.subtract(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.Tensor.subtract(Tensor([2, 285212673, 4],"float32"), Tensor([2, 285212673, 4],"float32"), )
paddle.Tensor.sum(Tensor([1, 30, 33600],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([14554, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 15, 9, 900],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 47, 65856],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([8, 33, 9, 441],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 23, 13, 3549],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([28, 205923],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([13818, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 27, 12096],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 53, 7581],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([29877, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 15, 13, 8400],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([10, 312324],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([29185, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 63, 13, 6069],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 43, 13, 30324],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 79, 10164],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([8, 25, 6069],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 52, 30324],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([12, 222012],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([49664, 3584],"float32"), axis=-1, )
paddle.Tensor.sum(Tensor([16, 15, 9, 676],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([12830, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([19390, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 23, 9, 7744],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([16, 8, 9, 1764],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 36, 9, 484],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 34, 9, 5184],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([15288, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 11, 13, 9261],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([64, 23, 1360],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([5, 234804],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 29, 75600],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([64, 3, 172, 79],"float32"), )
paddle.Tensor.sum(Tensor([16, 379050],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([16, 27, 9, 8464],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 36, 9, 3600],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([858993460, 1, 1, 5],"float16"), 3, )
paddle.Tensor.sum(Tensor([28918, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 46, 13, 7581],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([15489, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([64, 30, 9, 64],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([5, 229152],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([27, 69030],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([15067, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([221848, 1, 10285],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 47, 13, 3024],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([29745, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([12608, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 170, 13, 8400],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([2, 48, 13, 4725],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([16455, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([13, 294624],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([1, 49, 13, 27216],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([21350, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8, 35, 9, 8464],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([16680, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([16, 23, 9, 361],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([14067, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([24565, 81],"bool"), axis=1, )
paddle.Tensor.sum(Tensor([2, 92, 13, 6069],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([12726, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8, 11, 9, 8464],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([64, 31, 3060],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([13390, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 61, 44436],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([22128, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 92, 13, 30324],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 349866],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([32752, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 26, 48384],"float32"), -1, keepdim=True, )
paddle.Tensor.sum(Tensor([4, 640, 640],"float32"), )
paddle.Tensor.sum(Tensor([13824, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([23089, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([64, 31, 9, 144],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 25, 11109],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([4, 98, 9, 676],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([72744, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([8, 11, 9, 1444],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([64, 29, 9, 2304],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([1, 249, 48384],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([36558, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([4, 261888],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([39546, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([55980, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([1, 49, 13, 40656],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 16, 9, 9216],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([14, 313038],"int32"), 0, keepdim=True, )
paddle.Tensor.sum(Tensor([53130, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([23608, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([9, 5000, 10, 20],"float64"), 0, )
paddle.Tensor.sum(Tensor([1, 43, 30324],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([24087, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([2, 23, 13, 12096],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([8, 35, 9, 7744],"float32"), axis=-2, )
paddle.Tensor.sum(Tensor([31000, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([23292, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([15603, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([19071, 80],"float32"), axis=1, )
paddle.Tensor.sum(Tensor([37856, 80],"float32"), axis=1, )
paddle.Tensor.tanh(Tensor([715827883, 2, 3],"float16"), )
paddle.Tensor.tanh(Tensor([1, 2, 1140850690],"float32"), )
paddle.Tensor.tanh(Tensor([760567127, 3],"float32"), )
paddle.Tensor.tanh(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.tanh(Tensor([1, 1431655766, 3],"float16"), )
paddle.Tensor.tanh(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.tanh(Tensor([1073741825, 4],"float16"), )
paddle.Tensor.tanh(Tensor([1, 2, 2147483649],"float16"), )
paddle.Tensor.tanh(Tensor([2281701379],"float32"), )
paddle.Tensor.tanh(Tensor([380283564, 2, 3],"float32"), )
paddle.Tensor.tanh(Tensor([1431655766, 3],"float16"), )
paddle.Tensor.tanh(Tensor([1, 760567127, 3],"float32"), )
paddle.Tensor.tanh(Tensor([4294967297],"float16"), )
paddle.Tensor.tanh(Tensor([1140850690, 2],"float32"), )
paddle.Tensor.tile(Tensor([2910334, 1, 28, 28],"float32"), list[1,3,1,1,], )
paddle.Tensor.tile(Tensor([1, 2910334, 28, 28],"float32"), list[1,3,1,1,], )
paddle.Tensor.tile(Tensor([2, 2, 16777217, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([100, 2, 167773, 1, 128],"float16"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([1, 47159, 48384],"bool"), list[1,11,1,], )
paddle.Tensor.tile(Tensor([100, 2, 2, 1, 10737419],"float16"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([1, 1, 81489335, 28],"float32"), list[1,3,1,1,], )
paddle.Tensor.tile(Tensor([4, 1114113, 512],"float32"), tuple(1,2,1,), )
paddle.Tensor.tile(Tensor([1, 61595, 37044],"bool"), list[1,14,1,], )
paddle.Tensor.tile(Tensor([1, 157920, 7],"float32"), list[4,1,1,], )
paddle.Tensor.tile(Tensor([55925, 300, 256],"float16"), list[2,1,1,], )
paddle.Tensor.tile(Tensor([100, 2, 2, 83887, 128],"float16"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([1, 142606337, 2, 1, 8],"float32"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([100, 22817014],"float32"), list[2,1,1,], )
paddle.Tensor.tile(Tensor([1, 300, 14316558],"float16"), list[2,1,1,], )
paddle.Tensor.tile(Tensor([142606337, 16],"float32"), tuple(1,1,), )
paddle.Tensor.tile(Tensor([2, 2, 1, 1073741825, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([1, 280, 376, 25, 3],"float32"), tuple(Tensor([],"int64"),1,1,1,1,), )
paddle.Tensor.tile(Tensor([8580, 1, 256],"float32"), tuple(1,1,1,), )
paddle.Tensor.tile(Tensor([100, 167773, 2, 1, 128],"float16"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([38402, 1, 256],"float32"), tuple(1,1,1,), )
paddle.Tensor.tile(Tensor([2, 33554433, 1, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([80239, 1, 32],"float32"), list[1,20,1,], )
paddle.Tensor.tile(Tensor([1, 16777217, 256],"float16"), list[2,1,1,], )
paddle.Tensor.tile(Tensor([8388609, 2, 2, 1, 128],"float16"), list[1,1,1,2,1,], )
paddle.Tensor.tile(Tensor([6400, 1, 256],"float32"), tuple(1,1,1,), )
paddle.Tensor.tile(Tensor([1, 512, 1114113, 4],"float32"), tuple(1,1,1,1,), )
paddle.Tensor.tile(Tensor([2, 2, 1, 64, 16777217],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.tile(Tensor([36858, 1, 256],"float32"), tuple(1,1,1,), )
paddle.Tensor.tile(Tensor([33554433, 2, 1, 64, 1],"float16"), list[1,1,1,1,2,], )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 32778, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 60681, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 32937, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 26763, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 46722, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 56211, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 21639, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 59802, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 21621, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 114561, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 28836, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 46812, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 90771, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 74502, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 22458, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 82482, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 71139, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 64314, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 49986, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 30912, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 150507, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 95928, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 69993, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 70503, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 29025, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 48636, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 92397, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 31800, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 24081, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 114261, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 43950, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 24285, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 17520, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 176061, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 26340, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 46404, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 28779, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 30231, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 25653, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 53829, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 60396, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 175965, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 41421, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 222156, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 74310, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 48978, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 105876, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 88755, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 63786, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 158844, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 40095, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 58260, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 43803, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 138210, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 113676, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 69168, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 80370, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 71175, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 55572, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 44193, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 67125, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 147315, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 62109, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 52980, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 25707, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 91281, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 65013, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 23964, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 40767, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 173505, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 30141, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 64866, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 49614, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 27789, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 95178, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 74796, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 63798, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 30981, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 63618, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 101946, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 107739, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 40149, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 78426, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 69429, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 61608, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 69009, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 90303, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 136164, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 29103, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 62967, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 68604, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 113790, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 70446, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 69147, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 51444, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 30297, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 124257, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 121539, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 58221, )
paddle.Tensor.topk(Tensor([2281701379],"float32"), 33039, )
paddle.Tensor.transpose(Tensor([128, 197, 3, 3, 64],"float32"), tuple(2,0,3,1,4,), )
paddle.Tensor.transpose(Tensor([60, 12, 197, 64],"float32"), tuple(0,2,1,3,), )
paddle.Tensor.transpose(Tensor([128, 49, 8, 64],"float16"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([2, 11109, 112],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([60, 32, 144, 32],"float32"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([16, 11, 64, 64, 2],"float32"), list[0,1,4,2,3,], )
paddle.Tensor.transpose(Tensor([16, 4725, 16],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([35840, 3584],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([128, 3136, 32],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([64, 3060, 21],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([16, 6804, 12],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 74, 80],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([23040, 7168],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([16, 3024, 21],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([4, 4096, 160],"float16"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([16, 68, 5184],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([30, 8, 169, 32],"float32"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([2, 8400, 96],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([6268411, 13, 4, 7],"float32"), tuple(1,2,0,3,), )
paddle.Tensor.transpose(Tensor([8, 68, 72, 76],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([1792, 2, 32, 56],"float32"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([1, 44436, 24],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2, 7581, 87],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 128, 15872],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 70, 78],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([1, 40656, 41],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([32, 24, 24, 384],"float32"), list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([30, 8, 126, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([8, 80, 68, 78],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([128, 512, 49],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 5184, 256],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 9261, 4, 17],"float32"), list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([40, 392, 3, 6, 32],"float32"), list[2,0,3,1,4,], )
paddle.Tensor.transpose(Tensor([4, 1024, 2, 8, 32],"float32"), list[2,0,3,1,4,], )
paddle.Tensor.transpose(Tensor([16, 2100, 35],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([30720, 7168],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([32, 56, 56, 128],"float32"), list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([64, 1360, 34],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 65856, 32],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([16, 9261, 43],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([42496, 7168],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([2, 4096, 320],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 32, 6400],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([2048, 49, 3, 12, 32],"float32"), tuple(2,0,3,1,4,), )
paddle.Tensor.transpose(Tensor([19968, 7168],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([30, 181, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([16, 768, 196],"float16"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([12800, 3584],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([8, 80, 80, 76],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([4, 4096, 256],"float16"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([128, 8, 7, 8, 7, 128],"float16"), list[0,1,3,2,4,5,], )
paddle.Tensor.transpose(Tensor([128, 49, 1024],"float16"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 16, 35, 28, 192],"float16"), list[0,4,1,2,3,], )
paddle.Tensor.transpose(Tensor([1, 96, 53760],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([4, 8, 1024, 32],"float32"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([20992, 3584],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([124, 56, 56, 128],"float32"), list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([2, 12096, 159],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([144, 96, 3136],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 68, 78],"float16"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([124, 512, 24, 24],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 4096],"float16"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([1, 96, 72, 256],"float32"), tuple(0,3,1,2,), )
paddle.Tensor.transpose(Tensor([414, 49, 3, 3, 32],"float32"), list[2,0,3,1,4,], )
paddle.Tensor.transpose(Tensor([82944, 7168],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([30, 211, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([1, 44436, 87],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([128, 3136, 512],"float16"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([5, 12, 48, 48, 64],"float32"), list[0,2,3,1,4,], )
paddle.Tensor.transpose(Tensor([128, 256, 48, 48],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([1140851, 500, 4],"int64"), list[2,1,0,], )
paddle.Tensor.transpose(Tensor([14, 8, 196, 768],"float16"), tuple(0,2,1,3,), )
paddle.Tensor.transpose(Tensor([1, 75600, 65],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 6069, 37],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([4294967297, 1, 1, 1],"float16"), perm=list[2,1,3,0,], )
paddle.Tensor.transpose(Tensor([1, 61236, 139],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 66, 76],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([15872, 7168],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([2, 65536, 256],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([128, 128, 1, 9948, 2, 7],"float32"), list[0,2,4,3,5,1,], )
paddle.Tensor.transpose(Tensor([95232, 7168],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([16, 11109, 24],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([30, 8, 153, 32],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([16, 7581, 27],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([30, 95, 8, 64],"float32"), list[0,2,1,3,], )
paddle.Tensor.transpose(Tensor([144, 8, 7, 8, 7, 96],"float32"), list[0,1,3,2,4,5,], )
paddle.Tensor.transpose(Tensor([8, 80, 82, 76],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([64, 2577, 19],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 3, 85, 56, 56],"float32"), tuple(0,1,3,4,2,), )
paddle.Tensor.transpose(Tensor([1, 40656, 116],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([128, 32, 56, 1, 1, 56],"float32"), list[0,2,4,3,5,1,], )
paddle.Tensor.transpose(Tensor([2048, 6, 49, 32],"float16"), list[0,1,3,2,], )
paddle.Tensor.transpose(Tensor([79872, 3584],"bfloat16"), list[1,0,], )
paddle.Tensor.transpose(Tensor([16, 28, 28, 384],"float32"), list[0,3,1,2,], )
paddle.Tensor.transpose(Tensor([16, 11109, 19],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([8, 68, 104, 152],"float32"), list[0,2,3,1,], )
paddle.Tensor.transpose(Tensor([16, 5376, 23],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([124, 2, 2, 7, 7, 384],"float32"), list[0,1,3,2,4,5,], )
paddle.Tensor.transpose(Tensor([16, 4725, 18],"float32"), list[0,2,1,], )
paddle.Tensor.transpose(Tensor([128, 2, 7, 2, 7, 384],"float16"), list[0,1,3,2,4,5,], )
paddle.Tensor.tril(Tensor([2, 1140850690],"float32"), -1, )
paddle.Tensor.tril(Tensor([570425345, 2, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([1, 1140850690, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([1, 2, 1140850690],"float32"), -1, )
paddle.Tensor.tril(Tensor([2, 2, 570425345],"float32"), -1, )
paddle.Tensor.tril(Tensor([1140850690, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([2, 570425345, 2],"float32"), -1, )
paddle.Tensor.trunc(Tensor([81489335, 28],"float32"), )
paddle.Tensor.trunc(Tensor([28, 81489335],"float32"), )
paddle.Tensor.trunc(Tensor([8, 285212673],"float32"), )
paddle.Tensor.trunc(Tensor([285212673, 8],"float32"), )
paddle.Tensor.trunc(Tensor([2, 8, 142606337],"float32"), )
paddle.Tensor.trunc(Tensor([2, 142606337, 8],"float32"), )
paddle.Tensor.trunc(Tensor([35651585, 8, 8],"float32"), )
paddle.Tensor.unbind(Tensor([363, 96, 1024, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 210334, 113, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 121, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 7717, 8, 385, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([2, 3, 8, 47535446],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 145, 655662],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 241, 394486],"float32"), 0, )
paddle.Tensor.unbind(Tensor([148549, 60, 4, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 2, 19014179],"float32"), 1, )
paddle.Tensor.unbind(Tensor([61469, 1, 8, 145, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 169, 562550],"float32"), 0, )
paddle.Tensor.unbind(Tensor([2, 131073, 256, 32, 2],"float16"), axis=-1, )
paddle.Tensor.unbind(Tensor([2, 3, 256, 742742, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([59420, 60, 10, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 18924, 8, 157, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 169, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([258, 60, 2304, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([211, 864, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 432, 196, 8983],"float32"), 0, )
paddle.Tensor.unbind(Tensor([80, 3, 576, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([128, 3, 576, 5158, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 95070891, 8],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 960, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 26292, 8, 113, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 217, 438115],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 103790, 229, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 432, 27509, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 98622, 241, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([128, 484, 576, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 97, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 60, 2304, 5502],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 261, 364257],"float32"), 0, )
paddle.Tensor.unbind(Tensor([2, 3, 256, 1398102, 2],"float16"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 1, 389635, 61, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([297097, 60, 2, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([2910334, 28, 28],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 73, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 11384, 8, 261, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 2970966, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 109529, 217, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([80, 774, 576, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([99033, 60, 6, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 145, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([41074, 1, 8, 217, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 96, 1024, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([1, 16, 2228225, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 48, 247581, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 61735, 385, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([128, 3, 576, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 8, 95070891],"float32"), axis=-3, )
paddle.Tensor.unbind(Tensor([3, 432, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 48, 1024, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([34150, 1, 8, 261, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([52740, 1, 8, 169, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 10, 8, 137, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 960, 196, 4043],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 12328, 8, 241, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 61, 1558540],"float32"), 0, )
paddle.Tensor.unbind(Tensor([1, 60, 594194, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 109, 872211],"float32"), 0, )
paddle.Tensor.unbind(Tensor([80, 3, 576, 32, 516],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([380283564, 2, 3],"float32"), -2, )
paddle.Tensor.unbind(Tensor([46422, 3, 256, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 48705, 8, 61, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 48, 1024, 15474],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 69, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 151387, 157, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([36983, 1, 8, 241, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 12974, 8, 229, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([23151, 1, 8, 385, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 27257, 8, 109, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 13692, 8, 217, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 89, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([2, 3, 5941931, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([1, 1188387, 30, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 2, 380283564],"float32"), -2, )
paddle.Tensor.unbind(Tensor([3, 1, 218053, 109, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 65, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 113, 841336],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 11606, 1024, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([1, 60, 20, 1901418],"float32"), 1, )
paddle.Tensor.unbind(Tensor([1, 60, 10, 3802836],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 161, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 960, 12380, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([422, 432, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 49, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([38921, 1, 8, 229, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 113, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([2, 3, 256, 32, 87382],"float16"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 60, 198065, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([20632, 3, 576, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 864, 13755, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([128, 3, 92843, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 1, 8, 385, 246938],"float32"), 0, )
paddle.Tensor.unbind(Tensor([1, 139265, 256, 32, 2],"float32"), axis=-1, )
paddle.Tensor.unbind(Tensor([3, 60, 2304, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([19807, 60, 30, 64],"float32"), 1, )
paddle.Tensor.unbind(Tensor([3, 20490, 8, 145, 32],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 864, 196, 64],"float32"), 0, )
paddle.Tensor.unbind(Tensor([3, 30, 8, 53, 32],"float32"), 0, )
paddle.Tensor.unflatten(Tensor([7, 126, 3072],"float32"), -1, tuple(3,Tensor([],"int64"),), )
paddle.Tensor.unsqueeze(Tensor([52608, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([43392, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([23680, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([35200, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([31232, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([30592, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([42880, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([30720, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([5619, 896],"bfloat16"), 1, )
paddle.Tensor.unsqueeze(Tensor([48128, 28],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([12, 392, 392],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([1, 2281701379],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([84992, 28],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([26112, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([73216, 28],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([25600, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([51712, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([47104, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([29696, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([100, 704, 704],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"int64"), axis=list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([73600, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([50048, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([64512, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([21504, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([58240, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([27136, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([27904, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([55936, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1, 1024, 2, 2097153],"float16"), -2, )
paddle.Tensor.unsqueeze(Tensor([35072, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([5849, 896],"bfloat16"), 1, )
paddle.Tensor.unsqueeze(Tensor([2281701379, 1, 1],"float32"), axis=3, )
paddle.Tensor.unsqueeze(Tensor([45056, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([29056, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([141, 16182280],"bool"), axis=list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([71680, 28],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([55680, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([57984, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([71303169, 32],"float32"), list[0,0,], )
paddle.Tensor.unsqueeze(Tensor([49408, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([5656, 896],"bfloat16"), 1, )
paddle.Tensor.unsqueeze(Tensor([68096, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([65792, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([32128, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([38016, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([33280, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([88064, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([41472, 28],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([58, 19669840, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([55424, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([28672, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([21120, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([37888, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([57984, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([100, 768, 768],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([570425345, 1, 4],"float32"), 3, )
paddle.Tensor.unsqueeze(Tensor([26112, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"float32"), -1, )
paddle.Tensor.unsqueeze(Tensor([55296, 28],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([57216, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([61696, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([570425345, 4],"float32"), list[2,], )
paddle.Tensor.unsqueeze(Tensor([47744, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([58112, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([56960, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([71303169, 32, 1],"float32"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([140, 188, 28897, 3],"float32"), list[3,], )
paddle.Tensor.unsqueeze(Tensor([416, 1, 5484860],"bool"), axis=1, )
paddle.Tensor.unsqueeze(Tensor([63232, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([60928, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([2281701379],"float32"), list[0,2,3,], )
paddle.Tensor.unsqueeze(Tensor([1000, 2281702],"float32"), axis=-1, )
paddle.Tensor.unsqueeze(Tensor([64128, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([37632, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([176, 1, 392, 392],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([37120, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([44672, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([50688, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([46720, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([1140850690, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([64, 512, 1, 40],"float32"), 1, )
paddle.Tensor.unsqueeze(Tensor([82944, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([23040, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([5876, 896],"bfloat16"), 1, )
paddle.Tensor.unsqueeze(Tensor([89216, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([144, 1, 392, 392],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([37760, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([34688, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([33536, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([44928, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([68352, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([60416, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([27648, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([55296, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([47872, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([47360, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([39680, 56],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([68480, 64],"float32"), 0, )
paddle.Tensor.unsqueeze(Tensor([92160, 28],"float32"), 0, )
paddle.Tensor.var(Tensor([1000, 2281702],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000, 76057, 3],"float32"), axis=0, )
paddle.Tensor.var(Tensor([50000, 28634, 3],"float16"), axis=0, )
paddle.Tensor.var(Tensor([1140850690, 2],"float32"), axis=0, )
paddle.Tensor.var(Tensor([4294967297, 1],"float16"), axis=0, )
paddle.Tensor.var(Tensor([5000, 858994],"float16"), axis=0, )
paddle.Tensor.var(Tensor([380283564, 2, 3],"float32"), axis=0, )
paddle.Tensor.var(Tensor([1000000, 4],"float64"), axis=0, )
paddle.Tensor.var(Tensor([50000, 2, 42950],"float16"), axis=0, )
paddle.Tensor.var(Tensor([2281701379],"float32"), axis=0, )
paddle.Tensor.var(Tensor([50000, 45635],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000, 2, 214749],"float16"), axis=0, )
paddle.Tensor.var(Tensor([4294967297],"float16"), axis=0, )
paddle.Tensor.var(Tensor([10000, 143166, 3],"float16"), axis=0, )
paddle.Tensor.var(Tensor([10000, 2, 114086],"float32"), axis=0, )
paddle.Tensor.var(Tensor([1000000, 4295],"float16"), axis=0, )
paddle.Tensor.var(Tensor([715827883, 2, 3],"float16"), axis=0, )
paddle.Tensor.var(Tensor([1073741825, 4],"float16"), axis=0, )
paddle.Tensor.var(Tensor([2910334, 784],"float32"), axis=0, )
paddle.Tensor.var(Tensor([5000, 456341],"float32"), axis=0, )
paddle.Tensor.var(Tensor([100000, 42950],"float16"), axis=0, )
paddle.Tensor.zero_(Tensor([2012416],"float16"), )
paddle.Tensor.zero_(x=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.zero_(Tensor([2056, 896],"float32"), )
paddle.Tensor.zero_(Tensor([896, 7168],"float32"), )
paddle.Tensor.zero_(Tensor([14336, 7168],"float32"), )
paddle.Tensor.zero_(Tensor([14, 40744668, 4],"float32"), )
paddle.Tensor.zero_(Tensor([12800, 7168],"float32"), )
paddle.Tensor.zero_(Tensor([7168, 257],"float32"), )
paddle.Tensor.zero_(Tensor([1011200],"float16"), )
paddle.Tensor.zero_(x=Tensor([4, 570425345],"int64"), )
paddle.Tensor.zero_(Tensor([2097152],"float32"), )
paddle.Tensor.zero_(Tensor([8912897, 64, 4],"float32"), )
paddle.Tensor.zero_(Tensor([2281701379],"float32"), )
paddle.Tensor.zero_(x=Tensor([10, 16, 26843546],"float16"), )
paddle.Tensor.zero_(x=Tensor([16, 268435457],"float16"), )
paddle.Tensor.zero_(Tensor([1280, 7168],"float32"), )
paddle.Tensor.zero_(Tensor([8192, 7168],"float32"), )
paddle.Tensor.zero_(Tensor([71303169, 32],"int32"), )
paddle.Tensor.zero_(x=Tensor([4, 570425345],"float32"), )
paddle.Tensor.zero_(Tensor([16384, 8192],"float32"), )
paddle.Tensor.zero_(x=Tensor([4294967297],"float16"), )
paddle.Tensor.zero_(Tensor([14, 64, 2546542],"float32"), )
paddle.Tensor.zero_(Tensor([2012160],"float32"), )
paddle.Tensor.zero_(Tensor([448, 7168],"float32"), )
paddle.Tensor.zero_(Tensor([134217729, 32],"float16"), )
paddle.Tensor.zero_(Tensor([7168, 896],"float32"), )
paddle.Tensor.zero_(Tensor([3584, 7168],"float32"), )
paddle.Tensor.zero_(Tensor([8388608],"float16"), )
paddle.Tensor.zero_(Tensor([1059840],"float32"), )
paddle.Tensor.zero_(Tensor([71303169, 32],"int64"), )
paddle.Tensor.zero_(Tensor([100352, 8192],"float32"), )
paddle.Tensor.zero_(Tensor([8192, 10240],"float32"), )
paddle.Tensor.zero_(x=Tensor([570425345, 4],"int32"), )
paddle.Tensor.zero_(Tensor([3584, 8192],"float32"), )
paddle.Tensor.zero_(Tensor([8192, 100352],"float32"), )
paddle.Tensor.zero_(Tensor([7168, 12800],"float32"), )
paddle.Tensor.zero_(Tensor([32, 134217729],"float16"), )
paddle.Tensor.zero_(x=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.zero_(Tensor([1001088],"float32"), )
paddle.Tensor.zero_(Tensor([7168, 1152],"float32"), )
paddle.Tensor.zero_(Tensor([14, 10186167, 16],"float32"), )
paddle.Tensor.zero_(Tensor([32, 71303169],"int64"), )
paddle.Tensor.zero_(Tensor([71303169, 32],"float32"), )
paddle.Tensor.zero_(Tensor([8192, 8192],"float32"), )
paddle.Tensor.zero_(Tensor([2228225, 64, 16],"float32"), )
paddle.Tensor.zero_(Tensor([1059840],"float16"), )
paddle.Tensor.zero_(Tensor([2097152],"float16"), )
paddle.Tensor.zero_(Tensor([8192, 57344],"float32"), )
paddle.Tensor.zero_(Tensor([32, 71303169],"float32"), )
paddle.Tensor.zero_(Tensor([7168, 7168],"float32"), )
paddle.Tensor.zero_(x=Tensor([570425345, 4],"float32"), )
paddle.Tensor.zero_(Tensor([7168, 384],"float32"), )
paddle.Tensor.zero_(Tensor([32, 71303169],"int32"), )
paddle.Tensor.zero_(x=Tensor([10, 26843546, 16],"float16"), )
paddle.Tensor.zero_(x=Tensor([16777217, 16, 16],"float16"), )
paddle.Tensor.zero_(x=Tensor([4, 570425345],"int32"), )
paddle.Tensor.zero_(Tensor([4294967297],"float16"), )
paddle.Tensor.zero_(x=Tensor([570425345, 4],"int64"), )
paddle.Tensor.zero_(Tensor([28672, 8192],"float32"), )
paddle.Tensor.zero_(x=Tensor([268435457, 16],"float16"), )
paddle.Tensor.zero_(Tensor([1011072],"float32"), )
paddle.abs(Tensor([8, 640, 640],"float32"), )
paddle.abs(Tensor([2, 3, 16, 16, 1485483],"float32"), )
paddle.abs(Tensor([16, 256, 32, 32],"float32"), )
paddle.abs(Tensor([1, 34817, 256, 256],"float32"), )
paddle.abs(Tensor([10, 760568, 300],"float32"), )
paddle.abs(Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.abs(x=Tensor([790063, 722, 2, 2],"float32"), )
paddle.abs(Tensor([3961288, 576],"float32"), )
paddle.abs(x=Tensor([256, 18, 3, 165054],"float32"), )
paddle.abs(Tensor([2, 3, 29252582, 13, 1],"float32"), )
paddle.abs(x=Tensor([56, 722, 2, 28217],"float32"), )
paddle.abs(x=Tensor([87, 2622646, 10],"float32"), )
paddle.abs(Tensor([233017, 18432],"float16"), )
paddle.abs(Tensor([1, 15845149, 12, 12],"float32"), )
paddle.abs(Tensor([1014563],"float32"), )
paddle.abs(Tensor([10, 200, 1140851],"int32"), )
paddle.abs(Tensor([1, 38, 60044774],"float32"), )
paddle.abs(Tensor([3880445, 3, 14, 14, 1],"float32"), )
paddle.abs(Tensor([10, 760568, 300],"int32"), )
paddle.abs(Tensor([2, 3, 12, 12, 2640859],"float32"), )
paddle.abs(Tensor([2, 3, 34571234, 11, 1],"float32"), )
paddle.abs(x=Tensor([50704476, 9, 5],"float32"), )
paddle.abs(Tensor([16, 256, 64, 64],"float32"), )
paddle.abs(Tensor([16, 64, 64, 64],"float32"), )
paddle.abs(Tensor([7605672, 3, 10, 10, 1],"float32"), )
paddle.abs(Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.abs(Tensor([12, 3, 6338060, 10, 1],"float32"), )
paddle.abs(Tensor([2, 3, 12, 31690297, 1],"float32"), )
paddle.abs(Tensor([1355, 3170304],"float16"), )
paddle.abs(Tensor([60044774, 38, 1],"float32"), )
paddle.abs(Tensor([1022957],"float32"), )
paddle.abs(x=Tensor([14084577, 18, 3, 3],"float32"), )
paddle.abs(x=Tensor([256, 2228225, 2, 2],"float32"), )
paddle.abs(Tensor([1, 8912897, 16, 16],"float32"), )
paddle.abs(Tensor([2, 3, 10, 10, 3802836],"float32"), )
paddle.abs(Tensor([4, 157920, 3],"float32"), )
paddle.abs(Tensor([16, 64, 32, 32],"float32"), )
paddle.abs(x=Tensor([100, 2281702, 10],"float32"), )
paddle.abs(Tensor([228170138, 2, 5],"float32"), )
paddle.abs(Tensor([1, 2228225, 32, 32],"float32"), )
paddle.abs(x=Tensor([87, 722, 2, 18163],"float32"), )
paddle.abs(x=Tensor([100, 722, 2, 15802],"float32"), )
paddle.abs(Tensor([1014705],"float32"), )
paddle.abs(Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.abs(x=Tensor([3, 253522376, 3],"float32"), )
paddle.abs(Tensor([200, 37632],"float32"), )
paddle.abs(Tensor([10, 228170138],"float32"), )
paddle.abs(Tensor([1, 2, 536870913, 4],"float16"), )
paddle.abs(Tensor([12, 3, 20, 3169030, 1],"float32"), )
paddle.abs(Tensor([2, 3, 11, 11, 3142840],"float32"), )
paddle.abs(Tensor([1005783],"float32"), )
paddle.abs(x=Tensor([100, 2535224, 3, 3],"float32"), )
paddle.abs(Tensor([1037889],"float32"), )
paddle.abs(Tensor([1, 3, 256, 2970966],"float32"), )
paddle.abs(Tensor([1000110],"float32"), )
paddle.abs(Tensor([13, 3, 58505164],"float32"), )
paddle.abs(Tensor([2, 3, 14, 27163112, 1],"float32"), )
paddle.abs(Tensor([1, 1, 32, 71303169],"float32"), )
paddle.abs(Tensor([16, 128, 32, 32],"float32"), )
paddle.abs(Tensor([390168, 11008],"float16"), )
paddle.abs(x=Tensor([227, 9, 1116839],"float32"), )
paddle.abs(Tensor([16, 64, 128, 128],"float32"), )
paddle.abs(Tensor([32, 1, 240, 240],"float32"), )
paddle.abs(Tensor([1, 4294967297],"float16"), )
paddle.abs(Tensor([1, 2, 285212673, 4],"float32"), )
paddle.abs(Tensor([3380299, 3, 15, 15, 1],"float32"), )
paddle.abs(x=Tensor([82, 5565126, 5],"float32"), )
paddle.abs(Tensor([42949673, 100],"float16"), )
paddle.abs(Tensor([253522376, 9, 1],"float32"), )
paddle.abs(Tensor([2, 3, 23767723, 16, 1],"float32"), )
paddle.abs(Tensor([1034011],"float32"), )
paddle.abs(Tensor([19014179, 120],"float32"), )
paddle.abs(Tensor([1, 6, 23767723, 16],"float32"), )
paddle.abs(Tensor([1, 1, 71303169, 32],"float32"), )
paddle.abs(Tensor([38029, 200, 300],"float32"), )
paddle.abs(Tensor([2, 5070448, 15, 15, 1],"float32"), )
paddle.abs(x=Tensor([56, 722, 28217, 2],"float32"), )
paddle.abs(x=Tensor([56, 10186167, 2, 2],"float32"), )
paddle.abs(Tensor([27163112, 84],"float32"), )
paddle.abs(Tensor([67108865, 64],"float16"), )
paddle.abs(x=Tensor([227, 18, 3, 186140],"float32"), )
paddle.abs(x=Tensor([477218589, 3, 3],"float16"), )
paddle.abs(Tensor([2970966, 3, 16, 16, 1],"float32"), )
paddle.abs(Tensor([1, 16, 11883862, 12],"float32"), )
paddle.abs(Tensor([2, 6750596, 13, 13, 1],"float32"), )
paddle.abs(x=Tensor([56, 38, 1072229],"float32"), )
paddle.abs(x=Tensor([256, 9, 990322],"float32"), )
paddle.abs(Tensor([64, 67108865],"float16"), )
paddle.abs(Tensor([2, 3947581, 17, 17, 1],"float32"), )
paddle.abs(Tensor([1013482],"float32"), )
paddle.abs(Tensor([2, 7922575, 12, 12, 1],"float32"), )
paddle.abs(Tensor([1014002],"float32"), )
paddle.abs(x=Tensor([100, 18, 3, 422538],"float32"), )
paddle.abs(Tensor([8, 16777217, 32],"float16"), )
paddle.abs(Tensor([1025789],"float32"), )
paddle.abs(Tensor([228170138, 10],"float32"), )
paddle.abs(Tensor([1003547],"float32"), )
paddle.abs(x=Tensor([256, 990322, 3, 3],"float32"), )
paddle.abs(Tensor([2, 3, 31690297, 12, 1],"float32"), )
paddle.abs(Tensor([1, 16, 12, 11883862],"float32"), )
paddle.acos(Tensor([10, 228170138],"float32"), )
paddle.acos(Tensor([2, 2147483649],"float16"), )
paddle.acos(x=Tensor([3, 253522376, 3],"float32"), )
paddle.acos(x=Tensor([3, 3, 477218589],"float16"), )
paddle.acos(Tensor([10, 20, 11408507],"float32"), )
paddle.acos(x=Tensor([3, 477218589, 3],"float16"), )
paddle.acos(Tensor([228170138, 10],"float32"), )
paddle.acos(Tensor([1073741825, 4],"float16"), )
paddle.acos(x=Tensor([3, 3, 253522376],"float32"), )
paddle.acos(x=Tensor([253522376, 3, 3],"float32"), )
paddle.acos(Tensor([114085069, 20, 1],"float32"), )
paddle.acos(Tensor([10, 228170138, 1],"float32"), )
paddle.acos(x=Tensor([477218589, 3, 3],"float16"), )
paddle.acosh(Tensor([10, 20, 11408507],"float32"), )
paddle.acosh(Tensor([114085069, 20, 1],"float32"), )
paddle.acosh(Tensor([10, 228170138, 1],"float32"), )
paddle.add(Tensor([8, 288, 20, 20],"float32"), Tensor([8, 288, 20, 20],"float32"), )
paddle.add(x=Tensor([4, 1024, 74, 80],"float32"), y=Tensor([4, 1024, 74, 80],"float32"), )
paddle.add(x=Tensor([4, 256, 272, 336],"float32"), y=Tensor([4, 256, 272, 336],"float32"), )
paddle.add(Tensor([1, 192, 112, 112],"float32"), Tensor([1, 192, 112, 112],"float32"), )
paddle.add(x=Tensor([8, 512, 152, 152],"float32"), y=Tensor([8, 512, 152, 152],"float32"), )
paddle.add(Tensor([8, 72, 80, 80],"float32"), Tensor([8, 72, 80, 80],"float32"), )
paddle.add(x=Tensor([4, 512, 123, 167],"float32"), y=Tensor([4, 512, 123, 167],"float32"), )
paddle.add(x=Tensor([4, 256, 302, 301],"float32"), y=Tensor([4, 256, 302, 301],"float32"), )
paddle.add(x=Tensor([4, 1024, 54, 61],"float32"), y=Tensor([4, 1024, 54, 61],"float32"), )
paddle.add(x=Tensor([4, 2048, 38, 42],"float32"), y=Tensor([4, 2048, 38, 42],"float32"), )
paddle.add(Tensor([6504, 8, 1, 80],"float32"), Tensor([6504, 8, 1, 80],"float32"), )
paddle.add(Tensor([4, 128, 336, 280],"float32"), Tensor([4, 128, 336, 280],"float32"), )
paddle.add(x=Tensor([8, 512, 68, 68],"float32"), y=Tensor([8, 512, 68, 68],"float32"), )
paddle.add(x=Tensor([4, 1024, 62, 76],"float32"), y=Tensor([4, 1024, 62, 76],"float32"), )
paddle.add(Tensor([6912, 8, 2, 80],"float32"), Tensor([6912, 8, 2, 80],"float32"), )
paddle.add(x=Tensor([8, 2048, 38, 42],"float32"), y=Tensor([8, 2048, 38, 42],"float32"), )
paddle.add(x=Tensor([4, 256, 264, 336],"float32"), y=Tensor([4, 256, 264, 336],"float32"), )
paddle.add(x=Tensor([4, 2048, 32, 32],"float32"), y=Tensor([4, 2048, 32, 32],"float32"), )
paddle.add(Tensor([6088, 8, 2, 80],"float32"), Tensor([6088, 8, 2, 80],"float32"), )
paddle.add(x=Tensor([4, 1024, 67, 76],"float32"), y=Tensor([4, 1024, 67, 76],"float32"), )
paddle.add(x=Tensor([8, 256, 296, 288],"float32"), y=Tensor([8, 256, 296, 288],"float32"), )
paddle.add(x=Tensor([1, 2048, 21, 32],"float32"), y=Tensor([1, 2048, 21, 32],"float32"), )
paddle.add(x=Tensor([4, 2048, 31, 35],"float32"), y=Tensor([4, 2048, 31, 35],"float32"), )
paddle.add(x=Tensor([4, 1024, 73, 80],"float32"), y=Tensor([4, 1024, 73, 80],"float32"), )
paddle.add(Tensor([4, 128, 216, 304],"float32"), Tensor([4, 128, 216, 304],"float32"), )
paddle.add(x=Tensor([8, 2048, 30, 40],"float32"), y=Tensor([8, 2048, 30, 40],"float32"), )
paddle.add(x=Tensor([2, 256, 235, 322],"float32"), y=Tensor([2, 256, 235, 322],"float32"), )
paddle.add(x=Tensor([2, 256, 64, 64],"float32"), y=Tensor([2, 256, 64, 64],"float32"), )
paddle.add(x=Tensor([4, 512, 96, 140],"float32"), y=Tensor([4, 512, 96, 140],"float32"), )
paddle.add(x=Tensor([8, 2048, 30, 34],"float32"), y=Tensor([8, 2048, 30, 34],"float32"), )
paddle.add(x=Tensor([4, 256, 192, 304],"float32"), y=Tensor([4, 256, 192, 304],"float32"), )
paddle.add(x=Tensor([4, 512, 168, 168],"float32"), y=Tensor([4, 512, 168, 168],"float32"), )
paddle.add(Tensor([32, 512, 12, 12],"float32"), Tensor([32, 512, 12, 12],"float32"), )
paddle.add(x=Tensor([4, 512, 148, 144],"float32"), y=Tensor([4, 512, 148, 144],"float32"), )
paddle.add(x=Tensor([4, 1024, 69, 76],"float32"), y=Tensor([4, 1024, 69, 76],"float32"), )
paddle.add(Tensor([4, 128, 240, 304],"float16"), Tensor([4, 128, 240, 304],"float32"), )
paddle.add(x=Tensor([4, 1024, 70, 72],"float32"), y=Tensor([4, 1024, 70, 72],"float32"), )
paddle.add(x=Tensor([2022, 2048, 7, 7],"float32"), y=Tensor([2022, 2048, 7, 7],"float32"), )
paddle.add(Tensor([4, 128, 232, 320],"float32"), Tensor([4, 128, 232, 320],"float32"), )
paddle.add(x=Tensor([4, 256, 248, 184],"float32"), y=Tensor([4, 256, 248, 184],"float32"), )
paddle.add(x=Tensor([24, 64, 64, 64],"float16"), y=Tensor([24, 64, 64, 64],"float32"), )
paddle.add(x=Tensor([256, 256, 56, 56],"float32"), y=Tensor([256, 256, 56, 56],"float32"), )
paddle.add(x=Tensor([8, 1024, 62, 74],"float32"), y=Tensor([8, 1024, 62, 74],"float32"), )
paddle.add(x=Tensor([4, 256, 192, 265],"float32"), y=Tensor([4, 256, 192, 265],"float32"), )
paddle.add(Tensor([1, 192, 96, 96],"float32"), Tensor([1, 192, 96, 96],"float32"), )
paddle.add(x=Tensor([4, 1024, 50, 84],"float32"), y=Tensor([4, 1024, 50, 84],"float32"), )
paddle.add(Tensor([4, 120, 44, 44],"float32"), Tensor([4, 120, 44, 44],"float32"), )
paddle.add(x=Tensor([4, 1024, 46, 69],"float32"), y=Tensor([4, 1024, 46, 69],"float32"), )
paddle.add(Tensor([7296, 8, 1, 80],"float32"), Tensor([7296, 8, 1, 80],"float32"), )
paddle.add(x=Tensor([4, 512, 152, 100],"float32"), y=Tensor([4, 512, 152, 100],"float32"), )
paddle.add(x=Tensor([4, 1024, 46, 78],"float32"), y=Tensor([4, 1024, 46, 78],"float32"), )
paddle.add(x=Tensor([4, 1024, 61, 66],"float32"), y=Tensor([4, 1024, 61, 66],"float32"), )
paddle.add(Tensor([4, 36, 47, 156],"float32"), Tensor([4, 36, 47, 156],"float32"), )
paddle.add(x=Tensor([8, 256, 336, 336],"float32"), y=Tensor([8, 256, 336, 336],"float32"), )
paddle.add(Tensor([16, 24, 80, 80],"float32"), Tensor([16, 24, 80, 80],"float32"), )
paddle.add(x=Tensor([8, 256, 224, 352],"float32"), y=Tensor([8, 256, 224, 352],"float32"), )
paddle.add(x=Tensor([8, 256, 264, 248],"float32"), y=Tensor([8, 256, 264, 248],"float32"), )
paddle.add(x=Tensor([1, 512, 92, 138],"float32"), y=Tensor([1, 512, 92, 138],"float32"), )
paddle.add(x=Tensor([8, 1024, 56, 80],"float32"), y=Tensor([8, 1024, 56, 80],"float32"), )
paddle.add(x=Tensor([4, 512, 128, 123],"float32"), y=Tensor([4, 512, 128, 123],"float32"), )
paddle.add(x=Tensor([8, 1024, 72, 88],"float32"), y=Tensor([8, 1024, 72, 88],"float32"), )
paddle.add(x=Tensor([4, 2048, 35, 39],"float32"), y=Tensor([4, 2048, 35, 39],"float32"), )
paddle.add(x=Tensor([24, 128, 32, 32],"float32"), y=Tensor([24, 128, 32, 32],"float32"), )
paddle.add(x=Tensor([32, 2048, 7, 7],"float32"), y=Tensor([32, 2048, 7, 7],"float32"), )
paddle.add(Tensor([8, 80, 38, 38],"float32"), Tensor([8, 80, 38, 38],"float32"), )
paddle.add(Tensor([3040, 8, 1, 80],"float32"), Tensor([3040, 8, 1, 80],"float32"), )
paddle.add(x=Tensor([8, 512, 32, 32],"float32"), y=Tensor([8, 512, 32, 32],"float32"), )
paddle.add(x=Tensor([8, 1024, 60, 80],"float32"), y=Tensor([8, 1024, 60, 80],"float32"), )
paddle.add(x=Tensor([4, 256, 336, 200],"float32"), y=Tensor([4, 256, 336, 200],"float32"), )
paddle.add(x=Tensor([8, 512, 124, 152],"float32"), y=Tensor([8, 512, 124, 152],"float32"), )
paddle.add(x=Tensor([4, 512, 144, 120],"float32"), y=Tensor([4, 512, 144, 120],"float32"), )
paddle.add(x=Tensor([4, 1024, 46, 62],"float32"), y=Tensor([4, 1024, 46, 62],"float32"), )
paddle.add(x=Tensor([4, 256, 246, 265],"float32"), y=Tensor([4, 256, 246, 265],"float32"), )
paddle.add(x=Tensor([4, 256, 248, 264],"float32"), y=Tensor([4, 256, 248, 264],"float32"), )
paddle.add(x=Tensor([4, 512, 132, 148],"float32"), y=Tensor([4, 512, 132, 148],"float32"), )
paddle.add(x=Tensor([8, 512, 136, 140],"float32"), y=Tensor([8, 512, 136, 140],"float32"), )
paddle.add(Tensor([4, 24, 128, 128],"float32"), Tensor([4, 24, 128, 128],"float32"), )
paddle.add(x=Tensor([8, 256, 64, 64],"float32"), y=Tensor([8, 256, 64, 64],"float32"), )
paddle.add(x=Tensor([4, 512, 104, 148],"float32"), y=Tensor([4, 512, 104, 148],"float32"), )
paddle.add(x=Tensor([4, 512, 136, 148],"float32"), y=Tensor([4, 512, 136, 148],"float32"), )
paddle.add(x=Tensor([4, 1024, 54, 68],"float32"), y=Tensor([4, 1024, 54, 68],"float32"), )
paddle.add(x=Tensor([8, 2048, 36, 36],"float32"), y=Tensor([8, 2048, 36, 36],"float32"), )
paddle.add(x=Tensor([4, 512, 116, 160],"float32"), y=Tensor([4, 512, 116, 160],"float32"), )
paddle.add(x=Tensor([4, 64, 256, 224],"float32"), y=Tensor([4, 64, 256, 224],"float32"), )
paddle.add(Tensor([5976, 8, 1, 80],"float32"), Tensor([5976, 8, 1, 80],"float32"), )
paddle.add(Tensor([64, 256, 28, 28],"float32"), Tensor([64, 256, 28, 28],"float32"), )
paddle.add(x=Tensor([2, 2048, 32, 31],"float32"), y=Tensor([2, 2048, 32, 31],"float32"), )
paddle.add(Tensor([8, 48, 176, 176],"float32"), Tensor([8, 48, 176, 176],"float32"), )
paddle.add(x=Tensor([12, 1024, 19, 34],"float32"), y=Tensor([12, 1024, 19, 34],"float32"), )
paddle.add(Tensor([1, 48, 416, 416],"float32"), Tensor([1, 48, 416, 416],"float32"), )
paddle.add(x=Tensor([8, 1024, 68, 82],"float32"), y=Tensor([8, 1024, 68, 82],"float32"), )
paddle.add(x=Tensor([40, 2048, 7, 7],"float32"), y=Tensor([40, 2048, 7, 7],"float32"), )
paddle.add(x=Tensor([4, 256, 304, 288],"float32"), y=Tensor([4, 256, 304, 288],"float32"), )
paddle.add(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), name="Cauchy_rsample", )
paddle.add(x=Tensor([4, 512, 120, 136],"float32"), y=Tensor([4, 512, 120, 136],"float32"), )
paddle.add(x=Tensor([4, 2048, 27, 31],"float32"), y=Tensor([4, 2048, 27, 31],"float32"), )
paddle.add(x=Tensor([4, 256, 293, 250],"float32"), y=Tensor([4, 256, 293, 250],"float32"), )
paddle.add(Tensor([8, 96, 38, 38],"float32"), Tensor([8, 96, 38, 38],"float32"), )
paddle.add(x=Tensor([8, 256, 320, 304],"float32"), y=Tensor([8, 256, 320, 304],"float32"), )
paddle.add(x=Tensor([4, 512, 132, 144],"float32"), y=Tensor([4, 512, 132, 144],"float32"), )
paddle.add_n(inputs=Tensor([1073741825, 4],"float16"), )
paddle.add_n(inputs=Tensor([4, 4, 67108865, 4],"float16"), )
paddle.add_n(Tensor([2, 103713700, 11],"float32"), )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 912681, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 16385, 32],"float16"),Tensor([64, 128, 16385, 32],"float16"),], )
paddle.add_n(list[Tensor([100, 22817014],"float32"),Tensor([100, 22817014],"float32"),], )
paddle.add_n(list[Tensor([64, 512, 16, 16],"float32"),Tensor([64, 512, 16, 16],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1291, 1767391],"float32"),Tensor([1291, 1767391],"float32"),], )
paddle.add_n(list[Tensor([64, 256, 16, 16],"float32"),Tensor([64, 256, 16, 16],"float32"),], )
paddle.add_n(list[Tensor([64, 512, 16, 16],"float16"),Tensor([64, 512, 16, 16],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 64, 4353],"float32"),Tensor([64, 128, 64, 4353],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(inputs=Tensor([4, 268435457, 4],"float16"), )
paddle.add_n(inputs=Tensor([4294967297],"float16"), )
paddle.add_n(list[Tensor([1291, 1767391],"float32"),Tensor([1291, 1],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(inputs=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([64, 8705, 64, 64],"float32"),Tensor([64, 8705, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 32, 32],"float32"),Tensor([64, 128, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([1800, 1267612],"float32"),Tensor([1800, 1267612],"float32"),], )
paddle.add_n(list[Tensor([8193, 128, 64, 64],"float16"),Tensor([8193, 128, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([107374183, 40],"float16"),Tensor([107374183, 40],"float16"),Tensor([107374183, 40],"float16"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(inputs=Tensor([4, 1073741825],"float16"), )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1200, 1],"float32"),Tensor([1200, 1901418],"float32"),], )
paddle.add_n(inputs=Tensor([2281701379],"int64"), )
paddle.add_n(inputs=Tensor([4, 4, 268435457],"float16"), )
paddle.add_n(list[Tensor([10, 1, 10, 5, 4563403],"float32"),Tensor([10, 1, 10, 5, 4563403],"float32"),Tensor([10, 1, 10, 5, 4563403],"float32"),], )
paddle.add_n(list[Tensor([10, 912681, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(Tensor([15955954, 13, 11],"float32"), )
paddle.add_n(list[Tensor([100, 22817014],"float32"),Tensor([100, 1],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 32, 32],"float16"),Tensor([64, 128, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([64, 34817, 32, 32],"float32"),Tensor([64, 34817, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([4353, 128, 64, 64],"float32"),Tensor([4353, 128, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([64, 256, 32, 32],"float32"),Tensor([64, 256, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 64, 8193],"float16"),Tensor([64, 128, 64, 8193],"float16"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([64, 16385, 64, 64],"float16"),Tensor([64, 16385, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 8705, 32],"float32"),Tensor([64, 128, 8705, 32],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([64, 64, 64, 64],"float32"),Tensor([64, 64, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([64, 256, 16, 16],"float16"),Tensor([64, 256, 16, 16],"float16"),], )
paddle.add_n(inputs=Tensor([2281701379],"int32"), )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1073741825, 4],"float16"),Tensor([1073741825, 4],"float16"),Tensor([1073741825, 4],"float16"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1200, 1901418],"float32"),Tensor([1200, 1],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([17409, 128, 32, 32],"float32"),Tensor([17409, 128, 32, 32],"float32"),], )
paddle.add_n(list[Tensor([1291, 1],"float32"),Tensor([1291, 1767391],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([64, 65537, 32, 32],"float16"),Tensor([64, 65537, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.add_n(list[Tensor([64, 512, 8, 8],"float16"),Tensor([64, 512, 8, 8],"float16"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.add_n(inputs=Tensor([268435457, 4, 4],"float16"), )
paddle.add_n(inputs=Tensor([4, 4, 4, 67108865],"float16"), )
paddle.add_n(list[Tensor([64, 128, 4353, 64],"float32"),Tensor([64, 128, 4353, 64],"float32"),], )
paddle.add_n(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.add_n(inputs=Tensor([2281701379],"float32"), )
paddle.add_n(list[Tensor([64, 256, 32, 32],"float16"),Tensor([64, 256, 32, 32],"float16"),], )
paddle.add_n(list[Tensor([10, 1, 10, 4563403, 5],"float32"),Tensor([10, 1, 10, 4563403, 5],"float32"),Tensor([10, 1, 10, 4563403, 5],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 32, 16385],"float16"),Tensor([64, 128, 32, 16385],"float16"),], )
paddle.add_n(list[Tensor([64, 512, 8, 8],"float32"),Tensor([64, 512, 8, 8],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 9126806, 5, 5],"float32"),Tensor([10, 1, 9126806, 5, 5],"float32"),Tensor([10, 1, 9126806, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 64, 64],"float16"),Tensor([64, 128, 64, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 128, 32, 8705],"float32"),Tensor([64, 128, 32, 8705],"float32"),], )
paddle.add_n(list[Tensor([4, 1073741825],"float16"),Tensor([4, 1073741825],"float16"),Tensor([4, 1073741825],"float16"),], )
paddle.add_n(list[Tensor([9126806, 1, 10, 5, 5],"float32"),Tensor([9126806, 1, 10, 5, 5],"float32"),Tensor([9126806, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.add_n(list[Tensor([10, 1, 10, 5, 5],"float32"),Tensor([10, 912681, 10, 5, 5],"float32"),Tensor([10, 1, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([100, 1],"float32"),Tensor([100, 22817014],"float32"),], )
paddle.add_n(list[Tensor([32769, 128, 32, 32],"float16"),Tensor([32769, 128, 32, 32],"float16"),], )
paddle.add_n(inputs=Tensor([67108865, 4, 4, 4],"float16"), )
paddle.add_n(list[Tensor([64, 128, 64, 64],"float32"),Tensor([64, 128, 64, 64],"float32"),], )
paddle.add_n(list[Tensor([1800, 1],"float32"),Tensor([1800, 1267612],"float32"),], )
paddle.add_n(list[Tensor([10, 912681, 10, 5, 5],"float32"),Tensor([10, 912681, 10, 5, 5],"float32"),Tensor([10, 912681, 10, 5, 5],"float32"),], )
paddle.add_n(list[Tensor([1200, 1901418],"float32"),Tensor([1200, 1901418],"float32"),], )
paddle.add_n(list[Tensor([64, 128, 8193, 64],"float16"),Tensor([64, 128, 8193, 64],"float16"),], )
paddle.add_n(list[Tensor([64, 64, 64, 64],"float16"),Tensor([64, 64, 64, 64],"float16"),], )
paddle.add_n(Tensor([2, 13, 87757746],"float32"), )
paddle.add_n(list[Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),], )
paddle.add_n(list[Tensor([1800, 1267612],"float32"),Tensor([1800, 1],"float32"),], )
paddle.addmm(input=Tensor([1, 1],"float16"), x=Tensor([5, 858993460],"float16"), y=Tensor([858993460, 5],"float16"), beta=-3.3, alpha=3.3, )
paddle.addmm(Tensor([11008, 768],"float16"), Tensor([11008, 390168],"float16"), Tensor([390168, 768],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(input=Tensor([5, 5],"float16"), x=Tensor([5, 858993460],"float16"), y=Tensor([858993460, 5],"float16"), beta=0, alpha=0, )
paddle.addmm(Tensor([67108865, 64],"float16"), Tensor([67108865, 8],"float16"), Tensor([8, 64],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(Tensor([390168, 11008],"float16"), Tensor([390168, 8],"float16"), Tensor([8, 11008],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(Tensor([45634028, 50],"float32"), Tensor([45634028, 80],"float32"), Tensor([80, 50],"float32"), alpha=1.0, beta=2.0, )
paddle.addmm(Tensor([768, 768],"float16"), Tensor([768, 5592406],"float16"), Tensor([5592406, 768],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(Tensor([64, 32],"float16"), Tensor([64, 67108865],"float16"), Tensor([67108865, 32],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(Tensor([64, 192],"float16"), Tensor([64, 22369622],"float16"), Tensor([22369622, 192],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(Tensor([30, 28521268],"float32"), Tensor([30, 80],"float32"), Tensor([80, 28521268],"float32"), alpha=1.0, beta=2.0, )
paddle.addmm(Tensor([32, 134217729],"float16"), Tensor([32, 8],"float16"), Tensor([8, 134217729],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(Tensor([30, 50],"float32"), Tensor([30, 76056713],"float32"), Tensor([76056713, 50],"float32"), alpha=1.0, beta=2.0, )
paddle.addmm(input=Tensor([5, 5],"float16"), x=Tensor([5, 858993460],"float16"), y=Tensor([858993460, 5],"float16"), beta=0.5, alpha=0, )
paddle.addmm(input=Tensor([5, 5],"float16"), x=Tensor([5, 858993460],"float16"), y=Tensor([858993460, 5],"float16"), beta=0.5, alpha=5.0, )
paddle.addmm(Tensor([11008, 390168],"float16"), Tensor([11008, 8],"float16"), Tensor([8, 390168],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(input=Tensor([5, 1],"float16"), x=Tensor([5, 4],"float16"), y=Tensor([4, 1073741825],"float16"), beta=-3.3, alpha=3.3, )
paddle.addmm(Tensor([32, 64],"float16"), Tensor([32, 67108865],"float16"), Tensor([67108865, 64],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(input=Tensor([1, 1],"float16"), x=Tensor([1073741825, 4],"float16"), y=Tensor([4, 5],"float16"), beta=-3.3, alpha=3.3, )
paddle.addmm(Tensor([768, 11008],"float16"), Tensor([768, 390168],"float16"), Tensor([390168, 11008],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(input=Tensor([5, 5],"float16"), x=Tensor([5, 858993460],"float16"), y=Tensor([858993460, 5],"float16"), beta=0.5, alpha=-3.3, )
paddle.addmm(input=Tensor([5, 1],"float16"), x=Tensor([5, 858993460],"float16"), y=Tensor([858993460, 5],"float16"), beta=-3.3, alpha=3.3, )
paddle.addmm(Tensor([64, 64],"float16"), Tensor([64, 67108865],"float16"), Tensor([67108865, 64],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(input=Tensor([5, 5],"float16"), x=Tensor([5, 858993460],"float16"), y=Tensor([858993460, 5],"float16"), )
paddle.addmm(Tensor([30, 50],"float32"), Tensor([30, 45634028],"float32"), Tensor([45634028, 50],"float32"), alpha=1.0, beta=2.0, )
paddle.addmm(Tensor([134217729, 32],"float16"), Tensor([134217729, 8],"float16"), Tensor([8, 32],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(Tensor([22369622, 192],"float16"), Tensor([22369622, 8],"float16"), Tensor([8, 192],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(Tensor([28521268, 50],"float32"), Tensor([28521268, 80],"float32"), Tensor([80, 50],"float32"), alpha=1.0, beta=2.0, )
paddle.addmm(Tensor([64, 67108865],"float16"), Tensor([64, 8],"float16"), Tensor([8, 67108865],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(Tensor([5592406, 768],"float16"), Tensor([5592406, 8],"float16"), Tensor([8, 768],"float16"), beta=1.0, alpha=2.0, )
paddle.addmm(input=Tensor([1, 1],"float16"), x=Tensor([5, 4],"float16"), y=Tensor([4, 1073741825],"float16"), beta=-3.3, alpha=3.3, )
paddle.addmm(input=Tensor([5, 5],"float16"), x=Tensor([5, 858993460],"float16"), y=Tensor([858993460, 5],"float16"), beta=0, alpha=-3.3, )
paddle.addmm(input=Tensor([5, 5],"float16"), x=Tensor([5, 858993460],"float16"), y=Tensor([858993460, 5],"float16"), beta=-0.7, alpha=-3.3, )
paddle.addmm(Tensor([768, 5592406],"float16"), Tensor([768, 8],"float16"), Tensor([8, 5592406],"float16"), beta=1.0, alpha=2.0, )
paddle.all(x=Tensor([285212673, 4, 2],"bool"), )
paddle.all(Tensor([3, 760567127],"bool"), axis=None, )
paddle.all(Tensor([13, 175515491],"bool"), )
paddle.all(Tensor([2281701379],"bool"), axis=0, )
paddle.all(x=Tensor([2, 4, 142606337, 2],"bool"), )
paddle.all(Tensor([5, 6, 76056713],"bool"), None, False, None, )
paddle.all(Tensor([3, 760567127],"bool"), )
paddle.all(Tensor([228170138, 10],"bool"), axis=-1, )
paddle.all(x=Tensor([2, 142606337, 4, 2],"bool"), )
paddle.all(Tensor([5, 6, 76056713],"int64"), None, False, None, )
paddle.all(x=Tensor([71303169, 4, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.all(x=Tensor([3, 4, 190141782],"bool"), )
paddle.all(x=Tensor([10, 228170138],"bool"), )
paddle.all(Tensor([2281701379, 1],"bool"), )
paddle.all(x=Tensor([228170138, 10],"bool"), )
paddle.all(x=Tensor([3, 380283564, 2],"bool"), )
paddle.all(Tensor([38028357, 6, 10],"int64"), None, False, None, )
paddle.all(x=Tensor([71303169, 4, 4, 2],"bool"), axis=1, )
paddle.all(Tensor([228170138, 10],"int64"), )
paddle.all(x=Tensor([2281701379],"bool"), )
paddle.all(Tensor([2, 3, 4, 95070891],"bool"), )
paddle.all(Tensor([570425345, 4],"bool"), )
paddle.all(Tensor([2281701379],"bool"), )
paddle.all(x=Tensor([2, 142606337, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.all(Tensor([2, 57042535, 4, 5],"bool"), )
paddle.all(Tensor([2, 3, 76056713, 5],"bool"), )
paddle.all(x=Tensor([2, 4, 4, 71303169],"bool"), axis=1, )
paddle.all(x=Tensor([2, 4, 142606337, 2],"bool"), axis=1, )
paddle.all(Tensor([12, 190141782],"int64"), )
paddle.all(Tensor([3, 760567127],"bool"), keepdim=True, )
paddle.all(Tensor([228170138, 10],"bool"), )
paddle.all(Tensor([456340276, 5],"bool"), axis=None, )
paddle.all(Tensor([1, 2281701379],"bool"), )
paddle.all(Tensor([12, 190141782],"bool"), )
paddle.all(Tensor([38028357, 6, 10],"bool"), None, False, None, )
paddle.all(Tensor([2281701379],"bool"), axis=-1, )
paddle.all(x=Tensor([2, 4, 4, 71303169],"bool"), axis=tuple(0,1,), )
paddle.all(Tensor([2, 1140850690],"bool"), )
paddle.all(x=Tensor([2, 4, 4, 71303169],"bool"), )
paddle.all(Tensor([38028357, 3, 4, 5],"bool"), )
paddle.all(Tensor([12, 190141782],"bool"), axis=0, )
paddle.all(Tensor([1140850690, 2],"bool"), )
paddle.all(Tensor([57042535, 40],"bool"), )
paddle.all(x=Tensor([2, 4, 142606337, 2],"bool"), axis=tuple(0,1,), )
paddle.all(Tensor([4, 570425345],"bool"), )
paddle.all(Tensor([5, 45634028, 10],"bool"), None, False, None, )
paddle.all(x=Tensor([2, 142606337, 4, 2],"bool"), axis=1, )
paddle.all(Tensor([228170138, 10],"bool"), axis=1, keepdim=True, )
paddle.all(x=Tensor([570425345, 4],"bool"), keepdim=True, )
paddle.all(Tensor([253522376, 9],"bool"), )
paddle.all(Tensor([12, 190141782],"bool"), axis=1, keepdim=True, )
paddle.all(Tensor([456340276, 5],"bool"), keepdim=True, )
paddle.all(Tensor([228170138, 10],"bool"), axis=0, )
paddle.all(x=Tensor([71303169, 4, 4, 2],"bool"), )
paddle.all(Tensor([5, 45634028, 10],"int64"), None, False, None, )
paddle.all(Tensor([285212673, 8],"bool"), )
paddle.all(x=Tensor([2, 1140850690],"bool"), keepdim=True, )
paddle.all(Tensor([8, 285212673],"bool"), )
paddle.all(Tensor([456340276, 5],"bool"), )
paddle.all(Tensor([12, 190141782],"bool"), axis=-1, )
paddle.allclose(Tensor([1, 71303169, 32],"float32"), Tensor([1, 71303169, 32],"float32"), atol=1e-05, )
paddle.allclose(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.allclose(Tensor([16, 142606337],"float32"), Tensor([16, 142606337],"float32"), )
paddle.allclose(Tensor([570426, 20, 200],"float32"), Tensor([570426, 20, 200],"float32"), )
paddle.allclose(Tensor([1, 5, 456340276],"float32"), Tensor([1, 5, 456340276],"float32"), atol=1e-05, )
paddle.allclose(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), rtol=0.015, atol=0.0, name="test_8", )
paddle.allclose(Tensor([13, 32, 5484860],"float32"), Tensor([13, 32, 5484860],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), atol=0.0001, rtol=0.0001, )
paddle.allclose(Tensor([2228225, 64, 16],"float32"), Tensor([2228225, 64, 16],"float32"), atol=1e-05, )
paddle.allclose(Tensor([2228225, 32, 32],"float32"), Tensor([2228225, 32, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([4, 570425345],"float32"), Tensor([4, 570425345],"float32"), atol=1e-06, )
paddle.allclose(Tensor([5484860, 13, 32],"float32"), Tensor([5484860, 13, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=0.0001, )
paddle.allclose(Tensor([13, 5484860, 32],"float32"), Tensor([13, 5484860, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(x=Tensor([2, 357913942, 2, 3],"float16"), y=Tensor([2, 357913942, 2, 3],"float16"), rtol=-3.0, atol=-2.0, )
paddle.allclose(x=Tensor([357913942, 2, 2, 3],"float16"), y=Tensor([357913942, 2, 2, 3],"float16"), )
paddle.allclose(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), rtol=1e-05, atol=1e-08, )
paddle.allclose(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), 50.0, 49.0, False, )
paddle.allclose(Tensor([71303169, 32],"float32"), Tensor([71303169, 32],"float32"), )
paddle.allclose(Tensor([142606337, 16],"float32"), Tensor([142606337, 16],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), atol=0.001, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_3", )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=0.01, atol=0.0, name="test_7", )
paddle.allclose(Tensor([2281701379],"bool"), Tensor([2281701379],"bool"), 0.0, 0.0, False, )
paddle.allclose(Tensor([14, 162978670],"float32"), Tensor([14, 162978670],"float32"), atol=0.001, )
paddle.allclose(Tensor([64, 35651585],"float32"), Tensor([64, 35651585],"float32"), atol=1e-05, rtol=1e-05, )
paddle.allclose(Tensor([1, 71303169, 32],"float32"), Tensor([1, 71303169, 32],"float32"), )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=1e-06, atol=0.001, equal_nan=False, )
paddle.allclose(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([14, 10186167, 16],"float32"), Tensor([14, 10186167, 16],"float32"), atol=1e-05, )
paddle.allclose(x=Tensor([2, 2, 357913942, 3],"float16"), y=Tensor([2, 2, 357913942, 3],"float16"), rtol=-3.0, atol=-2.0, )
paddle.allclose(Tensor([2, 3, 47535446, 8],"float32"), Tensor([2, 3, 47535446, 8],"float32"), )
paddle.allclose(x=Tensor([357913942, 2, 2, 3],"float16"), y=Tensor([357913942, 2, 2, 3],"float16"), rtol=-3.0, atol=-2.0, )
paddle.allclose(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), atol=0.001, )
paddle.allclose(Tensor([13, 5484860, 32],"float32"), Tensor([13, 5484860, 32],"float32"), atol=0.0001, )
paddle.allclose(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), 50.0, 48.0, False, )
paddle.allclose(Tensor([10186167, 7, 32],"float32"), Tensor([10186167, 7, 32],"float32"), )
paddle.allclose(Tensor([13, 13, 13501192],"float32"), Tensor([13, 13, 13501192],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([8912897, 64, 4],"float32"), Tensor([8912897, 64, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=0.5, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(x=Tensor([2, 2, 2, 536870913],"float16"), y=Tensor([2, 2, 2, 536870913],"float16"), )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=0.01, atol=0.0, equal_nan=False, )
paddle.allclose(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=1e-06, )
paddle.allclose(Tensor([285212673, 8],"float32"), Tensor([285212673, 8],"float32"), atol=1e-06, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=1e-05, atol=0.001, equal_nan=True, )
paddle.allclose(Tensor([13, 7, 25073642],"float32"), Tensor([13, 7, 25073642],"float32"), )
paddle.allclose(Tensor([13, 175515491],"float32"), Tensor([13, 175515491],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([13, 175515491],"float32"), Tensor([13, 175515491],"float32"), atol=0.001, )
paddle.allclose(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), 50.0, 49.0, False, )
paddle.allclose(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), 50.0, 48.0, False, )
paddle.allclose(Tensor([13, 1371215, 128],"float32"), Tensor([13, 1371215, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([2, 3, 8, 47535446],"float32"), Tensor([2, 3, 8, 47535446],"float32"), )
paddle.allclose(Tensor([13, 175515491],"float32"), Tensor([13, 175515491],"float32"), atol=0.01, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), atol=0.001, )
paddle.allclose(Tensor([13, 8, 21939437],"float32"), Tensor([13, 8, 21939437],"float32"), atol=0.0001, )
paddle.allclose(Tensor([14260634, 5, 32],"float32"), Tensor([14260634, 5, 32],"float32"), atol=1e-05, )
paddle.allclose(Tensor([71303169, 32],"float32"), Tensor([71303169, 32],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([1, 20, 114085069],"float32"), Tensor([1, 20, 114085069],"float32"), )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=1e-05, atol=0.001, equal_nan=False, )
paddle.allclose(Tensor([2, 17825793, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), )
paddle.allclose(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), atol=0.0001, )
paddle.allclose(Tensor([14, 40744668, 4],"float32"), Tensor([14, 40744668, 4],"float32"), atol=1e-05, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_1", )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=1e-06, atol=0.001, equal_nan=True, )
paddle.allclose(Tensor([8912897, 8, 32],"float32"), Tensor([8912897, 8, 32],"float32"), atol=0.0001, )
paddle.allclose(x=Tensor([2, 2, 357913942, 3],"float16"), y=Tensor([2, 2, 357913942, 3],"float16"), )
paddle.allclose(Tensor([285212673, 8],"float32"), Tensor([285212673, 8],"float32"), atol=1e-06, rtol=1e-06, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=False, name="test_5", )
paddle.allclose(Tensor([11883862, 3, 8, 8],"float32"), Tensor([11883862, 3, 8, 8],"float32"), )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.allclose(Tensor([175515491, 13],"float32"), Tensor([175515491, 13],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([3565159, 20, 32],"float32"), Tensor([3565159, 20, 32],"float32"), )
paddle.allclose(Tensor([13, 5484860, 32],"float32"), Tensor([13, 5484860, 32],"float32"), )
paddle.allclose(Tensor([142606337, 16],"float32"), Tensor([142606337, 16],"float32"), )
paddle.allclose(Tensor([1, 11408507, 200],"float32"), Tensor([1, 11408507, 200],"float32"), )
paddle.allclose(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), atol=1e-06, )
paddle.allclose(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), atol=0.01, )
paddle.allclose(Tensor([1371215, 13, 128],"float32"), Tensor([1371215, 13, 128],"float32"), rtol=0.0001, atol=0.0001, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_6", )
paddle.allclose(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), atol=0.001, )
paddle.allclose(Tensor([14, 64, 2546542],"float32"), Tensor([14, 64, 2546542],"float32"), atol=1e-05, )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_2", )
paddle.allclose(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), rtol=1e-05, atol=1e-08, equal_nan=True, name="test_4", )
paddle.allclose(x=Tensor([2, 2, 2, 536870913],"float16"), y=Tensor([2, 2, 2, 536870913],"float16"), rtol=-3.0, atol=-2.0, )
paddle.allclose(Tensor([456340276, 5],"float32"), Tensor([456340276, 5],"float32"), atol=1e-06, )
paddle.allclose(x=Tensor([2, 357913942, 2, 3],"float16"), y=Tensor([2, 357913942, 2, 3],"float16"), )
paddle.allclose(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), rtol=1e-05, atol=1e-08, )
paddle.allclose(Tensor([1124, 2029984],"float32"), Tensor([1124, 2029984],"float32"), )
paddle.allclose(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), atol=0.0001, )
paddle.allclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), rtol=0.01, atol=0.01, equal_nan=False, )
paddle.amax(Tensor([10, 22817014, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amax(Tensor([10, 10, 22817014],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amax(Tensor([10, 22817014, 10],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amax(Tensor([2281701379],"float32"), keepdim=True, )
paddle.amax(Tensor([570425345, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([570425345, 2, 2],"int32"), tuple(0,1,), False, )
paddle.amax(Tensor([10, 10, 22817014],"float32"), keepdim=True, )
paddle.amax(Tensor([10, 10, 22817014],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([10, 10, 22817014],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amax(Tensor([2281701379],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([10, 22817014, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amax(Tensor([10, 22817014, 10],"float32"), keepdim=True, )
paddle.amax(Tensor([3, 760567127],"float32"), axis=None, )
paddle.amax(Tensor([114085069, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([3, 2, 76056713, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([22817014, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amax(Tensor([3, 2, 4, 95070891],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([2, 5, 228170138],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.amax(Tensor([2, 570425345, 2],"int32"), tuple(0,1,), False, )
paddle.amax(Tensor([22817014, 10, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amax(Tensor([22817014, 10, 10],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amax(Tensor([2, 2, 570425345],"int32"), tuple(0,1,), False, )
paddle.amax(Tensor([3, 2, 95070891, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([2, 285212673, 4],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([2281701379],"int64"), axis=None, keepdim=False, )
paddle.amax(Tensor([2281701379],"int32"), axis=None, keepdim=False, )
paddle.amax(Tensor([2281701379],"float32"), axis=0, )
paddle.amax(Tensor([2, 1140850690],"float32"), axis=None, keepdim=False, )
paddle.amax(Tensor([22817014, 10, 10],"float32"), keepdim=True, )
paddle.amax(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.amax(Tensor([10, 10, 22817014],"float32"), keepdim=False, )
paddle.amax(Tensor([456340276, 5],"float32"), axis=None, )
paddle.amax(Tensor([3, 2, 5, 76056713],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([10, 22817014, 10],"float32"), keepdim=False, )
paddle.amax(Tensor([57042535, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amax(Tensor([22817014, 10, 10],"float32"), keepdim=False, )
paddle.amax(Tensor([3, 38028357, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([3, 38028357, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([57042535, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([2281701379],"int32"), axis=None, keepdim=False, )
paddle.amin(Tensor([22817014, 10, 10],"float32"), keepdim=False, )
paddle.amin(Tensor([10, 22817014, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([3, 760567127],"float32"), axis=None, )
paddle.amin(Tensor([570425345, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([3, 38028357, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([10, 10, 22817014],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amin(Tensor([10, 22817014, 10],"float32"), keepdim=True, )
paddle.amin(Tensor([22817014, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amin(Tensor([2281701379],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([2, 2, 570425345],"int32"), tuple(0,1,), False, )
paddle.amin(Tensor([10, 10, 22817014],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amin(Tensor([2, 1140850690],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([114085069, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([2281701379],"float32"), keepdim=True, )
paddle.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([57042535, 2, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([57042535, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([2281701379],"float32"), axis=0, )
paddle.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([456340276, 5],"float32"), axis=None, )
paddle.amin(Tensor([3, 2, 76056713, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([10, 10, 22817014],"float32"), keepdim=False, )
paddle.amin(Tensor([10, 10, 22817014],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amin(Tensor([570425345, 2, 2],"int32"), tuple(0,1,), False, )
paddle.amin(Tensor([2, 570425345, 2],"int32"), tuple(0,1,), False, )
paddle.amin(Tensor([10, 22817014, 10],"float32"), keepdim=False, )
paddle.amin(Tensor([3, 2, 4, 95070891],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([2, 5, 228170138],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([2281701379],"int64"), axis=None, keepdim=False, )
paddle.amin(Tensor([3, 2, 5, 76056713],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([10, 22817014, 10],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amin(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.amin(Tensor([3, 2, 95070891, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([22817014, 10, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amin(Tensor([10, 22817014, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amin(Tensor([2, 285212673, 4],"float32"), axis=None, keepdim=False, )
paddle.amin(Tensor([22817014, 10, 10],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amin(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.amin(Tensor([10, 10, 22817014],"float32"), keepdim=True, )
paddle.amin(Tensor([3, 38028357, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([22817014, 10, 10],"float32"), keepdim=True, )
paddle.any(Tensor([456340276, 5],"bool"), keepdim=True, )
paddle.any(Tensor([57042535, 2, 4, 5],"bool"), )
paddle.any(x=Tensor([2, 1140850690],"bool"), keepdim=True, )
paddle.any(Tensor([228170138, 10],"bool"), axis=-1, )
paddle.any(Tensor([3, 760567127],"bool"), axis=None, )
paddle.any(Tensor([228170138, 10],"bool"), )
paddle.any(Tensor([12, 190141782],"bool"), axis=0, )
paddle.any(Tensor([1, 2281701379],"bool"), )
paddle.any(Tensor([1124, 2029984],"bool"), )
paddle.any(Tensor([134217729, 17],"bool"), )
paddle.any(Tensor([5, 45634028, 10],"int64"), None, False, None, )
paddle.any(x=Tensor([2, 142606337, 4, 2],"bool"), axis=1, )
paddle.any(Tensor([13, 175515491],"bool"), )
paddle.any(Tensor([5, 6, 76056713],"int64"), None, False, None, )
paddle.any(Tensor([10, 2, 114085069],"bool"), )
paddle.any(Tensor([1140850690, 2],"bool"), )
paddle.any(Tensor([12, 190141782],"bool"), axis=1, keepdim=True, )
paddle.any(Tensor([456340276, 5],"bool"), axis=None, )
paddle.any(x=Tensor([3, 4, 190141782],"bool"), )
paddle.any(x=Tensor([2, 142606337, 4, 2],"bool"), )
paddle.any(Tensor([12, 190141782],"bool"), axis=-1, )
paddle.any(Tensor([2281701379],"bool"), axis=0, )
paddle.any(x=Tensor([2, 142606337, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.any(Tensor([6, 2, 4, 47535446],"bool"), )
paddle.any(Tensor([2281701379, 1],"bool"), )
paddle.any(x=Tensor([2, 4, 142606337, 2],"bool"), )
paddle.any(Tensor([1857, 300, 4096],"bool"), )
paddle.any(Tensor([2281701379],"bool"), )
paddle.any(Tensor([2, 4, 285212673],"bool"), )
paddle.any(x=Tensor([2, 4, 4, 71303169],"bool"), axis=tuple(0,1,), )
paddle.any(x=Tensor([228170138, 10],"bool"), )
paddle.any(Tensor([228170138, 10],"float32"), )
paddle.any(Tensor([38028357, 6, 10],"bool"), None, False, None, )
paddle.any(Tensor([2, 1140850690],"bool"), )
paddle.any(Tensor([6, 2, 38028357, 5],"bool"), )
paddle.any(Tensor([228170138, 10],"bool"), axis=0, )
paddle.any(Tensor([152113426, 15],"bool"), )
paddle.any(Tensor([114085069, 4, 5],"bool"), )
paddle.any(Tensor([12, 190141782],"float32"), )
paddle.any(x=Tensor([570425345, 4],"bool"), keepdim=True, )
paddle.any(Tensor([228170138, 10],"int64"), )
paddle.any(Tensor([1140850690, 2],"bool"), list[0,], )
paddle.any(x=Tensor([10, 228170138],"bool"), )
paddle.any(x=Tensor([2, 4, 4, 71303169],"bool"), )
paddle.any(x=Tensor([2, 4, 4, 71303169],"bool"), axis=1, )
paddle.any(Tensor([1140850690, 2, 1],"bool"), )
paddle.any(Tensor([12, 190141782],"int64"), )
paddle.any(Tensor([3, 760567127],"bool"), keepdim=True, )
paddle.any(x=Tensor([2, 4, 142606337, 2],"bool"), axis=tuple(0,1,), )
paddle.any(x=Tensor([2281701379],"bool"), )
paddle.any(Tensor([760567127, 3],"bool"), )
paddle.any(x=Tensor([71303169, 4, 4, 2],"bool"), axis=tuple(0,1,), )
paddle.any(Tensor([12, 190141782],"bool"), )
paddle.any(Tensor([10, 228170138, 1],"bool"), )
paddle.any(Tensor([207427399, 11],"bool"), )
paddle.any(Tensor([5, 6, 76056713],"bool"), None, False, None, )
paddle.any(Tensor([6, 19014179, 4, 5],"bool"), )
paddle.any(Tensor([71303169, 32],"bool"), )
paddle.any(Tensor([16, 142606337],"bool"), )
paddle.any(Tensor([2, 1140850690],"bool"), list[0,], )
paddle.any(x=Tensor([285212673, 4, 2],"bool"), )
paddle.any(Tensor([10, 228170138],"bool"), )
paddle.any(Tensor([114085069, 20],"bool"), )
paddle.any(Tensor([1, 557057, 4096],"bool"), )
paddle.any(x=Tensor([3, 380283564, 2],"bool"), )
paddle.any(Tensor([2, 228170138, 5],"bool"), )
paddle.any(Tensor([5, 45634028, 10],"bool"), None, False, None, )
paddle.any(Tensor([142606337, 16],"bool"), )
paddle.any(Tensor([228170138, 10],"bool"), axis=1, keepdim=True, )
paddle.any(Tensor([1, 300, 4096],"bool"), )
paddle.any(Tensor([1, 300, 7605672],"bool"), )
paddle.any(Tensor([38028357, 6, 10],"int64"), None, False, None, )
paddle.any(x=Tensor([71303169, 4, 4, 2],"bool"), )
paddle.any(Tensor([325957340, 7],"bool"), )
paddle.any(x=Tensor([71303169, 4, 4, 2],"bool"), axis=1, )
paddle.any(x=Tensor([2, 4, 142606337, 2],"bool"), axis=1, )
paddle.argmax(Tensor([13, 175515491],"float32"), axis=-1, )
paddle.argmax(Tensor([1, 2, 800, 1158],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1269, 2, 800, 1124],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([3, 3, 3, 3, 17674763, 3],"float16"), axis=0, )
paddle.argmax(Tensor([1, 2, 800, 1249],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([29151, 2303, 64],"float16"), axis=1, )
paddle.argmax(Tensor([1, 4294967297],"float16"), axis=-1, )
paddle.argmax(x=Tensor([286331154, 3, 5],"float16"), axis=2, dtype=type(numpy.int64), )
paddle.argmax(Tensor([228170138, 10],"float32"), )
paddle.argmax(Tensor([13, 2, 4, 10969719, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([1309, 2, 800, 1090],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 1211],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1342178, 100, 32],"float16"), axis=1, )
paddle.argmax(Tensor([12988, 32, 10334],"float16"), axis=1, )
paddle.argmax(Tensor([29151, 100, 1474],"float16"), axis=1, )
paddle.argmax(Tensor([13, 2, 2742430, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([5, 5, 5, 34359739],"float16"), axis=0, )
paddle.argmax(Tensor([1, 2, 1100146, 1037],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([10, 228170138],"float32"), )
paddle.argmax(Tensor([4, 4, 4, 4, 16777217],"float16"), axis=0, )
paddle.argmax(Tensor([134218, 32000],"float16"), axis=-1, )
paddle.argmax(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.argmax(x=Tensor([715827883, 3, 2, 1],"float16"), axis=-1, dtype="int64", )
paddle.argmax(Tensor([3, 17674763, 3, 3, 3, 3],"float16"), axis=0, )
paddle.argmax(Tensor([1320, 2, 800, 1081],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([10, 228170138],"float32"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([1, 2, 2228225, 512],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(x=Tensor([2, 1140850690],"int64"), axis=-1, )
paddle.argmax(Tensor([1, 2, 800, 1188],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([2281701379],"float32"), 0, )
paddle.argmax(Tensor([4493, 2, 496, 512],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([3, 3, 3, 3, 3, 17674763],"float16"), axis=0, )
paddle.argmax(Tensor([13, 1371215, 4, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([12988, 32, 5490],"float32"), axis=1, )
paddle.argmax(Tensor([29151, 1223, 64],"float32"), axis=1, )
paddle.argmax(x=Tensor([760567127, 3],"int64"), dtype="int32", )
paddle.argmax(Tensor([1, 8985, 496, 512],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([713032, 100, 32],"float32"), axis=1, )
paddle.argmax(Tensor([80239, 20, 64],"float32"), axis=1, )
paddle.argmax(Tensor([4, 16777217, 4, 4, 4],"float16"), axis=0, )
paddle.argmax(Tensor([1, 2, 800, 639],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 1019527, 1119],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 1261],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2674, 800, 1067],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 1198],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([34359739, 5, 5, 5],"float16"), axis=0, )
paddle.argmax(Tensor([80239, 445, 64],"float32"), axis=1, )
paddle.argmax(x=Tensor([760567127, 3],"int64"), axis=Tensor([1],"int64"), )
paddle.argmax(Tensor([1, 2, 800, 1166],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([3292499, 7, 99],"float32"), axis=-1, )
paddle.argmax(Tensor([23047489, 99],"float32"), axis=-1, )
paddle.argmax(x=Tensor([3, 3, 477218589],"float16"), axis=1, keepdim=False, )
paddle.argmax(x=Tensor([3, 760567127],"int64"), keepdim=None, )
paddle.argmax(x=Tensor([3, 357913942, 4],"float16"), axis=1, keepdim=False, )
paddle.argmax(Tensor([170628, 787, 32],"float16"), axis=1, )
paddle.argmax(Tensor([1, 2, 1055367, 1081],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 3051],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 645],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 1208],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 849],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(x=Tensor([760567127, 3],"int64"), axis=-1, )
paddle.argmax(Tensor([3, 3, 3, 17674763, 3, 3],"float16"), axis=0, )
paddle.argmax(Tensor([1, 2, 800, 1200],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([16, 1024, 262145],"float16"), -1, )
paddle.argmax(Tensor([1, 2, 800, 1590],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([4, 4, 4, 16777217, 4],"float16"), axis=0, )
paddle.argmax(x=Tensor([2281701379],"int64"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([1, 2, 800, 1424],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([80239, 889, 32],"float32"), axis=1, )
paddle.argmax(Tensor([1, 2, 1114113, 1024],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 800, 1197],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1376, 2, 800, 1037],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([71304, 32000],"float32"), axis=-1, )
paddle.argmax(Tensor([29151, 100, 64],"float32"), axis=1, )
paddle.argmax(Tensor([228170138, 10],"float32"), axis=-1, )
paddle.argmax(x=Tensor([477218589, 3, 3],"float16"), )
paddle.argmax(Tensor([1089, 2, 1024, 1024],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(x=Tensor([2281701379, 1],"int64"), keepdim=None, )
paddle.argmax(Tensor([3, 3, 17674763, 3, 3, 3],"float16"), axis=0, )
paddle.argmax(Tensor([8912897, 2, 4, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([1, 2, 800, 1081],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([29151, 100, 783],"float32"), axis=1, )
paddle.argmax(Tensor([12988, 5167, 64],"float16"), axis=1, )
paddle.argmax(Tensor([2, 1140850690],"float32"), axis=-1, )
paddle.argmax(Tensor([2097153, 32, 64],"float16"), axis=1, )
paddle.argmax(Tensor([1275, 2, 800, 1119],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([13, 1772884, 99],"float32"), axis=-1, )
paddle.argmax(Tensor([1, 2, 800, 1426064],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([1, 2, 1069214, 1067],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([10, 228170138],"float32"), axis=1, )
paddle.argmax(Tensor([1, 2, 800, 1119],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([16777217, 4, 4, 4, 4],"float16"), axis=0, )
paddle.argmax(Tensor([22817014, 100],"float32"), axis=-1, )
paddle.argmax(Tensor([3, 760567127],"float32"), )
paddle.argmax(Tensor([1, 8705, 512, 512],"float32"), axis=1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([8912897, 256],"float32"), axis=-1, )
paddle.argmax(Tensor([1, 8, 14, 20372334],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([5, 5, 34359739, 5],"float16"), axis=0, )
paddle.argmax(Tensor([4148, 30, 18336],"float32"), axis=-1, )
paddle.argmax(Tensor([2, 536870913, 4],"float16"), axis=-1, keepdim=True, )
paddle.argmin(x=Tensor([3, 286331154, 5],"float16"), axis=2, dtype=type(numpy.int64), )
paddle.argmin(Tensor([34359739, 5, 5, 5],"float16"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 3, 17674763, 3],"float16"), axis=0, )
paddle.argmin(x=Tensor([3, 1431655766],"float16"), axis=0, dtype=type(numpy.int32), keepdim=False, )
paddle.argmin(x=Tensor([3, 3, 477218589],"float16"), )
paddle.argmin(x=Tensor([2281701379],"int64"), axis=-1, keepdim=True, )
paddle.argmin(x=Tensor([477218589, 3, 3],"float16"), )
paddle.argmin(Tensor([3, 17674763, 3, 3, 3, 3],"float16"), axis=0, )
paddle.argmin(Tensor([2281701379],"float32"), 0, )
paddle.argmin(Tensor([17674763, 3, 3, 3, 3, 3],"float16"), axis=0, )
paddle.argmin(x=Tensor([3, 357913942, 4],"float16"), axis=1, keepdim=False, )
paddle.argmin(Tensor([3, 3, 3, 3, 3, 17674763],"float16"), axis=0, )
paddle.argmin(Tensor([5, 5, 5, 34359739],"float16"), axis=0, )
paddle.argmin(Tensor([4, 16777217, 4, 4, 4],"float16"), axis=0, )
paddle.argmin(x=Tensor([1431655766, 3],"float16"), axis=0, dtype=type(numpy.int32), keepdim=False, )
paddle.argmin(x=Tensor([2281701379, 1],"int64"), keepdim=None, )
paddle.argmin(x=Tensor([3, 715827883, 2, 1],"float16"), axis=-1, dtype="int64", )
paddle.argmin(x=Tensor([3, 3, 477218589],"float16"), axis=1, keepdim=False, )
paddle.argmin(x=Tensor([357913942, 3, 4],"float16"), axis=1, keepdim=False, )
paddle.argmin(x=Tensor([2, 1140850690],"int64"), axis=-1, )
paddle.argmin(x=Tensor([760567127, 3],"int64"), axis=-1, )
paddle.argmin(Tensor([5, 34359739, 5, 5],"float16"), axis=0, )
paddle.argmin(Tensor([4, 4, 4, 16777217, 4],"float16"), axis=0, )
paddle.argmin(Tensor([10, 228170138],"float32"), )
paddle.argmin(Tensor([3, 3, 3, 17674763, 3, 3],"float16"), axis=0, )
paddle.argmin(Tensor([228170138, 10],"float32"), )
paddle.argmin(x=Tensor([3, 760567127],"int64"), axis=-2, )
paddle.argmin(x=Tensor([760567127, 3],"int64"), axis=Tensor([1],"int64"), )
paddle.argmin(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.argmin(Tensor([3, 760567127],"float32"), )
paddle.argmin(Tensor([228170138, 10],"float32"), axis=-1, )
paddle.argmin(Tensor([228170138, 10],"float32"), axis=-1, keepdim=True, dtype="int32", )
paddle.argmin(x=Tensor([760567127, 3],"int64"), axis=-2, )
paddle.argmin(x=Tensor([3, 760567127],"int64"), keepdim=None, )
paddle.argmin(x=Tensor([3, 3, 2, 238609295],"float16"), axis=-1, dtype="int64", )
paddle.argmin(Tensor([10, 228170138],"float32"), axis=-1, keepdim=True, dtype="int32", )
paddle.argmin(x=Tensor([3, 760567127],"int64"), dtype="int32", )
paddle.argmin(x=Tensor([3, 760567127],"int64"), axis=Tensor([1],"int64"), )
paddle.argmin(x=Tensor([3, 477218589, 3],"float16"), )
paddle.argmin(Tensor([228170138, 10],"float32"), axis=-1, keepdim=True, )
paddle.argmin(Tensor([4, 4, 16777217, 4, 4],"float16"), axis=0, )
paddle.argmin(x=Tensor([760567127, 3],"int64"), dtype="int32", )
paddle.argmin(Tensor([3, 3, 17674763, 3, 3, 3],"float16"), axis=0, )
paddle.argmin(Tensor([10, 228170138],"float32"), axis=-1, )
paddle.argmin(Tensor([456340276, 5],"float32"), )
paddle.argmin(Tensor([228170138, 10],"float32"), axis=1, )
paddle.argmin(Tensor([5, 5, 34359739, 5],"float16"), axis=0, )
paddle.argmin(x=Tensor([286331154, 3, 5],"float16"), axis=2, dtype=type(numpy.int64), )
paddle.argmin(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.argmin(x=Tensor([715827883, 3, 2, 1],"float16"), axis=-1, dtype="int64", )
paddle.argmin(Tensor([10, 228170138],"float32"), axis=1, )
paddle.argmin(Tensor([10, 228170138],"float32"), axis=-1, keepdim=True, )
paddle.argmin(x=Tensor([3, 3, 477218589, 1],"float16"), axis=-1, dtype="int64", )
paddle.argmin(Tensor([16777217, 4, 4, 4, 4],"float16"), axis=0, )
paddle.argmin(x=Tensor([3, 3, 477218589],"float16"), axis=2, dtype=type(numpy.int64), )
paddle.argmin(Tensor([4, 4, 4, 4, 16777217],"float16"), axis=0, )
paddle.argsort(Tensor([2, 1140850690],"float32"), descending=True, )
paddle.as_complex(Tensor([32, 32, 92843, 12, 2],"float32"), )
paddle.as_complex(Tensor([10, 10, 11408507, 2],"float32"), )
paddle.as_complex(Tensor([4, 32, 32, 278529, 2],"float32"), )
paddle.as_complex(Tensor([247581, 32, 12, 12, 2],"float32"), )
paddle.as_complex(Tensor([32, 32, 12, 92843, 2],"float32"), )
paddle.as_complex(Tensor([8, 8, 1114113, 4, 4, 2],"float32"), )
paddle.as_complex(Tensor([8, 8, 4, 1114113, 4, 2],"float32"), )
paddle.as_complex(Tensor([35651585, 8, 4, 2],"float32"), )
paddle.as_complex(Tensor([32, 15, 8, 8, 37138, 2],"float32"), )
paddle.as_complex(Tensor([8, 8, 4, 4, 1114113, 2],"float32"), )
paddle.as_complex(Tensor([69633, 32, 32, 16, 2],"float32"), )
paddle.as_complex(x=Tensor([1140850690, 2],"float32"), )
paddle.as_complex(Tensor([1, 8192, 1, 64, 2],"bfloat16"), )
paddle.as_complex(Tensor([8, 8, 17825793, 2],"float32"), )
paddle.as_complex(Tensor([8, 35651585, 4, 2],"float32"), )
paddle.as_complex(Tensor([4, 32, 557057, 16, 2],"float32"), )
paddle.as_complex(Tensor([11408507, 10, 10, 2],"float32"), )
paddle.as_complex(Tensor([32, 17409, 8, 8, 32, 2],"float32"), )
paddle.as_complex(Tensor([32, 15, 8, 9285, 32, 2],"float32"), )
paddle.as_complex(Tensor([2228225, 8, 4, 4, 4, 2],"float32"), )
paddle.as_complex(Tensor([32, 247581, 12, 12, 2],"float32"), )
paddle.as_complex(Tensor([278529, 64, 64, 2],"float32"), )
paddle.as_complex(Tensor([37138, 15, 8, 8, 32, 2],"float32"), )
paddle.as_complex(Tensor([285212673, 4, 2],"float32"), )
paddle.as_complex(Tensor([20, 891290, 64, 2],"float32"), )
paddle.as_complex(Tensor([32, 15, 9285, 8, 32, 2],"float32"), )
paddle.as_complex(Tensor([10, 11408507, 10, 2],"float32"), )
paddle.as_complex(Tensor([1, 8192, 7, 64, 2],"bfloat16"), )
paddle.as_complex(Tensor([32, 15, 8, 8, 32, 2],"float32"), )
paddle.as_complex(Tensor([20, 64, 891290, 2],"float32"), )
paddle.as_complex(Tensor([8, 2228225, 4, 4, 4, 2],"float32"), )
paddle.as_complex(Tensor([4, 557057, 32, 16, 2],"float32"), )
paddle.as_complex(Tensor([2, 570425345, 2],"float32"), )
paddle.as_real(Tensor([1, 8192, 7, 64],"complex64"), )
paddle.as_strided(Tensor([71303169, 32],"float32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([71303169, 32],"int32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 134217729],"float16"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([71303169, 32],"int32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([2, 190141782, 6],"float32"), list[8,6,], list[6,1,], )
paddle.as_strided(Tensor([32, 134217729],"float16"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([134217729, 32],"float16"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([71303169, 32],"int64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 71303169],"float32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([71303169, 32],"float32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([95070891, 4, 6],"float32"), list[8,6,], list[6,1,], )
paddle.as_strided(Tensor([32, 71303169],"int64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([71303169, 32],"int64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 71303169],"int32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([2, 4, 285212673],"float32"), list[8,6,], list[6,1,], )
paddle.as_strided(Tensor([134217729, 32],"float16"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 71303169],"float32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 71303169],"int64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 71303169],"int32"), shape=tuple(3,), stride=tuple(1,), )
paddle.asin(Tensor([8, 16, 17825793],"float32"), )
paddle.asin(Tensor([8388609, 16, 32],"float16"), )
paddle.asin(x=Tensor([3, 477218589, 3],"float16"), )
paddle.asin(Tensor([8, 16, 33554433],"float16"), )
paddle.asin(x=Tensor([3, 3, 253522376],"float32"), )
paddle.asin(Tensor([10, 20, 11408507],"float32"), )
paddle.asin(Tensor([114085069, 20, 1],"float32"), )
paddle.asin(x=Tensor([3, 3, 477218589],"float16"), )
paddle.asin(Tensor([8, 16777217, 32],"float16"), )
paddle.asin(x=Tensor([3, 253522376, 3],"float32"), )
paddle.asin(Tensor([8, 8912897, 32],"float32"), )
paddle.asin(x=Tensor([253522376, 3, 3],"float32"), )
paddle.asin(x=Tensor([477218589, 3, 3],"float16"), )
paddle.asin(Tensor([4456449, 16, 32],"float32"), )
paddle.asin(Tensor([10, 228170138, 1],"float32"), )
paddle.asinh(Tensor([8388609, 16, 32],"float16"), )
paddle.asinh(Tensor([8, 8912897, 32],"float32"), )
paddle.asinh(Tensor([114085069, 20, 1],"float32"), )
paddle.asinh(Tensor([8, 16, 33554433],"float16"), )
paddle.asinh(Tensor([8, 16, 17825793],"float32"), )
paddle.asinh(Tensor([10, 228170138, 1],"float32"), )
paddle.asinh(Tensor([8, 16777217, 32],"float16"), )
paddle.asinh(Tensor([4456449, 16, 32],"float32"), )
paddle.asinh(Tensor([10, 20, 11408507],"float32"), )
paddle.assign(Tensor([47535446, 48],"float32"), Tensor([15, 48],"float32"), )
paddle.assign(Tensor([6036, 896],"float32"), )
paddle.assign(Tensor([524288],"float32"), Tensor([524288],"float32"), )
paddle.assign(0.005, Tensor([2281701379],"float32"), )
paddle.assign(Tensor([5514, 896],"bfloat16"), )
paddle.assign(Tensor([3040, 1280],"bfloat16"), )
paddle.assign(Tensor([5801, 896],"float32"), )
paddle.assign(Tensor([6256, 1280],"bfloat16"), )
paddle.assign(Tensor([768, 2048, 1, 1],"float32"), Tensor([768, 2048, 1, 1],"float32"), )
paddle.assign(Tensor([2048, 1024, 1, 1],"float32"), Tensor([2048, 1024, 1, 1],"float32"), )
paddle.assign(0.05, Tensor([2281701379],"float32"), )
paddle.assign(Tensor([6376, 1280],"bfloat16"), )
paddle.assign(Tensor([60044774, 38, 1],"float32"), output=Tensor([1, 38, 1],"float32"), )
paddle.assign(Tensor([768, 1000],"float32"), output=Tensor([768, 1000],"float32"), )
paddle.assign(Tensor([32, 247581, 12, 12, 2],"float32"), Tensor([32, 32, 12, 12, 2],"float32"), )
paddle.assign(Tensor([13, 175515491],"int64"), Tensor([13, 175515491],"int64"), )
paddle.assign(Tensor([253522376, 9, 1],"float32"), output=Tensor([1, 9, 1],"float32"), )
paddle.assign(Tensor([1, 1, 1, 9],"float32"), Tensor([1, 1, 253522376, 9],"float32"), )
paddle.assign(Tensor([5849, 896],"float32"), )
paddle.assign(Tensor([1, 9, 1],"float32"), output=Tensor([1, 9, 253522376],"float32"), )
paddle.assign(Tensor([5837, 896],"bfloat16"), )
paddle.assign(Tensor([207427399, 1, 1, 11],"float32"), Tensor([1, 1, 1, 11],"float32"), )
paddle.assign(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 11],"float32"), )
paddle.assign(Tensor([1, 36, 1, 1],"float32"), output=Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.assign(Tensor([1024, 7168],"bfloat16"), )
paddle.assign(Tensor([28169153, 3, 3, 3, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 7130317],"float32"), Tensor([5, 4, 4, 4, 7130317],"float32"), )
paddle.assign(Tensor([1024, 3072],"float32"), output=Tensor([1024, 3072],"float32"), )
paddle.assign(Tensor([5802, 896],"float32"), )
paddle.assign(Tensor([4848, 1280],"bfloat16"), )
paddle.assign(Tensor([114085069, 20],"float32"), Tensor([114085069, 20],"float32"), )
paddle.assign(Tensor([5, 3, 16901492, 3, 3],"float32"), Tensor([5, 3, 16901492, 3, 3],"float32"), )
paddle.assign(Tensor([1, 2281701379, 1],"float32"), Tensor([1, 64, 1],"float32"), )
paddle.assign(Tensor([5670, 896],"bfloat16"), )
paddle.assign(Tensor([768, 2048],"float32"), Tensor([768, 2048],"float32"), )
paddle.assign(Tensor([7168, 1280],"bfloat16"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5, 16901492, 3, 3, 3],"float32"), )
paddle.assign(Tensor([5585, 896],"float32"), )
paddle.assign(Tensor([2, 10, 3, 38028357],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 53053],"float32"), output=Tensor([1024, 3, 14, 14],"float32"), )
paddle.assign(Tensor([253522376, 9, 1],"float32"), output=Tensor([253522376, 9, 1],"float32"), )
paddle.assign(Tensor([1, 64, 35651585],"float32"), Tensor([1, 64, 35651585],"float32"), )
paddle.assign(Tensor([1, 197, 11582241],"float32"), Tensor([1, 197, 11582241],"float32"), )
paddle.assign(0.0, Tensor([2281701379],"float32"), )
paddle.assign(Tensor([5848, 1280],"bfloat16"), )
paddle.assign(Tensor([4294967297],"bfloat16"), Tensor([4294967297],"bfloat16"), )
paddle.assign(Tensor([6128, 1280],"bfloat16"), )
paddle.assign(Tensor([5876, 896],"float32"), )
paddle.assign(Tensor([6088, 1280],"bfloat16"), )
paddle.assign(Tensor([6832, 1280],"bfloat16"), )
paddle.assign(Tensor([6416, 1280],"bfloat16"), )
paddle.assign(Tensor([32, 32, 12, 12, 15474],"float32"), Tensor([32, 32, 12, 12, 2],"float32"), )
paddle.assign(Tensor([512, 2048, 1, 1],"float32"), Tensor([512, 2048, 1, 1],"float32"), )
paddle.assign(Tensor([2281701379],"float32"), )
paddle.assign(Tensor([3880445, 3, 14, 14],"float32"), output=Tensor([3880445, 3, 14, 14],"float32"), )
paddle.assign(Tensor([3072, 768],"float32"), output=Tensor([3072, 768],"float32"), )
paddle.assign(Tensor([2970966, 1, 768],"float32"), Tensor([1, 1, 768],"float32"), )
paddle.assign(Tensor([15082, 197, 768],"float32"), Tensor([15082, 197, 768],"float32"), )
paddle.assign(Tensor([7712, 1280],"bfloat16"), )
paddle.assign(Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5, 3, 16901492, 3, 3],"float32"), )
paddle.assign(Tensor([5736, 1280],"bfloat16"), )
paddle.assign(Tensor([1024, 3072],"float32"), output=Tensor([742742, 3072],"float32"), )
paddle.assign(Tensor([768, 3, 16, 16],"float32"), Tensor([768, 3, 16, 16],"float32"), )
paddle.assign(Tensor([1, 36, 63380594, 1],"float32"), output=Tensor([1, 36, 63380594, 1],"float32"), )
paddle.assign(Tensor([32, 32, 12, 12, 2],"float32"), Tensor([32, 32, 92843, 12, 2],"float32"), )
paddle.assign(Tensor([22369622, 102],"float32"), output=Tensor([1024, 102],"float32"), )
paddle.assign(Tensor([742742, 3072],"float32"), output=Tensor([1024, 3072],"float32"), )
paddle.assign(Tensor([134217728],"bfloat16"), Tensor([134217728],"bfloat16"), )
paddle.assign(Tensor([9175040],"bfloat16"), Tensor([9175040],"bfloat16"), )
paddle.assign(Tensor([2281701379],"float32"), Tensor([1000],"float32"), )
paddle.assign(Tensor([5787, 896],"float32"), )
paddle.assign(Tensor([384, 1536],"float32"), Tensor([384, 1536],"float32"), )
paddle.assign(Tensor([5657, 896],"bfloat16"), )
paddle.assign(Tensor([6352, 1280],"bfloat16"), )
paddle.assign(Tensor([1, 36, 1, 63380594],"float32"), output=Tensor([1, 36, 1, 1],"float32"), )
paddle.assign(Tensor([3064, 1280],"bfloat16"), )
paddle.assign(Tensor([3584, 1280],"bfloat16"), )
paddle.assign(Tensor([238609295, 3, 3, 2],"float16"), )
paddle.assign(Tensor([1580126, 1444, 1, 1],"float32"), output=Tensor([1, 1444, 1, 1],"float32"), )
paddle.assign(Tensor([5552, 1280],"bfloat16"), )
paddle.assign(Tensor([1, 1, 253522376, 9],"float32"), Tensor([1, 1, 253522376, 9],"float32"), )
paddle.assign(Tensor([5824, 896],"float32"), )
paddle.assign(0.04380856, Tensor([2281701379],"float32"), )
paddle.assign(Tensor([5514, 896],"float32"), )
paddle.assign(Tensor([25352238, 10, 3, 3],"float32"), )
paddle.assign(Tensor([5, 4, 4, 4, 4],"float32"), Tensor([8912897, 4, 4, 4, 4],"float32"), )
paddle.assign(Tensor([1024, 3, 14, 14],"float32"), output=Tensor([3880445, 3, 14, 14],"float32"), )
paddle.assign(Tensor([6017, 896],"float32"), )
paddle.assign(Tensor([253522376, 1, 1, 9],"float32"), Tensor([1, 1, 1, 9],"float32"), )
paddle.assign(Tensor([5840, 896],"float32"), )
paddle.assign(Tensor([1, 1444, 1, 1],"float32"), output=Tensor([1, 1444, 1, 1580126],"float32"), )
paddle.assign(Tensor([6392, 1280],"bfloat16"), )
paddle.assign(list[Tensor([100, 42949673],"float16"),], )
paddle.assign(Tensor([6808, 1280],"bfloat16"), )
paddle.assign(Tensor([1, 1, 325957340, 7],"float32"), Tensor([1, 1, 1, 7],"float32"), )
paddle.assign(Tensor([1, 2281701379, 1],"float32"), output=Tensor([1, 9, 1],"float32"), )
paddle.assign(Tensor([1, 197, 768],"float32"), Tensor([1, 2970966, 768],"float32"), )
paddle.assign(Tensor([1024, 2228225],"float32"), output=Tensor([1024, 3072],"float32"), )
paddle.assign(Tensor([512, 512, 3, 3],"float32"), Tensor([512, 512, 3, 3],"float32"), )
paddle.assign(Tensor([2281701379],"int32"), )
paddle.atan(x=Tensor([3, 3, 477218589],"float16"), )
paddle.atan(Tensor([4456449, 16, 32],"float32"), )
paddle.atan(Tensor([114085069, 20, 1],"float32"), )
paddle.atan(Tensor([4294967297],"float16"), name="Cauchy_cdf", )
paddle.atan(Tensor([10, 228170138, 1],"float32"), )
paddle.atan(Tensor([8388609, 16, 32],"float16"), )
paddle.atan(x=Tensor([3, 477218589, 3],"float16"), )
paddle.atan(x=Tensor([253522376, 3, 3],"float32"), )
paddle.atan(x=Tensor([3, 253522376, 3],"float32"), )
paddle.atan(x=Tensor([3, 3, 253522376],"float32"), )
paddle.atan(Tensor([8, 16777217, 32],"float16"), )
paddle.atan(x=Tensor([477218589, 3, 3],"float16"), )
paddle.atan(Tensor([2281701379],"float32"), name="Cauchy_cdf", )
paddle.atan(Tensor([10, 20, 11408507],"float32"), )
paddle.atan(Tensor([8, 16, 17825793],"float32"), )
paddle.atan(Tensor([8, 8912897, 32],"float32"), )
paddle.atan(Tensor([8, 16, 33554433],"float16"), )
paddle.atan2(Tensor([111, 222, 333],"float64"), Tensor([222, 333],"float64"), )
paddle.atan2(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.atan2(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.atan2(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.atanh(Tensor([10, 228170138, 1],"float32"), )
paddle.atanh(Tensor([4456449, 16, 32],"float32"), )
paddle.atanh(Tensor([8, 16777217, 32],"float16"), )
paddle.atanh(Tensor([8, 8912897, 32],"float32"), )
paddle.atanh(Tensor([114085069, 20, 1],"float32"), )
paddle.atanh(Tensor([8, 16, 33554433],"float16"), )
paddle.atanh(Tensor([10, 20, 11408507],"float32"), )
paddle.atanh(Tensor([8388609, 16, 32],"float16"), )
paddle.atanh(Tensor([8, 16, 17825793],"float32"), )
paddle.atleast_1d(Tensor([5],"float16"), Tensor([5],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([3, 2],"float16"), Tensor([2147483649, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([2, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 2],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([2, 3, 1],"float16"), Tensor([1431655766, 3],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_1d(Tensor([1],"float16"), Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_1d(Tensor([2147483649, 2],"float16"), Tensor([3],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_1d(Tensor([4294967297],"float16"), Tensor([5],"float16"), Tensor([5],"float16"), )
paddle.atleast_1d(Tensor([3, 1431655766],"float16"), Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([2, 3, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([3, 715827883, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([2, 3, 715827883],"float16"), Tensor([715827883, 3],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297],"float16"), Tensor([2],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1431655766, 3, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_1d(Tensor([1, 1],"float16"), Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_1d(Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([536870913, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([2147483649, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_1d(Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([2281701379],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([2, 2147483649, 1],"float16"), Tensor([1, 2147483649],"float16"), )
paddle.atleast_1d(Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([2, 3, 715827883],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([5],"float16"), Tensor([4294967297],"float16"), Tensor([5],"float16"), )
paddle.atleast_1d(Tensor([2, 3, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([2281701379],"float32"), Tensor([2281701379],"float64"), )
paddle.atleast_1d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_1d(Tensor([2, 3, 715827883],"float16"), Tensor([3],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_1d(Tensor([1431655766, 3, 1],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_1d(Tensor([3, 2],"float16"), Tensor([3, 1431655766],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_1d(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_1d(Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_1d(Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_1d(Tensor([2147483649, 2],"float16"), Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_1d(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_1d(Tensor([2],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([1431655766, 3, 1],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_2d(Tensor([3, 1431655766],"float16"), Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_2d(Tensor([536870913, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([2, 2147483649, 1],"float16"), Tensor([1, 2147483649],"float16"), )
paddle.atleast_2d(Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_2d(Tensor([2, 2147483649, 1],"float16"), Tensor([2147483649],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([2, 3, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_2d(Tensor([2, 3, 715827883],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float16"), Tensor([3, 715827883, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_2d(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([3, 1431655766],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([2281701379],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([2],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_2d(Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_2d(Tensor([2, 2147483649],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_2d(Tensor([4294967297],"float16"), Tensor([5],"float16"), Tensor([5],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_2d(Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([2, 3, 715827883],"float16"), Tensor([715827883, 3],"float16"), )
paddle.atleast_2d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([2, 3, 1],"float16"), Tensor([1431655766, 3],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([2147483649, 2],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([4294967297],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1],"float16"), Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_2d(Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([4294967297, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([5],"float16"), Tensor([4294967297],"float16"), Tensor([5],"float16"), )
paddle.atleast_2d(Tensor([1, 2],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([5],"float16"), Tensor([5],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_2d(Tensor([2, 2147483649, 1],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_2d(Tensor([2, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([4294967297],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_2d(Tensor([1],"float16"), Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([107374183, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_2d(Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([1431655766, 3, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_2d(Tensor([3, 2],"float16"), Tensor([2147483649, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([3, 715827883, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_2d(Tensor([2, 3, 715827883],"float16"), Tensor([3],"float16"), )
paddle.atleast_2d(Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.atleast_2d(Tensor([2147483649, 2],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([1, 4294967297, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_2d(Tensor([4294967297],"float16"), Tensor([1],"float16"), Tensor([1],"float16"), )
paddle.atleast_3d(Tensor([1, 1],"float16"), Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float16"), Tensor([3, 715827883, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([2, 2147483649, 1],"float16"), Tensor([1, 2147483649],"float16"), )
paddle.atleast_3d(Tensor([4294967297],"float16"), Tensor([5],"float16"), Tensor([5],"float16"), )
paddle.atleast_3d(Tensor([1],"float16"), Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_3d(Tensor([5],"float16"), Tensor([5],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([2, 2147483649, 1],"float16"), Tensor([1, 3],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_3d(Tensor([2147483649, 2],"float16"), Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([2281701379],"float32"), Tensor([2281701379],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([2],"float16"), Tensor([2147483649, 2, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([2, 3, 715827883],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([1, 4294967297, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([536870913, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297],"float16"), Tensor([2],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([5],"float16"), Tensor([4294967297],"float16"), Tensor([5],"float16"), )
paddle.atleast_3d(Tensor([2, 2147483649],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([3, 715827883, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_3d(Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), Tensor([3, 1431655766],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_3d(Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([2, 3, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1],"float16"), Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.atleast_3d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([4294967297],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([2147483649, 2],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([2],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([107374183, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([2281701379],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([2],"float16"), Tensor([1, 2, 2147483649],"float16"), )
paddle.atleast_3d(Tensor([4294967297],"float16"), Tensor([1, 4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1],"float16"), Tensor([4294967297, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.atleast_3d(Tensor([2],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([1431655766, 3, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1],"float16"), Tensor([3],"float16"), )
paddle.atleast_3d(Tensor([1, 2],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_3d(Tensor([2, 3, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_3d(Tensor([3, 2],"float16"), Tensor([3, 2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), Tensor([3, 4, 2, 178956971],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.atleast_3d(Tensor([107374183, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_3d(Tensor([3, 143165577, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), Tensor([1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 1, 1],"float16"), Tensor([1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([2],"float32"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([3, 143165577, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([2, 1],"float16"), Tensor([4294967297],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), )
paddle.atleast_3d(Tensor([4294967297, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297],"float16"), Tensor([1, 1],"float16"), Tensor([1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 4294967297],"float16"), Tensor([1, 2],"float16"), )
paddle.atleast_3d(Tensor([536870913, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([107374183, 4, 2, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float16"), Tensor([4294967297, 1, 1, 1],"float16"), Tensor([1, 1, 1, 1],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float16"), Tensor([3, 4, 2],"float16"), Tensor([536870913, 4, 2],"float16"), )
paddle.atleast_3d(Tensor([1, 4294967297, 1],"float16"), Tensor([2],"float16"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float16"), Tensor([3, 4, 71582789, 5],"float16"), Tensor([3, 4, 2, 5],"float16"), )
paddle.bincount(x=Tensor([2281701379],"int32"), minlength=Tensor([1],"int64"), )
paddle.bincount(Tensor([2281701379],"int64"), minlength=100, )
paddle.bincount(Tensor([2281701379],"int64"), minlength=256000, )
paddle.bincount(Tensor([2281701379],"int64"), minlength=256, )
paddle.bincount(x=Tensor([2281701379],"int32"), weights=Tensor([2281701379],"int32"), )
paddle.bincount(x=Tensor([2281701379],"int64"), )
paddle.bincount(Tensor([2281701379],"int32"), weights=Tensor([2281701379],"float32"), )
paddle.bincount(Tensor([2281701379],"int64"), minlength=4, )
paddle.bincount(x=Tensor([2281701379],"int32"), minlength=4, )
paddle.bincount(x=Tensor([2281701379],"int32"), )
paddle.bincount(Tensor([2281701379],"int64"), minlength=Tensor([1],"int32"), )
paddle.bincount(Tensor([2281701379],"int64"), )
paddle.bincount(Tensor([2281701379],"int64"), minlength=32000, )
paddle.bincount(Tensor([2281701379],"int64"), weights=Tensor([2281701379],"float64"), )
paddle.bincount(Tensor([2281701379],"int64"), minlength=99, )
paddle.bincount(Tensor([2281701379],"int64"), minlength=123, )
paddle.bitwise_and(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([152113426, 3, 5],"int32"), Tensor([152113426, 3, 5],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.bitwise_and(Tensor([3, 76056713, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 76056713, 5],"int64"), )
paddle.bitwise_and(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([3, 760567127, 1],"int32"), Tensor([3, 760567127, 1],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([57042535, 4, 1],"int64"), Tensor([2, 57042535, 1, 5],"int64"), out=Tensor([2, 57042535, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([38028357, 3, 1, 5],"int64"), out=Tensor([38028357, 3, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([570425345, 4, 1],"int32"), Tensor([570425345, 4, 1],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 57042535, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 95070891],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 95070891],"int64"), out=Tensor([2, 3, 4, 95070891],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 228170138, 5],"int32"), Tensor([2, 228170138, 5],"int32"), )
paddle.bitwise_and(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 380283564],"int32"), Tensor([2, 3, 380283564],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([38028357, 3, 4, 5],"int64"), )
paddle.bitwise_and(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 1],"int32"), )
paddle.bitwise_and(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.bitwise_and(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_and(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.bitwise_and(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_and(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_and(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 76056713, 5],"int64"), )
paddle.bitwise_and(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_and(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_and(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.bitwise_invert(Tensor([570425345, 4, 1],"int32"), )
paddle.bitwise_invert(Tensor([2, 3, 76056713, 5],"int32"), )
paddle.bitwise_invert(Tensor([2, 3, 4, 95070891],"int32"), )
paddle.bitwise_invert(Tensor([3, 760567127, 1],"int32"), )
paddle.bitwise_invert(Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_invert(Tensor([2, 57042535, 4, 5],"int32"), )
paddle.bitwise_invert(Tensor([38028357, 3, 4, 5],"int32"), )
paddle.bitwise_left_shift(Tensor([11408507],"int32"), Tensor([200, 11408507],"int32"), False, )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.bitwise_left_shift(Tensor([11408507],"int64"), Tensor([200, 11408507],"int64"), False, )
paddle.bitwise_left_shift(Tensor([11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.bitwise_left_shift(Tensor([21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int64"), Tensor([11408507],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([21474837],"int16"), )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), )
paddle.bitwise_left_shift(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.bitwise_left_shift(Tensor([114085069, 4, 5],"int32"), Tensor([114085069, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([21474837],"int8"), )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([21474837],"uint8"), )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int32"), Tensor([11408507],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), False, )
paddle.bitwise_left_shift(Tensor([4294967297],"int16"), Tensor([4294967297],"int16"), False, )
paddle.bitwise_left_shift(Tensor([4294967297],"int16"), Tensor([1],"int16"), )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), )
paddle.bitwise_left_shift(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), )
paddle.bitwise_left_shift(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([21474837],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([21474837],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.bitwise_left_shift(Tensor([21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.bitwise_left_shift(Tensor([21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), False, )
paddle.bitwise_left_shift(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 190141782],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int32"), Tensor([11408507],"int32"), )
paddle.bitwise_left_shift(Tensor([114085069, 4, 5],"int32"), Tensor([114085069, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int64"), Tensor([11408507],"int64"), )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.bitwise_left_shift(Tensor([4294967297],"int16"), Tensor([1],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([21474837],"int8"), False, )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.bitwise_left_shift(Tensor([3, 152113426, 5],"int32"), Tensor([3, 152113426, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 152113426, 5],"int32"), Tensor([3, 152113426, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), )
paddle.bitwise_left_shift(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.bitwise_left_shift(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.bitwise_left_shift(Tensor([21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([4294967297],"int16"), Tensor([4294967297],"int16"), )
paddle.bitwise_left_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([1],"int16"), Tensor([4294967297],"int16"), )
paddle.bitwise_left_shift(Tensor([1],"int16"), Tensor([4294967297],"int16"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 190141782],"int32"), True, )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([3, 4, 190141782],"int64"), out=Tensor([3, 4, 190141782],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.bitwise_not(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([3, 4, 190141782],"int64"), out=Tensor([3, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([2, 228170138, 5],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_not(Tensor([3, 4, 1],"int64"), out=Tensor([3, 4, 190141782],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2281701379],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 380283564],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.bitwise_not(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([570425345, 4, 1],"int64"), out=Tensor([3, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([3, 4, 1],"int64"), out=Tensor([3, 760567127, 1],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([570425345, 4, 1],"int64"), out=Tensor([570425345, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([3, 760567127, 1],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.bitwise_not(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.bitwise_not(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([3, 760567127, 1],"int64"), out=Tensor([3, 4, 1],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.bitwise_not(Tensor([3, 760567127, 1],"int64"), out=Tensor([3, 760567127, 1],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([152113426, 3, 5],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), )
paddle.bitwise_not(Tensor([570425345, 4, 1],"int32"), )
paddle.bitwise_not(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.bitwise_not(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_not(Tensor([3, 4, 1],"int64"), out=Tensor([570425345, 4, 1],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([152113426, 3, 5],"int32"), Tensor([152113426, 3, 5],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([570425345, 4, 1],"int32"), Tensor([570425345, 4, 1],"int32"), )
paddle.bitwise_or(Tensor([3, 760567127, 1],"int32"), Tensor([3, 760567127, 1],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([38028357, 3, 1, 5],"int64"), out=Tensor([38028357, 3, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 76056713, 5],"int64"), )
paddle.bitwise_or(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.bitwise_or(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([57042535, 4, 1],"int64"), Tensor([2, 57042535, 1, 5],"int64"), out=Tensor([2, 57042535, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 1],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 57042535, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 95070891],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 380283564],"int32"), Tensor([2, 3, 380283564],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([3, 76056713, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 76056713, 5],"int64"), )
paddle.bitwise_or(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 228170138, 5],"int32"), Tensor([2, 228170138, 5],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_or(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.bitwise_or(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_or(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([38028357, 3, 4, 5],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.bitwise_or(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.bitwise_or(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 95070891],"int64"), out=Tensor([2, 3, 4, 95070891],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), )
paddle.bitwise_or(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([4294967297],"int8"), Tensor([1],"int8"), )
paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([21474837],"int16"), False, )
paddle.bitwise_right_shift(Tensor([11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([21474837],"int16"), )
paddle.bitwise_right_shift(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([21474837],"int8"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), )
paddle.bitwise_right_shift(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), )
paddle.bitwise_right_shift(Tensor([200, 11408507],"int32"), Tensor([200, 11408507],"int32"), False, )
paddle.bitwise_right_shift(Tensor([1],"int8"), Tensor([4294967297],"int8"), False, )
paddle.bitwise_right_shift(Tensor([7605672, 300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([21474837],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), )
paddle.bitwise_right_shift(Tensor([200, 11408507],"int32"), Tensor([11408507],"int32"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), )
paddle.bitwise_right_shift(Tensor([4294967297],"int8"), Tensor([1],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([7605672, 300],"int32"), Tensor([300],"int32"), )
paddle.bitwise_right_shift(Tensor([4294967297],"int8"), Tensor([4294967297],"int8"), )
paddle.bitwise_right_shift(Tensor([21474837],"uint8"), Tensor([200, 21474837],"uint8"), )
paddle.bitwise_right_shift(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([7605672, 300],"int64"), Tensor([300],"int64"), )
paddle.bitwise_right_shift(Tensor([21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), )
paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.bitwise_right_shift(Tensor([7605672, 300],"int64"), Tensor([7605672, 300],"int64"), )
paddle.bitwise_right_shift(Tensor([21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_right_shift(Tensor([21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.bitwise_right_shift(Tensor([200, 11408507],"int64"), Tensor([200, 11408507],"int64"), )
paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([1],"uint8"), Tensor([4294967297],"uint8"), )
paddle.bitwise_right_shift(Tensor([1],"int8"), Tensor([4294967297],"int8"), )
paddle.bitwise_right_shift(Tensor([200, 11408507],"int64"), Tensor([11408507],"int64"), )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([7605672, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([21474837],"uint8"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.bitwise_right_shift(Tensor([4294967297],"uint8"), Tensor([1],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([21474837],"int8"), Tensor([200, 21474837],"int8"), )
paddle.bitwise_right_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([21474837],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), )
paddle.bitwise_right_shift(Tensor([11408507],"int32"), Tensor([200, 11408507],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 11408507],"int32"), Tensor([11408507],"int32"), )
paddle.bitwise_right_shift(Tensor([4294967297],"int8"), Tensor([4294967297],"int8"), False, )
paddle.bitwise_right_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_xor(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 228170138, 5],"int32"), Tensor([2, 228170138, 5],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 380283564],"int32"), Tensor([2, 3, 380283564],"int32"), )
paddle.bitwise_xor(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 76056713, 5],"int64"), )
paddle.bitwise_xor(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int16"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 4, 95070891],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2112687, 3, 3, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2112687],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1, 5281717, 2],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([38028357, 3, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([3, 760567127, 1],"int32"), Tensor([3, 760567127, 1],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 9942054, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 5965233, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([38028357, 3, 1, 5],"int64"), out=Tensor([38028357, 3, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3169030, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 5965233, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 57042535, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4225373, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"bool"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 1],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([3, 76056713, 1],"int64"), Tensor([2, 3, 1, 5],"int64"), out=Tensor([2, 3, 76056713, 5],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 3976822],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), Tensor([3976822, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([152113426, 3, 5],"int32"), Tensor([152113426, 3, 5],"int32"), )
paddle.bitwise_xor(Tensor([570425345, 4, 1],"int32"), Tensor([570425345, 4, 1],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1056344, 5, 2],"int32"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int8"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), Tensor([2, 3, 3, 3169030, 4, 1, 5, 2],"int64"), )
paddle.bitwise_xor(Tensor([3, 4, 1],"int64"), Tensor([2, 3, 1, 95070891],"int64"), out=Tensor([2, 3, 4, 95070891],"int64"), )
paddle.bitwise_xor(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.bitwise_xor(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_xor(Tensor([57042535, 4, 1],"int64"), Tensor([2, 57042535, 1, 5],"int64"), out=Tensor([2, 57042535, 4, 5],"int64"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"uint8"), Tensor([2, 3, 3, 3, 4, 1, 5, 2],"uint8"), )
paddle.bitwise_xor(Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 5965233, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([3, 4, 190141782],"int32"), Tensor([3, 4, 190141782],"int32"), )
paddle.bitwise_xor(Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), Tensor([2, 3169030, 3, 3, 4, 1, 5, 2],"int32"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 4, 1, 5, 2],"int16"), Tensor([2, 3, 3, 3, 4, 1988411, 5, 2],"int16"), )
paddle.bitwise_xor(Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), Tensor([2, 3, 3, 3, 7953644, 1, 5, 2],"int8"), )
paddle.bmm(Tensor([1, 400, 128],"float32"), Tensor([1, 128, 30976],"float32"), )
paddle.bmm(Tensor([112, 165, 123469],"float32"), Tensor([112, 123469, 64],"float32"), )
paddle.bmm(Tensor([4, 9418788, 114],"float16"), Tensor([4, 114, 64],"float16"), )
paddle.bmm(Tensor([204280, 145, 145],"float16"), Tensor([204280, 145, 128],"float16"), )
paddle.bmm(Tensor([112, 97476, 209],"float32"), Tensor([112, 209, 64],"float32"), )
paddle.bmm(Tensor([335545, 1, 128],"float16"), Tensor([335545, 128, 100],"float16"), )
paddle.bmm(Tensor([1, 300, 61896],"float32"), Tensor([1, 61896, 36864],"float32"), )
paddle.bmm(Tensor([8, 1, 101],"float16"), Tensor([8, 101, 5315554],"float16"), )
paddle.bmm(Tensor([112, 206, 64],"float32"), Tensor([112, 64, 318318],"float32"), )
paddle.bmm(Tensor([1008, 7, 7],"float32"), Tensor([1008, 7, 323371],"float32"), )
paddle.bmm(Tensor([191676, 186, 64],"float32"), Tensor([191676, 64, 186],"float32"), )
paddle.bmm(Tensor([109750, 165, 126],"float32"), Tensor([109750, 126, 64],"float32"), )
paddle.bmm(Tensor([16, 134, 128],"float16"), Tensor([16, 128, 2097153],"float16"), )
paddle.bmm(Tensor([112, 161686, 126],"float32"), Tensor([112, 126, 64],"float32"), )
paddle.bmm(Tensor([112, 165, 123469],"float32"), Tensor([112, 123469, 165],"float32"), )
paddle.bmm(Tensor([112, 123469, 165],"float32"), Tensor([112, 165, 64],"float32"), )
paddle.bmm(Tensor([484, 400, 128],"float32"), Tensor([484, 128, 36864],"float32"), )
paddle.bmm(Tensor([8, 5162221, 104],"float16"), Tensor([8, 104, 128],"float16"), )
paddle.bmm(Tensor([231410, 145, 128],"float16"), Tensor([231410, 128, 145],"float16"), )
paddle.bmm(Tensor([172047, 158, 158],"float16"), Tensor([172047, 158, 128],"float16"), )
paddle.bmm(Tensor([52236, 209, 209],"float32"), Tensor([52236, 209, 64],"float32"), )
paddle.bmm(Tensor([16, 1851280, 145],"float16"), Tensor([16, 145, 128],"float16"), )
paddle.bmm(Tensor([112, 286, 64],"float32"), Tensor([112, 64, 286],"float32"), )
paddle.bmm(Tensor([3887, 1, 3],"float32"), Tensor([3887, 3, 128],"float32"), )
paddle.bmm(x=Tensor([2, 2, 1073741825],"float16"), y=Tensor([2, 1073741825, 2],"float16"), )
paddle.bmm(Tensor([8, 5212339, 103],"float16"), Tensor([8, 103, 128],"float16"), )
paddle.bmm(Tensor([1, 300, 128],"float32"), Tensor([1, 128, 33856],"float32"), )
paddle.bmm(Tensor([112, 435, 126],"float32"), Tensor([112, 126, 64],"float32"), )
paddle.bmm(Tensor([8, 5368710, 100],"float16"), Tensor([8, 100, 128],"float16"), )
paddle.bmm(Tensor([8, 5315554, 101],"float16"), Tensor([8, 101, 128],"float16"), )
paddle.bmm(Tensor([112, 186, 186],"float32"), Tensor([112, 186, 109529],"float32"), )
paddle.bmm(Tensor([1, 400, 128],"float32"), Tensor([1, 128, 33856],"float32"), )
paddle.bmm(Tensor([112, 209, 209],"float32"), Tensor([112, 209, 64],"float32"), )
paddle.bmm(Tensor([112, 186, 109529],"float32"), Tensor([112, 109529, 186],"float32"), )
paddle.bmm(Tensor([527, 400, 128],"float32"), Tensor([527, 128, 33856],"float32"), )
paddle.bmm(Tensor([16, 2097153, 128],"float16"), Tensor([16, 128, 168],"float16"), )
paddle.bmm(Tensor([328966, 1, 102],"float16"), Tensor([328966, 102, 128],"float16"), )
paddle.bmm(Tensor([322639, 1, 104],"float16"), Tensor([322639, 104, 128],"float16"), )
paddle.bmm(Tensor([112, 186, 64],"float32"), Tensor([112, 64, 186],"float32"), )
paddle.bmm(Tensor([112, 318318, 64],"float32"), Tensor([112, 64, 126],"float32"), )
paddle.bmm(Tensor([16, 134, 2003250],"float16"), Tensor([16, 2003250, 134],"float16"), )
paddle.bmm(Tensor([112, 220, 64],"float32"), Tensor([112, 64, 220],"float32"), )
paddle.bmm(Tensor([16, 158, 1698959],"float16"), Tensor([16, 1698959, 158],"float16"), )
paddle.bmm(Tensor([8, 5263441, 102],"float16"), Tensor([8, 102, 128],"float16"), )
paddle.bmm(Tensor([212370, 158, 128],"float16"), Tensor([212370, 128, 158],"float16"), )
paddle.bmm(Tensor([2, 300, 32],"float32"), Tensor([2, 32, 18496],"float32"), )
paddle.bmm(Tensor([86645, 209, 126],"float32"), Tensor([86645, 126, 64],"float32"), )
paddle.bmm(Tensor([8, 1, 128],"float16"), Tensor([8, 128, 4194305],"float16"), )
paddle.bmm(Tensor([282950, 206, 64],"float32"), Tensor([282950, 64, 126],"float32"), )
paddle.bmm(Tensor([282950, 165, 64],"float32"), Tensor([282950, 64, 126],"float32"), )
paddle.bmm(Tensor([224, 209, 24],"float32"), Tensor([224, 24, 209],"float32"), )
paddle.bmm(Tensor([112, 206, 98895],"float32"), Tensor([112, 98895, 126],"float32"), )
paddle.bmm(Tensor([216071, 165, 64],"float32"), Tensor([216071, 64, 126],"float32"), )
paddle.bmm(Tensor([16, 2097153, 128],"float16"), Tensor([16, 128, 145],"float16"), )
paddle.bmm(Tensor([2546542, 7, 128],"float32"), Tensor([2546542, 128, 7],"float32"), )
paddle.bmm(Tensor([527, 300, 128],"float32"), Tensor([527, 128, 33856],"float32"), )
paddle.bmm(x=Tensor([2, 2, 570425345],"float32"), y=Tensor([2, 570425345, 2],"float32"), )
paddle.bmm(Tensor([8, 1, 4194305],"float16"), Tensor([8, 4194305, 128],"float16"), )
paddle.bmm(Tensor([1917397, 35, 35],"float16"), Tensor([1917397, 35, 64],"float16"), )
paddle.bmm(Tensor([16, 1698959, 158],"float16"), Tensor([16, 158, 128],"float16"), )
paddle.bmm(Tensor([4, 7332, 81],"float32"), Tensor([4, 81, 256],"float32"), )
paddle.bmm(Tensor([112, 186, 64],"float32"), Tensor([112, 64, 126],"float32"), )
paddle.bmm(Tensor([335545, 1, 100],"float16"), Tensor([335545, 100, 128],"float16"), )
paddle.bmm(Tensor([112, 318318, 64],"float32"), Tensor([112, 64, 186],"float32"), )
paddle.bmm(Tensor([11661, 1, 3],"float32"), Tensor([11661, 3, 128],"float32"), )
paddle.bmm(Tensor([3029, 1, 3],"float32"), Tensor([3029, 3, 128],"float32"), )
paddle.bmm(Tensor([112, 435, 435],"float32"), Tensor([112, 435, 64],"float32"), )
paddle.bmm(Tensor([1, 300, 73661],"float32"), Tensor([1, 73661, 30976],"float32"), )
paddle.bmm(Tensor([112, 165, 64],"float32"), Tensor([112, 64, 165],"float32"), )
paddle.bmm(Tensor([15548, 1, 3],"float32"), Tensor([15548, 3, 128],"float32"), )
paddle.bmm(Tensor([16, 145, 145],"float16"), Tensor([16, 145, 1851280],"float16"), )
paddle.bmm(Tensor([1, 400, 67395],"float32"), Tensor([1, 67395, 33856],"float32"), )
paddle.bmm(Tensor([112, 435, 64],"float32"), Tensor([112, 64, 126],"float32"), )
paddle.bmm(Tensor([191676, 186, 64],"float32"), Tensor([191676, 64, 126],"float32"), )
paddle.bmm(Tensor([1, 400, 128],"float32"), Tensor([1, 128, 17825793],"float32"), )
paddle.bmm(Tensor([97359, 186, 126],"float32"), Tensor([97359, 126, 64],"float32"), )
paddle.bmm(Tensor([1008, 7, 128],"float32"), Tensor([1008, 128, 17685],"float32"), )
paddle.bmm(Tensor([112, 206, 161686],"float32"), Tensor([112, 161686, 126],"float32"), )
paddle.bmm(Tensor([112, 435, 64],"float32"), Tensor([112, 64, 435],"float32"), )
paddle.bmm(Tensor([332223, 1, 101],"float16"), Tensor([332223, 101, 128],"float16"), )
paddle.bmm(Tensor([83810, 165, 165],"float32"), Tensor([83810, 165, 64],"float32"), )
paddle.bmm(Tensor([1008, 17685, 128],"float32"), Tensor([1008, 128, 7],"float32"), )
paddle.bmm(Tensor([53769, 206, 206],"float32"), Tensor([53769, 206, 64],"float32"), )
paddle.bmm(Tensor([26, 1024, 1024],"float32"), Tensor([26, 1024, 12],"float32"), )
paddle.bmm(Tensor([330484, 114, 114],"float16"), Tensor([330484, 114, 64],"float16"), )
paddle.bmm(Tensor([16, 134, 134],"float16"), Tensor([16, 134, 2003250],"float16"), )
paddle.bmm(Tensor([8, 1024, 1024],"float32"), Tensor([8, 1024, 49],"float32"), )
paddle.bmm(Tensor([112, 186, 126],"float32"), Tensor([112, 126, 64],"float32"), )
paddle.bmm(Tensor([112, 165, 165],"float32"), Tensor([112, 165, 64],"float32"), )
paddle.bmm(Tensor([112, 206, 98895],"float32"), Tensor([112, 98895, 64],"float32"), )
paddle.bmm(Tensor([112, 206, 206],"float32"), Tensor([112, 206, 98895],"float32"), )
paddle.bmm(Tensor([112, 286, 286],"float32"), Tensor([112, 286, 64],"float32"), )
paddle.bmm(Tensor([4, 7332, 256],"float32"), Tensor([4, 256, 81],"float32"), )
paddle.bmm(Tensor([4, 81, 7332],"float32"), Tensor([4, 7332, 512],"float32"), )
paddle.bmm(Tensor([112, 165, 126],"float32"), Tensor([112, 126, 161686],"float32"), )
paddle.bmm(Tensor([173066, 206, 64],"float32"), Tensor([173066, 64, 206],"float32"), )
paddle.bmm(Tensor([8, 1, 100],"float16"), Tensor([8, 100, 5368710],"float16"), )
paddle.bmm(Tensor([112, 286, 126],"float32"), Tensor([112, 126, 64],"float32"), )
paddle.bmm(Tensor([2, 400, 32],"float32"), Tensor([2, 32, 18496],"float32"), )
paddle.bmm(Tensor([112, 165, 64],"float32"), Tensor([112, 64, 126],"float32"), )
paddle.broadcast_tensors(input=list[Tensor([6, 63380594, 6, 1],"bool"),Tensor([6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(list[Tensor([2],"float32"),Tensor([1140850690, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 35791395],"float16"),Tensor([12, 1, 10, 1],"float16"),], )
paddle.broadcast_tensors(list[Tensor([2281701379, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2281701379],"float32"),Tensor([1, 2281701379],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 190141782, 1],"bool"),Tensor([1, 6, 1, 190141782, 3],"bool"),Tensor([1, 1, 1, 190141782, 3],"bool"),Tensor([1, 6, 1, 190141782, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 63380594, 6],"bool"),Tensor([6, 63380594, 6],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 63380594, 1],"bool"),Tensor([6, 1, 63380594, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 31690297],"bool"),Tensor([1, 6, 1, 1, 31690297],"bool"),Tensor([1, 1, 1, 6, 31690297],"bool"),Tensor([1, 6, 1, 6, 31690297],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([31690297, 6, 2, 6, 1],"bool"),Tensor([31690297, 6, 1, 1, 3],"bool"),Tensor([31690297, 1, 1, 6, 3],"bool"),Tensor([31690297, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([380283564, 6],"float32"),Tensor([380283564, 1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 63380594, 6],"bool"),Tensor([6, 1, 6],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1, 2281701379],"float32"),Tensor([1, 2281701379],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 1],"float32"),Tensor([2281701379, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([12, 35791395, 10, 1],"float16"),Tensor([12, 1, 10, 1],"float16"),], )
paddle.broadcast_tensors(list[Tensor([1, 1],"float32"),Tensor([1, 2281701379],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 10563433],"bool"),Tensor([1, 6, 1, 6, 10563433],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([63380594, 6, 6, 1],"bool"),Tensor([63380594, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1140850690, 2],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 63380594, 6, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1140850690, 2],"float32"),Tensor([1, 2],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 63380594],"bool"),Tensor([6, 1, 63380594],"bool"),], )
paddle.broadcast_tensors(list[Tensor([2, 570425345, 2],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 63380594, 6],"float32"),Tensor([6, 1, 6],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([10563433, 6, 6, 6, 1],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1, 2281701379],"float32"),Tensor([1, 1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 63380594, 6, 6, 1],"bool"),Tensor([1, 63380594, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([63380594, 6, 6],"float32"),Tensor([63380594, 1, 6],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1, 2],"float32"),Tensor([1140850690, 2],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2],"float16"),Tensor([2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([63380594, 6, 6],"bool"),Tensor([63380594, 1, 6],"bool"),], )
paddle.broadcast_tensors(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 1],"bool"),Tensor([6, 1, 6, 63380594],"bool"),], )
paddle.broadcast_tensors(list[Tensor([2, 1140850690],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 1],"float16"),Tensor([12, 1, 10, 35791395],"float16"),], )
paddle.broadcast_tensors(list[Tensor([2, 1, 1140850690],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.broadcast_tensors(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 10563433],"float32"),Tensor([1, 6, 1, 6, 10563433],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([10563433, 6, 6, 6, 1],"bool"),Tensor([10563433, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 63380594, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([380283564, 6],"bool"),Tensor([380283564, 1],"bool"),], )
paddle.broadcast_tensors(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 380283564],"bool"),Tensor([6, 380283564],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([1, 6, 1, 6, 63380594],"bool"),], )
paddle.broadcast_tensors(list[Tensor([32, 3, 1024, 768],"float32"),Tensor([],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 63380594, 6, 6, 1],"float32"),Tensor([1, 63380594, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(list[Tensor([12, 1, 10, 1],"float16"),Tensor([12, 35791395, 10, 1],"float16"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 63380594, 6, 1],"float32"),Tensor([6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 190141782, 2, 6, 1],"bool"),Tensor([1, 190141782, 1, 1, 3],"bool"),Tensor([1, 190141782, 1, 6, 3],"bool"),Tensor([1, 190141782, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([10563433, 6, 6, 6, 1],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 380283564],"float32"),Tensor([6, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 63380594, 1],"float32"),Tensor([1, 6, 1, 63380594, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([10563433, 6, 6, 6, 1],"float32"),Tensor([10563433, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(tuple(Tensor([2, 2147483649],"float16"),Tensor([2, 1],"float16"),Tensor([2, 1],"float16"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 1],"float16"),), )
paddle.broadcast_tensors(tuple(Tensor([2, 2147483649],"float16"),Tensor([2, 2147483649],"float16"),Tensor([2, 2147483649],"float16"),), )
paddle.broadcast_tensors(input=list[Tensor([6, 380283564],"bool"),Tensor([6, 1],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 63380594, 1],"bool"),Tensor([1, 6, 1, 63380594, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 63380594, 6, 1],"float32"),Tensor([1, 6, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 10563433],"float32"),Tensor([6, 1, 6, 10563433],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 63380594],"bool"),Tensor([1, 1, 1, 6, 63380594],"bool"),Tensor([1, 6, 1, 6, 63380594],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([21126865, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 63380594],"float32"),Tensor([6, 1, 63380594],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 63380594, 1],"float32"),Tensor([6, 1, 63380594, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([63380594, 6, 6, 1],"float32"),Tensor([63380594, 1, 6, 3],"float32"),], )
paddle.broadcast_tensors(input=list[Tensor([1, 6, 6, 6, 1],"bool"),Tensor([21126865, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_tensors(list[Tensor([1140850690, 1, 2],"float32"),Tensor([1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([2281701379, 1],"float32"),Tensor([1, 1],"float32"),], )
paddle.broadcast_tensors(list[Tensor([16384, 1024],"float32"),Tensor([],"float32"),], )
paddle.broadcast_tensors(tuple(Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),), )
paddle.broadcast_tensors(input=list[Tensor([6, 6, 6, 10563433],"bool"),Tensor([6, 1, 6, 10563433],"bool"),], )
paddle.broadcast_tensors(tuple(Tensor([2, 1],"float16"),Tensor([2, 1],"float16"),Tensor([2, 2147483649],"float16"),), )
paddle.broadcast_tensors(input=list[Tensor([31690297, 6, 2, 6, 1],"bool"),Tensor([1, 6, 1, 1, 3],"bool"),Tensor([1, 1, 1, 6, 3],"bool"),Tensor([1, 6, 1, 6, 3],"bool"),], )
paddle.broadcast_to(Tensor([30, 1, 197, 197],"bool"), list[30,8,197,197,], )
paddle.broadcast_to(Tensor([30, 1, 200, 200],"bool"), list[30,8,200,200,], )
paddle.broadcast_to(Tensor([30, 1, 477, 477],"bool"), list[30,8,477,477,], )
paddle.broadcast_to(Tensor([111, 222, 333],"float64"), list[111,222,333,], )
paddle.broadcast_to(Tensor([30, 1, 193, 193],"bool"), list[30,8,193,193,], )
paddle.broadcast_to(Tensor([30, 1, 211, 211],"bool"), list[30,8,211,211,], )
paddle.broadcast_to(Tensor([30, 1, 498, 498],"bool"), list[30,8,498,498,], )
paddle.broadcast_to(Tensor([30, 1, 302, 113],"bool"), list[30,8,302,113,], )
paddle.broadcast_to(Tensor([30, 1, 355, 355],"bool"), list[30,8,355,355,], )
paddle.broadcast_to(Tensor([30, 1, 477, 137],"bool"), list[30,8,477,137,], )
paddle.broadcast_to(Tensor([30, 1, 302, 302],"bool"), list[30,8,302,302,], )
paddle.broadcast_to(Tensor([30, 1, 339, 169],"bool"), list[30,8,339,169,], )
paddle.broadcast_to(Tensor([30, 1, 298, 161],"bool"), list[30,8,298,161,], )
paddle.broadcast_to(Tensor([30, 1, 249, 249],"bool"), list[30,8,249,249,], )
paddle.broadcast_to(Tensor([30, 1, 307, 307],"bool"), list[30,8,307,307,], )
paddle.broadcast_to(Tensor([30, 1, 498, 153],"bool"), list[30,8,498,153,], )
paddle.broadcast_to(Tensor([30, 1, 268, 268],"bool"), list[30,8,268,268,], )
paddle.broadcast_to(Tensor([30, 1, 264, 264],"bool"), list[30,8,264,264,], )
paddle.broadcast_to(Tensor([64, 1327104],"int64"), tuple(64,1327104,), )
paddle.broadcast_to(Tensor([30, 1, 249, 137],"bool"), list[30,8,249,137,], )
paddle.broadcast_to(Tensor([30, 1, 274, 169],"bool"), list[30,8,274,169,], )
paddle.broadcast_to(Tensor([30, 1, 270, 161],"bool"), list[30,8,270,161,], )
paddle.broadcast_to(Tensor([30, 1, 369, 169],"bool"), list[30,8,369,169,], )
paddle.broadcast_to(Tensor([30, 1, 276, 129],"bool"), list[30,8,276,129,], )
paddle.broadcast_to(Tensor([30, 1, 203, 203],"bool"), list[30,8,203,203,], )
paddle.broadcast_to(Tensor([30, 1, 220, 220],"bool"), list[30,8,220,220,], )
paddle.broadcast_to(Tensor([30, 1, 336, 336],"bool"), list[30,8,336,336,], )
paddle.broadcast_to(Tensor([30, 1, 222, 222],"bool"), list[30,8,222,222,], )
paddle.broadcast_to(Tensor([30, 1, 226, 226],"bool"), list[30,8,226,226,], )
paddle.broadcast_to(Tensor([30, 1, 457, 153],"bool"), list[30,8,457,153,], )
paddle.broadcast_to(Tensor([30, 1, 187, 187],"bool"), list[30,8,187,187,], )
paddle.broadcast_to(Tensor([30, 1, 194, 194],"bool"), list[30,8,194,194,], )
paddle.broadcast_to(Tensor([64, 1327104],"float32"), tuple(64,1327104,), )
paddle.broadcast_to(Tensor([30, 1, 243, 243],"bool"), list[30,8,243,243,], )
paddle.broadcast_to(Tensor([30, 1, 336, 121],"bool"), list[30,8,336,121,], )
paddle.broadcast_to(Tensor([30, 1, 190, 190],"bool"), list[30,8,190,190,], )
paddle.broadcast_to(Tensor([30, 1, 207, 207],"bool"), list[30,8,207,207,], )
paddle.broadcast_to(Tensor([30, 1, 274, 274],"bool"), list[30,8,274,274,], )
paddle.broadcast_to(Tensor([30, 1, 210, 210],"bool"), list[30,8,210,210,], )
paddle.broadcast_to(Tensor([30, 1, 191, 191],"bool"), list[30,8,191,191,], )
paddle.broadcast_to(Tensor([30, 1, 339, 339],"bool"), list[30,8,339,339,], )
paddle.broadcast_to(Tensor([30, 1, 209, 209],"bool"), list[30,8,209,209,], )
paddle.broadcast_to(Tensor([30, 1, 183, 183],"bool"), list[30,8,183,183,], )
paddle.broadcast_to(Tensor([30, 1, 198, 198],"bool"), list[30,8,198,198,], )
paddle.broadcast_to(Tensor([30, 1, 240, 240],"bool"), list[30,8,240,240,], )
paddle.broadcast_to(Tensor([30, 1, 253, 137],"bool"), list[30,8,253,137,], )
paddle.broadcast_to(Tensor([30, 1, 268, 153],"bool"), list[30,8,268,153,], )
paddle.broadcast_to(Tensor([30, 1, 270, 270],"bool"), list[30,8,270,270,], )
paddle.broadcast_to(Tensor([30, 1, 212, 212],"bool"), list[30,8,212,212,], )
paddle.broadcast_to(Tensor([30, 1, 369, 369],"bool"), list[30,8,369,369,], )
paddle.broadcast_to(Tensor([30, 1, 355, 121],"bool"), list[30,8,355,121,], )
paddle.broadcast_to(Tensor([30, 1, 457, 457],"bool"), list[30,8,457,457,], )
paddle.broadcast_to(Tensor([30, 1, 298, 298],"bool"), list[30,8,298,298,], )
paddle.broadcast_to(Tensor([30, 1, 192, 192],"bool"), list[30,8,192,192,], )
paddle.broadcast_to(Tensor([30, 1, 241, 241],"bool"), list[30,8,241,241,], )
paddle.broadcast_to(Tensor([30, 1, 253, 253],"bool"), list[30,8,253,253,], )
paddle.broadcast_to(Tensor([30, 1, 227, 227],"bool"), list[30,8,227,227,], )
paddle.broadcast_to(Tensor([30, 1, 277, 277],"bool"), list[30,8,277,277,], )
paddle.broadcast_to(Tensor([30, 1, 293, 293],"bool"), list[30,8,293,293,], )
paddle.broadcast_to(Tensor([30, 1, 277, 129],"bool"), list[30,8,277,129,], )
paddle.broadcast_to(Tensor([30, 1, 276, 276],"bool"), list[30,8,276,276,], )
paddle.broadcast_to(Tensor([30, 1, 189, 189],"bool"), list[30,8,189,189,], )
paddle.bucketize(Tensor([2, 2147483649],"float16"), Tensor([4],"float16"), right=True, )
paddle.bucketize(Tensor([2, 2147483649],"float16"), Tensor([4],"float16"), out_int32=True, )
paddle.bucketize(Tensor([1073741825, 4],"float16"), Tensor([4],"float16"), )
paddle.bucketize(Tensor([2, 2147483649],"float16"), Tensor([2147483649],"float16"), right=True, )
paddle.bucketize(Tensor([2, 2147483649],"float16"), Tensor([2147483649],"float16"), )
paddle.bucketize(Tensor([2, 4],"float16"), Tensor([4294967297],"float16"), )
paddle.bucketize(Tensor([2, 4],"float16"), Tensor([4294967297],"float16"), right=True, )
paddle.bucketize(Tensor([2, 2147483649],"float16"), Tensor([4],"float16"), )
paddle.bucketize(Tensor([1073741825, 4],"float16"), Tensor([4],"float16"), right=True, )
paddle.bucketize(Tensor([1073741825, 4],"float16"), Tensor([4],"float16"), out_int32=True, )
paddle.cartesian_prod(list[Tensor([2281701379],"int64"),], )
paddle.cartesian_prod(list[Tensor([2281701379],"float32"),], )
paddle.cartesian_prod(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.cartesian_prod(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.cartesian_prod(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.cartesian_prod(list[Tensor([4294967297],"float16"),], )
paddle.cartesian_prod(list[Tensor([2281701379],"int32"),], )
paddle.cast(Tensor([11, 207427399],"bool"), dtype="bool", )
paddle.cast(Tensor([1, 139, 61236],"bool"), "float32", )
paddle.cast(Tensor([1, 79, 75600],"bool"), "float32", )
paddle.cast(Tensor([4, 47, 200, 336],"uint8"), "float32", )
paddle.cast(Tensor([1, 168, 40656],"bool"), "float32", )
paddle.cast(Tensor([1, 14, 11641334, 14],"bool"), "int64", )
paddle.cast(Tensor([1024, 2560, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([4, 44, 200, 304],"uint8"), "float32", )
paddle.cast(Tensor([4, 26, 280, 312],"uint8"), "float32", )
paddle.cast(Tensor([4, 6, 336, 304],"uint8"), "float32", )
paddle.cast(Tensor([4, 8, 272, 304],"uint8"), "float32", )
paddle.cast(Tensor([4, 14, 256, 304],"uint8"), "float32", )
paddle.cast(Tensor([2, 284, 8400],"bool"), "float32", )
paddle.cast(Tensor([4, 14, 216, 296],"uint8"), "float32", )
paddle.cast(Tensor([2177, 1024, 1024, 1],"bool"), dtype=VarType(int64), )
paddle.cast(Tensor([1, 24, 65856],"bool"), "float32", )
paddle.cast(Tensor([1, 36, 56784],"bool"), "float32", )
paddle.cast(Tensor([4, 17, 272, 328],"uint8"), "float32", )
paddle.cast(Tensor([4, 16, 216, 304],"uint8"), "float32", )
paddle.cast(Tensor([1, 18, 70644],"bool"), "float32", )
paddle.cast(Tensor([2, 1140850690],"float32"), "float16", )
paddle.cast(Tensor([1, 140, 30324],"bool"), "float32", )
paddle.cast(Tensor([1024, 256, 16385, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([8378368],"bfloat16"), "float32", )
paddle.cast(Tensor([4, 22, 280, 336],"uint8"), "float32", )
paddle.cast(Tensor([4, 56, 304, 336],"uint8"), "float32", )
paddle.cast(Tensor([4, 26, 272, 336],"uint8"), "float32", )
paddle.cast(Tensor([4, 51, 272, 304],"uint8"), "float32", )
paddle.cast(Tensor([4, 52, 272, 200],"uint8"), "float32", )
paddle.cast(Tensor([2, 196, 5376],"bool"), "float32", )
paddle.cast(Tensor([4, 8, 320, 272],"uint8"), "float32", )
paddle.cast(Tensor([4, 6, 328, 296],"uint8"), "float32", )
paddle.cast(Tensor([4, 12, 272, 328],"uint8"), "float32", )
paddle.cast(Tensor([4, 22, 200, 336],"uint8"), "float32", )
paddle.cast(Tensor([4, 22, 248, 336],"uint8"), "float32", )
paddle.cast(Tensor([1, 21, 61236],"bool"), "float32", )
paddle.cast(Tensor([4, 61, 200, 304],"uint8"), "float32", )
paddle.cast(Tensor([2328267, 14, 5, 14],"bool"), "int64", )
paddle.cast(Tensor([4, 512, 1024, 1],"bool"), dtype=Dtype(int64), )
paddle.cast(Tensor([4, 8, 200, 304],"uint8"), "float32", )
paddle.cast(Tensor([4, 29, 200, 304],"uint8"), "float32", )
paddle.cast(Tensor([4, 29, 272, 304],"uint8"), "float32", )
paddle.cast(Tensor([4, 10, 272, 272],"uint8"), "float32", )
paddle.cast(Tensor([1, 48, 56784],"bool"), "float32", )
paddle.cast(Tensor([1, 19, 75600],"bool"), "float32", )
paddle.cast(Tensor([4, 17, 280, 272],"uint8"), "float32", )
paddle.cast(Tensor([1, 71, 30324],"bool"), "float32", )
paddle.cast(Tensor([4, 4, 304, 272],"uint8"), "float32", )
paddle.cast(Tensor([4, 6, 304, 272],"uint8"), "float32", )
paddle.cast(Tensor([2, 218, 6804],"bool"), "float32", )
paddle.cast(Tensor([2, 125, 6069],"bool"), "float32", )
paddle.cast(Tensor([4, 43, 200, 272],"uint8"), "float32", )
paddle.cast(Tensor([11008, 390168],"float16"), Dtype(bfloat16), )
paddle.cast(Tensor([1, 117, 30324],"bool"), "float32", )
paddle.cast(Tensor([4, 4, 328, 304],"uint8"), "float32", )
paddle.cast(Tensor([1, 17825793, 128],"float32"), Dtype(bfloat16), )
paddle.cast(Tensor([4, 56, 200, 328],"uint8"), "float32", )
paddle.cast(x=Tensor([8, 2852127, 100],"bool"), dtype=Dtype(float16), )
paddle.cast(Tensor([4, 31, 272, 336],"uint8"), "float32", )
paddle.cast(Tensor([4, 25, 304, 272],"uint8"), "float32", )
paddle.cast(Tensor([4, 12, 296, 304],"uint8"), "float32", )
paddle.cast(Tensor([4, 52, 304, 272],"uint8"), "float32", )
paddle.cast(Tensor([109051904],"bfloat16"), "float32", )
paddle.cast(Tensor([1, 20, 52500],"bool"), "float32", )
paddle.cast(Tensor([512, 256, 3, 3],"float32"), "float32", )
paddle.cast(Tensor([4, 20, 200, 304],"uint8"), "float32", )
paddle.cast(Tensor([4, 12, 336, 272],"uint8"), "float32", )
paddle.cast(Tensor([4, 31, 272, 312],"uint8"), "float32", )
paddle.cast(Tensor([1, 333, 40656],"bool"), "float32", )
paddle.cast(Tensor([4, 25, 336, 272],"uint8"), "float32", )
paddle.cast(Tensor([1, 44, 30324],"bool"), "float32", )
paddle.cast(Tensor([4, 9, 304, 272],"uint8"), "float32", )
paddle.cast(Tensor([4, 32, 200, 296],"uint8"), "float32", )
paddle.cast(Tensor([1, 72, 56784],"bool"), "float32", )
paddle.cast(Tensor([7, 23282668, 14],"bool"), dtype="int64", )
paddle.cast(Tensor([4, 23, 336, 272],"uint8"), "float32", )
paddle.cast(Tensor([4, 44, 304, 312],"uint8"), "float32", )
paddle.cast(Tensor([2, 67, 9261],"bool"), "float32", )
paddle.cast(Tensor([1, 11883862, 192],"float32"), dtype="float32", )
paddle.cast(Tensor([2, 88, 10164],"bool"), "float32", )
paddle.cast(Tensor([2, 52, 11109],"bool"), "float32", )
paddle.cast(Tensor([101, 22591103],"bool"), dtype=type(numpy.int32), )
paddle.cast(Tensor([2, 129, 7581],"bool"), "float32", )
paddle.cast(Tensor([4, 28, 280, 272],"uint8"), "float32", )
paddle.cast(Tensor([1024, 1024, 1, 1],"float16"), "float32", )
paddle.cast(Tensor([760567127, 3],"bool"), dtype="int", )
paddle.cast(Tensor([4, 18, 200, 336],"uint8"), "float32", )
paddle.cast(Tensor([1, 124, 48384],"bool"), "float32", )
paddle.cast(Tensor([4096, 11008],"float32"), Dtype(float16), )
paddle.cast(Tensor([23282668, 7, 14],"bool"), dtype="int64", )
paddle.cast(Tensor([228170138, 10],"float32"), VarType(bfloat16), )
paddle.cast(Tensor([4, 25, 296, 304],"uint8"), "float32", )
paddle.cast(Tensor([22817014, 1, 100],"float32"), dtype=Dtype(float16), )
paddle.cast(Tensor([32000, 4096],"float32"), Dtype(float16), )
paddle.cast(Tensor([1, 36, 75600],"bool"), "float32", )
paddle.cast(Tensor([2, 63, 12096],"bool"), "float32", )
paddle.cast(Tensor([4, 4, 256, 304],"uint8"), "float32", )
paddle.cast(Tensor([1, 17825793, 128],"bool"), dtype=Dtype(int32), )
paddle.cast(Tensor([4, 66, 304, 272],"uint8"), "float32", )
paddle.cast(Tensor([1, 131, 24276],"bool"), "float32", )
paddle.cdist(Tensor([8550, 266866],"float32"), Tensor([1, 266866],"float32"), p=1, )
paddle.cdist(Tensor([900, 2535224],"float32"), Tensor([1, 2535224],"float32"), p=1, )
paddle.cdist(Tensor([570425345, 4],"float32"), Tensor([1, 4],"float32"), p=1, )
paddle.cdist(Tensor([300, 7605672],"float32"), Tensor([1, 7605672],"float32"), p=1, )
paddle.cdist(Tensor([6380, 357634],"float32"), Tensor([1, 357634],"float32"), p=1, )
paddle.ceil(Tensor([477218589, 3, 3],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 4, 19884108, 1],"float16"), )
paddle.ceil(Tensor([4, 3, 190141782],"float32"), )
paddle.ceil(x=Tensor([477218589, 3, 3],"float16"), )
paddle.ceil(Tensor([2281701379, 1],"float32"), )
paddle.ceil(Tensor([4, 285212673, 2],"float32"), )
paddle.ceil(Tensor([3, 59652324, 3, 4, 2, 1],"float16"), )
paddle.ceil(Tensor([380283564, 3, 2],"float32"), )
paddle.ceil(Tensor([3, 6, 11930465, 4, 1, 5],"float16"), )
paddle.ceil(Tensor([4, 14, 40744668],"float32"), )
paddle.ceil(Tensor([613566757, 7, 1],"float16"), )
paddle.ceil(Tensor([3, 23860930, 3, 4, 1, 5],"float16"), )
paddle.ceil(Tensor([162978670, 7, 2],"float32"), )
paddle.ceil(Tensor([4, 5, 114085069],"float32"), )
paddle.ceil(Tensor([4, 16, 35651585],"float32"), )
paddle.ceil(Tensor([4, 15, 38028357],"float32"), )
paddle.ceil(x=Tensor([3, 3, 253522376],"float32"), )
paddle.ceil(Tensor([67108865, 17, 2],"float32"), )
paddle.ceil(Tensor([4, 6, 95070891],"float32"), )
paddle.ceil(Tensor([114085069, 10, 2],"float32"), )
paddle.ceil(Tensor([1431655766, 3],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.ceil(x=Tensor([253522376, 3, 3],"float32"), )
paddle.ceil(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), )
paddle.ceil(Tensor([103713700, 11, 2],"float32"), )
paddle.ceil(x=Tensor([3, 477218589, 3],"float16"), )
paddle.ceil(Tensor([1, 4294967297],"float16"), )
paddle.ceil(Tensor([4294967297, 1],"float16"), )
paddle.ceil(x=Tensor([3, 3, 477218589],"float16"), )
paddle.ceil(Tensor([60044774, 19, 2],"float32"), )
paddle.ceil(Tensor([3, 6, 23860930, 1, 2, 5],"float16"), )
paddle.ceil(Tensor([76056713, 15, 2],"float32"), )
paddle.ceil(Tensor([4294967297],"float16"), )
paddle.ceil(Tensor([253522376, 3, 3],"float32"), )
paddle.ceil(Tensor([3, 6, 3, 15907287, 1, 5],"float16"), )
paddle.ceil(Tensor([4, 8, 71303169],"float32"), )
paddle.ceil(Tensor([1, 760567127, 3],"float32"), )
paddle.ceil(Tensor([32, 32, 2228225],"float32"), )
paddle.ceil(Tensor([11930465, 6, 3, 4, 1, 5],"float16"), )
paddle.ceil(Tensor([4, 1073741825],"float16"), )
paddle.ceil(Tensor([4, 19, 30022387],"float32"), )
paddle.ceil(Tensor([3, 6, 3, 1, 2, 39768216],"float16"), )
paddle.ceil(Tensor([4, 178956971, 6],"float16"), )
paddle.ceil(Tensor([190141782, 6, 2],"float32"), )
paddle.ceil(Tensor([87757746, 13, 2],"float32"), )
paddle.ceil(Tensor([4, 7, 81489335],"float32"), )
paddle.ceil(Tensor([7, 613566757],"float16"), )
paddle.ceil(Tensor([285212673, 4, 2],"float32"), )
paddle.ceil(Tensor([3, 6, 3, 39768216, 2, 1],"float16"), )
paddle.ceil(Tensor([4, 570425345],"float32"), )
paddle.ceil(Tensor([4, 10, 57042535],"float32"), )
paddle.ceil(Tensor([4, 1, 1073741825],"float16"), )
paddle.ceil(Tensor([1, 3, 760567127],"float32"), )
paddle.ceil(Tensor([4, 18, 31690297],"float32"), )
paddle.ceil(Tensor([4, 13, 43878873],"float32"), )
paddle.ceil(Tensor([5, 858993460],"float16"), )
paddle.ceil(Tensor([715827883, 1, 6],"float16"), )
paddle.ceil(Tensor([3, 6, 3, 1, 15907287, 5],"float16"), )
paddle.ceil(Tensor([1, 3, 1431655766],"float16"), )
paddle.ceil(Tensor([3, 6, 29826162, 4, 2, 1],"float16"), )
paddle.ceil(Tensor([1, 1431655766, 3],"float16"), )
paddle.ceil(Tensor([63380594, 18, 2],"float32"), )
paddle.ceil(Tensor([4, 1073741825, 1],"float16"), )
paddle.ceil(Tensor([142606337, 8, 2],"float32"), )
paddle.ceil(Tensor([3, 47721859, 3, 1, 2, 5],"float16"), )
paddle.ceil(Tensor([1, 1073741825, 4],"float16"), )
paddle.ceil(Tensor([557057, 32, 128],"float32"), )
paddle.ceil(Tensor([32, 557057, 128],"float32"), )
paddle.ceil(Tensor([23860930, 6, 3, 1, 2, 5],"float16"), )
paddle.ceil(x=Tensor([3, 253522376, 3],"float32"), )
paddle.ceil(Tensor([29826162, 6, 3, 4, 2, 1],"float16"), )
paddle.ceil(Tensor([81489335, 14, 2],"float32"), )
paddle.ceil(Tensor([2281701379],"float32"), )
paddle.ceil(Tensor([4, 4, 142606337],"float32"), )
paddle.ceil(Tensor([4, 12, 47535446],"float32"), )
paddle.ceil(Tensor([357913942, 3, 4],"float16"), )
paddle.ceil(Tensor([4, 17, 33554433],"float32"), )
paddle.ceil(Tensor([228170138, 5, 2],"float32"), )
paddle.ceil(Tensor([3, 6, 3, 4, 1, 19884108],"float16"), )
paddle.ceil(Tensor([71303169, 16, 2],"float32"), )
paddle.ceil(Tensor([95070891, 12, 2],"float32"), )
paddle.ceil(Tensor([4, 11, 51856850],"float32"), )
paddle.ceil(Tensor([2, 1140850690],"float32"), )
paddle.ceil(Tensor([4, 7, 153391690],"float16"), )
paddle.chunk(Tensor([4, 6, 95070891],"int32"), chunks=3, axis=Tensor([1],"int32"), )
paddle.chunk(Tensor([3395389, 4, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([570425345, 4, 1],"float32"), 4, axis=1, )
paddle.chunk(Tensor([4, 139265, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(x=Tensor([3, 3],"float64"), chunks=3, axis=Tensor([2281701379],"int64"), )
paddle.chunk(Tensor([4, 6, 95070891],"int32"), chunks=3, axis=1, )
paddle.chunk(x=Tensor([3, 760567127],"int64"), chunks=3, axis=0, )
paddle.chunk(Tensor([1114113, 16, 128],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([13, 16, 10969719],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([13, 21, 8357881],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 108, 64, 155345],"float16"), 3, axis=1, )
paddle.chunk(x=Tensor([760567127, 3],"float32"), chunks=3, axis=-1, )
paddle.chunk(Tensor([1, 4, 20, 28521268],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([4, 216, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(x=Tensor([3, 1431655766],"float16"), chunks=3, axis=0, )
paddle.chunk(Tensor([33554433, 2, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([13, 1044736, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([4855, 216, 64, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([52, 261184, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(x=Tensor([3, 3],"int32"), chunks=3, axis=Tensor([2281701379],"int64"), )
paddle.chunk(Tensor([1, 1, 67108865, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([700, 128, 25500],"float32"), 2, axis=1, )
paddle.chunk(Tensor([4, 108, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(x=Tensor([3, 760567127],"int32"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(Tensor([4, 216, 41264, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([16, 128, 25500],"float32"), 2, axis=1, )
paddle.chunk(x=Tensor([3, 760567127],"int32"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([3, 760567127],"float32"), chunks=3, axis=0, )
paddle.chunk(Tensor([4, 216, 64, 77673],"float16"), 3, axis=1, )
paddle.chunk(Tensor([35651585, 2, 8, 4],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([52, 4, 7, 1567103],"float32"), 3, axis=-1, )
paddle.chunk(x=Tensor([3, 1431655766],"float16"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(Tensor([1048577, 1, 64, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([35, 1917397, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(x=Tensor([1431655766, 3],"float16"), chunks=3, axis=0, )
paddle.chunk(Tensor([114, 1177349, 1, 32],"float16"), 2, axis=-1, )
paddle.chunk(x=Tensor([760567127, 3],"float32"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([760567127, 3],"int32"), chunks=3, axis=-1, )
paddle.chunk(Tensor([4, 95070891, 6],"int32"), chunks=3, axis=1, )
paddle.chunk(x=Tensor([3, 760567127],"float32"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(Tensor([2048, 1114113],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([35, 2, 958699, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([4, 95070891, 6],"int32"), chunks=3, axis=Tensor([1],"int32"), )
paddle.chunk(x=Tensor([3, 760567127],"int64"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(Tensor([3395389, 21, 32],"float32"), 3, axis=1, )
paddle.chunk(Tensor([5158, 108, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([1, 11, 207427399],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([1114113, 32, 64],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([13, 32, 5484860],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([1, 1048577, 64, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([63380594, 6, 6],"int32"), chunks=3, axis=1, )
paddle.chunk(Tensor([16, 128, 1114113],"float32"), 2, axis=1, )
paddle.chunk(Tensor([4, 108, 64, 64],"float16"), 3, axis=1, )
paddle.chunk(x=Tensor([760567127, 3],"int64"), chunks=3, axis=-1, )
paddle.chunk(Tensor([13, 2742430, 64],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([52, 5484860, 8],"float32"), 3, axis=1, )
paddle.chunk(Tensor([202566, 11, 1024],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([4, 108, 82527, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([10, 7130317, 8, 4],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([4, 262145, 64, 64],"float16"), 3, axis=1, )
paddle.chunk(x=Tensor([760567127, 3],"int32"), chunks=3, axis=0, )
paddle.chunk(x=Tensor([3, 760567127],"float32"), chunks=3, axis=-1, )
paddle.chunk(Tensor([114, 588675, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([4, 108, 155345, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([1188387, 4, 20, 24],"float32"), 3, axis=-1, )
paddle.chunk(x=Tensor([760567127, 3],"int64"), chunks=3, axis=0, )
paddle.chunk(Tensor([2579, 216, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([13, 1371215, 128],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([570425345, 4],"float32"), 2, axis=-1, )
paddle.chunk(x=Tensor([1431655766, 3],"float16"), chunks=3, axis=-1, )
paddle.chunk(Tensor([63380594, 6, 6],"int32"), chunks=3, axis=Tensor([1],"int32"), )
paddle.chunk(x=Tensor([3, 3],"int64"), chunks=3, axis=Tensor([2281701379],"int64"), )
paddle.chunk(Tensor([4, 108, 64, 82527],"float32"), 3, axis=1, )
paddle.chunk(Tensor([52, 4, 457072, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 4, 7, 6268411],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([10, 2, 8, 14260634],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([4, 95070891, 6],"bool"), chunks=3, axis=1, )
paddle.chunk(Tensor([52, 21, 2089471],"float32"), 3, axis=1, )
paddle.chunk(Tensor([33554433, 4, 1, 32],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([35, 2, 1, 61356676],"float16"), 2, axis=-1, )
paddle.chunk(x=Tensor([760567127, 3],"int32"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(Tensor([8192, 278529],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([114, 4, 147169, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([10, 2, 14260634, 8],"float32"), 2, axis=-1, )
paddle.chunk(x=Tensor([2281701379],"bool"), chunks=3, axis=0, )
paddle.chunk(Tensor([1, 4, 23767723, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([9710, 108, 64, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([35, 2, 1917397, 32],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([114, 4, 1, 9418788],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([13581556, 21, 8],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 6, 95070891],"bool"), chunks=3, axis=1, )
paddle.chunk(Tensor([13, 175515491, 1],"float32"), 4, axis=1, )
paddle.chunk(x=Tensor([3, 1431655766],"float16"), chunks=3, axis=-1, )
paddle.chunk(Tensor([13, 2437716, 72],"float32"), 3, axis=-1, )
paddle.chunk(x=Tensor([760567127, 3],"int64"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([3, 760567127],"int64"), chunks=3, axis=-1, )
paddle.chunk(Tensor([1, 2228225, 1024],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([4, 216, 64, 41264],"float32"), 3, axis=1, )
paddle.chunk(Tensor([13, 5484860, 32],"float32"), 3, axis=1, )
paddle.chunk(x=Tensor([1431655766, 3],"float16"), chunks=3, axis=Tensor([1],"int64"), )
paddle.clip(x=Tensor([228170138, 10],"float32"), min=-0.6, max=0.6, )
paddle.clip(x=Tensor([2616631, 872],"float32"), min=0, max=1, )
paddle.clip(Tensor([2281701379, 1],"int64"), min=1.0, )
paddle.clip(Tensor([13, 175515491],"int32"), max=16, )
paddle.clip(Tensor([59, 3840, 10240],"float32"), 0, 255, )
paddle.clip(Tensor([2970966, 768],"float32"), min=-2, max=2, )
paddle.clip(Tensor([24, 17, 128, 82242],"float16"), min=0, max=2, )
paddle.clip(Tensor([512, 32, 100, 2],"float32"), 0, 1, )
paddle.clip(Tensor([20, 2760, 152, 272],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([16, 107, 1025],"float32"), min=1e-07, )
paddle.clip(Tensor([2, 1140850690],"int32"), max=184, )
paddle.clip(Tensor([2048, 1114113],"float32"), max=4.135166556742356, )
paddle.clip(Tensor([1, 2281701379],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([2, 2147483649],"float16"), -126, 126, )
paddle.clip(Tensor([17375, 511, 257],"float32"), min=1e-07, )
paddle.clip(x=Tensor([512, 4456449],"float32"), min=0, max=1, )
paddle.clip(Tensor([20, 5195, 152, 272],"float16"), 0, 1, )
paddle.clip(Tensor([17375, 257, 511],"float32"), min=1e-07, )
paddle.clip(Tensor([325957340, 7],"int64"), max=240, )
paddle.clip(Tensor([4, 1, 248, 2300103],"float32"), min=0.0001, max=0.9999, )
paddle.clip(x=Tensor([27531842, 156],"float16"), min=0, max=1, )
paddle.clip(Tensor([4, 570425345],"float32"), -1, 1, )
paddle.clip(Tensor([80, 28521268],"float32"), min=1e-10, )
paddle.clip(Tensor([175515491, 13],"float32"), min=0, )
paddle.clip(x=Tensor([10, 429496730],"float16"), min=-1.0, max=1.0, )
paddle.clip(Tensor([325957340, 7],"int32"), max=184, )
paddle.clip(Tensor([512, 32, 69633, 2],"float32"), 0, 1, )
paddle.clip(Tensor([162978670, 14],"float32"), min=0, )
paddle.clip(Tensor([16, 279074, 511],"float32"), min=1e-07, )
paddle.clip(x=Tensor([2, 2147483649],"float16"), min=Tensor([1],"float16"), max=Tensor([1],"float16"), )
paddle.clip(Tensor([12, 190141782],"int32"), max=83, )
paddle.clip(Tensor([4, 570425345],"float32"), min=1.0, )
paddle.clip(Tensor([10, 2, 114085069],"float32"), min=1e-06, )
paddle.clip(Tensor([512, 22283, 100, 2],"float32"), 0, 1, )
paddle.clip(Tensor([2281701379],"float32"), min=0, )
paddle.clip(Tensor([20, 1, 152, 1412819],"float16"), 0, 1, )
paddle.clip(Tensor([175515491, 13],"int32"), max=16, )
paddle.clip(Tensor([325957340, 7, 1],"int32"), max=83, )
paddle.clip(Tensor([325957340, 7],"int64"), 3, )
paddle.clip(x=Tensor([4, 10, 107374183],"float16"), min=-1.0, max=1.0, )
paddle.clip(Tensor([10, 228170138],"float32"), min=1e-05, )
paddle.clip(Tensor([228170138, 10],"float32"), min=0, )
paddle.clip(Tensor([2281701379],"float32"), max=22400, )
paddle.clip(x=Tensor([4294967297],"float16"), min=Tensor([1],"float16"), max=Tensor([1],"float16"), )
paddle.clip(Tensor([1408, 1620527],"float32"), min=-2, max=2, )
paddle.clip(Tensor([190141782, 12],"float32"), min=1e-06, )
paddle.clip(x=Tensor([760567127, 3],"float32"), min=-5.0, max=5.0, )
paddle.clip(Tensor([20, 114085069],"float32"), min=1.1920928955078125e-07, )
paddle.clip(Tensor([192, 3, 282950, 14],"float32"), min=-2, max=2, )
paddle.clip(x=Tensor([1828287, 1248],"float32"), min=0, max=1, )
paddle.clip(Tensor([42595, 1, 248, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([13, 7, 25073642],"int32"), max=83, )
paddle.clip(Tensor([103, 22152441],"float32"), min=1e-05, )
paddle.clip(Tensor([2, 107136, 10649],"float32"), min=0, )
paddle.clip(Tensor([13, 175515491, 1],"int32"), max=83, )
paddle.clip(Tensor([2, 2, 570425345],"float32"), min=-1.0, max=1.0, )
paddle.clip(Tensor([2, 2147483649],"float16"), min=-2.0, max=2.0, )
paddle.clip(Tensor([512, 32, 100, 1393],"float32"), 0, 1, )
paddle.clip(Tensor([16, 1025, 107],"float32"), min=1e-07, )
paddle.clip(Tensor([4, 157920, 3],"float32"), min=0, )
paddle.clip(Tensor([21, 1, 108652447],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([4294967297, 1],"float16"), min=-2.0, max=2.0, )
paddle.clip(Tensor([11883862, 1, 192],"float32"), min=-2, max=2, )
paddle.clip(Tensor([12, 190141782],"int64"), max=83, )
paddle.clip(Tensor([20805, 1025, 107],"float32"), min=1e-07, )
paddle.clip(x=Tensor([10, 228170138],"float32"), min=-0.6, max=0.6, )
paddle.clip(x=Tensor([429496730, 10],"float16"), min=-2.0, max=-1.0, )
paddle.clip(Tensor([24, 17, 82242, 128],"float16"), min=0, max=2, )
paddle.clip(Tensor([1857, 300, 4096],"float32"), 0, 1, )
paddle.clip(Tensor([5, 858993460],"float16"), -1, 1, )
paddle.clip(Tensor([1140850690, 2],"float32"), min=1e-06, )
paddle.clip(Tensor([16, 107, 1332770],"float32"), min=1e-07, )
paddle.clip(Tensor([1140850690, 2],"float32"), min=1.1754943508222875e-38, )
paddle.clip(x=Tensor([3441481, 1248],"float16"), min=0, max=1, )
paddle.clip(Tensor([2281701379],"float32"), 0, 1, )
paddle.clip(Tensor([8671, 257, 1024],"float32"), min=-2, max=2, )
paddle.clip(Tensor([4, 34817, 128, 128],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([4, 10649, 248, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([14, 162978670],"int64"), max=240, )
paddle.clip(Tensor([143165577, 30],"float16"), min=-2.0, max=2.0, )
paddle.clip(Tensor([71303169, 32],"float32"), min=-2.0, max=2.0, )
paddle.clip(Tensor([1, 300, 7605672],"float32"), 0, 1, )
paddle.clip(Tensor([2, 1140850690],"float32"), min=1.0, )
paddle.clip(Tensor([4, 157920, 3613],"float32"), min=0, )
paddle.clip(Tensor([228170138, 10],"int64"), max=255984, )
paddle.clip(Tensor([4572548, 499],"float32"), min=1e-10, )
paddle.clip(x=Tensor([253522376, 3, 3],"float32"), min=None, max=5, )
paddle.clip(Tensor([2, 1140850690],"float32"), min=1.1754943508222875e-38, )
paddle.clip(x=Tensor([3, 1431655766],"float16"), min=-5.0, max=5.0, )
paddle.clip(x=Tensor([4294967297],"float16"), min=2.0, max=2.0, )
paddle.clip(Tensor([16777217, 256],"float16"), -127, 127, )
paddle.clip(Tensor([4817, 157920, 3],"float32"), min=0, )
paddle.clip(x=Tensor([1431655766, 3],"float16"), min=0.0, max=5, )
paddle.clip(Tensor([760567127, 3],"float32"), min=1e-05, )
paddle.clip(Tensor([175515491, 13],"float32"), min=1e-06, )
paddle.clip(x=Tensor([14626291, 156],"float32"), min=0, max=1, )
paddle.clip(Tensor([8, 1, 2228225, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([64, 35651585],"float32"), min=-2.0, max=2.0, )
paddle.clip(x=Tensor([3, 1431655766],"float16"), min=Tensor([1],"float16"), max=Tensor([1],"float16"), )
paddle.clip(x=Tensor([46684428, 92],"float16"), min=0, max=1, )
paddle.clone(Tensor([16384, 139265],"float32"), )
paddle.clone(Tensor([1, 128, 65537, 272],"float32"), )
paddle.clone(Tensor([1, 3395389, 21, 32],"float32"), )
paddle.clone(Tensor([1, 33554433, 68],"float32"), )
paddle.clone(Tensor([22, 64, 112, 112],"float32"), )
paddle.clone(Tensor([1140850690, 2],"float32"), )
paddle.clone(Tensor([1, 2048, 30948, 36],"float32"), )
paddle.clone(Tensor([1, 128, 152, 117275],"float32"), )
paddle.clone(Tensor([2853, 10000, 80],"float32"), )
paddle.clone(Tensor([432, 128, 152, 272],"float32"), )
paddle.clone(Tensor([2541, 897955],"float32"), )
paddle.clone(Tensor([228171, 10000, 1],"float32"), )
paddle.clone(Tensor([1, 55189, 152, 272],"float32"), )
paddle.clone(Tensor([512, 4456449],"float32"), )
paddle.clone(Tensor([1, 3, 96, 96, 82527],"float32"), )
paddle.clone(Tensor([1, 256, 84, 128],"float32"), )
paddle.clone(Tensor([1, 21504, 91],"float32"), )
paddle.clone(Tensor([106106, 21504, 1],"float32"), )
paddle.clone(Tensor([224489, 2541, 4],"float32"), )
paddle.clone(Tensor([1, 192, 44, 270088],"float32"), )
paddle.clone(Tensor([16, 268435457],"float16"), )
paddle.clone(Tensor([912681, 625, 4],"float32"), )
paddle.clone(Tensor([129024, 17685],"float32"), )
paddle.clone(Tensor([1, 2048, 24, 36],"float32"), )
paddle.clone(Tensor([1, 256, 139265, 64],"float32"), )
paddle.clone(Tensor([1, 3, 544, 736],"float32"), )
paddle.clone(Tensor([5704254, 100, 4],"float32"), )
paddle.clone(Tensor([1431655766, 3],"float16"), )
paddle.clone(Tensor([6139, 192, 44, 44],"float32"), )
paddle.clone(Tensor([10, 228170138],"float32"), )
paddle.clone(Tensor([32256, 70738],"float32"), )
paddle.clone(Tensor([145, 12, 112, 112],"float32"), )
paddle.clone(Tensor([23580, 144, 21, 32],"float32"), )
paddle.clone(Tensor([1, 12, 168, 1131797],"float32"), )
paddle.clone(Tensor([86, 704, 7, 7],"float32"), )
paddle.clone(Tensor([1, 2500, 912681],"float32"), )
paddle.clone(Tensor([6, 9216, 96],"float32"), )
paddle.clone(Tensor([22, 28, 56, 56],"float32"), )
paddle.clone(Tensor([7074, 21504, 15],"float32"), )
paddle.clone(Tensor([2281701379],"int32"), )
paddle.clone(Tensor([4, 3, 384, 384],"float32"), )
paddle.clone(Tensor([897955, 2541],"bool"), )
paddle.clone(Tensor([1, 12, 1485483, 128],"float32"), )
paddle.clone(Tensor([1, 12, 11, 17285617],"float32"), )
paddle.clone(Tensor([512, 256, 7, 7],"float32"), )
paddle.clone(Tensor([1, 12, 21, 9054371],"float32"), )
paddle.clone(Tensor([1, 2541, 897955],"float32"), )
paddle.clone(Tensor([2902, 192, 64, 64],"float32"), )
paddle.clone(Tensor([22, 1536, 8, 8],"float32"), )
paddle.clone(Tensor([22, 144, 56, 56],"float32"), )
paddle.clone(Tensor([228171, 2500, 4],"float32"), )
paddle.clone(Tensor([82527, 3, 96, 96, 1],"float32"), )
paddle.clone(Tensor([13264, 256, 21, 32],"float32"), )
paddle.clone(Tensor([37138, 15, 64, 64],"float32"), )
paddle.clone(Tensor([43, 32, 112, 112],"float32"), )
paddle.clone(Tensor([1080352, 12, 11, 16],"float32"), )
paddle.clone(Tensor([1, 2281701379, 1],"float32"), )
paddle.clone(Tensor([86, 198, 192],"float32"), )
paddle.clone(Tensor([1, 192, 270088, 44],"float32"), )
paddle.clone(Tensor([11225, 2541, 80],"float32"), )
paddle.clone(Tensor([67108865, 64],"float16"), )
paddle.clone(Tensor([1, 8912897, 256],"float32"), )
paddle.clone(Tensor([22, 360, 14, 14],"float32"), )
paddle.clone(Tensor([570425345, 4],"float32"), )
paddle.clone(Tensor([10, 32, 56, 56],"float32"), )
paddle.clone(Tensor([1, 192, 32, 371371],"float32"), )
paddle.clone(Tensor([1, 625, 3650723],"float32"), )
paddle.clone(Tensor([1, 171888, 13275],"float32"), )
paddle.clone(Tensor([35651585, 64],"float32"), )
paddle.clone(Tensor([1, 256, 48, 185686],"float32"), )
paddle.clone(Tensor([2, 1140850690],"float32"), )
paddle.clone(Tensor([1, 256, 34817, 256],"float32"), )
paddle.clone(Tensor([1, 256, 123791, 72],"float32"), )
paddle.clone(Tensor([24, 95070891],"float32"), )
paddle.clone(Tensor([285212673, 8],"float32"), )
paddle.clone(Tensor([1, 100, 22817014],"float32"), )
paddle.clone(Tensor([1, 512, 96, 144],"float32"), )
paddle.clone(Tensor([89129, 100, 256],"float32"), )
paddle.clone(Tensor([285213, 100, 80],"float32"), )
paddle.clone(Tensor([1, 10000, 228171],"float32"), )
paddle.clone(Tensor([1, 1024, 30948, 72],"float32"), )
paddle.clone(Tensor([1, 212212, 84, 128],"float32"), )
paddle.clone(Tensor([10, 2048, 7, 7],"float32"), )
paddle.clone(Tensor([22, 128, 28, 28],"float32"), )
paddle.clone(Tensor([1166, 21504, 91],"float32"), )
paddle.clone(Tensor([4294967297],"float16"), )
paddle.clone(Tensor([57043, 10000, 4],"float32"), )
paddle.clone(Tensor([22, 288, 14, 14],"float32"), )
paddle.clone(Tensor([1, 18, 168, 754531],"float32"), )
paddle.clone(Tensor([1, 12, 742742, 256],"float32"), )
paddle.clone(Tensor([1, 21504, 106106],"float32"), )
paddle.clone(Tensor([1, 1024, 48, 46422],"float32"), )
paddle.clone(Tensor([22, 64, 56, 56],"float32"), )
paddle.clone(Tensor([22, 128, 56, 56],"float32"), )
paddle.clone(Tensor([1, 12, 84, 2263593],"float32"), )
paddle.clone(Tensor([2281701379],"float32"), )
paddle.clone(Tensor([13275, 171888, 1],"float32"), )
paddle.clone(Tensor([10, 8, 196, 64],"float32"), )
paddle.clone(Tensor([1, 256, 30948, 288],"float32"), )
paddle.clone(Tensor([1, 18, 495161, 256],"float32"), )
paddle.column_stack(list[Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([2147483649, 2],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([2],"float16"),Tensor([2, 2147483649],"float16"),], )
paddle.column_stack(list[Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),Tensor([1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 715827883, 2],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297],"float16"),Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),], )
paddle.column_stack(list[Tensor([4294967297],"float16"),Tensor([4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([3, 715827883, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 357913942],"float16"),], )
paddle.column_stack(list[Tensor([1, 1],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([536870913, 4, 2],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 1431655766],"float16"),Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 178956971],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 715827883, 2],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([4294967297],"float16"),], )
paddle.column_stack(list[Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),Tensor([3, 1431655766],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),], )
paddle.column_stack(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], )
paddle.column_stack(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),], )
paddle.column_stack(list[Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.column_stack(list[Tensor([3, 4, 2],"float16"),Tensor([3, 715827883, 2],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.column_stack(list[Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.column_stack(list[Tensor([3, 1431655766],"float16"),], )
paddle.column_stack(list[Tensor([3, 2],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 2],"float16"),], )
paddle.column_stack(list[Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], )
paddle.column_stack(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.combinations(Tensor([2281701379],"int64"), 0, True, )
paddle.combinations(Tensor([2281701379],"int32"), 1, True, )
paddle.complex(Tensor([20, 64, 1001],"float32"), Tensor([20, 64, 1001],"float32"), )
paddle.complex(real=Tensor([1],"float32"), imag=Tensor([2281701379],"float32"), )
paddle.complex(real=Tensor([2281701379],"float32"), imag=Tensor([1],"float32"), )
paddle.complex(Tensor([20, 64, 1051],"float32"), Tensor([20, 64, 1051],"float32"), )
paddle.complex(Tensor([1, 8192, 64],"float32"), Tensor([1, 8192, 64],"float32"), )
paddle.concat(tuple(Tensor([46406, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([42629, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([64, 416, 14, 14],"float32"),Tensor([64, 32, 14, 14],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([11129, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([6036, 896],"float32"),Tensor([6036, 896],"float32"),Tensor([6036, 896],"float32"),Tensor([6036, 896],"float32"),Tensor([6036, 896],"float32"),Tensor([6036, 896],"float32"),Tensor([6036, 896],"float32"),Tensor([6036, 896],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([8841, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([7024, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([1, 128, 256, 256],"float32"),Tensor([1, 34817, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),Tensor([1, 128, 256, 256],"float32"),], 1, )
paddle.concat(tuple(Tensor([12257, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([8, 282240, 1],"float16"),Tensor([8, 70560, 1],"float16"),Tensor([8, 17640, 1],"float16"),Tensor([8, 4410, 1],"float16"),Tensor([8, 1134, 1],"float16"),], axis=1, )
paddle.concat(tuple(Tensor([23697, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([8087, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([46552, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([32086, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 74, 8400, 1],"float32"),Tensor([2, 74, 8400, 1],"float32"),Tensor([2, 74, 8400, 1],"float32"),Tensor([2, 74, 8400, 1],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([44553, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([16251, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1024],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([1],"float16"),Tensor([4294967297],"float16"),Tensor([1024],"float16"),], )
paddle.concat(tuple(Tensor([21276, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([47963, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([11937, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([6146, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([1170, 256, 7, 7],"float32"),Tensor([487, 256, 7, 7],"float32"),Tensor([320, 256, 7, 7],"float32"),Tensor([71, 256, 7, 7],"float32"),], )
paddle.concat(tuple(Tensor([41258, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([9664, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([26236, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([196, 256, 14, 14],"float32"),Tensor([125, 256, 14, 14],"float32"),Tensor([59, 256, 14, 14],"float32"),Tensor([2, 256, 14, 14],"float32"),], )
paddle.concat(tuple(Tensor([40676, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([1, 16, 40656, 1],"float32"),Tensor([1, 16, 40656, 1],"float32"),Tensor([1, 16, 40656, 1],"float32"),Tensor([1, 16, 40656, 1],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([45706, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([4851, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([43353, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([48833, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([48887, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([48916, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([41967, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([18074, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([32875, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([16, 13, 529],"float32"),Tensor([16, 13, 2116],"float32"),Tensor([16, 13, 8464],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([48, 64, 26, 26],"float16"),Tensor([48, 64, 26, 26],"float16"),), axis=1, )
paddle.concat(list[Tensor([4, 233472, 1],"float16"),Tensor([4, 58368, 1],"float16"),Tensor([4, 14592, 1],"float16"),Tensor([4, 3648, 1],"float16"),Tensor([4, 912, 1],"float16"),], axis=1, )
paddle.concat(list[Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 135816],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),Tensor([16800, 1],"float32"),], -1, )
paddle.concat(tuple(Tensor([39175, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([43191, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([32921, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([8, 10, 5376, 1],"float32"),Tensor([8, 10, 5376, 1],"float32"),Tensor([8, 10, 5376, 1],"float32"),Tensor([8, 10, 5376, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 12, 65856, 1],"float32"),Tensor([1, 12, 65856, 1],"float32"),Tensor([1, 12, 65856, 1],"float32"),Tensor([1, 12, 65856, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([16, 23, 289],"float32"),Tensor([16, 23, 1156],"float32"),Tensor([16, 23, 4624],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([1817, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([8, 163200, 4],"float16"),Tensor([8, 40800, 4],"float16"),Tensor([8, 10200, 4],"float16"),Tensor([8, 2550, 4],"float16"),Tensor([8, 663, 4],"float16"),], axis=1, )
paddle.concat(tuple(Tensor([29787, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([45756, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([1503, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([37404, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([21142, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([4294967297],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),Tensor([18],"float16"),], axis=0, )
paddle.concat(tuple(Tensor([10985, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(x=tuple(Tensor([80, 3, 1, 64],"float32"),Tensor([80, 3, 576, 64],"float32"),), axis=-2, )
paddle.concat(list[Tensor([164, 256, 14, 14],"float32"),Tensor([114, 256, 14, 14],"float32"),Tensor([84, 256, 14, 14],"float32"),Tensor([22, 256, 14, 14],"float32"),], )
paddle.concat(tuple(Tensor([11694, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([9070, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([8, 34, 361],"float32"),Tensor([8, 34, 1444],"float32"),Tensor([8, 34, 5776],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([25095, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([44541, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([25170, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([16382, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 39, 4116, 1],"float32"),Tensor([2, 39, 4116, 1],"float32"),Tensor([2, 39, 4116, 1],"float32"),Tensor([2, 39, 4116, 1],"float32"),], axis=-1, )
paddle.concat(tuple(Tensor([23321, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([22803, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([44353, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([40256, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([29677, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([4873, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([48580, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([48086, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([14790, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(x=list[Tensor([100, 2535224, 3, 3],"float32"),Tensor([100, 18, 3, 3],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([10576, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([1772, 256, 7, 7],"float32"),Tensor([110, 256, 7, 7],"float32"),Tensor([129, 256, 7, 7],"float32"),Tensor([37, 256, 7, 7],"float32"),], )
paddle.concat(tuple(Tensor([48302, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([11212, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([43642, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([2180, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([46444, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([37969, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([33187, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([34739, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([100, 22817014],"float32"),Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),Tensor([100, 128],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([25549, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([6082, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([48761, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([14181, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([39053, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([2, 640, 30, 30],"float32"),Tensor([2, 640, 30, 30],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([49313, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(list[Tensor([4, 256, 38, 38],"float32"),Tensor([4, 512, 38, 38],"float32"),], axis=1, )
paddle.concat(tuple(Tensor([24405, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([12983, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([24940, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([9138, 768],"float32"),Tensor([1, 768],"float32"),), axis=0, )
paddle.conj(Tensor([2, 357913942, 2, 3],"float16"), )
paddle.conj(Tensor([35791395, 20, 2, 3],"float16"), )
paddle.conj(Tensor([2, 20, 19014179, 3],"float32"), )
paddle.conj(Tensor([19014179, 20, 2, 3],"float32"), )
paddle.conj(Tensor([2, 20, 2, 28521268],"float32"), )
paddle.conj(Tensor([2, 20, 35791395, 3],"float16"), )
paddle.conj(Tensor([2, 190141782, 2, 3],"float32"), )
paddle.conj(Tensor([2, 20, 2, 53687092],"float16"), )
paddle.copysign(Tensor([214748365, 20],"float16"), Tensor([214748365, 20],"float16"), )
paddle.copysign(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), )
paddle.copysign(Tensor([4, 5],"float16"), Tensor([214748365, 4, 5],"float16"), )
paddle.copysign(Tensor([107374183, 20, 2],"int8"), Tensor([107374183, 20, 2],"int8"), )
paddle.copysign(Tensor([12, 20, 17895698],"float16"), Tensor([12, 20, 17895698],"float16"), )
paddle.copysign(Tensor([114085069, 20],"int32"), Tensor([114085069, 20],"int32"), )
paddle.copysign(Tensor([12, 20, 9507090],"int32"), Tensor([12, 20, 9507090],"int32"), )
paddle.copysign(Tensor([2, 3, 4, 178956971],"float16"), Tensor([2, 3, 4, 178956971],"float16"), )
paddle.copysign(Tensor([3, 4, 357913942],"float16"), Tensor([357913942],"float16"), )
paddle.copysign(Tensor([11, 17, 12201612],"int32"), Tensor([11, 17, 12201612],"int32"), )
paddle.copysign(Tensor([12, 20, 17895698],"int8"), Tensor([12, 20, 17895698],"int8"), )
paddle.copysign(Tensor([10, 228170138],"float32"), -3.0, )
paddle.copysign(Tensor([12, 178956971, 2],"int16"), Tensor([12, 178956971, 2],"int16"), )
paddle.copysign(Tensor([8, 2556529, 5, 6, 7],"float16"), Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.copysign(Tensor([12, 20, 17895698],"uint8"), Tensor([12, 20, 17895698],"uint8"), )
paddle.copysign(Tensor([8, 17, 5, 902305, 7],"float16"), Tensor([8, 17, 5, 902305, 7],"float16"), )
paddle.copysign(Tensor([11, 20742740, 10],"int32"), Tensor([11, 20742740, 10],"int32"), )
paddle.copysign(Tensor([12, 95070891, 2],"int32"), Tensor([12, 95070891, 2],"int32"), )
paddle.copysign(Tensor([107374183, 20, 2],"int16"), Tensor([107374183, 20, 2],"int16"), )
paddle.copysign(Tensor([12, 178956971, 2],"float16"), Tensor([12, 178956971, 2],"float16"), )
paddle.copysign(Tensor([114085069, 20],"float32"), -3.0, )
paddle.copysign(Tensor([12, 95070891, 2],"float32"), Tensor([12, 95070891, 2],"float32"), )
paddle.copysign(Tensor([107374183, 20, 2],"uint8"), Tensor([107374183, 20, 2],"uint8"), )
paddle.copysign(Tensor([11, 39045158, 10],"int16"), Tensor([11, 39045158, 10],"int16"), )
paddle.copysign(Tensor([13421773, 17, 10],"int32"), Tensor([13421773, 17, 10],"int32"), )
paddle.copysign(Tensor([12, 20, 17895698],"int16"), Tensor([12, 20, 17895698],"int16"), )
paddle.copysign(Tensor([114085069, 20],"float32"), Tensor([114085069, 20],"float32"), )
paddle.copysign(Tensor([10, 429496730],"int16"), Tensor([10, 429496730],"int16"), )
paddle.copysign(Tensor([10, 228170138],"int32"), Tensor([10, 228170138],"int32"), )
paddle.copysign(Tensor([3, 286331154, 5],"float16"), Tensor([286331154, 5],"float16"), )
paddle.copysign(Tensor([11, 207427399],"float32"), Tensor([11, 207427399],"float32"), )
paddle.copysign(Tensor([214748365, 4, 5],"float16"), Tensor([4, 5],"float16"), )
paddle.copysign(Tensor([107374183, 20, 2],"float16"), Tensor([107374183, 20, 2],"float16"), )
paddle.copysign(Tensor([12, 178956971, 2],"uint8"), Tensor([12, 178956971, 2],"uint8"), )
paddle.copysign(Tensor([10, 429496730],"int8"), Tensor([10, 429496730],"int8"), )
paddle.copysign(Tensor([71582789, 3, 4, 5],"float16"), Tensor([71582789, 3, 4, 5],"float16"), )
paddle.copysign(Tensor([12, 20, 9507090],"float32"), Tensor([12, 20, 9507090],"float32"), )
paddle.copysign(Tensor([214748365, 4, 5],"float16"), Tensor([5],"float16"), )
paddle.copysign(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), )
paddle.copysign(Tensor([2, 107374183, 4, 5],"int8"), Tensor([2, 107374183, 4, 5],"int8"), )
paddle.copysign(Tensor([71582789, 3, 4, 5],"int8"), Tensor([71582789, 3, 4, 5],"int8"), )
paddle.copysign(Tensor([114085069, 20],"bool"), Tensor([114085069, 20],"bool"), )
paddle.copysign(Tensor([20, 214748365],"float16"), Tensor([20, 214748365],"float16"), )
paddle.copysign(Tensor([57042535, 20, 2],"float32"), Tensor([57042535, 20, 2],"float32"), )
paddle.copysign(Tensor([715827883, 6],"float16"), Tensor([715827883, 6],"float16"), )
paddle.copysign(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.copysign(Tensor([1203073, 17, 5, 6, 7],"float16"), Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.copysign(Tensor([214748365, 20],"int16"), Tensor([214748365, 20],"int16"), )
paddle.copysign(Tensor([286331154, 5],"float16"), Tensor([3, 286331154, 5],"float16"), )
paddle.copysign(Tensor([2, 107374183, 4, 5],"float16"), Tensor([2, 107374183, 4, 5],"float16"), )
paddle.copysign(Tensor([8, 17, 5, 6, 1052689],"float16"), Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.copysign(Tensor([4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), )
paddle.copysign(Tensor([25264514, 17, 10],"int16"), Tensor([25264514, 17, 10],"int16"), )
paddle.copysign(Tensor([3, 4, 357913942],"float16"), Tensor([4, 357913942],"float16"), )
paddle.copysign(Tensor([2, 3, 143165577, 5],"int8"), Tensor([2, 3, 143165577, 5],"int8"), )
paddle.copysign(Tensor([10, 429496730],"uint8"), Tensor([10, 429496730],"uint8"), )
paddle.copysign(Tensor([11, 17, 22967740],"int16"), Tensor([11, 17, 22967740],"int16"), )
paddle.copysign(Tensor([134217729, 17],"float32"), Tensor([134217729, 17],"float32"), )
paddle.copysign(Tensor([57042535, 20, 2],"int32"), Tensor([57042535, 20, 2],"int32"), )
paddle.copysign(Tensor([10, 228170138],"bool"), Tensor([10, 228170138],"bool"), )
paddle.copysign(Tensor([2, 3, 143165577, 5],"float16"), Tensor([2, 3, 143165577, 5],"float16"), )
paddle.copysign(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.copysign(Tensor([8, 17, 751921, 6, 7],"float16"), Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.copysign(Tensor([214748365, 20],"int8"), Tensor([214748365, 20],"int8"), )
paddle.copysign(Tensor([214748365, 20],"uint8"), Tensor([214748365, 20],"uint8"), )
paddle.copysign(Tensor([2, 3, 4, 178956971],"int8"), Tensor([2, 3, 4, 178956971],"int8"), )
paddle.copysign(Tensor([3, 286331154, 5],"float16"), Tensor([5],"float16"), )
paddle.copysign(Tensor([12, 178956971, 2],"int8"), Tensor([12, 178956971, 2],"int8"), )
paddle.cos(Tensor([1, 2281701379],"float32"), )
paddle.cos(Tensor([14449, 157920, 1],"float32"), )
paddle.cos(Tensor([2, 1140850690, 1],"float32"), )
paddle.cos(Tensor([7456541, 306],"float32"), )
paddle.cos(Tensor([21298, 107136, 1],"float32"), )
paddle.cos(Tensor([1000, 2281702],"float32"), )
paddle.cos(Tensor([1, 4096, 1, 557057],"float32"), )
paddle.cos(Tensor([1296, 1760573],"float32"), )
paddle.cos(Tensor([100, 22817014],"float32"), )
paddle.cos(Tensor([289, 7895161],"float32"), )
paddle.cos(Tensor([4096, 557057],"float32"), )
paddle.cos(Tensor([45634028, 50],"float32"), )
paddle.cos(Tensor([1600, 1426064],"float32"), )
paddle.cos(Tensor([12676119, 180],"float32"), )
paddle.cos(Tensor([3600, 633806],"float32"), )
paddle.cos(Tensor([91268056, 25],"float32"), )
paddle.cos(Tensor([250, 9126806],"float32"), )
paddle.cos(Tensor([1291, 1767391],"float32"), )
paddle.cos(Tensor([576, 3961288],"float32"), )
paddle.cos(Tensor([4000, 570426],"float32"), )
paddle.cos(Tensor([760567127, 3],"float32"), )
paddle.cos(x=Tensor([3, 253522376, 3],"float32"), )
paddle.cos(Tensor([512, 4456449],"float32"), )
paddle.cos(Tensor([28, 81489335],"float32"), )
paddle.cos(Tensor([2281701379, 1],"float32"), )
paddle.cos(Tensor([169, 13501192],"float32"), )
paddle.cos(Tensor([2, 2147483649],"float16"), )
paddle.cos(x=Tensor([3, 3, 477218589],"float16"), )
paddle.cos(Tensor([256, 8912897],"float32"), )
paddle.cos(Tensor([8775775, 260],"float32"), )
paddle.cos(Tensor([1444, 1580126],"float32"), )
paddle.cos(Tensor([1, 2281701379, 1],"float32"), )
paddle.cos(Tensor([2304, 990322],"float32"), )
paddle.cos(Tensor([228170138, 10],"float32"), )
paddle.cos(Tensor([450, 5070448],"float32"), )
paddle.cos(Tensor([144, 15845149],"float32"), )
paddle.cos(Tensor([114085069, 20, 1],"float32"), )
paddle.cos(Tensor([25, 91268056],"float32"), )
paddle.cos(Tensor([2500, 912681],"float32"), )
paddle.cos(Tensor([142606337, 16],"float32"), )
paddle.cos(Tensor([190141782, 12],"float32"), )
paddle.cos(Tensor([10, 228170138, 1],"float32"), )
paddle.cos(Tensor([1, 17825793, 1, 128],"float32"), )
paddle.cos(x=Tensor([3, 477218589, 3],"float16"), )
paddle.cos(Tensor([1, 4096, 8705, 64],"float32"), )
paddle.cos(Tensor([81489335, 28],"float32"), )
paddle.cos(Tensor([1200, 1901418],"float32"), )
paddle.cos(Tensor([1, 128, 1, 17825793],"float32"), )
paddle.cos(Tensor([1156, 1973791],"float32"), )
paddle.cos(Tensor([324, 7042289],"float32"), )
paddle.cos(x=Tensor([30, 76056713],"float32"), )
paddle.cos(Tensor([484, 4714260],"float32"), )
paddle.cos(Tensor([8912897, 256],"float32"), )
paddle.cos(Tensor([40, 57042535],"float32"), )
paddle.cos(Tensor([8705, 4096, 1, 64],"float32"), )
paddle.cos(Tensor([3, 760567127],"float32"), )
paddle.cos(Tensor([4294967297],"float16"), )
paddle.cos(Tensor([1, 4096, 4353, 128],"float32"), )
paddle.cos(Tensor([400, 10737419],"float16"), )
paddle.cos(x=Tensor([253522376, 3, 3],"float32"), )
paddle.cos(Tensor([4, 570425345],"float32"), )
paddle.cos(x=Tensor([17825793, 128],"float32"), )
paddle.cos(Tensor([5, 456340276],"float32"), )
paddle.cos(Tensor([11883862, 192],"float32"), )
paddle.cos(Tensor([23767723, 96],"float32"), )
paddle.cos(Tensor([162978670, 14],"float32"), )
paddle.cos(Tensor([400, 5704254],"float32"), )
paddle.cos(Tensor([454, 5025774],"float32"), )
paddle.cos(x=Tensor([477218589, 3, 3],"float16"), )
paddle.cos(Tensor([200, 11408507],"float32"), )
paddle.cos(Tensor([7, 325957340],"float32"), )
paddle.cos(Tensor([128, 17825793],"float32"), )
paddle.cos(Tensor([20742740, 110],"float32"), )
paddle.cos(Tensor([50, 45634028],"float32"), )
paddle.cos(Tensor([1, 25, 91268056],"float32"), )
paddle.cos(Tensor([190141782, 3, 4],"float32"), )
paddle.cos(Tensor([2, 285212673, 4],"float32"), )
paddle.cos(Tensor([91268056, 25, 1],"float32"), )
paddle.cos(Tensor([35651585, 64],"float32"), )
paddle.cos(Tensor([2116, 1078309],"float32"), )
paddle.cos(Tensor([2916, 782477],"float32"), )
paddle.cos(Tensor([32768, 69633],"float32"), )
paddle.cos(Tensor([5941931, 384],"float32"), )
paddle.cos(Tensor([1936, 1178565],"float32"), )
paddle.cos(Tensor([134217729, 32],"float16"), )
paddle.cos(Tensor([2, 107136, 10649],"float32"), )
paddle.cos(Tensor([22120, 103152],"float32"), )
paddle.cos(Tensor([4800, 475355],"float32"), )
paddle.cos(Tensor([1, 71303169, 1, 32],"float32"), )
paddle.cos(Tensor([529, 4313236],"float32"), )
paddle.cos(Tensor([1500, 1521135],"float32"), )
paddle.cos(x=Tensor([3, 3, 253522376],"float32"), )
paddle.cos(Tensor([22369622, 102],"float32"), )
paddle.cos(Tensor([1024, 2228225],"float32"), )
paddle.cos(Tensor([64, 67108865],"float16"), )
paddle.cos(Tensor([8192, 278529],"float32"), )
paddle.cos(Tensor([11, 207427399],"float32"), )
paddle.cos(Tensor([14, 162978670],"float32"), )
paddle.cos(Tensor([8192, 128],"float32"), )
paddle.cos(Tensor([2281701379],"float32"), )
paddle.cosh(Tensor([8, 4911, 241, 241],"float32"), )
paddle.cosh(Tensor([8, 32, 36983, 241],"float32"), )
paddle.cosh(x=Tensor([253522376, 3, 3],"float32"), )
paddle.cosh(Tensor([1228, 32, 241, 241],"float32"), )
paddle.cosh(x=Tensor([3, 3, 253522376],"float32"), )
paddle.cosh(Tensor([10, 228170138, 1],"float32"), )
paddle.cosh(x=Tensor([3, 477218589, 3],"float16"), )
paddle.cosh(Tensor([8, 32, 241, 36983],"float32"), )
paddle.cosh(x=Tensor([3, 3, 477218589],"float16"), )
paddle.cosh(Tensor([10, 20, 11408507],"float32"), )
paddle.cosh(x=Tensor([3, 253522376, 3],"float32"), )
paddle.cosh(Tensor([8, 32, 241, 241],"float32"), )
paddle.cosh(Tensor([114085069, 20, 1],"float32"), )
paddle.cosh(x=Tensor([477218589, 3, 3],"float16"), )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([2281701379],"float32"), axis=0, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([1, 14, 5, 61356676],"float16"), axis=list[1,3,], keepdim=True, name=None, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=2, keepdim=True, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=2, keepdim=True, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([1, 14, 21913099, 14],"float16"), axis=list[1,3,], keepdim=True, name=None, )
paddle.count_nonzero(Tensor([3, 760567127],"float32"), axis=None, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=None, keepdim=True, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=2, keepdim=True, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([4382620, 14, 5, 14],"float16"), axis=list[1,3,], keepdim=True, name=None, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=None, keepdim=True, )
paddle.count_nonzero(Tensor([4382620, 14, 5, 14],"float16"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([1, 61356676, 5, 14],"float16"), axis=list[1,3,], keepdim=True, name=None, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.count_nonzero(Tensor([456340276, 5],"float32"), axis=None, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=None, keepdim=True, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=list[0,2,], keepdim=False, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=2, keepdim=True, )
paddle.count_nonzero(Tensor([1, 14, 21913099, 14],"float16"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=list[0,1,2,3,], keepdim=False, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=tuple(0,1,3,), keepdim=False, )
paddle.count_nonzero(Tensor([2, 57042535, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.count_nonzero(Tensor([38028357, 3, 4, 5],"float32"), axis=None, keepdim=True, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=-1, keepdim=False, )
paddle.count_nonzero(Tensor([1, 61356676, 5, 14],"float16"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([2, 3, 76056713, 5],"float32"), axis=None, keepdim=False, )
paddle.count_nonzero(Tensor([1, 14, 5, 61356676],"float16"), axis=list[1,3,], keepdim=False, name=None, )
paddle.count_nonzero(Tensor([2, 3, 4, 95070891],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.crop(x=Tensor([3, 760567127],"int32"), shape=list[2,2,], )
paddle.crop(x=Tensor([760567127, 3],"float32"), shape=list[2,2,], )
paddle.crop(x=Tensor([3, 760567127],"float32"), shape=list[2,2,], )
paddle.crop(x=Tensor([760567127, 3],"int32"), shape=list[2,2,], )
paddle.crop(x=Tensor([760567127, 3],"int64"), shape=list[2,2,], )
paddle.crop(x=Tensor([3, 760567127],"int64"), shape=list[2,2,], )
paddle.cross(x=Tensor([3, 760567127],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.cross(x=Tensor([3, 477218589, 3],"float16"), y=Tensor([3, 477218589, 3],"float16"), axis=2, )
paddle.cross(x=Tensor([477218589, 3, 3],"float16"), y=Tensor([477218589, 3, 3],"float16"), axis=2, )
paddle.cross(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), axis=-1, )
paddle.cross(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), axis=1, )
paddle.cross(x=Tensor([760567127, 3],"int32"), y=Tensor([760567127, 3],"int32"), )
paddle.cross(x=Tensor([3, 760567127],"int32"), y=Tensor([3, 760567127],"int32"), )
paddle.cross(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.cross(x=Tensor([760567127, 3],"float32"), y=Tensor([760567127, 3],"float32"), )
paddle.cross(x=Tensor([3, 3, 477218589],"float16"), y=Tensor([3, 3, 477218589],"float16"), axis=0, )
paddle.cross(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), axis=1, )
paddle.cross(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.cross(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), axis=0, )
paddle.cross(x=Tensor([3, 477218589, 3],"float16"), y=Tensor([3, 477218589, 3],"float16"), axis=0, )
paddle.cross(x=Tensor([3, 3, 477218589],"float16"), y=Tensor([3, 3, 477218589],"float16"), axis=1, )
paddle.cross(x=Tensor([477218589, 3, 3],"float16"), y=Tensor([477218589, 3, 3],"float16"), axis=1, )
paddle.cumsum(Tensor([190142, 12000],"float32"), axis=-1, )
paddle.cumsum(Tensor([760567127, 3],"int32"), axis=1, )
paddle.cumsum(Tensor([40, 57042535],"int32"), axis=0, )
paddle.cumsum(Tensor([162978670, 14],"int32"), axis=1, )
paddle.cumsum(Tensor([1014002],"float32"), axis=0, )
paddle.cumsum(Tensor([325957340, 7],"int32"), axis=1, )
paddle.cumsum(Tensor([76057, 30000],"float32"), axis=-1, )
paddle.cumsum(Tensor([80, 28521268],"int32"), axis=0, )
paddle.cumsum(Tensor([1017677],"float32"), axis=0, )
paddle.cumsum(Tensor([38028357, 60],"int32"), axis=0, )
paddle.cumsum(Tensor([1025789],"float32"), axis=0, )
paddle.cumsum(Tensor([1025994],"float32"), axis=0, )
paddle.cumsum(Tensor([1038765],"float32"), axis=0, )
paddle.cumsum(x=Tensor([1, 16, 8388609, 32],"float16"), axis=2, )
paddle.cumsum(Tensor([10, 429496730],"float16"), dtype="float16", )
paddle.cumsum(Tensor([228170138, 10],"float32"), axis=-1, )
paddle.cumsum(Tensor([16, 142606337],"int32"), axis=0, )
paddle.cumsum(Tensor([2281701379],"int32"), )
paddle.cumsum(Tensor([5, 858993460],"float16"), axis=Tensor([1],"int32"), )
paddle.cumsum(x=Tensor([4294967297],"float16"), )
paddle.cumsum(Tensor([1, 2281701379],"float32"), axis=-1, )
paddle.cumsum(Tensor([2, 1140850690],"int32"), )
paddle.cumsum(Tensor([1010616],"float32"), axis=0, )
paddle.cumsum(Tensor([10, 228170138, 1],"float32"), dtype="float32", )
paddle.cumsum(x=Tensor([1, 2, 715827883, 3],"float16"), axis=Tensor([1],"float16"), )
paddle.cumsum(Tensor([2281701379],"float32"), axis=0, )
paddle.cumsum(Tensor([12, 190141782],"int32"), axis=1, )
paddle.cumsum(Tensor([570425345, 4],"float32"), axis=-1, )
paddle.cumsum(Tensor([190141782, 12],"float32"), dtype="float32", )
paddle.cumsum(Tensor([715827883, 6],"float16"), axis=Tensor([1],"int32"), )
paddle.cumsum(Tensor([3, 190141782, 4],"float32"), axis=1, )
paddle.cumsum(Tensor([5, 456340276],"float32"), axis=-1, )
paddle.cumsum(Tensor([20742740, 10, 11],"float32"), axis=Tensor([1],"int64"), )
paddle.cumsum(x=Tensor([1, 1431655766, 1, 3],"float16"), axis=3, )
paddle.cumsum(Tensor([1029329],"float32"), axis=0, )
paddle.cumsum(Tensor([228171, 10000],"float32"), axis=-1, )
paddle.cumsum(Tensor([1005783],"float32"), axis=0, )
paddle.cumsum(Tensor([4, 1073741825],"float16"), axis=1, )
paddle.cumsum(Tensor([1, 2281701379],"int32"), )
paddle.cumsum(Tensor([8, 285212673],"int32"), axis=0, )
paddle.cumsum(Tensor([9, 23047489, 11],"float32"), axis=Tensor([1],"int64"), )
paddle.cumsum(Tensor([13, 175515491],"int32"), axis=1, )
paddle.cumsum(Tensor([120, 19014179],"int32"), axis=0, )
paddle.cumsum(Tensor([1019733],"float32"), axis=0, )
paddle.cumsum(Tensor([24, 95070891],"int32"), axis=0, )
paddle.cumsum(Tensor([3, 2, 380283564],"float32"), axis=1, )
paddle.cumsum(Tensor([1003547],"float32"), axis=0, )
paddle.cumsum(Tensor([1014563],"float32"), axis=0, )
paddle.cumsum(Tensor([9, 10, 25352238],"float32"), axis=Tensor([1],"int64"), )
paddle.cumsum(Tensor([2281701379, 1],"int32"), )
paddle.cumsum(Tensor([45359, 50304],"float32"), axis=-1, )
paddle.cumsum(Tensor([760567127, 3],"float32"), axis=0, )
paddle.cumsum(x=Tensor([87382, 16, 96, 32],"float16"), axis=2, )
paddle.cumsum(Tensor([285212673, 2, 4],"float32"), axis=1, )
paddle.cumsum(Tensor([1000110],"float32"), axis=0, )
paddle.cumsum(x=Tensor([715827883, 2, 1, 3],"float16"), axis=-4, )
paddle.cumsum(Tensor([1034011],"float32"), axis=0, )
paddle.cumsum(x=Tensor([1, 1398102, 96, 32],"float16"), axis=2, )
paddle.cumsum(Tensor([2281701379],"float32"), dtype="float32", )
paddle.cumsum(Tensor([3, 760567127],"float32"), axis=-1, )
paddle.cumsum(Tensor([1010673],"float32"), axis=0, )
paddle.cumsum(x=Tensor([715827883, 2, 1, 3],"float16"), axis=3, )
paddle.cumsum(Tensor([1015607],"float32"), axis=0, )
paddle.cumsum(Tensor([228170138, 10],"int32"), axis=1, )
paddle.cumsum(x=Tensor([1, 16, 96, 2796203],"float16"), axis=2, )
paddle.cumsum(Tensor([1431655766, 3],"float16"), axis=1, )
paddle.cumsum(x=Tensor([1, 2, 715827883, 3],"float16"), axis=3, )
paddle.cumsum(x=Tensor([2281701379],"float32"), )
paddle.cumsum(Tensor([2, 1140850690],"float32"), axis=1, )
paddle.cumsum(Tensor([10, 228170138],"float32"), dtype="float32", )
paddle.cumsum(x=Tensor([1, 1431655766, 1, 3],"float16"), axis=Tensor([1],"float16"), )
paddle.cumsum(Tensor([10, 20, 11408507],"float32"), dtype="float32", )
paddle.cumsum(Tensor([2, 1140850690],"float32"), axis=-1, )
paddle.cumsum(Tensor([1014705],"float32"), axis=0, )
paddle.cumsum(Tensor([1022957],"float32"), axis=0, )
paddle.cumsum(Tensor([1009453],"float32"), axis=0, )
paddle.cumsum(x=Tensor([715827883, 2, 1, 3],"float16"), axis=Tensor([1],"float16"), )
paddle.cumsum(Tensor([1037889],"float32"), axis=0, )
paddle.cumsum(Tensor([114085069, 20, 1],"float32"), dtype="float32", )
paddle.cumsum(Tensor([357913942, 12],"float16"), dtype="float16", )
paddle.cumsum(Tensor([1013482],"float32"), axis=0, )
paddle.cumsum(Tensor([1140850690, 2],"float32"), axis=1, )
paddle.cumsum(Tensor([1001730],"float32"), axis=0, )
paddle.deg2rad(Tensor([4456449, 16, 32],"float32"), )
paddle.deg2rad(Tensor([8, 16, 17825793],"float32"), )
paddle.deg2rad(Tensor([2281701379],"float32"), )
paddle.deg2rad(Tensor([8, 8912897, 32],"float32"), )
paddle.deg2rad(Tensor([2281701379],"int64"), )
paddle.diag(Tensor([110, 20742740],"float32"), )
paddle.diag(Tensor([21, 108652447],"float32"), )
paddle.diag(Tensor([10, 228170138],"float32"), )
paddle.diag(Tensor([21324312, 107],"float32"), )
paddle.diag(Tensor([18, 126761188],"float32"), )
paddle.diag(Tensor([155, 14720655],"float32"), )
paddle.diag(Tensor([68, 33554433],"float32"), )
paddle.diag(Tensor([78679358, 29],"float32"), )
paddle.diag(Tensor([14084577, 162],"float32"), )
paddle.diag(Tensor([5, 456340276],"float32"), )
paddle.diag(Tensor([211, 10813751],"float32"), )
paddle.diag(Tensor([33554433, 68],"float32"), )
paddle.diag(Tensor([10, 228170138],"float32"), offset=-1, )
paddle.diag(Tensor([2000, 2000],"float32"), offset=-1, )
paddle.diag(Tensor([35651585, 64],"float32"), )
paddle.diag(Tensor([57, 40029849],"float32"), )
paddle.diag(Tensor([160, 14260634],"float32"), )
paddle.diag(Tensor([51, 44739243],"float32"), )
paddle.diag(Tensor([19336453, 118],"float32"), )
paddle.diag(Tensor([1140851, 2000],"float32"), )
paddle.diag(Tensor([47535446, 48],"float32"), )
paddle.diag(x=Tensor([1431655766, 3],"float16"), offset=-1, )
paddle.diag(Tensor([14720655, 155],"float32"), )
paddle.diag(Tensor([22369622, 102],"float32"), )
paddle.diag(Tensor([40, 57042535],"float32"), )
paddle.diag(Tensor([9389718, 243],"float32"), )
paddle.diag(Tensor([2000, 1140851],"float32"), offset=-1, )
paddle.diag(Tensor([228170138, 10],"float32"), offset=-1, )
paddle.diag(Tensor([4, 570425345],"float32"), )
paddle.diag(Tensor([2000, 1140851],"float32"), offset=1, )
paddle.diag(Tensor([10096024, 226],"float32"), )
paddle.diag(Tensor([264, 8642809],"float32"), )
paddle.diag(Tensor([10371370, 220],"float32"), )
paddle.diag(Tensor([39339679, 58],"float32"), )
paddle.diag(Tensor([99204408, 23],"float32"), )
paddle.diag(Tensor([226, 10096024],"float32"), )
paddle.diag(Tensor([222, 10277935],"float32"), )
paddle.diag(Tensor([23282668, 98],"float32"), )
paddle.diag(Tensor([82, 27825627],"float32"), )
paddle.diag(Tensor([220, 10371370],"float32"), )
paddle.diag(Tensor([43878873, 52],"float32"), )
paddle.diag(x=Tensor([1431655766, 3],"float16"), offset=0, )
paddle.diag(Tensor([27490379, 83],"float32"), )
paddle.diag(Tensor([88, 25928425],"float32"), )
paddle.diag(x=Tensor([2147483649, 2],"float16"), offset=0, )
paddle.diag(Tensor([228170138, 10],"float32"), offset=1, )
paddle.diag(Tensor([18400818, 124],"float32"), )
paddle.diag(Tensor([10, 228170138],"float32"), offset=1, )
paddle.diag(Tensor([858993460, 5],"float16"), )
paddle.diag(Tensor([31, 73603271],"float32"), )
paddle.diag(Tensor([8642809, 264],"float32"), )
paddle.diag(Tensor([243, 9389718],"float32"), )
paddle.diag(x=Tensor([2, 2147483649],"float16"), offset=2, )
paddle.diag(Tensor([217, 10514753],"float32"), )
paddle.diag(x=Tensor([2, 2147483649],"float16"), offset=-1, )
paddle.diag(Tensor([74, 30833803],"float32"), )
paddle.diag(Tensor([162, 14084577],"float32"), )
paddle.diag(Tensor([5, 858993460],"float16"), )
paddle.diag(Tensor([59, 38672905],"float32"), )
paddle.diag(Tensor([73, 31256184],"float32"), )
paddle.diag(Tensor([134217729, 17],"float32"), )
paddle.diag(x=Tensor([1431655766, 3],"float16"), )
paddle.diag(Tensor([71, 32136640],"float32"), )
paddle.diag(Tensor([13745190, 166],"float32"), )
paddle.diag(Tensor([24273419, 94],"float32"), )
paddle.diag(Tensor([32136640, 71],"float32"), )
paddle.diag(Tensor([52, 43878873],"float32"), )
paddle.diag(Tensor([108, 21126865],"float32"), )
paddle.diag(x=Tensor([3, 1431655766],"float16"), offset=0, )
paddle.diag(x=Tensor([2147483649, 2],"float16"), offset=-1, )
paddle.diag(x=Tensor([1431655766, 3],"float16"), offset=1, )
paddle.diag(Tensor([34, 67108865],"float32"), )
paddle.diag(Tensor([1521135, 1500],"float32"), offset=-1, )
paddle.diag(Tensor([85, 26843546],"float32"), )
paddle.diag(Tensor([13581556, 168],"float32"), )
paddle.diag(Tensor([31256184, 73],"float32"), )
paddle.diag(Tensor([21126865, 108],"float32"), )
paddle.diag(Tensor([134, 17027623],"float32"), )
paddle.diag(x=Tensor([4294967297, 1],"float16"), )
paddle.diag(Tensor([89, 25637095],"float32"), )
paddle.diag(Tensor([2000, 2000],"float32"), )
paddle.diag(Tensor([67108865, 34],"float32"), )
paddle.diag(Tensor([99, 23047489],"float32"), )
paddle.diag(Tensor([48, 47535446],"float32"), )
paddle.diag(Tensor([25928425, 88],"float32"), )
paddle.diag(Tensor([42253730, 54],"float32"), )
paddle.diag(x=Tensor([3, 1431655766],"float16"), offset=-1, )
paddle.diag(Tensor([83, 27490379],"float32"), )
paddle.diag(Tensor([27825627, 82],"float32"), )
paddle.diag(Tensor([23, 99204408],"float32"), )
paddle.diag(Tensor([94, 24273419],"float32"), )
paddle.diag(Tensor([78, 29252582],"float32"), )
paddle.diag(Tensor([102, 22369622],"float32"), )
paddle.diag(Tensor([73603271, 31],"float32"), )
paddle.diag(Tensor([107, 21324312],"float32"), )
paddle.diag(Tensor([13113227, 174],"float32"), )
paddle.diag(Tensor([124, 18400818],"float32"), )
paddle.diag(Tensor([163, 13998168],"float32"), )
paddle.diag(Tensor([126, 18108742],"float32"), )
paddle.diag(Tensor([17027623, 134],"float32"), )
paddle.diag_embed(Tensor([1140850690, 2],"float32"), )
paddle.diagonal(x=Tensor([6, 715827883],"float16"), )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([380283564, 6],"int64"), )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 19884108, 6],"float16"), )
paddle.diagonal(x=Tensor([6, 380283564],"float32"), )
paddle.diagonal(x=Tensor([6, 19884108, 6, 6],"float16"), )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), axis1=2, axis2=3, )
paddle.diagonal(Tensor([190141782, 3, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([1, 2, 1140850690],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([10, 57042535, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(x=Tensor([6, 380283564],"int64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), axis1=2, axis2=3, )
paddle.diagonal(Tensor([2, 3, 380283564],"float32"), )
paddle.diagonal(Tensor([2, 285212673, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(x=Tensor([715827883, 6],"float16"), offset=-1, )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), )
paddle.diagonal(x=Tensor([380283564, 6],"float32"), )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), axis1=2, axis2=3, )
paddle.diagonal(Tensor([10, 3, 76056713],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(x=Tensor([6, 6, 6, 19884108],"float16"), )
paddle.diagonal(x=Tensor([6, 715827883],"float16"), offset=1, )
paddle.diagonal(x=Tensor([6, 715827883],"float16"), offset=-1, )
paddle.diagonal(Tensor([190141782, 3, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), )
paddle.diagonal(Tensor([10, 57042535, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([10, 57042535, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([715827883, 6],"float16"), offset=1, )
paddle.diagonal(x=Tensor([6, 6, 119304648],"float16"), )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([19884108, 6, 6, 6],"float16"), )
paddle.diagonal(Tensor([190141782, 3, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([10, 3, 76056713],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([380283564, 6],"int32"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), axis1=-1, axis2=2, )
paddle.diagonal(Tensor([2, 3, 380283564],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), axis1=2, axis2=3, )
paddle.diagonal(Tensor([2, 3, 380283564],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([2, 3, 380283564],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 29826162, 6, 2, 2],"float16"), )
paddle.diagonal(Tensor([10, 3, 76056713],"float32"), )
paddle.diagonal(x=Tensor([715827883, 6],"float16"), )
paddle.diagonal(Tensor([190141782, 3, 4],"float32"), )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), axis1=0, axis2=3, )
paddle.diagonal(Tensor([2, 285212673, 4],"float32"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), axis1=3, axis2=4, )
paddle.diagonal(Tensor([1, 1140850690, 2],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(x=Tensor([29826162, 6, 6, 2, 2],"float16"), axis1=0, axis2=3, )
paddle.diagonal(Tensor([10, 57042535, 4],"float32"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 9942054],"float16"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 380283564],"int32"), )
paddle.diagonal(Tensor([10, 3, 76056713],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(x=Tensor([6, 6, 29826162, 2, 2],"float16"), axis1=-1, axis2=2, )
paddle.diagonal(Tensor([2, 285212673, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(x=Tensor([119304648, 6, 6],"float16"), )
paddle.diagonal(Tensor([2, 285212673, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(x=Tensor([6, 119304648, 6],"float16"), )
paddle.diagonal(Tensor([570425345, 2, 2],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(x=Tensor([6, 6, 6, 9942054, 2],"float16"), axis1=0, axis2=3, )
paddle.diagonal_scatter(Tensor([10, 228170138],"float32"), Tensor([8],"float32"), offset=-2, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([429496730, 10],"int16"), Tensor([10],"int16"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 429496730],"int8"), Tensor([10],"int8"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 228170138],"float32"), Tensor([10],"float32"), offset=0, axis1=1, axis2=0, )
paddle.diagonal_scatter(Tensor([228170138, 10],"int32"), Tensor([10],"int32"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([228170138, 10],"float32"), Tensor([10],"float32"), offset=0, axis1=1, axis2=0, )
paddle.diagonal_scatter(Tensor([10, 429496730],"float16"), Tensor([10],"float16"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 429496730],"int16"), Tensor([10],"int16"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([228170138, 10],"float32"), Tensor([9],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 228170138],"int32"), Tensor([10],"int32"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([429496730, 10],"uint8"), Tensor([10],"uint8"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 429496730],"uint8"), Tensor([10],"uint8"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([429496730, 10],"int8"), Tensor([10],"int8"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 228170138],"bool"), Tensor([10],"bool"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([429496730, 10],"float16"), Tensor([10],"float16"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([228170138, 10],"float32"), Tensor([10],"float32"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([10, 228170138],"float32"), Tensor([10],"float32"), offset=0, axis1=0, axis2=1, )
paddle.diagonal_scatter(Tensor([228170138, 10],"bool"), Tensor([10],"bool"), offset=0, axis1=0, axis2=1, )
paddle.diff(Tensor([2, 1140850690],"float32"), axis=1, )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=Tensor([2, 1140850690],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(x=Tensor([2281701379],"int64"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([760567127, 3],"float32"), axis=1, )
paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4294967297],"float16"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=None, )
paddle.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([1073741825, 4],"float16"), )
paddle.diff(Tensor([2281701379],"bool"), n=1, axis=-1, prepend=None, append=None, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=None, append=None, )
paddle.diff(Tensor([1073741825, 4],"float16"), axis=1, )
paddle.diff(Tensor([2281701379],"float32"), )
paddle.diff(x=Tensor([2281701379],"int32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=-1, prepend=None, append=Tensor([2, 3],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=0, prepend=Tensor([2, 1140850690],"float32"), append=None, )
paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4],"float16"), )
paddle.diff(Tensor([1431655766, 3],"float16"), axis=1, )
paddle.diff(x=Tensor([1073741825, 4],"float16"), )
paddle.diff(x=Tensor([4, 67108865, 4, 4],"float16"), axis=-2, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=Tensor([2, 1140850690],"float32"), append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=-1, prepend=None, append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=-1, prepend=Tensor([2, 2],"float32"), append=Tensor([2, 3],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([570425345, 4],"float32"), )
paddle.diff(x=Tensor([4, 4, 67108865, 4],"float16"), axis=2, )
paddle.diff(x=Tensor([4294967297],"float16"), )
paddle.diff(Tensor([10, 228170138],"float32"), n=1, axis=-1, prepend=None, append=None, )
paddle.diff(Tensor([2281701379],"float32"), n=2, axis=0, prepend=None, append=None, )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=1, prepend=None, append=None, )
paddle.diff(x=Tensor([67108865, 4, 4, 4],"float16"), axis=-2, )
paddle.diff(x=Tensor([4, 4, 4, 67108865],"float16"), )
paddle.diff(Tensor([4, 1073741825],"float16"), axis=1, )
paddle.diff(x=Tensor([10, 429496730],"float16"), axis=0, prepend=Tensor([4, 429496730],"float16"), append=Tensor([4, 429496730],"float16"), )
paddle.diff(Tensor([2281701379],"float32"), n=1, axis=-1, prepend=None, append=None, )
paddle.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([1073741825, 4],"float16"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=-1, prepend=Tensor([2, 4],"float32"), append=None, )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([1, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4294967297],"float16"), )
paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4],"float16"), )
paddle.diff(x=Tensor([4, 268435457, 4],"float16"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([3, 4],"float32"), append=None, )
paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.diff(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.diff(x=Tensor([4, 67108865, 4, 4],"float16"), axis=2, )
paddle.diff(x=Tensor([268435457, 4, 4],"float16"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=Tensor([2, 1140850690],"float32"), append=None, )
paddle.diff(x=Tensor([4, 1073741825],"float16"), )
paddle.diff(Tensor([2, 2147483649],"float16"), axis=1, )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=-1, prepend=Tensor([570425345, 3],"float32"), append=None, )
paddle.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.diff(x=Tensor([4, 4, 268435457],"float16"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.diff(x=Tensor([4, 4, 4, 67108865],"float16"), axis=-2, )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([570425345, 4],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.diff(x=Tensor([4, 4, 4, 67108865],"float16"), axis=2, )
paddle.diff(x=Tensor([2281701379],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=None, append=Tensor([1, 1140850690],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=Tensor([2, 1140850690],"float32"), append=None, )
paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 760567127],"float32"), n=1, axis=0, prepend=Tensor([3, 760567127],"float32"), append=None, )
paddle.diff(x=Tensor([4, 4, 67108865, 4],"float16"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=-1, prepend=None, append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=-1, prepend=Tensor([2, 3],"float32"), append=None, )
paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.diff(x=Tensor([67108865, 4, 4, 4],"float16"), axis=2, )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=None, append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=Tensor([3, 1140850690],"float32"), append=None, )
paddle.diff(Tensor([228170138, 10],"float32"), n=1, axis=-1, prepend=None, append=None, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=1, prepend=None, append=None, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=-1, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=0, prepend=None, append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=None, )
paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4294967297],"float16"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=Tensor([2, 2],"float32"), append=Tensor([2, 1140850690],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=-1, prepend=Tensor([2, 1140850690],"float32"), append=Tensor([2, 3],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.diff(x=Tensor([4, 4, 67108865, 4],"float16"), axis=-2, )
paddle.diff(x=Tensor([67108865, 4, 4, 4],"float16"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=-1, prepend=None, append=Tensor([570425345, 3],"float32"), )
paddle.digamma(x=Tensor([6, 19884108, 6, 6],"float16"), )
paddle.digamma(x=Tensor([3, 6, 6628036, 6, 6],"float16"), )
paddle.digamma(Tensor([429496730, 5, 2],"float16"), )
paddle.digamma(x=Tensor([6, 6, 19884108, 6],"float16"), )
paddle.digamma(Tensor([10, 228170138],"float32"), )
paddle.digamma(Tensor([190141782, 12],"float32"), )
paddle.digamma(Tensor([2, 1073741825, 2],"float16"), )
paddle.digamma(Tensor([10, 42949673, 10],"float16"), )
paddle.digamma(Tensor([10, 228170138, 1],"float32"), )
paddle.digamma(Tensor([2, 5, 429496730],"float16"), )
paddle.digamma(Tensor([1, 2281701379],"float32"), )
paddle.digamma(Tensor([8, 3, 5592406, 32],"float16"), )
paddle.digamma(Tensor([1398102, 3, 32, 32],"float16"), )
paddle.digamma(x=Tensor([3314018, 6, 6, 6, 6],"float16"), )
paddle.digamma(x=Tensor([6, 6, 119304648],"float16"), )
paddle.digamma(Tensor([10, 10, 21474837, 2],"float16"), )
paddle.digamma(Tensor([42949673, 10, 10],"float16"), )
paddle.digamma(Tensor([10, 21474837, 10, 2],"float16"), )
paddle.digamma(Tensor([760567127, 3],"float32"), )
paddle.digamma(Tensor([10, 10, 10, 4294968],"float16"), )
paddle.digamma(Tensor([742742, 3, 32, 32],"float32"), )
paddle.digamma(x=Tensor([6, 6, 6, 19884108],"float16"), )
paddle.digamma(Tensor([10, 20, 11408507],"float32"), )
paddle.digamma(Tensor([2, 2, 570425345],"float32"), )
paddle.digamma(Tensor([1, 1140850690, 2],"float32"), )
paddle.digamma(Tensor([2, 2147483649],"float16"), )
paddle.digamma(x=Tensor([6, 119304648, 6],"float16"), )
paddle.digamma(Tensor([1, 2, 1140850690],"float32"), )
paddle.digamma(Tensor([114085069, 20, 1],"float32"), )
paddle.digamma(x=Tensor([3, 6628036, 6, 6, 6],"float16"), )
paddle.digamma(Tensor([1140850690, 2],"float32"), )
paddle.digamma(x=Tensor([3, 6, 6, 6, 6628036],"float16"), )
paddle.digamma(x=Tensor([3, 760567127],"float32"), )
paddle.digamma(Tensor([570425345, 2, 2],"float32"), )
paddle.digamma(x=Tensor([3, 6, 6, 6628036, 6],"float16"), )
paddle.digamma(Tensor([8, 524289, 32, 32],"float16"), )
paddle.digamma(x=Tensor([119304648, 6, 6],"float16"), )
paddle.digamma(Tensor([2, 570425345, 2],"float32"), )
paddle.digamma(Tensor([858993460, 5],"float16"), )
paddle.digamma(Tensor([2, 1140850690],"float32"), )
paddle.digamma(Tensor([8, 3, 2970966, 32],"float32"), )
paddle.digamma(Tensor([8, 3, 32, 2970966],"float32"), )
paddle.digamma(Tensor([2281701379],"float32"), )
paddle.digamma(Tensor([10, 10, 42949673],"float16"), )
paddle.digamma(Tensor([8, 278529, 32, 32],"float32"), )
paddle.digamma(Tensor([1431655766, 3],"float16"), )
paddle.digamma(x=Tensor([760567127, 3],"float32"), )
paddle.digamma(Tensor([21474837, 10, 10, 2],"float16"), )
paddle.digamma(Tensor([2281701379, 1],"float32"), )
paddle.digamma(x=Tensor([3, 1431655766],"float16"), )
paddle.digamma(x=Tensor([19884108, 6, 6, 6],"float16"), )
paddle.digamma(x=Tensor([1431655766, 3],"float16"), )
paddle.digamma(Tensor([8, 3, 32, 5592406],"float16"), )
paddle.digamma(Tensor([4294967297],"float16"), )
paddle.digamma(Tensor([4, 570425345],"float32"), )
paddle.dist(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), )
paddle.dist(x=Tensor([1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), p=4, )
paddle.dist(x=Tensor([1073741825, 4],"float16"), y=Tensor([1073741825, 4],"float16"), p=1, )
paddle.dist(Tensor([2, 190141782, 3, 2],"float32"), Tensor([1, 190141782, 3, 1],"float32"), 2, )
paddle.dist(x=Tensor([4, 570425345],"float32"), y=Tensor([4, 570425345],"float32"), )
paddle.dist(Tensor([2, 190141782, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 2, 3, 190141782],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(x=Tensor([2, 2147483649],"float16"), y=Tensor([2, 2147483649],"float16"), p=0, )
paddle.dist(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), p=1, )
paddle.dist(x=Tensor([1073741825, 4],"float16"), y=Tensor([1073741825, 4],"float16"), )
paddle.dist(x=Tensor([10],"float16"), y=Tensor([429496730, 10],"float16"), )
paddle.dist(x=Tensor([10],"float16"), y=Tensor([429496730, 10],"float16"), p=4, )
paddle.dist(x=Tensor([570425345, 4],"float32"), y=Tensor([570425345, 4],"float32"), )
paddle.dist(Tensor([2, 2, 285212673, 2],"float32"), Tensor([1, 1, 285212673, 1],"float32"), 2, )
paddle.dist(Tensor([2, 2, 3, 190141782],"float32"), Tensor([1, 1, 3, 190141782],"float32"), 2, )
paddle.dist(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 0, )
paddle.dist(Tensor([190141782, 2, 3, 2],"float32"), Tensor([190141782, 1, 3, 1],"float32"), 2, )
paddle.dist(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), p=0, )
paddle.dist(Tensor([190141782, 2, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(x=Tensor([1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), )
paddle.dist(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.dist(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), 0, )
paddle.divide(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 95070891, 4],"float32"), )
paddle.divide(Tensor([2, 3, 1, 5],"float32"), Tensor([2, 3, 76056713, 5],"float32"), )
paddle.divide(Tensor([3, 40, 19014179],"float32"), Tensor([3, 40, 19014179],"float32"), name=None, )
paddle.divide(Tensor([3, 11930465, 120],"float16"), Tensor([3, 11930465, 120],"float16"), )
paddle.divide(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.divide(Tensor([104, 21939437],"float32"), Tensor([104, 1],"float32"), )
paddle.divide(Tensor([3, 40, 40, 475355],"float32"), Tensor([3, 40, 40, 475355],"float32"), name=None, )
paddle.divide(x=Tensor([3],"float16"), y=Tensor([4294967297, 1],"float16"), )
paddle.divide(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.divide(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), name="Normal_probs", )
paddle.divide(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), name="Normal_probs", )
paddle.divide(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), )
paddle.divide(x=Tensor([187679, 12158],"float32"), y=Tensor([12158],"float32"), )
paddle.divide(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.divide(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.divide(Tensor([3, 6338060, 40, 3],"float32"), Tensor([3, 6338060, 40, 3],"float32"), name=None, )
paddle.divide(x=Tensor([4294967297, 1],"float16"), y=Tensor([4294967297, 1],"float16"), name=None, )
paddle.divide(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.divide(Tensor([1, 1, 2281701379, 1],"float32"), Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.divide(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.divide(Tensor([1426064, 40, 40],"float32"), Tensor([1426064, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.divide(Tensor([63380594, 3, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.divide(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 1, 4],"float32"), )
paddle.divide(Tensor([475355, 40, 40, 3],"float32"), Tensor([475355, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([2, 285212673, 4],"float32"), Tensor([2, 285212673, 4],"float32"), )
paddle.divide(Tensor([3, 3, 2112687, 40, 3],"float32"), Tensor([3, 3, 2112687, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([3, 40, 6338060, 3],"float32"), Tensor([3, 40, 6338060, 3],"float32"), name=None, )
paddle.divide(Tensor([2, 3, 76056713, 5],"float32"), Tensor([2, 3, 1, 5],"float32"), )
paddle.divide(Tensor([3, 3, 40, 40, 158452],"float32"), Tensor([3, 3, 40, 40, 158452],"float32"), name=None, )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.divide(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.divide(Tensor([3, 19014179, 40],"float32"), Tensor([3, 19014179, 40],"float32"), name=None, )
paddle.divide(Tensor([1, 1, 1, 2281701379],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.divide(Tensor([357914, 100, 120],"float16"), Tensor([357914, 100, 120],"float16"), )
paddle.divide(Tensor([3, 3, 6338060, 40],"float32"), Tensor([3, 3, 6338060, 40],"float32"), name=None, )
paddle.divide(Tensor([158452, 3, 40, 40, 3],"float32"), Tensor([158452, 3, 40, 40, 3],"float32"), name=None, )
paddle.divide(x=Tensor([2147483649, 1],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.divide(Tensor([63380594, 3, 3, 4],"float32"), Tensor([63380594, 3, 1, 1],"float32"), )
paddle.divide(Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.divide(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), name=None, )
paddle.divide(Tensor([63380594, 3, 3, 4],"float32"), Tensor([63380594, 3, 1, 4],"float32"), )
paddle.divide(Tensor([3, 158452, 40, 40, 3],"float32"), Tensor([3, 158452, 40, 40, 3],"float32"), name=None, )
paddle.divide(Tensor([190141782, 12],"float32"), Tensor([190141782, 12],"float32"), )
paddle.divide(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.divide(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.divide(Tensor([3, 3, 3, 2112687, 40],"float32"), Tensor([3, 3, 3, 2112687, 40],"float32"), name=None, )
paddle.divide(Tensor([2, 3, 3, 126761188],"float32"), Tensor([2, 3, 1, 126761188],"float32"), )
paddle.divide(x=Tensor([760567127, 3],"float32"), y=Tensor([3],"float32"), )
paddle.divide(Tensor([2, 3, 3, 126761188],"float32"), Tensor([3, 1, 126761188],"float32"), )
paddle.divide(Tensor([3, 3, 158452, 40, 40],"float32"), Tensor([3, 3, 158452, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([128, 33554433],"float16"), Tensor([128, 33554433],"float16"), )
paddle.divide(Tensor([2281701379, 1, 1, 1],"float32"), Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.divide(Tensor([2, 95070891, 3, 4],"float32"), Tensor([2, 95070891, 1, 4],"float32"), )
paddle.divide(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.divide(Tensor([1, 2281701379, 1, 1],"float32"), Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.divide(Tensor([2281701379, 1, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.divide(Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.divide(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.divide(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.divide(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), )
paddle.divide(Tensor([3, 3, 3, 40, 2112687],"float32"), Tensor([3, 3, 3, 40, 2112687],"float32"), name=None, )
paddle.divide(Tensor([3, 100, 14316558],"float16"), Tensor([3, 100, 14316558],"float16"), )
paddle.divide(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.divide(Tensor([3, 3, 40, 6338060],"float32"), Tensor([3, 3, 40, 6338060],"float32"), name=None, )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.divide(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 95070891, 1],"float32"), )
paddle.divide(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.divide(Tensor([2, 3, 1, 380283564],"float32"), Tensor([2, 3, 1, 380283564],"float32"), )
paddle.divide(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 3, 4],"float32"), )
paddle.divide(Tensor([2, 3, 95070891, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.divide(x=Tensor([4294967297],"float16"), y=Tensor([3, 1],"float16"), )
paddle.divide(Tensor([8388609, 512],"float16"), Tensor([8388609, 1],"float16"), )
paddle.divide(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.divide(x=Tensor([3, 1],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.divide(x=Tensor([3, 477218589, 3],"float16"), y=Tensor([3],"float16"), )
paddle.divide(Tensor([3, 475355, 40, 40],"float32"), Tensor([3, 475355, 40, 40],"float32"), name=None, )
paddle.divide(x=Tensor([3, 1],"float16"), y=Tensor([3, 1431655766],"float16"), name=None, )
paddle.divide(x=Tensor([477218589, 3, 3],"float16"), y=Tensor([3],"float16"), )
paddle.divide(Tensor([1, 3],"float32"), Tensor([760567127, 3],"float32"), )
paddle.divide(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1],"float16"), name=None, )
paddle.divide(Tensor([1, 2281701379, 1, 1],"float32"), Tensor([1, 1, 1, 1],"float32"), )
paddle.divide(Tensor([128, 33554433],"float16"), Tensor([128, 1],"float16"), )
paddle.divide(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3, 380283564],"float32"), )
paddle.divide(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.divide(Tensor([104, 21939437],"float32"), Tensor([104, 21939437],"float32"), )
paddle.divide(Tensor([357913942, 12],"float16"), Tensor([357913942, 12],"float16"), )
paddle.divide(Tensor([158452, 3, 3, 40, 40],"float32"), Tensor([158452, 3, 3, 40, 40],"float32"), name=None, )
paddle.divide(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.divide(Tensor([1, 1, 1, 1],"float32"), Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.divide(Tensor([128, 93431],"float32"), Tensor([1, 93431],"float32"), )
paddle.divide(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), name="Normal_probs", )
paddle.divide(Tensor([2, 3, 3, 126761188],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.divide(Tensor([17825793, 128],"float32"), Tensor([17825793, 1],"float32"), )
paddle.divide(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), )
paddle.divide(Tensor([760567127, 3],"float32"), Tensor([1, 3],"float32"), )
paddle.divide(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), name="Normal_probs", )
paddle.divide(Tensor([2, 95070891, 3, 4],"float32"), Tensor([2, 95070891, 1, 1],"float32"), )
paddle.divide(Tensor([475355, 3, 40, 40],"float32"), Tensor([475355, 3, 40, 40],"float32"), name=None, )
paddle.dsplit(Tensor([4, 3, 190141782],"int64"), list[-1,], )
paddle.dsplit(Tensor([126761188, 3, 6],"int64"), list[2,4,], )
paddle.dsplit(Tensor([4, 95070891, 6],"int64"), list[-1,1,3,], )
paddle.dsplit(Tensor([4, 95070891, 6],"int64"), tuple(2,1,3,), )
paddle.dsplit(Tensor([4, 95070891, 6],"int64"), list[2,4,], )
paddle.dsplit(Tensor([4, 3, 190141782],"int64"), list[2,4,], )
paddle.dsplit(Tensor([126761188, 3, 6],"int64"), tuple(2,1,3,), )
paddle.dsplit(Tensor([4, 95070891, 6],"int64"), list[-1,], )
paddle.dsplit(Tensor([126761188, 3, 6],"int64"), list[-1,1,3,], )
paddle.dsplit(Tensor([126761188, 3, 6],"int64"), list[-1,], )
paddle.dsplit(Tensor([4, 3, 190141782],"int64"), tuple(2,1,3,), )
paddle.dstack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.dstack(list[Tensor([536870913, 4, 2],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([4294967297],"float16"),Tensor([1, 4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.dstack(list[Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2, 178956971],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),], )
paddle.dstack(list[Tensor([4294967297],"float16"),Tensor([1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([3, 1431655766],"float16"),], )
paddle.dstack(list[Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([4294967297],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], )
paddle.dstack(list[Tensor([2],"float16"),Tensor([1, 2, 2147483649],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 4, 357913942],"float16"),], )
paddle.dstack(list[Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),Tensor([4294967297],"float16"),], )
paddle.dstack(list[Tensor([3, 715827883, 2],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2],"float16"),Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.dstack(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], )
paddle.dstack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 357913942],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.dstack(list[Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),Tensor([3, 4, 2, 178956971],"float16"),], )
paddle.dstack(list[Tensor([2147483649, 2],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 1],"float16"),], )
paddle.dstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 130, 130],"float32"), Tensor([10, 8, 130, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([7, 8, 176, 176],"float32"), Tensor([7, 8, 176, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 219, 64],"float32"), Tensor([8, 8, 219, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 147, 129],"float32"), Tensor([10, 8, 129, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 150, 150],"float32"), Tensor([10, 8, 150, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([9, 8, 106, 89],"float32"), Tensor([9, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 68, 121],"float32"), Tensor([8, 8, 121, 64],"float32"), )
paddle.einsum("...qhd,...khd->...hqk", Tensor([256, 128, 16, 4353],"float32"), Tensor([256, 50, 16, 4353],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 90, 64],"float32"), Tensor([30, 8, 90, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 190, 64],"float32"), Tensor([30, 8, 190, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 72, 129],"float32"), Tensor([10, 8, 129, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 58, 105],"float32"), Tensor([10, 8, 105, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 68, 137],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 130, 64],"float32"), Tensor([8, 8, 130, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 76, 64],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 171, 171],"float32"), Tensor([10, 8, 171, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 162, 162],"float32"), Tensor([10, 8, 162, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 133, 137],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([6, 8, 118, 118],"float32"), Tensor([6, 8, 118, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 92, 64],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("bhlqk,bhlkd->bhlqd", Tensor([13, 4, 1, 1, 7],"float32"), Tensor([13, 4, 1, 7, 6268411],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 147, 105],"float32"), Tensor([30, 8, 105, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 126, 105],"float32"), Tensor([10, 8, 105, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 111, 64],"float32"), Tensor([10, 8, 105, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 152, 137],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 225, 64],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 80, 64],"float32"), Tensor([30, 8, 80, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 130, 73],"float32"), Tensor([10, 8, 73, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 160, 64],"float32"), Tensor([7, 8, 160, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 183, 64],"float32"), Tensor([10, 8, 183, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 113, 129],"float32"), Tensor([10, 8, 129, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([7, 8, 150, 64],"float32"), Tensor([7, 8, 153, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 226, 64],"float32"), Tensor([8, 8, 226, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 155, 155],"float32"), Tensor([30, 8, 155, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 132, 137],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 61, 64],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("nbts,nbsc->nbtc", Tensor([2, 52, 7, 3134206],"float32"), Tensor([2, 52, 3134206, 8],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 52, 64],"float32"), Tensor([30, 8, 17, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 132, 64],"float32"), Tensor([10, 8, 105, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 200, 113],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 63, 64],"float32"), Tensor([30, 8, 63, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 82, 89],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 83, 64],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 158, 129],"float32"), Tensor([10, 8, 129, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 140, 64],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 81, 64],"float32"), Tensor([30, 8, 21, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 190, 113],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 244, 113],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 146, 64],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 131, 105],"float32"), Tensor([10, 8, 105, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 253, 253],"float32"), Tensor([8, 8, 253, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 119, 64],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 106, 64],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 233, 113],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 115, 64],"float32"), Tensor([10, 8, 129, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 146, 64],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 228, 228],"float32"), Tensor([8, 8, 228, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 133, 64],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([8, 8, 198, 64],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 112, 112],"float32"), Tensor([10, 8, 112, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 142, 64],"float32"), Tensor([30, 8, 142, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 49, 64],"float32"), Tensor([30, 8, 49, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 143, 89],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([9, 8, 94, 94],"float32"), Tensor([9, 8, 94, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 125, 64],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 302, 64],"float32"), Tensor([30, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 158, 64],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 93, 64],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 139, 73],"float32"), Tensor([10, 8, 73, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([6, 8, 157, 157],"float32"), Tensor([6, 8, 157, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([9, 8, 93, 93],"float32"), Tensor([9, 8, 93, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 147, 64],"float32"), Tensor([10, 8, 97, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 166, 64],"float32"), Tensor([10, 8, 97, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 191, 113],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 82, 33],"float32"), Tensor([30, 8, 33, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 227, 227],"float32"), Tensor([30, 8, 227, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 130, 64],"float32"), Tensor([30, 8, 130, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 108, 41],"float32"), Tensor([30, 8, 41, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 106, 45],"float32"), Tensor([30, 8, 45, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 98, 64],"float32"), Tensor([30, 8, 49, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([7, 8, 179, 153],"float32"), Tensor([7, 8, 153, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 80, 33],"float32"), Tensor([30, 8, 33, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 82, 64],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 106, 64],"float32"), Tensor([10, 8, 105, 64],"float32"), )
paddle.einsum("nbtc,nbsc->nbts", Tensor([2, 52, 7, 8],"float32"), Tensor([2, 52, 2742430, 8],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([7, 8, 156, 156],"float32"), Tensor([7, 8, 156, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 80, 129],"float32"), Tensor([10, 8, 129, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 37, 137],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 207, 64],"float32"), Tensor([30, 8, 105, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 153, 64],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([10, 8, 97, 137],"float32"), Tensor([10, 8, 137, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([30, 8, 100, 64],"float32"), Tensor([30, 8, 65, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 148, 64],"float32"), Tensor([10, 8, 89, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 161, 161],"float32"), Tensor([8, 8, 161, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 114, 57],"float32"), Tensor([30, 8, 57, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([30, 8, 144, 97],"float32"), Tensor([30, 8, 97, 64],"float32"), )
paddle.einsum("bhwc,wkc->bhwk", Tensor([432, 14, 14, 64],"float32"), Tensor([14, 14, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 280, 113],"float32"), Tensor([8, 8, 113, 64],"float32"), )
paddle.einsum("b h i d, b h j d -> b h i j", Tensor([10, 8, 134, 64],"float32"), Tensor([10, 8, 105, 64],"float32"), )
paddle.einsum("b h i j, b h j d -> b h i d", Tensor([8, 8, 194, 194],"float32"), Tensor([8, 8, 194, 64],"float32"), )
paddle.equal(Tensor([4148, 550073],"int64"), Tensor([4148, 550073],"int64"), )
paddle.equal(Tensor([1, 285212673, 8],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float32"), )
paddle.equal(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.equal(Tensor([13, 175515491],"int32"), Tensor([13, 175515491],"int32"), )
paddle.equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.equal(Tensor([1, 81489335, 28],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float64"), )
paddle.equal(Tensor([1140850690, 2],"int64"), Tensor([2],"int64"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 1431655766],"float16"), y=Tensor([1, 1, 1, 1, 3, 1431655766],"float16"), )
paddle.equal(x=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.equal(Tensor([2281701379],"int64"), 0, )
paddle.equal(Tensor([2281701379],"int64"), 10, )
paddle.equal(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.equal(Tensor([1, 28, 81489335],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(x=Tensor([3, 477218589, 3],"float16"), y=Tensor([3, 477218589, 3],"float16"), )
paddle.equal(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.equal(Tensor([28, 81489335],"float32"), Tensor([28, 81489335],"float32"), )
paddle.equal(Tensor([52, 43878873],"int64"), 0, )
paddle.equal(x=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), y=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), )
paddle.equal(Tensor([114, 37675152],"float16"), Tensor([114, 1],"float16"), )
paddle.equal(Tensor([2, 2147483649],"float16"), 0, )
paddle.equal(Tensor([2281701379],"int64"), 1, )
paddle.equal(x=Tensor([1, 1, 1, 1, 1431655766, 3],"float16"), y=Tensor([1, 1, 1, 1, 1431655766, 3],"float16"), )
paddle.equal(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.equal(x=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.equal(Tensor([4, 570425345],"float32"), Tensor([4, 570425345],"float32"), )
paddle.equal(Tensor([114, 1],"float16"), Tensor([114, 37675152],"float16"), )
paddle.equal(x=Tensor([3, 3, 253522376],"float32"), y=Tensor([3, 3, 253522376],"float32"), )
paddle.equal(Tensor([35651585, 1, 8, 8],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([1431655766, 3],"float16"), 0, )
paddle.equal(Tensor([35651585, 8, 8],"float32"), Tensor([35651585, 8, 8],"float32"), )
paddle.equal(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), )
paddle.equal(x=Tensor([3, 3, 1],"float16"), y=Tensor([3, 3, 3, 159072863],"float16"), )
paddle.equal(x=Tensor([253522376, 3, 3],"int32"), y=Tensor([253522376, 3, 3],"int32"), )
paddle.equal(x=Tensor([1, 1, 1431655766, 3],"float16"), y=Tensor([1, 3],"float16"), )
paddle.equal(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.equal(Tensor([400, 1],"float16"), Tensor([400, 10737419],"float16"), )
paddle.equal(x=Tensor([1, 3],"float16"), y=Tensor([477218589, 1, 3, 3],"float16"), )
paddle.equal(Tensor([570425345, 4],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.equal(Tensor([1],"int32"), Tensor([2281701379],"int32"), )
paddle.equal(x=Tensor([477218589, 1, 3, 3],"float16"), y=Tensor([1, 3],"float16"), )
paddle.equal(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.equal(Tensor([152113426, 5, 3],"float32"), Tensor([152113426, 5, 3],"float32"), )
paddle.equal(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.equal(x=Tensor([3, 253522376, 3],"int64"), y=Tensor([3, 253522376, 3],"int64"), )
paddle.equal(Tensor([2, 1140850690],"int64"), Tensor([1140850690],"int64"), )
paddle.equal(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.equal(Tensor([2, 1, 8, 142606337],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([2281701379],"int32"), 0, )
paddle.equal(Tensor([8, 285212673],"float32"), Tensor([8, 285212673],"float32"), )
paddle.equal(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.equal(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), )
paddle.equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float64"), )
paddle.equal(Tensor([400, 10737419],"float16"), Tensor([400, 10737419],"float16"), )
paddle.equal(Tensor([35651585, 8, 8],"int32"), Tensor([35651585, 1, 1],"int32"), )
paddle.equal(x=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.equal(Tensor([2, 1140850690],"float32"), 0, )
paddle.equal(Tensor([18, 126761188],"float32"), Tensor([18, 126761188],"float32"), )
paddle.equal(Tensor([4, 570425345],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([760567127, 3],"float32"), 0, )
paddle.equal(Tensor([2281701379],"int64"), 2, )
paddle.equal(Tensor([2281701379, 1],"int64"), Tensor([1],"int64"), )
paddle.equal(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), )
paddle.equal(Tensor([4294967297, 1],"float16"), Tensor([4294967297, 1],"float16"), )
paddle.equal(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.equal(Tensor([1, 28, 81489335],"int32"), Tensor([6, 1, 81489335],"int32"), )
paddle.equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 477218589, 1, 3, 3],"float16"), )
paddle.equal(Tensor([715827883, 3, 2],"float64"), Tensor([715827883, 3, 2],"float16"), )
paddle.equal(x=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), y=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), )
paddle.equal(Tensor([2281701379],"int64"), True, )
paddle.equal(Tensor([285212673, 8],"int64"), Tensor([1],"int64"), )
paddle.equal(x=Tensor([3, 3, 477218589],"float16"), y=Tensor([3, 3, 477218589],"float16"), )
paddle.equal(Tensor([2, 1],"int64"), Tensor([2281701379],"int64"), )
paddle.equal(Tensor([8, 285212673],"int64"), Tensor([1],"int64"), )
paddle.equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), )
paddle.equal(Tensor([2, 8, 142606337],"float32"), Tensor([2, 8, 142606337],"float32"), )
paddle.equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 1, 477218589, 3, 3],"float16"), )
paddle.equal(Tensor([2910334, 28, 28],"int32"), Tensor([2910334, 1, 1],"int32"), )
paddle.equal(x=Tensor([253522376, 3, 3],"float32"), y=Tensor([253522376, 3, 3],"float32"), )
paddle.equal(x=Tensor([477218589, 3, 3],"float16"), y=Tensor([477218589, 3, 3],"float16"), )
paddle.equal(Tensor([1, 8, 285212673],"int32"), Tensor([6, 1, 285212673],"int32"), )
paddle.equal(Tensor([2, 1140850690],"int64"), 1, )
paddle.equal(x=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), y=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), )
paddle.equal(Tensor([400, 10737419],"float16"), Tensor([400, 1],"float16"), )
paddle.equal(Tensor([416, 5484860],"int64"), 0, )
paddle.equal(Tensor([1, 8, 285212673],"int32"), Tensor([6, 1, 1],"int32"), )
paddle.equal(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.equal(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float64"), )
paddle.equal(Tensor([1, 81489335, 28],"int32"), Tensor([6, 81489335, 1],"int32"), )
paddle.equal(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"float16"), )
paddle.equal(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float64"), )
paddle.equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.equal(Tensor([10, 228170138],"int32"), 0, )
paddle.equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 477218589, 3, 3],"float16"), )
paddle.equal(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.equal(x=Tensor([3, 1431655766],"float16"), y=Tensor([1, 1431655766],"float16"), )
paddle.equal_all(Tensor([7130317, 2, 10, 16],"bool"), Tensor([7130317, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([2, 1, 1140850690],"int64"), Tensor([2, 1, 4],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float32"), y=Tensor([3, 3, 253522376],"float32"), )
paddle.equal_all(Tensor([142606337, 16],"float32"), Tensor([142606337, 16],"float32"), )
paddle.equal_all(x=Tensor([3, 253522376, 3],"float32"), y=Tensor([3, 253522376, 3],"float32"), )
paddle.equal_all(Tensor([2, 1140850690],"int64"), Tensor([2, 1],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int64"), y=Tensor([3, 3, 253522376],"int64"), )
paddle.equal_all(Tensor([10, 228170138],"int32"), Tensor([10, 228170138],"int32"), )
paddle.equal_all(Tensor([2, 2, 4],"int64"), Tensor([2, 2, 570425345],"int64"), )
paddle.equal_all(Tensor([228170138, 10],"int32"), Tensor([10, 10],"int32"), )
paddle.equal_all(Tensor([2, 2, 3],"int64"), Tensor([2, 2, 570425345],"int64"), )
paddle.equal_all(Tensor([325957340, 7],"int64"), Tensor([13, 7],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 253522376],"int64"), y=Tensor([3, 3, 3],"int64"), )
paddle.equal_all(Tensor([1, 2, 285212673, 4],"float32"), Tensor([1, 2, 285212673, 4],"float32"), )
paddle.equal_all(Tensor([10, 228170138],"int32"), Tensor([10, 10],"int32"), )
paddle.equal_all(Tensor([13, 7],"int64"), Tensor([13, 175515491],"int64"), )
paddle.equal_all(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 2, 3, 380283564],"float32"), )
paddle.equal_all(Tensor([2281701379],"float32"), Tensor([24],"float32"), )
paddle.equal_all(x=Tensor([253522376, 3, 3],"int32"), y=Tensor([3, 3, 3],"int32"), )
paddle.equal_all(Tensor([2, 1, 2],"int64"), Tensor([1140850690, 1, 2],"int64"), )
paddle.equal_all(x=Tensor([3, 253522376, 3],"int32"), y=Tensor([3, 3, 3],"int32"), )
paddle.equal_all(Tensor([2, 2, 4],"int64"), Tensor([2, 285212673, 4],"int64"), )
paddle.equal_all(Tensor([1, 2281701379],"float32"), Tensor([1, 2],"float32"), )
paddle.equal_all(Tensor([32],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int32"), y=Tensor([3, 3, 253522376],"int32"), )
paddle.equal_all(Tensor([2, 285212673, 4],"int64"), Tensor([2, 285212673, 4],"int64"), )
paddle.equal_all(Tensor([142606337, 16],"float32"), Tensor([16, 16],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int64"), y=Tensor([253522376, 3, 3],"int64"), )
paddle.equal_all(Tensor([2, 380283564, 3],"int64"), Tensor([2, 380283564, 3],"int64"), )
paddle.equal_all(Tensor([380283564, 2, 3],"int64"), Tensor([380283564, 2, 3],"int64"), )
paddle.equal_all(Tensor([1140850690, 1, 2],"int64"), Tensor([2, 1, 2],"int64"), )
paddle.equal_all(Tensor([128],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 190141782, 3, 4],"float32"), )
paddle.equal_all(Tensor([2, 1, 2],"int64"), Tensor([2, 1, 1140850690],"int64"), )
paddle.equal_all(x=Tensor([253522376, 3, 3],"int64"), y=Tensor([253522376, 3, 3],"int64"), )
paddle.equal_all(Tensor([2281701379],"float32"), Tensor([128],"float32"), )
paddle.equal_all(Tensor([2, 285212673, 4],"int64"), Tensor([2, 1, 4],"int64"), )
paddle.equal_all(Tensor([16, 142606337],"float32"), Tensor([16, 142606337],"float32"), )
paddle.equal_all(Tensor([228170138, 10],"int32"), Tensor([228170138, 10],"int32"), )
paddle.equal_all(Tensor([1, 190141782, 3, 4],"float32"), Tensor([1, 190141782, 3, 4],"float32"), )
paddle.equal_all(Tensor([64],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(Tensor([285212673, 2, 4],"int64"), Tensor([285212673, 2, 4],"int64"), )
paddle.equal_all(Tensor([1, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.equal_all(Tensor([1140850690, 2],"float32"), Tensor([1, 2],"float32"), )
paddle.equal_all(Tensor([16, 142606337],"float32"), Tensor([16, 16],"float32"), )
paddle.equal_all(Tensor([380283564, 2, 3],"int64"), Tensor([2, 2, 3],"int64"), )
paddle.equal_all(Tensor([2, 570425345, 2],"int64"), Tensor([2, 1, 2],"int64"), )
paddle.equal_all(Tensor([2, 1, 4],"int64"), Tensor([2, 1, 1140850690],"int64"), )
paddle.equal_all(Tensor([2281701379],"float32"), Tensor([32],"float32"), )
paddle.equal_all(Tensor([285212673, 2, 4],"int64"), Tensor([2, 2, 4],"int64"), )
paddle.equal_all(x=Tensor([3, 253522376, 3],"float32"), y=Tensor([3, 3, 3],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 4],"float32"), Tensor([1, 2, 285212673, 4],"float32"), )
paddle.equal_all(Tensor([570425345, 1, 4],"int64"), Tensor([2, 1, 4],"int64"), )
paddle.equal_all(Tensor([7130317, 2, 10, 16],"bool"), Tensor([1, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([2281701379, 1],"int64"), Tensor([2, 1],"int64"), )
paddle.equal_all(Tensor([2, 2, 3],"int64"), Tensor([2, 380283564, 3],"int64"), )
paddle.equal_all(Tensor([2, 1],"int64"), Tensor([2, 1140850690],"int64"), )
paddle.equal_all(Tensor([95070891, 2, 3, 4],"float32"), Tensor([95070891, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([2, 1, 2],"int64"), Tensor([2, 570425345, 2],"int64"), )
paddle.equal_all(x=Tensor([253522376, 3, 3],"float32"), y=Tensor([3, 3, 3],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 253522376],"int32"), y=Tensor([3, 3, 253522376],"int32"), )
paddle.equal_all(x=Tensor([3, 3, 253522376],"float32"), y=Tensor([3, 3, 253522376],"float32"), )
paddle.equal_all(Tensor([2, 570425345, 2],"int64"), Tensor([2, 570425345, 2],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 253522376],"int64"), y=Tensor([3, 3, 253522376],"int64"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float32"), y=Tensor([3, 253522376, 3],"float32"), )
paddle.equal_all(Tensor([228170138, 10],"float32"), Tensor([228170138, 10],"float32"), )
paddle.equal_all(Tensor([570425345, 1, 4],"int64"), Tensor([570425345, 1, 4],"int64"), )
paddle.equal_all(Tensor([2281701379],"float32"), Tensor([16],"float32"), )
paddle.equal_all(Tensor([2, 1, 4],"int64"), Tensor([2, 285212673, 4],"int64"), )
paddle.equal_all(Tensor([13, 175515491],"int64"), Tensor([13, 7],"int64"), )
paddle.equal_all(x=Tensor([253522376, 3, 3],"float32"), y=Tensor([253522376, 3, 3],"float32"), )
paddle.equal_all(Tensor([50],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(x=Tensor([3, 3, 3],"float32"), y=Tensor([253522376, 3, 3],"float32"), )
paddle.equal_all(Tensor([1, 2, 285212673, 4],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([2, 1140850690],"int64"), Tensor([2, 1140850690],"int64"), )
paddle.equal_all(Tensor([1, 2, 10, 114085069],"bool"), Tensor([1, 2, 10, 16],"bool"), )
paddle.equal_all(x=Tensor([3, 3, 3],"int64"), y=Tensor([3, 253522376, 3],"int64"), )
paddle.equal_all(Tensor([2, 2, 570425345],"int64"), Tensor([2, 2, 3],"int64"), )
paddle.equal_all(Tensor([2, 1, 4],"int64"), Tensor([570425345, 1, 4],"int64"), )
paddle.equal_all(Tensor([10, 10],"int32"), Tensor([228170138, 10],"int32"), )
paddle.equal_all(Tensor([95070891, 2, 3, 4],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([2, 1, 1140850690],"int64"), Tensor([2, 1, 2],"int64"), )
paddle.equal_all(Tensor([2, 2, 3],"int64"), Tensor([380283564, 2, 3],"int64"), )
paddle.equal_all(Tensor([1, 2, 10, 114085069],"bool"), Tensor([1, 2, 10, 114085069],"bool"), )
paddle.equal_all(Tensor([1, 190141782, 3, 4],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 14260634, 10, 16],"bool"), Tensor([1, 14260634, 10, 16],"bool"), )
paddle.equal_all(Tensor([1140850690, 1, 2],"int64"), Tensor([1140850690, 1, 2],"int64"), )
paddle.equal_all(Tensor([24],"float32"), Tensor([2281701379],"float32"), )
paddle.equal_all(Tensor([13, 175515491],"int64"), Tensor([13, 175515491],"int64"), )
paddle.equal_all(Tensor([1, 2, 10, 16],"bool"), Tensor([1, 2, 71303169, 16],"bool"), )
paddle.equal_all(Tensor([1, 2, 71303169, 16],"bool"), Tensor([1, 2, 71303169, 16],"bool"), )
paddle.equal_all(Tensor([1, 14260634, 10, 16],"bool"), Tensor([1, 2, 10, 16],"bool"), )
paddle.equal_all(Tensor([1, 10],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.equal_all(Tensor([1, 2, 3, 380283564],"float32"), Tensor([1, 2, 3, 4],"float32"), )
paddle.equal_all(Tensor([1, 2, 10, 16],"bool"), Tensor([1, 14260634, 10, 16],"bool"), )
paddle.equal_all(Tensor([2281701379, 1],"int64"), Tensor([2281701379, 1],"int64"), )
paddle.equal_all(Tensor([1, 2],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.equal_all(Tensor([2, 2, 570425345],"int64"), Tensor([2, 2, 4],"int64"), )
paddle.equal_all(Tensor([1, 2, 3, 380283564],"float32"), Tensor([1, 2, 3, 380283564],"float32"), )
paddle.equal_all(x=Tensor([253522376, 3, 3],"int64"), y=Tensor([3, 3, 3],"int64"), )
paddle.erf(x=Tensor([1140850690, 2],"float32"), )
paddle.erf(Tensor([11, 390451573],"float16"), )
paddle.erf(Tensor([4, 357913942, 3],"float16"), )
paddle.erf(Tensor([4, 2, 3, 178956971],"float16"), )
paddle.erf(x=Tensor([2281701379],"float32"), )
paddle.erf(Tensor([252645136, 17],"float16"), )
paddle.erf(x=Tensor([2, 1140850690],"float32"), )
paddle.erf(Tensor([2147483649, 2],"float16"), )
paddle.erf(Tensor([4, 2, 3, 44739243, 4],"float16"), )
paddle.erf(Tensor([143165577, 2, 3, 5],"float16"), )
paddle.erf(x=Tensor([2, 2147483649],"float16"), )
paddle.erf(Tensor([4, 2, 26843546, 5, 4],"float16"), )
paddle.erf(Tensor([4, 17895698, 3, 5, 4],"float16"), )
paddle.erf(Tensor([4, 71582789, 3, 5],"float16"), )
paddle.erf(Tensor([4, 1073741825],"float16"), )
paddle.erf(x=Tensor([4294967297],"float16"), )
paddle.erf(Tensor([715827883, 2, 3],"float16"), )
paddle.erf(Tensor([4, 2, 3, 5, 35791395],"float16"), )
paddle.erf(Tensor([35791395, 2, 3, 5, 4],"float16"), )
paddle.erf(x=Tensor([2147483649, 2],"float16"), )
paddle.erf(Tensor([4294967297],"float16"), )
paddle.erf(Tensor([4, 2, 107374183, 5],"float16"), )
paddle.erf(Tensor([4, 2, 536870913],"float16"), )
paddle.erfinv(x=Tensor([4, 2, 536870913],"float16"), )
paddle.erfinv(x=Tensor([4, 2, 3, 5, 35791395],"float16"), )
paddle.erfinv(x=Tensor([4, 2, 107374183, 5],"float16"), )
paddle.erfinv(x=Tensor([715827883, 2, 3],"float16"), )
paddle.erfinv(x=Tensor([4, 17895698, 3, 5, 4],"float16"), )
paddle.erfinv(x=Tensor([4294967297],"float16"), )
paddle.erfinv(Tensor([2281701379],"float32"), )
paddle.erfinv(x=Tensor([4, 357913942, 3],"float16"), )
paddle.erfinv(x=Tensor([4, 2, 3, 44739243, 4],"float16"), )
paddle.erfinv(x=Tensor([35791395, 2, 3, 5, 4],"float16"), )
paddle.erfinv(x=Tensor([143165577, 2, 3, 5],"float16"), )
paddle.erfinv(x=Tensor([2281701379],"float32"), )
paddle.erfinv(x=Tensor([4, 2, 3, 178956971],"float16"), )
paddle.erfinv(x=Tensor([2147483649, 2],"float16"), )
paddle.erfinv(x=Tensor([4, 1073741825],"float16"), )
paddle.erfinv(x=Tensor([4, 2, 26843546, 5, 4],"float16"), )
paddle.erfinv(x=Tensor([4, 71582789, 3, 5],"float16"), )
paddle.exp(Tensor([318318, 64, 7, 16],"float32"), )
paddle.exp(Tensor([8, 3, 1398102, 68, 1],"float32"), )
paddle.exp(Tensor([2, 3, 10, 10, 3802836],"float32"), )
paddle.exp(Tensor([2, 4456449, 16, 16, 1],"float32"), )
paddle.exp(Tensor([13, 2, 8, 1371215, 8],"float32"), )
paddle.exp(Tensor([1, 2, 3, 715827883],"float16"), )
paddle.exp(Tensor([2, 220072, 72, 72, 1],"float32"), )
paddle.exp(Tensor([8, 3, 1250933, 76, 1],"float32"), )
paddle.exp(Tensor([2, 3947581, 17, 17, 1],"float32"), )
paddle.exp(Tensor([2, 3, 13, 13, 2250199],"float32"), )
paddle.exp(Tensor([3880445, 3, 14, 14, 1],"float32"), )
paddle.exp(Tensor([2, 3, 5003732, 76, 1],"float32"), )
paddle.exp(Tensor([8, 4116, 69294],"float32"), )
paddle.exp(Tensor([10, 760568, 300],"int64"), )
paddle.exp(Tensor([4, 1073741825],"float16"), )
paddle.exp(Tensor([8, 310, 960, 960],"float32"), )
paddle.exp(Tensor([392855, 3, 44, 44, 1],"float32"), )
paddle.exp(Tensor([1571420, 3, 22, 22, 1],"float32"), )
paddle.exp(Tensor([8, 697, 640, 640],"float32"), )
paddle.exp(Tensor([8, 278529, 32, 32, 1],"float32"), )
paddle.exp(Tensor([120089547, 19],"float32"), )
paddle.exp(Tensor([8, 3, 60, 60, 26409],"float32"), )
paddle.exp(Tensor([211269, 3, 60, 60, 1],"float32"), )
paddle.exp(Tensor([4294967297, 1],"float16"), )
paddle.exp(Tensor([2, 3, 38, 10007463, 1],"float32"), )
paddle.exp(Tensor([2, 3, 17, 17, 1315861],"float32"), )
paddle.exp(Tensor([12, 3, 10, 6338060, 1],"float32"), )
paddle.exp(Tensor([8, 3, 1485483, 64, 1],"float32"), )
paddle.exp(Tensor([8, 3, 8642809, 11, 1],"float32"), )
paddle.exp(Tensor([8, 3, 56, 56, 30316],"float32"), )
paddle.exp(Tensor([5571, 1, 640, 640],"float32"), )
paddle.exp(Tensor([586858, 3, 36, 36, 1],"float32"), )
paddle.exp(Tensor([1, 2, 285212673, 4],"float32"), )
paddle.exp(Tensor([13, 64, 3, 914144],"float32"), )
paddle.exp(Tensor([2, 9261, 123189],"float32"), )
paddle.exp(Tensor([4, 6804, 83837],"float32"), )
paddle.exp(Tensor([10, 228170138],"float32"), )
paddle.exp(Tensor([16, 1, 640, 640],"float32"), )
paddle.exp(Tensor([2, 3, 30, 30, 422538],"float32"), )
paddle.exp(Tensor([8, 69633, 64, 64, 1],"float32"), )
paddle.exp(Tensor([2, 3, 22, 22, 785710],"float32"), )
paddle.exp(Tensor([2, 3, 60, 6338060, 1],"float32"), )
paddle.exp(Tensor([8, 3, 6338060, 15, 1],"float32"), )
paddle.exp(Tensor([38029, 200, 300],"int32"), )
paddle.exp(Tensor([4, 570425345],"float32"), )
paddle.exp(Tensor([164483, 3, 68, 68, 1],"float32"), )
paddle.exp(Tensor([12, 3, 40, 1584515, 1],"float32"), )
paddle.exp(Tensor([2, 6750596, 13, 13, 1],"float32"), )
paddle.exp(Tensor([2, 3, 38, 38, 263355],"float32"), )
paddle.exp(Tensor([2, 3, 20014925, 19, 1],"float32"), )
paddle.exp(Tensor([2, 3, 36, 10563433, 1],"float32"), )
paddle.exp(Tensor([178956971, 2, 3, 4],"float16"), )
paddle.exp(Tensor([10, 114085069, 2],"float32"), )
paddle.exp(Tensor([8, 61681, 68, 68, 1],"float32"), )
paddle.exp(Tensor([212212, 5376, 2],"float32"), )
paddle.exp(Tensor([8, 3, 14, 6790778, 1],"float32"), )
paddle.exp(Tensor([4, 3, 190141782],"float32"), )
paddle.exp(Tensor([13, 64, 1007, 16],"float32"), )
paddle.exp(Tensor([8, 123791, 48, 48, 1],"float32"), )
paddle.exp(Tensor([8, 3, 19, 19, 263355],"float32"), )
paddle.exp(Tensor([2, 3, 11, 11, 3142840],"float32"), )
paddle.exp(Tensor([8, 3, 26, 3656573, 1],"float32"), )
paddle.exp(Tensor([8, 713032, 20, 20, 1],"float32"), )
paddle.exp(Tensor([10, 200, 1140851],"int32"), )
paddle.exp(x=Tensor([477218589, 3, 3],"float16"), )
paddle.exp(Tensor([2, 7922575, 12, 12, 1],"float32"), )
paddle.exp(Tensor([22, 1, 103713700],"float32"), )
paddle.exp(Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.exp(Tensor([13, 64, 10, 274243],"float32"), )
paddle.exp(Tensor([8, 316903, 30, 30, 1],"float32"), )
paddle.exp(Tensor([8, 3, 4321405, 22, 1],"float32"), )
paddle.exp(Tensor([32, 71303169],"float32"), )
paddle.exp(Tensor([10, 200, 1140851],"int64"), )
paddle.exp(Tensor([10, 760568, 300],"int32"), )
paddle.exp(Tensor([2, 246724, 68, 68, 1],"float32"), )
paddle.exp(Tensor([2, 3160252, 19, 19, 1],"float32"), )
paddle.exp(Tensor([8, 363792, 28, 28, 1],"float32"), )
paddle.exp(Tensor([8, 105479, 52, 52, 1],"float32"), )
paddle.exp(Tensor([8, 3, 32, 2970966, 1],"float32"), )
paddle.exp(Tensor([3, 2, 380283564],"float32"), )
paddle.exp(Tensor([2, 285212673, 4],"float32"), )
paddle.exp(Tensor([185686, 3, 64, 64, 1],"float32"), )
paddle.exp(Tensor([8, 1, 960, 960],"float32"), )
paddle.exp(Tensor([11408507, 200],"float32"), )
paddle.exp(Tensor([2, 421913, 52, 52, 1],"float32"), )
paddle.exp(Tensor([1800, 1267612],"float32"), )
paddle.exp(Tensor([8, 589283, 22, 22, 1],"float32"), )
paddle.exp(Tensor([8, 3, 1584515, 60, 1],"float32"), )
paddle.exp(Tensor([1200, 1901418],"float32"), )
paddle.exp(Tensor([13, 342804, 16, 4, 8],"float32"), )
paddle.exp(Tensor([2, 3, 38028357, 10, 1],"float32"), )
paddle.exp(Tensor([8, 79226, 60, 60, 1],"float32"), )
paddle.exp(Tensor([8, 3, 16, 5941931, 1],"float32"), )
paddle.exp(Tensor([8, 3, 26, 26, 140638],"float32"), )
paddle.exp(Tensor([2, 278529, 64, 64, 1],"float32"), )
paddle.exp(x=Tensor([3, 477218589, 3],"float16"), )
paddle.exp(Tensor([8, 986896, 17, 17, 1],"float32"), )
paddle.exp(Tensor([8, 3, 60, 1584515, 1],"float32"), )
paddle.exp(Tensor([475355, 3, 40, 40, 1],"float32"), )
paddle.exp(Tensor([2281701379, 1],"float32"), )
paddle.expand(Tensor([52, 1, 7, 6268411],"float32"), list[52,4,7,-1,], )
paddle.expand(Tensor([1, 1, 25, 91268056],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([13, 4, 1, 1, 1, 43878873],"float32"), list[13,4,3,1,1,-1,], )
paddle.expand(Tensor([1, 1, 100, 22817014],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([2281701379],"int64"), shape=list[1,-1,], )
paddle.expand(Tensor([1, 1, 22817014, 100],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 67108865, 34],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(x=Tensor([4294967297],"float16"), shape=Tensor([2281701379],"int32"), )
paddle.expand(x=Tensor([2281701379],"int64"), shape=Tensor([2],"int32"), )
paddle.expand(x=Tensor([2281701379],"int64"), shape=Tensor([2281701379],"int32"), )
paddle.expand(x=Tensor([2281701379],"int64"), shape=list[1,-1,], )
paddle.expand(Tensor([1, 1, 14626291, 156],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(Tensor([1, 1, 152, 15011194],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(x=Tensor([2281701379, 1, 1],"int64"), shape=Tensor([3],"int32"), )
paddle.expand(Tensor([2281701379, 1],"int32"), list[-1,1,], )
paddle.expand(Tensor([1, 1, 15011194, 152],"float32"), shape=list[1,1,-1,-1,], )
paddle.expand(x=Tensor([4294967297],"float16"), shape=Tensor([2],"int32"), )
paddle.expand(Tensor([52, 4, 1, 1, 1, 10969719],"float32"), list[52,4,3,1,1,-1,], )
paddle.expand(Tensor([1, 1, 16297867, 140],"float32"), shape=list[4,1,-1,-1,], )
paddle.expand_as(Tensor([389, 80, 1, 1],"float32"), Tensor([389, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([192, 80, 1, 1],"float32"), Tensor([192, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([307, 80, 1, 1],"float32"), Tensor([307, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([368, 80, 1, 1],"float32"), Tensor([368, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([134, 80, 1, 1],"float32"), Tensor([134, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([470, 80, 1, 1],"float32"), Tensor([470, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([329, 80, 1, 1],"float32"), Tensor([329, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([299, 80, 1, 1],"float32"), Tensor([299, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([133, 80, 1, 1],"float32"), Tensor([133, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([257, 80, 1, 1],"float32"), Tensor([257, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([324, 80, 1, 1],"float32"), Tensor([324, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([387, 80, 1, 1],"float32"), Tensor([387, 80, 14, 14],"float16"), )
paddle.expand_as(x=Tensor([3],"int64"), y=Tensor([760567127, 3],"int64"), )
paddle.expand_as(Tensor([231, 80, 1, 1],"float32"), Tensor([231, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([495, 80, 1, 1],"float32"), Tensor([495, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([186, 80, 1, 1],"float32"), Tensor([186, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([402, 80, 1, 1],"float32"), Tensor([402, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([157, 80, 1, 1],"float32"), Tensor([157, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([360, 80, 1, 1],"float32"), Tensor([360, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([284, 80, 1, 1],"float32"), Tensor([284, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([124, 80, 1, 1],"float32"), Tensor([124, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([338, 80, 1, 1],"float32"), Tensor([338, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([410, 80, 1, 1],"float32"), Tensor([410, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([389, 80, 1, 1],"float32"), Tensor([389, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([323, 80, 1, 1],"float32"), Tensor([323, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([132, 80, 1, 1],"float32"), Tensor([132, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([307, 80, 1, 1],"float32"), Tensor([307, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([436, 80, 1, 1],"float32"), Tensor([436, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([351, 80, 1, 1],"float32"), Tensor([351, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([198, 80, 1, 1],"float32"), Tensor([198, 80, 14, 14],"float32"), )
paddle.expand_as(x=Tensor([3],"int32"), y=Tensor([760567127, 3],"int32"), )
paddle.expand_as(Tensor([267, 80, 1, 1],"float32"), Tensor([267, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([178, 80, 1, 1],"float32"), Tensor([178, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([237, 80, 1, 1],"float32"), Tensor([237, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([504, 80, 1, 1],"float32"), Tensor([504, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([263, 80, 1, 1],"float32"), Tensor([263, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([306, 80, 1, 1],"float32"), Tensor([306, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([216, 80, 1, 1],"float32"), Tensor([216, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([273, 80, 1, 1],"float32"), Tensor([273, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([264, 80, 1, 1],"float32"), Tensor([264, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([280, 80, 1, 1],"float32"), Tensor([280, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([253, 80, 1, 1],"float32"), Tensor([253, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([256, 80, 1, 1],"float32"), Tensor([256, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([337, 80, 1, 1],"float32"), Tensor([337, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([223, 80, 1, 1],"float32"), Tensor([223, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([331, 80, 1, 1],"float32"), Tensor([331, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([330, 80, 1, 1],"float32"), Tensor([330, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([419, 80, 1, 1],"float32"), Tensor([419, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([211, 80, 1, 1],"float32"), Tensor([211, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([155, 80, 1, 1],"float32"), Tensor([155, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([242, 80, 1, 1],"float32"), Tensor([242, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([179, 80, 1, 1],"float32"), Tensor([179, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([360, 80, 1, 1],"float32"), Tensor([360, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([449, 80, 1, 1],"float32"), Tensor([449, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([315, 80, 1, 1],"float32"), Tensor([315, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([241, 80, 1, 1],"float32"), Tensor([241, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([170, 80, 1, 1],"float32"), Tensor([170, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([384, 80, 1, 1],"float32"), Tensor([384, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([416, 80, 1, 1],"float32"), Tensor([416, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([123, 80, 1, 1],"float32"), Tensor([123, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([366, 80, 1, 1],"float32"), Tensor([366, 80, 28, 28],"float16"), )
paddle.expand_as(x=Tensor([3, 1],"int64"), y=Tensor([3, 760567127],"int64"), )
paddle.expand_as(Tensor([308, 80, 1, 1],"float32"), Tensor([308, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([247, 80, 1, 1],"float32"), Tensor([247, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([162, 80, 1, 1],"float32"), Tensor([162, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([368, 80, 1, 1],"float32"), Tensor([368, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([290, 80, 1, 1],"float32"), Tensor([290, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([310, 80, 1, 1],"float32"), Tensor([310, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([181, 80, 1, 1],"float32"), Tensor([181, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([172, 80, 1, 1],"float32"), Tensor([172, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([319, 80, 1, 1],"float32"), Tensor([319, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([292, 80, 1, 1],"float32"), Tensor([292, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([285, 80, 1, 1],"float32"), Tensor([285, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([282, 80, 1, 1],"float32"), Tensor([282, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([420, 80, 1, 1],"float32"), Tensor([420, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([303, 80, 1, 1],"float32"), Tensor([303, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([266, 80, 1, 1],"float32"), Tensor([266, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([365, 80, 1, 1],"float32"), Tensor([365, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([2147484, 500, 1],"int32"), Tensor([2147484, 500, 4],"float16"), )
paddle.expand_as(Tensor([417, 80, 1, 1],"float32"), Tensor([417, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([80, 80, 1, 1],"float32"), Tensor([80, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([367, 80, 1, 1],"float32"), Tensor([367, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([356, 80, 1, 1],"float32"), Tensor([356, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([429, 80, 1, 1],"float32"), Tensor([429, 80, 14, 14],"float32"), )
paddle.expand_as(Tensor([145, 80, 1, 1],"float32"), Tensor([145, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([394, 80, 1, 1],"float32"), Tensor([394, 80, 14, 14],"float16"), )
paddle.expand_as(Tensor([196, 80, 1, 1],"float32"), Tensor([196, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([227, 80, 1, 1],"float32"), Tensor([227, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([138, 80, 1, 1],"float32"), Tensor([138, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([366, 80, 1, 1],"float32"), Tensor([366, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([237, 80, 1, 1],"float32"), Tensor([237, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([300, 80, 1, 1],"float32"), Tensor([300, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([251, 80, 1, 1],"float32"), Tensor([251, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([212, 80, 1, 1],"float32"), Tensor([212, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([110, 80, 1, 1],"float32"), Tensor([110, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([297, 80, 1, 1],"float32"), Tensor([297, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([407, 80, 1, 1],"float32"), Tensor([407, 80, 28, 28],"float32"), )
paddle.expand_as(Tensor([472, 80, 1, 1],"float32"), Tensor([472, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([457, 80, 1, 1],"float32"), Tensor([457, 80, 28, 28],"float16"), )
paddle.expand_as(Tensor([316, 80, 1, 1],"float32"), Tensor([316, 80, 14, 14],"float16"), )
paddle.expm1(x=Tensor([6, 715827883],"float16"), )
paddle.expm1(Tensor([8, 16, 33554433],"float16"), )
paddle.expm1(x=Tensor([6, 119304648, 6],"float16"), )
paddle.expm1(x=Tensor([3, 6, 6, 6, 6628036],"float16"), )
paddle.expm1(Tensor([3, 1431655766],"float16"), )
paddle.expm1(x=Tensor([3314018, 6, 6, 6, 6],"float16"), )
paddle.expm1(x=Tensor([19884108, 6, 6, 6],"float16"), )
paddle.expm1(Tensor([2, 2147483649],"float16"), )
paddle.expm1(Tensor([4294967297],"float16"), )
paddle.expm1(Tensor([2147483649, 2],"float16"), )
paddle.expm1(x=Tensor([6, 19884108, 6, 6],"float16"), )
paddle.expm1(x=Tensor([3, 6, 6628036, 6, 6],"float16"), )
paddle.expm1(x=Tensor([6, 6, 6, 19884108],"float16"), )
paddle.expm1(x=Tensor([6, 6, 19884108, 6],"float16"), )
paddle.expm1(x=Tensor([3, 3, 477218589],"float16"), )
paddle.expm1(x=Tensor([715827883, 6],"float16"), )
paddle.expm1(Tensor([8, 16777217, 32],"float16"), )
paddle.expm1(x=Tensor([3, 6, 6, 6628036, 6],"float16"), )
paddle.expm1(Tensor([8388609, 16, 32],"float16"), )
paddle.expm1(x=Tensor([3, 6628036, 6, 6, 6],"float16"), )
paddle.expm1(x=Tensor([477218589, 3, 3],"float16"), )
paddle.expm1(x=Tensor([119304648, 6, 6],"float16"), )
paddle.expm1(Tensor([1431655766, 3],"float16"), )
paddle.expm1(x=Tensor([3, 477218589, 3],"float16"), )
paddle.expm1(x=Tensor([6, 6, 119304648],"float16"), )
paddle.fft.fftn(x=Tensor([50, 8, 39, 14, 14],"float32"), axes=list[-3,-2,-1,], )
paddle.fft.fftn(Tensor([8, 32, 481, 481],"float32"), axes=list[2,3,], )
paddle.fft.fftshift(x=Tensor([4, 5, 4, 53687092],"float16"), )
paddle.fft.fftshift(x=Tensor([4294967297],"float16"), )
paddle.fft.fftshift(x=Tensor([2281701379],"float32"), )
paddle.fft.fftshift(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.fft.fftshift(x=Tensor([53687092, 5, 4, 4],"float16"), )
paddle.fft.fftshift(x=Tensor([536870913, 4, 2],"float16"), )
paddle.fft.fftshift(x=Tensor([4, 5, 214748365],"float16"), )
paddle.fft.fftshift(x=Tensor([2, 1073741825, 2],"float16"), )
paddle.fft.fftshift(x=Tensor([4, 268435457, 4],"float16"), )
paddle.fft.fftshift(x=Tensor([2, 4, 536870913],"float16"), )
paddle.fft.fftshift(x=Tensor([4, 5, 53687092, 4],"float16"), )
paddle.fft.fftshift(x=Tensor([214748365, 5, 4],"float16"), )
paddle.fft.ifftn(x=Tensor([50, 8, 39, 14, 14],"complex64"), s=tuple(39,14,14,), )
paddle.fft.ifftn(Tensor([8, 32, 481, 481],"complex64"), axes=list[2,3,], )
paddle.fft.ifftshift(x=Tensor([4, 5, 53687092, 4],"float16"), )
paddle.fft.ifftshift(x=Tensor([4, 268435457, 4],"float16"), )
paddle.fft.ifftshift(x=Tensor([2, 4, 536870913],"float16"), )
paddle.fft.ifftshift(x=Tensor([4294967297],"float16"), )
paddle.fft.ifftshift(x=Tensor([536870913, 4, 2],"float16"), )
paddle.fft.ifftshift(x=Tensor([214748365, 5, 4],"float16"), )
paddle.fft.ifftshift(x=Tensor([53687092, 5, 4, 4],"float16"), )
paddle.fft.ifftshift(x=Tensor([4, 5, 4, 53687092],"float16"), )
paddle.fft.ifftshift(x=Tensor([2281701379],"float32"), )
paddle.fft.ifftshift(x=Tensor([4, 5, 214748365],"float16"), )
paddle.fft.ifftshift(x=Tensor([2, 1073741825, 2],"float16"), )
paddle.fft.ifftshift(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.fft.irfft(Tensor([20, 64, 1051],"complex64"), n=2101, )
paddle.fft.irfft(Tensor([20, 64, 1001],"complex64"), n=2001, )
paddle.fft.irfft2(Tensor([32, 32, 250, 126],"complex64"), s=tuple(250,250,), )
paddle.fft.irfft2(Tensor([8, 32, 250, 126],"complex64"), s=tuple(250,250,), )
paddle.fft.irfftn(Tensor([8, 32, 250, 126],"complex64"), tuple(250,250,), tuple(-2,-1,), "backward", None, )
paddle.fft.irfftn(Tensor([32, 32, 250, 126],"complex64"), tuple(250,250,), tuple(-2,-1,), "backward", None, )
paddle.fft.rfft(Tensor([20, 64, 2101],"float32"), )
paddle.fft.rfft(Tensor([20, 64, 2001],"float32"), )
paddle.fft.rfft2(x=Tensor([32, 15, 15, 256],"float32"), axes=tuple(1,2,), norm="ortho", )
paddle.fft.rfft2(Tensor([32, 32, 250, 250],"float32"), )
paddle.fft.rfft2(Tensor([8, 32, 250, 250],"float32"), )
paddle.fft.rfftn(Tensor([32, 32, 250, 250],"float32"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([8, 32, 250, 250],"float32"), None, tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([32, 15, 15, 256],"float32"), None, tuple(1,2,), "ortho", None, )
paddle.flatten(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.flatten(x=Tensor([64, 1280, 1, 27853],"float32"), start_axis=1, )
paddle.flatten(Tensor([223697, 480, 1, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([512, 2487, 7, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([4, 20372334, 7, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([5592406, 768, 1],"float16"), 1, )
paddle.flatten(Tensor([3790, 768, 28, 28],"float32"), 2, )
paddle.flatten(Tensor([128, 1024, 1, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([128, 838861, 1, 40],"float16"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([1, 16, 28521268, 5],"float32"), 1, )
paddle.flatten(Tensor([8, 40, 44, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([107374183, 2, 4, 5],"float16"), )
paddle.flatten(Tensor([715827883, 2, 3],"float16"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([128, 1280, 26215, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1024, 4194305, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([148549, 384, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([3355444, 1280, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([4, 5093084, 112, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([2, 4, 285212673],"float32"), )
paddle.flatten(Tensor([16, 1, 11883862, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([1, 16, 6, 23767723],"float32"), 1, )
paddle.flatten(Tensor([102261127, 7, 6],"float16"), 1, 2, )
paddle.flatten(Tensor([2228225, 1024, 1, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 2, 1073741825],"float16"), start_axis=0, )
paddle.flatten(Tensor([12, 256, 46422, 16],"float32"), 2, )
paddle.flatten(Tensor([64, 2560, 13927, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([1073741825, 4],"float16"), )
paddle.flatten(Tensor([1024, 1280, 1, 1741],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2, 228170138, 5],"int64"), 1, )
paddle.flatten(x=Tensor([71582789, 3, 4, 5],"float16"), start_axis=-3, stop_axis=-1, )
paddle.flatten(Tensor([1, 1431655766, 3],"float16"), start_axis=0, stop_axis=1, )
paddle.flatten(x=Tensor([2, 380283564, 3],"float32"), )
paddle.flatten(Tensor([3, 715827883, 2],"float16"), )
paddle.flatten(Tensor([715827883, 2, 3],"float16"), start_axis=0, stop_axis=1, )
paddle.flatten(Tensor([3, 1431655766],"float16"), )
paddle.flatten(Tensor([128, 2048, 1, 8705],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1, 8, 7, 40744668],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2, 3, 4, 95070891],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([512, 50, 349, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([8, 36, 44, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 10, 57042535, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([1, 63380594, 6, 6],"float32"), 1, )
paddle.flatten(Tensor([32595734, 10, 7, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4, 10, 14260634, 4],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([715827883, 2, 3],"float16"), start_axis=0, )
paddle.flatten(Tensor([1697695, 8, 14, 12],"float32"), start_axis=1, stop_axis=2, )
paddle.flatten(x=Tensor([64, 35651585, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([128, 2560, 6964, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([1124, 2029984],"float32"), )
paddle.flatten(Tensor([128, 1024, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([8, 160, 144, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([715827883, 2, 3],"float16"), start_axis=0, stop_axis=-1, )
paddle.flatten(Tensor([4, 2, 4, 134217729],"float16"), )
paddle.flatten(Tensor([1, 1431655766, 3],"float16"), start_axis=1, stop_axis=2, )
paddle.flatten(Tensor([128, 2048, 8705, 1],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([128, 17825793],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([2228225, 1024, 1, 1],"float32"), 1, )
paddle.flatten(Tensor([4, 63380594, 9, 1],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([7, 4, 153391690],"float16"), 1, 2, )
paddle.flatten(Tensor([102261127, 7, 6],"float16"), )
paddle.flatten(Tensor([64, 1426064, 5, 5],"float32"), 1, -1, )
paddle.flatten(Tensor([2228225, 1024, 1],"float32"), 1, )
paddle.flatten(Tensor([536870913, 4, 2],"float16"), )
paddle.flatten(x=Tensor([2, 380283564, 3],"int64"), )
paddle.flatten(Tensor([8, 144, 176, 80],"float32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([4294967297],"float16"), )
paddle.flatten(Tensor([52, 50, 7, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([11883862, 1, 16, 12],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([124, 768, 23960],"float32"), 1, )
paddle.flatten(Tensor([8, 44, 40, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(x=Tensor([2, 107374183, 4, 5],"float16"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([128, 1024, 1, 17409],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(x=Tensor([2, 3, 4, 178956971],"float16"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([64, 16, 445645, 5],"float32"), 1, -1, )
paddle.flatten(Tensor([16, 2, 16, 4456449],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([1, 1024, 1, 2228225],"float32"), 1, )
paddle.flatten(Tensor([4456449, 512],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([4, 2, 26843546, 4, 5],"float16"), )
paddle.flatten(x=Tensor([20, 192, 1, 594194],"float32"), start_axis=1, )
paddle.flatten(Tensor([1, 2281701379, 1, 1],"float32"), 1, )
paddle.flatten(x=Tensor([60, 1280, 1, 29710],"float32"), start_axis=1, )
paddle.flatten(Tensor([3, 380283564, 2],"int32"), )
paddle.flatten(x=Tensor([2, 715827883, 3],"float16"), )
paddle.flatten(x=Tensor([1782580, 1280, 1, 1],"float32"), start_axis=1, )
paddle.flatten(Tensor([4, 53687092, 4, 5],"float16"), )
paddle.flatten(Tensor([32, 2, 1371215, 26],"float32"), start_axis=1, )
paddle.flatten(Tensor([114085069, 4, 5],"int32"), )
paddle.flatten(Tensor([4, 144, 3961288, 1],"int32"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([16, 557057, 16, 16],"float32"), start_axis=-2, )
paddle.flatten(Tensor([1024, 256, 7, 1244],"float32"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([8, 88, 88, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([96, 480, 1, 49517],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([1536, 1024, 1, 1],"float16"), start_axis=1, stop_axis=-1, )
paddle.flatten(Tensor([416, 50, 429, 256],"float32"), start_axis=2, )
paddle.flatten(Tensor([2, 228170138, 5],"int64"), )
paddle.flatten(Tensor([2, 2, 16, 35651585],"float32"), start_axis=-2, stop_axis=-1, )
paddle.flatten(Tensor([8, 44, 36, 80],"float16"), start_axis=0, stop_axis=2, )
paddle.flatten(Tensor([32, 105479, 26, 26],"float32"), start_axis=1, )
paddle.flatten(Tensor([96, 594194, 1, 40],"float32"), start_axis=2, stop_axis=-1, )
paddle.flatten(Tensor([2, 3, 143165577, 5],"float16"), start_axis=-2, stop_axis=-1, )
paddle.flip(Tensor([3, 8, 424424, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([4, 570425345],"float32"), list[0,1,], )
paddle.flip(x=Tensor([3, 3, 17674763, 3, 3, 3],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(Tensor([20, 9095, 112, 112],"float32"), axis=-1, )
paddle.flip(Tensor([2281701379],"int32"), axis=list[0,], )
paddle.flip(x=Tensor([3, 3, 477218589],"float16"), axis=list[0,], )
paddle.flip(Tensor([3, 2, 380283564],"float32"), list[0,1,], )
paddle.flip(x=Tensor([3, 477218589, 3],"float16"), axis=list[0,], )
paddle.flip(x=Tensor([3, 3, 253522376],"bool"), axis=list[0,], )
paddle.flip(Tensor([3, 8, 224, 424424],"float32"), axis=list[3,], )
paddle.flip(x=Tensor([3, 3, 3, 17674763, 3, 3],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(Tensor([64, 3, 112, 112],"float32"), axis=-1, )
paddle.flip(Tensor([3, 15158, 224, 224],"float32"), axis=list[3,], )
paddle.flip(x=Tensor([253522376, 3, 3],"bool"), axis=list[0,], )
paddle.flip(x=Tensor([3, 477218589, 3],"float16"), axis=list[0,1,2,], )
paddle.flip(x=Tensor([3, 253522376, 3],"bool"), axis=list[0,], )
paddle.flip(x=Tensor([3, 3, 3, 3, 17674763, 3],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([3, 3, 3, 3, 3, 17674763],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([3, 17674763, 3, 3, 3, 3],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,1,2,], )
paddle.flip(x=Tensor([3, 3, 477218589],"float16"), axis=list[0,1,2,], )
paddle.flip(Tensor([5685, 8, 224, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([760567127, 3],"float32"), list[0,], )
paddle.flip(Tensor([2, 2147483649],"float16"), tuple(-2,-1,), )
paddle.flip(Tensor([1140850690, 2],"float32"), tuple(-2,-1,), )
paddle.flip(x=Tensor([477218589, 3, 3],"float16"), axis=list[-1,0,1,], )
paddle.flip(Tensor([20, 3, 112, 339539],"float32"), axis=-1, )
paddle.flip(Tensor([570425345, 2, 2],"float32"), list[0,1,], )
paddle.flip(Tensor([52, 3, 112, 112],"float32"), axis=-1, )
paddle.flip(x=Tensor([3, 477218589, 3],"float16"), axis=list[-1,0,1,], )
paddle.flip(Tensor([20, 3, 339539, 112],"float32"), axis=-1, )
paddle.flip(Tensor([3, 380283564, 2],"float32"), list[0,1,], )
paddle.flip(x=Tensor([17674763, 3, 3, 3, 3, 3],"float16"), axis=list[-1,0,3,4,2,], )
paddle.flip(Tensor([3, 8, 224, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([2147483649, 2],"float16"), tuple(-2,-1,), )
paddle.flip(Tensor([2, 1140850690],"float32"), tuple(-2,-1,), )
paddle.flip(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,], )
paddle.flip(Tensor([2, 1140850690],"float32"), list[0,], )
paddle.flip(Tensor([32, 3, 112, 112],"float32"), axis=-1, )
paddle.flip(x=Tensor([3, 3, 477218589],"float16"), axis=list[-1,0,1,], )
paddle.flip(Tensor([570425345, 4],"float32"), list[0,1,], )
paddle.floor(Tensor([60, 38028357, 1],"float32"), )
paddle.floor(Tensor([512, 4456449, 1],"float32"), )
paddle.floor(Tensor([60, 1, 38028357],"float32"), )
paddle.floor(Tensor([162978670, 7, 2],"float32"), )
paddle.floor(Tensor([5, 214748365, 4],"float16"), )
paddle.floor(Tensor([3, 6, 3, 1, 15907287, 5],"float16"), )
paddle.floor(Tensor([3, 6, 3, 4, 19884108, 1],"float16"), )
paddle.floor(Tensor([4, 1, 1, 570425345],"float32"), )
paddle.floor(Tensor([512, 1, 4456449],"float32"), )
paddle.floor(Tensor([60044774, 19, 2],"float32"), )
paddle.floor(Tensor([4, 19, 30022387],"float32"), )
paddle.floor(Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.floor(Tensor([1, 1, 2281701379, 1, 1],"float32"), )
paddle.floor(Tensor([4294967297],"float16"), )
paddle.floor(Tensor([2910334, 1, 28, 28],"float32"), )
paddle.floor(x=Tensor([3, 253522376, 3],"float32"), )
paddle.floor(Tensor([2744, 831524, 1],"float32"), )
paddle.floor(Tensor([11930465, 6, 3, 4, 1, 5],"float16"), )
paddle.floor(Tensor([4, 7, 153391690],"float16"), )
paddle.floor(Tensor([30, 200, 380284],"float32"), )
paddle.floor(Tensor([2, 5, 2, 114085069],"float32"), )
paddle.floor(Tensor([1431655766, 3],"float16"), )
paddle.floor(Tensor([1, 1431655766, 3],"float16"), )
paddle.floor(Tensor([67108865, 17, 2],"float32"), )
paddle.floor(Tensor([114085069, 10, 2],"float32"), )
paddle.floor(Tensor([8, 1, 285212673, 1],"float32"), )
paddle.floor(Tensor([14, 162978670, 1],"float32"), )
paddle.floor(Tensor([16, 1, 1, 142606337],"float32"), )
paddle.floor(Tensor([1, 2281701379, 1, 1, 1],"float32"), )
paddle.floor(Tensor([4, 15, 38028357],"float32"), )
paddle.floor(Tensor([3, 23860930, 3, 4, 1, 5],"float16"), )
paddle.floor(Tensor([190141782, 12],"float32"), )
paddle.floor(Tensor([32, 1, 1, 71303169],"float32"), )
paddle.floor(Tensor([1, 4294967297],"float16"), )
paddle.floor(Tensor([126761188, 9, 2],"float32"), )
paddle.floor(Tensor([4, 1, 570425345],"float32"), )
paddle.floor(Tensor([4, 285212673, 2],"float32"), )
paddle.floor(Tensor([8, 285212673, 1, 1],"float32"), )
paddle.floor(Tensor([64, 1, 28, 1273271],"float32"), )
paddle.floor(Tensor([4, 13, 43878873],"float32"), )
paddle.floor(Tensor([63380594, 18, 2],"float32"), )
paddle.floor(Tensor([100000, 2, 11409],"float32"), )
paddle.floor(Tensor([64, 1, 1, 35651585],"float32"), )
paddle.floor(Tensor([3, 6, 3, 39768216, 2, 1],"float16"), )
paddle.floor(Tensor([380283564, 2, 3],"float32"), )
paddle.floor(Tensor([4, 5, 114085069],"float32"), )
paddle.floor(Tensor([2281701379, 1],"float32"), )
paddle.floor(Tensor([4, 12, 47535446],"float32"), )
paddle.floor(Tensor([228170138, 5, 2],"float32"), )
paddle.floor(Tensor([2, 190141782, 2, 3],"float32"), )
paddle.floor(Tensor([1, 3, 1431655766],"float16"), )
paddle.floor(Tensor([1, 760567127, 3],"float32"), )
paddle.floor(Tensor([8, 1, 1, 285212673],"float32"), )
paddle.floor(Tensor([103713700, 11, 2],"float32"), )
paddle.floor(Tensor([2, 8, 142606337],"float32"), )
paddle.floor(Tensor([128, 1, 17825793],"float32"), )
paddle.floor(Tensor([3, 47721859, 3, 1, 2, 5],"float16"), )
paddle.floor(Tensor([5, 1, 858993460],"float16"), )
paddle.floor(Tensor([14449, 157920],"float32"), )
paddle.floor(Tensor([81489335, 14, 2],"float32"), )
paddle.floor(Tensor([715827883, 1, 6],"float16"), )
paddle.floor(x=Tensor([100, 4, 150112, 38],"float32"), )
paddle.floor(Tensor([81489335, 28],"float32"), )
paddle.floor(Tensor([3, 6, 29826162, 4, 2, 1],"float16"), )
paddle.floor(Tensor([380283564, 3, 2],"float32"), )
paddle.floor(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.floor(Tensor([71303169, 16, 2],"float32"), )
paddle.floor(Tensor([144, 1, 15845149],"float32"), )
paddle.floor(x=Tensor([3, 3, 477218589],"float16"), )
paddle.floor(x=Tensor([7042289, 4, 9, 9],"float32"), )
paddle.floor(Tensor([4, 11, 51856850],"float32"), )
paddle.floor(Tensor([429496730, 5, 2],"float16"), )
paddle.floor(Tensor([7, 613566757],"float16"), )
paddle.floor(Tensor([3, 6, 11930465, 4, 1, 5],"float16"), )
paddle.floor(Tensor([380283564, 6],"float32"), )
paddle.floor(Tensor([14, 1, 162978670],"float32"), )
paddle.floor(Tensor([4, 16, 35651585],"float32"), )
paddle.floor(Tensor([2281701379],"float32"), )
paddle.floor(Tensor([10, 429496730],"float16"), )
paddle.floor(Tensor([4, 8, 71303169],"float32"), )
paddle.floor(Tensor([2, 142606337, 8],"float32"), )
paddle.floor(x=Tensor([100, 4, 633806, 9],"float32"), )
paddle.floor(Tensor([477218589, 3, 3],"float16"), )
paddle.floor(Tensor([2281701379, 1, 1, 1, 1],"float32"), )
paddle.floor(Tensor([4, 570425345, 1],"float32"), )
paddle.floor(Tensor([10, 228170138],"float32"), )
paddle.floor(Tensor([28, 81489335],"float32"), )
paddle.floor(x=Tensor([100, 281692, 9, 9],"float32"), )
paddle.floor(Tensor([3, 6, 23860930, 1, 2, 5],"float16"), )
paddle.floor(Tensor([3, 6, 3, 1, 2, 39768216],"float16"), )
paddle.floor(Tensor([128, 17825793, 1, 1],"float32"), )
paddle.floor(Tensor([9, 253522376],"float32"), )
paddle.floor(x=Tensor([395032, 4, 38, 38],"float32"), )
paddle.floor(Tensor([1073741825, 1, 4],"float16"), )
paddle.floor(Tensor([2, 5, 228170138],"float32"), )
paddle.floor(Tensor([2, 570425345, 2],"float32"), )
paddle.floor(Tensor([100000, 7606, 3],"float32"), )
paddle.floor(Tensor([1, 1, 2281701379],"float32"), )
paddle.floor(Tensor([253522376, 3, 3],"float32"), )
paddle.floor(Tensor([285212673, 8],"float32"), )
paddle.floor_divide(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.floor_divide(x=Tensor([3, 760567127],"int32"), y=Tensor([3, 1],"int32"), )
paddle.floor_divide(x=Tensor([2281701379],"int64"), y=Tensor([2281701379],"int64"), )
paddle.floor_divide(Tensor([10, 228170138],"int64"), Tensor([10, 228170138],"int64"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float16"), )
paddle.floor_divide(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.floor_divide(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.floor_divide(x=Tensor([3, 760567127],"int32"), y=Tensor([3, 760567127],"int32"), name=None, )
paddle.floor_divide(x=Tensor([253522376, 3, 3],"int32"), y=Tensor([3],"int32"), )
paddle.floor_divide(x=Tensor([3, 1],"int32"), y=Tensor([3, 760567127],"int32"), name=None, )
paddle.floor_divide(Tensor([8, 285212673],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(Tensor([4294967297],"int16"), Tensor([4294967297],"int16"), )
paddle.floor_divide(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float64"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.floor_divide(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.floor_divide(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.floor_divide(Tensor([2228225, 1024],"int64"), Tensor([2228225, 1024],"int64"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"bfloat16"), Tensor([715827883, 3, 2],"float16"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.floor_divide(x=Tensor([3, 760567127],"int32"), y=Tensor([3, 1],"int32"), name=None, )
paddle.floor_divide(x=Tensor([3, 253522376, 3],"int32"), y=Tensor([3],"int32"), )
paddle.floor_divide(Tensor([4294967297],"uint8"), Tensor([4294967297],"uint8"), )
paddle.floor_divide(x=Tensor([3, 1],"int32"), y=Tensor([3, 760567127],"int32"), )
paddle.floor_divide(x=Tensor([2281701379, 1],"int32"), y=Tensor([2281701379, 1],"int32"), name=None, )
paddle.floor_divide(Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.floor_divide(Tensor([4, 536870913, 2],"bfloat16"), Tensor([4, 536870913, 2],"float16"), )
paddle.floor_divide(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.floor_divide(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.floor_divide(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"bfloat16"), )
paddle.floor_divide(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.floor_divide(Tensor([4294967297],"int8"), Tensor([4294967297],"int8"), )
paddle.floor_divide(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.floor_divide(Tensor([1],"bfloat16"), Tensor([4294967297],"bfloat16"), )
paddle.floor_divide(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.floor_divide(Tensor([4, 570425345],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(x=Tensor([2281701379],"int32"), y=Tensor([2281701379],"int32"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.floor_divide(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.floor_divide(Tensor([380283564, 3, 2],"float64"), Tensor([380283564, 3, 2],"float32"), )
paddle.floor_divide(x=Tensor([2281701379, 1],"int32"), y=Tensor([2281701379, 1],"int32"), )
paddle.floor_divide(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"bfloat16"), )
paddle.floor_divide(Tensor([570425345, 4],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"bfloat16"), )
paddle.floor_divide(Tensor([4294967297],"bfloat16"), Tensor([4294967297],"bfloat16"), )
paddle.floor_divide(Tensor([285212673, 8],"int64"), Tensor([1],"int64"), )
paddle.floor_divide(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.floor_divide(x=Tensor([3, 760567127],"int32"), y=Tensor([3, 760567127],"int32"), )
paddle.floor_divide(Tensor([4, 3, 357913942],"bfloat16"), Tensor([4, 3, 357913942],"float32"), )
paddle.floor_divide(Tensor([4, 536870913, 2],"bfloat16"), Tensor([4, 536870913, 2],"float32"), )
paddle.floor_divide(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"bfloat16"), )
paddle.fmax(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.fmax(Tensor([285213, 200, 40],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.fmax(Tensor([152113426, 15],"float32"), Tensor([152113426, 15],"float32"), )
paddle.fmax(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.fmax(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.fmax(Tensor([30, 1901418, 40],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.fmax(Tensor([152113426, 15],"float32"), Tensor([15],"float32"), )
paddle.fmax(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.fmax(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.fmax(Tensor([30, 200, 380284],"float32"), Tensor([30, 200, 380284],"float32"), )
paddle.fmin(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.fmin(Tensor([30, 200, 380284],"float32"), Tensor([30, 200, 380284],"float32"), )
paddle.fmin(Tensor([152113426, 15],"float32"), Tensor([152113426, 15],"float32"), )
paddle.fmin(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.fmin(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.fmin(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.fmin(Tensor([285213, 200, 40],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.fmin(Tensor([152113426, 15],"float32"), Tensor([15],"float32"), )
paddle.fmin(Tensor([30, 1901418, 40],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.frac(Tensor([2, 1140850690],"float32"), )
paddle.frac(Tensor([760567127, 3],"float32"), )
paddle.frac(Tensor([114085069, 20, 1],"float32"), )
paddle.frac(Tensor([2, 2147483649],"float16"), )
paddle.frac(Tensor([10, 228170138, 1],"float32"), )
paddle.frac(Tensor([10, 20, 11408507],"float32"), )
paddle.frac(Tensor([1431655766, 3],"float16"), )
paddle.full_like(Tensor([2, 1, 11408507, 100],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([9834920, 232],"int32"), 0.0, VarType(float32), None, )
paddle.full_like(Tensor([1140850690, 2],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([745655, 3060],"int32"), 4, )
paddle.full_like(Tensor([4, 1073741825],"float16"), fill_value=41, )
paddle.full_like(Tensor([63380594, 1, 1, 36],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([11408507, 200],"float32"), 0.0, )
paddle.full_like(Tensor([152113426, 5, 3],"float32"), -math.inf, )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=False, dtype=type(numpy.bool), )
paddle.full_like(Tensor([2, 2147483649],"float16"), 0.5, )
paddle.full_like(Tensor([5, 858993460],"float16"), 0.9999998807907104, )
paddle.full_like(Tensor([6, 380283564],"int64"), 2, )
paddle.full_like(Tensor([2281701379],"float32"), 1e-20, )
paddle.full_like(Tensor([2, 1140850690],"float32"), -10.0, )
paddle.full_like(Tensor([219, 10418728],"int32"), 1e-10, None, None, )
paddle.full_like(Tensor([10, 228170138],"int64"), 3, )
paddle.full_like(Tensor([2, 8, 64, 4194305],"float16"), -127, )
paddle.full_like(Tensor([1, 2281701379],"int64"), 255, )
paddle.full_like(Tensor([190141782, 12],"float32"), 0, )
paddle.full_like(Tensor([5, 456340276],"int64"), 0, )
paddle.full_like(Tensor([2, 1, 190141782, 6],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([3, 6, 3, 1, 2, 39768216],"float16"), fill_value=3, )
paddle.full_like(Tensor([2, 11408507, 10, 10],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([2281701379, 1],"int64"), 0, )
paddle.full_like(Tensor([17, 134217729],"int64"), 3, )
paddle.full_like(Tensor([3, 6, 3, 4, 19884108, 1],"float16"), fill_value=4, )
paddle.full_like(Tensor([9834920, 232],"float32"), 0.0, VarType(bfloat16), None, )
paddle.full_like(Tensor([148, 5138968, 3],"float32"), 3.4028234663852886e+38, )
paddle.full_like(Tensor([228170138, 10],"int64"), 7, )
paddle.full_like(Tensor([3, 760567127],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([6, 380283564],"int64"), 98, )
paddle.full_like(Tensor([1, 1, 1114113, 2048],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([4294967297, 1],"float16"), 0.5, )
paddle.full_like(Tensor([2, 1, 1, 1140850690],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([63380594, 1, 6, 6],"float32"), -3.4028234663852886e+38, )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=1.0, dtype=type(numpy.float16), )
paddle.full_like(Tensor([2281701379],"int64"), 14, )
paddle.full_like(Tensor([21939437, 1, 1, 104],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([1140850690, 2],"float32"), -math.inf, )
paddle.full_like(Tensor([2, 1140850690],"float32"), 2.0, )
paddle.full_like(Tensor([2, 524289, 64, 64],"float16"), -127, )
paddle.full_like(Tensor([1, 2281701379],"float32"), dtype=type(numpy.float32), fill_value=1.1, )
paddle.full_like(Tensor([16, 142606337],"int32"), 4, )
paddle.full_like(Tensor([219, 10418728],"int32"), 0.0, VarType(float32), None, )
paddle.full_like(Tensor([2, 1140850690],"float32"), fill_value=math.inf, )
paddle.full_like(Tensor([331402, 6885],"int32"), 11, )
paddle.full_like(Tensor([1320430, 192, 3, 3],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([760567127, 3],"float32"), 100.0, )
paddle.full_like(Tensor([3, 6, 3, 15907287, 1, 5],"float16"), fill_value=1, )
paddle.full_like(Tensor([1, 768, 3, 990322],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2281701379, 1],"float32"), fill_value=6, )
paddle.full_like(Tensor([11883862, 192],"float32"), 0.0, dtype=Dtype(float32), )
paddle.full_like(Tensor([4, 5, 214748365],"float16"), 0, )
paddle.full_like(Tensor([1, 1, 1, 2281701379],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([4294967297, 1],"float16"), 0.0, )
paddle.full_like(Tensor([2228225, 1024],"float32"), 0.334840825619673, )
paddle.full_like(Tensor([256, 8912897],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 178956971, 6],"float16"), fill_value=6, )
paddle.full_like(Tensor([18512791, 232],"float16"), 0.0, None, None, )
paddle.full_like(Tensor([1, 2281701379],"float32"), 0.0, )
paddle.full_like(Tensor([114085069, 20],"int64"), 7, )
paddle.full_like(Tensor([2281701379, 1],"int64"), 2, )
paddle.full_like(Tensor([2, 190141782, 1, 6],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([400, 10737419],"float16"), -2.220446049250313e-16, )
paddle.full_like(Tensor([357913942, 3, 4],"float16"), fill_value=1, )
paddle.full_like(Tensor([760567127, 3],"float32"), -math.inf, )
paddle.full_like(Tensor([224489, 10164],"int32"), 1, )
paddle.full_like(Tensor([2281701379],"float32"), -2.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 45634028, 5, 5],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([131073, 8, 64, 64],"float16"), -127, )
paddle.full_like(Tensor([760567127, 3],"float32"), fill_value=math.inf, )
paddle.full_like(Tensor([1, 1, 1, 2281701379],"float32"), -3.4028234663852886e+38, )
paddle.full_like(Tensor([760567127, 3],"int64"), 7, )
paddle.full_like(Tensor([134218, 32000],"float16"), 0.0, )
paddle.full_like(Tensor([2281701379],"float32"), 1.0, )
paddle.full_like(Tensor([2, 1140850690],"int64"), 3, )
paddle.full_like(Tensor([2, 1140850690],"float32"), 0.5, )
paddle.full_like(Tensor([456340276, 5],"int64"), 7, )
paddle.full_like(Tensor([2, 11184811, 1, 102],"bool"), -65504.0, dtype=Dtype(float16), )
paddle.full_like(Tensor([152113426, 5, 3],"float32"), -1.1920928955078125e-07, )
paddle.full_like(Tensor([1, 91268056, 1, 25],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([2281701379, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([11930465, 6, 3, 4, 1, 5],"float16"), fill_value=1, )
paddle.full_like(Tensor([2281701379, 1],"float32"), 0.5, )
paddle.full_like(Tensor([219, 10418728],"int32"), 1.0, None, None, )
paddle.full_like(x=Tensor([4294967297],"float16"), fill_value=1, dtype="int32", )
paddle.full_like(Tensor([9834920, 232],"int32"), 0.0, Dtype(int16), None, )
paddle.full_like(Tensor([10, 228170138],"float32"), 0, )
paddle.full_like(Tensor([1086525, 2100],"int32"), 1, )
paddle.full_like(Tensor([219, 10418728],"int32"), 0.0, None, None, )
paddle.full_like(Tensor([2281701379],"int64"), 11, )
paddle.full_like(Tensor([2281701379],"float32"), fill_value=1023, )
paddle.full_like(Tensor([4, 570425345],"int64"), 7, )
paddle.full_like(Tensor([1, 253522376, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), fill_value=3, )
paddle.full_like(Tensor([2, 1, 190141782, 6],"bool"), -3.4028234663852886e+38, dtype=Dtype(float32), )
paddle.full_like(Tensor([727584, 56, 56],"int64"), 31, )
paddle.full_like(Tensor([2281701379],"float32"), -4.59511985013459, dtype=VarType(float32), )
paddle.full_like(Tensor([2281701379],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([1857, 300, 4096],"float32"), 1, )
paddle.gather(Tensor([110592, 32],"float32"), Tensor([250],"int64"), axis=0, )
paddle.gather(Tensor([36864, 32],"float32"), Tensor([629],"int64"), axis=0, )
paddle.gather(Tensor([2099424, 4],"float32"), Tensor([521, 1],"int64"), )
paddle.gather(Tensor([869652, 4],"float32"), Tensor([108, 1],"int64"), )
paddle.gather(Tensor([1104840, 4],"float32"), Tensor([362, 1],"int64"), )
paddle.gather(Tensor([2048, 2048, 7, 7],"float32"), Tensor([327, 1],"int64"), )
paddle.gather(Tensor([48640, 68],"float32"), Tensor([87],"int64"), axis=0, )
paddle.gather(Tensor([124032, 512],"float32"), Tensor([1536],"int64"), )
paddle.gather(Tensor([431, 256, 14, 14],"float32"), Tensor([431, 1],"int32"), )
paddle.gather(Tensor([293460, 4],"float32"), Tensor([173, 1],"int64"), )
paddle.gather(Tensor([454, 256, 14, 14],"float32"), Tensor([454, 1],"int32"), )
paddle.gather(Tensor([1048576],"int64"), Tensor([973556],"int64"), )
paddle.gather(Tensor([1048576, 2],"float32"), Tensor([1022957],"int64"), )
paddle.gather(Tensor([195840, 32],"float32"), Tensor([1889],"int64"), axis=0, )
paddle.gather(Tensor([1503936, 4],"float32"), Tensor([286, 1],"int64"), )
paddle.gather(Tensor([920808, 4],"float32"), Tensor([158, 1],"int64"), )
paddle.gather(Tensor([1943928, 4],"float32"), Tensor([284, 1],"int64"), )
paddle.gather(Tensor([242, 256, 14, 14],"float32"), Tensor([242, 1],"int32"), )
paddle.gather(Tensor([2234400, 4],"float32"), Tensor([270, 1],"int64"), )
paddle.gather(Tensor([228, 256, 14, 14],"float32"), Tensor([228, 1],"int32"), )
paddle.gather(Tensor([124, 256, 14, 14],"float32"), Tensor([124, 1],"int32"), )
paddle.gather(Tensor([189696, 68],"float32"), Tensor([15],"int64"), axis=0, )
paddle.gather(Tensor([926213],"float32"), Tensor([926213],"int64"), )
paddle.gather(Tensor([46208, 68],"float32"), Tensor([82],"int64"), axis=0, )
paddle.gather(Tensor([1048576, 2],"float32"), Tensor([946388],"int64"), )
paddle.gather(Tensor([7752, 512],"float32"), Tensor([443],"int64"), )
paddle.gather(Tensor([82944, 32],"float32"), Tensor([317],"int64"), axis=0, )
paddle.gather(Tensor([1049712, 4],"float32"), Tensor([142, 1],"int64"), )
paddle.gather(Tensor([3007872, 4],"float32"), Tensor([504, 1],"int64"), )
paddle.gather(Tensor([123904, 32],"float32"), Tensor([608],"int64"), axis=0, )
paddle.gather(Tensor([115200, 32],"float32"), Tensor([306],"int64"), axis=0, )
paddle.gather(Tensor([788071],"float32"), Tensor([788071],"int64"), )
paddle.gather(Tensor([252, 256, 14, 14],"float32"), Tensor([252, 1],"int32"), )
paddle.gather(Tensor([3437280],"int32"), Tensor([2048, 1],"int64"), )
paddle.gather(Tensor([32832, 68],"float32"), Tensor([81],"int64"), axis=0, )
paddle.gather(Tensor([1182588],"float32"), Tensor([1024, 1],"int64"), )
paddle.gather(Tensor([31008, 512],"float32"), Tensor([992],"int64"), )
paddle.gather(Tensor([946464, 4],"float32"), Tensor([82, 1],"int64"), )
paddle.gather(Tensor([2643432, 4],"float32"), Tensor([222, 1],"int64"), )
paddle.gather(Tensor([4096, 320],"float32"), Tensor([559],"int64"), )
paddle.gather(Tensor([100352, 32],"float32"), Tensor([481],"int64"), axis=0, )
paddle.gather(Tensor([102400, 32],"float32"), Tensor([788],"int64"), axis=0, )
paddle.gather(Tensor([971964, 4],"float32"), Tensor([209, 1],"int64"), )
paddle.gather(Tensor([1288980, 4],"float32"), Tensor([107, 1],"int64"), )
paddle.gather(Tensor([252540, 4],"float32"), Tensor([394, 1],"int64"), )
paddle.gather(Tensor([86528, 32],"float32"), Tensor([293],"int64"), axis=0, )
paddle.gather(Tensor([877812, 4],"float32"), Tensor([84, 1],"int64"), )
paddle.gather(Tensor([57600, 32],"float32"), Tensor([2],"int64"), axis=0, )
paddle.gather(Tensor([124032, 512],"float32"), Tensor([1052],"int64"), )
paddle.gather(Tensor([3093552, 4],"float32"), Tensor([469, 1],"int64"), )
paddle.gather(Tensor([195840, 32],"float32"), Tensor([1813],"int64"), axis=0, )
paddle.gather(Tensor([7752, 512],"float32"), Tensor([254],"int64"), )
paddle.gather(Tensor([124032, 512],"float32"), Tensor([780],"int64"), )
paddle.gather(Tensor([496128, 4],"float32"), Tensor([1143],"int64"), )
paddle.gather(Tensor([473, 256, 14, 14],"float32"), Tensor([473, 1],"int32"), )
paddle.gather(Tensor([638400, 4],"float32"), Tensor([10, 1],"int64"), )
paddle.gather(Tensor([942039],"float32"), Tensor([942039],"int64"), )
paddle.gather(Tensor([1048576],"int64"), Tensor([917966],"int64"), )
paddle.gather(Tensor([1048576, 2],"float32"), Tensor([872239],"int64"), )
paddle.gather(Tensor([2048, 2048, 7, 7],"float32"), Tensor([408, 1],"int64"), )
paddle.gather(Tensor([70560, 32],"float32"), Tensor([342],"int64"), axis=0, )
paddle.gather(Tensor([136000, 32],"float32"), Tensor([2020],"int64"), axis=0, )
paddle.gather(Tensor([2537280, 4],"float32"), Tensor([188, 1],"int64"), )
paddle.gather(Tensor([3020112, 4],"float32"), Tensor([299, 1],"int64"), )
paddle.gather(Tensor([1321716, 4],"float32"), Tensor([290, 1],"int64"), )
paddle.gather(Tensor([971964, 4],"float32"), Tensor([218, 1],"int64"), )
paddle.gather(Tensor([913977],"float32"), Tensor([913977],"int64"), )
paddle.gather(Tensor([1048576, 2],"float32"), Tensor([850906],"int64"), )
paddle.gather(Tensor([979558],"float32"), Tensor([979558],"int64"), )
paddle.gather(Tensor([920493],"float32"), Tensor([920493],"int64"), )
paddle.gather(Tensor([110592, 32],"float32"), Tensor([232],"int64"), axis=0, )
paddle.gather(Tensor([778392],"float32"), Tensor([778392],"int64"), )
paddle.gather(Tensor([393, 256, 14, 14],"float32"), Tensor([393, 1],"int32"), )
paddle.gather(Tensor([4096, 320],"float32"), Tensor([712],"int64"), )
paddle.gather(Tensor([36864, 32],"float32"), Tensor([187],"int64"), axis=0, )
paddle.gather(Tensor([832970],"float32"), Tensor([832970],"int64"), )
paddle.gather(Tensor([3265416, 4],"float32"), Tensor([365, 1],"int64"), )
paddle.gather(Tensor([37632, 32],"float32"), Tensor([256],"int64"), axis=0, )
paddle.gather(Tensor([1043460, 4],"float32"), Tensor([107, 1],"int64"), )
paddle.gather(Tensor([195840, 32],"float32"), Tensor([2433],"int64"), axis=0, )
paddle.gather(Tensor([4096, 320],"float32"), Tensor([590],"int64"), )
paddle.gather(Tensor([81000, 32],"float32"), Tensor([275],"int64"), axis=0, )
paddle.gather(Tensor([309960, 4],"float32"), Tensor([359, 1],"int64"), )
paddle.gather(Tensor([1031184, 4],"float32"), Tensor([173, 1],"int64"), )
paddle.gather(Tensor([966506],"float32"), Tensor([966506],"int64"), )
paddle.gather(Tensor([1438452, 4],"float32"), Tensor([60, 1],"int64"), )
paddle.gather(Tensor([184832, 68],"float32"), Tensor([494],"int64"), axis=0, )
paddle.gather(Tensor([1048576],"int64"), Tensor([815795],"int64"), )
paddle.gather(Tensor([207360, 32],"float32"), Tensor([594],"int64"), axis=0, )
paddle.gather(Tensor([2410416, 4],"float32"), Tensor([273, 1],"int64"), )
paddle.gather(Tensor([110464, 32],"float32"), Tensor([1740],"int64"), axis=0, )
paddle.gather(Tensor([856428, 4],"float32"), Tensor([214, 1],"int64"), )
paddle.gather(Tensor([100352, 32],"float32"), Tensor([349],"int64"), axis=0, )
paddle.gather(Tensor([3265416, 4],"float32"), Tensor([191, 1],"int64"), )
paddle.gather(Tensor([1048576, 2],"float32"), Tensor([925379],"int64"), )
paddle.gather(Tensor([165376, 68],"float32"), Tensor([181],"int64"), axis=0, )
paddle.gather(Tensor([1013482],"float32"), Tensor([1013482],"int64"), )
paddle.gather(Tensor([282240, 4],"float32"), Tensor([549],"int64"), axis=0, )
paddle.gather(Tensor([73728, 32],"float32"), Tensor([616],"int64"), axis=0, )
paddle.gather(Tensor([2271240, 4],"float32"), Tensor([326, 1],"int64"), )
paddle.gather_nd(Tensor([263, 80, 28, 28],"float32"), Tensor([206192, 4],"int64"), )
paddle.gather_nd(Tensor([229, 80, 14, 14],"float32"), Tensor([44884, 4],"int64"), )
paddle.gather_nd(Tensor([339, 80, 14, 14],"float32"), Tensor([66444, 4],"int64"), )
paddle.gather_nd(Tensor([356, 80, 28, 28],"float32"), Tensor([279104, 4],"int64"), )
paddle.gather_nd(Tensor([474, 80, 14, 14],"float32"), Tensor([92904, 4],"int64"), )
paddle.gather_nd(Tensor([305, 80, 14, 14],"float32"), Tensor([59780, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([6296, 2],"int64"), )
paddle.gather_nd(Tensor([361, 80, 14, 14],"float32"), Tensor([70756, 4],"int64"), )
paddle.gather_nd(Tensor([406, 80, 28, 28],"float32"), Tensor([318304, 4],"int64"), )
paddle.gather_nd(Tensor([315, 80, 28, 28],"float32"), Tensor([246960, 4],"int64"), )
paddle.gather_nd(Tensor([211, 80, 14, 14],"float32"), Tensor([41356, 4],"int64"), )
paddle.gather_nd(Tensor([435, 80, 28, 28],"float32"), Tensor([341040, 4],"int64"), )
paddle.gather_nd(Tensor([141, 80, 28, 28],"float32"), Tensor([110544, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([4293, 2],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([6369, 2],"int64"), )
paddle.gather_nd(Tensor([301, 80, 28, 28],"float32"), Tensor([235984, 4],"int64"), )
paddle.gather_nd(Tensor([360, 80, 14, 14],"float32"), Tensor([70560, 4],"int64"), )
paddle.gather_nd(Tensor([106, 80, 28, 28],"float32"), Tensor([83104, 4],"int64"), )
paddle.gather_nd(Tensor([338, 80, 28, 28],"float32"), Tensor([264992, 4],"int64"), )
paddle.gather_nd(Tensor([451, 80, 28, 28],"float32"), Tensor([353584, 4],"int64"), )
paddle.gather_nd(Tensor([197, 80, 28, 28],"float32"), Tensor([154448, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([7165, 2],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([2946, 2],"int64"), )
paddle.gather_nd(Tensor([162, 80, 14, 14],"float32"), Tensor([31752, 4],"int64"), )
paddle.gather_nd(Tensor([312, 80, 28, 28],"float32"), Tensor([244608, 4],"int64"), )
paddle.gather_nd(Tensor([164, 80, 28, 28],"float32"), Tensor([128576, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([6117, 2],"int64"), )
paddle.gather_nd(Tensor([194, 80, 28, 28],"float32"), Tensor([152096, 4],"int64"), )
paddle.gather_nd(Tensor([155, 80, 14, 14],"float32"), Tensor([30380, 4],"int64"), )
paddle.gather_nd(Tensor([290, 80, 28, 28],"float32"), Tensor([227360, 4],"int64"), )
paddle.gather_nd(Tensor([391, 80, 14, 14],"float32"), Tensor([76636, 4],"int64"), )
paddle.gather_nd(Tensor([183, 80, 28, 28],"float32"), Tensor([143472, 4],"int64"), )
paddle.gather_nd(Tensor([268, 80, 14, 14],"float32"), Tensor([52528, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([6351, 2],"int64"), )
paddle.gather_nd(Tensor([223, 80, 14, 14],"float32"), Tensor([43708, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5572, 2],"int64"), )
paddle.gather_nd(Tensor([328, 80, 28, 28],"float32"), Tensor([257152, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([383, 2],"int64"), )
paddle.gather_nd(Tensor([410, 80, 28, 28],"float32"), Tensor([321440, 4],"int64"), )
paddle.gather_nd(Tensor([354, 80, 14, 14],"float32"), Tensor([69384, 4],"int64"), )
paddle.gather_nd(Tensor([272, 80, 28, 28],"float32"), Tensor([213248, 4],"int64"), )
paddle.gather_nd(Tensor([182, 80, 28, 28],"float32"), Tensor([142688, 4],"int64"), )
paddle.gather_nd(Tensor([285, 80, 14, 14],"float32"), Tensor([55860, 4],"int64"), )
paddle.gather_nd(Tensor([244, 80, 14, 14],"float32"), Tensor([47824, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([3438, 2],"int64"), )
paddle.gather_nd(Tensor([2, 8400, 256],"float32"), Tensor([2, 300, 2],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([3072, 2],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([7020, 2],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([8162, 2],"int64"), )
paddle.gather_nd(Tensor([359, 80, 28, 28],"float32"), Tensor([281456, 4],"int64"), )
paddle.gather_nd(Tensor([293, 80, 28, 28],"float32"), Tensor([229712, 4],"int64"), )
paddle.gather_nd(Tensor([348, 80, 14, 14],"float32"), Tensor([68208, 4],"int64"), )
paddle.gather_nd(Tensor([366, 80, 14, 14],"float32"), Tensor([71736, 4],"int64"), )
paddle.gather_nd(Tensor([217, 80, 14, 14],"float32"), Tensor([42532, 4],"int64"), )
paddle.gather_nd(Tensor([204, 80, 28, 28],"float32"), Tensor([159936, 4],"int64"), )
paddle.gather_nd(Tensor([253, 80, 28, 28],"float32"), Tensor([198352, 4],"int64"), )
paddle.gather_nd(Tensor([183, 80, 14, 14],"float32"), Tensor([35868, 4],"int64"), )
paddle.gather_nd(Tensor([117, 80, 28, 28],"float32"), Tensor([91728, 4],"int64"), )
paddle.gather_nd(Tensor([502, 80, 28, 28],"float32"), Tensor([393568, 4],"int64"), )
paddle.gather_nd(Tensor([210, 80, 14, 14],"float32"), Tensor([41160, 4],"int64"), )
paddle.gather_nd(Tensor([158, 80, 28, 28],"float32"), Tensor([123872, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5548, 2],"int64"), )
paddle.gather_nd(Tensor([157, 80, 14, 14],"float32"), Tensor([30772, 4],"int64"), )
paddle.gather_nd(x=Tensor([760567127, 3],"float32"), index=Tensor([2],"int64"), )
paddle.gather_nd(Tensor([290, 80, 14, 14],"float32"), Tensor([56840, 4],"int64"), )
paddle.gather_nd(Tensor([504, 80, 28, 28],"float32"), Tensor([395136, 4],"int64"), )
paddle.gather_nd(Tensor([348, 80, 28, 28],"float32"), Tensor([272832, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([6929, 2],"int64"), )
paddle.gather_nd(Tensor([16, 8400, 256],"float32"), Tensor([16, 300, 2],"int64"), )
paddle.gather_nd(Tensor([299, 80, 28, 28],"float32"), Tensor([234416, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5084, 2],"int64"), )
paddle.gather_nd(Tensor([310, 80, 14, 14],"float32"), Tensor([60760, 4],"int64"), )
paddle.gather_nd(Tensor([350, 80, 14, 14],"float32"), Tensor([68600, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([6954, 2],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([3702, 2],"int64"), )
paddle.gather_nd(Tensor([249, 80, 28, 28],"float32"), Tensor([195216, 4],"int64"), )
paddle.gather_nd(Tensor([250, 80, 28, 28],"float32"), Tensor([196000, 4],"int64"), )
paddle.gather_nd(x=Tensor([760567127, 3],"int32"), index=Tensor([2],"int32"), )
paddle.gather_nd(Tensor([1, 12096, 256],"float32"), Tensor([1, 300, 2],"int64"), )
paddle.gather_nd(Tensor([327, 80, 28, 28],"float32"), Tensor([256368, 4],"int64"), )
paddle.gather_nd(Tensor([320, 80, 28, 28],"float32"), Tensor([250880, 4],"int64"), )
paddle.gather_nd(Tensor([128, 80, 28, 28],"float32"), Tensor([100352, 4],"int64"), )
paddle.gather_nd(Tensor([178, 80, 28, 28],"float32"), Tensor([139552, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([6880, 2],"int64"), )
paddle.gather_nd(Tensor([231, 80, 28, 28],"float32"), Tensor([181104, 4],"int64"), )
paddle.gather_nd(Tensor([296, 80, 28, 28],"float32"), Tensor([232064, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([3783, 2],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([1, 2],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([6935, 2],"int64"), )
paddle.gather_nd(Tensor([285, 80, 28, 28],"float32"), Tensor([223440, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([7290, 2],"int64"), )
paddle.gather_nd(Tensor([266, 80, 28, 28],"float32"), Tensor([208544, 4],"int64"), )
paddle.gather_nd(Tensor([431, 80, 28, 28],"float32"), Tensor([337904, 4],"int64"), )
paddle.gather_nd(Tensor([316, 80, 28, 28],"float32"), Tensor([247744, 4],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5840, 2],"int64"), )
paddle.gather_nd(x=Tensor([1, 2, 1073741825, 2],"float16"), index=Tensor([1, 1, 1, 1073741825],"int64"), )
paddle.gather_nd(Tensor([1, 8192, 7168],"bfloat16"), Tensor([3399, 2],"int64"), )
paddle.gather_nd(Tensor([375, 80, 28, 28],"float32"), Tensor([294000, 4],"int64"), )
paddle.gather_nd(Tensor([2, 6069, 256],"float32"), Tensor([2, 300, 2],"int64"), )
paddle.gather_nd(Tensor([441, 80, 28, 28],"float32"), Tensor([345744, 4],"int64"), )
paddle.geometric.segment_sum(Tensor([286331154, 15],"float16"), Tensor([286331154],"int64"), )
paddle.geometric.send_ue_recv(Tensor([10, 85899346, 5],"float16"), Tensor([15, 85899346, 1],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "add", "sum", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 286331154],"float16"), Tensor([15, 286331154],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "mean", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 286331154],"float16"), Tensor([15, 286331154],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "sum", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 286331154],"float16"), Tensor([15, 286331154],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "add", "min", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 85899346, 5],"float16"), Tensor([15, 85899346, 1],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "max", None, None, )
paddle.geometric.send_ue_recv(Tensor([3, 3, 253522376],"float32"), Tensor([4, 253522376],"float32"), Tensor([4],"int32"), Tensor([4],"int32"), "add", "min", )
paddle.geometric.send_ue_recv(Tensor([10, 286331154],"float16"), Tensor([15, 286331154],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "add", "sum", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 286331154],"float16"), Tensor([15, 286331154],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "max", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 286331154],"float16"), Tensor([15, 286331154],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "add", "mean", None, None, )
paddle.geometric.send_uv(Tensor([214748365, 20],"float16"), Tensor([214748365, 20],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", )
paddle.geometric.send_uv(Tensor([214748365, 20],"float16"), Tensor([214748365, 20],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([214748365, 20],"float16"), Tensor([214748365, 1],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([214748365, 1],"float16"), Tensor([214748365, 20],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.geometric.send_uv(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", )
paddle.geometric.send_uv(Tensor([214748365, 1],"float16"), Tensor([214748365, 20],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", )
paddle.geometric.send_uv(Tensor([214748365, 20],"float16"), Tensor([214748365, 1],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", )
paddle.geometric.send_uv(Tensor([429496730, 10, 1],"float16"), Tensor([10, 10, 10],"float16"), Tensor([15],"int64"), Tensor([15],"int64"), "add", )
paddle.greater_equal(Tensor([13, 1371215, 16, 4, 1],"int64"), Tensor([13, 1371215, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float64"), )
paddle.greater_equal(Tensor([4, 536870913, 2],"float64"), Tensor([4, 536870913, 2],"float16"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.greater_equal(Tensor([17825793, 2, 8, 4, 1],"int64"), Tensor([17825793, 2, 8, 1, 8],"int64"), )
paddle.greater_equal(x=Tensor([1, 2, 1, 2147483649],"float16"), y=Tensor([1, 2, 2147483649],"float16"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float64"), Tensor([715827883, 3, 2],"float16"), )
paddle.greater_equal(Tensor([13, 2, 10969719, 4, 1],"int64"), Tensor([13, 2, 10969719, 1, 8],"int64"), )
paddle.greater_equal(Tensor([13, 2742430, 8, 4, 1],"int64"), Tensor([13, 2742430, 8, 1, 8],"int64"), )
paddle.greater_equal(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.greater_equal(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.greater_equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float32"), )
paddle.greater_equal(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.greater_equal(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.greater_equal(Tensor([4, 3, 357913942],"float64"), Tensor([4, 3, 357913942],"float16"), )
paddle.greater_equal(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float64"), )
paddle.greater_equal(Tensor([8912897, 2, 16, 4, 1],"int64"), Tensor([8912897, 2, 16, 1, 8],"int64"), )
paddle.greater_equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float64"), )
paddle.greater_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.greater_equal(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float64"), )
paddle.greater_equal(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float64"), )
paddle.greater_equal(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.greater_equal(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"float16"), )
paddle.greater_equal(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.greater_than(Tensor([4, 285212673, 2],"float64"), Tensor([4, 285212673, 2],"float32"), )
paddle.greater_than(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float64"), )
paddle.greater_than(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float64"), )
paddle.greater_than(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float64"), )
paddle.greater_than(Tensor([4, 3, 190141782],"float64"), Tensor([4, 3, 190141782],"float32"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.greater_than(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.greater_than(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float64"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float64"), Tensor([4, 3, 357913942],"float16"), )
paddle.greater_than(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float64"), Tensor([715827883, 3, 2],"float16"), )
paddle.greater_than(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float32"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.greater_than(Tensor([4, 536870913, 2],"float64"), Tensor([4, 536870913, 2],"float16"), )
paddle.greater_than(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.greater_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.greater_than(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float64"), )
paddle.greater_than(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"float16"), )
paddle.greater_than(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float64"), )
paddle.greater_than(x=Tensor([1, 2, 1, 2147483649],"float16"), y=Tensor([1, 2, 2147483649],"float16"), )
paddle.greater_than(Tensor([380283564, 3, 2],"float64"), Tensor([380283564, 3, 2],"float32"), )
paddle.greater_than(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.heaviside(Tensor([2, 5162221, 13, 17],"float32"), Tensor([5162221, 13, 17],"float32"), )
paddle.heaviside(Tensor([7605672],"float32"), Tensor([300, 7605672],"float32"), )
paddle.heaviside(Tensor([2, 100, 671089, 17],"float32"), Tensor([100, 671089, 17],"float32"), )
paddle.heaviside(Tensor([300, 2048],"float32"), Tensor([300, 2048],"float32"), )
paddle.heaviside(Tensor([2048],"float32"), Tensor([1114113, 2048],"float32"), )
paddle.heaviside(Tensor([100, 13, 1755155],"float32"), Tensor([13, 1755155],"float32"), )
paddle.heaviside(Tensor([1],"float32"), Tensor([1114113, 2048],"float32"), )
paddle.heaviside(Tensor([1],"float32"), Tensor([300, 7605672],"float32"), )
paddle.heaviside(Tensor([100, 1342178, 17],"float32"), Tensor([1342178, 17],"float32"), )
paddle.heaviside(Tensor([2, 100, 13, 877578],"float32"), Tensor([100, 13, 877578],"float32"), )
paddle.heaviside(Tensor([300, 7605672],"float32"), Tensor([7605672],"float32"), )
paddle.histogram(input=Tensor([4, 570425345],"float32"), )
paddle.histogram(input=Tensor([570425345, 4],"float32"), )
paddle.histogram(input=Tensor([4, 570425345],"int32"), )
paddle.histogram(input=Tensor([570425345, 4],"int32"), )
paddle.hsplit(Tensor([126761188, 6, 3],"int64"), 3, )
paddle.hsplit(Tensor([126761188, 6, 3],"int64"), 2, )
paddle.hsplit(Tensor([4, 6, 95070891],"int64"), 3, )
paddle.hsplit(Tensor([4, 6, 95070891],"int64"), 2, )
paddle.hsplit(Tensor([380283564, 6],"int64"), 2, )
paddle.hsplit(Tensor([4, 190141782, 3],"int64"), 2, )
paddle.hsplit(Tensor([380283564, 6],"int64"), 3, )
paddle.hsplit(Tensor([4, 190141782, 3],"int64"), 3, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([613566757, 7],"float16"), Tensor([5, 7],"float16"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([45634028, 50],"float32"), Tensor([45634028],"float32"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([76056713, 30],"float32"), Tensor([76056713, 40],"float32"), Tensor([40],"float32"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([76056713, 30],"float32"), Tensor([40, 76056713],"float32"), Tensor([40],"float32"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 57042535],"float32"), Tensor([40, 57042535],"float32"), Tensor([40],"float32"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([858993460, 4],"float16"), Tensor([5, 858993460],"float16"), Tensor([5],"float16"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 613566757],"float16"), Tensor([7, 5],"float16"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 57042535],"float32"), Tensor([57042535, 40],"float32"), Tensor([40],"float32"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([45634028, 50],"float32"), Tensor([45634028],"float32"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([7, 613566757],"float16"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 57042535],"float32"), Tensor([57042535, 40],"float32"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 858993460],"float16"), Tensor([858993460, 5],"float16"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([45634028, 50],"float32"), Tensor([40, 50],"float32"), Tensor([40],"float32"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 613566757],"float16"), Tensor([7, 5],"float16"), Tensor([5],"float16"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([613566757, 7],"float16"), Tensor([613566757],"float16"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([76056713, 30],"float32"), Tensor([40, 76056713],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([613566757, 7],"float16"), Tensor([7, 5],"float16"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 613566757],"float16"), Tensor([5, 7],"float16"), Tensor([5],"float16"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([858993460, 4],"float16"), Tensor([858993460, 5],"float16"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([57042535, 30],"float32"), Tensor([40, 57042535],"float32"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([858993460, 4],"float16"), Tensor([5, 858993460],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([613566757, 7],"float16"), Tensor([613566757],"float16"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 57042535],"float32"), Tensor([40, 57042535],"float32"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([7, 613566757],"float16"), Tensor([613566757],"float16"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 4],"float16"), Tensor([613566757, 7],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([7, 613566757],"float16"), Tensor([613566757],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([7, 613566757],"float16"), Tensor([5, 7],"float16"), None, True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([57042535, 30],"float32"), Tensor([40, 57042535],"float32"), Tensor([40],"float32"), True, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 76056713],"float32"), Tensor([40, 76056713],"float32"), Tensor([40],"float32"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 30],"float32"), Tensor([50, 45634028],"float32"), Tensor([45634028],"float32"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([57042535, 30],"float32"), Tensor([57042535, 40],"float32"), None, True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 858993460],"float16"), Tensor([5, 858993460],"float16"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([613566757, 7],"float16"), Tensor([5, 7],"float16"), Tensor([5],"float16"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5],"float16"), False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 45634028],"float32"), Tensor([50, 40],"float32"), Tensor([40],"float32"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([858993460, 4],"float16"), Tensor([858993460, 5],"float16"), Tensor([5],"float16"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([613566757, 7],"float16"), None, False, True, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 76056713],"float32"), Tensor([76056713, 40],"float32"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([57042535, 30],"float32"), Tensor([57042535, 40],"float32"), Tensor([40],"float32"), True, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([613566757, 7],"float16"), Tensor([7, 5],"float16"), Tensor([5],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 858993460],"float16"), Tensor([858993460, 5],"float16"), Tensor([5],"float16"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([45634028, 50],"float32"), Tensor([50, 40],"float32"), Tensor([40],"float32"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 76056713],"float32"), Tensor([76056713, 40],"float32"), Tensor([40],"float32"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([4, 7],"float16"), Tensor([7, 613566757],"float16"), None, False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([30, 50],"float32"), Tensor([50, 45634028],"float32"), Tensor([45634028],"float32"), False, False, )
paddle.incubate.nn.functional.fused_matmul_bias(Tensor([50, 45634028],"float32"), Tensor([40, 50],"float32"), Tensor([40],"float32"), True, True, )
paddle.incubate.nn.functional.swiglu(Tensor([51712, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([31232, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([56832, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([33280, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([103424, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([390168, 1, 11008],"float16"), Tensor([390168, 1, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([48128, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([24576, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([28672, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 2048, 2097153],"float16"), Tensor([1, 2048, 2097153],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([60416, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([50176, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([8704, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([44032, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([105472, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([46592, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([23552, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([76288, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([88064, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([27648, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([70656, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([43520, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([2, 195084, 11008],"float16"), Tensor([2, 195084, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([20480, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([64512, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([55808, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([52224, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([65537, 2048, 32],"float16"), Tensor([65537, 2048, 32],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([89088, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([15872, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([32769, 2048, 64],"float16"), Tensor([32769, 2048, 64],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([29184, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([18432, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([36864, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([62976, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([6656, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([90624, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([12800, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([300, 4096],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([9728, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([11776, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([73728, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([2, 33554433, 64],"float16"), Tensor([2, 33554433, 64],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([87552, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([10752, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([25600, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([55296, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([8192, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([57344, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([1, 883012, 4864],"float16"), Tensor([1, 883012, 4864],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([79360, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([40448, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([92160, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([108544, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([64000, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([44544, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([49664, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([9216, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([46080, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([26112, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([81920, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([85504, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([91648, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([24064, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([94720, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([3580, 109, 11008],"float16"), Tensor([3580, 109, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([72704, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([82944, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([11264, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([59392, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([75264, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([7168, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([6144, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([45056, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([84480, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([68608, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([8192, 896],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([2560, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([13824, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([53248, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([71680, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([60928, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([96256, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([86528, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([71168, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([19456, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([16384, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([97792, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([100352, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([84992, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([98816, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([7680, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([41472, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([300, 4096],"float32"), Tensor([300, 4096],"float32"), )
paddle.incubate.nn.functional.swiglu(Tensor([76800, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([2, 109, 19701685],"float16"), Tensor([2, 109, 19701685],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([22016, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([5632, 7168],"bfloat16"), )
paddle.incubate.nn.functional.swiglu(Tensor([78034, 5, 11008],"float16"), Tensor([78034, 5, 11008],"float16"), )
paddle.incubate.nn.functional.swiglu(Tensor([5120, 7168],"bfloat16"), )
paddle.index_add(Tensor([100, 100, 228171],"float32"), Tensor([20],"int32"), 1, Tensor([100, 20, 228171],"float32"), )
paddle.index_add(Tensor([100, 22817014],"float32"), Tensor([20],"int32"), 0, Tensor([20, 22817014],"float32"), )
paddle.index_add(Tensor([100, 100, 25],"float32"), Tensor([228171],"int32"), 2, Tensor([100, 100, 228171],"float32"), )
paddle.index_add(Tensor([100, 42949673],"float16"), Tensor([20],"int64"), 0, Tensor([20, 42949673],"float16"), )
paddle.index_add(Tensor([4, 3, 35651585],"float32"), Tensor([16],"int64"), 1, Tensor([4, 16, 35651585],"float32"), )
paddle.index_add(Tensor([100, 100, 5],"float32"), Tensor([4563403],"int32"), 1, Tensor([100, 4563403, 5],"float32"), )
paddle.index_add(Tensor([71303169, 3, 2],"float32"), Tensor([16],"int64"), 1, Tensor([71303169, 16, 2],"float32"), )
paddle.index_put(Tensor([45691142, 94],"float16"), tuple(Tensor([45691142],"bool"),), Tensor([1],"float16"), True, )
paddle.index_put(Tensor([110, 42, 56, 56],"float64"), tuple(Tensor([16, 16],"int64"),Tensor([16, 16],"int64"),Tensor([1, 16],"int64"),Tensor([1, 16],"int64"),), Tensor([16, 16],"float64"), False, )
paddle.index_put(Tensor([20742740, 110],"float32"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"float32"), False, )
paddle.index_put(Tensor([110, 39045158],"float16"), tuple(Tensor([110, 39045158],"bool"),), Tensor([5170],"float16"), False, )
paddle.index_put(Tensor([45691142, 94],"float16"), tuple(Tensor([45691142],"bool"),), Tensor([94],"float16"), False, )
paddle.index_put(Tensor([44, 97612894],"float16"), tuple(Tensor([44],"bool"),), Tensor([97612894],"float16"), True, )
paddle.index_put(Tensor([110, 42, 56, 56],"float64"), tuple(Tensor([16, 16],"int64"),Tensor([16, 16],"int64"),Tensor([1, 16],"int64"),Tensor([1, 16],"int64"),), Tensor([16, 16],"float64"), True, )
paddle.index_put(Tensor([110, 42, 32, 29052],"float16"), tuple(Tensor([16, 16],"int32"),Tensor([16, 16],"int32"),Tensor([32],"bool"),), Tensor([16, 16, 29052],"float16"), True, )
paddle.index_put(Tensor([45691142, 94],"float16"), tuple(Tensor([45691142, 94],"bool"),), Tensor([5170],"float16"), False, )
paddle.index_put(Tensor([100, 22817014],"float32"), tuple(Tensor([21],"int32"),Tensor([21],"int32"),), Tensor([21],"float32"), False, )
paddle.index_put(Tensor([110, 42, 56, 56],"float64"), tuple(Tensor([16, 16],"int64"),Tensor([16, 16],"int64"),Tensor([1, 16],"int64"),), Tensor([16, 16, 56],"float64"), False, )
paddle.index_put(Tensor([45691142, 94],"float16"), tuple(Tensor([45691142],"bool"),), Tensor([94],"float16"), True, )
paddle.index_put(Tensor([110, 42, 56, 56],"float64"), tuple(Tensor([16, 16],"int64"),Tensor([16, 16],"int64"),Tensor([1, 16],"int64"),), Tensor([56],"float64"), False, )
paddle.index_put(Tensor([110, 42, 56, 56],"float64"), tuple(Tensor([16, 16],"int64"),Tensor([16, 16],"int64"),Tensor([1, 16],"int64"),), Tensor([1],"float64"), True, )
paddle.index_put(Tensor([44, 97612894],"float16"), tuple(Tensor([44],"bool"),), Tensor([97612894],"float16"), False, )
paddle.index_put(Tensor([110, 42, 56, 56],"float64"), tuple(Tensor([16, 16],"int64"),Tensor([16, 16],"int64"),Tensor([1, 16],"int64"),), Tensor([56],"float64"), True, )
paddle.index_put(Tensor([110, 42, 32, 56],"float64"), tuple(Tensor([16, 16],"int32"),Tensor([16, 16],"int32"),Tensor([32],"bool"),), Tensor([16, 16, 56],"float64"), True, )
paddle.index_put(Tensor([110, 42, 56, 56],"float64"), tuple(Tensor([16, 16],"int32"),Tensor([16, 16],"int32"),Tensor([1, 16],"int32"),), Tensor([16, 16, 56],"float64"), True, )
paddle.index_put(Tensor([45691142, 94],"float16"), tuple(Tensor([45691142],"bool"),), Tensor([1],"float16"), False, )
paddle.index_put(Tensor([45691142, 94],"float16"), tuple(Tensor([45691142],"bool"),), Tensor([55, 94],"float16"), True, )
paddle.index_put(Tensor([45691142, 94],"float16"), tuple(Tensor([45691142],"bool"),), Tensor([55, 94],"float16"), False, )
paddle.index_put(Tensor([110, 39045158],"float16"), tuple(Tensor([110, 39045158],"bool"),), Tensor([5170],"float16"), True, )
paddle.index_put(Tensor([110, 42, 56, 56],"float64"), tuple(Tensor([16, 16],"int64"),Tensor([16, 16],"int64"),Tensor([1, 16],"int64"),), Tensor([1],"float64"), False, )
paddle.index_put(Tensor([110, 42, 16601, 56],"float16"), tuple(Tensor([16, 16],"int32"),Tensor([16, 16],"int32"),Tensor([16601],"bool"),), Tensor([16, 16, 56],"float16"), True, )
paddle.index_put(Tensor([45691142, 94],"float16"), tuple(Tensor([45691142, 94],"bool"),), Tensor([5170],"float16"), True, )
paddle.index_put(Tensor([110, 42, 56, 56],"float64"), tuple(Tensor([16, 16],"int64"),Tensor([16, 16],"int64"),Tensor([1, 16],"int64"),), Tensor([16, 16, 56],"float64"), True, )
paddle.index_sample(Tensor([288, 4725],"float32"), Tensor([288, 27],"int64"), )
paddle.index_sample(Tensor([2368, 2125],"float32"), Tensor([2368, 36],"int64"), )
paddle.index_sample(Tensor([96, 12096],"float32"), Tensor([96, 27],"int64"), )
paddle.index_sample(Tensor([160, 7581],"float32"), Tensor([160, 27],"int64"), )
paddle.index_sample(Tensor([144, 12096],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([496, 3549],"float32"), Tensor([496, 27],"int64"), )
paddle.index_sample(Tensor([352, 11109],"float32"), Tensor([352, 27],"int64"), )
paddle.index_sample(Tensor([384, 12096],"float32"), Tensor([384, 27],"int64"), )
paddle.index_sample(Tensor([528, 6804],"float32"), Tensor([528, 27],"int64"), )
paddle.index_sample(Tensor([264, 5376],"float32"), Tensor([264, 27],"int64"), )
paddle.index_sample(Tensor([192, 12096],"float32"), Tensor([192, 27],"int64"), )
paddle.index_sample(Tensor([448, 7581],"float32"), Tensor([448, 27],"int64"), )
paddle.index_sample(Tensor([1536, 2577],"float32"), Tensor([1536, 36],"int64"), )
paddle.index_sample(Tensor([176, 11109],"float32"), Tensor([176, 27],"int64"), )
paddle.index_sample(Tensor([2240, 2125],"float32"), Tensor([2240, 36],"int64"), )
paddle.index_sample(Tensor([256, 11109],"float32"), Tensor([256, 27],"int64"), )
paddle.index_sample(Tensor([208, 6804],"float32"), Tensor([208, 27],"int64"), )
paddle.index_sample(Tensor([424, 4725],"float32"), Tensor([424, 27],"int64"), )
paddle.index_sample(Tensor([520, 4725],"float32"), Tensor([520, 27],"int64"), )
paddle.index_sample(Tensor([496, 10164],"float32"), Tensor([496, 27],"int64"), )
paddle.index_sample(Tensor([2368, 3060],"float32"), Tensor([2368, 36],"int64"), )
paddle.index_sample(Tensor([1536, 2125],"float32"), Tensor([1536, 36],"int64"), )
paddle.index_sample(Tensor([480, 4116],"float32"), Tensor([480, 27],"int64"), )
paddle.index_sample(Tensor([184, 12096],"float32"), Tensor([184, 27],"int64"), )
paddle.index_sample(Tensor([464, 6069],"float32"), Tensor([464, 27],"int64"), )
paddle.index_sample(Tensor([368, 9261],"float32"), Tensor([368, 27],"int64"), )
paddle.index_sample(Tensor([224, 4725],"float32"), Tensor([224, 27],"int64"), )
paddle.index_sample(Tensor([5460096, 787],"float16"), Tensor([5460096, 418],"int64"), )
paddle.index_sample(Tensor([304, 5376],"float32"), Tensor([304, 27],"int64"), )
paddle.index_sample(Tensor([152, 7581],"float32"), Tensor([152, 27],"int64"), )
paddle.index_sample(Tensor([1856, 2577],"float32"), Tensor([1856, 36],"int64"), )
paddle.index_sample(Tensor([296, 7581],"float32"), Tensor([296, 27],"int64"), )
paddle.index_sample(Tensor([960, 1360],"float32"), Tensor([960, 36],"int64"), )
paddle.index_sample(Tensor([336, 5376],"float32"), Tensor([336, 27],"int64"), )
paddle.index_sample(Tensor([272, 5376],"float32"), Tensor([272, 27],"int64"), )
paddle.index_sample(Tensor([240, 10164],"float32"), Tensor([240, 27],"int64"), )
paddle.index_sample(Tensor([464, 7581],"float32"), Tensor([464, 27],"int64"), )
paddle.index_sample(Tensor([1088, 2577],"float32"), Tensor([1088, 36],"int64"), )
paddle.index_sample(Tensor([264, 4116],"float32"), Tensor([264, 27],"int64"), )
paddle.index_sample(Tensor([3072, 2577],"float32"), Tensor([3072, 36],"int64"), )
paddle.index_sample(Tensor([288, 10164],"float32"), Tensor([288, 27],"int64"), )
paddle.index_sample(Tensor([544, 6804],"float32"), Tensor([544, 27],"int64"), )
paddle.index_sample(Tensor([320, 10164],"float32"), Tensor([320, 27],"int64"), )
paddle.index_sample(Tensor([368, 8400],"float32"), Tensor([368, 27],"int64"), )
paddle.index_sample(Tensor([176, 12096],"float32"), Tensor([176, 27],"int64"), )
paddle.index_sample(Tensor([256, 8400],"float32"), Tensor([256, 27],"int64"), )
paddle.index_sample(Tensor([168, 12096],"float32"), Tensor([168, 27],"int64"), )
paddle.index_sample(Tensor([416, 12096],"float32"), Tensor([416, 27],"int64"), )
paddle.index_sample(Tensor([432, 3024],"float32"), Tensor([432, 27],"int64"), )
paddle.index_sample(Tensor([352, 3024],"float32"), Tensor([352, 27],"int64"), )
paddle.index_sample(Tensor([152, 6804],"float32"), Tensor([152, 27],"int64"), )
paddle.index_sample(Tensor([156, 7581],"float32"), Tensor([156, 27],"int64"), )
paddle.index_sample(Tensor([496, 6069],"float32"), Tensor([496, 27],"int64"), )
paddle.index_sample(Tensor([2048, 2577],"float32"), Tensor([2048, 36],"int64"), )
paddle.index_sample(Tensor([360, 7581],"float32"), Tensor([360, 27],"int64"), )
paddle.index_sample(Tensor([260, 5376],"float32"), Tensor([260, 27],"int64"), )
paddle.index_sample(Tensor([1792, 1726],"float32"), Tensor([1792, 36],"int64"), )
paddle.index_sample(Tensor([144, 7581],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([1024, 2125],"float32"), Tensor([1024, 36],"int64"), )
paddle.index_sample(Tensor([296, 8400],"float32"), Tensor([296, 27],"int64"), )
paddle.index_sample(Tensor([200, 5376],"float32"), Tensor([200, 27],"int64"), )
paddle.index_sample(Tensor([592, 10164],"float32"), Tensor([592, 27],"int64"), )
paddle.index_sample(Tensor([240, 6804],"float32"), Tensor([240, 27],"int64"), )
paddle.index_sample(Tensor([2368, 1726],"float32"), Tensor([2368, 36],"int64"), )
paddle.index_sample(Tensor([576, 5376],"float32"), Tensor([576, 27],"int64"), )
paddle.index_sample(Tensor([1865664, 100],"float32"), Tensor([1865664, 1],"int64"), )
paddle.index_sample(Tensor([2496, 2125],"float32"), Tensor([2496, 36],"int64"), )
paddle.index_sample(Tensor([1728, 3060],"float32"), Tensor([1728, 36],"int64"), )
paddle.index_sample(Tensor([352, 6804],"float32"), Tensor([352, 27],"int64"), )
paddle.index_sample(Tensor([476, 4725],"float32"), Tensor([476, 27],"int64"), )
paddle.index_sample(Tensor([304, 4725],"float32"), Tensor([304, 27],"int64"), )
paddle.index_sample(Tensor([560, 7581],"float32"), Tensor([560, 27],"int64"), )
paddle.index_sample(Tensor([224, 6804],"float32"), Tensor([224, 27],"int64"), )
paddle.index_sample(Tensor([328, 9261],"float32"), Tensor([328, 27],"int64"), )
paddle.index_sample(Tensor([128, 8400],"float32"), Tensor([128, 27],"int64"), )
paddle.index_sample(Tensor([6, 715827883],"float16"), Tensor([6, 380283564],"int64"), )
paddle.index_sample(Tensor([184, 10164],"float32"), Tensor([184, 27],"int64"), )
paddle.index_sample(Tensor([2176, 3060],"float32"), Tensor([2176, 36],"int64"), )
paddle.index_sample(Tensor([416, 2541],"float32"), Tensor([416, 27],"int64"), )
paddle.index_sample(Tensor([2176, 2577],"float32"), Tensor([2176, 36],"int64"), )
paddle.index_sample(Tensor([232, 4725],"float32"), Tensor([232, 27],"int64"), )
paddle.index_sample(Tensor([2816, 2577],"float32"), Tensor([2816, 36],"int64"), )
paddle.index_sample(Tensor([356, 10164],"float32"), Tensor([356, 27],"int64"), )
paddle.index_sample(Tensor([640, 9261],"float32"), Tensor([640, 27],"int64"), )
paddle.index_sample(Tensor([2, 32000],"float16"), Tensor([2, 1140850690],"int64"), )
paddle.index_sample(Tensor([1576, 4116],"float32"), Tensor([1576, 27],"int64"), )
paddle.index_sample(Tensor([1408, 2577],"float32"), Tensor([1408, 36],"int64"), )
paddle.index_sample(Tensor([2240, 3060],"float32"), Tensor([2240, 36],"int64"), )
paddle.index_sample(Tensor([160, 9261],"float32"), Tensor([160, 27],"int64"), )
paddle.index_sample(Tensor([336, 4116],"float32"), Tensor([336, 27],"int64"), )
paddle.index_sample(Tensor([320, 6804],"float32"), Tensor([320, 27],"int64"), )
paddle.index_sample(Tensor([2240, 1360],"float32"), Tensor([2240, 36],"int64"), )
paddle.index_sample(Tensor([144, 11109],"float32"), Tensor([144, 27],"int64"), )
paddle.index_sample(Tensor([448, 11109],"float32"), Tensor([448, 27],"int64"), )
paddle.index_sample(Tensor([43383509, 99],"float16"), Tensor([43383509, 5],"int64"), )
paddle.index_sample(Tensor([932832, 100],"float32"), Tensor([932832, 1],"int64"), )
paddle.index_sample(Tensor([344, 11109],"float32"), Tensor([344, 27],"int64"), )
paddle.index_sample(Tensor([2, 65024],"float16"), Tensor([2, 1140850690],"int64"), )
paddle.index_sample(Tensor([304, 10164],"float32"), Tensor([304, 27],"int64"), )
paddle.index_sample(Tensor([688, 10164],"float32"), Tensor([688, 27],"int64"), )
paddle.index_select(Tensor([64, 1360, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 10164, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([16, 9261, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([64, 2125, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([64, 3060, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(x=Tensor([15548, 128],"float32"), index=Tensor([78112],"int64"), axis=0, )
paddle.index_select(Tensor([1000, 2001, 2],"float32"), Tensor([1000],"int64"), )
paddle.index_select(x=Tensor([26736, 128],"float32"), index=Tensor([105344],"int64"), axis=0, )
paddle.index_select(Tensor([16, 10164, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(x=Tensor([11661, 128],"float32"), index=Tensor([58584],"int64"), axis=0, )
paddle.index_select(Tensor([559241, 10, 8, 96],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([8, 6069, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 9261, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([64, 2577, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([570141, 2001, 2],"float32"), Tensor([570141],"int64"), )
paddle.index_select(Tensor([430186, 13, 8, 96],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([8, 4116, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 12, 8, 11184811],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([8, 12096, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([1000, 2001],"float32"), Tensor([1000],"int64"), )
paddle.index_select(Tensor([4, 13, 860371, 96],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([508401, 11, 8, 96],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([187679, 13],"float32"), Tensor([10],"int64"), axis=1, )
paddle.index_select(Tensor([4, 10, 1118482, 96],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([178956971, 24],"float16"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([16, 2100, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([1431655766, 3],"float16"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([4, 500, 1140851],"float32"), index=Tensor([1140851],"int32"), axis=-1, )
paddle.index_select(Tensor([8, 3024, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 12, 932068, 96],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([35651585, 64],"float32"), index=Tensor([35651585],"int64"), axis=0, )
paddle.index_select(Tensor([16, 4116, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 2541, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([268435457, 16],"float16"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([16, 3549, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([466034, 12, 8, 96],"float16"), Tensor([466034],"int64"), )
paddle.index_select(Tensor([4, 11, 1016801, 96],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([8, 4725, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 13, 8, 10324441],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([16, 4725, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([16, 3024, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 8400, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([16, 2541, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([559241, 10, 8, 96],"float16"), Tensor([559241],"int64"), )
paddle.index_select(Tensor([16, 12096, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([16, 8400, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 7581, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([508401, 11, 8, 96],"float16"), Tensor([508401],"int64"), )
paddle.index_select(Tensor([16, 6069, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([399458, 14, 8, 96],"float16"), Tensor([399458],"int64"), )
paddle.index_select(Tensor([8, 3549, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([16, 7581, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 5376, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([570425345, 4],"float32"), Tensor([570425345],"int64"), axis=0, )
paddle.index_select(Tensor([169, 3],"float16"), Tensor([2281701379],"int64"), )
paddle.index_select(Tensor([300, 4096],"float32"), Tensor([10],"int64"), )
paddle.index_select(Tensor([4, 1398102, 8, 96],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([16, 11109, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([466034, 12, 8, 96],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([430186, 13, 8, 96],"float16"), Tensor([430186],"int64"), )
paddle.index_select(Tensor([399458, 14, 8, 96],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([357913942, 12],"float16"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([8, 2100, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([8, 6804, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 14, 8, 9586981],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 11, 8, 12201612],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([134217729, 32],"float16"), Tensor([2401],"int64"), )
paddle.index_select(Tensor([8, 11109, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([21128, 128],"float32"), Tensor([2],"int64"), axis=0, )
paddle.index_select(Tensor([4, 14, 798916, 96],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([16, 5376, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([16, 6804, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.index_select(Tensor([2, 1140850690],"float32"), Tensor([1140850690],"int64"), axis=-1, )
paddle.index_select(Tensor([4, 10, 8, 13421773],"float16"), Tensor([4],"int64"), )
paddle.index_select(Tensor([4, 256000],"float32"), Tensor([2],"int64"), )
paddle.index_select(Tensor([1140281, 2001],"float32"), Tensor([1140281],"int64"), )
paddle.index_select(Tensor([64, 1726, 81],"float32"), Tensor([80],"int64"), axis=-1, )
paddle.inner(Tensor([20, 214748365],"float16"), Tensor([214748365],"float16"), )
paddle.inner(x=Tensor([3, 715827883],"float16"), y=Tensor([3, 2, 715827883],"float16"), )
paddle.inner(x=Tensor([3, 858993460],"float16"), y=Tensor([5, 858993460],"float16"), )
paddle.inner(x=Tensor([3, 143165577],"float16"), y=Tensor([3, 2, 5, 143165577],"float16"), )
paddle.is_complex(Tensor([72, 9261, 2],"float32"), )
paddle.is_complex(Tensor([336, 3549, 2],"float32"), )
paddle.is_complex(Tensor([832, 2577, 2],"float32"), )
paddle.is_complex(Tensor([208, 3024, 2],"float32"), )
paddle.is_complex(Tensor([528, 6804, 2],"float32"), )
paddle.is_complex(Tensor([168, 3024, 2],"float32"), )
paddle.is_complex(Tensor([2688, 1360, 2],"float32"), )
paddle.is_complex(Tensor([232, 4725, 2],"float32"), )
paddle.is_complex(Tensor([168, 11109, 2],"float32"), )
paddle.is_complex(Tensor([216, 9261, 2],"float32"), )
paddle.is_complex(Tensor([248, 2100, 2],"float32"), )
paddle.is_complex(Tensor([1856, 1360, 2],"float32"), )
paddle.is_complex(Tensor([2100, 12096, 2],"float32"), )
paddle.is_complex(Tensor([1856, 1726, 2],"float32"), )
paddle.is_complex(Tensor([448, 6069, 2],"float32"), )
paddle.is_complex(Tensor([1664, 1726, 2],"float32"), )
paddle.is_complex(Tensor([216, 5376, 2],"float32"), )
paddle.is_complex(Tensor([336, 2100, 2],"float32"), )
paddle.is_complex(Tensor([208, 4725, 2],"float32"), )
paddle.is_complex(Tensor([844, 2541, 2],"float32"), )
paddle.is_complex(Tensor([88, 6069, 2],"float32"), )
paddle.is_complex(Tensor([176, 10164, 2],"float32"), )
paddle.is_complex(Tensor([352, 4725, 2],"float32"), )
paddle.is_complex(Tensor([104, 8400, 2],"float32"), )
paddle.is_complex(Tensor([352, 7581, 2],"float32"), )
paddle.is_complex(Tensor([272, 2541, 2],"float32"), )
paddle.is_complex(Tensor([164, 6804, 2],"float32"), )
paddle.is_complex(Tensor([200, 8400, 2],"float32"), )
paddle.is_complex(Tensor([224, 11109, 2],"float32"), )
paddle.is_complex(Tensor([216, 4116, 2],"float32"), )
paddle.is_complex(Tensor([136, 4116, 2],"float32"), )
paddle.is_complex(Tensor([304, 6069, 2],"float32"), )
paddle.is_complex(Tensor([1344, 1726, 2],"float32"), )
paddle.is_complex(Tensor([240, 6804, 2],"float32"), )
paddle.is_complex(Tensor([1344, 3060, 2],"float32"), )
paddle.is_complex(Tensor([64, 9261, 2],"float32"), )
paddle.is_complex(Tensor([688, 11109, 2],"float32"), )
paddle.is_complex(Tensor([136, 11109, 2],"float32"), )
paddle.is_complex(Tensor([448, 3549, 2],"float32"), )
paddle.is_complex(Tensor([272, 12096, 2],"float32"), )
paddle.is_complex(Tensor([176, 3024, 2],"float32"), )
paddle.is_complex(Tensor([512, 5376, 2],"float32"), )
paddle.is_complex(Tensor([136, 10164, 2],"float32"), )
paddle.is_complex(Tensor([352, 11109, 2],"float32"), )
paddle.is_complex(Tensor([2752, 3060, 2],"float32"), )
paddle.is_complex(Tensor([100, 6069, 2],"float32"), )
paddle.is_complex(Tensor([608, 6804, 2],"float32"), )
paddle.is_complex(Tensor([176, 8400, 2],"float32"), )
paddle.is_complex(Tensor([528, 8400, 2],"float32"), )
paddle.is_complex(Tensor([256, 2541, 2],"float32"), )
paddle.is_complex(Tensor([896, 2125, 2],"float32"), )
paddle.is_complex(Tensor([280, 10164, 2],"float32"), )
paddle.is_complex(Tensor([168, 7581, 2],"float32"), )
paddle.is_complex(Tensor([256, 11109, 2],"float32"), )
paddle.is_complex(Tensor([1792, 3060, 2],"float32"), )
paddle.is_complex(Tensor([288, 6804, 2],"float32"), )
paddle.is_complex(Tensor([2176, 2125, 2],"float32"), )
paddle.is_complex(Tensor([1152, 2125, 2],"float32"), )
paddle.is_complex(Tensor([72, 11109, 2],"float32"), )
paddle.is_complex(Tensor([204, 5376, 2],"float32"), )
paddle.is_complex(Tensor([208, 8400, 2],"float32"), )
paddle.is_complex(Tensor([48, 11109, 2],"float32"), )
paddle.is_complex(Tensor([416, 4725, 2],"float32"), )
paddle.is_complex(Tensor([424, 7581, 2],"float32"), )
paddle.is_complex(Tensor([88, 12096, 2],"float32"), )
paddle.is_complex(Tensor([80, 6804, 2],"float32"), )
paddle.is_complex(Tensor([104, 6069, 2],"float32"), )
paddle.is_complex(Tensor([3072, 1726, 2],"float32"), )
paddle.is_complex(Tensor([7168, 896],"float32"), )
paddle.is_complex(Tensor([2624, 1360, 2],"float32"), )
paddle.is_complex(Tensor([368, 8400, 2],"float32"), )
paddle.is_complex(Tensor([1984, 1360, 2],"float32"), )
paddle.is_complex(Tensor([14336, 7168],"float32"), )
paddle.is_complex(Tensor([192, 11109, 2],"float32"), )
paddle.is_complex(Tensor([320, 3549, 2],"float32"), )
paddle.is_complex(Tensor([144, 6804, 2],"float32"), )
paddle.is_complex(Tensor([216, 3024, 2],"float32"), )
paddle.is_complex(Tensor([144, 4725, 2],"float32"), )
paddle.is_complex(Tensor([256, 6804, 2],"float32"), )
paddle.is_complex(Tensor([2240, 1360, 2],"float32"), )
paddle.is_complex(Tensor([1088, 2125, 2],"float32"), )
paddle.is_complex(Tensor([144, 10164, 2],"float32"), )
paddle.is_complex(Tensor([1536, 2125, 2],"float32"), )
paddle.is_complex(Tensor([256, 7581, 2],"float32"), )
paddle.is_complex(Tensor([368, 5376, 2],"float32"), )
paddle.is_complex(Tensor([2112, 1360, 2],"float32"), )
paddle.is_complex(Tensor([176, 7581, 2],"float32"), )
paddle.is_complex(Tensor([128, 4116, 2],"float32"), )
paddle.is_complex(Tensor([248, 3024, 2],"float32"), )
paddle.is_complex(Tensor([432, 5376, 2],"float32"), )
paddle.is_complex(Tensor([256, 3024, 2],"float32"), )
paddle.is_complex(Tensor([240, 4725, 2],"float32"), )
paddle.is_complex(Tensor([448, 2100, 2],"float32"), )
paddle.is_complex(Tensor([224, 8400, 2],"float32"), )
paddle.is_complex(Tensor([2240, 1726, 2],"float32"), )
paddle.is_complex(Tensor([576, 6804, 2],"float32"), )
paddle.is_complex(Tensor([176, 4725, 2],"float32"), )
paddle.is_complex(Tensor([120, 12096, 2],"float32"), )
paddle.is_complex(Tensor([2176, 2577, 2],"float32"), )
paddle.is_complex(Tensor([328, 2541, 2],"float32"), )
paddle.isfinite(Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.isinf(Tensor([10186167, 7, 32],"float32"), )
paddle.isinf(Tensor([2, 570425345, 2],"float32"), )
paddle.isinf(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.isinf(Tensor([11, 20742740, 10],"int32"), )
paddle.isinf(Tensor([4, 5, 214748365],"float16"), )
paddle.isinf(Tensor([2147483649, 2],"float16"), )
paddle.isinf(Tensor([25264514, 17, 10],"int16"), )
paddle.isinf(Tensor([190141782, 12],"float32"), )
paddle.isinf(Tensor([2, 1, 1140850690],"float32"), )
paddle.isinf(Tensor([8, 17, 5, 902305, 7],"float16"), )
paddle.isinf(Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.isinf(Tensor([8912897, 64, 4],"float32"), )
paddle.isinf(Tensor([11, 17, 12201612],"int32"), )
paddle.isinf(Tensor([456340276, 5],"float32"), )
paddle.isinf(Tensor([14, 5093084, 32],"float32"), )
paddle.isinf(Tensor([14, 10186167, 16],"float32"), )
paddle.isinf(Tensor([429496730, 5, 2],"float16"), )
paddle.isinf(Tensor([11, 39045158, 10],"int16"), )
paddle.isinf(Tensor([1140850690, 1, 2],"float32"), )
paddle.isinf(Tensor([4, 536870913, 2],"float16"), )
paddle.isinf(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.isinf(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.isinf(Tensor([357913942, 12],"float16"), )
paddle.isinf(Tensor([10, 228170138],"float32"), )
paddle.isinf(Tensor([13421773, 17, 10],"int32"), )
paddle.isinf(Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.isinf(Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.isinf(Tensor([14, 1646250, 99],"float32"), )
paddle.isinf(Tensor([1140850690, 2],"float32"), )
paddle.isinf(Tensor([3292499, 7, 99],"float32"), )
paddle.isinf(Tensor([2281701379],"int64"), )
paddle.isinf(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.isinf(Tensor([4, 285212673, 2],"float32"), )
paddle.isinf(Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.isinf(Tensor([14, 40744668, 4],"float32"), )
paddle.isinf(Tensor([14, 7, 23282668],"float32"), )
paddle.isinf(Tensor([14, 64, 2546542],"float32"), )
paddle.isinf(Tensor([11, 17, 22967740],"int16"), )
paddle.isinf(Tensor([2228225, 64, 16],"float32"), )
paddle.isinf(Tensor([4294967297],"float16"), )
paddle.isinf(Tensor([2, 1140850690],"float32"), )
paddle.isinf(Tensor([10, 429496730],"float16"), )
paddle.isinf(Tensor([2, 2147483649],"float16"), )
paddle.isinf(Tensor([134217729, 17],"float32"), )
paddle.isinf(Tensor([4, 5, 114085069],"float32"), )
paddle.isinf(x=Tensor([4294967297],"float16"), )
paddle.isinf(Tensor([228170138, 5, 2],"float32"), )
paddle.isinf(Tensor([11, 207427399],"float32"), )
paddle.isinf(Tensor([2281701379],"float32"), )
paddle.isnan(Tensor([228170138, 10],"float32"), )
paddle.isnan(Tensor([285212673, 4, 2],"float32"), )
paddle.isnan(Tensor([192, 22369622],"float16"), )
paddle.isnan(Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.isnan(Tensor([4, 22283, 160, 160],"float32"), )
paddle.isnan(Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.isnan(Tensor([35651585, 64],"float32"), )
paddle.isnan(Tensor([929, 24, 320, 320],"float32"), )
paddle.isnan(Tensor([2, 1140850690],"float32"), )
paddle.isnan(Tensor([4, 142606337, 4],"float32"), )
paddle.isnan(Tensor([8, 24, 320, 37138],"float32"), )
paddle.isnan(Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.isnan(Tensor([8388609, 512],"float16"), )
paddle.isnan(Tensor([8, 24, 160, 139811],"float16"), )
paddle.isnan(Tensor([4, 64, 320, 320],"float16"), )
paddle.isnan(Tensor([5592406, 768],"float16"), )
paddle.isnan(Tensor([1633, 3, 375, 1242],"float32"), )
paddle.isnan(x=Tensor([4294967297],"float16"), )
paddle.isnan(Tensor([2, 4, 285212673],"float32"), )
paddle.isnan(Tensor([3, 1431655766],"float16"), )
paddle.isnan(Tensor([2, 3, 76056713, 5],"float32"), )
paddle.isnan(Tensor([3, 4, 357913942],"float16"), )
paddle.isnan(Tensor([8, 2786, 320, 320],"float32"), )
paddle.isnan(Tensor([142606337, 4, 4],"float32"), )
paddle.isnan(Tensor([190141782, 12],"float32"), )
paddle.isnan(Tensor([349, 64, 320, 320],"float32"), )
paddle.isnan(Tensor([11, 207427399],"float32"), )
paddle.isnan(Tensor([3, 4, 190141782],"float32"), )
paddle.isnan(Tensor([11008, 768],"float16"), )
paddle.isnan(Tensor([4, 64, 160, 160],"float32"), )
paddle.isnan(Tensor([14, 7, 23282668],"float32"), )
paddle.isnan(Tensor([16, 268435457],"float16"), )
paddle.isnan(Tensor([4, 64, 55706, 160],"float32"), )
paddle.isnan(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.isnan(Tensor([2, 4, 536870913],"float16"), )
paddle.isnan(Tensor([4, 3, 375, 1242],"float32"), )
paddle.isnan(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.isnan(Tensor([2, 3, 4, 95070891],"float32"), )
paddle.isnan(Tensor([1748, 24, 320, 320],"float16"), )
paddle.isnan(Tensor([3, 715827883, 2],"float16"), )
paddle.isnan(Tensor([4294967297, 1],"float16"), )
paddle.isnan(Tensor([2, 57042535, 4, 5],"float32"), )
paddle.isnan(Tensor([32, 134217729],"float16"), )
paddle.isnan(Tensor([4, 64, 104858, 160],"float16"), )
paddle.isnan(Tensor([26, 87757746],"float32"), )
paddle.isnan(Tensor([4, 64, 320, 320],"float32"), )
paddle.isnan(Tensor([256, 16777217],"float16"), )
paddle.isnan(Tensor([4, 10486, 320, 320],"float16"), )
paddle.isnan(Tensor([8, 5243, 320, 320],"float16"), )
paddle.isnan(Tensor([285212673, 4, 2],"int64"), )
paddle.isnan(Tensor([2622, 64, 160, 160],"float16"), )
paddle.isnan(Tensor([3, 380283564, 2],"int32"), )
paddle.isnan(Tensor([4, 3, 375, 507045],"float32"), )
paddle.isnan(Tensor([3714, 24, 160, 160],"float32"), )
paddle.isnan(Tensor([3, 4, 190141782],"int64"), )
paddle.isnan(Tensor([11008, 390168],"float16"), )
paddle.isnan(Tensor([10186167, 7, 32],"float32"), )
paddle.isnan(Tensor([2065, 157920, 7],"float32"), )
paddle.isnan(Tensor([8, 11142, 160, 160],"float32"), )
paddle.isnan(Tensor([16, 142606337],"float32"), )
paddle.isnan(Tensor([4, 64, 160, 160],"float16"), )
paddle.isnan(Tensor([4, 4, 142606337],"float32"), )
paddle.isnan(Tensor([285212673, 4, 2],"int32"), )
paddle.isnan(Tensor([14, 64, 2546542],"float32"), )
paddle.isnan(Tensor([148, 5, 3083381],"float32"), )
paddle.isnan(Tensor([134217729, 17],"float32"), )
paddle.isnan(Tensor([2281701379],"int32"), )
paddle.isnan(Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.isnan(Tensor([2, 1073741825, 2],"float16"), )
paddle.isnan(Tensor([3, 380283564, 2],"int64"), )
paddle.isnan(Tensor([8, 24, 74275, 160],"float32"), )
paddle.isnan(Tensor([152113426, 5, 3],"float32"), )
paddle.isnan(Tensor([8, 24, 160, 160],"float16"), )
paddle.isnan(Tensor([14, 10186167, 16],"float32"), )
paddle.isnan(Tensor([11, 17, 12201612],"int32"), )
paddle.isnan(Tensor([536870913, 4, 2],"float16"), )
paddle.isnan(Tensor([2, 570425345, 2],"float32"), )
paddle.isnan(Tensor([760567127, 3],"float32"), )
paddle.isnan(Tensor([3, 4, 190141782],"int32"), )
paddle.isnan(Tensor([3292499, 7, 99],"float32"), )
paddle.isnan(Tensor([456340276, 5],"float32"), )
paddle.isnan(Tensor([768, 11008],"float16"), )
paddle.isnan(Tensor([1948, 1171305],"float32"), )
paddle.isnan(Tensor([67108865, 64],"float16"), )
paddle.isnan(Tensor([38028357, 3, 4, 5],"float32"), )
paddle.isnan(Tensor([4, 3, 153094, 1242],"float32"), )
paddle.isnan(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.isnan(Tensor([32, 71303169],"float32"), )
paddle.isnan(Tensor([2281701379],"float32"), )
paddle.isnan(Tensor([4, 81489335, 7],"float32"), )
paddle.isnan(Tensor([4294967297],"float16"), )
paddle.isnan(Tensor([8, 24, 320, 320],"float16"), )
paddle.isnan(Tensor([14, 40744668, 4],"float32"), )
paddle.isnan(Tensor([400, 10737419],"float16"), )
paddle.isnan(Tensor([4, 157920, 3613],"float32"), )
paddle.isnan(Tensor([8, 24, 320, 320],"float32"), )
paddle.isnan(Tensor([1393, 64, 160, 160],"float32"), )
paddle.isnan(Tensor([4, 64, 27853, 320],"float32"), )
paddle.isnan(Tensor([1024, 4194305],"float16"), )
paddle.isnan(Tensor([148, 5138968, 3],"float32"), )
paddle.isneginf(Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.isneginf(Tensor([2, 3, 4, 178956971],"int8"), )
paddle.isneginf(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.isneginf(Tensor([11, 17, 12201612],"int32"), )
paddle.isneginf(Tensor([11, 39045158, 10],"int16"), )
paddle.isneginf(Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.isneginf(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.isneginf(Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.isneginf(Tensor([11, 17, 22967740],"int16"), )
paddle.isneginf(Tensor([134217729, 17],"float32"), )
paddle.isneginf(Tensor([11, 20742740, 10],"int32"), )
paddle.isneginf(Tensor([4294967297],"uint8"), )
paddle.isneginf(Tensor([25264514, 17, 10],"int16"), )
paddle.isneginf(Tensor([2, 3, 143165577, 5],"int8"), )
paddle.isneginf(Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.isneginf(Tensor([11, 207427399],"float32"), )
paddle.isneginf(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.isneginf(Tensor([8, 17, 5, 902305, 7],"float16"), )
paddle.isneginf(Tensor([13421773, 17, 10],"int32"), )
paddle.isneginf(Tensor([2, 107374183, 4, 5],"int8"), )
paddle.isneginf(Tensor([71582789, 3, 4, 5],"int8"), )
paddle.isneginf(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.isposinf(Tensor([11, 17, 22967740],"int16"), )
paddle.isposinf(Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.isposinf(Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.isposinf(Tensor([4294967297],"uint8"), )
paddle.isposinf(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.isposinf(Tensor([2, 107374183, 4, 5],"int8"), )
paddle.isposinf(Tensor([13421773, 17, 10],"int32"), )
paddle.isposinf(Tensor([8, 17, 5, 902305, 7],"float16"), )
paddle.isposinf(Tensor([11, 20742740, 10],"int32"), )
paddle.isposinf(Tensor([25264514, 17, 10],"int16"), )
paddle.isposinf(Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.isposinf(Tensor([11, 207427399],"float32"), )
paddle.isposinf(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.isposinf(Tensor([2, 3, 4, 178956971],"int8"), )
paddle.isposinf(Tensor([11, 39045158, 10],"int16"), )
paddle.isposinf(Tensor([11, 17, 12201612],"int32"), )
paddle.isposinf(Tensor([2, 3, 143165577, 5],"int8"), )
paddle.isposinf(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.isposinf(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.isposinf(Tensor([134217729, 17],"float32"), )
paddle.isposinf(Tensor([71582789, 3, 4, 5],"int8"), )
paddle.isposinf(Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.isreal(Tensor([760567127, 3],"int64"), )
paddle.isreal(Tensor([134217729, 32],"int16"), )
paddle.isreal(Tensor([71303169, 32],"int32"), )
paddle.isreal(Tensor([1431655766, 3],"float16"), )
paddle.isreal(Tensor([71303169, 32],"bool"), )
paddle.isreal(Tensor([71303169, 32],"int64"), )
paddle.isreal(Tensor([760567127, 3],"int32"), )
paddle.isreal(Tensor([2, 2147483649],"int16"), )
paddle.isreal(Tensor([134217729, 32],"bfloat16"), )
paddle.isreal(Tensor([1431655766, 3],"bfloat16"), )
paddle.isreal(Tensor([71303169, 32],"float32"), )
paddle.isreal(Tensor([64, 67108865],"bfloat16"), )
paddle.isreal(Tensor([2, 1140850690],"bool"), )
paddle.isreal(Tensor([2, 1140850690],"float32"), )
paddle.isreal(Tensor([64, 35651585],"int64"), )
paddle.isreal(Tensor([2, 2147483649],"bfloat16"), )
paddle.isreal(Tensor([2, 1140850690],"int64"), )
paddle.isreal(Tensor([64, 67108865],"float16"), )
paddle.isreal(Tensor([64, 35651585],"int32"), )
paddle.isreal(Tensor([64, 35651585],"float32"), )
paddle.isreal(Tensor([760567127, 3],"bool"), )
paddle.isreal(Tensor([134217729, 32],"float16"), )
paddle.isreal(Tensor([64, 35651585],"bool"), )
paddle.isreal(Tensor([2, 1140850690],"int32"), )
paddle.isreal(Tensor([64, 67108865],"int16"), )
paddle.isreal(Tensor([2, 2147483649],"float16"), )
paddle.isreal(Tensor([1431655766, 3],"int16"), )
paddle.isreal(Tensor([760567127, 3],"float32"), )
paddle.kron(x=Tensor([1],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.kron(Tensor([2, 3],"float32"), Tensor([13, 175515491],"float32"), )
paddle.kron(x=Tensor([2, 2],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.kron(x=Tensor([2, 2],"float16"), y=Tensor([3, 3, 477218589],"float16"), )
paddle.kron(x=Tensor([2, 3],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.kron(x=Tensor([2, 3],"float32"), y=Tensor([760567127, 3],"float32"), )
paddle.kron(Tensor([2, 2],"float32"), Tensor([23, 99204408],"float32"), )
paddle.kron(x=Tensor([2, 2],"float16"), y=Tensor([3, 715827883, 2],"float16"), )
paddle.kron(x=Tensor([2, 3],"int32"), y=Tensor([760567127, 3],"int32"), )
paddle.kron(x=Tensor([2, 2],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.kron(x=Tensor([1],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.kron(x=Tensor([2, 3],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.kron(Tensor([2, 3],"float32"), Tensor([570425345, 4],"float32"), )
paddle.kron(x=Tensor([2, 3],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.kron(x=Tensor([2, 2],"float16"), y=Tensor([715827883, 3, 2],"float16"), )
paddle.kron(Tensor([2, 2],"float32"), Tensor([325957340, 7],"float32"), )
paddle.kthvalue(Tensor([2, 30, 71582789],"float16"), 244, -1, )
paddle.kthvalue(x=Tensor([3, 357913942, 4],"float16"), k=4, axis=2, keepdim=True, )
paddle.kthvalue(x=Tensor([3, 357913942, 4],"float16"), k=3, axis=0, )
paddle.kthvalue(Tensor([572663, 30, 250],"float16"), 244, -1, )
paddle.kthvalue(x=Tensor([285212673, 2, 4],"float32"), k=3, axis=0, )
paddle.kthvalue(Tensor([30, 1901418, 40],"float32"), k=1, axis=1, keepdim=True, )
paddle.kthvalue(Tensor([30, 200, 380284],"float32"), k=1, axis=1, keepdim=True, )
paddle.kthvalue(Tensor([2, 128, 16777217],"float16"), 2, -1, )
paddle.kthvalue(x=Tensor([3, 2, 380283564],"float32"), k=3, axis=0, )
paddle.kthvalue(Tensor([2, 30, 71582789],"float16"), 244, 2, )
paddle.kthvalue(Tensor([572663, 30, 250],"float16"), 244, 2, )
paddle.kthvalue(Tensor([30, 200, 380284],"float32"), k=1, axis=1, )
paddle.kthvalue(Tensor([2, 128, 16777217],"float16"), 2, 2, )
paddle.kthvalue(Tensor([2, 8589935, 250],"float16"), 244, 2, )
paddle.kthvalue(Tensor([285213, 200, 40],"float32"), k=2, )
paddle.kthvalue(Tensor([2, 214748365, 10],"float16"), 2, -1, )
paddle.kthvalue(x=Tensor([3, 190141782, 4],"float32"), k=3, axis=0, )
paddle.kthvalue(Tensor([2281701379],"float32"), k=2, )
paddle.kthvalue(x=Tensor([536870913, 2, 4],"float16"), k=4, axis=2, keepdim=False, )
paddle.kthvalue(x=Tensor([3, 2, 715827883],"float16"), k=4, axis=2, keepdim=False, )
paddle.kthvalue(x=Tensor([3, 2, 715827883],"float16"), k=3, axis=0, )
paddle.kthvalue(Tensor([2, 214748365, 10],"float16"), 2, 2, )
paddle.kthvalue(Tensor([3355444, 128, 10],"float16"), 2, -1, )
paddle.kthvalue(Tensor([3355444, 128, 10],"float16"), 2, 2, )
paddle.kthvalue(Tensor([30, 200, 380284],"float32"), k=2, )
paddle.kthvalue(Tensor([30, 1901418, 40],"float32"), k=1, axis=1, )
paddle.kthvalue(x=Tensor([3, 357913942, 4],"float16"), k=4, axis=2, keepdim=False, )
paddle.kthvalue(x=Tensor([536870913, 2, 4],"float16"), k=4, axis=2, keepdim=True, )
paddle.kthvalue(Tensor([285213, 200, 40],"float32"), k=1, axis=1, )
paddle.kthvalue(x=Tensor([3, 2, 715827883],"float16"), k=4, axis=2, keepdim=True, )
paddle.kthvalue(Tensor([30, 1901418, 40],"float32"), k=2, )
paddle.kthvalue(Tensor([2, 8589935, 250],"float16"), 244, -1, )
paddle.kthvalue(Tensor([2281701379],"float32"), 1, )
paddle.kthvalue(Tensor([285213, 200, 40],"float32"), k=1, axis=1, keepdim=True, )
paddle.kthvalue(x=Tensor([536870913, 2, 4],"float16"), k=3, axis=0, )
paddle.ldexp(Tensor([5, 143165577, 6],"float16"), Tensor([6],"int32"), )
paddle.ldexp(Tensor([114085069, 20, 1],"float32"), Tensor([1],"int32"), )
paddle.ldexp(Tensor([10, 228170138, 1],"float32"), Tensor([1],"int32"), )
paddle.ldexp(Tensor([119304648, 6, 6],"float16"), Tensor([6],"int32"), )
paddle.ldexp(Tensor([10, 20, 11408507],"float32"), Tensor([1],"int32"), )
paddle.ldexp(Tensor([10, 20, 11408507],"float32"), Tensor([11408507],"int32"), )
paddle.lerp(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), Tensor([3, 6, 3, 4, 2, 1],"float16"), Tensor([3, 6, 3, 4, 2, 1],"float16"), )
paddle.lerp(Tensor([11883862, 1, 8, 8],"float32"), Tensor([11883862, 3, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([4, 1],"float32"), Tensor([4, 570425345],"float32"), Tensor([4, 1],"float32"), )
paddle.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.0, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 28, 27163112],"float32"), 0.36, )
paddle.lerp(Tensor([2, 17825793, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([1431655766, 3],"float16"), Tensor([1, 3],"float16"), Tensor([1, 3],"float16"), )
paddle.lerp(Tensor([3, 8, 95070891],"float32"), Tensor([3, 8, 95070891],"float32"), 2.1, )
paddle.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=1.0, )
paddle.lerp(Tensor([1, 28, 28],"float32"), Tensor([2910334, 28, 28],"float32"), 1.0, )
paddle.lerp(Tensor([1, 3],"float16"), Tensor([1431655766, 3],"float16"), Tensor([1, 3],"float16"), )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 8, 95070891],"float32"), 0.3, )
paddle.lerp(Tensor([1, 3, 3],"float16"), Tensor([1, 3, 3],"float16"), Tensor([477218589, 3, 3],"float16"), )
paddle.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.0, )
paddle.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([214748365, 5, 4],"float16"), y=Tensor([214748365, 5, 4],"float16"), weight=0.5, )
paddle.lerp(Tensor([2, 2, 380283564],"float32"), Tensor([3, 2, 1, 380283564],"float32"), 0.5, )
paddle.lerp(Tensor([357913942, 3, 4],"float16"), Tensor([1, 3, 4],"float16"), Tensor([1, 3, 4],"float16"), )
paddle.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), weight=0.5, )
paddle.lerp(Tensor([2, 1],"float32"), Tensor([2, 1],"float32"), Tensor([2, 1140850690],"float32"), )
paddle.lerp(x=Tensor([4, 5, 214748365],"float16"), y=Tensor([4, 5, 214748365],"float16"), weight=0.5, )
paddle.lerp(Tensor([11883862, 1, 1, 1],"float32"), Tensor([11883862, 3, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2281701379],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1],"float32"), Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.0, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 27163112, 28],"float32"), 0.36, )
paddle.lerp(Tensor([2910334, 28, 28],"float32"), Tensor([2910334, 28, 28],"float32"), 1.2, )
paddle.lerp(Tensor([477218589, 3, 3],"float16"), Tensor([1, 3, 3],"float16"), Tensor([1, 3, 3],"float16"), )
paddle.lerp(Tensor([1, 3, 4],"float16"), Tensor([1, 3, 4],"float16"), Tensor([357913942, 3, 4],"float16"), )
paddle.lerp(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.lerp(Tensor([3, 28, 27163112],"float32"), Tensor([3, 28, 27163112],"float32"), 1.2, )
paddle.lerp(Tensor([2, 1140850690],"float32"), Tensor([2, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.lerp(Tensor([2, 3, 47535446, 8],"float32"), Tensor([2, 3, 47535446, 8],"float32"), 2.1, )
paddle.lerp(Tensor([4, 1, 6],"float16"), Tensor([4, 178956971, 6],"float16"), Tensor([4, 1, 6],"float16"), )
paddle.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([858993460, 5],"float16"), weight=0.5, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 8, 47535446],"float32"), 0.3, )
paddle.lerp(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), weight=0.5, )
paddle.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([1],"float16"), weight=0.2, )
paddle.lerp(Tensor([5, 1],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 1],"float16"), )
paddle.lerp(Tensor([3, 6, 3, 4, 1, 5],"float16"), Tensor([3, 6, 3, 4, 1, 5],"float16"), Tensor([3, 6, 3, 4, 3976822, 5],"float16"), )
paddle.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([1],"float16"), weight=0.2, )
paddle.lerp(Tensor([7, 1],"float16"), Tensor([7, 1],"float16"), Tensor([7, 613566757],"float16"), )
paddle.lerp(Tensor([5, 214748365, 4],"float16"), Tensor([5, 1, 4],"float16"), Tensor([5, 1, 4],"float16"), )
paddle.lerp(Tensor([4, 570425345],"float32"), Tensor([4, 1],"float32"), Tensor([4, 1],"float32"), )
paddle.lerp(Tensor([1, 3, 4],"float16"), Tensor([357913942, 3, 4],"float16"), Tensor([1, 3, 4],"float16"), )
paddle.lerp(Tensor([1, 8, 8],"float32"), Tensor([35651585, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([253522376, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), )
paddle.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.0, )
paddle.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=1.0, )
paddle.lerp(Tensor([5, 858993460],"float16"), Tensor([5, 1],"float16"), Tensor([5, 1],"float16"), )
paddle.lerp(Tensor([4, 7, 1],"float16"), Tensor([4, 7, 1],"float16"), Tensor([4, 7, 153391690],"float16"), )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 47535446, 8],"float32"), 0.3, )
paddle.lerp(Tensor([3, 95070891, 8],"float32"), Tensor([3, 95070891, 8],"float32"), 2.1, )
paddle.lerp(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), Tensor([3, 6, 3, 4, 1, 5],"float16"), Tensor([3, 6, 3, 4, 1, 5],"float16"), )
paddle.lerp(Tensor([4, 1],"float16"), Tensor([4, 1],"float16"), Tensor([4, 1073741825],"float16"), )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([2910334, 28, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1],"float16"), Tensor([1],"float16"), Tensor([4294967297],"float16"), )
paddle.lerp(Tensor([300, 7605672],"float32"), Tensor([300, 7605672],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([4, 1],"float32"), Tensor([4, 1],"float32"), Tensor([4, 570425345],"float32"), )
paddle.lerp(Tensor([1],"float16"), Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.lerp(Tensor([5, 1, 4],"float16"), Tensor([5, 1, 4],"float16"), Tensor([5, 214748365, 4],"float16"), )
paddle.lerp(Tensor([1, 3, 3],"float32"), Tensor([253522376, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), )
paddle.lerp(Tensor([2, 2, 5],"float32"), Tensor([228170138, 2, 1, 5],"float32"), 0.5, )
paddle.lerp(Tensor([3, 6, 3, 1, 2, 5],"float16"), Tensor([3, 6, 3, 7953644, 2, 5],"float16"), Tensor([3, 6, 3, 1, 2, 5],"float16"), )
paddle.lerp(Tensor([4294967297],"float16"), Tensor([1],"float16"), Tensor([1],"float16"), )
paddle.lerp(x=Tensor([4, 268435457, 4],"float16"), y=Tensor([4, 268435457, 4],"float16"), weight=0.5, )
paddle.lerp(Tensor([4, 7, 1],"float16"), Tensor([4, 7, 153391690],"float16"), Tensor([4, 7, 1],"float16"), )
paddle.lerp(Tensor([4, 1073741825],"float16"), Tensor([4, 1],"float16"), Tensor([4, 1],"float16"), )
paddle.lerp(Tensor([2, 2, 570425345],"float32"), Tensor([3, 2, 1, 570425345],"float32"), 0.5, )
paddle.lerp(Tensor([4, 1],"float16"), Tensor([4, 1073741825],"float16"), Tensor([4, 1],"float16"), )
paddle.lerp(Tensor([1, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), Tensor([253522376, 3, 3],"float32"), )
paddle.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=1.0, )
paddle.lerp(Tensor([3, 6, 3, 1, 2, 5],"float16"), Tensor([3, 6, 3, 1, 2, 5],"float16"), Tensor([3, 6, 3, 7953644, 2, 5],"float16"), )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 95070891, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([4, 1, 6],"float16"), Tensor([4, 1, 6],"float16"), Tensor([4, 178956971, 6],"float16"), )
paddle.lerp(Tensor([11883862, 3, 8, 8],"float32"), Tensor([11883862, 3, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([2, 5],"float32"), Tensor([2, 2, 5],"float32"), Tensor([114085069, 2, 2, 5],"float32"), )
paddle.lerp(Tensor([7, 1],"float16"), Tensor([7, 613566757],"float16"), Tensor([7, 1],"float16"), )
paddle.lerp(Tensor([2910334, 28, 28],"float32"), Tensor([2910334, 28, 28],"float32"), 1.0, )
paddle.lerp(Tensor([3, 6, 3, 4, 2, 1],"float16"), Tensor([3, 6, 3, 4, 2, 1],"float16"), Tensor([3, 6, 3, 4, 2, 9942054],"float16"), )
paddle.lerp(Tensor([2, 1],"float32"), Tensor([2, 1140850690],"float32"), Tensor([2, 1],"float32"), )
paddle.lerp(Tensor([3, 27163112, 28],"float32"), Tensor([3, 27163112, 28],"float32"), 1.2, )
paddle.lerp(Tensor([1, 3, 3],"float16"), Tensor([477218589, 3, 3],"float16"), Tensor([1, 3, 3],"float16"), )
paddle.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.5, )
paddle.lerp(Tensor([1, 3],"float16"), Tensor([1, 3],"float16"), Tensor([1431655766, 3],"float16"), )
paddle.lerp(Tensor([5, 1],"float16"), Tensor([5, 1],"float16"), Tensor([5, 858993460],"float16"), )
paddle.lerp(Tensor([7, 613566757],"float16"), Tensor([7, 1],"float16"), Tensor([7, 1],"float16"), )
paddle.lerp(Tensor([1114113, 2048],"float32"), Tensor([1114113, 2048],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), Tensor([3, 6, 3, 1, 2, 5],"float16"), Tensor([3, 6, 3, 1, 2, 5],"float16"), )
paddle.lerp(Tensor([3, 6, 3, 4, 2, 1],"float16"), Tensor([3, 6, 3, 4, 2, 9942054],"float16"), Tensor([3, 6, 3, 4, 2, 1],"float16"), )
paddle.lerp(Tensor([5, 1, 4],"float16"), Tensor([5, 214748365, 4],"float16"), Tensor([5, 1, 4],"float16"), )
paddle.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=1.0, )
paddle.lerp(Tensor([35651585, 8, 8],"float32"), Tensor([35651585, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([10, 1, 9126806, 5, 5],"float32"), Tensor([10, 5, 1, 5, 5],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([3, 6, 3, 4, 1, 5],"float16"), Tensor([3, 6, 3, 4, 3976822, 5],"float16"), Tensor([3, 6, 3, 4, 1, 5],"float16"), )
paddle.lerp(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), weight=0.5, )
paddle.less(Tensor([2228225, 1024],"float32"), Tensor([2228225, 1024],"float32"), )
paddle.less(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.less(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.less(x=Tensor([2281701379],"int64"), y=Tensor([2281701379],"int64"), )
paddle.less(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.less(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.less_equal(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"float16"), )
paddle.less_equal(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.less_equal(Tensor([4, 3, 190141782],"float64"), Tensor([4, 3, 190141782],"float32"), )
paddle.less_equal(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.less_equal(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.less_equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float64"), )
paddle.less_equal(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.less_equal(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.less_equal(Tensor([380283564, 3, 2],"float64"), Tensor([380283564, 3, 2],"float32"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.less_equal(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float64"), )
paddle.less_equal(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less_equal(x=Tensor([1, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.less_equal(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.less_equal(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.less_equal(x=Tensor([2281701379],"int64"), y=Tensor([2281701379],"int64"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float64"), )
paddle.less_equal(Tensor([4, 536870913, 2],"float64"), Tensor([4, 536870913, 2],"float16"), )
paddle.less_equal(Tensor([2281701379],"int32"), Tensor([1],"int32"), )
paddle.less_equal(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.less_equal(x=Tensor([715827883, 2, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.less_equal(x=Tensor([1, 1431655766, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.less_equal(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.less_equal(x=Tensor([1, 2, 1, 2147483649],"float16"), y=Tensor([1, 2, 2147483649],"float16"), )
paddle.less_equal(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.less_equal(Tensor([715827883, 3, 2],"float64"), Tensor([715827883, 3, 2],"float16"), )
paddle.less_equal(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.less_equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.less_equal(Tensor([4, 285212673, 2],"float64"), Tensor([4, 285212673, 2],"float32"), )
paddle.less_equal(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less_equal(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.less_equal(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.less_equal(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float64"), )
paddle.less_equal(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), )
paddle.less_equal(Tensor([1],"int32"), Tensor([2281701379],"int32"), )
paddle.less_equal(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.less_equal(x=Tensor([3, 760567127],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float64"), Tensor([4, 3, 357913942],"float16"), )
paddle.less_equal(x=Tensor([1, 2, 1, 3],"float16"), y=Tensor([1, 1431655766, 3],"float16"), )
paddle.less_equal(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.less_equal(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.less_equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float32"), )
paddle.less_equal(x=Tensor([760567127, 3],"float32"), y=Tensor([760567127, 3],"float32"), )
paddle.less_equal(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float64"), )
paddle.less_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.less_than(Tensor([2281701379],"int64"), Tensor([1],"int64"), )
paddle.less_than(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.less_than(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less_than(x=Tensor([1, 2, 1, 2147483649],"float16"), y=Tensor([1, 2, 2147483649],"float16"), )
paddle.less_than(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.less_than(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.less_than(Tensor([69633, 128, 256],"float32"), Tensor([69633, 128, 256],"float32"), )
paddle.less_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float64"), )
paddle.less_than(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float64"), )
paddle.less_than(Tensor([1, 17825793, 128],"float32"), Tensor([1, 17825793, 128],"float32"), )
paddle.less_than(Tensor([1],"int64"), Tensor([2281701379],"int64"), )
paddle.less_than(Tensor([1, 8912897, 256],"float32"), Tensor([1, 8912897, 256],"float32"), )
paddle.less_than(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.less_than(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.less_than(Tensor([380283564, 3, 2],"float64"), Tensor([380283564, 3, 2],"float32"), )
paddle.less_than(Tensor([139265, 128, 128],"int64"), Tensor([139265, 128, 128],"int64"), )
paddle.less_than(x=Tensor([760567127, 3],"float32"), y=Tensor([760567127, 3],"float32"), )
paddle.less_than(x=Tensor([1, 1431655766, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.less_than(Tensor([139265, 128, 128],"int64"), Tensor([1, 128, 128],"int64"), )
paddle.less_than(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.less_than(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.less_than(x=Tensor([2281701379],"int64"), y=Tensor([2281701379],"int64"), )
paddle.less_than(Tensor([8, 1, 2228225, 128],"float32"), Tensor([8, 1, 2228225, 128],"float32"), )
paddle.less_than(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.less_than(Tensor([139265, 128, 128],"float32"), Tensor([139265, 128, 128],"float32"), )
paddle.less_than(Tensor([4, 536870913, 2],"float64"), Tensor([4, 536870913, 2],"float16"), )
paddle.less_than(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.less_than(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float32"), )
paddle.less_than(Tensor([8, 17409, 128, 128],"float32"), Tensor([8, 1, 128, 128],"float32"), )
paddle.less_than(Tensor([69633, 128, 256],"float32"), Tensor([1, 128, 256],"float32"), )
paddle.less_than(Tensor([1, 128, 256],"float32"), Tensor([69633, 128, 256],"float32"), )
paddle.less_than(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.less_than(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.less_than(Tensor([8, 1, 128, 2228225],"float32"), Tensor([8, 1, 128, 2228225],"float32"), )
paddle.less_than(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float64"), )
paddle.less_than(Tensor([139265, 128, 128],"float32"), Tensor([1, 128, 128],"float32"), )
paddle.less_than(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.less_than(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float64"), )
paddle.less_than(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.less_than(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float64"), )
paddle.less_than(Tensor([1, 128, 128],"float32"), Tensor([139265, 128, 128],"float32"), )
paddle.less_than(Tensor([715827883, 3, 2],"float64"), Tensor([715827883, 3, 2],"float16"), )
paddle.less_than(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.less_than(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.less_than(Tensor([8, 1, 128, 128],"float32"), Tensor([8, 17409, 128, 128],"float32"), )
paddle.less_than(Tensor([1, 128, 17825793],"int64"), Tensor([1, 128, 17825793],"int64"), )
paddle.less_than(Tensor([1, 17825793, 128],"int64"), Tensor([1, 17825793, 128],"int64"), )
paddle.less_than(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"float16"), )
paddle.less_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.less_than(Tensor([139265, 1, 128, 128],"float32"), Tensor([139265, 1, 128, 128],"float32"), )
paddle.less_than(Tensor([69633, 128, 256],"int64"), Tensor([69633, 128, 256],"int64"), )
paddle.less_than(Tensor([1, 128, 128],"int64"), Tensor([139265, 128, 128],"int64"), )
paddle.less_than(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.less_than(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), )
paddle.less_than(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.less_than(x=Tensor([3, 760567127],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.less_than(x=Tensor([715827883, 2, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.less_than(Tensor([1, 8912897, 256],"int64"), Tensor([1, 8912897, 256],"int64"), )
paddle.less_than(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.less_than(x=Tensor([1, 2, 1, 3],"float16"), y=Tensor([1, 1431655766, 3],"float16"), )
paddle.less_than(Tensor([4, 3, 190141782],"float64"), Tensor([4, 3, 190141782],"float32"), )
paddle.less_than(Tensor([1, 128, 256],"int64"), Tensor([69633, 128, 256],"int64"), )
paddle.less_than(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.less_than(x=Tensor([1, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.less_than(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.less_than(Tensor([1, 128, 17825793],"float32"), Tensor([1, 128, 17825793],"float32"), )
paddle.less_than(Tensor([8, 17409, 128, 128],"float32"), Tensor([8, 17409, 128, 128],"float32"), )
paddle.less_than(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.less_than(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.less_than(Tensor([69633, 128, 256],"int64"), Tensor([1, 128, 256],"int64"), )
paddle.less_than(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.less_than(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.less_than(Tensor([4, 285212673, 2],"float64"), Tensor([4, 285212673, 2],"float32"), )
paddle.less_than(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.lgamma(Tensor([10, 1, 228170138],"float32"), )
paddle.lgamma(Tensor([10, 20, 21474837],"float16"), )
paddle.lgamma(Tensor([10, 10, 21474837, 2],"float16"), )
paddle.lgamma(Tensor([21474837, 10, 10, 2],"float16"), )
paddle.lgamma(Tensor([1431655766, 3],"float16"), )
paddle.lgamma(Tensor([10, 10, 42949673],"float16"), )
paddle.lgamma(x=Tensor([1431655766, 3],"float16"), )
paddle.lgamma(x=Tensor([760567127, 3],"float32"), )
paddle.lgamma(Tensor([91, 47197443],"float16"), )
paddle.lgamma(Tensor([114085069, 20, 1],"float32"), )
paddle.lgamma(Tensor([570425345, 4],"float32"), )
paddle.lgamma(Tensor([2, 2147483649],"float16"), )
paddle.lgamma(Tensor([4294967297, 1, 1],"float16"), )
paddle.lgamma(Tensor([1, 2, 1140850690],"float32"), )
paddle.lgamma(Tensor([570425345, 2, 2],"float32"), )
paddle.lgamma(Tensor([1, 2281701379],"float32"), )
paddle.lgamma(x=Tensor([715827883, 6],"float16"), )
paddle.lgamma(Tensor([7, 325957340],"float32"), )
paddle.lgamma(Tensor([42949673, 10, 10],"float16"), )
paddle.lgamma(Tensor([2, 1, 1140850690],"float32"), )
paddle.lgamma(Tensor([1140850690, 1, 2],"float32"), )
paddle.lgamma(Tensor([42949673, 100],"float16"), )
paddle.lgamma(Tensor([114, 37675152],"float16"), )
paddle.lgamma(Tensor([190141782, 12],"float32"), )
paddle.lgamma(Tensor([148, 15416902, 1],"float32"), )
paddle.lgamma(Tensor([400, 10737419],"float16"), )
paddle.lgamma(Tensor([2, 570425345, 2],"float32"), )
paddle.lgamma(Tensor([10, 429496730],"float16"), )
paddle.lgamma(Tensor([2281701379, 1, 1],"float32"), )
paddle.lgamma(Tensor([10, 228170138, 1],"float32"), )
paddle.lgamma(Tensor([4, 570425345],"float32"), )
paddle.lgamma(Tensor([858993460, 5],"float16"), )
paddle.lgamma(Tensor([429496730, 5, 2],"float16"), )
paddle.lgamma(Tensor([10, 20, 11408507],"float32"), )
paddle.lgamma(Tensor([100, 42949673],"float16"), )
paddle.lgamma(Tensor([2, 2, 570425345],"float32"), )
paddle.lgamma(Tensor([2, 1140850690],"float32"), )
paddle.lgamma(Tensor([57042535, 20, 2],"float32"), )
paddle.lgamma(Tensor([9, 1, 477218589],"float16"), )
paddle.lgamma(x=Tensor([119304648, 6, 6],"float16"), )
paddle.lgamma(Tensor([2, 5, 429496730],"float16"), )
paddle.lgamma(Tensor([1948, 1171305],"float32"), )
paddle.lgamma(x=Tensor([380283564, 6],"float32"), )
paddle.lgamma(Tensor([10, 228170138, 1, 1],"float32"), )
paddle.lgamma(Tensor([10, 1, 228170138, 1],"float32"), )
paddle.lgamma(Tensor([10, 1, 1, 228170138],"float32"), )
paddle.lgamma(Tensor([760567127, 3],"float32"), )
paddle.lgamma(Tensor([1140850690, 2],"float32"), )
paddle.lgamma(Tensor([10, 228170138],"float32"), )
paddle.lgamma(Tensor([2, 1073741825, 2],"float16"), )
paddle.lgamma(Tensor([10, 10, 10, 4294968],"float16"), )
paddle.lgamma(Tensor([2281701379],"float32"), )
paddle.lgamma(Tensor([2281701379, 1],"float32"), )
paddle.lgamma(Tensor([10, 21474837, 10, 2],"float16"), )
paddle.lgamma(Tensor([10, 114085069, 2],"float32"), )
paddle.lgamma(x=Tensor([6, 380283564],"float32"), )
paddle.lgamma(Tensor([107374183, 20, 2],"float16"), )
paddle.lgamma(Tensor([10, 42949673, 10],"float16"), )
paddle.lgamma(Tensor([9, 477218589, 1],"float16"), )
paddle.lgamma(x=Tensor([3, 1431655766],"float16"), )
paddle.lgamma(Tensor([2147483649, 2],"float16"), )
paddle.lgamma(x=Tensor([6, 119304648, 6],"float16"), )
paddle.lgamma(Tensor([148, 1, 15416902],"float32"), )
paddle.lgamma(Tensor([10, 214748365, 2],"float16"), )
paddle.lgamma(x=Tensor([3, 760567127],"float32"), )
paddle.lgamma(Tensor([1, 1140850690, 2],"float32"), )
paddle.lgamma(Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.lgamma(x=Tensor([6, 715827883],"float16"), )
paddle.lgamma(x=Tensor([6, 6, 119304648],"float16"), )
paddle.lgamma(Tensor([4294967297],"float16"), )
paddle.lgamma(Tensor([4294967297, 1],"float16"), )
paddle.linalg.cholesky(Tensor([1431655766, 3],"float16"), )
paddle.linalg.cholesky(Tensor([1140850690, 2],"float32"), )
paddle.linalg.cholesky(Tensor([2147483649, 2],"float16"), )
paddle.linalg.cholesky(Tensor([2, 2147483649],"float16"), )
paddle.linalg.cholesky(Tensor([3, 1431655766],"float16"), )
paddle.linalg.cholesky(Tensor([2, 1140850690],"float32"), )
paddle.linalg.cond(Tensor([4, 57042535, 10],"float32"), -2, )
paddle.linalg.cond(Tensor([4, 2, 285212673],"float32"), 2, )
paddle.linalg.cond(Tensor([4, 57042535, 10],"float32"), None, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), -1, )
paddle.linalg.cond(Tensor([3, 5, 4, 38028357],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), -1, )
paddle.linalg.cond(Tensor([4, 2, 285212673],"float32"), None, )
paddle.linalg.cond(Tensor([2, 4, 95070891, 3],"float32"), -2, )
paddle.linalg.cond(Tensor([3, 5, 4, 38028357],"float32"), None, )
paddle.linalg.cond(Tensor([3, 5, 152113426, 1],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), math.inf, )
paddle.linalg.cond(Tensor([2, 4, 3, 95070891],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 4, 95070891, 3],"float32"), None, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), "fro", )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), "fro", )
paddle.linalg.cond(Tensor([142606337, 4, 4],"float32"), p="fro", )
paddle.linalg.cond(Tensor([4, 57042535, 10],"float32"), 2, )
paddle.linalg.cond(Tensor([3, 5, 4, 38028357],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), 1, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), math.inf, )
paddle.linalg.cond(Tensor([4, 2, 285212673],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([3, 5, 152113426, 1],"float32"), None, )
paddle.linalg.cond(Tensor([2, 4, 95070891, 3],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 4, 3, 95070891],"float32"), None, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), 1, )
paddle.linalg.cond(Tensor([3, 5, 152113426, 1],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 4, 3, 95070891],"float32"), 2, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), -math.inf, )
paddle.linalg.corrcoef(Tensor([4, 570425345],"float32"), )
paddle.linalg.corrcoef(Tensor([4, 1073741825],"float16"), )
paddle.linalg.corrcoef(Tensor([858993460, 5],"float16"), rowvar=False, )
paddle.linalg.corrcoef(Tensor([456340276, 5],"float32"), rowvar=False, )
paddle.linalg.cov(Tensor([3, 760567127],"float32"), )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=Tensor([2281701379],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([20, 214748365],"float16"), rowvar=True, ddof=True, fweights=Tensor([10],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([10],"float16"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([4294967297],"float16"), )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([2281701379],"int32"), )
paddle.linalg.cov(Tensor([20, 214748365],"float16"), rowvar=True, ddof=False, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([2281701379],"int32"), aweights=None, )
paddle.linalg.cov(x=Tensor([4, 1073741825],"float16"), )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([2281701379],"int32"), )
paddle.linalg.cov(Tensor([20, 214748365],"float16"), rowvar=True, ddof=True, fweights=Tensor([214748365],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([429496730, 10],"float16"), rowvar=False, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=Tensor([2281701379],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.cov(Tensor([20, 214748365],"float16"), rowvar=True, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([2281701379],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.cov(x=Tensor([4, 570425345],"float32"), )
paddle.linalg.cov(x=Tensor([4, 1073741825],"float16"), rowvar=True, ddof=True, )
paddle.linalg.cov(x=Tensor([4, 1073741825],"float16"), rowvar=True, )
paddle.linalg.cov(Tensor([20, 10],"float16"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([4294967297],"float16"), )
paddle.linalg.det(Tensor([253522376, 3, 3],"float32"), )
paddle.linalg.det(Tensor([3, 30422686, 5, 5],"float32"), )
paddle.linalg.det(Tensor([30422686, 3, 5, 5],"float32"), )
paddle.linalg.lu(Tensor([3, 5, 30422686, 5],"float32"), )
paddle.linalg.lu(Tensor([3, 5, 5, 30422686],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([4, 190141782, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 3, 380283564],"float32"), )
paddle.linalg.lu(Tensor([2, 5, 45634028, 5],"float32"), )
paddle.linalg.lu(Tensor([2, 5, 3, 76056713],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([760567127, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([5, 456340276],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([456340276, 5],"float32"), )
paddle.linalg.lu(Tensor([30422686, 5, 5, 3],"float32"), )
paddle.linalg.lu(Tensor([4, 5, 5, 22817014],"float32"), )
paddle.linalg.lu(Tensor([760567127, 3],"float32"), get_infos=False, )
paddle.linalg.lu(Tensor([4, 5, 5, 22817014],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 5, 3, 76056713],"float32"), )
paddle.linalg.lu(Tensor([2, 228170138, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 5, 30422686, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 228170138, 5],"float32"), )
paddle.linalg.lu(Tensor([3, 760567127],"float32"), )
paddle.linalg.lu(Tensor([3, 5, 152113426],"float32"), )
paddle.linalg.lu(Tensor([760567127, 3],"float32"), )
paddle.linalg.lu(Tensor([18253612, 5, 5, 5],"float32"), )
paddle.linalg.lu(Tensor([3, 760567127],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([456340276, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 152113426, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([4, 5, 114085069],"float32"), )
paddle.linalg.lu(Tensor([30422686, 5, 5, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 5, 45634028, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([5, 456340276],"float32"), )
paddle.linalg.lu(Tensor([4, 5, 38028357, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([2, 3, 380283564],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([152113426, 5, 3],"float32"), )
paddle.linalg.lu(Tensor([4, 190141782, 3],"float32"), )
paddle.linalg.lu(Tensor([4, 5, 38028357, 3],"float32"), )
paddle.linalg.lu(Tensor([4, 5, 114085069],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 152113426, 5],"float32"), )
paddle.linalg.lu(Tensor([3, 5, 5, 30422686],"float32"), )
paddle.linalg.lu(Tensor([3, 760567127],"float32"), get_infos=False, )
paddle.linalg.lu(Tensor([152113426, 3, 5],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([152113426, 5, 3],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu(Tensor([3, 5, 152113426],"float32"), pivot=True, get_infos=True, )
paddle.linalg.lu_unpack(Tensor([5, 3],"float64"), Tensor([2281701379],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 5, 22817014],"float32"), Tensor([4, 5, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 456340276],"float32"), Tensor([3],"int32"), )
paddle.linalg.lu_unpack(Tensor([2, 3, 5],"float32"), Tensor([2, 1140850690],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 3, 3, 3],"float64"), Tensor([5, 3, 152113426],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5, 5, 5],"float64"), Tensor([3, 5, 152113426],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5, 152113426],"float32"), Tensor([3, 5],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 5, 3],"float32"), Tensor([4, 5, 114085069],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 3],"float64"), Tensor([4, 570425345],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 760567127],"float32"), Tensor([3],"int32"), )
paddle.linalg.lu_unpack(Tensor([2, 3, 380283564],"float32"), Tensor([2, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 3],"float32"), Tensor([4, 570425345],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5, 5, 30422686],"float32"), Tensor([3, 5, 5],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 456340276],"float32"), Tensor([5],"int32"), )
paddle.linalg.lu_unpack(Tensor([5, 5],"float32"), Tensor([2281701379],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 3],"float32"), Tensor([2281701379],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 3],"float64"), Tensor([2281701379],"int32"), )
paddle.linalg.lu_unpack(Tensor([2, 5, 3, 76056713],"float32"), Tensor([2, 5, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([4, 5, 114085069],"float32"), Tensor([4, 3],"int32"), )
paddle.linalg.lu_unpack(Tensor([3, 5],"float64"), Tensor([2281701379],"int32"), )
paddle.linalg.matrix_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_rank(Tensor([3, 4, 190141782],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([3, 4, 31690297, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 152113426, 5],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 152113426, 5],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 38028357],"float32"), None, False, Tensor([3, 4],"float32"), Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 31690297, 6],"float32"), None, False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 38028357],"float32"), None, False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 38028357],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 190141782],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 31690297, 6],"float32"), None, False, Tensor([3, 4],"float32"), Tensor([3, 4],"float32"), )
paddle.linalg.matrix_transpose(Tensor([2, 285212673, 4],"float32"), )
paddle.linalg.matrix_transpose(Tensor([2, 3, 380283564],"float32"), )
paddle.linalg.matrix_transpose(Tensor([190141782, 3, 4],"float32"), )
paddle.linalg.multi_dot(list[Tensor([2, 1073741825],"float16"),Tensor([1073741825, 4],"float16"),Tensor([4, 3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([4, 4],"float16"),Tensor([4, 1073741825],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([715827883, 6],"float16"),Tensor([6, 3],"float16"),Tensor([3, 4],"float16"),Tensor([4, 5],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 1073741825],"float16"),Tensor([1073741825, 4],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 1431655766],"float16"),Tensor([1431655766, 3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 1431655766],"float16"),Tensor([1431655766, 3],"float16"),Tensor([3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 4],"float16"),Tensor([4, 1073741825],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 8],"float32"),Tensor([8, 285212673],"float32"),], )
paddle.linalg.multi_dot(list[Tensor([6],"float16"),Tensor([6, 715827883],"float16"),Tensor([715827883],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([3, 4],"float16"),Tensor([4, 1073741825],"float16"),Tensor([1073741825, 2],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([1073741825],"float16"),Tensor([1073741825, 4],"float16"),Tensor([4, 2],"float16"),Tensor([2],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 10],"float16"),Tensor([10, 429496730],"float16"),Tensor([429496730, 3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([3, 1431655766],"float16"),Tensor([1431655766, 3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([456340276],"float32"),Tensor([456340276, 5],"float32"),Tensor([5],"float32"),], )
paddle.linalg.multi_dot(list[Tensor([715827883, 6],"float16"),Tensor([6],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([1431655766],"float16"),Tensor([1431655766, 3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([3, 536870913],"float16"),Tensor([536870913, 8],"float16"),Tensor([8, 2],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([285212673, 8],"float32"),Tensor([8, 4],"float32"),], )
paddle.linalg.multi_dot(list[Tensor([138547333],"float16"),Tensor([138547333, 31],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([4],"float16"),Tensor([4, 1073741825],"float16"),Tensor([1073741825, 2],"float16"),Tensor([2],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([1431655766],"float16"),Tensor([1431655766, 3],"float16"),Tensor([3, 3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([1431655766, 3],"float16"),Tensor([3, 2],"float16"),Tensor([2, 3],"float16"),Tensor([3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([858993460],"float16"),Tensor([858993460, 5],"float16"),Tensor([5, 2],"float16"),Tensor([2],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([1073741825, 4],"float16"),Tensor([4, 3],"float16"),Tensor([3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([4],"float16"),Tensor([4, 1073741825],"float16"),Tensor([1073741825, 4],"float16"),Tensor([4, 5],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([1073741825, 4],"float16"),Tensor([4, 8],"float16"),Tensor([8, 2],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([8, 536870913],"float16"),Tensor([536870913, 3],"float16"),Tensor([3, 4],"float16"),Tensor([4, 5],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 570425345],"float32"),Tensor([570425345, 4],"float32"),], )
paddle.linalg.multi_dot(list[Tensor([4],"float32"),Tensor([4, 570425345],"float32"),Tensor([570425345],"float32"),], )
paddle.linalg.multi_dot(list[Tensor([2, 8],"float16"),Tensor([8, 536870913],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([1073741825, 4],"float16"),Tensor([4, 3],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([3, 4],"float16"),Tensor([4, 8],"float16"),Tensor([8, 536870913],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([3, 4],"float16"),Tensor([4, 1073741825],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([2, 10],"float16"),Tensor([10, 4],"float16"),Tensor([4, 1073741825],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([1073741825],"float16"),Tensor([1073741825, 4],"float16"),Tensor([4],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([536870913, 8],"float16"),Tensor([8, 4],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([429496730, 10],"float16"),Tensor([10, 4],"float16"),Tensor([4, 3],"float16"),], )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=list[1,], p=math.inf, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=1, p=0, )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), math.inf, 2, True, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=None, )
paddle.linalg.norm(Tensor([380283564, 6],"float32"), p=-math.inf, axis=list[0,1,], )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=list[1,], p=math.inf, )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=2, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=list[1,2,], p=math.inf, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=1, p=-math.inf, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=1, p=math.inf, )
paddle.linalg.norm(Tensor([300, 1901418, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([50, 4294968, 20],"float16"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([2, 107374183, 4, 5],"float16"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([8550, 1, 266866],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([3, 253522376, 3],"float32"), 0.0, 2, True, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), )
paddle.linalg.norm(Tensor([2281701379],"float32"), 2, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=list[1,2,], p=1, )
paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([2281701379],"float32"), p="fro", axis=0, )
paddle.linalg.norm(Tensor([91268056, 5, 5],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([1140850690, 2],"float32"), 2.0, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=None, keepdim=True, )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), -math.inf, 2, True, )
paddle.linalg.norm(Tensor([380283564, 6],"float32"), p=1, axis=list[0,1,], )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=list[1,2,], p=1, )
paddle.linalg.norm(Tensor([6380, 89409, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([71582789, 3, 4, 5],"float16"), 2.0, 1, False, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), axis=None, p="fro", )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), 2.0, 2, True, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([50, 50, 1717987],"float16"), p=2.0, axis=-1, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=False, )
paddle.linalg.norm(Tensor([8550, 66717, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([4294967297],"float16"), axis=None, p="fro", )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=list[1,], p=math.inf, )
paddle.linalg.norm(Tensor([2, 3, 143165577, 5],"float16"), 2.0, 1, False, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=1, p=math.inf, )
paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), 2.0, -1, False, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([2281701379],"float32"), 2.0, )
paddle.linalg.norm(x=Tensor([1073741825, 4],"float16"), p=1, axis=1, keepdim=False, )
paddle.linalg.norm(Tensor([3, 253522376, 3],"float32"), math.inf, 2, True, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([900, 1, 2535224],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([380283564, 6],"float32"), )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([4, 570425345],"float32"), )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=1, p=0, )
paddle.linalg.norm(Tensor([4294968, 50, 20],"float16"), p=2.0, axis=-1, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=list[1,2,], p=math.inf, )
paddle.linalg.norm(Tensor([1, 2281701379],"float32"), 2.0, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,2,], p=1, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=list[0,2,], p=1, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), math.inf, 2, True, )
paddle.linalg.qr(Tensor([4, 5, 5, 22817014],"float32"), mode="complete", )
paddle.linalg.qr(Tensor([2, 3, 380283564],"float32"), mode="complete", )
paddle.linalg.qr(Tensor([3, 5, 152113426],"float32"), )
paddle.linalg.qr(Tensor([3, 152113426, 5],"float32"), mode="r", )
paddle.linalg.qr(Tensor([3, 152113426, 5],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([4, 5, 5, 22817014],"float32"), mode="r", )
paddle.linalg.qr(Tensor([4, 190141782, 3],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([3, 5, 5, 30422686],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([3, 5, 5, 30422686],"float32"), mode="complete", )
paddle.linalg.qr(Tensor([2, 228170138, 5],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([2, 5, 3, 76056713],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([3, 126761188, 6],"float32"), )
paddle.linalg.qr(Tensor([3, 5, 5, 30422686],"float32"), mode="r", )
paddle.linalg.qr(Tensor([2, 5, 3, 76056713],"float32"), mode="r", )
paddle.linalg.qr(Tensor([3, 5, 152113426],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([2, 5, 45634028, 5],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([2, 3, 380283564],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([4, 5, 38028357, 3],"float32"), mode="r", )
paddle.linalg.qr(Tensor([4, 190141782, 3],"float32"), mode="r", )
paddle.linalg.qr(Tensor([3, 5, 30422686, 5],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([4, 5, 114085069],"float32"), mode="r", )
paddle.linalg.qr(Tensor([4, 5, 38028357, 3],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([4, 5, 114085069],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([2, 5, 45634028, 5],"float32"), mode="r", )
paddle.linalg.qr(Tensor([4, 5, 114085069],"float32"), mode="complete", )
paddle.linalg.qr(Tensor([3, 5, 30422686, 5],"float32"), mode="r", )
paddle.linalg.qr(Tensor([2, 228170138, 5],"float32"), mode="r", )
paddle.linalg.qr(Tensor([4, 5, 5, 22817014],"float32"), mode="reduced", )
paddle.linalg.qr(Tensor([2, 3, 380283564],"float32"), mode="r", )
paddle.linalg.qr(Tensor([3, 5, 152113426],"float32"), mode="r", )
paddle.linalg.qr(Tensor([3, 5, 152113426],"float32"), mode="complete", )
paddle.linalg.qr(Tensor([2, 5, 3, 76056713],"float32"), mode="complete", )
paddle.linalg.slogdet(Tensor([3, 30422686, 5, 5],"float32"), )
paddle.linalg.slogdet(Tensor([30422686, 3, 5, 5],"float32"), )
paddle.linalg.slogdet(Tensor([253522376, 3, 3],"float32"), )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([10, 228170138],"float32"), )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([228170138, 10],"float32"), left=False, )
paddle.linalg.triangular_solve(x=Tensor([3, 3],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.linalg.triangular_solve(Tensor([1, 2, 2],"float32"), Tensor([1140850690, 2, 1],"float32"), upper=False, )
paddle.linalg.triangular_solve(Tensor([2, 2],"float32"), Tensor([2, 1140850690],"float32"), upper=False, )
paddle.linalg.triangular_solve(Tensor([570425345, 2, 2],"float32"), Tensor([1, 2, 1],"float32"), upper=False, )
paddle.linalg.triangular_solve(Tensor([1, 2, 2],"float32"), Tensor([1, 2, 1140850690],"float32"), upper=False, )
paddle.linalg.triangular_solve(Tensor([570425345, 2, 2],"float32"), Tensor([570425345, 2, 1],"float32"), upper=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 143165577, 5],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 107374183, 4, 5],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([71582789, 3, 4, 5],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 760567127],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 4, 178956971],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 4, 178956971],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 143165577, 5],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([71582789, 3, 4, 5],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([570425345, 4],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([570425345, 4],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=1, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=2, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 107374183, 4, 5],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=2, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=2, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=1, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=2, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 760567127],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float16"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,2,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1073741825, 4],"float16"), p=0, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=False, )
paddle.log(Tensor([8, 2, 1114113, 128],"float32"), )
paddle.log(Tensor([31690297, 18, 4],"float32"), )
paddle.log(Tensor([964, 81, 94, 311],"float32"), )
paddle.log(Tensor([10, 10, 21474837, 2],"float16"), )
paddle.log(Tensor([1, 570425345, 4],"float32"), )
paddle.log(Tensor([10, 429496730],"float16"), )
paddle.log(Tensor([3, 2, 2, 190141782],"float32"), )
paddle.log(Tensor([1, 7158279, 300, 2],"float16"), )
paddle.log(x=Tensor([2, 2, 1073741825],"float16"), )
paddle.log(Tensor([5704254, 100, 4],"float32"), )
paddle.log(Tensor([4294967297],"float16"), )
paddle.log(x=Tensor([100, 18, 422538, 3],"float32"), )
paddle.log(Tensor([1, 36, 63380594, 1],"float32"), )
paddle.log(x=Tensor([2, 2147483649],"float16"), )
paddle.log(Tensor([45359, 50304],"float32"), )
paddle.log(Tensor([760567127, 3],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([1, 6069, 375961],"float32"), )
paddle.log(Tensor([1901418, 2, 300, 2],"float32"), )
paddle.log(Tensor([139265, 1, 128, 128],"float32"), )
paddle.log(Tensor([20, 2760, 152, 272],"float32"), )
paddle.log(Tensor([64, 40, 6625],"float32"), )
paddle.log(Tensor([47159, 12096, 4],"float32"), )
paddle.log(Tensor([51349, 11109, 4],"float32"), )
paddle.log(x=Tensor([82, 9, 3091737],"float32"), )
paddle.log(Tensor([4, 250054],"float32"), )
paddle.log(Tensor([1, 100, 22817014],"float32"), )
paddle.log(x=Tensor([82, 5565126, 5],"float32"), )
paddle.log(Tensor([6, 715827883],"float16"), )
paddle.log(Tensor([10, 21474837, 10, 2],"float16"), )
paddle.log(Tensor([69633, 2, 128, 128],"float32"), )
paddle.log(Tensor([142606337, 16],"float32"), )
paddle.log(Tensor([2852127, 200, 4],"float32"), )
paddle.log(Tensor([2970966, 192, 4],"float32"), )
paddle.log(Tensor([1, 36828, 61956],"float32"), )
paddle.log(x=Tensor([100, 2281702, 10],"float32"), )
paddle.log(Tensor([4, 10649, 248, 216],"float32"), )
paddle.log(Tensor([134218, 32000],"float16"), )
paddle.log(Tensor([1, 496, 4600205],"float32"), )
paddle.log(Tensor([103, 22152441],"float32"), )
paddle.log(Tensor([4, 1, 248, 2300103],"float32"), )
paddle.log(x=Tensor([256, 722, 2, 6173],"float32"), )
paddle.log(Tensor([1159402, 492, 4],"float32"), )
paddle.log(x=Tensor([715827883, 2, 3],"float16"), name="test_log", )
paddle.log(Tensor([715827883, 6],"float16"), name="Uniform_entropy", )
paddle.log(Tensor([1, 5376, 424424],"float32"), )
paddle.log(Tensor([8, 1, 2228225, 128],"float32"), )
paddle.log(Tensor([100, 200, 99],"float64"), )
paddle.log(Tensor([106106, 5376, 4],"float32"), )
paddle.log(Tensor([100, 200, 100],"float64"), )
paddle.log(Tensor([214748365, 20],"float16"), )
paddle.log(Tensor([2, 5, 2, 114085069],"float32"), )
paddle.log(Tensor([4, 2, 1320430, 216],"float32"), )
paddle.log(x=Tensor([2, 2, 1073741825],"float16"), name="test_log", )
paddle.log(x=Tensor([100, 38, 600448],"float32"), )
paddle.log(Tensor([357913942, 12],"float16"), )
paddle.log(x=Tensor([1140850690, 2],"float32"), )
paddle.log(Tensor([3, 760567127],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([1000, 2, 380284, 3],"float32"), )
paddle.log(Tensor([1, 21, 108652447],"float32"), )
paddle.log(Tensor([4, 256000],"float32"), )
paddle.log(Tensor([429497, 100, 100],"float16"), )
paddle.log(x=Tensor([100, 18, 3, 422538],"float32"), )
paddle.log(Tensor([55189, 1, 152, 272],"float32"), )
paddle.log(Tensor([1, 196, 11641334],"float32"), )
paddle.log(Tensor([4, 81, 22645, 311],"float32"), )
paddle.log(Tensor([4, 81, 94, 74918],"float32"), )
paddle.log(Tensor([4, 1073741825],"float16"), )
paddle.log(Tensor([1, 11109, 205393],"float32"), )
paddle.log(Tensor([1000, 380284, 2, 3],"float32"), )
paddle.log(Tensor([3, 380283564, 2, 1],"float32"), )
paddle.log(Tensor([1, 128, 17825793],"float32"), )
paddle.log(Tensor([1, 38, 60044774],"float32"), )
paddle.log(Tensor([10, 228170138],"float32"), )
paddle.log(Tensor([3, 126761188, 2, 3],"float32"), )
paddle.log(x=Tensor([1140850690, 2],"int32"), )
paddle.log(x=Tensor([87, 6556614, 2, 2],"float32"), )
paddle.log(Tensor([1, 192, 11883862],"float32"), )
paddle.log(Tensor([20, 1, 152, 1412819],"float16"), )
paddle.log(Tensor([10, 10, 10, 4294968],"float16"), )
paddle.log(Tensor([103884, 1, 152, 272],"float16"), )
paddle.log(Tensor([20, 1, 419431, 272],"float32"), )
paddle.log(Tensor([42595, 1, 248, 216],"float32"), )
paddle.log(Tensor([16, 107, 1025],"float32"), )
paddle.log(x=Tensor([87, 2622646, 10],"float32"), )
paddle.log(Tensor([1140851, 500, 4],"float32"), )
paddle.log(Tensor([16, 511, 257],"float32"), )
paddle.log(x=Tensor([82, 18, 515290, 3],"float32"), )
paddle.log(x=Tensor([256, 9, 990322],"float32"), )
paddle.log(x=Tensor([100, 722, 2, 15802],"float32"), )
paddle.log(Tensor([1, 4294967297],"float16"), )
paddle.log(x=Tensor([2147483649, 2],"float16"), )
paddle.log(Tensor([1, 2281701379],"float32"), )
paddle.log(Tensor([1, 3802836, 300, 2],"float32"), )
paddle.log(Tensor([34817, 4, 128, 128],"float32"), )
paddle.log(x=Tensor([100, 4563403, 5],"float32"), )
paddle.log(Tensor([1901418, 300, 4],"float32"), )
paddle.log(x=Tensor([256, 990322, 3, 3],"float32"), )
paddle.log(Tensor([1580126, 1444, 1, 1],"float32"), )
paddle.log(Tensor([2, 5, 76056713, 3],"float32"), )
paddle.log(Tensor([1, 500, 4563403],"float32"), )
paddle.log10(x=Tensor([2, 3, 2, 357913942],"float16"), )
paddle.log10(x=Tensor([357913942, 3, 2, 2],"float16"), )
paddle.log10(x=Tensor([4294967297],"float16"), )
paddle.log10(Tensor([10, 228170138, 1],"float32"), )
paddle.log10(x=Tensor([1, 4294967297],"float16"), )
paddle.log10(x=Tensor([2147483649, 2],"float16"), )
paddle.log10(Tensor([10, 20, 11408507],"float32"), )
paddle.log10(x=Tensor([1, 2281701379],"float32"), )
paddle.log10(Tensor([114085069, 20, 1],"float32"), )
paddle.log10(x=Tensor([1140850690, 2],"float32"), )
paddle.log10(x=Tensor([2, 536870913, 2, 2],"float16"), )
paddle.log10(x=Tensor([2, 3, 357913942, 2],"float16"), )
paddle.log10(x=Tensor([2, 2147483649],"float16"), )
paddle.log1p(Tensor([4, 3, 190141782],"float32"), )
paddle.log1p(Tensor([715827883, 3, 2],"float16"), )
paddle.log1p(Tensor([2, 285212673, 4],"float32"), )
paddle.log1p(Tensor([171798692, 5, 5],"float16"), )
paddle.log1p(Tensor([2, 1140850690, 1],"float32"), )
paddle.log1p(Tensor([95070891, 2, 3, 4],"float32"), )
paddle.log1p(x=Tensor([1, 4294967297],"float16"), )
paddle.log1p(Tensor([1140850690, 1, 2],"float32"), )
paddle.log1p(Tensor([8, 8912897, 32],"float32"), )
paddle.log1p(Tensor([760567127, 3],"float32"), )
paddle.log1p(Tensor([2, 570425345, 2],"float32"), )
paddle.log1p(x=Tensor([357913942, 3, 2, 2],"float16"), )
paddle.log1p(Tensor([178956971, 2, 3, 4],"float16"), )
paddle.log1p(Tensor([2, 1, 1140850690],"float32"), )
paddle.log1p(Tensor([8, 16, 17825793],"float32"), )
paddle.log1p(x=Tensor([2, 536870913, 2, 2],"float16"), )
paddle.log1p(x=Tensor([2, 3, 2, 357913942],"float16"), )
paddle.log1p(Tensor([1, 190141782, 3, 4],"float32"), )
paddle.log1p(Tensor([2147483649, 2],"float16"), )
paddle.log1p(Tensor([50000, 5, 5],"float64"), )
paddle.log1p(Tensor([1, 2, 536870913, 4],"float16"), )
paddle.log1p(Tensor([380283564, 3, 2],"float32"), )
paddle.log1p(Tensor([1, 2, 3, 380283564],"float32"), )
paddle.log1p(Tensor([357913942, 12],"float16"), )
paddle.log1p(x=Tensor([2, 3, 357913942, 2],"float16"), )
paddle.log1p(Tensor([4, 3, 357913942],"float16"), )
paddle.log1p(Tensor([8, 16, 33554433],"float16"), )
paddle.log1p(Tensor([4, 190141782, 3],"float32"), )
paddle.log1p(Tensor([4, 157920, 3613],"float32"), )
paddle.log1p(Tensor([1, 357913942, 3, 4],"float16"), )
paddle.log1p(x=Tensor([2, 2147483649],"float16"), )
paddle.log1p(Tensor([8388609, 16, 32],"float16"), )
paddle.log1p(Tensor([10, 20, 11408507],"float32"), )
paddle.log1p(Tensor([4294967297],"float16"), )
paddle.log1p(Tensor([4817, 157920, 3],"float32"), )
paddle.log1p(Tensor([8, 16777217, 32],"float16"), )
paddle.log1p(Tensor([1, 2, 285212673, 4],"float32"), )
paddle.log1p(Tensor([4, 536870913, 2],"float16"), )
paddle.log1p(Tensor([2281701379],"float32"), )
paddle.log1p(Tensor([10, 760568, 300],"float32"), )
paddle.log1p(x=Tensor([2147483649, 2],"float16"), )
paddle.log1p(Tensor([2, 3, 380283564],"float32"), )
paddle.log1p(x=Tensor([1, 2281701379],"float32"), )
paddle.log1p(Tensor([1140850690, 2],"float32"), )
paddle.log1p(Tensor([38029, 200, 300],"float32"), )
paddle.log1p(Tensor([50000, 17180, 5],"float16"), )
paddle.log1p(Tensor([190141782, 3, 4],"float32"), )
paddle.log1p(Tensor([2, 2147483649],"float16"), )
paddle.log1p(Tensor([4456449, 16, 32],"float32"), )
paddle.log1p(Tensor([1, 2, 3, 715827883],"float16"), )
paddle.log1p(x=Tensor([4294967297],"float16"), )
paddle.log1p(Tensor([2, 107136, 10649],"float32"), )
paddle.log1p(Tensor([2, 1140850690],"float32"), )
paddle.log1p(Tensor([10, 228170138, 1],"float32"), )
paddle.log1p(Tensor([50000, 5, 17180],"float16"), )
paddle.log1p(Tensor([214748365, 20],"float16"), )
paddle.log1p(Tensor([4, 285212673, 2],"float32"), )
paddle.log1p(Tensor([114085069, 20, 1],"float32"), )
paddle.log1p(Tensor([21298, 107136, 1],"float32"), )
paddle.log1p(Tensor([50000, 85900],"float16"), )
paddle.log1p(Tensor([10, 200, 1140851],"float32"), )
paddle.log1p(Tensor([1073741825, 4],"float16"), )
paddle.log1p(Tensor([4, 157920, 3],"float32"), )
paddle.log1p(Tensor([10, 429496730],"float16"), )
paddle.log1p(x=Tensor([1140850690, 2],"float32"), )
paddle.log2(x=Tensor([2, 2147483649],"float16"), )
paddle.log2(Tensor([190141782, 12],"float32"), )
paddle.log2(Tensor([4, 5, 214748365],"float16"), )
paddle.log2(x=Tensor([2, 3, 357913942, 2],"float16"), )
paddle.log2(Tensor([10, 228170138],"float32"), )
paddle.log2(x=Tensor([2, 3, 2, 357913942],"float16"), )
paddle.log2(x=Tensor([4294967297],"float16"), )
paddle.log2(x=Tensor([357913942, 3, 2, 2],"float16"), )
paddle.log2(x=Tensor([2147483649, 2],"float16"), )
paddle.log2(Tensor([10, 429496730],"float16"), )
paddle.log2(Tensor([114085069, 20, 1],"float32"), )
paddle.log2(x=Tensor([1, 4294967297],"float16"), )
paddle.log2(Tensor([4, 5, 114085069],"float32"), )
paddle.log2(x=Tensor([1140850690, 2],"float32"), )
paddle.log2(Tensor([429496730, 5, 2],"float16"), )
paddle.log2(Tensor([10, 20, 11408507],"float32"), )
paddle.log2(Tensor([10, 228170138, 1],"float32"), )
paddle.log2(x=Tensor([2, 536870913, 2, 2],"float16"), )
paddle.log2(Tensor([4, 536870913, 2],"float16"), )
paddle.log2(Tensor([4, 285212673, 2],"float32"), )
paddle.log2(Tensor([228170138, 5, 2],"float32"), )
paddle.log2(Tensor([357913942, 12],"float16"), )
paddle.log2(x=Tensor([1, 2281701379],"float32"), )
paddle.logaddexp(Tensor([1, 2, 3, 380283564],"float32"), Tensor([1, 2, 3, 1],"float32"), )
paddle.logaddexp(Tensor([95070891, 2, 3, 4],"float32"), Tensor([1, 2, 3, 1],"float32"), )
paddle.logaddexp(Tensor([10, 200, 300],"int32"), Tensor([10, 200, 300],"int32"), )
paddle.logaddexp(Tensor([10, 200, 300],"float32"), Tensor([10, 200, 300],"float32"), )
paddle.logaddexp(Tensor([178956971, 2, 3, 4],"float16"), Tensor([1, 2, 3, 4],"float16"), )
paddle.logaddexp(Tensor([10, 200, 300],"int64"), Tensor([10, 200, 300],"int64"), )
paddle.logaddexp(Tensor([1, 2, 3, 4],"float16"), Tensor([178956971, 2, 3, 4],"float16"), )
paddle.logcumsumexp(Tensor([357913942, 12],"float16"), dtype="float16", axis=None, )
paddle.logcumsumexp(Tensor([10, 429496730],"float16"), dtype="float16", axis=None, )
paddle.logcumsumexp(Tensor([10, 429496730],"float16"), dtype="float16", axis=1, )
paddle.logcumsumexp(Tensor([357913942, 12],"float16"), dtype="float16", axis=1, )
paddle.logical_and(Tensor([23, 63135],"bool"), Tensor([23, 63135],"bool"), )
paddle.logical_and(Tensor([17, 217413],"bool"), Tensor([17, 217413],"bool"), )
paddle.logical_and(Tensor([10, 95760],"bool"), Tensor([10, 95760],"bool"), )
paddle.logical_and(Tensor([2, 278562],"bool"), Tensor([2, 278562],"bool"), )
paddle.logical_and(Tensor([26, 234804],"bool"), Tensor([26, 234804],"bool"), )
paddle.logical_and(Tensor([1, 800, 645],"bool"), Tensor([1, 800, 645],"bool"), )
paddle.logical_and(Tensor([5, 359100],"bool"), Tensor([5, 359100],"bool"), )
paddle.logical_and(Tensor([18, 64605],"bool"), Tensor([18, 64605],"bool"), )
paddle.logical_and(Tensor([6, 310992],"bool"), Tensor([6, 310992],"bool"), )
paddle.logical_and(Tensor([2, 252681],"bool"), Tensor([2, 252681],"bool"), )
paddle.logical_and(Tensor([1, 800, 1202],"bool"), Tensor([1, 800, 1202],"bool"), )
paddle.logical_and(Tensor([7, 193368],"bool"), Tensor([7, 193368],"bool"), )
paddle.logical_and(Tensor([9, 75030],"bool"), Tensor([9, 75030],"bool"), )
paddle.logical_and(Tensor([10, 71100],"bool"), Tensor([10, 71100],"bool"), )
paddle.logical_and(Tensor([13, 53250],"bool"), Tensor([13, 53250],"bool"), )
paddle.logical_and(Tensor([3, 235320],"bool"), Tensor([3, 235320],"bool"), )
paddle.logical_and(Tensor([20, 301302],"bool"), Tensor([20, 301302],"bool"), )
paddle.logical_and(Tensor([12, 356541],"bool"), Tensor([12, 356541],"bool"), )
paddle.logical_and(Tensor([12, 59295],"bool"), Tensor([12, 59295],"bool"), )
paddle.logical_and(Tensor([3, 200022],"bool"), Tensor([3, 200022],"bool"), )
paddle.logical_and(Tensor([6, 248616],"bool"), Tensor([6, 248616],"bool"), )
paddle.logical_and(Tensor([23, 56250],"bool"), Tensor([23, 56250],"bool"), )
paddle.logical_and(Tensor([8, 304368],"bool"), Tensor([8, 304368],"bool"), )
paddle.logical_and(Tensor([31, 330429],"bool"), Tensor([31, 330429],"bool"), )
paddle.logical_and(Tensor([4, 202572],"bool"), Tensor([4, 202572],"bool"), )
paddle.logical_and(Tensor([18, 236616],"bool"), Tensor([18, 236616],"bool"), )
paddle.logical_and(Tensor([19, 283905],"bool"), Tensor([19, 283905],"bool"), )
paddle.logical_and(Tensor([18, 359613],"bool"), Tensor([18, 359613],"bool"), )
paddle.logical_and(Tensor([4, 386694],"bool"), Tensor([4, 386694],"bool"), )
paddle.logical_and(Tensor([13, 223827],"bool"), Tensor([13, 223827],"bool"), )
paddle.logical_and(Tensor([11, 268569],"bool"), Tensor([11, 268569],"bool"), )
paddle.logical_and(Tensor([4, 230202],"bool"), Tensor([4, 230202],"bool"), )
paddle.logical_and(Tensor([3, 268560],"bool"), Tensor([3, 268560],"bool"), )
paddle.logical_and(Tensor([16, 260865],"bool"), Tensor([16, 260865],"bool"), )
paddle.logical_and(Tensor([13, 320739],"bool"), Tensor([13, 320739],"bool"), )
paddle.logical_and(Tensor([15, 310992],"bool"), Tensor([15, 310992],"bool"), )
paddle.logical_and(Tensor([3, 365211],"bool"), Tensor([3, 365211],"bool"), )
paddle.logical_and(Tensor([18, 248616],"bool"), Tensor([18, 248616],"bool"), )
paddle.logical_and(Tensor([17, 268560],"bool"), Tensor([17, 268560],"bool"), )
paddle.logical_and(Tensor([4, 229152],"bool"), Tensor([4, 229152],"bool"), )
paddle.logical_and(Tensor([26, 262428],"bool"), Tensor([26, 262428],"bool"), )
paddle.logical_and(Tensor([2, 293622],"bool"), Tensor([2, 293622],"bool"), )
paddle.logical_and(Tensor([4, 388740],"bool"), Tensor([4, 388740],"bool"), )
paddle.logical_and(Tensor([10, 291555],"bool"), Tensor([10, 291555],"bool"), )
paddle.logical_and(Tensor([6, 279279],"bool"), Tensor([6, 279279],"bool"), )
paddle.logical_and(Tensor([31, 245823],"bool"), Tensor([31, 245823],"bool"), )
paddle.logical_and(Tensor([28, 343728],"bool"), Tensor([28, 343728],"bool"), )
paddle.logical_and(Tensor([16, 330429],"bool"), Tensor([16, 330429],"bool"), )
paddle.logical_and(Tensor([9, 343728],"bool"), Tensor([9, 343728],"bool"), )
paddle.logical_and(Tensor([8, 290052],"bool"), Tensor([8, 290052],"bool"), )
paddle.logical_and(Tensor([4, 327360],"bool"), Tensor([4, 327360],"bool"), )
paddle.logical_and(Tensor([2270350, 1005],"bool"), Tensor([2270350, 1005],"bool"), )
paddle.logical_and(Tensor([7, 317160],"bool"), Tensor([7, 317160],"bool"), )
paddle.logical_and(Tensor([5, 349155],"bool"), Tensor([5, 349155],"bool"), )
paddle.logical_and(Tensor([4, 214107],"bool"), Tensor([4, 214107],"bool"), )
paddle.logical_and(Tensor([7, 214107],"bool"), Tensor([7, 214107],"bool"), )
paddle.logical_and(Tensor([13, 236616],"bool"), Tensor([13, 236616],"bool"), )
paddle.logical_and(Tensor([7, 319200],"bool"), Tensor([7, 319200],"bool"), )
paddle.logical_and(Tensor([2, 347820],"bool"), Tensor([2, 347820],"bool"), )
paddle.logical_and(Tensor([8, 257796],"bool"), Tensor([8, 257796],"bool"), )
paddle.logical_and(Tensor([2, 295443],"bool"), Tensor([2, 295443],"bool"), )
paddle.logical_and(Tensor([8, 286464],"bool"), Tensor([8, 286464],"bool"), )
paddle.logical_and(Tensor([3, 333018],"bool"), Tensor([3, 333018],"bool"), )
paddle.logical_and(Tensor([8, 377514],"bool"), Tensor([8, 377514],"bool"), )
paddle.logical_and(Tensor([31, 229152],"bool"), Tensor([31, 229152],"bool"), )
paddle.logical_and(Tensor([24, 356541],"bool"), Tensor([24, 356541],"bool"), )
paddle.logical_and(Tensor([21, 268569],"bool"), Tensor([21, 268569],"bool"), )
paddle.logical_and(Tensor([4, 236334],"bool"), Tensor([4, 236334],"bool"), )
paddle.logical_and(Tensor([3, 388032],"bool"), Tensor([3, 388032],"bool"), )
paddle.logical_and(Tensor([9, 286977],"bool"), Tensor([9, 286977],"bool"), )
paddle.logical_and(Tensor([7, 200022],"bool"), Tensor([7, 200022],"bool"), )
paddle.logical_and(Tensor([8, 62700],"bool"), Tensor([8, 62700],"bool"), )
paddle.logical_and(Tensor([17, 262194],"bool"), Tensor([17, 262194],"bool"), )
paddle.logical_and(Tensor([28, 268569],"bool"), Tensor([28, 268569],"bool"), )
paddle.logical_and(Tensor([23, 253728],"bool"), Tensor([23, 253728],"bool"), )
paddle.logical_and(Tensor([28, 306900],"bool"), Tensor([28, 306900],"bool"), )
paddle.logical_and(Tensor([16, 350178],"bool"), Tensor([16, 350178],"bool"), )
paddle.logical_and(Tensor([12, 261888],"bool"), Tensor([12, 261888],"bool"), )
paddle.logical_and(Tensor([13, 302832],"bool"), Tensor([13, 302832],"bool"), )
paddle.logical_and(Tensor([3, 286977],"bool"), Tensor([3, 286977],"bool"), )
paddle.logical_and(Tensor([2674, 800, 1067],"bool"), Tensor([1, 800, 1067],"bool"), )
paddle.logical_and(Tensor([20, 330429],"bool"), Tensor([20, 330429],"bool"), )
paddle.logical_and(Tensor([20, 408177],"bool"), Tensor([20, 408177],"bool"), )
paddle.logical_and(Tensor([1, 1005],"bool"), Tensor([2270350, 1005],"bool"), )
paddle.logical_and(Tensor([17, 50250],"bool"), Tensor([17, 50250],"bool"), )
paddle.logical_and(Tensor([12, 269586],"bool"), Tensor([12, 269586],"bool"), )
paddle.logical_and(Tensor([24, 103320],"bool"), Tensor([24, 103320],"bool"), )
paddle.logical_and(Tensor([13, 325113],"bool"), Tensor([13, 325113],"bool"), )
paddle.logical_and(Tensor([1, 800, 1081],"bool"), Tensor([1, 800, 1081],"bool"), )
paddle.logical_and(Tensor([8, 349155],"bool"), Tensor([8, 349155],"bool"), )
paddle.logical_and(Tensor([6, 295443],"bool"), Tensor([6, 295443],"bool"), )
paddle.logical_and(Tensor([1, 800, 1119],"bool"), Tensor([1, 800, 1119],"bool"), )
paddle.logical_and(Tensor([10, 194157],"bool"), Tensor([10, 194157],"bool"), )
paddle.logical_and(Tensor([14, 185691],"bool"), Tensor([14, 185691],"bool"), )
paddle.logical_and(Tensor([15, 408177],"bool"), Tensor([15, 408177],"bool"), )
paddle.logical_and(Tensor([23, 50250],"bool"), Tensor([23, 50250],"bool"), )
paddle.logical_and(Tensor([4, 208692],"bool"), Tensor([4, 208692],"bool"), )
paddle.logical_and(Tensor([17, 310992],"bool"), Tensor([17, 310992],"bool"), )
paddle.logical_and(Tensor([17, 365211],"bool"), Tensor([17, 365211],"bool"), )
paddle.logical_and(Tensor([20, 235320],"bool"), Tensor([20, 235320],"bool"), )
paddle.logical_not(x=Tensor([1140850690, 2],"bool"), )
paddle.logical_not(Tensor([19014179, 60, 2],"bool"), )
paddle.logical_not(Tensor([12768, 80],"bool"), )
paddle.logical_not(Tensor([570425345, 4],"int64"), )
paddle.logical_not(Tensor([30, 1, 369, 169],"bool"), )
paddle.logical_not(Tensor([3, 4, 190141782],"int64"), )
paddle.logical_not(Tensor([51200, 80],"bool"), )
paddle.logical_not(Tensor([2093305, 1, 10, 109],"bool"), )
paddle.logical_not(Tensor([1, 1573588, 10, 145],"bool"), )
paddle.logical_not(Tensor([30, 1, 226, 226],"bool"), )
paddle.logical_not(Tensor([14877, 420],"bool"), )
paddle.logical_not(Tensor([1, 1, 20933041, 109],"bool"), )
paddle.logical_not(Tensor([1, 1, 10514753, 217],"bool"), )
paddle.logical_not(Tensor([169728, 80],"bool"), )
paddle.logical_not(Tensor([14112, 80],"bool"), )
paddle.logical_not(Tensor([10, 1, 860715, 499],"float16"), )
paddle.logical_not(Tensor([10, 60, 3802836],"bool"), )
paddle.logical_not(Tensor([570425345, 4],"bool"), )
paddle.logical_not(Tensor([1, 2281701379],"int64"), )
paddle.logical_not(Tensor([155904, 80],"bool"), )
paddle.logical_not(x=Tensor([1, 2, 1, 1140850690],"bool"), )
paddle.logical_not(Tensor([204800, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 298, 161],"bool"), )
paddle.logical_not(Tensor([121600, 80],"bool"), )
paddle.logical_not(Tensor([85, 1073742, 25],"bool"), )
paddle.logical_not(Tensor([285212673, 4, 2],"int64"), )
paddle.logical_not(Tensor([47360, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 209, 209],"bool"), )
paddle.logical_not(Tensor([1, 33068136, 1, 69],"bool"), )
paddle.logical_not(Tensor([128000, 80],"bool"), )
paddle.logical_not(Tensor([3, 760567127, 1],"int64"), )
paddle.logical_not(Tensor([43680, 80],"bool"), )
paddle.logical_not(Tensor([207427399, 11],"bool"), )
paddle.logical_not(Tensor([174080, 80],"bool"), )
paddle.logical_not(Tensor([1, 1, 35103099, 65],"bool"), )
paddle.logical_not(Tensor([30, 1, 339, 339],"bool"), )
paddle.logical_not(Tensor([37404941, 1, 1, 61],"bool"), )
paddle.logical_not(Tensor([20933041, 1, 1, 109],"bool"), )
paddle.logical_not(Tensor([30, 1, 293, 293],"bool"), )
paddle.logical_not(Tensor([48544, 80],"bool"), )
paddle.logical_not(Tensor([570425345, 4, 1],"int64"), )
paddle.logical_not(Tensor([39168, 80],"bool"), )
paddle.logical_not(Tensor([46208, 80],"bool"), )
paddle.logical_not(Tensor([1, 26843546, 1, 85],"bool"), )
paddle.logical_not(Tensor([156672, 80],"bool"), )
paddle.logical_not(Tensor([184320, 80],"bool"), )
paddle.logical_not(Tensor([44352, 80],"bool"), )
paddle.logical_not(Tensor([55104, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 192, 192],"bool"), )
paddle.logical_not(Tensor([34944, 80],"bool"), )
paddle.logical_not(Tensor([48640, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 198, 198],"bool"), )
paddle.logical_not(Tensor([126464, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 355, 355],"bool"), )
paddle.logical_not(Tensor([53760, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 207, 207],"bool"), )
paddle.logical_not(Tensor([184832, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 220, 220],"bool"), )
paddle.logical_not(Tensor([9467641, 1, 1, 241],"bool"), )
paddle.logical_not(Tensor([30, 1, 298, 298],"bool"), )
paddle.logical_not(Tensor([1, 1, 9963762, 229],"bool"), )
paddle.logical_not(Tensor([30, 1, 243, 243],"bool"), )
paddle.logical_not(Tensor([198912, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 498, 498],"bool"), )
paddle.logical_not(Tensor([266866, 8550, 1],"bool"), )
paddle.logical_not(Tensor([456340276, 5],"bool"), )
paddle.logical_not(Tensor([30, 1, 212, 212],"bool"), )
paddle.logical_not(Tensor([52, 7, 6268411],"bool"), )
paddle.logical_not(Tensor([6, 63380594, 6],"bool"), )
paddle.logical_not(Tensor([2281701379, 1],"bool"), )
paddle.logical_not(Tensor([51168, 80],"bool"), )
paddle.logical_not(Tensor([3802836, 60, 10],"bool"), )
paddle.logical_not(Tensor([134400, 80],"bool"), )
paddle.logical_not(Tensor([33696, 80],"bool"), )
paddle.logical_not(Tensor([45920, 80],"bool"), )
paddle.logical_not(Tensor([48384, 80],"bool"), )
paddle.logical_not(Tensor([52, 1371215, 32],"bool"), )
paddle.logical_not(Tensor([43008, 80],"bool"), )
paddle.logical_not(Tensor([35103099, 1, 1, 65],"bool"), )
paddle.logical_not(Tensor([760567127, 3],"bool"), )
paddle.logical_not(Tensor([42432, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 210, 210],"bool"), )
paddle.logical_not(Tensor([1, 2281701379, 1, 1],"bool"), )
paddle.logical_not(Tensor([1, 5926498, 1, 385],"bool"), )
paddle.logical_not(Tensor([31616, 80],"bool"), )
paddle.logical_not(Tensor([10, 22817014, 10],"bool"), )
paddle.logical_not(Tensor([41344, 80],"bool"), )
paddle.logical_not(Tensor([45696, 80],"bool"), )
paddle.logical_not(Tensor([5926498, 1, 1, 385],"bool"), )
paddle.logical_not(Tensor([32832, 80],"bool"), )
paddle.logical_not(Tensor([30, 1, 336, 336],"bool"), )
paddle.logical_not(Tensor([126761188, 18],"bool"), )
paddle.logical_not(Tensor([1, 1140850690, 2],"int64"), )
paddle.logical_not(Tensor([209664, 80],"bool"), )
paddle.logical_not(Tensor([3, 380283564, 2],"int64"), )
paddle.logical_not(Tensor([30, 60, 1267612],"bool"), )
paddle.logical_not(Tensor([10, 25, 9126806],"bool"), )
paddle.logical_not(Tensor([47040, 80],"bool"), )
paddle.logical_not(Tensor([40128, 80],"bool"), )
paddle.logical_not(Tensor([1, 1, 1, 2281701379],"bool"), )
paddle.logical_or(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float64"), )
paddle.logical_or(x=Tensor([2281701379],"bool"), y=Tensor([2281701379],"bool"), )
paddle.logical_or(Tensor([380283564, 3, 2],"float64"), Tensor([380283564, 3, 2],"float32"), )
paddle.logical_or(Tensor([2281701379, 1],"bool"), Tensor([2281701379, 1],"bool"), )
paddle.logical_or(Tensor([570425345, 4],"bool"), Tensor([570425345, 4],"bool"), )
paddle.logical_or(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float64"), )
paddle.logical_or(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float64"), )
paddle.logical_or(Tensor([4, 3, 190141782],"float64"), Tensor([4, 3, 190141782],"float32"), )
paddle.logical_or(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.logical_or(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float64"), )
paddle.logical_or(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.logical_or(x=Tensor([1],"bool"), y=Tensor([2281701379],"bool"), )
paddle.logical_or(Tensor([640, 3565159],"bool"), Tensor([640, 3565159],"bool"), )
paddle.logical_or(Tensor([13, 7, 1],"bool"), Tensor([13, 1, 175515491],"bool"), )
paddle.logical_or(x=Tensor([380283564, 2, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_or(x=Tensor([1, 2],"bool"), y=Tensor([1140850690, 2],"bool"), )
paddle.logical_or(Tensor([285212673, 8],"bool"), Tensor([285212673, 8],"bool"), )
paddle.logical_or(x=Tensor([1, 2, 1, 3],"bool"), y=Tensor([1, 760567127, 3],"bool"), )
paddle.logical_or(Tensor([46565335, 7, 7],"bool"), Tensor([46565335, 7, 7],"bool"), )
paddle.logical_or(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.logical_or(x=Tensor([1, 760567127, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_or(Tensor([2, 1140850690],"bool"), Tensor([2, 1140850690],"bool"), )
paddle.logical_or(x=Tensor([52, 1462630, 1, 30],"bool"), y=Tensor([30, 30],"bool"), )
paddle.logical_or(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"float16"), )
paddle.logical_or(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.logical_or(Tensor([2, 1140850690],"bool"), Tensor([2, 1],"bool"), )
paddle.logical_or(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.logical_or(Tensor([13, 25073642, 7],"bool"), Tensor([13, 25073642, 7],"bool"), )
paddle.logical_or(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.logical_or(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.logical_or(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.logical_or(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.logical_or(x=Tensor([1140850690, 2],"bool"), y=Tensor([1140850690, 2],"bool"), )
paddle.logical_or(Tensor([2281701379, 1],"bool"), Tensor([1, 1],"bool"), )
paddle.logical_or(Tensor([8, 285212673],"bool"), Tensor([8, 285212673],"bool"), )
paddle.logical_or(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.logical_or(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.logical_or(Tensor([1, 1],"bool"), Tensor([2281701379, 1],"bool"), )
paddle.logical_or(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float32"), )
paddle.logical_or(Tensor([2, 1],"bool"), Tensor([2, 1140850690],"bool"), )
paddle.logical_or(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.logical_or(Tensor([3565159, 640],"bool"), Tensor([3565159, 640],"bool"), )
paddle.logical_or(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.logical_or(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.logical_or(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float64"), )
paddle.logical_or(Tensor([4, 285212673, 2],"float64"), Tensor([4, 285212673, 2],"float32"), )
paddle.logical_or(Tensor([13, 7, 25073642],"bool"), Tensor([13, 1, 25073642],"bool"), )
paddle.logical_or(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.logical_or(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.logical_or(Tensor([13, 175515491, 1],"bool"), Tensor([13, 1, 7],"bool"), )
paddle.logical_or(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float64"), )
paddle.logical_or(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.logical_or(Tensor([4, 570425345],"bool"), Tensor([4, 570425345],"bool"), )
paddle.logical_or(Tensor([1],"bool"), Tensor([2281701379],"bool"), )
paddle.logical_or(x=Tensor([1, 2, 1, 1140850690],"bool"), y=Tensor([1, 2, 1140850690],"bool"), )
paddle.logical_or(Tensor([2281701379],"bool"), Tensor([2281701379],"bool"), )
paddle.logical_or(Tensor([1, 1],"bool"), Tensor([1, 2281701379],"bool"), )
paddle.logical_or(Tensor([325957340, 7, 1],"bool"), Tensor([325957340, 1, 7],"bool"), )
paddle.logical_or(Tensor([2281701379],"bool"), Tensor([1],"bool"), )
paddle.logical_or(Tensor([1, 2281701379],"bool"), Tensor([1, 1],"bool"), )
paddle.logical_or(Tensor([1, 2281701379],"bool"), Tensor([1, 2281701379],"bool"), )
paddle.logical_or(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.logical_or(Tensor([13, 7, 25073642],"bool"), Tensor([13, 7, 25073642],"bool"), )
paddle.logical_xor(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float64"), )
paddle.logical_xor(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float64"), )
paddle.logical_xor(Tensor([4, 3, 190141782],"float64"), Tensor([4, 3, 190141782],"float32"), )
paddle.logical_xor(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.logical_xor(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float32"), )
paddle.logical_xor(Tensor([4, 536870913, 2],"float64"), Tensor([4, 536870913, 2],"float16"), )
paddle.logical_xor(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.logical_xor(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.logical_xor(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.logical_xor(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float64"), )
paddle.logical_xor(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float64"), )
paddle.logical_xor(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.logical_xor(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.logical_xor(Tensor([4, 3, 357913942],"float64"), Tensor([4, 3, 357913942],"float16"), )
paddle.logical_xor(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"float16"), )
paddle.logical_xor(x=Tensor([1, 2, 1, 1140850690],"bool"), y=Tensor([1, 2, 1140850690],"bool"), )
paddle.logical_xor(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float64"), )
paddle.logical_xor(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.logical_xor(Tensor([380283564, 3, 2],"float64"), Tensor([380283564, 3, 2],"float32"), )
paddle.logical_xor(x=Tensor([2281701379],"bool"), y=Tensor([2281701379],"bool"), )
paddle.logical_xor(x=Tensor([1140850690, 2],"bool"), y=Tensor([1140850690, 2],"bool"), )
paddle.logical_xor(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.logical_xor(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.logical_xor(Tensor([4, 285212673, 2],"float64"), Tensor([4, 285212673, 2],"float32"), )
paddle.logical_xor(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float64"), )
paddle.logical_xor(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.logical_xor(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.logical_xor(Tensor([715827883, 3, 2],"float64"), Tensor([715827883, 3, 2],"float16"), )
paddle.logical_xor(x=Tensor([1],"bool"), y=Tensor([2281701379],"bool"), )
paddle.logical_xor(x=Tensor([380283564, 2, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_xor(x=Tensor([1, 760567127, 1, 3],"bool"), y=Tensor([1, 2, 3],"bool"), )
paddle.logical_xor(x=Tensor([1, 2, 1, 3],"bool"), y=Tensor([1, 760567127, 3],"bool"), )
paddle.logical_xor(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.logical_xor(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.logical_xor(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.logical_xor(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.logical_xor(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.logical_xor(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.logical_xor(x=Tensor([1, 2],"bool"), y=Tensor([1140850690, 2],"bool"), )
paddle.logit(Tensor([114085069, 20, 1],"float32"), 0.001, )
paddle.logit(x=Tensor([143165577, 3, 2, 5],"float16"), eps=0.2, )
paddle.logit(Tensor([2281701379],"float32"), 1e-08, )
paddle.logit(Tensor([10, 20, 11408507],"float32"), 0.001, )
paddle.logit(x=Tensor([4, 3, 2, 178956971],"float16"), eps=0.2, )
paddle.logit(x=Tensor([4, 107374183, 2, 5],"float16"), eps=0.2, )
paddle.logit(Tensor([10, 228170138, 1],"float32"), 0.001, )
paddle.logit(x=Tensor([4, 3, 71582789, 5],"float16"), eps=0.2, )
paddle.logsumexp(Tensor([38028357, 3, 4, 5],"float32"), None, False, )
paddle.logsumexp(Tensor([2, 107374183, 4, 5],"float16"), None, False, )
paddle.logsumexp(Tensor([2, 3, 4, 95070891],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([30, 76056713],"float32"), axis=1, )
paddle.logsumexp(Tensor([38028357, 3, 4, 5],"float32"), None, True, )
paddle.logsumexp(Tensor([6, 380283564],"float32"), axis=1, )
paddle.logsumexp(Tensor([30, 1901418, 40],"float32"), keepdim=False, )
paddle.logsumexp(Tensor([38028357, 3, 4, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 76056713, 5],"float32"), )
paddle.logsumexp(Tensor([2, 3, 143165577, 5],"float16"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([71582789, 3, 4, 5],"float16"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 3, 76056713, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([3, 760567127],"float32"), axis=None, )
paddle.logsumexp(Tensor([30, 1901418, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([38028357, 60],"float32"), axis=1, )
paddle.logsumexp(Tensor([2, 3, 4, 178956971],"float16"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 57042535, 4, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 143165577, 5],"float16"), list[0,-1,], False, )
paddle.logsumexp(Tensor([38028357, 3, 4, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 107374183, 4, 5],"float16"), list[-1,], True, )
paddle.logsumexp(Tensor([285213, 200, 40],"float32"), )
paddle.logsumexp(Tensor([2, 3, 4, 95070891],"float32"), None, True, )
paddle.logsumexp(Tensor([8912897, 8, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([2, 3, 4, 95070891],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([20, 114085069],"float32"), axis=1, )
paddle.logsumexp(x=Tensor([2, 3, 715827883],"float16"), axis=0, keepdim=True, )
paddle.logsumexp(Tensor([285213, 200, 40],"float32"), keepdim=False, )
paddle.logsumexp(x=Tensor([715827883, 3, 2],"float16"), axis=list[0,1,], )
paddle.logsumexp(Tensor([285213, 200, 40],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(x=Tensor([2, 3, 715827883],"float16"), axis=list[0,1,], )
paddle.logsumexp(Tensor([38028357, 3, 4, 5],"float32"), )
paddle.logsumexp(x=Tensor([2, 1073741825, 2],"float16"), axis=list[0,1,], )
paddle.logsumexp(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.logsumexp(Tensor([30, 1901418, 40],"float32"), )
paddle.logsumexp(Tensor([26, 8, 4, 2742430],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.logsumexp(Tensor([35651585, 4, 16, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([2, 3, 4, 95070891],"float32"), None, False, )
paddle.logsumexp(Tensor([4, 5, 214748365],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([30, 1901418, 40],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([2, 1140850690],"float32"), axis=1, )
paddle.logsumexp(Tensor([143165577, 5, 6],"float16"), list[-1,], False, )
paddle.logsumexp(x=Tensor([380283564, 3, 2],"float32"), axis=2, )
paddle.logsumexp(x=Tensor([2, 1073741825, 2],"float16"), axis=2, )
paddle.logsumexp(x=Tensor([2, 570425345, 2],"float32"), axis=2, )
paddle.logsumexp(Tensor([2, 107374183, 4, 5],"float16"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 107374183, 4, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 57042535, 4, 5],"float32"), None, False, )
paddle.logsumexp(x=Tensor([715827883, 3, 2],"float16"), axis=2, )
paddle.logsumexp(Tensor([2, 3, 76056713, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 107374183, 4, 5],"float16"), list[0,-1,], False, )
paddle.logsumexp(Tensor([30, 200, 380284],"float32"), )
paddle.logsumexp(Tensor([2, 57042535, 4, 5],"float32"), )
paddle.logsumexp(x=Tensor([2, 3, 715827883],"float16"), axis=list[0,1,], keepdim=True, )
paddle.logsumexp(Tensor([71582789, 3, 4, 5],"float16"), None, False, )
paddle.logsumexp(Tensor([2, 3, 4, 178956971],"float16"), list[0,-1,], False, )
paddle.logsumexp(Tensor([30, 200, 380284],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([4, 570425345],"float32"), axis=1, )
paddle.logsumexp(Tensor([71582789, 3, 4, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 57042535, 4, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 57042535, 4, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([38028357, 3, 4, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([26, 4, 21939437, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([71582789, 3, 4, 5],"float16"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 3, 76056713, 5],"float32"), None, False, )
paddle.logsumexp(Tensor([2281701379],"float32"), )
paddle.logsumexp(x=Tensor([2, 3, 380283564],"float32"), axis=2, )
paddle.logsumexp(Tensor([2, 3, 143165577, 5],"float16"), None, False, )
paddle.logsumexp(Tensor([2281701379],"float32"), axis=0, )
paddle.logsumexp(Tensor([4, 178956971, 6],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([26, 2742430, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([4456449, 16, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([2, 3, 4, 178956971],"float16"), None, False, )
paddle.logsumexp(Tensor([2, 57042535, 4, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([285213, 200, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([2, 3, 4, 95070891],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 95070891],"float32"), 2, False, )
paddle.logsumexp(x=Tensor([2, 3, 715827883],"float16"), axis=2, )
paddle.logsumexp(Tensor([30, 200, 380284],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([2, 3, 4, 178956971],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 95070891],"float32"), )
paddle.logsumexp(Tensor([26, 5484860, 16, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([26, 4, 16, 1371215],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([2, 3, 143165577, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([10, 228170138],"float32"), axis=1, )
paddle.logsumexp(Tensor([2, 3, 76056713, 5],"float32"), list[-1,], False, )
paddle.logsumexp(x=Tensor([2, 1073741825, 2],"float16"), axis=0, keepdim=True, )
paddle.logsumexp(Tensor([2, 3, 4, 178956971],"float16"), list[0,1,2,3,], False, )
paddle.logsumexp(x=Tensor([715827883, 3, 2],"float16"), axis=0, keepdim=True, )
paddle.logsumexp(x=Tensor([715827883, 3, 2],"float16"), axis=list[0,1,], keepdim=True, )
paddle.logsumexp(Tensor([26, 16, 685608, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([30, 200, 380284],"float32"), keepdim=False, )
paddle.logsumexp(Tensor([26, 8, 1371215, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([456340276, 5],"float32"), axis=None, )
paddle.logsumexp(Tensor([38028357, 3, 4, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 3, 143165577, 5],"float16"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 57042535, 4, 5],"float32"), None, True, )
paddle.logsumexp(Tensor([2, 3, 76056713, 5],"float32"), None, True, )
paddle.logsumexp(Tensor([26, 16, 4, 1371215],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([71582789, 3, 4, 5],"float16"), list[0,-1,], False, )
paddle.masked_fill(Tensor([6, 8, 9, 5281717],"float32"), Tensor([6, 8, 9, 5281717],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([6, 2347430, 9, 18],"float32"), Tensor([6, 2347430, 9, 18],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([6, 8, 9, 5281717],"float32"), Tensor([6, 8, 9, 5281717],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([300, 7605672],"float32"), Tensor([7605672],"bool"), -0.29328805208206177, )
paddle.masked_fill(Tensor([57042535, 40],"float32"), Tensor([57042535, 1],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([57042535, 40],"float32"), Tensor([40],"bool"), -0.29328805208206177, )
paddle.masked_fill(Tensor([6, 60, 6338060],"int32"), Tensor([6, 60, 6338060],"bool"), 0, )
paddle.masked_fill(Tensor([6, 380283564],"int32"), Tensor([6, 380283564],"bool"), 0, )
paddle.masked_fill(Tensor([300, 7605672],"float32"), Tensor([7605672],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([6, 8, 2640859, 18],"float32"), Tensor([6, 8, 2640859, 18],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([1267612, 60, 30],"int32"), Tensor([1267612, 60, 30],"bool"), 0, )
paddle.masked_fill(Tensor([6, 2347430, 9, 18],"float32"), Tensor([6, 2347430, 9, 18],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([19014179, 60, 2],"int32"), Tensor([19014179, 60, 2],"bool"), 0, )
paddle.masked_fill(Tensor([3802836, 60, 10],"int32"), Tensor([3802836, 60, 10],"bool"), 0, )
paddle.masked_fill(Tensor([2281701379],"float32"), Tensor([2281701379],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 7605672],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 8, 4971027, 18],"float16"), Tensor([6, 8, 4971027, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([10, 60, 3802836],"int32"), Tensor([10, 60, 3802836],"bool"), 0, )
paddle.masked_fill(Tensor([4, 142606337, 4],"int32"), Tensor([4, 142606337, 4],"bool"), 0, )
paddle.masked_fill(Tensor([1760573, 8, 9, 18],"float32"), Tensor([1760573, 8, 9, 18],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([6, 63380594, 6],"int32"), Tensor([6, 63380594, 6],"bool"), 0, )
paddle.masked_fill(Tensor([760567127, 3],"float32"), Tensor([1, 3],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([6, 2347430, 9, 18],"float16"), Tensor([6, 2347430, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([7605672],"float32"), Tensor([300, 7605672],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([20, 60, 1901418],"int32"), Tensor([20, 60, 1901418],"bool"), 0, )
paddle.masked_fill(Tensor([6, 4418691, 9, 18],"float16"), Tensor([6, 4418691, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 2347430, 9, 18],"float32"), Tensor([6, 2347430, 9, 18],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([6, 8, 2640859, 18],"float16"), Tensor([6, 8, 2640859, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([38028357, 60],"int32"), Tensor([38028357, 60],"bool"), 0, )
paddle.masked_fill(Tensor([4294967297],"float16"), Tensor([4294967297],"bool"), -1.7802734375, )
paddle.masked_fill(Tensor([1760573, 8, 9, 18],"float32"), Tensor([1760573, 8, 9, 18],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([6, 8, 9, 5281717],"float16"), Tensor([6, 8, 9, 5281717],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([2281701379],"float16"), Tensor([2281701379],"bool"), -1.7802734375, )
paddle.masked_fill(Tensor([4, 60, 9507090],"int32"), Tensor([4, 60, 9507090],"bool"), 0, )
paddle.masked_fill(Tensor([2, 1140850690],"int32"), Tensor([2, 1140850690],"bool"), 0, )
paddle.masked_fill(Tensor([10, 228170138],"int32"), Tensor([10, 228170138],"bool"), 0, )
paddle.masked_fill(Tensor([4294967297],"float16"), Tensor([4294967297],"bool"), 0.7587890625, )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 7605672],"bool"), -0.54931640625, )
paddle.masked_fill(Tensor([2, 570425345, 2],"int32"), Tensor([2, 570425345, 2],"bool"), 0, )
paddle.masked_fill(Tensor([1901418, 60, 20],"int32"), Tensor([1901418, 60, 20],"bool"), 0, )
paddle.masked_fill(Tensor([30, 2535224, 30],"int32"), Tensor([30, 2535224, 30],"bool"), 0, )
paddle.masked_fill(Tensor([6, 8, 2640859, 18],"float32"), Tensor([6, 8, 2640859, 18],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([4, 570425345],"int32"), Tensor([4, 570425345],"bool"), 0, )
paddle.masked_fill(Tensor([20, 5704254, 20],"int32"), Tensor([20, 5704254, 20],"bool"), 0, )
paddle.masked_fill(Tensor([2281701379],"float16"), Tensor([2281701379],"bool"), 0.7587890625, )
paddle.masked_fill(Tensor([3314018, 8, 9, 18],"float16"), Tensor([3314018, 8, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([30, 76056713],"int32"), Tensor([30, 76056713],"bool"), 0, )
paddle.masked_fill(Tensor([10, 22817014, 10],"int32"), Tensor([10, 22817014, 10],"bool"), 0, )
paddle.masked_fill(Tensor([57042535, 40],"float32"), Tensor([40],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([30, 60, 1267612],"int32"), Tensor([30, 60, 1267612],"bool"), 0, )
paddle.masked_fill(Tensor([1760573, 8, 9, 18],"float16"), Tensor([1760573, 8, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 8, 2640859, 18],"float32"), Tensor([6, 8, 2640859, 18],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([57042535, 1],"float16"), Tensor([57042535, 40],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6338060, 60, 6],"int32"), Tensor([6338060, 60, 6],"bool"), 0, )
paddle.masked_fill(Tensor([2281701379],"float16"), Tensor([2281701379],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([6, 8, 9, 9942054],"float16"), Tensor([6, 8, 9, 9942054],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([57042535, 40],"float32"), Tensor([40],"bool"), 0.9238947033882141, )
paddle.masked_fill(Tensor([50, 45634028],"float32"), Tensor([50, 45634028],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 7605672],"bool"), 1.3017578125, )
paddle.masked_fill(Tensor([120],"float32"), Tensor([19014179, 120],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([57042535, 1],"float16"), Tensor([57042535, 40],"bool"), 1.3017578125, )
paddle.masked_fill(Tensor([107374183, 40],"float16"), Tensor([107374183, 1],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([1760573, 8, 9, 18],"float32"), Tensor([1760573, 8, 9, 18],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([3, 1431655766],"float16"), Tensor([3, 1],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([57042535, 1],"float16"), Tensor([57042535, 40],"bool"), -0.54931640625, )
paddle.masked_fill(Tensor([6, 8, 9, 5281717],"float32"), Tensor([6, 8, 9, 5281717],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([4294967297],"float16"), Tensor([4294967297],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([300, 7605672],"float32"), Tensor([7605672],"bool"), 0.9238947033882141, )
paddle.masked_fill(Tensor([2, 60, 19014179],"int32"), Tensor([2, 60, 19014179],"bool"), 0, )
paddle.masked_fill(Tensor([9507090, 60, 4],"int32"), Tensor([9507090, 60, 4],"bool"), 0, )
paddle.masked_fill(Tensor([3, 760567127],"float32"), Tensor([3, 1],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([20, 114085069],"int32"), Tensor([20, 114085069],"bool"), 0, )
paddle.masked_scatter(Tensor([300, 40],"float32"), Tensor([40],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([120],"float32"), Tensor([300, 120],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([168],"float32"), Tensor([168],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([3, 3],"float32"), Tensor([1, 3],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([300, 1],"float16"), Tensor([300, 40],"bool"), Tensor([14316558, 300],"float16"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([300, 40],"float32"), Tensor([40],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([300, 1],"float16"), Tensor([300, 40],"bool"), Tensor([300, 14316558],"float16"), )
paddle.masked_scatter(Tensor([3, 40],"float16"), Tensor([3, 1],"bool"), Tensor([14316558, 300],"float16"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 14316558],"float16"), )
paddle.masked_scatter(Tensor([3, 3],"float32"), Tensor([1, 3],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([50, 3],"float32"), Tensor([50, 3],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([168],"float16"), Tensor([168],"bool"), Tensor([14316558, 300],"float16"), )
paddle.masked_scatter(Tensor([3, 40],"float16"), Tensor([3, 1],"bool"), Tensor([300, 14316558],"float16"), )
paddle.masked_scatter(Tensor([3, 40],"float32"), Tensor([3, 1],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([14316558, 300],"float16"), )
paddle.masked_scatter(Tensor([3, 40],"float32"), Tensor([3, 1],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_scatter(Tensor([168],"float16"), Tensor([168],"bool"), Tensor([300, 14316558],"float16"), )
paddle.masked_scatter(Tensor([120],"float32"), Tensor([300, 120],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([30, 3],"float32"), Tensor([30, 1],"bool"), Tensor([76056713, 30],"float32"), )
paddle.masked_scatter(Tensor([30, 3],"float32"), Tensor([30, 1],"bool"), Tensor([30, 76056713],"float32"), )
paddle.masked_scatter(Tensor([168],"float32"), Tensor([168],"bool"), Tensor([300, 7605672],"float32"), )
paddle.masked_scatter(Tensor([50, 3],"float32"), Tensor([50, 3],"bool"), Tensor([7605672, 300],"float32"), )
paddle.masked_select(Tensor([2, 7581, 40],"float32"), Tensor([2, 7581, 40],"bool"), )
paddle.masked_select(Tensor([16, 7581, 68],"float32"), Tensor([16, 7581, 68],"bool"), )
paddle.masked_select(Tensor([8, 4725, 68],"float16"), Tensor([8, 4725, 68],"bool"), )
paddle.masked_select(Tensor([16, 9261, 4],"float32"), Tensor([16, 9261, 4],"bool"), )
paddle.masked_select(Tensor([1, 40656],"float32"), Tensor([56123, 40656],"bool"), )
paddle.masked_select(Tensor([8, 3549, 68],"float16"), Tensor([8, 3549, 68],"bool"), )
paddle.masked_select(Tensor([8, 4725, 68],"float32"), Tensor([8, 4725, 68],"bool"), )
paddle.masked_select(Tensor([2, 9261, 68],"float32"), Tensor([2, 9261, 68],"bool"), )
paddle.masked_select(Tensor([1, 30324, 88],"float32"), Tensor([1, 30324, 88],"bool"), )
paddle.masked_select(Tensor([1, 70644, 88],"float32"), Tensor([1, 70644, 88],"bool"), )
paddle.masked_select(Tensor([2, 4116, 68],"float32"), Tensor([2, 4116, 68],"bool"), )
paddle.masked_select(Tensor([1, 24276, 88],"float32"), Tensor([1, 24276, 88],"bool"), )
paddle.masked_select(Tensor([2, 6804, 40],"float32"), Tensor([2, 6804, 40],"bool"), )
paddle.masked_select(Tensor([43461, 52500],"float32"), Tensor([1, 52500],"bool"), )
paddle.masked_select(x=Tensor([2, 1140850690],"int32"), mask=Tensor([2, 1140850690],"bool"), )
paddle.masked_select(Tensor([1, 27216],"float32"), Tensor([83837, 27216],"bool"), )
paddle.masked_select(Tensor([1, 33600],"float32"), Tensor([67908, 33600],"bool"), )
paddle.masked_select(Tensor([4, 6069, 68],"float32"), Tensor([4, 6069, 68],"bool"), )
paddle.masked_select(Tensor([4, 7581, 68],"float32"), Tensor([4, 7581, 68],"bool"), )
paddle.masked_select(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"bool"), )
paddle.masked_select(Tensor([4, 10164, 68],"float32"), Tensor([4, 10164, 68],"bool"), )
paddle.masked_select(Tensor([1, 48384],"float32"), Tensor([47159, 48384],"bool"), )
paddle.masked_select(x=Tensor([760567127, 3],"int32"), mask=Tensor([760567127, 3],"bool"), )
paddle.masked_select(Tensor([4, 11109, 68],"float32"), Tensor([4, 11109, 68],"bool"), )
paddle.masked_select(Tensor([1, 37044],"float32"), Tensor([61595, 37044],"bool"), )
paddle.masked_select(Tensor([16, 8400, 68],"float32"), Tensor([16, 8400, 68],"bool"), )
paddle.masked_select(Tensor([2, 7581, 68],"float32"), Tensor([2, 7581, 68],"bool"), )
paddle.masked_select(Tensor([1, 40656, 88],"float32"), Tensor([1, 40656, 88],"bool"), )
paddle.masked_select(Tensor([2, 12096, 40],"float32"), Tensor([2, 12096, 40],"bool"), )
paddle.masked_select(Tensor([2, 9261, 40],"float32"), Tensor([2, 9261, 40],"bool"), )
paddle.masked_select(Tensor([4, 4116, 68],"float32"), Tensor([4, 4116, 68],"bool"), )
paddle.masked_select(Tensor([8, 12096, 68],"float32"), Tensor([8, 12096, 68],"bool"), )
paddle.masked_select(Tensor([8, 2100, 68],"float16"), Tensor([8, 2100, 68],"bool"), )
paddle.masked_select(Tensor([8, 12096, 68],"float16"), Tensor([8, 12096, 68],"bool"), )
paddle.masked_select(Tensor([16, 12096, 68],"float32"), Tensor([16, 12096, 68],"bool"), )
paddle.masked_select(Tensor([1, 56784, 88],"float32"), Tensor([1, 56784, 88],"bool"), )
paddle.masked_select(x=Tensor([760567127, 3],"float32"), mask=Tensor([760567127, 3],"bool"), )
paddle.masked_select(Tensor([75245, 30324],"float32"), Tensor([1, 30324],"bool"), )
paddle.masked_select(Tensor([8, 7581, 68],"float16"), Tensor([8, 7581, 68],"bool"), )
paddle.masked_select(Tensor([20, 500, 128],"float32"), Tensor([20, 500, 128],"bool"), )
paddle.masked_select(Tensor([16, 11109, 4],"float32"), Tensor([16, 11109, 4],"bool"), )
paddle.masked_select(Tensor([16, 11109, 68],"float32"), Tensor([16, 11109, 68],"bool"), )
paddle.masked_select(Tensor([106106, 21504],"float32"), Tensor([1, 21504],"bool"), )
paddle.masked_select(Tensor([4, 3024, 68],"float32"), Tensor([4, 3024, 68],"bool"), )
paddle.masked_select(Tensor([4, 2541, 68],"float32"), Tensor([4, 2541, 68],"bool"), )
paddle.masked_select(Tensor([75245, 30324],"float32"), Tensor([75245, 30324],"bool"), )
paddle.masked_select(Tensor([16, 8400, 4],"float32"), Tensor([16, 8400, 4],"bool"), )
paddle.masked_select(Tensor([4, 3549, 68],"float32"), Tensor([4, 3549, 68],"bool"), )
paddle.masked_select(Tensor([2, 12096, 68],"float32"), Tensor([2, 12096, 68],"bool"), )
paddle.masked_select(Tensor([4, 8400, 68],"float32"), Tensor([4, 8400, 68],"bool"), )
paddle.masked_select(Tensor([1, 52500],"float32"), Tensor([43461, 52500],"bool"), )
paddle.masked_select(Tensor([16, 4116, 68],"float32"), Tensor([16, 4116, 68],"bool"), )
paddle.masked_select(Tensor([20, 500, 128],"float16"), Tensor([20, 500, 128],"bool"), )
paddle.masked_select(Tensor([4, 6804, 68],"float32"), Tensor([4, 6804, 68],"bool"), )
paddle.masked_select(Tensor([16, 3549, 68],"float32"), Tensor([16, 3549, 68],"bool"), )
paddle.masked_select(Tensor([83837, 27216],"float32"), Tensor([83837, 27216],"bool"), )
paddle.masked_select(Tensor([1, 8400, 68],"float32"), Tensor([1, 8400, 68],"bool"), )
paddle.masked_select(Tensor([1, 52500, 88],"float32"), Tensor([1, 52500, 88],"bool"), )
paddle.masked_select(Tensor([16, 10164, 68],"float32"), Tensor([16, 10164, 68],"bool"), )
paddle.masked_select(Tensor([8, 9261, 68],"float16"), Tensor([8, 9261, 68],"bool"), )
paddle.masked_select(Tensor([106106, 21504],"float32"), Tensor([106106, 21504],"bool"), )
paddle.masked_select(Tensor([2, 10164, 40],"float32"), Tensor([2, 10164, 40],"bool"), )
paddle.masked_select(Tensor([8, 11109, 68],"float32"), Tensor([8, 11109, 68],"bool"), )
paddle.masked_select(Tensor([16, 4725, 68],"float32"), Tensor([16, 4725, 68],"bool"), )
paddle.masked_select(Tensor([4, 12096, 68],"float32"), Tensor([4, 12096, 68],"bool"), )
paddle.masked_select(Tensor([16, 3024, 68],"float32"), Tensor([16, 3024, 68],"bool"), )
paddle.masked_select(Tensor([1, 21504, 91],"float32"), Tensor([1, 21504, 91],"bool"), )
paddle.masked_select(Tensor([47159, 48384],"float32"), Tensor([47159, 48384],"bool"), )
paddle.masked_select(Tensor([8, 11109, 68],"float16"), Tensor([8, 11109, 68],"bool"), )
paddle.masked_select(Tensor([8, 8400, 68],"float16"), Tensor([8, 8400, 68],"bool"), )
paddle.masked_select(Tensor([4, 4725, 68],"float32"), Tensor([4, 4725, 68],"bool"), )
paddle.masked_select(Tensor([16, 12096, 4],"float32"), Tensor([16, 12096, 4],"bool"), )
paddle.masked_select(Tensor([1, 48384, 88],"float32"), Tensor([1, 48384, 88],"bool"), )
paddle.masked_select(Tensor([8, 6804, 68],"float32"), Tensor([8, 6804, 68],"bool"), )
paddle.masked_select(x=Tensor([2, 1140850690],"float32"), mask=Tensor([2, 1140850690],"bool"), )
paddle.masked_select(Tensor([8, 2541, 68],"float32"), Tensor([8, 2541, 68],"bool"), )
paddle.masked_select(Tensor([56123, 40656],"float32"), Tensor([1, 40656],"bool"), )
paddle.masked_select(Tensor([83837, 27216],"float32"), Tensor([1, 27216],"bool"), )
paddle.masked_select(Tensor([4, 2100, 68],"float32"), Tensor([4, 2100, 68],"bool"), )
paddle.masked_select(Tensor([8, 4116, 68],"float32"), Tensor([8, 4116, 68],"bool"), )
paddle.masked_select(Tensor([16, 5376, 68],"float32"), Tensor([16, 5376, 68],"bool"), )
paddle.masked_select(Tensor([8, 8400, 68],"float32"), Tensor([8, 8400, 68],"bool"), )
paddle.masked_select(Tensor([4, 9261, 68],"float32"), Tensor([4, 9261, 68],"bool"), )
paddle.masked_select(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"bool"), )
paddle.masked_select(Tensor([43461, 52500],"float32"), Tensor([43461, 52500],"bool"), )
paddle.masked_select(Tensor([93991, 24276],"float32"), Tensor([1, 24276],"bool"), )
paddle.masked_select(Tensor([16, 10164, 4],"float32"), Tensor([16, 10164, 4],"bool"), )
paddle.masked_select(Tensor([1, 21504],"float32"), Tensor([106106, 21504],"bool"), )
paddle.masked_select(Tensor([56123, 40656],"float32"), Tensor([56123, 40656],"bool"), )
paddle.masked_select(Tensor([1, 21504, 88],"float32"), Tensor([1, 21504, 88],"bool"), )
paddle.masked_select(Tensor([61595, 37044],"float32"), Tensor([1, 37044],"bool"), )
paddle.masked_select(Tensor([1, 61236, 88],"float32"), Tensor([1, 61236, 88],"bool"), )
paddle.masked_select(Tensor([8, 4116, 68],"float16"), Tensor([8, 4116, 68],"bool"), )
paddle.masked_select(Tensor([1, 65856, 88],"float32"), Tensor([1, 65856, 88],"bool"), )
paddle.masked_select(Tensor([1, 44436, 88],"float32"), Tensor([1, 44436, 88],"bool"), )
paddle.masked_select(Tensor([16, 6804, 68],"float32"), Tensor([16, 6804, 68],"bool"), )
paddle.masked_select(Tensor([1, 33600, 88],"float32"), Tensor([1, 33600, 88],"bool"), )
paddle.masked_select(Tensor([2, 8400, 68],"float32"), Tensor([2, 8400, 68],"bool"), )
paddle.masked_select(Tensor([93991, 24276],"float32"), Tensor([93991, 24276],"bool"), )
paddle.masked_select(Tensor([2, 4725, 68],"float32"), Tensor([2, 4725, 68],"bool"), )
paddle.matmul(x=Tensor([168, 16, 27, 64],"float32"), y=Tensor([168, 16, 27, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([64, 8, 56, 64],"float32"), y=Tensor([64, 8, 60, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([88, 16, 47, 64],"float32"), y=Tensor([88, 16, 55, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([176, 16, 29, 64],"float32"), y=Tensor([176, 16, 26, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([80, 16, 52, 64],"float32"), y=Tensor([80, 16, 62, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([152, 8, 25, 64],"float32"), y=Tensor([152, 8, 26, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([48, 16, 97, 64],"float32"), y=Tensor([48, 16, 51, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([240, 16, 21, 64],"float32"), y=Tensor([240, 16, 7, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([184, 16, 25, 64],"float32"), y=Tensor([184, 16, 13, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([128, 16, 40, 64],"float32"), y=Tensor([128, 16, 40, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([216, 16, 18, 64],"float32"), y=Tensor([216, 16, 23, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([24, 8, 115, 64],"float32"), y=Tensor([24, 8, 115, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([88, 16, 50, 64],"float32"), y=Tensor([88, 16, 54, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([136, 16, 36, 64],"float32"), y=Tensor([136, 16, 31, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([96, 16, 48, 64],"float32"), y=Tensor([96, 16, 52, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([40, 8, 60, 64],"float32"), y=Tensor([40, 8, 60, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([64, 16, 76, 64],"float32"), y=Tensor([64, 16, 76, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([120, 16, 42, 64],"float32"), y=Tensor([120, 16, 34, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([112, 16, 42, 64],"float32"), y=Tensor([112, 16, 44, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([112, 8, 35, 64],"float32"), y=Tensor([112, 8, 28, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([48, 8, 76, 64],"float32"), y=Tensor([48, 8, 83, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([24, 8, 146, 64],"float32"), y=Tensor([24, 8, 118, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([64, 16, 59, 64],"float32"), y=Tensor([64, 16, 59, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([40, 16, 117, 64],"float32"), y=Tensor([40, 16, 117, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 4, 256],"float32"), Tensor([4, 256, 73984],"float32"), )
paddle.matmul(x=Tensor([32, 8, 123, 64],"float32"), y=Tensor([32, 8, 123, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 4, 529, 529],"float32"), Tensor([2, 4, 529, 128],"float32"), )
paddle.matmul(x=Tensor([112, 8, 27, 64],"float32"), y=Tensor([112, 8, 36, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 8, 400, 400],"float32"), Tensor([4, 8, 400, 64],"float32"), )
paddle.matmul(x=Tensor([64, 16, 65, 64],"float32"), y=Tensor([64, 16, 65, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([120, 8, 30, 64],"float32"), y=Tensor([120, 8, 34, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([112, 16, 17, 64],"float32"), y=Tensor([112, 16, 17, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([128, 16, 36, 64],"float32"), y=Tensor([128, 16, 39, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([24, 8, 103, 64],"float32"), y=Tensor([24, 8, 103, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 16, 47, 64],"float32"), y=Tensor([104, 16, 42, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([136, 16, 36, 64],"float32"), y=Tensor([136, 16, 34, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([152, 8, 20, 64],"float32"), y=Tensor([152, 8, 20, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 16, 44, 64],"float32"), y=Tensor([104, 16, 49, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([136, 16, 36, 64],"float32"), y=Tensor([136, 16, 30, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([56, 16, 86, 64],"float32"), y=Tensor([56, 16, 78, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([48, 8, 77, 64],"float32"), y=Tensor([48, 8, 69, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 13, 256],"float32"), Tensor([4, 256, 102144],"float32"), )
paddle.matmul(x=Tensor([112, 8, 31, 64],"float32"), y=Tensor([112, 8, 36, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([56, 8, 65, 64],"float32"), y=Tensor([56, 8, 58, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([16, 8, 205, 64],"float32"), y=Tensor([16, 8, 94, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([64, 8, 53, 64],"float32"), y=Tensor([64, 8, 57, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 8, 83, 64],"float32"), y=Tensor([32, 8, 83, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([96, 8, 40, 64],"float32"), y=Tensor([96, 8, 34, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([64, 8, 57, 64],"float32"), y=Tensor([64, 8, 53, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([112, 16, 40, 64],"float32"), y=Tensor([112, 16, 40, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([640, 16, 7, 64],"float32"), y=Tensor([640, 16, 7, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([64, 8, 44, 64],"float32"), y=Tensor([64, 8, 44, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([264, 16, 19, 64],"float32"), y=Tensor([264, 16, 13, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([80, 16, 60, 64],"float32"), y=Tensor([80, 16, 54, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([88, 8, 36, 64],"float32"), y=Tensor([88, 8, 45, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([40, 8, 56, 64],"float32"), y=Tensor([40, 8, 56, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([56, 16, 83, 64],"float32"), y=Tensor([56, 16, 66, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 1, 64],"float32"), y=Tensor([8, 16, 129, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([408, 8, 10, 64],"float32"), y=Tensor([408, 8, 10, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([88, 16, 20, 64],"float32"), y=Tensor([88, 16, 20, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([256, 16, 19, 64],"float32"), y=Tensor([256, 16, 19, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([320, 16, 13, 64],"float32"), y=Tensor([320, 16, 13, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([72, 8, 52, 64],"float32"), y=Tensor([72, 8, 40, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([136, 16, 34, 64],"float32"), y=Tensor([136, 16, 36, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 8, 39, 64],"float32"), y=Tensor([104, 8, 32, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([40, 8, 92, 64],"float32"), y=Tensor([40, 8, 92, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([208, 8, 13, 64],"float32"), y=Tensor([208, 8, 13, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([40, 8, 51, 64],"float32"), y=Tensor([40, 8, 51, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([392, 16, 10, 64],"float32"), y=Tensor([392, 16, 10, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([48, 8, 49, 64],"float32"), y=Tensor([48, 8, 49, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([80, 8, 49, 64],"float32"), y=Tensor([80, 8, 49, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([176, 16, 28, 64],"float32"), y=Tensor([176, 16, 28, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([208, 16, 17, 64],"float32"), y=Tensor([208, 16, 17, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([96, 8, 41, 64],"float32"), y=Tensor([96, 8, 40, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 16, 47, 64],"float32"), y=Tensor([104, 16, 43, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([96, 16, 37, 64],"float32"), y=Tensor([96, 16, 37, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 9, 256],"float32"), Tensor([4, 256, 91392],"float32"), )
paddle.matmul(x=Tensor([32, 16, 154, 64],"float32"), y=Tensor([32, 16, 136, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([256, 16, 17, 64],"float32"), y=Tensor([256, 16, 20, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([56, 8, 67, 64],"float32"), y=Tensor([56, 8, 60, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([104, 16, 42, 64],"float32"), y=Tensor([104, 16, 48, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 6, 256],"float32"), Tensor([4, 256, 80512],"float32"), )
paddle.matmul(x=Tensor([56, 16, 75, 64],"float32"), y=Tensor([56, 16, 75, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([40, 8, 78, 64],"float32"), y=Tensor([40, 8, 78, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([264, 16, 12, 64],"float32"), y=Tensor([264, 16, 12, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([56, 16, 82, 64],"float32"), y=Tensor([56, 16, 72, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([40, 16, 64, 64],"float32"), y=Tensor([40, 16, 64, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([128, 16, 31, 64],"float32"), y=Tensor([128, 16, 31, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([208, 16, 23, 64],"float32"), y=Tensor([208, 16, 24, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([72, 16, 55, 64],"float32"), y=Tensor([72, 16, 55, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 285212673, 4],"float32"), Tensor([4],"float32"), False, False, )
paddle.matmul(Tensor([4, 11, 256],"float32"), Tensor([4, 256, 54400],"float32"), )
paddle.matmul(x=Tensor([24, 16, 174, 64],"float32"), y=Tensor([24, 16, 116, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 16, 157, 64],"float32"), y=Tensor([32, 16, 157, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([200, 16, 25, 64],"float32"), y=Tensor([200, 16, 24, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([296, 8, 13, 64],"float32"), y=Tensor([296, 8, 8, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([24, 16, 81, 64],"float32"), y=Tensor([24, 16, 81, 64],"float32"), transpose_y=True, )
paddle.matmul(Tensor([126761188, 18],"float32"), Tensor([126761188],"float32"), transpose_x=True, transpose_y=False, )
paddle.matmul(Tensor([16, 16, 128, 32],"float64"), Tensor([16, 16, 128, 32],"float64"), False, True, )
paddle.matmul(x=Tensor([32, 16, 129, 64],"float32"), y=Tensor([32, 16, 129, 64],"float32"), transpose_y=True, )
paddle.matrix_transpose(Tensor([2, 536870913, 4],"float16"), )
paddle.matrix_transpose(Tensor([2, 3, 715827883],"int16"), )
paddle.matrix_transpose(Tensor([190141782, 3, 4],"float32"), )
paddle.matrix_transpose(Tensor([357913942, 3, 4],"float16"), )
paddle.matrix_transpose(Tensor([2, 3, 380283564],"float32"), )
paddle.matrix_transpose(Tensor([2, 285212673, 4],"int64"), )
paddle.matrix_transpose(Tensor([190141782, 3, 4],"int64"), )
paddle.matrix_transpose(Tensor([357913942, 3, 4],"int16"), )
paddle.matrix_transpose(Tensor([2, 536870913, 4],"int8"), )
paddle.matrix_transpose(Tensor([2, 536870913, 4],"int16"), )
paddle.matrix_transpose(Tensor([2, 3, 380283564],"int32"), )
paddle.matrix_transpose(Tensor([2, 285212673, 4],"int32"), )
paddle.matrix_transpose(Tensor([2, 285212673, 4],"float32"), )
paddle.matrix_transpose(Tensor([2, 3, 715827883],"int8"), )
paddle.matrix_transpose(Tensor([190141782, 3, 4],"int32"), )
paddle.matrix_transpose(Tensor([2, 3, 715827883],"float16"), )
paddle.matrix_transpose(Tensor([357913942, 3, 4],"int8"), )
paddle.matrix_transpose(Tensor([2, 3, 380283564],"int64"), )
paddle.max(Tensor([2, 8, 4194305, 64],"float16"), axis=list[0,2,3,], )
paddle.max(Tensor([512, 50, 7, 12733],"float32"), axis=1, )
paddle.max(Tensor([16, 2228225, 64],"float32"), axis=0, )
paddle.max(Tensor([4, 4194305, 16, 16],"float16"), axis=3, keepdim=True, )
paddle.max(Tensor([2281701379],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([128, 1, 17825793],"float32"), axis=2, )
paddle.max(Tensor([3, 152113426, 5],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([1073741825, 4],"float16"), 1, True, )
paddle.max(Tensor([1, 2281701379],"float32"), )
paddle.max(Tensor([2177, 1024, 1024],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([30, 4, 19014179],"int32"), axis=1, )
paddle.max(Tensor([30, 1267612, 60],"int32"), axis=1, )
paddle.max(Tensor([2, 2, 16777217, 64],"float16"), axis=list[0,2,3,], )
paddle.max(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.max(x=Tensor([1140850690, 2],"float32"), axis=list[-2,1,], keepdim=False, )
paddle.max(Tensor([4, 256, 262145, 16],"float16"), axis=2, keepdim=True, )
paddle.max(Tensor([1355, 3170304],"float16"), axis=1, )
paddle.max(x=Tensor([760567127, 3],"float32"), axis=0, keepdim=True, )
paddle.max(Tensor([3961288, 576],"float32"), )
paddle.max(Tensor([1073741825, 4],"float16"), None, False, )
paddle.max(Tensor([14, 7, 23282668],"float32"), )
paddle.max(Tensor([557057, 32, 128],"float32"), axis=-1, )
paddle.max(Tensor([1, 32, 71303169],"float32"), axis=list[2,], )
paddle.max(Tensor([3, 128, 5941931],"int32"), axis=list[2,], keepdim=False, )
paddle.max(Tensor([20, 4, 28521268],"int32"), axis=1, )
paddle.max(Tensor([10, 429496730],"float16"), axis=-1, keepdim=True, )
paddle.max(Tensor([1, 32, 71303169],"float32"), axis=list[0,], )
paddle.max(Tensor([32, 557057, 128],"float32"), axis=-1, )
paddle.max(Tensor([8, 1024, 1024],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([3, 1431655766],"float16"), axis=-1, keepdim=True, )
paddle.max(Tensor([2, 2147483649],"float16"), 1, True, )
paddle.max(Tensor([192, 3, 282950, 14],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([416, 3061, 7, 256],"float32"), axis=1, )
paddle.max(Tensor([14, 64, 2546542],"float32"), )
paddle.max(Tensor([2, 524289, 64, 64],"float16"), axis=list[0,2,3,], )
paddle.max(Tensor([2, 35651585, 2, 2, 2, 2, 2],"float32"), axis=6, )
paddle.max(Tensor([13, 58505164, 3],"float32"), 2, )
paddle.max(x=Tensor([760567127, 3],"float32"), axis=1, )
paddle.max(Tensor([233017, 18432],"float16"), axis=1, )
paddle.max(Tensor([2, 2, 35651585, 2, 2, 2, 2],"float32"), axis=6, )
paddle.max(Tensor([222215, 19328],"float16"), axis=1, )
paddle.max(Tensor([13, 4, 43878873],"float32"), )
paddle.max(Tensor([214748365, 20],"float16"), axis=-1, keepdim=True, )
paddle.max(Tensor([185686, 128, 96],"int32"), axis=list[2,], keepdim=False, )
paddle.max(Tensor([371371, 6, 32, 32],"float32"), )
paddle.max(Tensor([285213, 200, 40],"float32"), keepdim=True, )
paddle.max(Tensor([30, 1901418, 40],"float32"), axis=list[0,1,], keepdim=False, )
paddle.max(Tensor([2, 1, 1140850690],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([2281701379],"float32"), axis=list[0,], keepdim=False, )
paddle.max(Tensor([16, 5704254, 5, 5],"float32"), )
paddle.max(Tensor([2, 19014179, 60],"int32"), axis=1, )
paddle.max(Tensor([220753, 19456],"float16"), axis=1, )
paddle.max(Tensor([285213, 200, 40],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.max(Tensor([16, 6, 5, 4753545],"float32"), )
paddle.max(Tensor([64, 371371, 96],"float32"), axis=list[0,1,], )
paddle.max(Tensor([193957, 22144],"float16"), axis=1, )
paddle.max(x=Tensor([760567127, 3],"float32"), axis=-2, )
paddle.max(Tensor([2, 2, 570425345],"int32"), tuple(0,1,), False, )
paddle.max(Tensor([2281701379],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([8, 8912897, 32],"float32"), axis=list[0,1,2,], keepdim=False, )
paddle.max(Tensor([2, 1140850690],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([14, 40744668, 4],"float32"), )
paddle.max(Tensor([253522376, 3, 3],"float32"), 2, )
paddle.max(Tensor([35651585, 2, 2, 2, 2, 2, 2],"float32"), axis=-1, )
paddle.max(Tensor([2, 2147483649],"float16"), axis=1, )
paddle.max(Tensor([14, 1646250, 99],"float32"), )
paddle.max(Tensor([2, 2, 2, 35651585, 2, 2, 2],"float32"), axis=-1, )
paddle.max(Tensor([456340276, 5],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([14, 10186167, 16],"float32"), )
paddle.max(Tensor([2228225, 1024],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([3880445, 3, 14, 14],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([2, 35651585, 2, 2, 2, 2, 2],"float32"), axis=-1, )
paddle.max(Tensor([192, 60632, 14, 14],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([32, 557057, 128],"float32"), axis=0, )
paddle.max(Tensor([2281701379],"float32"), keepdim=True, )
paddle.max(Tensor([570425345, 2, 2],"int32"), tuple(0,1,), False, )
paddle.max(Tensor([1, 1, 2281701379],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([3, 7922575, 96],"int32"), axis=list[2,], keepdim=False, )
paddle.max(Tensor([30, 200, 380284],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.max(Tensor([9507090, 4, 60],"int32"), axis=1, )
paddle.max(Tensor([17825793, 128],"float32"), axis=-1, )
paddle.max(Tensor([25466, 50, 7, 256],"float32"), axis=1, )
paddle.max(Tensor([10, 10, 4772186, 9],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.max(Tensor([2281701379],"float32"), )
paddle.max(Tensor([9313067, 245],"float32"), axis=0, )
paddle.max(x=Tensor([2, 1140850690],"float32"), axis=1, )
paddle.max(Tensor([4456449, 512],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([32, 71303169],"float32"), axis=-1, )
paddle.max(Tensor([64, 371371, 96],"float32"), axis=list[2,], )
paddle.max(Tensor([65537, 256, 16, 16],"float16"), axis=3, keepdim=True, )
paddle.max(Tensor([5302429, 10, 9, 9],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.max(Tensor([285213, 200, 40],"float32"), axis=list[0,1,], keepdim=False, )
paddle.max(Tensor([8, 278529, 1024],"float32"), axis=-1, keepdim=True, )
paddle.max(Tensor([8912897, 64, 4],"float32"), )
paddle.max(Tensor([17825793, 128],"int32"), axis=0, )
paddle.max(Tensor([2, 1140850690],"float32"), axis=0, )
paddle.max(Tensor([185686, 128, 96],"float32"), axis=list[2,], )
paddle.max(Tensor([2, 2, 2, 2, 35651585, 2, 2],"float32"), axis=-1, )
paddle.max(Tensor([52, 50, 7, 125369],"float32"), axis=1, )
paddle.max(Tensor([4294967297],"float16"), )
paddle.maximum(Tensor([101, 22591103],"float32"), Tensor([101, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([209716, 5440, 2],"float32"), )
paddle.maximum(Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.maximum(Tensor([12, 3, 20, 20, 158452],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 37623, 30324, 2],"float32"), )
paddle.maximum(Tensor([100, 22817014],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 110924, 10285, 2],"float32"), )
paddle.maximum(Tensor([12, 3, 40, 1584515, 1],"float32"), Tensor([12, 3, 40, 1584515, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([110924, 10285, 2],"float32"), )
paddle.maximum(Tensor([152113426, 15],"float32"), Tensor([15],"float32"), )
paddle.maximum(Tensor([12, 3, 6338060, 10, 1],"float32"), Tensor([12, 3, 6338060, 10, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 419431],"float32"), Tensor([1, 5440, 419431],"float32"), )
paddle.maximum(x=Tensor([715827883, 2, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.maximum(Tensor([1, 1, 2213096],"float32"), Tensor([1031, 2213096],"float32"), )
paddle.maximum(Tensor([1001, 2279422],"float32"), Tensor([1001, 2279422],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.maximum(Tensor([190141782, 12],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([1, 1140850690, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2279422],"float32"), Tensor([1001, 2279422],"float32"), )
paddle.maximum(Tensor([4, 53687092, 20],"float16"), Tensor([4, 53687092, 20],"float16"), )
paddle.maximum(Tensor([228170138, 10],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([1901418, 40],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 3169030, 1],"float32"), Tensor([12, 3, 20, 3169030, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 61906],"float32"), Tensor([1, 36858, 61906],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([37623, 1, 30324, 2],"float32"), )
paddle.maximum(Tensor([200, 380284],"float32"), Tensor([30, 200, 380284],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 93991],"float32"), Tensor([1, 1, 24276, 93991],"float32"), )
paddle.maximum(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), )
paddle.maximum(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 1140850690, 2],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.maximum(Tensor([1002, 2277148],"float32"), Tensor([1002, 2277148],"float32"), )
paddle.maximum(Tensor([200, 40],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.maximum(Tensor([1002, 1],"float32"), Tensor([1002, 2277148],"float32"), )
paddle.maximum(Tensor([12, 475355, 20, 20, 1],"float32"), Tensor([12, 475355, 20, 20, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([33954, 1, 33600, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 634159],"float32"), Tensor([1, 3598, 634159],"float32"), )
paddle.maximum(Tensor([1001, 1],"float32"), Tensor([1001, 2279422],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 33954, 33600, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([110924, 1, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 75245],"float32"), Tensor([1, 1, 30324, 75245],"float32"), )
paddle.maximum(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([46996, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([7605672, 3, 10, 10, 1],"float32"), Tensor([7605672, 3, 10, 10, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 40, 40, 39613],"float32"), Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([30953, 36858, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 30798, 37044, 2],"float32"), )
paddle.maximum(Tensor([12, 3, 3169030, 20, 1],"float32"), Tensor([12, 3, 3169030, 20, 1],"float32"), )
paddle.maximum(Tensor([10, 228170138],"float32"), Tensor([10, 1],"float32"), )
paddle.maximum(Tensor([4, 20, 53687092],"float16"), Tensor([4, 20, 53687092],"float16"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([317080, 1, 3598, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([185505, 6150, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2193944],"float32"), Tensor([1040, 2193944],"float32"), )
paddle.maximum(Tensor([380284],"float32"), Tensor([30, 200, 380284],"float32"), )
paddle.maximum(x=Tensor([1, 2, 1, 2147483649],"float16"), y=Tensor([1, 2, 2147483649],"float16"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([30, 200, 380284],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 1140850690, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 221848],"float32"), Tensor([1, 10285, 221848],"float32"), )
paddle.maximum(Tensor([1, 1, 547828],"float32"), Tensor([1, 4165, 547828],"float32"), )
paddle.maximum(Tensor([101, 22591103],"float32"), Tensor([101, 22591103],"float32"), )
paddle.maximum(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.maximum(Tensor([1, 1140850690, 2],"float32"), Tensor([1, 1140850690, 2],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 2277148],"float32"), Tensor([1002, 2277148],"float32"), )
paddle.maximum(Tensor([10, 200, 300],"int32"), Tensor([10, 200, 300],"int32"), )
paddle.maximum(Tensor([10737419, 20, 20],"float16"), Tensor([10737419, 20, 20],"float16"), )
paddle.maximum(Tensor([40],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.maximum(Tensor([10, 1],"float32"), Tensor([10, 228170138],"float32"), )
paddle.maximum(Tensor([100, 22817014],"float32"), Tensor([100, 1],"float32"), )
paddle.maximum(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([29709, 38402, 2],"float32"), )
paddle.maximum(Tensor([10, 228170138],"float32"), Tensor([228170138],"float32"), )
paddle.maximum(Tensor([14877, 420],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([12, 118839, 40, 40, 1],"float32"), Tensor([12, 118839, 40, 40, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 221848],"float32"), Tensor([1, 1, 10285, 221848],"float32"), )
paddle.maximum(Tensor([100, 22817014],"float32"), Tensor([22817014],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 20, 158452],"float32"), Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.maximum(Tensor([1000, 2281702],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([12906, 215],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([1901418, 3, 20, 20, 1],"float32"), Tensor([1901418, 3, 20, 20, 1],"float32"), )
paddle.maximum(Tensor([1140850690, 2],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([1002, 2277148],"float32"), Tensor([1002, 1],"float32"), )
paddle.maximum(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 46996, 24276, 2],"float32"), )
paddle.maximum(Tensor([2281701379, 1],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([126761188, 18],"float32"), Tensor([1],"float32"), )
paddle.maximum(x=Tensor([1, 1431655766, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.maximum(Tensor([1, 1, 2272611],"float32"), Tensor([1004, 2272611],"float32"), )
paddle.maximum(Tensor([1, 1, 371009],"float32"), Tensor([1, 6150, 371009],"float32"), )
paddle.maximum(Tensor([100, 1],"float32"), Tensor([100, 22817014],"float32"), )
paddle.maximum(Tensor([152113426, 15],"float32"), Tensor([152113426, 15],"float32"), )
paddle.maximum(Tensor([101, 1],"float32"), Tensor([101, 22591103],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([41919, 1, 27216, 2],"float32"), )
paddle.maximum(Tensor([1001, 2279422],"float32"), Tensor([1001, 1],"float32"), )
paddle.maximum(Tensor([11585, 418],"float32"), Tensor([1],"float32"), )
paddle.mean(Tensor([13, 2, 16, 4, 1371215],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([2, 14, 5, 1, 1, 2, 1, 4074467, 2],"float32"), )
paddle.mean(Tensor([30, 200, 380284],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([8, 1, 557057, 512],"float32"), name=None, )
paddle.mean(Tensor([3579, 8, 1280],"bfloat16"), axis=1, )
paddle.mean(Tensor([1118482, 12, 170, 1],"float32"), name=None, )
paddle.mean(Tensor([38028357, 60],"float32"), axis=0, )
paddle.mean(Tensor([1, 100, 2, 5368710, 2, 2],"float16"), )
paddle.mean(Tensor([4, 15, 3, 256, 256],"float32"), )
paddle.mean(x=Tensor([2, 1, 2147483649],"float16"), axis=Tensor([2],"int64"), )
paddle.mean(Tensor([6255, 8, 1280],"bfloat16"), axis=1, )
paddle.mean(Tensor([1, 1, 17, 26843546, 5],"float32"), )
paddle.mean(Tensor([1, 2, 3, 4, 4, 14913081, 3],"float16"), )
paddle.mean(x=Tensor([16, 142606337, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([2, 570425345, 2],"float32"), axis=-1, )
paddle.mean(Tensor([1, 2, 3, 4, 4, 3, 14913081],"float16"), )
paddle.mean(Tensor([3345, 8, 1280],"bfloat16"), axis=1, )
paddle.mean(Tensor([2, 14, 5, 1, 4074467, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([16, 32, 1, 4456449],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([6805, 8, 1280],"bfloat16"), axis=1, )
paddle.mean(Tensor([4, 2, 1, 512, 4, 139265],"float32"), 0, True, None, )
paddle.mean(x=Tensor([2, 570425345, 2],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(Tensor([8705, 1, 512, 512],"float32"), name=None, )
paddle.mean(Tensor([1, 2281701379],"float32"), name=None, )
paddle.mean(Tensor([4294967297],"float16"), )
paddle.mean(Tensor([20, 114085069],"float32"), axis=0, )
paddle.mean(Tensor([4, 1, 1024, 1024],"float32"), )
paddle.mean(Tensor([4, 384, 8, 349526],"float16"), -2, )
paddle.mean(Tensor([1, 1, 3, 760567127],"float32"), )
paddle.mean(Tensor([26182, 5447, 16],"float32"), axis=0, )
paddle.mean(Tensor([30, 200, 380284],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([4, 256, 139265, 16],"float32"), -2, )
paddle.mean(Tensor([35651585, 1, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 1, 1, 1431655766, 3],"float16"), )
paddle.mean(Tensor([3699, 8, 1280],"bfloat16"), axis=1, )
paddle.mean(Tensor([2, 8, 142606337],"float32"), axis=1, )
paddle.mean(Tensor([4, 384, 185686, 8],"float32"), -2, )
paddle.mean(Tensor([6474, 8, 1280],"bfloat16"), axis=1, )
paddle.mean(Tensor([2, 3, 4, 4, 3, 4, 4, 932068],"float16"), )
paddle.mean(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.mean(Tensor([228170138, 10],"float32"), axis=-1, )
paddle.mean(Tensor([1, 512221, 65, 129],"float16"), )
paddle.mean(x=Tensor([2, 1140850690],"float32"), )
paddle.mean(Tensor([4, 512, 1024],"float32"), )
paddle.mean(Tensor([2, 89478486, 3, 1, 1, 1, 4, 2],"float16"), )
paddle.mean(Tensor([5735, 8, 1280],"bfloat16"), axis=1, )
paddle.mean(x=Tensor([13, 96, 1828287],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([1431655766, 1, 3],"float16"), axis=tuple(0,1,2,), keepdim=False, )
paddle.mean(Tensor([3, 7605672, 10, 10],"float32"), name=None, )
paddle.mean(Tensor([16, 8, 33554433],"float16"), axis=1, )
paddle.mean(Tensor([4, 3, 89478486, 4],"float16"), name=None, )
paddle.mean(Tensor([192, 48, 1, 247581],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([2, 3, 3, 1657009, 3, 4, 3, 4],"float16"), )
paddle.mean(Tensor([2, 891290, 1280],"float32"), axis=1, )
paddle.mean(Tensor([16, 3, 89478486],"float16"), axis=1, )
paddle.mean(Tensor([2, 3, 4, 4, 699051, 4, 4, 4],"float16"), )
paddle.mean(Tensor([2, 715827883, 1, 3],"float16"), )
paddle.mean(Tensor([4, 256, 16, 139265],"float32"), -2, )
paddle.mean(Tensor([16, 8, 17825793, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([1, 1, 4294967297],"float16"), )
paddle.mean(Tensor([1, 2, 2, 2, 5368710, 100],"float16"), )
paddle.mean(Tensor([8912897, 256],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([3, 2, 3, 1, 119304648, 1, 2],"float16"), )
paddle.mean(Tensor([2, 5, 3, 14316558, 2, 5],"float16"), )
paddle.mean(Tensor([6098, 8, 1280],"bfloat16"), axis=1, )
paddle.mean(x=Tensor([2, 1, 2147483649],"float16"), axis=list[0,1,2,], )
paddle.mean(Tensor([1, 1, 64, 67108865],"float16"), )
paddle.mean(Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.mean(Tensor([1, 3, 1, 1, 1431655766],"float16"), )
paddle.mean(Tensor([1, 8, 285212673],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 11883862, 3, 4, 4, 2],"float32"), )
paddle.mean(Tensor([8, 297097, 960],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([11883862, 96, 2],"float32"), name=None, )
paddle.mean(Tensor([3795, 8, 1280],"bfloat16"), axis=1, )
paddle.mean(Tensor([4, 16777217, 8, 8],"float16"), -2, )
paddle.mean(x=Tensor([11883862, 96, 2],"float32"), axis=-1, )
paddle.mean(Tensor([2147483649, 2],"float16"), )
paddle.mean(Tensor([1, 2, 3, 4, 29826162, 6],"float16"), )
paddle.mean(Tensor([6, 380283564],"float32"), axis=list[0,], )
paddle.mean(Tensor([2, 3, 3, 4, 1242757, 4, 3, 4],"float16"), )
paddle.mean(Tensor([100, 22817014, 1],"float32"), name=None, )
paddle.mean(Tensor([760567127, 3],"float32"), )
paddle.mean(Tensor([6, 380283564],"float32"), axis=1, )
paddle.mean(Tensor([1, 34359739, 5, 5, 5],"float16"), )
paddle.mean(Tensor([760567127, 3],"float32"), axis=list[0,], )
paddle.mean(x=Tensor([2, 715827883, 3],"float16"), axis=list[0,1,], )
paddle.mean(Tensor([2, 3, 3, 4, 3, 4, 1242757, 4],"float16"), )
paddle.mean(Tensor([1431655766, 1, 3],"float16"), )
paddle.mean(Tensor([2, 300, 2048],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([84507459, 1, 3, 3, 3],"float32"), )
paddle.mean(Tensor([8, 285212673],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.mean(Tensor([8, 285212673],"float32"), axis=list[0,], )
paddle.mean(x=Tensor([16, 96, 1485483],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(Tensor([52, 1371215, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([1, 2, 3, 4, 19884108, 3, 3],"float16"), )
paddle.mean(Tensor([128, 49, 363792],"float32"), axis=1, )
paddle.mean(Tensor([2, 96, 11883862],"float32"), axis=-1, )
paddle.mean(Tensor([1, 3, 34087043, 7, 6],"float16"), )
paddle.mean(Tensor([90948, 49, 512],"float32"), axis=1, )
paddle.median(Tensor([3, 4, 357913942],"float16"), 0, False, )
paddle.median(Tensor([3, 1431655766],"float16"), 0, True, )
paddle.median(Tensor([570425345, 4],"float32"), -1, True, )
paddle.median(Tensor([3, 715827883, 2],"float16"), 0, True, )
paddle.median(Tensor([3, 380283564, 2],"float32"), 0, False, )
paddle.median(Tensor([3, 380283564, 2],"int32"), 2, False, )
paddle.median(Tensor([3, 715827883, 2],"float16"), 0, False, )
paddle.median(x=Tensor([4, 4, 142606337],"float32"), axis=0, keepdim=False, )
paddle.median(Tensor([3, 380283564, 2],"float32"), 2, False, )
paddle.median(Tensor([1073741825, 4],"float16"), 0, False, mode="min", )
paddle.median(Tensor([570425345, 4],"float32"), -1, False, )
paddle.median(Tensor([3, 760567127],"float32"), 0, False, )
paddle.median(Tensor([3, 715827883, 2],"float16"), 1, False, mode="min", )
paddle.median(Tensor([1073741825, 4],"float16"), 0, )
paddle.median(Tensor([3, 4, 357913942],"float16"), 0, True, )
paddle.median(Tensor([3, 4, 190141782],"float32"), 0, False, )
paddle.median(Tensor([3, 380283564, 2],"int32"), -1, True, )
paddle.median(Tensor([536870913, 4, 2],"float16"), 0, True, mode="min", )
paddle.median(Tensor([3, 380283564, 2],"float32"), 2, True, )
paddle.median(Tensor([3, 380283564, 2],"int32"), 2, True, )
paddle.median(Tensor([1073741825, 4],"float16"), 0, False, )
paddle.median(Tensor([3, 380283564, 2],"float32"), -1, False, )
paddle.median(x=Tensor([142606337, 4, 4],"float32"), axis=-2, keepdim=True, )
paddle.median(Tensor([3, 4, 190141782],"int32"), 0, True, )
paddle.median(x=Tensor([142606337, 4, 4],"float32"), axis=1, keepdim=True, )
paddle.median(x=Tensor([142606337, 4, 4],"float32"), axis=1, keepdim=False, )
paddle.median(Tensor([1073741825, 4],"float16"), -1, False, )
paddle.median(Tensor([285212673, 4, 2],"float32"), -1, False, )
paddle.median(Tensor([3, 1431655766],"float16"), 0, False, )
paddle.median(Tensor([285212673, 4, 2],"int32"), -1, False, )
paddle.median(Tensor([3, 4, 190141782],"float32"), 0, True, )
paddle.median(Tensor([285212673, 4, 2],"int32"), 2, False, )
paddle.median(Tensor([3, 380283564, 2],"float32"), -1, True, )
paddle.median(Tensor([3, 380283564, 2],"int32"), 0, False, )
paddle.median(Tensor([3, 380283564, 2],"int32"), -1, False, )
paddle.median(Tensor([1073741825, 4],"float16"), 1, True, )
paddle.median(Tensor([285212673, 4, 2],"int32"), 2, True, )
paddle.median(x=Tensor([4, 4, 142606337],"float32"), axis=1, keepdim=False, )
paddle.median(Tensor([3, 715827883, 2],"float16"), 1, False, )
paddle.median(Tensor([3, 380283564, 2],"float32"), 0, True, )
paddle.median(Tensor([570425345, 4],"float32"), 1, False, )
paddle.median(Tensor([536870913, 4, 2],"float16"), 0, False, )
paddle.median(Tensor([285212673, 4, 2],"float32"), 1, True, )
paddle.median(Tensor([5, 456340276],"float32"), 0, False, mode="min", )
paddle.median(Tensor([3, 760567127],"float32"), 0, True, )
paddle.median(Tensor([3, 4, 357913942],"float16"), 1, True, )
paddle.median(x=Tensor([4, 4, 142606337],"float32"), axis=-2, keepdim=True, )
paddle.median(Tensor([536870913, 4, 2],"float16"), 1, True, )
paddle.median(Tensor([536870913, 4, 2],"float16"), 0, True, )
paddle.median(Tensor([1073741825, 4],"float16"), 0, True, )
paddle.median(Tensor([3, 1431655766],"float16"), 0, )
paddle.median(x=Tensor([4, 4, 142606337],"float32"), axis=1, keepdim=True, )
paddle.median(Tensor([3, 715827883, 2],"float16"), 1, True, )
paddle.median(Tensor([3, 4, 190141782],"int32"), 0, False, )
paddle.median(Tensor([3, 715827883, 2],"float16"), 1, True, mode="min", )
paddle.median(Tensor([5, 456340276],"float32"), 0, True, mode="min", )
paddle.median(Tensor([1073741825, 4],"float16"), 0, True, mode="min", )
paddle.median(Tensor([3, 380283564, 2],"int32"), 0, True, )
paddle.median(Tensor([3, 4, 190141782],"float32"), 1, True, )
paddle.median(Tensor([3, 4, 357913942],"float16"), 1, False, )
paddle.median(x=Tensor([4, 142606337, 4],"float32"), axis=0, keepdim=False, )
paddle.median(Tensor([285212673, 4, 2],"float32"), -1, True, )
paddle.median(Tensor([536870913, 4, 2],"float16"), 1, False, )
paddle.median(Tensor([1073741825, 4],"float16"), -1, True, )
paddle.median(Tensor([1073741825, 4],"float16"), 1, False, )
paddle.median(Tensor([285212673, 4, 2],"float32"), 2, False, )
paddle.median(Tensor([3, 4, 190141782],"float32"), 1, False, )
paddle.median(Tensor([536870913, 4, 2],"float16"), 0, False, mode="min", )
paddle.median(Tensor([285212673, 4, 2],"float32"), 1, False, )
paddle.median(Tensor([285212673, 4, 2],"float32"), 2, True, )
paddle.median(Tensor([285212673, 4, 2],"int32"), -1, True, )
paddle.meshgrid(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([2281701379],"float32"),], )
paddle.meshgrid(list[Tensor([2281701379],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.meshgrid(list[Tensor([1],"float32"),Tensor([2281701379],"float32"),Tensor([1],"float32"),], )
paddle.meshgrid(list[Tensor([2],"float16"),Tensor([4294967297],"float16"),Tensor([1],"float16"),], )
paddle.meshgrid(list[Tensor([4294967297],"float16"),Tensor([2],"float16"),Tensor([1],"float16"),], )
paddle.min(Tensor([1073741825, 4],"float16"), axis=1, keepdim=True, )
paddle.min(Tensor([4294967297],"float16"), axis=tuple(0,), )
paddle.min(Tensor([2910334, 1, 28, 28],"float32"), )
paddle.min(Tensor([128, 17825793],"float32"), axis=1, keepdim=True, )
paddle.min(x=Tensor([2, 1140850690],"float32"), axis=Tensor([1],"int32"), )
paddle.min(Tensor([3, 760567127],"float32"), axis=None, )
paddle.min(x=Tensor([2, 1140850690],"float32"), axis=-2, )
paddle.min(Tensor([570425345, 2, 2],"int32"), tuple(0,1,), False, )
paddle.min(Tensor([71303169, 32],"float32"), list[1,], )
paddle.min(x=Tensor([2, 1140850690],"float32"), axis=0, keepdim=True, )
paddle.min(Tensor([10, 5, 9, 9544372],"float16"), Tensor([2],"int64"), )
paddle.min(Tensor([1073741825, 4],"float16"), None, False, )
paddle.min(Tensor([10, 5302429, 9, 9],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([10, 5302429, 9, 9],"float16"), Tensor([2],"int64"), )
paddle.min(Tensor([10, 10, 9, 4772186],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([2281701379],"float32"), axis=0, )
paddle.min(Tensor([4, 1073741825],"float16"), axis=0, )
paddle.min(Tensor([9313067, 245],"float32"), axis=0, )
paddle.min(Tensor([10, 5, 9544372, 9],"float16"), Tensor([2],"int64"), )
paddle.min(Tensor([16, 142606337],"float32"), list[1,], )
paddle.min(x=Tensor([2, 1140850690],"float32"), axis=list[-2,1,], keepdim=False, )
paddle.min(x=Tensor([760567127, 3],"float32"), axis=Tensor([1],"int32"), )
paddle.min(Tensor([760567127, 3],"float32"), )
paddle.min(Tensor([2, 2147483649],"float16"), 1, True, )
paddle.min(Tensor([2, 1140850690],"float32"), )
paddle.min(Tensor([5302429, 10, 9, 9],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([2281701379],"int64"), )
paddle.min(Tensor([4294967297],"float16"), axis=0, )
paddle.min(Tensor([128, 33554433],"float16"), axis=1, keepdim=True, )
paddle.min(Tensor([10604858, 5, 9, 9],"float16"), Tensor([2],"int64"), )
paddle.min(Tensor([2147483649, 2],"float16"), axis=0, )
paddle.min(x=Tensor([2, 1140850690],"float32"), )
paddle.min(Tensor([2, 2147483649],"float16"), None, False, )
paddle.min(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.min(Tensor([2, 2147483649],"float16"), 0, False, )
paddle.min(Tensor([16, 142606337],"float32"), list[0,], )
paddle.min(x=Tensor([1140850690, 2],"float32"), axis=list[-2,1,], keepdim=False, )
paddle.min(Tensor([2, 570425345, 2],"int32"), tuple(0,1,), False, )
paddle.min(Tensor([1073741825, 4],"float16"), 1, True, )
paddle.min(x=Tensor([2, 1140850690],"float32"), axis=1, )
paddle.min(Tensor([71303169, 32],"float32"), list[0,], )
paddle.min(x=Tensor([760567127, 3],"float32"), axis=0, keepdim=True, )
paddle.min(Tensor([1073741825, 4],"float16"), axis=0, )
paddle.min(Tensor([8, 536870913],"float16"), axis=0, )
paddle.min(x=Tensor([760567127, 3],"float32"), axis=-2, )
paddle.min(Tensor([64, 1, 1273271, 28],"float32"), )
paddle.min(Tensor([456340276, 5],"float32"), axis=None, )
paddle.min(Tensor([1073741825, 4],"float16"), 0, False, )
paddle.min(Tensor([10, 10, 4772186, 9],"float16"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([570425345, 4],"float32"), axis=1, keepdim=True, )
paddle.min(Tensor([64, 1, 28, 1273271],"float32"), )
paddle.min(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.min(Tensor([2, 1140850690],"float32"), axis=0, )
paddle.min(Tensor([64, 45474, 28, 28],"float32"), )
paddle.min(x=Tensor([760567127, 3],"float32"), axis=1, )
paddle.min(Tensor([2, 2, 570425345],"int32"), tuple(0,1,), False, )
paddle.min(x=Tensor([760567127, 3],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.minimum(Tensor([1, 1, 634159],"float32"), Tensor([1, 3598, 634159],"float32"), )
paddle.minimum(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 46996, 24276, 2],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.minimum(Tensor([7605672, 3, 10, 10, 1],"float32"), Tensor([7605672, 3, 10, 10, 1],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([317080, 3598, 2],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.minimum(Tensor([1901418, 3, 20, 20, 1],"float32"), Tensor([1901418, 3, 20, 20, 1],"float32"), )
paddle.minimum(x=Tensor([1, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.minimum(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([46996, 1, 24276, 2],"float32"), )
paddle.minimum(Tensor([152113426, 15],"float32"), Tensor([15],"float32"), )
paddle.minimum(Tensor([12, 3, 40, 40, 1],"float32"), Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.minimum(Tensor([1, 1140850690, 2],"float32"), Tensor([1, 1140850690, 2],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), )
paddle.minimum(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.minimum(Tensor([1, 1, 61906],"float32"), Tensor([1, 36858, 61906],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 83837],"float32"), Tensor([1, 1, 27216, 83837],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 41919, 27216, 2],"float32"), )
paddle.minimum(Tensor([12, 3, 3169030, 20, 1],"float32"), Tensor([12, 3, 3169030, 20, 1],"float32"), )
paddle.minimum(Tensor([1, 1, 59417],"float32"), Tensor([1, 38402, 59417],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([110924, 1, 10285, 2],"float32"), )
paddle.minimum(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), )
paddle.minimum(Tensor([1, 1, 1, 221848],"float32"), Tensor([1, 1, 10285, 221848],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([1140850690, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 221848],"float32"), Tensor([1, 10285, 221848],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 3169030, 1],"float32"), Tensor([12, 3, 20, 3169030, 1],"float32"), )
paddle.minimum(x=Tensor([715827883, 2, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.minimum(Tensor([12, 475355, 20, 20, 1],"float32"), Tensor([12, 475355, 20, 20, 1],"float32"), )
paddle.minimum(Tensor([12, 118839, 40, 40, 1],"float32"), Tensor([12, 118839, 40, 40, 1],"float32"), )
paddle.minimum(x=Tensor([1, 2, 1, 3],"float16"), y=Tensor([1, 1431655766, 3],"float16"), )
paddle.minimum(Tensor([380284],"float32"), Tensor([30, 200, 380284],"float32"), )
paddle.minimum(Tensor([475355, 3, 40, 40, 1],"float32"), Tensor([475355, 3, 40, 40, 1],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([41919, 1, 27216, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 1140850690, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2213096],"float32"), Tensor([1031, 2213096],"float32"), )
paddle.minimum(Tensor([1, 1, 2279422],"float32"), Tensor([1001, 2279422],"float32"), )
paddle.minimum(Tensor([1, 1, 2272611],"float32"), Tensor([1004, 2272611],"float32"), )
paddle.minimum(Tensor([40],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.minimum(Tensor([12, 3, 40, 40, 39613],"float32"), Tensor([12, 3, 40, 40, 39613],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.minimum(Tensor([10, 228170138],"float32"), Tensor([228170138],"float32"), )
paddle.minimum(Tensor([1, 1, 2277148],"float32"), Tensor([1002, 2277148],"float32"), )
paddle.minimum(Tensor([40],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.minimum(Tensor([12, 3, 1584515, 40, 1],"float32"), Tensor([12, 3, 1584515, 40, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 6338060, 10, 1],"float32"), Tensor([12, 3, 6338060, 10, 1],"float32"), )
paddle.minimum(x=Tensor([1, 2, 1, 2147483649],"float16"), y=Tensor([1, 2, 2147483649],"float16"), )
paddle.minimum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([30953, 36858, 2],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 6338060, 1],"float32"), Tensor([12, 3, 10, 6338060, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 20, 158452],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([37623, 1, 30324, 2],"float32"), )
paddle.minimum(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([110924, 10285, 2],"float32"), )
paddle.minimum(Tensor([200, 40],"float32"), Tensor([285213, 200, 40],"float32"), )
paddle.minimum(Tensor([200, 380284],"float32"), Tensor([30, 200, 380284],"float32"), )
paddle.minimum(Tensor([4, 20, 53687092],"float16"), Tensor([4, 20, 53687092],"float16"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 110924, 10285, 2],"float32"), )
paddle.minimum(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.minimum(Tensor([10737419, 20, 20],"float16"), Tensor([10737419, 20, 20],"float16"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 1140850690, 2],"float32"), )
paddle.minimum(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 40, 40, 39613],"float32"), Tensor([12, 3, 40, 40, 1],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 37623, 30324, 2],"float32"), )
paddle.minimum(Tensor([1901418, 40],"float32"), Tensor([30, 1901418, 40],"float32"), )
paddle.minimum(Tensor([12, 1901418, 10, 10, 1],"float32"), Tensor([12, 1901418, 10, 10, 1],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([1, 1140850690, 2],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 20, 158452],"float32"), Tensor([12, 3, 20, 20, 158452],"float32"), )
paddle.minimum(Tensor([152113426, 15],"float32"), Tensor([152113426, 15],"float32"), )
paddle.minimum(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.minimum(Tensor([4, 53687092, 20],"float16"), Tensor([4, 53687092, 20],"float16"), )
paddle.minimum(x=Tensor([1, 1431655766, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.minimum(Tensor([1, 1, 1, 75245],"float32"), Tensor([1, 1, 30324, 75245],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([29709, 38402, 2],"float32"), )
paddle.minimum(Tensor([12, 3, 40, 1584515, 1],"float32"), Tensor([12, 3, 40, 1584515, 1],"float32"), )
paddle.minimum(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.mm(Tensor([1, 10],"float16"), Tensor([10, 429496730],"float16"), )
paddle.mm(Tensor([1984, 6, 49, 32],"float32"), Tensor([1984, 6, 32, 49],"float32"), )
paddle.mm(Tensor([24, 371371, 256],"float32"), Tensor([24, 256, 96],"float32"), )
paddle.mm(Tensor([60, 24, 49, 49],"float32"), Tensor([60, 24, 49, 32],"float32"), )
paddle.mm(Tensor([128, 24, 49, 32],"float16"), Tensor([128, 24, 32, 43691],"float16"), )
paddle.mm(Tensor([64, 12, 49, 49],"float32"), Tensor([64, 12, 49, 32],"float32"), )
paddle.mm(Tensor([2048, 6, 49, 49],"float16"), Tensor([2048, 6, 49, 7134],"float16"), )
paddle.mm(Tensor([1024, 6, 49, 7579],"float32"), Tensor([1024, 6, 7579, 49],"float32"), )
paddle.mm(Tensor([20, 10],"float16"), Tensor([10, 429496730],"float16"), )
paddle.mm(input=Tensor([760567127, 3],"float32"), mat2=Tensor([3, 2],"float32"), )
paddle.mm(Tensor([960, 6, 49, 49],"float32"), Tensor([960, 6, 49, 32],"float32"), )
paddle.mm(Tensor([4, 2228225, 256],"float32"), Tensor([4, 256, 512],"float32"), )
paddle.mm(Tensor([256, 16, 144, 144],"float32"), Tensor([256, 16, 144, 32],"float32"), )
paddle.mm(Tensor([298138, 6, 49, 49],"float16"), Tensor([298138, 6, 49, 32],"float16"), )
paddle.mm(Tensor([4, 32, 144, 32],"float32"), Tensor([4, 32, 32, 144],"float32"), )
paddle.mm(Tensor([108, 6, 49, 49],"float32"), Tensor([108, 6, 49, 32],"float32"), )
paddle.mm(Tensor([128, 12, 49, 49],"float32"), Tensor([128, 12, 49, 32],"float32"), )
paddle.mm(Tensor([8, 1114113, 256],"float32"), Tensor([8, 256, 512],"float32"), )
paddle.mm(Tensor([256, 16, 144, 32],"float32"), Tensor([256, 16, 32, 144],"float32"), )
paddle.mm(Tensor([512, 12, 49, 32],"float32"), Tensor([512, 12, 32, 49],"float32"), )
paddle.mm(Tensor([16, 24, 49, 49],"float32"), Tensor([16, 24, 49, 32],"float32"), )
paddle.mm(Tensor([240, 16, 49, 32],"float32"), Tensor([240, 16, 32, 49],"float32"), )
paddle.mm(Tensor([48, 12, 144, 144],"float32"), Tensor([48, 12, 144, 32],"float32"), )
paddle.mm(Tensor([1024, 1422, 49, 49],"float32"), Tensor([1024, 1422, 49, 32],"float32"), )
paddle.mm(Tensor([240, 16, 144, 144],"float32"), Tensor([240, 16, 144, 32],"float32"), )
paddle.mm(Tensor([1024, 8, 144, 1935],"float32"), Tensor([1024, 8, 1935, 144],"float32"), )
paddle.mm(Tensor([60, 32, 49, 32],"float32"), Tensor([60, 32, 32, 49],"float32"), )
paddle.mm(Tensor([448, 12, 144, 144],"float32"), Tensor([448, 12, 144, 32],"float32"), )
paddle.mm(Tensor([8192, 3, 49, 32],"float32"), Tensor([8192, 3, 32, 49],"float32"), )
paddle.mm(input=Tensor([2, 3, 715827883],"float16"), mat2=Tensor([715827883],"float16"), )
paddle.mm(Tensor([1984, 6, 49, 49],"float32"), Tensor([1984, 6, 49, 32],"float32"), )
paddle.mm(input=Tensor([2, 3, 357913942, 2],"float16"), mat2=Tensor([2, 3, 2, 3],"float16"), )
paddle.mm(Tensor([112, 24, 144, 144],"float32"), Tensor([112, 24, 144, 32],"float32"), )
paddle.mm(Tensor([17409, 1, 256],"float32"), Tensor([17409, 256, 512],"float32"), )
paddle.mm(Tensor([228170138, 10],"float32"), Tensor([10, 1],"float32"), )
paddle.mm(Tensor([1536, 3, 49, 32],"float32"), Tensor([1536, 3, 32, 49],"float32"), )
paddle.mm(Tensor([768, 4, 49, 49],"float32"), Tensor([768, 4, 49, 32],"float32"), )
paddle.mm(Tensor([256, 16, 49, 49],"float32"), Tensor([256, 16, 49, 32],"float32"), )
paddle.mm(Tensor([2048, 6, 49, 32],"float32"), Tensor([2048, 6, 32, 49],"float32"), )
paddle.mm(Tensor([512, 12, 144, 144],"float32"), Tensor([512, 12, 144, 32],"float32"), )
paddle.mm(Tensor([4096, 3, 49, 49],"float32"), Tensor([4096, 3, 49, 32],"float32"), )
paddle.mm(Tensor([64, 12, 49, 32],"float32"), Tensor([64, 12, 32, 49],"float32"), )
paddle.mm(Tensor([256, 6, 49, 32],"float32"), Tensor([256, 6, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 484, 144, 32],"float32"), Tensor([1024, 484, 32, 144],"float32"), )
paddle.mm(Tensor([128, 24, 49, 32],"float32"), Tensor([128, 24, 32, 49],"float32"), )
paddle.mm(Tensor([158386, 6, 49, 49],"float32"), Tensor([158386, 6, 49, 32],"float32"), )
paddle.mm(input=Tensor([2, 3, 715827883],"float16"), mat2=Tensor([2, 715827883, 2],"float16"), )
paddle.mm(Tensor([24, 24, 49, 49],"float32"), Tensor([24, 24, 49, 32],"float32"), )
paddle.mm(Tensor([256, 16, 49, 32],"float32"), Tensor([256, 16, 32, 49],"float32"), )
paddle.mm(input=Tensor([2, 536870913, 4],"float16"), mat2=Tensor([2, 4, 2],"float16"), )
paddle.mm(Tensor([2048, 6, 49, 32],"float16"), Tensor([2048, 6, 32, 10923],"float16"), )
paddle.mm(Tensor([1024, 8, 8705, 32],"float32"), Tensor([1024, 8, 32, 144],"float32"), )
paddle.mm(input=Tensor([2, 3, 1, 2],"float16"), mat2=Tensor([2, 3, 2, 357913942],"float16"), )
paddle.mm(Tensor([71303169, 32],"float32"), Tensor([32, 32],"float32"), )
paddle.mm(Tensor([240, 12, 49, 49],"float32"), Tensor([240, 12, 49, 32],"float32"), )
paddle.mm(Tensor([64, 12, 144, 144],"float32"), Tensor([64, 12, 144, 32],"float32"), )
paddle.mm(Tensor([28, 48, 144, 144],"float32"), Tensor([28, 48, 144, 32],"float32"), )
paddle.mm(Tensor([1536, 3, 49, 49],"float32"), Tensor([1536, 3, 49, 32],"float32"), )
paddle.mm(Tensor([363792, 4, 49, 32],"float32"), Tensor([363792, 4, 32, 49],"float32"), )
paddle.mm(Tensor([8, 1, 256],"float32"), Tensor([8, 256, 1114113],"float32"), )
paddle.mm(Tensor([2048, 8, 49, 5350],"float16"), Tensor([2048, 8, 5350, 49],"float16"), )
paddle.mm(Tensor([192, 6, 144, 144],"float32"), Tensor([192, 6, 144, 32],"float32"), )
paddle.mm(Tensor([1024, 6, 7579, 49],"float32"), Tensor([1024, 6, 49, 32],"float32"), )
paddle.mm(Tensor([108, 6, 49, 32],"float32"), Tensor([108, 6, 32, 49],"float32"), )
paddle.mm(Tensor([384, 6, 49, 32],"float32"), Tensor([384, 6, 32, 49],"float32"), )
paddle.mm(Tensor([60, 32, 144, 144],"float32"), Tensor([60, 32, 144, 32],"float32"), )
paddle.mm(Tensor([12, 32, 49, 49],"float32"), Tensor([12, 32, 49, 32],"float32"), )
paddle.mm(Tensor([512, 12, 144, 32],"float32"), Tensor([512, 12, 32, 144],"float32"), )
paddle.mm(Tensor([7936, 3, 49, 49],"float32"), Tensor([7936, 3, 49, 32],"float32"), )
paddle.mm(Tensor([3840, 4, 49, 32],"float32"), Tensor([3840, 4, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 8, 144, 144],"float32"), Tensor([1024, 8, 144, 32],"float32"), )
paddle.mm(Tensor([242528, 6, 49, 49],"float32"), Tensor([242528, 6, 49, 32],"float32"), )
paddle.mm(Tensor([12, 24, 144, 144],"float32"), Tensor([12, 24, 144, 32],"float32"), )
paddle.mm(input=Tensor([1431655766, 3],"float16"), mat2=Tensor([3, 2],"float16"), )
paddle.mm(Tensor([1984, 12, 49, 32],"float32"), Tensor([1984, 12, 32, 49],"float32"), )
paddle.mm(Tensor([4096, 3, 49, 32],"float32"), Tensor([4096, 3, 32, 49],"float32"), )
paddle.mm(input=Tensor([2, 3],"float32"), mat2=Tensor([3, 760567127],"float32"), )
paddle.mm(Tensor([4, 48, 144, 144],"float32"), Tensor([4, 48, 144, 32],"float32"), )
paddle.mm(Tensor([24, 1, 256],"float32"), Tensor([24, 256, 371371],"float32"), )
paddle.mm(Tensor([60, 32, 49, 49],"float32"), Tensor([60, 32, 49, 32],"float32"), )
paddle.mm(Tensor([1024, 6, 49, 32],"float32"), Tensor([1024, 6, 32, 11606],"float32"), )
paddle.mm(Tensor([363792, 4, 49, 49],"float32"), Tensor([363792, 4, 49, 32],"float32"), )
paddle.mm(Tensor([13755, 8, 144, 144],"float32"), Tensor([13755, 8, 144, 32],"float32"), )
paddle.mm(Tensor([496, 24, 49, 32],"float32"), Tensor([496, 24, 32, 49],"float32"), )
paddle.mm(Tensor([414, 3, 49, 32],"float32"), Tensor([414, 3, 32, 49],"float32"), )
paddle.mm(Tensor([48, 16, 49, 32],"float32"), Tensor([48, 16, 32, 49],"float32"), )
paddle.mm(input=Tensor([2, 3, 715827883],"float16"), mat2=Tensor([715827883, 5],"float16"), )
paddle.mm(Tensor([1024, 4, 49, 32],"float32"), Tensor([1024, 4, 32, 49],"float32"), )
paddle.mm(Tensor([16, 24, 144, 144],"float32"), Tensor([16, 24, 144, 32],"float32"), )
paddle.mm(Tensor([1024, 8, 144, 32],"float32"), Tensor([1024, 8, 32, 144],"float32"), )
paddle.mm(Tensor([4, 1, 1114113],"float32"), Tensor([4, 1114113, 512],"float32"), )
paddle.mm(Tensor([1024, 8, 49, 32],"float32"), Tensor([1024, 8, 32, 49],"float32"), )
paddle.mm(Tensor([30, 12, 49, 49],"float32"), Tensor([30, 12, 49, 32],"float32"), )
paddle.mm(Tensor([960, 8, 144, 32],"float32"), Tensor([960, 8, 32, 144],"float32"), )
paddle.mm(Tensor([256, 6, 144, 32],"float32"), Tensor([256, 6, 32, 144],"float32"), )
paddle.mm(Tensor([960, 6, 49, 32],"float32"), Tensor([960, 6, 32, 49],"float32"), )
paddle.mm(Tensor([7936, 6, 49, 32],"float32"), Tensor([7936, 6, 32, 49],"float32"), )
paddle.mm(Tensor([2048, 6, 144, 32],"float32"), Tensor([2048, 6, 32, 144],"float32"), )
paddle.mm(Tensor([128, 13976, 49, 49],"float16"), Tensor([128, 13976, 49, 32],"float16"), )
paddle.mm(Tensor([1024, 4, 49, 49],"float32"), Tensor([1024, 4, 49, 11369],"float32"), )
paddle.mod(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.mod(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.mod(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.mod(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.mod(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.mod(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.mod(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.mod(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.mod(Tensor([4, 570425345],"int32"), Tensor([4, 570425345],"int32"), )
paddle.mod(Tensor([2, 228170138, 5],"int32"), Tensor([2, 228170138, 5],"int32"), )
paddle.mod(Tensor([2, 4, 285212673],"int32"), Tensor([2, 4, 285212673],"int32"), )
paddle.mod(Tensor([456340276, 5],"int32"), Tensor([456340276, 5],"int32"), )
paddle.mod(Tensor([114085069, 4, 5],"int32"), Tensor([114085069, 4, 5],"int32"), )
paddle.mod(Tensor([57042535, 2, 4, 5],"int32"), Tensor([57042535, 2, 4, 5],"int32"), )
paddle.mod(Tensor([10, 228170138],"int32"), Tensor([10, 228170138],"int32"), )
paddle.mod(Tensor([1],"int32"), Tensor([2281701379],"int32"), )
paddle.mod(Tensor([2281701379],"int32"), Tensor([1],"int32"), )
paddle.mod(Tensor([6, 2, 38028357, 5],"int32"), Tensor([6, 2, 38028357, 5],"int32"), )
paddle.mod(Tensor([114085069, 20],"int32"), Tensor([114085069, 20],"int32"), )
paddle.mod(Tensor([6, 2, 4, 47535446],"int32"), Tensor([6, 2, 4, 47535446],"int32"), )
paddle.mod(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.mod(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.mod(Tensor([6, 19014179, 4, 5],"int32"), Tensor([6, 19014179, 4, 5],"int32"), )
paddle.mode(x=Tensor([3, 477218589, 3],"float16"), axis=1, keepdim=False, )
paddle.mode(x=Tensor([3, 2, 380283564],"float32"), )
paddle.mode(Tensor([2, 10, 214748365],"float16"), -1, keepdim=True, )
paddle.mode(x=Tensor([3, 2, 715827883],"float16"), )
paddle.mode(Tensor([2, 10, 214748365],"float16"), -1, )
paddle.mode(x=Tensor([3, 2, 380283564],"int64"), )
paddle.mode(Tensor([2, 214748365, 10],"float16"), 1, )
paddle.mode(Tensor([2, 214748365, 10],"float16"), 1, keepdim=True, )
paddle.mode(x=Tensor([3, 2, 715827883],"float16"), axis=2, keepdim=True, )
paddle.mode(x=Tensor([3, 2, 380283564],"int32"), )
paddle.moveaxis(x=Tensor([4, 2, 15339169, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(Tensor([10226113, 3, 4, 5, 7],"float16"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(x=Tensor([4, 570425345],"float32"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([20452226, 2, 3, 5, 7],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([1140850690, 2],"int32"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([4, 2, 3, 25565282, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(Tensor([4, 178956971, 6],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(x=Tensor([4, 2, 3, 5, 35791395],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 3, 178956971],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([1140850690, 2],"float32"), source=0, destination=1, )
paddle.moveaxis(Tensor([357913942, 3, 4],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(x=Tensor([4, 1073741825],"float16"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([4, 2, 107374183, 5],"float16"), source=0, destination=2, )
paddle.moveaxis(Tensor([2, 3, 4, 25565282, 7],"float16"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(x=Tensor([4, 2, 3, 25565282, 7],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 570425345],"int64"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([4, 570425345],"int32"), source=0, destination=1, )
paddle.moveaxis(Tensor([102261127, 7, 6],"float16"), list[0,2,], list[1,2,], )
paddle.moveaxis(Tensor([4, 7, 153391690],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([2, 15339169, 4, 5, 7],"float16"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(x=Tensor([2147483649, 2],"float16"), source=0, destination=1, )
paddle.moveaxis(x=Tensor([143165577, 2, 3, 5],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 71582789, 3, 5],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([20452226, 2, 3, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(Tensor([4, 178956971, 6],"float16"), list[0,2,], list[1,2,], )
paddle.moveaxis(x=Tensor([4, 2, 3, 5, 35791395],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(Tensor([2, 3, 4, 5, 35791395],"float16"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(x=Tensor([4, 2, 536870913],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 2, 15339169, 5, 7],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([1140850690, 2],"int64"), source=0, destination=1, )
paddle.moveaxis(Tensor([102261127, 7, 6],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([2, 3, 20452226, 5, 7],"float16"), list[0,4,3,2,], list[1,3,2,0,], )
paddle.moveaxis(Tensor([5, 214748365, 4],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([5, 3, 286331154],"float16"), list[1,2,], list[1,2,], )
paddle.moveaxis(Tensor([4, 7, 153391690],"float16"), list[0,2,], list[1,2,], )
paddle.moveaxis(x=Tensor([4, 10226113, 3, 5, 7],"float16"), source=tuple(0,1,), destination=tuple(2,3,), )
paddle.moveaxis(x=Tensor([4, 357913942, 3],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([715827883, 2, 3],"float16"), source=0, destination=2, )
paddle.moveaxis(x=Tensor([4, 10226113, 3, 5, 7],"float16"), source=0, destination=2, )
paddle.multigammaln(Tensor([114085069, 20],"float32"), 2, )
paddle.multigammaln(Tensor([214748365, 20],"float16"), 2, )
paddle.multigammaln(Tensor([10, 429496730],"float16"), 2, )
paddle.multigammaln(Tensor([10, 228170138],"float32"), 2, )
paddle.multiplex(inputs=list[Tensor([2, 1140850690],"float32"),Tensor([2, 1140850690],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([7, 4],"float32"),Tensor([570425345, 4],"float32"),], index=Tensor([6, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),Tensor([760567127, 3],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 1140850690],"float32"),Tensor([2, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([760567127, 3],"float32"),Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([760567127, 3],"float32"),Tensor([3, 3],"float32"),Tensor([3, 3],"float32"),], index=Tensor([3, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([3, 3],"float32"),Tensor([760567127, 3],"float32"),Tensor([3, 3],"float32"),], index=Tensor([3, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([3, 760567127],"float32"),Tensor([3, 3],"float32"),Tensor([3, 3],"float32"),], index=Tensor([3, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([4, 4],"float32"),Tensor([570425345, 4],"float32"),], index=Tensor([4, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([3, 3],"float32"),Tensor([3, 3],"float32"),Tensor([760567127, 3],"float32"),], index=Tensor([3, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 4],"float32"),Tensor([570425345, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([570425345, 4],"float32"),Tensor([2, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([570425345, 4],"float32"),Tensor([4, 4],"float32"),], index=Tensor([4, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 1140850690],"float32"),Tensor([2, 1140850690],"float32"),Tensor([2, 1140850690],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 3],"float32"),Tensor([2, 3],"float32"),Tensor([2, 1140850690],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([570425345, 4],"float32"),Tensor([7, 4],"float32"),], index=Tensor([6, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 3],"float32"),Tensor([760567127, 3],"float32"),Tensor([2, 3],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([7, 325957340],"float32"),Tensor([7, 325957340],"float32"),], index=Tensor([6, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([570425345, 4],"float32"),Tensor([4, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([570425345, 4],"float32"),Tensor([570425345, 4],"float32"),], index=Tensor([6, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([2, 4],"float32"),Tensor([2, 1140850690],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiplex(inputs=list[Tensor([4, 4],"float32"),Tensor([570425345, 4],"float32"),], index=Tensor([2, 1],"int32"), )
paddle.multiply(Tensor([5568, 8, 2, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(Tensor([8, 281, 256],"float32"), Tensor([8, 281, 256],"float32"), name=None, )
paddle.multiply(Tensor([4296, 8, 1, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(Tensor([30, 173, 256],"float32"), Tensor([30, 173, 256],"float32"), name=None, )
paddle.multiply(Tensor([4848, 8, 2, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(x=Tensor([8, 672, 16, 16],"float32"), y=Tensor([8, 672, 1, 1],"float32"), )
paddle.multiply(x=Tensor([512, 116, 14, 14],"float32"), y=Tensor([512, 116, 1, 1],"float32"), )
paddle.multiply(Tensor([30, 140, 256],"float32"), Tensor([30, 140, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([1, 1024, 123791, 18],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(x=Tensor([64, 48, 24, 24],"float32"), y=Tensor([64, 48, 1, 1],"float32"), )
paddle.multiply(Tensor([8912897, 1, 256],"float32"), Tensor([8912897, 1, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 1, 1, 2, 3],"float32"), Tensor([2, 1, 1140850690, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([30, 147, 256],"float32"), Tensor([30, 147, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 142, 256],"float32"), Tensor([30, 142, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 1, 1, 380283564, 3],"float32"), Tensor([2, 1, 1, 1, 1],"float32"), name=None, )
paddle.multiply(x=Tensor([90, 512, 15, 15],"float32"), y=Tensor([90, 512, 1, 1],"float32"), )
paddle.multiply(x=Tensor([128, 480, 14, 14],"float32"), y=Tensor([128, 480, 1, 1],"float32"), )
paddle.multiply(x=Tensor([64, 120, 18, 18],"float32"), y=Tensor([64, 120, 1, 1],"float32"), )
paddle.multiply(Tensor([128, 112, 14, 14],"float32"), Tensor([128, 1, 1, 1],"float32"), )
paddle.multiply(Tensor([6128, 8, 2, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(x=Tensor([4, 672, 32, 64],"float32"), y=Tensor([4, 672, 1, 1],"float32"), )
paddle.multiply(Tensor([30, 222, 256],"float32"), Tensor([30, 222, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 263, 256],"float32"), Tensor([8, 263, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([128, 512, 28, 28],"float32"), y=Tensor([128, 512, 1, 1],"float32"), )
paddle.multiply(Tensor([6296, 8, 1, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(x=Tensor([4, 640, 28, 28],"float32"), y=Tensor([4, 640, 1, 1],"float32"), )
paddle.multiply(x=Tensor([256, 512, 7, 7],"float32"), y=Tensor([256, 512, 1, 1],"float32"), )
paddle.multiply(Tensor([30, 98, 256],"float32"), Tensor([30, 98, 256],"float32"), name=None, )
paddle.multiply(Tensor([128, 112, 14, 21400],"float16"), Tensor([128, 1, 1, 1],"float16"), )
paddle.multiply(x=Tensor([8, 384, 20, 20],"float32"), y=Tensor([8, 384, 1, 1],"float32"), )
paddle.multiply(Tensor([257, 256, 256, 256],"float16"), Tensor([257, 256, 1, 1],"float16"), name=None, )
paddle.multiply(Tensor([8, 277, 256],"float32"), Tensor([8, 277, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 94, 256],"float32"), Tensor([30, 94, 256],"float32"), name=None, )
paddle.multiply(Tensor([128, 93431],"float32"), Tensor([128, 93431],"float32"), )
paddle.multiply(x=Tensor([256, 384, 7, 7],"float32"), y=Tensor([256, 384, 1, 1],"float32"), )
paddle.multiply(x=Tensor([256, 128, 7, 7],"float32"), y=Tensor([256, 128, 1, 1],"float32"), )
paddle.multiply(Tensor([2, 1, 190141782, 2, 3],"float32"), Tensor([2, 1, 190141782, 1, 1],"float32"), name=None, )
paddle.multiply(x=Tensor([8, 512, 20, 20],"float32"), y=Tensor([8, 512, 1, 1],"float32"), )
paddle.multiply(x=Tensor([512, 512, 7, 7],"float32"), y=Tensor([512, 512, 1, 1],"float32"), )
paddle.multiply(Tensor([128, 171197, 14, 14],"float16"), Tensor([128, 1, 1, 1],"float16"), )
paddle.multiply(x=Tensor([4, 480, 8, 80],"float32"), y=Tensor([4, 480, 1, 1],"float32"), )
paddle.multiply(Tensor([4, 256, 256, 16385],"float16"), Tensor([4, 256, 1, 1],"float16"), name=None, )
paddle.multiply(Tensor([7576, 8, 2, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(Tensor([3416, 8, 1, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(Tensor([7576, 8, 1, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(Tensor([8, 271, 256],"float32"), Tensor([8, 271, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([256, 88, 7, 7],"float32"), y=Tensor([256, 88, 1, 1],"float32"), )
paddle.multiply(x=Tensor([48, 1280, 12, 12],"float32"), y=Tensor([48, 1280, 1, 1],"float32"), )
paddle.multiply(Tensor([2, 190141782, 1, 2, 3],"float32"), Tensor([2, 190141782, 1, 1, 1],"float32"), name=None, )
paddle.multiply(Tensor([8, 262, 256],"float32"), Tensor([8, 262, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 74, 256],"float32"), Tensor([30, 74, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([24, 256, 25, 19],"float32"), y=Tensor([24, 256, 1, 1],"float32"), )
paddle.multiply(Tensor([4536, 8, 2, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(x=Tensor([512, 16, 56, 56],"float32"), y=Tensor([512, 16, 1, 1],"float32"), )
paddle.multiply(Tensor([2952, 8, 1, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(Tensor([30, 141, 256],"float32"), Tensor([30, 141, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([64, 960, 14, 14],"float32"), y=Tensor([64, 960, 1, 1],"float32"), )
paddle.multiply(x=Tensor([48, 1280, 13, 13],"float32"), y=Tensor([48, 1280, 1, 1],"float32"), )
paddle.multiply(Tensor([30, 193, 256],"float32"), Tensor([30, 193, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 95, 256],"float32"), Tensor([30, 95, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 115, 256],"float32"), Tensor([30, 115, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([1, 1],"float32"), y=Tensor([187679, 12158],"float32"), )
paddle.multiply(Tensor([30, 113, 256],"float32"), Tensor([30, 113, 256],"float32"), name=None, )
paddle.multiply(Tensor([8, 256, 256],"float32"), Tensor([8, 256, 256],"float32"), name=None, )
paddle.multiply(Tensor([3784, 8, 2, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(x=Tensor([8, 1024, 22, 22],"float32"), y=Tensor([8, 1024, 1, 1],"float32"), )
paddle.multiply(x=Tensor([60, 64, 28, 28],"float32"), y=Tensor([60, 64, 1, 1],"float32"), )
paddle.multiply(x=Tensor([256, 184, 14, 14],"float32"), y=Tensor([256, 184, 1, 1],"float32"), )
paddle.multiply(x=Tensor([8, 672, 18, 18],"float32"), y=Tensor([8, 672, 1, 1],"float32"), )
paddle.multiply(Tensor([30, 189, 256],"float32"), Tensor([30, 189, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 71, 256],"float32"), Tensor([30, 71, 256],"float32"), name=None, )
paddle.multiply(Tensor([5552, 8, 1, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(x=Tensor([6878, 1024, 18, 18],"float32"), y=Tensor([1, 1024, 1, 1],"float32"), )
paddle.multiply(Tensor([5088, 8, 2, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(Tensor([30, 114, 256],"float32"), Tensor([30, 114, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 92, 256],"float32"), Tensor([30, 92, 256],"float32"), name=None, )
paddle.multiply(Tensor([3352, 8, 1, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(Tensor([104, 93431],"float32"), Tensor([104, 93431],"float32"), )
paddle.multiply(Tensor([6088, 8, 2, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(x=Tensor([1024, 96, 14, 14],"float32"), y=Tensor([1024, 96, 1, 1],"float32"), )
paddle.multiply(x=Tensor([128, 640, 7, 7],"float32"), y=Tensor([128, 640, 1, 1],"float32"), )
paddle.multiply(Tensor([30, 336, 256],"float32"), Tensor([30, 336, 256],"float32"), name=None, )
paddle.multiply(Tensor([6376, 8, 1, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(x=Tensor([512, 768, 7, 7],"float32"), y=Tensor([512, 768, 1, 1],"float32"), )
paddle.multiply(x=Tensor([128, 720, 7, 7],"float32"), y=Tensor([128, 720, 1, 1],"float32"), )
paddle.multiply(Tensor([3440, 8, 2, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(Tensor([30, 108, 256],"float32"), Tensor([30, 108, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([60, 336, 7, 7],"float32"), y=Tensor([60, 336, 1, 1],"float32"), )
paddle.multiply(Tensor([30, 457, 256],"float32"), Tensor([30, 457, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 150, 256],"float32"), Tensor([30, 150, 256],"float32"), name=None, )
paddle.multiply(Tensor([30, 116, 256],"float32"), Tensor([30, 116, 256],"float32"), name=None, )
paddle.multiply(Tensor([2, 1, 1, 380283564, 3],"float32"), Tensor([2, 1, 1, 380283564, 1],"float32"), name=None, )
paddle.multiply(Tensor([3440, 8, 1, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(Tensor([8, 246, 256],"float32"), Tensor([8, 246, 256],"float32"), name=None, )
paddle.multiply(x=Tensor([64, 240, 14, 14],"float32"), y=Tensor([64, 240, 1, 1],"float32"), )
paddle.multiply(Tensor([5848, 8, 2, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(Tensor([2280, 8, 2, 80],"float32"), Tensor([1, 8, 1, 80],"float32"), )
paddle.multiply(x=Tensor([8, 960, 19, 19],"float32"), y=Tensor([8, 960, 1, 1],"float32"), )
paddle.multiply(Tensor([30, 302, 256],"float32"), Tensor([30, 302, 256],"float32"), name=None, )
paddle.multiply(Tensor([1, 35651585, 8, 8],"float32"), Tensor([1, 1, 8, 8],"float32"), )
paddle.mv(Tensor([190141782, 12],"float32"), Tensor([12],"float32"), )
paddle.mv(Tensor([126761188, 18],"float32"), Tensor([18],"float32"), )
paddle.mv(Tensor([3, 760567127],"float32"), Tensor([760567127],"float32"), )
paddle.mv(x=Tensor([3, 760567127],"float32"), vec=Tensor([760567127],"float32"), )
paddle.mv(Tensor([380283564, 6],"float32"), Tensor([6],"float32"), )
paddle.nan_to_num(Tensor([400, 10737419],"float16"), neginf=-2.220446049250313e-16, )
paddle.nan_to_num(Tensor([2, 1140850690],"float32"), 1.0, 2.0, None, )
paddle.nan_to_num(Tensor([760567127, 3],"float32"), )
paddle.nan_to_num(Tensor([4294967297, 1],"float16"), neginf=-2.220446049250313e-16, )
paddle.nan_to_num(Tensor([760567127, 3],"float32"), 1.0, None, -10.0, )
paddle.nan_to_num(Tensor([570425345, 4],"float32"), )
paddle.nan_to_num(Tensor([760567127, 3],"float32"), 1.0, 2.0, None, )
paddle.nan_to_num(Tensor([91, 47197443],"float16"), neginf=-2.220446049250313e-16, )
paddle.nan_to_num(Tensor([2, 1140850690],"float32"), 1.0, None, None, )
paddle.nan_to_num(Tensor([1948, 1171305],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([4294967297],"float16"), neginf=-2.220446049250313e-16, )
paddle.nan_to_num(Tensor([1140850690, 2],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([2, 1140850690],"float32"), 1.0, 100.0, -10.0, )
paddle.nan_to_num(Tensor([148, 5, 3083381],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([760567127, 3],"float32"), 1.0, 100.0, -10.0, )
paddle.nan_to_num(Tensor([760567127, 3],"float32"), 1.0, None, None, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), None, True, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), list[], False, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), -1, False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), -1, False, )
paddle.nanmean(Tensor([760567127, 3],"float32"), None, True, )
paddle.nanmean(Tensor([760567127, 3],"float32"), None, False, )
paddle.nanmean(Tensor([760567127, 3],"float32"), 1, False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), None, True, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), None, False, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), list[], False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), 2, True, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), -1, False, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), 2, True, )
paddle.nanmean(Tensor([760567127, 3],"float32"), 0, True, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), None, False, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), list[], False, )
paddle.nanmean(Tensor([2281701379],"float32"), axis=0, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), -1, False, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), None, False, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), None, False, )
paddle.nanmean(Tensor([3, 760567127],"float32"), axis=None, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), None, False, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), 2, True, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), 1, False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), 2, True, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), list[], False, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), tuple(0,1,), False, )
paddle.nanmean(Tensor([760567127, 3],"float32"), tuple(0,1,), False, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), None, True, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), None, True, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([760567127, 3],"float32"), -1, False, )
paddle.nanmean(Tensor([2, 57042535, 4, 5],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), 0, True, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), -1, False, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([456340276, 5],"float32"), axis=None, )
paddle.nanmean(Tensor([38028357, 3, 4, 5],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.nanmean(Tensor([2, 3, 76056713, 5],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([2, 3, 4, 95070891],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([2, 1140850690],"float32"), None, True, )
paddle.nanmedian(Tensor([2, 57042535, 4, 5],"float32"), axis=2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([38028357, 3, 4, 5],"float32"), axis=2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 57042535, 4, 5],"float32"), axis=-1, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,1,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([22817014, 100],"float32"), axis=1, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 95070891],"float32"), axis=2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([38028357, 3, 4, 5],"float32"), axis=-2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,-1,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,-1,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,3,], keepdim=False, mode="min", )
paddle.nanmedian(Tensor([38028357, 3, 4, 5],"float32"), axis=tuple(1,2,3,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 57042535, 4, 5],"float32"), axis=-2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 95070891],"float32"), axis=-2, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 4, 95070891],"float32"), axis=tuple(1,2,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([2, 3, 76056713, 5],"float32"), axis=-1, keepdim=False, mode="min", )
paddle.nanmedian(Tensor([38028357, 3, 4, 5],"float32"), axis=tuple(1,2,), keepdim=False, mode="min", )
paddle.nanmedian(Tensor([38028357, 3, 4, 5],"float32"), axis=-1, keepdim=False, mode="min", )
paddle.nanquantile(Tensor([325957340, 7],"float32"), q=0.5, axis=1, )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([3, 760567127],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([456340276, 5],"float32"), axis=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2281701379],"float32"), axis=list[0,], keepdim=False, name=None, )
paddle.nansum(Tensor([2281701379],"float32"), axis=0, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=tuple(0,1,), keepdim=False, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=list[0,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=list[0,], keepdim=True, name=None, )
paddle.nansum(Tensor([570425345, 4],"float32"), )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=list[1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 1140850690],"float32"), )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=tuple(0,1,), keepdim=False, name=None, )
paddle.nansum(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.nansum(Tensor([3, 760567127],"float32"), axis=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([456340276, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([760567127, 3],"float32"), axis=list[1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 95070891],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 1140850690],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([456340276, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 57042535, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 76056713, 5],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([3, 760567127],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([38028357, 3, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.neg(Tensor([10, 228170138, 1],"float32"), )
paddle.neg(Tensor([536870913, 8],"int8"), )
paddle.neg(Tensor([32, 71303169],"int32"), )
paddle.neg(x=Tensor([380283564, 6],"int32"), )
paddle.neg(x=Tensor([6, 380283564],"int32"), )
paddle.neg(Tensor([8, 8912897, 32],"float32"), )
paddle.neg(x=Tensor([6, 119304648, 6],"float16"), )
paddle.neg(x=Tensor([119304648, 6, 6],"float16"), )
paddle.neg(Tensor([114085069, 20, 1],"float32"), )
paddle.neg(Tensor([536870913, 8],"int16"), )
paddle.neg(Tensor([8, 16, 17825793],"float32"), )
paddle.neg(Tensor([285212673, 8],"int32"), )
paddle.neg(x=Tensor([715827883, 6],"float16"), )
paddle.neg(Tensor([32, 134217729],"int8"), )
paddle.neg(x=Tensor([6, 6, 119304648],"float16"), )
paddle.neg(Tensor([4456449, 16, 32],"float32"), )
paddle.neg(Tensor([10, 20, 11408507],"float32"), )
paddle.neg(x=Tensor([380283564, 6],"float32"), )
paddle.neg(x=Tensor([6, 380283564],"float32"), )
paddle.neg(Tensor([32, 134217729],"int16"), )
paddle.neg(x=Tensor([715827883, 6],"int8"), )
paddle.neg(x=Tensor([6, 715827883],"float16"), )
paddle.neg(x=Tensor([715827883, 6],"int16"), )
paddle.neg(Tensor([536870913, 8],"float16"), )
paddle.neg(x=Tensor([6, 715827883],"int8"), )
paddle.neg(Tensor([285212673, 8],"float32"), )
paddle.neg(x=Tensor([6, 715827883],"int16"), )
paddle.neg(Tensor([32, 71303169],"float32"), )
paddle.neg(Tensor([32, 134217729],"float16"), )
paddle.negative(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.negative(Tensor([2, 57042535, 4, 5],"int32"), )
paddle.negative(Tensor([2, 57042535, 4, 5],"float32"), )
paddle.negative(Tensor([71582789, 3, 4, 5],"int16"), )
paddle.negative(Tensor([2, 3, 4, 95070891],"int32"), )
paddle.negative(Tensor([2, 3, 4, 178956971],"int16"), )
paddle.negative(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.negative(Tensor([2, 107374183, 4, 5],"int16"), )
paddle.negative(Tensor([2, 3, 76056713, 5],"int32"), )
paddle.negative(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.negative(Tensor([2, 3, 4, 95070891],"float32"), )
paddle.negative(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.negative(Tensor([38028357, 3, 4, 5],"float32"), )
paddle.negative(Tensor([2, 3, 76056713, 5],"float32"), )
paddle.negative(Tensor([2, 3, 143165577, 5],"int16"), )
paddle.negative(Tensor([38028357, 3, 4, 5],"int32"), )
paddle.nextafter(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.nextafter(Tensor([2, 3, 4, 95070891],"float32"), Tensor([2, 3, 4, 95070891],"float32"), )
paddle.nextafter(Tensor([380283564, 3, 2],"float64"), Tensor([380283564, 3, 2],"float32"), )
paddle.nextafter(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.nextafter(Tensor([38028357, 3, 4, 5],"float32"), Tensor([38028357, 3, 4, 5],"float32"), )
paddle.nextafter(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.nextafter(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float64"), )
paddle.nextafter(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float64"), )
paddle.nextafter(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float32"), )
paddle.nextafter(Tensor([2, 57042535, 4, 5],"float32"), Tensor([2, 57042535, 4, 5],"float32"), )
paddle.nextafter(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.nextafter(Tensor([4, 285212673, 2],"float64"), Tensor([4, 285212673, 2],"float32"), )
paddle.nextafter(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float64"), )
paddle.nextafter(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"float16"), )
paddle.nextafter(Tensor([4, 3, 190141782],"float64"), Tensor([4, 3, 190141782],"float32"), )
paddle.nextafter(Tensor([2, 3, 76056713, 5],"float32"), Tensor([2, 3, 76056713, 5],"float32"), )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([8, 5820667, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60, 768, 49517],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([124, 768, 23960],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 142606337, 8],"float32"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 256, 742742],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 142606337, 8],"float32"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([7, 512, 636636],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 3, 380283564],"float32"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 35651585, 32],"float32"), 16, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([8, 1536, 185686],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([64, 1024, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 3880445, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 35651585, 32],"float32"), output_size=16, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([64, 768, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([124, 768, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([128, 1536, 11606],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([128, 363792, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([4, 3961288, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([7, 2586964, 126],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([45474, 1024, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60, 776089, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60, 1024, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([124, 1536, 11980],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([64, 247581, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([128, 768, 23211],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([7, 1024, 318318],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([4, 11641334, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([64, 1024, 34817],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([64, 727584, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([15474, 1024, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60, 768, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 268435457, 8],"float16"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([28, 1536, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 3, 715827883],"float16"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([30316, 1536, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60, 264086, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 11883862, 16],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([128, 1536, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 35651585, 32],"float32"), 16, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([32, 1536, 46422],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([32, 1536, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([10316, 1536, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([128, 768, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([95070891, 3, 8],"float32"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60632, 768, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([64, 1024, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60, 1024, 37138],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([16, 1024, 139265],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([64, 768, 46422],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([124, 375527, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([23767723, 3, 32],"float32"), 16, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([35369, 512, 126],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([23767723, 3, 32],"float32"), output_size=16, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([178956971, 3, 8],"float16"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([557057, 256, 16],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([16, 2910334, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([28, 565899, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([178956971, 3, 8],"float16"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 3, 380283564],"float32"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([95070891, 3, 8],"float32"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([4, 1536, 371371],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([17685, 1024, 126],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([32, 495161, 144],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 3, 715827883],"float16"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([4, 1024, 557057],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([23767723, 3, 32],"float32"), 16, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([124, 1536, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([60, 1024, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 268435457, 8],"float16"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 1024, 185686],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([28, 1536, 53053],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 480, 40, 40],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 88, 88],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 384, 24, 24],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 84, 84],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1950, 2048, 82, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([640, 480, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 384, 26, 26],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 768, 58, 58],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 512, 2, 160],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 159159, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([60, 512, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 192, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 640, 36, 36],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([256, 2048, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 384, 34, 34],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 48, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 672, 26, 26],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([90, 512, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 480, 48, 48],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 288, 40, 40],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 192, 240, 240],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 320, 56, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 5704254, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 672, 16, 32],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1280, 22, 22],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 480, 32, 32],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 192, 92, 92],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 384, 96, 96],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 192, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 192, 136, 136],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([256, 64, 4, 50],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 1024, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 96, 56, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 576, 15, 15],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2045, 2048, 7, 7],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([640, 72, 28, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 384, 68, 68],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 22, 22],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 192, 46, 46],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 576, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 24, 80, 80],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 22737, 28, 28],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 144, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1024, 120, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 64, 64],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 384, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 384, 46, 46],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([48, 1280, 15, 15],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 32, 32],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2012, 2048, 7, 80],"float32"), output_size=1, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 480, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 16, 891290],"float32"), output_size=2, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 19, 750560],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([48, 640, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 72, 76, 76],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 192, 200, 200],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 160, 792258, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 96, 24, 24],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 128, 128],"float32"), output_size=tuple(2,2,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 192, 40, 40],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 2048, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([256, 104, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([256, 480, 2, 50],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 128, 557057, 32],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 24, 240, 240],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 139265, 128, 128],"float32"), output_size=tuple(6,6,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([48, 640, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 384, 36, 36],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 672, 38, 38],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 160, 72, 72],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([512, 872, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 288, 22, 22],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 384, 10, 10],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1280, 30, 30],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 768, 17, 17],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([77, 640, 18, 18],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([256, 1280, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 72, 52, 52],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 384, 19, 19],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 96, 48, 48],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 288, 28, 28],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 1920, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 480, 4, 297097],"float32"), list[1,40,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 512, 80, 80],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 224, 56, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([32, 1024, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 159159, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 192, 76, 76],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 7, 159159],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 384, 20, 20],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 192, 88, 88],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 256, 3, 160],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 960, 18, 18],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([60, 64, 28, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([128, 512, 7, 7],"float32"), output_size=7, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 480, 36, 36],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 192, 184, 184],"float32"), tuple(1,1,), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([124, 768, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2653, 768, 16, 7, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 2910334, 16, 7, 7],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 18569, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 139265, 8, 32, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 47159, 7, 9],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 20632, 9],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 60632, 7, 7],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 1485483, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 42443, 7, 10],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[2,2,2,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 7, 26527],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([3790, 768, 16, 7, 7],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 1485483, 32],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[1,3,2,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([3316, 768, 16, 7, 8],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 53053, 7, 8],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 139265, 8, 32, 32],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 1485483],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([1, 768, 16, 23211, 8],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[2,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=3, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[1,1,1,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[1,1,1,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 1485483],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2948, 768, 16, 7, 9],"float32"), output_size=tuple(1,1,1,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 699051, 32, 32],"float16"), output_size=3, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([92843, 3, 8, 32, 32],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 8, 2796203, 32],"float16"), output_size=list[1,3,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=tuple(3,3,3,), )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 8, 32, 2796203],"float16"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([174763, 3, 8, 32, 32],"float16"), output_size=list[2,2,2,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 699051, 32, 32],"float16"), output_size=tuple(3,3,3,), data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 262145, 8, 32, 32],"float16"), output_size=list[2,3,3,], )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([285212673, 8],"float32"), Tensor([8],"int64"), Tensor([8, 3],"float32"), list[list[Tensor([8, 4],"float32"),Tensor([4, 2],"float32"),],], list[2,4,], None, )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([8, 8],"float32"), Tensor([8],"int64"), Tensor([8, 285212673],"float32"), list[list[Tensor([8, 4],"float32"),Tensor([4, 2],"float32"),],], list[2,4,], None, )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([142606337, 16],"float32"), Tensor([128],"int64"), Tensor([16, 8],"float32"), list[list[Tensor([16, 8],"float32"),Tensor([8, 5],"float32"),],list[Tensor([16, 4],"float32"),Tensor([4, 5],"float32"),],list[Tensor([16, 2],"float32"),Tensor([2, 5],"float32"),],], list[5,10,15,20,], None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 35651585, 32],"float32"), output_size=16, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([44739243, 3, 32],"float16"), 8, False, None, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([95070891, 3, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 3, 715827883],"float16"), 4, False, None, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([2, 3, 380283564],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([2, 3, 715827883],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([95070891, 3, 8],"float32"), 4, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([23767723, 3, 32],"float32"), output_size=16, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([2, 3, 715827883],"float16"), output_size=8, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([2, 142606337, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 3, 380283564],"float32"), 16, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 3, 380283564],"float32"), 4, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 67108865, 32],"float16"), 8, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 3, 715827883],"float16"), 8, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 3, 380283564],"float32"), output_size=16, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([2, 67108865, 32],"float16"), output_size=8, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([44739243, 3, 32],"float16"), output_size=8, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([23767723, 3, 32],"float32"), 16, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 142606337, 8],"float32"), 4, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 35651585, 32],"float32"), 16, False, None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), return_mask=False, output_size=list[3,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 54326224, 7],"float32"), return_mask=False, output_size=list[3,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_max_pool2d(Tensor([67108865, 1, 8, 8],"float16"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=list[3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 1, 268435457, 8],"float16"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 54326224, 7],"float32"), output_size=list[None,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 1, 8, 142606337],"float32"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 54326224, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=list[2,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 23282668, 7, 7],"float32"), output_size=list[None,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([1, 2, 8, 268435457],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 54326224, 7],"float32"), output_size=list[3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), return_mask=False, output_size=list[3,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_max_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=list[None,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 1, 8, 268435457],"float16"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 54326224, 7],"float32"), output_size=list[2,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([1, 2, 268435457, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([1, 2, 268435457, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 33554433, 8, 8],"float16"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 1, 142606337, 8],"float32"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 23282668, 7, 7],"float32"), output_size=list[3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), return_mask=False, output_size=list[3,3,], )
paddle.nn.functional.adaptive_max_pool2d(Tensor([35651585, 1, 8, 8],"float32"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([67108865, 1, 8, 8],"float16"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 54326224, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 54326224, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([33554433, 2, 8, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=list[2,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([1, 67108865, 8, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([35651585, 1, 8, 8],"float32"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([1, 67108865, 8, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 17825793, 8, 8],"float32"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_max_pool2d(Tensor([1, 2, 8, 268435457],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 33554433, 8, 8],"float16"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 1, 142606337, 8],"float32"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 3, 54326224, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 1, 8, 142606337],"float32"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 1, 8, 268435457],"float16"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 23282668, 7, 7],"float32"), output_size=list[2,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([33554433, 2, 8, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=list[3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=list[None,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([2, 17825793, 8, 8],"float32"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([2, 1, 268435457, 8],"float16"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 17825793, 8, 8],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([4194305, 2, 8, 8, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 4456449, 8, 8, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 8, 17825793, 8],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 17825793, 8, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 33554433, 8, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 8, 8, 33554433],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 8, 33554433, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([4194305, 2, 8, 8, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 8, 17825793, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2228225, 2, 8, 8, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 8, 33554433, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2228225, 2, 8, 8, 8],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 8, 8, 33554433],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 8, 8, 17825793],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 2, 33554433, 8, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 2, 8, 8, 17825793],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([1, 8388609, 8, 8, 8],"float16"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 8388609, 8, 8, 8],"float16"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([1, 4456449, 8, 8, 8],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 46, 70],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([128, 256, 56, 56],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 108, 132],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([3, 1, 44, 17285617],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 128, 128],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([899, 1024, 40, 62],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 112, 84],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 22369622, 32],"float16"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", )
paddle.nn.functional.avg_pool2d(Tensor([1296422, 1, 44, 40],"float32"), kernel_size=tuple(5,1,), stride=1, )
paddle.nn.functional.avg_pool2d(Tensor([7134, 192, 56, 56],"float16"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 50, 76],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(Tensor([1, 950709, 40, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([256, 22283, 8, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 1024, 70, 48],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 28, 4682],"float16"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(x=Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=False, exclusive=False, )
paddle.nn.functional.avg_pool2d(Tensor([32, 1024, 14, 4974],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 1024, 60, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 256, 160, 160],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 4353, 64],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 32, 11883862],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], divisor_override=4, )
paddle.nn.functional.avg_pool2d(Tensor([4, 256, 264, 200],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 512, 136, 116],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 512, 152, 100],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 512, 112, 120],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 256, 240, 288],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 272, 176],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 256, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 256, 216, 264],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([18569, 512, 3, 80],"float32"), kernel_size=list[2,2,], stride=list[2,2,], padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 1024, 68, 56],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 512, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 256, 4353, 32],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1024, 68, 50],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 256, 240, 176],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 192, 288],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 512, 120, 164],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 256, 288, 192],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1024, 64, 78],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 22737, 56, 56],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 128, 28, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 184, 280],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 48, 72],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 134217729, 4, 4],"float16"), kernel_size=list[3,3,], stride=tuple(1,1,), padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(Tensor([64, 1024, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([8, 256, 144, 144],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 128, 96],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 13, 171402],"float32"), kernel_size=5, stride=3, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 178956971, 4],"float16"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,], )
paddle.nn.functional.avg_pool2d(Tensor([2, 2097153, 32, 32],"float16"), kernel_size=list[3,3,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 22369622],"float16"), kernel_size=list[3,3,], )
paddle.nn.functional.avg_pool2d(Tensor([64, 104, 28, 12243],"float32"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 4, 178956971],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 1782580, 4, 80],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 256, 168],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([13, 783552, 7, 32],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 10, 891290],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 1024, 62, 84],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 512, 124, 80],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 85599, 28, 28],"float16"), kernel_size=3, stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1024, 64, 48],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([32, 90948, 28, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 2, 285212673, 4],"float32"), kernel_size=2, stride=1, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 256, 248, 336],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 256, 200, 312],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 256, 272, 272],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([742742, 3, 32, 32],"float32"), kernel_size=2, stride=2, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 70, 46],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(x=Tensor([2, 3, 32, 11883862],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 64, 42],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 768, 17, 17],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 384, 4, 371371],"float32"), list[4,2,], )
paddle.nn.functional.avg_pool2d(Tensor([256, 44565, 4, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([5685, 512, 28, 28],"float32"), kernel_size=2, stride=2, padding="SAME", ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 512, 152, 100],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 864281, 44, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([44565, 128, 8, 50],"float32"), kernel_size=tuple(2,1,), stride=tuple(2,1,), padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1032, 1024, 40, 54],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1024, 64, 62],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 384, 35, 35],"float32"), kernel_size=3, stride=1, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 512, 136, 88],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.avg_pool2d(Tensor([2, 512, 128, 120],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 256, 240, 328],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 512, 120, 144],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 256, 256, 192],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 512, 140, 92],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([4, 256, 272, 232],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([64, 256, 64, 64],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([1, 1024, 44, 60],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([16, 256, 56, 56],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([89478486, 3, 4, 4],"float16"), kernel_size=list[3,3,], stride=list[3,3,], padding=list[0,0,0,0,], ceil_mode=True, exclusive=False, divisor_override=None, data_format="NCHW", name=None, )
paddle.nn.functional.avg_pool2d(Tensor([13, 1, 4, 43878873],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(Tensor([3, 22636, 3, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 67908, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 8, 8, 11184811, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 5941931],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 371371, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 2716312, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([5685, 256, 32, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 40, 2716312],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([67908, 1, 3, 1600, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 2228225, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 158452, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 32, 4974, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(Tensor([67908, 1, 7, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 3, 36217483],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([3, 22636, 7, 3, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 22737, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, divisor_override=8, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 181896, 32, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(Tensor([203724, 1, 7, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 7, 67908, 1600],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), exclusive=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=None, padding="SAME", ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2048, 4, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 256, 32, 7, 7],"float32"), kernel_size=list[32,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 475355, 40, 40],"float32"), kernel_size=tuple(5,1,1,), stride=1, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([203724, 1, 40, 40, 7],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 5941931, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, exclusive=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 5941931, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], divisor_override=8, )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 2048, 2843, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 8, 8, 8, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NDHWC", exclusive=False, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([3, 1, 40, 40, 475355],"float32"), kernel_size=tuple(1,1,5,), stride=1, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([1485483, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(Tensor([2, 8, 8, 8, 4194305],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 8, 8, 11184811, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 2228225, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([8, 1455167, 4, 7, 7],"float32"), kernel_size=list[4,7,7,], stride=1, data_format="NCDHW", )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 8, 8, 8, 3],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NDHWC", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], ceil_mode=False, exclusive=False, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 1073741825],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 2, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 715827883, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(Tensor([2, 190141782, 2, 3],"float32"), Tensor([190141782],"float32"), Tensor([190141782],"float32"), Tensor([190141782],"float32"), Tensor([190141782],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 380283564, 3],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 2, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(Tensor([30, 25353, 50, 60],"float32"), Tensor([25353],"float32"), Tensor([25353],"float32"), Tensor([25353],"float32"), Tensor([25353],"float32"), )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2228225, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2147483649],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 7922575],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([380283564, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 2, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 1114113, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8912897, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 178956971, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2228225, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 134217729, 4, 4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 38029],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([119304648, 4, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 557057],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1114113, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 134217729, 4, 4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([19015, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([16, 16, 1114113, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-06, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2097153, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(x=Tensor([1431655766, 1, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(Tensor([57042535, 40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 8, 71303169],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([1320430, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 17825793, 32],"float32"), Tensor([17825793],"float32"), Tensor([17825793],"float32"), Tensor([17825793],"float32"), Tensor([17825793],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 7922575],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8705, 1024, 256],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(x=Tensor([2, 357913942, 2, 3],"float16"), running_mean=Tensor([357913942],"float16"), running_var=Tensor([357913942],"float16"), weight=Tensor([357913942],"float16"), bias=Tensor([357913942],"float16"), epsilon=1e-05, momentum=0.1, data_format="NCHW", )
paddle.nn.functional.batch_norm(Tensor([119304648, 4, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 570425345],"float32"), running_mean=Tensor([1],"float32"), running_var=Tensor([1],"float32"), weight=Tensor([1],"float32"), bias=Tensor([1],"float32"), )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2228225, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 178956971, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(x=Tensor([2, 357913942, 2, 3],"float16"), running_mean=Tensor([357913942],"float16"), running_var=Tensor([357913942],"float16"), weight=Tensor([357913942],"float16"), bias=Tensor([357913942],"float16"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([2, 715827883, 3],"float16"), running_mean=Tensor([715827883],"float16"), running_var=Tensor([715827883],"float16"), weight=Tensor([715827883],"float16"), bias=Tensor([715827883],"float16"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 715827883, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2147483649],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 1073741825],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(x=Tensor([1431655766, 1, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, data_format="NCL", )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2228225],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 715827883, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 2097153, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1114113, 8, 16, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2147483649],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), )
paddle.nn.functional.batch_norm(Tensor([8, 8, 2228225, 16],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([19015, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 2097153, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([8912897, 8, 32],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(x=Tensor([1431655766, 1, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 715827883, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.1, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 2097153, 8],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([30, 76056713],"float32"), Tensor([76056713],"float32"), Tensor([76056713],"float32"), Tensor([76056713],"float32"), Tensor([76056713],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2097153, 16, 16, 8],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 178956971, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 178956971, 4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 570425345],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([2097153, 16, 16, 8],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([30, 25353, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([4, 1980644, 12, 24],"float32"), Tensor([1980644],"float32"), Tensor([1980644],"float32"), Tensor([1980644],"float32"), Tensor([1980644],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1114113, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(x=Tensor([2, 357913942, 2, 3],"float16"), running_mean=Tensor([357913942],"float16"), running_var=Tensor([357913942],"float16"), weight=Tensor([357913942],"float16"), bias=Tensor([357913942],"float16"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 3961288, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([30, 25353, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([119304648, 4, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([8, 8, 16, 2228225],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1, 8912897, 256],"float32"), Tensor([8912897],"float32"), Tensor([8912897],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([2, 3, 178956971, 4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 238609295, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([30, 25353, 50, 60],"float32"), Tensor([25353],"float32"), Tensor([25353],"float32"), Tensor([25353],"float32"), Tensor([25353],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 1048577],"float16"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 380283564, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([8, 1114113, 16, 16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([1, 1024, 2228225],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), training=True, momentum=0.0, epsilon=1e-06, )
paddle.nn.functional.batch_norm(Tensor([16, 16, 1114113, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 31691, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([1114113, 16, 16, 8],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(x=Tensor([2, 715827883, 3],"float16"), running_mean=Tensor([715827883],"float16"), running_var=Tensor([715827883],"float16"), weight=Tensor([715827883],"float16"), bias=Tensor([715827883],"float16"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 557057],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), Tensor([16],"float32"), training=False, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(x=Tensor([715827883, 1, 2, 3],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, momentum=0.9, )
paddle.nn.functional.batch_norm(Tensor([2, 238609295, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([4, 1980644, 12, 24],"float32"), Tensor([1980644],"float32"), Tensor([1980644],"float32"), Tensor([1980644],"float32"), Tensor([1980644],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=None, )
paddle.nn.functional.batch_norm(Tensor([89478486, 3, 4, 4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), Tensor([4],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 38029],"float32"), Tensor([38029],"float32"), Tensor([38029],"float32"), Tensor([38029],"float32"), Tensor([38029],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([19015, 40, 50, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), use_global_stats=True, data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 31691, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), )
paddle.nn.functional.batch_norm(Tensor([16, 16, 16, 1048577],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), Tensor([16],"float16"), training=True, momentum=0.1, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(x=Tensor([2, 1, 2, 1073741825],"float16"), running_mean=Tensor([1],"float16"), running_var=Tensor([1],"float16"), weight=Tensor([1],"float16"), bias=Tensor([1],"float16"), epsilon=1e-05, )
paddle.nn.functional.batch_norm(Tensor([30, 40, 31691, 60],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(x=Tensor([2, 190141782, 2, 3],"float32"), running_mean=Tensor([190141782],"float32"), running_var=Tensor([190141782],"float32"), weight=Tensor([190141782],"float32"), bias=Tensor([190141782],"float32"), )
paddle.nn.functional.batch_norm(Tensor([30, 40, 31691, 60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), Tensor([60],"float32"), data_format="NHWC", )
paddle.nn.functional.batch_norm(Tensor([30, 40, 50, 38029],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), Tensor([40],"float32"), use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 3961288, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1320430, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.bilinear(Tensor([5, 5],"float32"), Tensor([5, 456341],"float32"), Tensor([1000, 5, 456341],"float32"), Tensor([1, 1000],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 570425345],"float32"), Tensor([4, 1, 570425345],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([1140850690, 1],"float32"), Tensor([1140850690, 2],"float32"), Tensor([4, 1, 2],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.bilinear(Tensor([3, 1],"float32"), Tensor([3, 760567127],"float32"), Tensor([4, 1, 760567127],"float32"), Tensor([1, 4],"float32"), None, )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 8400, 80],"float32"), Tensor([16, 8400, 80],"float32"), weight=Tensor([16, 8400, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 7581, 80],"float32"), Tensor([16, 7581, 80],"float32"), weight=Tensor([16, 7581, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 12096, 80],"float32"), Tensor([8, 12096, 80],"float32"), weight=Tensor([8, 12096, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 37044, 10],"float32"), Tensor([1, 37044, 10],"float32"), weight=Tensor([1, 37044, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 2100, 80],"float32"), Tensor([16, 2100, 80],"float32"), weight=Tensor([16, 2100, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 48384, 10],"float32"), Tensor([1, 48384, 10],"float32"), weight=Tensor([1, 48384, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([35791395, 3, 4, 10],"float16"), Tensor([35791395, 3, 4, 10],"float16"), weight=Tensor([3, 4, 10],"float16"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 52500, 10],"float32"), Tensor([1, 52500, 10],"float32"), weight=Tensor([1, 52500, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 71582789, 10],"float16"), Tensor([2, 3, 71582789, 10],"float16"), weight=Tensor([3, 71582789, 10],"float16"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 53687092, 4, 10],"float16"), Tensor([2, 53687092, 4, 10],"float16"), Tensor([53687092, 4, 10],"float16"), "mean", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 3549, 80],"float32"), Tensor([8, 3549, 80],"float32"), weight=Tensor([8, 3549, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([7074, 21504, 15],"float32"), Tensor([7074, 21504, 15],"float32"), weight=Tensor([7074, 21504, 15],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 3024, 80],"float32"), Tensor([8, 3024, 80],"float32"), weight=Tensor([8, 3024, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 152113426, 15],"float32"), Tensor([1, 152113426, 15],"float32"), weight=Tensor([1, 152113426, 15],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 56784, 10],"float32"), Tensor([1, 56784, 10],"float32"), weight=Tensor([1, 56784, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 4, 178956971],"float16"), Tensor([2, 3, 4, 178956971],"float16"), weight=Tensor([3, 4, 178956971],"float16"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 228170138, 10],"float32"), Tensor([1, 228170138, 10],"float32"), weight=Tensor([1, 228170138, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 27216, 83837],"float32"), Tensor([1, 27216, 83837],"float32"), weight=Tensor([1, 27216, 83837],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 5376, 80],"float32"), Tensor([8, 5376, 80],"float32"), weight=Tensor([8, 5376, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 44436, 10],"float32"), Tensor([1, 44436, 10],"float32"), weight=Tensor([1, 44436, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 24276, 93991],"float32"), Tensor([1, 24276, 93991],"float32"), weight=Tensor([1, 24276, 93991],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([35791395, 3, 4, 10],"float16"), Tensor([35791395, 3, 4, 10],"float16"), Tensor([3, 4, 10],"float16"), "mean", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 6069, 80],"float32"), Tensor([8, 6069, 80],"float32"), weight=Tensor([8, 6069, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 65856, 10],"float32"), Tensor([1, 65856, 10],"float32"), weight=Tensor([1, 65856, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 11109, 80],"float32"), Tensor([8, 11109, 80],"float32"), weight=Tensor([8, 11109, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 71582789, 10],"float16"), Tensor([2, 3, 71582789, 10],"float16"), Tensor([3, 71582789, 10],"float16"), "sum", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 8400, 80],"float32"), Tensor([8, 8400, 80],"float32"), weight=Tensor([8, 8400, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 33600, 10],"float32"), Tensor([1, 33600, 10],"float32"), weight=Tensor([1, 33600, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 2541, 80],"float32"), Tensor([8, 2541, 80],"float32"), weight=Tensor([8, 2541, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 53687092, 4, 10],"float16"), Tensor([2, 53687092, 4, 10],"float16"), Tensor([53687092, 4, 10],"float16"), "sum", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 21504, 106106],"float32"), Tensor([1, 21504, 106106],"float32"), weight=Tensor([1, 21504, 106106],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 10164, 80],"float32"), Tensor([16, 10164, 80],"float32"), weight=Tensor([16, 10164, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 4725, 80],"float32"), Tensor([16, 4725, 80],"float32"), weight=Tensor([16, 4725, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([35791395, 3, 4, 10],"float16"), Tensor([35791395, 3, 4, 10],"float16"), Tensor([3, 4, 10],"float16"), "none", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 71582789, 10],"float16"), Tensor([2, 3, 71582789, 10],"float16"), Tensor([3, 71582789, 10],"float16"), "mean", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 4, 178956971],"float16"), Tensor([2, 3, 4, 178956971],"float16"), weight=Tensor([3, 4, 178956971],"float16"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 12096, 80],"float32"), Tensor([16, 12096, 80],"float32"), weight=Tensor([16, 12096, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 4, 178956971],"float16"), Tensor([2, 3, 4, 178956971],"float16"), Tensor([3, 4, 178956971],"float16"), "none", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 7581, 80],"float32"), Tensor([8, 7581, 80],"float32"), weight=Tensor([8, 7581, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([35791395, 3, 4, 10],"float16"), Tensor([35791395, 3, 4, 10],"float16"), weight=Tensor([3, 4, 10],"float16"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 40656, 10],"float32"), Tensor([1, 40656, 10],"float32"), weight=Tensor([1, 40656, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 10164, 80],"float32"), Tensor([8, 10164, 80],"float32"), weight=Tensor([8, 10164, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 3024, 80],"float32"), Tensor([16, 3024, 80],"float32"), weight=Tensor([16, 3024, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 6804, 80],"float32"), Tensor([16, 6804, 80],"float32"), weight=Tensor([16, 6804, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 9261, 80],"float32"), Tensor([16, 9261, 80],"float32"), weight=Tensor([16, 9261, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 4, 178956971],"float16"), Tensor([2, 3, 4, 178956971],"float16"), Tensor([3, 4, 178956971],"float16"), "mean", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 6804, 80],"float32"), Tensor([8, 6804, 80],"float32"), weight=Tensor([8, 6804, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8384, 27216, 10],"float32"), Tensor([8384, 27216, 10],"float32"), weight=Tensor([8384, 27216, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 53687092, 4, 10],"float16"), Tensor([2, 53687092, 4, 10],"float16"), weight=Tensor([53687092, 4, 10],"float16"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 53687092, 4, 10],"float16"), Tensor([2, 53687092, 4, 10],"float16"), Tensor([53687092, 4, 10],"float16"), "none", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([9400, 24276, 10],"float32"), Tensor([9400, 24276, 10],"float32"), weight=Tensor([9400, 24276, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 11109, 4],"float32"), Tensor([8, 11109, 4],"float32"), weight=Tensor([8, 11109, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 70644, 10],"float32"), Tensor([1, 70644, 10],"float32"), weight=Tensor([1, 70644, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 2541, 80],"float32"), Tensor([16, 2541, 80],"float32"), weight=Tensor([16, 2541, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 4, 178956971],"float16"), Tensor([2, 3, 4, 178956971],"float16"), Tensor([3, 4, 178956971],"float16"), "sum", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 2100, 80],"float32"), Tensor([8, 2100, 80],"float32"), weight=Tensor([8, 2100, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 4725, 80],"float32"), Tensor([8, 4725, 80],"float32"), weight=Tensor([8, 4725, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 5376, 80],"float32"), Tensor([16, 5376, 80],"float32"), weight=Tensor([16, 5376, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 71582789, 10],"float16"), Tensor([2, 3, 71582789, 10],"float16"), weight=Tensor([3, 71582789, 10],"float16"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([35791395, 3, 4, 10],"float16"), Tensor([35791395, 3, 4, 10],"float16"), Tensor([3, 4, 10],"float16"), "sum", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 4116, 80],"float32"), Tensor([8, 4116, 80],"float32"), weight=Tensor([8, 4116, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 71582789, 10],"float16"), Tensor([2, 3, 71582789, 10],"float16"), weight=Tensor([3, 71582789, 10],"float16"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 3549, 80],"float32"), Tensor([16, 3549, 80],"float32"), weight=Tensor([16, 3549, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([35791395, 3, 4, 10],"float16"), Tensor([35791395, 3, 4, 10],"float16"), weight=Tensor([3, 4, 10],"float16"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([10611, 21504, 10],"float32"), Tensor([10611, 21504, 10],"float32"), weight=Tensor([10611, 21504, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 53687092, 4, 10],"float16"), Tensor([2, 53687092, 4, 10],"float16"), weight=Tensor([53687092, 4, 10],"float16"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 4116, 80],"float32"), Tensor([16, 4116, 80],"float32"), weight=Tensor([16, 4116, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 11109, 80],"float32"), Tensor([16, 11109, 80],"float32"), weight=Tensor([16, 11109, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([8, 9261, 80],"float32"), Tensor([8, 9261, 80],"float32"), weight=Tensor([8, 9261, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 75600, 10],"float32"), Tensor([1, 75600, 10],"float32"), weight=Tensor([1, 75600, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 61236, 10],"float32"), Tensor([1, 61236, 10],"float32"), weight=Tensor([1, 61236, 10],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([16, 6069, 80],"float32"), Tensor([16, 6069, 80],"float32"), weight=Tensor([16, 6069, 80],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 4, 178956971],"float16"), Tensor([2, 3, 4, 178956971],"float16"), weight=Tensor([3, 4, 178956971],"float16"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 71582789, 10],"float16"), Tensor([2, 3, 71582789, 10],"float16"), Tensor([3, 71582789, 10],"float16"), "none", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 53687092, 4, 10],"float16"), Tensor([2, 53687092, 4, 10],"float16"), weight=Tensor([53687092, 4, 10],"float16"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 28, 8148934],"float32"), Tensor([10, 28, 8148934],"float32"), weight=Tensor([10, 1, 8148934],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 768768, 28],"float32"), Tensor([106, 768768, 28],"float32"), weight=Tensor([106, 768768, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11641334, 14, 14],"float32"), Tensor([11641334, 14, 14],"float32"), weight=Tensor([11641334, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([106, 28, 768768],"float32"), Tensor([106, 28, 768768],"float32"), weight=Tensor([106, 1, 768768],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 28, 81489335],"float32"), Tensor([1, 28, 81489335],"float32"), weight=Tensor([1, 1, 81489335],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 81489335, 28],"float32"), Tensor([1, 81489335, 28],"float32"), weight=Tensor([1, 81489335, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 28, 7408122],"float32"), Tensor([11, 28, 7408122],"float32"), weight=Tensor([11, 1, 7408122],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10, 8148934, 28],"float32"), Tensor([10, 8148934, 28],"float32"), weight=Tensor([10, 8148934, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2910334, 28, 28],"float32"), Tensor([2910334, 28, 28],"float32"), weight=Tensor([2910334, 1, 1],"float32"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([16, 300, 80],"float32"), Tensor([16, 300, 80],"float32"), weight=Tensor([16, 300, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([11, 7408122, 28],"float32"), Tensor([11, 7408122, 28],"float32"), weight=Tensor([11, 7408122, 1],"float32"), reduction="mean", )
paddle.nn.functional.celu(Tensor([268435457, 4, 4],"float16"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2, 285212673, 4],"float32"), 1.0, None, )
paddle.nn.functional.celu(x=Tensor([2, 2147483649],"float16"), alpha=-0.4, )
paddle.nn.functional.celu(Tensor([268435457, 4, 4],"float16"), 0.2, None, )
paddle.nn.functional.celu(x=Tensor([2, 4, 536870913],"float16"), alpha=0.2, )
paddle.nn.functional.celu(Tensor([2, 3, 380283564],"float32"), 1.0, None, )
paddle.nn.functional.celu(x=Tensor([2, 3, 380283564],"float32"), )
paddle.nn.functional.celu(Tensor([2, 4, 536870913],"float16"), 0.2, None, )
paddle.nn.functional.celu(x=Tensor([2, 536870913, 4],"float16"), )
paddle.nn.functional.celu(x=Tensor([2, 285212673, 4],"float32"), )
paddle.nn.functional.celu(Tensor([357913942, 3, 4],"float16"), 1.0, None, )
paddle.nn.functional.celu(x=Tensor([357913942, 3, 4],"float16"), )
paddle.nn.functional.celu(x=Tensor([268435457, 4, 4],"float16"), )
paddle.nn.functional.celu(Tensor([2, 3, 715827883],"float16"), 1.0, None, )
paddle.nn.functional.celu(x=Tensor([2, 4, 536870913],"float16"), )
paddle.nn.functional.celu(Tensor([2, 536870913, 4],"float16"), 0.2, None, )
paddle.nn.functional.celu(Tensor([2, 2147483649],"float16"), -0.4, None, )
paddle.nn.functional.celu(x=Tensor([190141782, 3, 4],"float32"), )
paddle.nn.functional.celu(Tensor([190141782, 3, 4],"float32"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2, 536870913, 4],"float16"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2147483649, 2],"float16"), -0.4, None, )
paddle.nn.functional.celu(Tensor([2, 4, 536870913],"float16"), 1.0, None, )
paddle.nn.functional.celu(x=Tensor([2, 536870913, 4],"float16"), alpha=0.2, )
paddle.nn.functional.celu(x=Tensor([2147483649, 2],"float16"), alpha=-0.4, )
paddle.nn.functional.celu(x=Tensor([268435457, 4, 4],"float16"), alpha=0.2, )
paddle.nn.functional.celu(x=Tensor([2, 3, 715827883],"float16"), )
paddle.nn.functional.channel_shuffle(Tensor([2, 59652324, 4, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 134217729, 4, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 134217729, 4, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 59652324, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 4, 59652324],"float16"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([29826162, 9, 4, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 4, 134217729],"float16"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 59652324, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([29826162, 4, 4, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 59652324, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 59652324, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([29826162, 9, 4, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 4, 134217729],"float16"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 4, 59652324],"float16"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 59652324, 4, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([29826162, 4, 4, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.conv1d(Tensor([16, 5593, 25500],"float32"), Tensor([128, 5593, 3],"float32"), bias=Tensor([128],"float32"), padding=16, stride=list[1,], dilation=list[16,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 1114113],"float32"), Tensor([256, 64, 3],"float32"), bias=Tensor([256],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([167773, 256, 100],"float16"), Tensor([128, 256, 3],"float16"), bias=Tensor([128],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 5593, 25500],"float32"), Tensor([128, 5593, 3],"float32"), bias=Tensor([128],"float32"), padding=32, stride=list[1,], dilation=list[32,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 2097153],"float16"), Tensor([1, 256, 1],"float16"), bias=Tensor([1],"float16"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([32, 32, 58081],"float32"), Tensor([1, 32, 1],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=25, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 1602319, 89],"float32"), Tensor([80, 1602319, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 256, 2097153],"float16"), Tensor([128, 256, 3],"float16"), bias=Tensor([128],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 5593, 25500],"float32"), Tensor([128, 5593, 3],"float32"), bias=Tensor([128],"float32"), padding=8, stride=list[1,], dilation=list[8,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([32, 32, 58081],"float32"), Tensor([32, 32, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1119, 80, 25500],"float32"), Tensor([128, 80, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=9, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([743, 1024, 3000],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([190141782, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([10186167, 7, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 4],"float32"), weight=Tensor([380283564, 3, 2],"float32"), bias=Tensor([380283564],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(Tensor([16, 5593, 25500],"float32"), Tensor([128, 5593, 3],"float32"), bias=Tensor([128],"float32"), padding=4, stride=list[1,], dilation=list[4,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 17825793],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 11],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 5593, 25500],"float32"), Tensor([128, 5593, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([190141782, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 5],"float32"), Tensor([253522376, 3, 3],"float32"), bias=Tensor([253522376],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1024, 2228225],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([167773, 256, 100],"float16"), Tensor([1, 256, 1],"float16"), bias=Tensor([1],"float16"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 380283564, 3],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([16, 5593, 25500],"float32"), Tensor([128, 5593, 3],"float32"), bias=Tensor([128],"float32"), padding=64, stride=list[1,], dilation=list[64,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 95070891, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([167773, 256, 100],"float16"), Tensor([256, 64, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 380283564],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([190141782, 4, 3],"float32"), Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([23767723, 6, 16],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 95070891],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 35651585, 16],"float32"), Tensor([8, 35651585, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([2, 380283564, 3],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 35651585],"float32"), Tensor([8, 35651585, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 6, 95070891],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([23767723, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 64, 2228225],"float32"), Tensor([64, 64, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 5368710, 100],"float16"), Tensor([128, 5368710, 3],"float16"), bias=Tensor([128],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 17825793],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=5, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([190141782, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 32, 58081],"float32"), Tensor([32, 32, 1],"float32"), bias=Tensor([32],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(Tensor([2, 3, 380283564],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([190141782, 3, 4],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(Tensor([13, 5484860, 32],"float32"), Tensor([16, 32, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 80, 1782580],"float32"), Tensor([80, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 3, 760567127],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([190141782, 4, 3],"float32"), weight=Tensor([2, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([23767723, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 1024, 3000],"float32"), Tensor([1024, 1024, 3],"float32"), bias=Tensor([1024],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 35651585, 16],"float32"), Tensor([8, 35651585, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 512, 3000],"float32"), Tensor([512, 512, 3],"float32"), bias=Tensor([512],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([256, 200, 44565],"float32"), Tensor([256, 44565, 4],"float32"), bias=Tensor([256],"float32"), padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([13, 85701, 2048],"float32"), Tensor([256, 85701, 5],"float32"), bias=None, padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 35651585, 16],"float32"), Tensor([8, 35651585, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 768, 3000],"float32"), Tensor([768, 768, 3],"float32"), bias=Tensor([768],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([20, 64, 2101],"float32"), Tensor([64, 64, 1],"float32"), bias=Tensor([64],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([190141782, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv1d(Tensor([320464, 80, 89],"float32"), Tensor([80, 80, 5],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([190141782, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv1d(Tensor([159159, 128, 112],"float32"), Tensor([128, 128, 7],"float32"), bias=Tensor([128],"float32"), padding=15, stride=list[1,], dilation=list[5,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 5593, 25500],"float32"), Tensor([128, 5593, 3],"float32"), bias=Tensor([128],"float32"), padding=256, stride=list[1,], dilation=list[256,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 5368710, 100],"float16"), Tensor([1, 5368710, 1],"float16"), bias=Tensor([1],"float16"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 95070891],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([8, 32, 58081],"float32"), Tensor([1, 32, 1],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([2, 3, 380283564],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([23767723, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([23767723, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([152113426, 3, 5],"float32"), Tensor([4, 3, 3],"float32"), bias=Tensor([4],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([1, 128, 17825793],"float32"), Tensor([128, 128, 3],"float32"), bias=Tensor([128],"float32"), padding=3, stride=list[1,], dilation=list[3,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([1, 3, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(Tensor([16, 64, 25500],"float32"), Tensor([1, 64, 1],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 35651585, 16],"float32"), Tensor([8, 35651585, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([6790778, 24, 14],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([190141782, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=list[1,], dilation=tuple(2,), )
paddle.nn.functional.conv1d(Tensor([1, 1280, 3000],"float32"), Tensor([1280, 1280, 3],"float32"), bias=Tensor([1280],"float32"), padding=1, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 95070891, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([16, 5593, 25500],"float32"), Tensor([128, 5593, 3],"float32"), bias=Tensor([128],"float32"), padding=128, stride=list[1,], dilation=list[128,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 5593, 25500],"float32"), Tensor([128, 5593, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 16, 35651585],"float32"), Tensor([8, 35651585, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([2, 3, 380283564],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 5593, 25500],"float32"), Tensor([128, 5593, 3],"float32"), bias=Tensor([128],"float32"), padding=2, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 24, 7313146],"float32"), Tensor([24, 12, 16],"float32"), bias=Tensor([24],"float32"), padding=8, stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([16, 5593, 25500],"float32"), Tensor([128, 5593, 3],"float32"), bias=Tensor([128],"float32"), padding=512, stride=list[1,], dilation=list[512,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 171402, 1024],"float32"), Tensor([32, 171402, 8],"float32"), bias=None, padding=0, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([13, 7, 25073642],"float32"), Tensor([16, 25073642, 1],"float32"), bias=None, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(x=Tensor([190141782, 3, 4],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[1,], padding=1, dilation=2, )
paddle.nn.functional.conv1d(Tensor([190141782, 3, 4],"float32"), Tensor([1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=tuple(1,), stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(x=Tensor([2, 285212673, 4],"float32"), weight=Tensor([1, 285212673, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv1d(Tensor([23767723, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], output_padding=0, groups=1, dilation=2, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(Tensor([4, 35651585, 16],"float32"), Tensor([35651585, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 380283564],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 715827883],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 2, 3],"float32"), weight=Tensor([3, 253522376, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 35651585, 16],"float32"), Tensor([35651585, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 2],"float32"), Tensor([3, 253522376, 3],"float32"), bias=Tensor([253522376],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 715827883, 3],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 2, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(Tensor([4, 35651585, 16],"float32"), Tensor([35651585, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 253522376, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([1, 512, 7],"float32"), Tensor([512, 256, 8],"float32"), bias=Tensor([256],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 3, 2],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([2],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(Tensor([4, 35651585, 16],"float32"), Tensor([35651585, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 715827883],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([286331154, 3, 5],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding="vALiD", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([715827883, 3, 2],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([715827883, 3, 2],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 35651585],"float32"), Tensor([35651585, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([178956971, 3, 8],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[4,4,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([715827883, 3, 2],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(Tensor([715827883, 3, 2],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([178956971, 3, 8],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[list[0,0,],list[0,0,],list[3,4,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=0, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 2, 3],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 512, 7],"float32"), Tensor([512, 256, 8],"float32"), bias=Tensor([256],"float32"), output_size=None, output_padding=0, padding=2, stride=list[4,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 35651585],"float32"), Tensor([35651585, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], output_padding=0, groups=1, dilation=2, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 380283564, 3],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=1, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 35651585, 16],"float32"), Tensor([35651585, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=list[1,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 2, 3],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 715827883],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 35651585, 16],"float32"), Tensor([35651585, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([715827883, 2, 3],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[list[0,0,],list[0,0,],list[3,4,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 715827883, 3],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[list[0,0,],list[3,4,],list[0,0,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding="vALiD", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([178956971, 8, 3],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[list[0,0,],list[3,4,],list[0,0,],], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=list[4,4,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv1d_transpose(Tensor([4, 35651585, 16],"float32"), Tensor([35651585, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 715827883, 3],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NLC", name=None, )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=list[1,], output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 35651585],"float32"), Tensor([35651585, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,], groups=3, dilation=1, )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([286331154, 3, 5],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding="SaME", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 380283564, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 95070891],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding="SaME", output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 2],"float32"), weight=Tensor([3, 253522376, 3],"float32"), bias=Tensor([253522376],"float32"), stride=1, padding=list[1,], groups=1, dilation=2, )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 2, 3],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 47535446],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=list[1,], groups=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 380283564],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 2, 3],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 380283564],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 380283564],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([3],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 715827883],"float16"), Tensor([3, 2, 3],"float16"), bias=Tensor([2],"float16"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([380283564, 3, 2],"float32"), Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), output_size=None, output_padding=0, padding=list[1,], stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([23767723, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 380283564],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 3, 715827883],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(Tensor([4, 95070891, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(x=Tensor([715827883, 3, 2],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,], output_padding=0, groups=3, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([380283564, 3, 2],"float32"), weight=Tensor([3, 1, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, groups=1, dilation=1, output_size=None, data_format="NCL", name=None, )
paddle.nn.functional.conv1d_transpose(x=Tensor([2, 715827883, 3],"float16"), weight=Tensor([3, 1, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,], groups=3, dilation=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([2, 3, 715827883],"float16"), Tensor([3, 1, 3],"float16"), bias=Tensor([3],"float16"), output_size=None, output_padding=0, padding=list[1,], stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv2d(Tensor([30, 1024, 4, 24],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4096, 1, 34, 34],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([30, 256, 5, 25],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 256, 8705, 128],"float32"), Tensor([256, 256, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 3395389],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([30, 128, 4, 68],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 16, 32],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 16, 136],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 9, 17],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 8, 36],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(x=Tensor([100, 2535224, 3, 3],"float32"), weight=Tensor([36, 2535224, 1, 1],"float32"), )
paddle.nn.functional.conv2d(Tensor([10, 512, 4, 48],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 8, 72],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 512, 256, 17409],"float32"), Tensor([12, 128, 1, 17409],"float32"), padding=0, groups=4, )
paddle.nn.functional.conv2d(Tensor([10, 256, 5, 33],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 32, 32],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([30, 512, 4, 24],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4, 16, 11883862, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([3, 16, 23767723, 2],"float32"), Tensor([16, 16, 3, 3],"float32"), None, list[2,2,], 1, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([30, 1024, 4, 26],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 9, 81],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 16, 64],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 128, 9, 81],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 16, 40],"float32"), Tensor([64, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([5, 256, 16, 144],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 8, 16],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 9, 105],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 16, 88],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1, 69, 517],"float32"), Tensor([64, 1, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 512, 8, 44],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 17, 89],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 16, 152],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 16, 24],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 24, 160],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 512, 8, 56],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 4, 22],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 16, 72],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 17409, 128],"float32"), Tensor([1024, 256, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([30, 512, 4, 48],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 512, 4, 40],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 8, 40],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(x=Tensor([2, 4, 95070891, 3],"float32"), weight=Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([2970966, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([30, 256, 16, 24],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 4, 68],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 8, 56],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([6, 256, 9, 49],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([35, 1024, 256, 256],"float32"), Tensor([24, 128, 1, 1],"float32"), padding=0, groups=8, )
paddle.nn.functional.conv2d(Tensor([10, 256, 16, 104],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 4, 34],"float32"), Tensor([1024, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 2, 28],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[1,1,], 1, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 512, 65, 65],"float32"), Tensor([512, 512, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([3, 256, 16, 104],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 5, 45],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 5, 69],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 9, 73],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4096, 1, 66, 66],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([1, 4096, 32, 32],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([7, 256, 9, 77],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 8, 80],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 8, 36],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 8, 48],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 8, 20],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 8, 24],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 16, 160],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 4, 56],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 256, 9, 29],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 4, 4],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([30, 512, 8, 72],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 64, 16, 40],"float32"), Tensor([256, 64, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 17, 121],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 512, 37138, 15],"float32"), Tensor([512, 512, 1, 1],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([30, 256, 16, 136],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 25, 65],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 1024, 4, 42],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 8, 32],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 26],"float32"), Tensor([2228225, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 9, 81],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 512, 33, 33],"float32"), Tensor([512, 512, 3, 3],"float32"), bias=None, stride=2, padding=0, )
paddle.nn.functional.conv2d(Tensor([10, 512, 4, 36],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([2, 256, 16, 160],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([16, 3, 284, 284],"float32"), weight=Tensor([3, 1, 29, 29],"float32"), groups=3, )
paddle.nn.functional.conv2d(Tensor([10, 256, 9, 37],"float32"), Tensor([256, 256, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 8, 96],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 2048, 64, 64],"float32"), Tensor([2048, 512, 3, 3],"float32"), padding=1, groups=4, )
paddle.nn.functional.conv2d(Tensor([10, 256, 16, 48],"float32"), Tensor([128, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([4096, 1, 15474, 36],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([30, 128, 17, 34953],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([8, 512, 8, 60],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(x=Tensor([2, 3, 4, 95070891],"float32"), weight=Tensor([1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,1,], padding=1, dilation=list[2,2,], )
paddle.nn.functional.conv2d(Tensor([8, 512, 16, 16],"float32"), Tensor([512, 512, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([69, 2048, 128, 128],"float32"), Tensor([2048, 256, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([10, 512, 4, 32],"float32"), Tensor([1024, 512, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 256, 16, 80],"float32"), Tensor([64, 256, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 8, 16],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 8, 48],"float32"), Tensor([256, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 10, 222823],"float32"), Tensor([256, 1024, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 512, 4, 36],"float32"), Tensor([128, 512, 1, 1],"float32"), None, list[1,1,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([1, 256, 24, 144],"float32"), Tensor([512, 256, 1, 1],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([30, 128, 9, 113],"float32"), Tensor([128, 128, 3, 3],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d_transpose(Tensor([20, 64, 76, 136],"float32"), Tensor([64, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=64, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([95070891, 2, 2, 6],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 190141782, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, output_padding=0, dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 8912897, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 64, 480, 480],"float32"), Tensor([64, 1, 2, 2],"float32"), bias=Tensor([1],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([183, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([95070891, 6, 2, 2],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 178956971, 3],"float16"), Tensor([4, 2, 1, 1],"float16"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 178956971, 2, 6],"float16"), weight=Tensor([6, 1, 3, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,0,], output_padding=0, dilation=1, groups=3, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 24, 480, 480],"float32"), Tensor([24, 1, 2, 2],"float32"), bias=Tensor([1],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 8912897],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([205, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 128, 128],"float32"), Tensor([256, 128, 3, 3],"float32"), padding=0, stride=2, groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 357913942, 3, 2],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 5941931, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 128, 128],"float32"), Tensor([1024, 128, 5803, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([116, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 64, 64],"float32"), Tensor([256, 64, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 4, 178956971],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding="vaLiD", output_padding=0, dilation=1, groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 6, 2, 178956971],"float16"), weight=Tensor([6, 1, 3, 3],"float16"), bias=Tensor([3],"float16"), stride=1, padding=list[1,0,], output_padding=0, dilation=1, groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 190141782, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 357913942, 2],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=1, dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 512, 32, 32],"float32"), Tensor([512, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=512, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 8912897, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 256, 64, 64],"float32"), Tensor([256, 128, 2, 2],"float32"), bias=None, padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 11883862, 3],"float32"), Tensor([3, 5, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 5941931, 16],"float32"), Tensor([6, 8, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([25, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([162, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([211, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([20, 256, 19, 34],"float32"), Tensor([256, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=256, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([24, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 2, 6],"float32"), weight=Tensor([253522376, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(Tensor([247, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([245, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 95070891, 6],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(x=Tensor([190141782, 3, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv2d_transpose(Tensor([243, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([190141782, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=1, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([234, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2228225, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), padding=1, output_padding=1, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 16, 16],"float32"), Tensor([2048, 123791, 3, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.nn.functional.conv2d_transpose(Tensor([244, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([305, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([160, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([251, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 357913942],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 5941931, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 63380594],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 190141782, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,], dilation=2, )
paddle.nn.functional.conv2d_transpose(Tensor([4, 256, 47, 35],"float32"), Tensor([256, 128, 4, 4],"float32"), bias=None, padding=0, output_padding=0, stride=list[4,4,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([266, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([19, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([110, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([22369622, 3, 8, 8],"float16"), weight=Tensor([3, 1, 5, 5],"float16"), bias=Tensor([1],"float16"), stride=1, padding=list[1,2,3,4,], output_padding=0, dilation=1, groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 357913942],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 139265, 128],"float32"), Tensor([128, 3, 4, 4],"float32"), bias=Tensor([3],"float32"), padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([223, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 190141782, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=1, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2228225, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 2, 357913942],"float16"), weight=Tensor([3, 1, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=1, padding=0, dilation=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 5941931, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([313, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([190141782, 3, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 4, 3, 3],"float16"), Tensor([4, 2, 1, 1],"float16"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4096, 32, 32],"float32"), Tensor([4096, 512, 3, 3],"float32"), padding=0, stride=2, groups=8, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 190141782, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 5941931],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 256, 64, 64],"float32"), Tensor([256, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=256, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1024, 16, 16],"float32"), Tensor([1024, 256, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([238, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 5941931],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=list[1,0,], output_padding=0, stride=list[1,1,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([132, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([21, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 8912897, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([252, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([238609295, 2, 3, 3],"float16"), Tensor([2, 2, 1, 1],"float16"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([181, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 190141782],"float32"), Tensor([3, 1, 3, 3],"float32"), bias=None, padding=1, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([26, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([95070891, 2, 2, 6],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.nn.functional.conv2d_transpose(Tensor([17, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 5941931, 16],"float32"), Tensor([6, 4, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 3, 190141782, 2],"float32"), weight=Tensor([3, 1, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2048, 16, 16],"float32"), Tensor([2048, 512, 726, 3],"float32"), padding=0, stride=2, groups=4, )
paddle.nn.functional.conv2d_transpose(Tensor([148, 2048, 7, 7],"float32"), Tensor([2048, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([16, 256, 14, 14],"float32"), Tensor([256, 256, 2, 2],"float32"), bias=Tensor([256],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2228225, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([64, 64, 29319, 19],"float32"), Tensor([64, 32, 5, 5],"float32"), bias=Tensor([32],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 2048, 16, 16],"float32"), Tensor([2048, 128, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1485483, 16, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 64, 64, 64],"float32"), Tensor([64, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=64, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([3, 84507459, 3, 3],"float32"), Tensor([1],"float32"), output_size=Tensor([2],"int64"), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 23767723, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=0, )
paddle.nn.functional.conv3d(Tensor([4, 8, 2970966, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 4, 44739243, 3],"float16"), weight=Tensor([2, 3, 3, 3, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 2970966, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 44739243, 4, 3],"float16"), weight=Tensor([2, 3, 3, 3, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 2970966, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(Tensor([742742, 6, 8, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(Tensor([4, 6, 1485483, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(Tensor([4, 2970966, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 1485483],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 4, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([22369622, 4, 4, 4, 3],"float16"), weight=Tensor([2, 3, 3, 3, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 2970966, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 2970966, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=1, )
paddle.nn.functional.conv3d(Tensor([4, 8, 2970966, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 4, 23767723, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(Tensor([4, 8, 2970966, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 2, 2, 2],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 23767723, 4, 4, 3],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 44739243, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([2, 3, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 44739243, 4, 4, 3],"float16"), weight=Tensor([2, 3, 3, 3, 3],"float16"), bias=Tensor([2],"float16"), stride=1, padding=0, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 23767723],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=list[2,2,2,], )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 23767723, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=tuple(1,2,2,), dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([11883862, 3, 4, 4, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=2, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 44739243, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=2, padding=1, )
paddle.nn.functional.conv3d(Tensor([4, 8, 2970966, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(x=Tensor([22369622, 3, 4, 4, 4],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=2, padding=1, )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 4, 44739243],"float16"), weight=Tensor([1, 3, 3, 3, 3],"float16"), bias=Tensor([1],"float16"), stride=list[2,2,1,], padding=list[1,2,2,], dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(x=Tensor([2, 3, 4, 23767723, 4],"float32"), weight=Tensor([1, 3, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=list[2,2,1,], padding=1, dilation=tuple(2,2,2,), )
paddle.nn.functional.conv3d(Tensor([4, 2970966, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 95070891, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 2970966, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 84507459, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 95070891, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 3, 84507459, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([95070891, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 21126865, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([1114113, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 2, 3, 3, 42253730],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 95070891, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=2, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 95070891, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 95070891, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 21126865],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 84507459, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([95070891, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 84507459, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 2, 42253730, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 84507459],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 84507459, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 84507459, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 84507459, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.nn.functional.conv3d_transpose(Tensor([742742, 6, 8, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 95070891, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 95070891],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 2228225, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 2228225],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 2, 2, 3],"float32"), Tensor([3, 1, 3, 3, 84507459],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 2228225, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 95070891],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 95070891],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=1, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1114113, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 95070891, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 2228225, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([5, 37138, 12, 32, 32],"float32"), Tensor([37138, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 2228225, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 2970966],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 2, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 84507459],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 95070891, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 95070891, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 2, 95070891, 2, 3],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), stride=1, padding=list[1,0,1,], groups=3, data_format="NDHWC", dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 95070891, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 2],"float32"), weight=Tensor([3, 28169153, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=0, dilation=1, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 2970966, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2228225, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 21126865, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 2, 95070891],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([95070891, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 95070891, 2, 2],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 1, 3, 3, 84507459],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(x=Tensor([2, 3, 2, 95070891, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=1, dilation=1, )
paddle.nn.functional.conv3d_transpose(x=Tensor([95070891, 3, 2, 2, 2],"float32"), weight=Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([1],"float32"), stride=1, padding=list[1,0,1,], dilation=1, )
paddle.nn.functional.conv3d_transpose(Tensor([2, 2, 95070891, 2, 3],"float32"), Tensor([3, 1, 3, 3, 3],"float32"), bias=Tensor([3],"float32"), padding=list[1,0,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NDHWC", )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(x1=Tensor([1431655766, 3],"float16"), x2=Tensor([1431655766, 3],"float16"), axis=0, )
paddle.nn.functional.cosine_similarity(Tensor([2228225, 1024],"float32"), Tensor([2228225, 1024],"float32"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), )
paddle.nn.functional.cosine_similarity(Tensor([17825793, 128],"float32"), Tensor([17825793, 128],"float32"), )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([3, 715827883, 2],"float16"), Tensor([3, 715827883, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([1, 5, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([1, 5],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([19014179, 12, 10],"float32"), Tensor([19014179, 1, 10],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([268435457, 8, 2],"float16"), Tensor([268435457, 8, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 858993460],"float16"), Tensor([1, 5, 858993460],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([1, 5, 2],"float16"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([1, 5],"float16"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([175515491, 13],"float32"), Tensor([175515491, 13],"float32"), axis=0, eps=1e-06, )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 1140850690],"float32"), x2=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 536870913, 4],"float16"), x2=Tensor([2, 536870913, 4],"float16"), axis=1, eps=0, )
paddle.nn.functional.cosine_similarity(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([1, 5],"float16"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([3, 8, 178956971],"float16"), Tensor([3, 8, 178956971],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([1, 5],"float16"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(Tensor([1, 2147483649, 2],"float16"), Tensor([1, 2147483649, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([178956971, 2, 3, 4],"float16"), Tensor([2, 3, 4],"float16"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 4294967297],"float16"), Tensor([1, 4294967297],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 2147483649],"float16"), x2=Tensor([2, 2147483649],"float16"), axis=1, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([10, 22817014, 10],"float32"), Tensor([10, 1, 10],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 858993460],"float16"), Tensor([1, 5, 858993460],"float16"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 858993460],"float16"), Tensor([1, 5, 858993460],"float16"), axis=2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 858993460],"float16"), Tensor([1, 5, 858993460],"float16"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([210, 10865245],"float32"), Tensor([210, 10865245],"float32"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 2147483649, 2],"float16"), Tensor([1, 2147483649, 2],"float16"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([429496730, 5, 2],"float16"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([429496730, 5, 2],"float16"), Tensor([1, 5, 2],"float16"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([10, 12, 19014179],"float32"), Tensor([10, 1, 19014179],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 2147483649],"float16"), x2=Tensor([2, 2147483649],"float16"), )
paddle.nn.functional.cosine_similarity(Tensor([32, 71303169],"float32"), Tensor([32, 71303169],"float32"), )
paddle.nn.functional.cross_entropy(Tensor([4, 157920, 2],"float32"), Tensor([4, 157920],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([14, 7, 23282668],"float32"), Tensor([14, 7, 1],"int64"), weight=None, ignore_index=0, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([8790, 8000],"float32"), Tensor([8790],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 2048, 32000],"float32"), Tensor([1, 2048, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4650, 8000],"float32"), Tensor([4650],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4050, 8000],"float32"), Tensor([4050],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4, 570425345],"float32"), Tensor([4, 1],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4740, 8000],"float32"), Tensor([4740],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3750, 8000],"float32"), Tensor([3750],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([780, 8000],"float32"), Tensor([780],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2, 1024, 1024, 2],"float32"), Tensor([2, 1024, 1024],"int64"), ignore_index=255, reduction="none", weight=None, )
paddle.nn.functional.cross_entropy(Tensor([24422, 93431],"float32"), label=Tensor([24422, 1],"int64"), soft_label=False, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([2, 302, 32000],"float32"), Tensor([2, 302, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2250, 8000],"float32"), Tensor([2250],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2580, 8000],"float32"), Tensor([2580],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1000, 2281702],"float32"), Tensor([1000],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1302, 50000],"float32"), Tensor([1302],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([6360, 8000],"float32"), Tensor([6360],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3540, 8000],"float32"), Tensor([3540],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4, 304, 32000],"float32"), Tensor([4, 304, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3840, 8000],"float32"), Tensor([3840],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 58, 32000],"float32"), Tensor([1, 58, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([16, 5337, 50304],"float16"), Tensor([16, 5337],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([3292499, 7, 99],"float32"), Tensor([3292499, 7, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([39269, 125, 125, 7],"float16"), Tensor([39269, 125, 125],"int64"), weight=Tensor([7],"float16"), ignore_index=255, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3330, 8000],"float32"), Tensor([3330],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([5760, 8000],"float32"), Tensor([5760],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([12, 190141782],"float32"), Tensor([12],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([252645136, 17],"float16"), Tensor([252645136],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(input=Tensor([100, 22817014],"float32"), label=Tensor([100, 1],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([10737419, 400],"float16"), Tensor([10737419, 1],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([1, 15018, 151936],"float32"), Tensor([1, 15018, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1710, 8000],"float32"), Tensor([1710],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4260, 8000],"float32"), Tensor([4260],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3360, 8000],"float32"), Tensor([3360],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([8040, 8000],"float32"), Tensor([8040],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(input=Tensor([1140850690, 2],"float32"), label=Tensor([1140850690, 1],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([2, 512, 1024, 2],"float32"), Tensor([2, 512, 1024],"int64"), ignore_index=255, reduction="none", weight=None, )
paddle.nn.functional.cross_entropy(Tensor([2850, 8000],"float32"), Tensor([2850],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([6270, 8000],"float32"), Tensor([6270],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1050, 8000],"float32"), Tensor([1050],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4, 396, 32000],"float32"), Tensor([4, 396, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2, 20, 57042535],"float32"), Tensor([2, 20, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([114085069, 20],"float32"), Tensor([114085069, 1],"int64"), reduction="none", use_softmax=True, )
paddle.nn.functional.cross_entropy(Tensor([2880, 8000],"float32"), Tensor([2880],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([7230, 8000],"float32"), Tensor([7230],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([6810, 8000],"float32"), Tensor([6810],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([510, 8000],"float32"), Tensor([510],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3, 2, 2, 357913942],"float16"), Tensor([3, 2, 2],"int64"), soft_label=True, label_smoothing=0.7336344401714625, axis=-1, weight=None, reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([990, 8000],"float32"), Tensor([990],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3450, 8000],"float32"), Tensor([3450],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4410, 8000],"float32"), Tensor([4410],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2370, 8000],"float32"), Tensor([2370],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(input=Tensor([1917, 2240463],"float16"), label=Tensor([1917],"int64"), reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([8220, 8000],"float32"), Tensor([8220],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1830, 8000],"float32"), Tensor([1830],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([104, 21939437],"float32"), Tensor([104, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([102, 22369622],"float32"), Tensor([102, 1],"int64"), weight=None, ignore_index=-1, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1290, 8000],"float32"), Tensor([1290],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([7200, 8000],"float32"), Tensor([7200],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 58, 39339679],"float32"), Tensor([1, 58, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([14, 162978670],"float32"), Tensor([14, 1],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([4, 512, 512, 3],"float64"), Tensor([4, 512, 512],"int64"), weight=Tensor([3],"float64"), ignore_index=255, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1006, 2268093],"float32"), Tensor([1006],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1470, 8000],"float32"), Tensor([1470],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([64, 187, 190651],"float32"), Tensor([64, 187],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(input=Tensor([1242, 21128],"float32"), label=Tensor([1242, 1],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([6330, 8000],"float32"), Tensor([6330],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(input=Tensor([53024288, 81],"float16"), label=Tensor([53024288],"int64"), reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([2, 288, 32000],"float32"), Tensor([2, 288, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4, 377, 32000],"float32"), Tensor([4, 377, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4, 157920, 3613],"float32"), Tensor([4, 157920],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1140850690, 2],"float32"), label=Tensor([1140850690, 1],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([1260, 8000],"float32"), Tensor([1260],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4, 346, 32000],"float32"), Tensor([4, 346, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2280, 8000],"float32"), Tensor([2280],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4890, 8000],"float32"), Tensor([4890],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 83887, 51200],"float16"), Tensor([1, 83887, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([3720, 8000],"float32"), Tensor([3720],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2, 32, 32, 1114113],"float32"), Tensor([2, 32, 32],"int64"), weight=None, ignore_index=255, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1590, 8000],"float32"), Tensor([1590],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([228170138, 10],"float32"), Tensor([228170138, 1],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([10080, 8000],"float32"), Tensor([10080],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([5280, 8000],"float32"), Tensor([5280],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 1024, 50257],"float32"), Tensor([1, 1024, 1],"int64"), weight=None, ignore_index=0, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2820, 8000],"float32"), Tensor([2820],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([2, 1140850690],"float32"), Tensor([2, 1],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1, 1024, 4194305],"float16"), Tensor([1, 1024, 1],"int64"), weight=None, ignore_index=-100, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([20259280, 212],"float16"), Tensor([20259280],"int64"), ignore_index=-1, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([52, 30, 1462630],"float32"), Tensor([52, 30],"int64"), weight=None, ignore_index=0, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([100, 42949673],"float16"), Tensor([100],"int64"), weight=None, ignore_index=-100, reduction="sum", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([5070, 8000],"float32"), Tensor([5070],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([1, 4294967297],"float16"), Tensor([1, 1],"int64"), )
paddle.nn.functional.cross_entropy(Tensor([3090, 8000],"float32"), Tensor([3090],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([74756, 30522],"float32"), Tensor([74756, 1],"int64"), reduction="none", ignore_index=-1, )
paddle.nn.functional.cross_entropy(Tensor([14, 1646250, 99],"float32"), Tensor([14, 1646250, 1],"int64"), weight=None, ignore_index=0, reduction="none", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([192, 11883862],"float32"), Tensor([192],"int64"), weight=None, ignore_index=6626, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(Tensor([4140, 8000],"float32"), Tensor([4140],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.cross_entropy(input=Tensor([107995, 21128],"float32"), label=Tensor([107995, 1],"int64"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([14940, 8000],"float32"), Tensor([14940],"int64"), weight=None, ignore_index=-100, reduction="mean", soft_label=False, axis=-1, use_softmax=True, label_smoothing=0.0, name=None, )
paddle.nn.functional.elu(Tensor([71303169, 32],"float32"), )
paddle.nn.functional.elu(Tensor([114085069, 20],"float32"), 1.0, )
paddle.nn.functional.elu(Tensor([477218589, 3, 3],"float16"), 1.0, None, )
paddle.nn.functional.elu(Tensor([3, 3, 477218589],"float16"), 1.0, None, )
paddle.nn.functional.elu(Tensor([3, 3, 477218589],"float16"), 0, None, )
paddle.nn.functional.elu(Tensor([2, 2147483649],"float16"), 0.2, None, )
paddle.nn.functional.elu(x=Tensor([3, 477218589, 3],"float16"), )
paddle.nn.functional.elu(Tensor([253522376, 3, 3],"float32"), 1.0, None, )
paddle.nn.functional.elu(x=Tensor([3, 477218589, 3],"float16"), alpha=0, )
paddle.nn.functional.elu(Tensor([3, 477218589, 3],"float16"), 2, None, )
paddle.nn.functional.elu(x=Tensor([3, 3, 253522376],"float32"), )
paddle.nn.functional.elu(Tensor([1, 1140850690, 2],"float32"), )
paddle.nn.functional.elu(Tensor([3, 477218589, 3],"float16"), 0, None, )
paddle.nn.functional.elu(Tensor([35651585, 64],"float32"), )
paddle.nn.functional.elu(Tensor([477218589, 3, 3],"float16"), 0, None, )
paddle.nn.functional.elu(Tensor([15, 152113426],"float32"), 1.0, )
paddle.nn.functional.elu(x=Tensor([477218589, 3, 3],"float16"), )
paddle.nn.functional.elu(Tensor([3, 3, 253522376],"float32"), 1.0, None, )
paddle.nn.functional.elu(Tensor([477218589, 3, 3],"float16"), 2, None, )
paddle.nn.functional.elu(x=Tensor([3, 477218589, 3],"float16"), alpha=2, )
paddle.nn.functional.elu(x=Tensor([2147483649, 2],"float16"), alpha=0.2, )
paddle.nn.functional.elu(Tensor([2147483649, 2],"float16"), 0.2, None, )
paddle.nn.functional.elu(x=Tensor([253522376, 3, 3],"float32"), )
paddle.nn.functional.elu(Tensor([1, 21504, 106106],"float32"), )
paddle.nn.functional.elu(x=Tensor([3, 253522376, 3],"float32"), )
paddle.nn.functional.elu(Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.elu(Tensor([10, 20, 11408507],"float32"), )
paddle.nn.functional.elu(Tensor([114085069, 20, 1],"float32"), )
paddle.nn.functional.elu(Tensor([53053, 21504, 2],"float32"), )
paddle.nn.functional.elu(x=Tensor([477218589, 3, 3],"float16"), alpha=2, )
paddle.nn.functional.elu(x=Tensor([477218589, 3, 3],"float16"), alpha=0, )
paddle.nn.functional.elu(x=Tensor([3, 3, 477218589],"float16"), alpha=0, )
paddle.nn.functional.elu(x=Tensor([3, 3, 477218589],"float16"), )
paddle.nn.functional.elu(x=Tensor([2, 2147483649],"float16"), alpha=0.2, )
paddle.nn.functional.elu(x=Tensor([3, 3, 477218589],"float16"), alpha=2, )
paddle.nn.functional.elu(Tensor([3, 253522376, 3],"float32"), 1.0, None, )
paddle.nn.functional.elu(Tensor([10, 228170138, 1],"float32"), )
paddle.nn.functional.elu(Tensor([3, 3, 477218589],"float16"), 2, None, )
paddle.nn.functional.elu(Tensor([3, 477218589, 3],"float16"), 1.0, None, )
paddle.nn.functional.embedding(Tensor([6, 6],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 52],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 110],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 8],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 207],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([408, 12],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([5, 142],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4, 134],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([208, 22],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([136, 26],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([264, 19],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([10, 20],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([512, 7],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 69],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([120, 36],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 209],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 99],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([6, 91],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1024],"int64"), weight=Tensor([151936, 128],"bfloat16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([9, 66],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 47],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([30, 134],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([7, 126],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([5, 89],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 94],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 4],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 185],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 49],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4, 3, 1],"int64"), weight=Tensor([10, 228170138],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([6, 149],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 225],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([5, 49],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 58],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 50],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([30, 117],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([5, 27],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 176],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([5, 1],"int64"), weight=Tensor([51865, 768],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 214],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([6, 76],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 120],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 31],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([10, 73],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([264, 14],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([30, 190],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([30, 293],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([264, 18],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([30, 187],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 200],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 100],"int64"), weight=Tensor([8912897, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([6, 42],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([6, 147],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([10, 156],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([6, 61],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 148],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([9, 93],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 45],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 16],"int32"), Tensor([128, 17825793],"float32"), )
paddle.nn.functional.embedding(Tensor([3, 11],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([5, 3],"int64"), weight=Tensor([51865, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 58],"int64"), weight=Tensor([65024, 64],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([30],"int64"), Tensor([511, 4465170],"float32"), )
paddle.nn.functional.embedding(Tensor([64, 75],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 9],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 11],"int64"), weight=Tensor([65535, 512],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([7, 173],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([9, 101],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([30, 87],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 128],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 53],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 253],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 135],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([6, 34],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([9, 58],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([216, 17],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([5, 3],"int64"), weight=Tensor([51865, 384],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([71],"int64"), weight=Tensor([65024, 512],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([7, 73],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([5, 72],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 27],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 79],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([10, 75],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 128],"int64"), weight=Tensor([30522, 768],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1],"int64"), weight=Tensor([51865, 1280],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 263],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([10, 23],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([7, 4],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([7, 164],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([7, 86],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([232, 20],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 112],"int64"), weight=Tensor([32000, 768],"float16"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([5, 103],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([9, 3],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 92],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([9, 16],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([4, 59],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([10, 9],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 85],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([168, 20],"int64"), weight=Tensor([1025, 1024],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 10],"int64"), weight=Tensor([8000, 256],"float32"), padding_idx=None, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.fold(Tensor([15845149, 12, 12],"float32"), output_sizes=list[4,5,], kernel_sizes=2, )
paddle.nn.functional.gelu(Tensor([16, 34817, 64, 64],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([20, 64, 2101],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([7, 153, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([5, 48, 48, 3072],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([8, 236, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 220, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([128, 56, 1561, 384],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([10, 113, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 16, 28, 30, 768],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([30, 123, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([124, 128, 2568, 56],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([16, 16, 139265, 64],"float32"), approximate=False, )
paddle.nn.functional.gelu(Tensor([8, 229, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([477218589, 3, 3],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 57, 56, 384],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([9, 112, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 159, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 133, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([71303169, 1, 32],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 136, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([391, 16, 14, 17, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([10, 169, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 215, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 260, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 143, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 1024, 4194305],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([32, 56, 56, 512],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([32, 144, 6144],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([30, 169, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1025, 1024, 4096],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([6, 164, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 198, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 201, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1024, 16, 262145],"float16"), approximate=True, )
paddle.nn.functional.gelu(Tensor([1, 2116, 2048],"float32"), )
paddle.nn.functional.gelu(Tensor([8193, 128, 4096],"float16"), True, None, )
paddle.nn.functional.gelu(Tensor([124, 56, 56, 512],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 375527, 7, 7],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 557057, 4096],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([8, 268, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([128, 14, 14, 171197],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 28, 28, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([10, 103, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 138, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([124, 257, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([8, 226, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([3083381, 20, 37],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([32, 96, 96, 96],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([8, 157, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([124, 320, 14, 14],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([17120, 196, 1280],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([128, 96, 242, 768],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([520, 8259553],"float16"), )
paddle.nn.functional.gelu(Tensor([285212673, 1, 8],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([30, 100, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([128, 96, 96, 768],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 15, 14, 1536],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([128, 7, 7, 684785],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([512, 41944, 8, 25],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([1544, 768],"float32"), )
paddle.nn.functional.gelu(Tensor([32, 14, 14, 2048],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([30, 66, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 144, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([128, 12, 12, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([7, 162, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 139, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([16, 196, 2048],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([124, 640, 7, 7],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([30, 121, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 1764, 2048],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 153, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([7, 164, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([32, 1141, 250, 250],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 80, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([7, 209, 4096],"float32"), )
paddle.nn.functional.gelu(Tensor([9, 114, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([32, 9216, 768],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([10, 184, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 54, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([128, 10923, 3072],"float16"), )
paddle.nn.functional.gelu(Tensor([124, 12, 12, 4096],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([8, 269, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([128, 7, 1561, 3072],"float16"), False, None, )
paddle.nn.functional.gelu(Tensor([128, 96, 96, 512],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([30, 192, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 137, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([30, 129, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([405132, 11, 512],"float32"), approximate=True, )
paddle.nn.functional.gelu(Tensor([2, 400, 2048],"float32"), )
paddle.nn.functional.gelu(Tensor([6, 179, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([10, 175, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 214, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([2, 4096, 512],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([30, 39, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([13, 10969719, 16],"float32"), True, None, )
paddle.nn.functional.gelu(Tensor([10, 122, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([8, 287, 1024],"float32"), )
paddle.nn.functional.gelu(Tensor([1, 1024, 1024],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([1, 16, 28, 29, 768],"float32"), False, None, )
paddle.nn.functional.gelu(Tensor([6, 181, 1024],"float32"), )
paddle.nn.functional.glu(Tensor([30, 187, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 142, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 112, 20372334],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 162, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([42851, 104, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([43691, 102, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([40149, 111, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 252, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 98, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 256, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 78, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([214748365, 20],"float16"), -1, )
paddle.nn.functional.glu(Tensor([8, 269, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 125, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 97, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 66, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 275, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 120, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 105, 21730490],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([42042, 106, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 135, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([445645, 10, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 76, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 264, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 77, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 253, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 274, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 130, 512],"float32"), -1, None, )
paddle.nn.functional.glu(x=Tensor([4, 67108865, 2, 8],"float16"), )
paddle.nn.functional.glu(x=Tensor([23767723, 6, 2, 8],"float32"), )
paddle.nn.functional.glu(Tensor([30, 298, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 124, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 155, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 241, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 272, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 258, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([214748365, 20],"float16"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 165, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 128, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 106, 512],"float32"), -1, None, )
paddle.nn.functional.glu(x=Tensor([1073741825, 4],"float16"), )
paddle.nn.functional.glu(Tensor([30, 84, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 67, 512],"float32"), -1, None, )
paddle.nn.functional.glu(x=Tensor([4, 35651585, 2, 8],"float32"), axis=2, )
paddle.nn.functional.glu(Tensor([30, 134, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 190, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([43267, 103, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 100, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 102, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 457, 512],"float32"), -1, None, )
paddle.nn.functional.glu(x=Tensor([44739243, 6, 2, 8],"float16"), )
paddle.nn.functional.glu(Tensor([30, 99, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 93, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 133, 512],"float32"), -1, None, )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 89478486],"float16"), axis=0, )
paddle.nn.functional.glu(Tensor([8, 248, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 264, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 255, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 240, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 82, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([44124, 101, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 73, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([42443, 105, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 212, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 154, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 220, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 262, 512],"float32"), -1, None, )
paddle.nn.functional.glu(x=Tensor([142606337, 2, 8],"float32"), )
paddle.nn.functional.glu(x=Tensor([268435457, 2, 8],"float16"), )
paddle.nn.functional.glu(x=Tensor([4, 6, 11883862, 8],"float32"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 47535446],"float32"), axis=2, )
paddle.nn.functional.glu(Tensor([30, 87, 512],"float32"), -1, None, )
paddle.nn.functional.glu(x=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.glu(Tensor([1, 110, 20742740],"float32"), -1, None, )
paddle.nn.functional.glu(x=Tensor([10, 53687092, 8],"float16"), )
paddle.nn.functional.glu(Tensor([30, 339, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 293, 512],"float32"), -1, None, )
paddle.nn.functional.glu(x=Tensor([4, 6, 11883862, 8],"float32"), axis=2, )
paddle.nn.functional.glu(Tensor([30, 169, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 172, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 281, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 284, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 85, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 307, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 108, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 86, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 171, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 80, 512],"float32"), -1, None, )
paddle.nn.functional.glu(x=Tensor([4, 6, 22369622, 8],"float16"), )
paddle.nn.functional.glu(Tensor([8, 247, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 149, 512],"float32"), -1, None, )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 47535446],"float32"), )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 47535446],"float32"), axis=0, )
paddle.nn.functional.glu(Tensor([30, 175, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 138, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 289, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 141, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 83, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([8, 259, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([30, 90, 512],"float32"), -1, None, )
paddle.nn.functional.grid_sample(Tensor([56, 10186167, 2, 2],"float32"), Tensor([56, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([176, 3166, 64, 64],"float32"), Tensor([176, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 212212, 64],"float32"), Tensor([56, 64, 212212, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 13927, 40],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 2037234],"float32"), Tensor([1, 368, 416, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 1629787, 350],"float32"), Tensor([1, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([5821, 4, 280, 350],"float32"), Tensor([5821, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 4, 3395389],"float32"), Tensor([56, 4, 4, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([512, 3, 64, 23211],"float32"), Tensor([512, 32, 100, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([100, 1, 768, 768],"float32"), Tensor([100, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([44565, 32, 40, 40],"float32"), Tensor([44565, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 64],"float32"), Tensor([1, 64, 17825793, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 18, 25],"float32"), Tensor([8, 38367, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 6964, 80],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([47535446, 3, 4, 4],"float32"), Tensor([47535446, 4, 4, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 12, 9],"float32"), Tensor([8, 36828, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 368, 1550069],"float32"), Tensor([1, 391, 436, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 1901418, 300],"float32"), Tensor([1, 1901418, 300, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 80, 80],"float32"), Tensor([16, 300, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 12964213, 176],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 2742430, 32, 26],"float32"), Tensor([1, 32, 26, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([685608, 4, 32, 26],"float32"), Tensor([685608, 32, 26, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 20372334, 28],"float32"), Tensor([1, 28, 20372334, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([4, 34817, 128, 128],"float32"), Tensor([4, 256, 256, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 4, 8912897, 64],"float32"), Tensor([1, 64, 8912897, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 12400551, 184],"float32"), Tensor([1, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([32, 32, 80, 80],"float32"), Tensor([32, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 298, 364],"float32"), Tensor([1, 2803073, 407, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 64],"float32"), Tensor([1, 17825793, 64, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([3727, 4, 368, 416],"float32"), Tensor([3727, 391, 436, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([11606, 3, 256, 256],"float32"), Tensor([11606, 256, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(x=Tensor([4, 64, 80, 94, 311],"float32"), grid=Tensor([4, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([64, 32, 34, 34],"float32"), Tensor([64, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 256, 64, 8705],"float32"), Tensor([16, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 89, 72],"float32"), Tensor([8, 9, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 64, 64],"float32"), Tensor([56, 64, 318318, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 88, 88],"float32"), Tensor([8, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([2177, 256, 64, 64],"float32"), Tensor([2177, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float32"), Tensor([4, 256, 256, 2],"float32"), )
paddle.nn.functional.grid_sample(x=Tensor([4, 244, 80, 94, 311],"float32"), grid=Tensor([4, 244, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 2, 2],"float32"), Tensor([56, 10186167, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([190141782, 3, 2, 2],"float32"), Tensor([190141782, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 2037234],"float32"), Tensor([1, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([73661, 1, 176, 176],"float32"), Tensor([73661, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 11142, 40, 40],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 192, 11883862],"float32"), Tensor([1, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 20, 27853],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float32"), Tensor([4, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([16, 32, 19, 29],"float32"), Tensor([16, 11645, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([2970966, 3, 16, 16],"float32"), Tensor([2970966, 16, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 176, 176],"float32"), Tensor([1, 90948, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([176, 3, 64, 64],"float32"), Tensor([176, 64, 101283, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([200, 1, 136, 136],"float32"), Tensor([200, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 44565, 20, 20],"float32"), Tensor([128, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([512, 3, 64, 256],"float32"), Tensor([512, 22283, 100, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([16, 3, 185686, 256],"float32"), Tensor([16, 256, 256, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 72, 100],"float32"), Tensor([8, 38367, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 368, 416],"float32"), Tensor([1, 2616631, 436, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 184, 184],"float32"), Tensor([1, 90948, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 32, 32],"float32"), Tensor([56, 32, 636636, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 3802836, 300, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([46422, 3, 64, 256],"float32"), Tensor([46422, 32, 100, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 4, 1629787, 350],"float32"), Tensor([1, 368, 1629787, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 144, 200],"float32"), Tensor([8, 9, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 256, 256],"float32"), Tensor([16, 278529, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 1371215, 416],"float32"), Tensor([1, 391, 436, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([17409, 32, 64, 64],"float32"), Tensor([17409, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([5259, 4, 298, 364],"float32"), Tensor([5259, 352, 407, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 21035, 298, 364],"float32"), Tensor([1, 352, 407, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 2177, 256, 256],"float32"), Tensor([16, 256, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 280, 4074467, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 256, 64, 64],"float32"), Tensor([16, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([1, 128, 139265, 128],"float32"), Tensor([1, 128, 139265, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([16, 32, 80, 80],"float32"), Tensor([16, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 128, 128, 128],"float32"), Tensor([1, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([56, 39790, 32, 32],"float32"), Tensor([56, 32, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 48, 36],"float32"), Tensor([8, 36828, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 32, 32],"float32"), Tensor([56, 636636, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 32, 10, 15],"float32"), Tensor([16, 11645, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 64, 64],"float32"), Tensor([1, 15011194, 76, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 6790778, 2],"float32"), Tensor([56, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 20372334, 28],"float32"), Tensor([1, 28, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 8912897, 64],"float32"), Tensor([1, 76, 76, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([727584, 4, 28, 28],"float32"), Tensor([727584, 34, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 1629787, 350],"float32"), Tensor([1, 298, 1629787, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 34817],"float32"), Tensor([4, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 3259574, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([56, 159159, 16, 16],"float32"), Tensor([56, 16, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([4, 139265, 64, 64],"float32"), Tensor([4, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([4, 128, 34817, 128],"float32"), Tensor([4, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([56, 3, 16, 16],"float32"), Tensor([56, 16, 1273271, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 3395389, 4],"float32"), Tensor([56, 4, 4, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(x=Tensor([4, 64, 305, 94, 311],"float32"), grid=Tensor([4, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([10518, 4, 280, 350],"float32"), Tensor([10518, 298, 364, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 8912897, 64],"float32"), Tensor([1, 76, 8912897, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([32, 32, 64, 64],"float32"), Tensor([32, 500, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 72, 72],"float32"), Tensor([8, 496, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([176, 3, 67522, 64],"float32"), Tensor([176, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([8, 32, 36, 50],"float32"), Tensor([8, 38367, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(x=Tensor([16, 64, 80, 94, 311],"float32"), grid=Tensor([16, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.group_norm(Tensor([30, 256, 8, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 4, 10],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 16, 104],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([17141, 128, 20, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 4, 42],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 120],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 8, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 4, 22],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 8, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 32, 288],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 64, 16, 136],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 8, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 128, 16, 168],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 16, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 8, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 64, 16, 208],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 16, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 89478486, 4],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([1, 128, 636636, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 128, 16, 112],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 8, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 16, 96],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([5, 256, 16, 144],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 32, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([9, 64, 32, 176],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 32, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 8, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([20632, 128, 12, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 16, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 16, 96],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 16, 144],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 3, 89478486, 2, 4],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([30, 256, 8, 68],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 4, 52],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 24, 112],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 891290, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 136],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 16, 88],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 64, 32, 224],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 222823, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 16, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 2, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 10, 222823],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 8, 112],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 4, 24],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([9285, 1024, 6, 40],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 64, 32, 208],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 8, 68],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([13264, 1024, 6, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 512, 8, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 8, 48],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 16, 112],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 128, 20, 891290],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([34817, 1024, 2, 32],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 36],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 44],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 12, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 104],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([74275, 128, 12, 20],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 32, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 134217729, 2, 2, 4],"float16"), num_groups=2, weight=Tensor([4],"float16"), bias=Tensor([4],"float16"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([30, 128, 16, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 8, 278529],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 8, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 8, 72],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 16, 128],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([7, 512, 8, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 256, 24, 120],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([6, 128, 16, 96],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 16, 272],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 16, 160],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 4, 26],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 256, 16, 88],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 58638, 38],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([3, 256, 16, 104],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([8, 256, 16, 112],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([7, 1024, 4, 38],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([10, 128, 16, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 76],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 16, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 4, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 6, 371371],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 8, 64],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([37138, 1024, 6, 10],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 4, 38],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 80],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 159159, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([1, 1024, 2, 1114113],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 1024, 4, 14],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 16, 168],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 64, 16, 208],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 128, 8, 84],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 8, 28],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.group_norm(Tensor([2, 64, 48, 240],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([64],"float32"), bias=Tensor([64],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 256, 16, 56],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.group_norm(Tensor([30, 512, 8, 16],"float32"), num_groups=32, epsilon=1e-05, weight=Tensor([512],"float32"), bias=Tensor([512],"float32"), )
paddle.nn.functional.hardshrink(Tensor([4294967297],"float16"), 0.5, None, )
paddle.nn.functional.hardshrink(Tensor([2281701379],"float32"), 0.5, None, )
paddle.nn.functional.hardshrink(Tensor([4294967297],"float16"), -1, None, )
paddle.nn.functional.hardshrink(x=Tensor([4294967297],"float16"), threshold=0, )
paddle.nn.functional.hardshrink(Tensor([4294967297],"float16"), 0, None, )
paddle.nn.functional.hardshrink(Tensor([2281701379],"float32"), -1, None, )
paddle.nn.functional.hardshrink(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.hardshrink(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.hardshrink(x=Tensor([4294967297],"float16"), threshold=-1, )
paddle.nn.functional.hardsigmoid(Tensor([18512791, 232, 1, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([64, 256, 262145, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 384, 1, 2970966],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([35791395, 120, 1, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 120, 19014179, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 672, 3395389, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8388609, 512, 1, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 64, 131073, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([64, 120, 1, 297097],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 192, 1, 11883862],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 384, 5941931, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([4, 192, 1, 2970966],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1024, 120, 18569, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([2970966, 768, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([4, 570425345, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 192, 1, 5941931],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([64, 512, 1, 131073],"float16"), )
paddle.nn.functional.hardsigmoid(Tensor([3395389, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 384, 1398102, 1],"float16"), )
paddle.nn.functional.hardsigmoid(Tensor([19014179, 120, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([64, 192, 1, 349526],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([4, 120, 4753545, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 96, 5941931, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([512, 464, 18079, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 480, 1, 4753545],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 1024, 1, 2228225],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 512, 4456449, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 116, 72316, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([71582789, 60, 1, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 240, 9285, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 16, 1, 139265],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([16, 384, 1, 371371],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 288, 7737, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 2228225, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 1024, 1, 8193],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([11184811, 384, 1, 1],"float16"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 2281701379, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 144, 1, 29128],"float16"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8947849, 480, 1, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 384, 1, 371371],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1024, 96, 1, 43691],"float16"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 96, 23767723, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 192, 11883862, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 768, 185686, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([128, 168, 1, 106106],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 48, 1, 47535446],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([31690297, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([11184811, 384, 1, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16777217, 256, 1, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 192, 5941931, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([15845149, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([192, 240, 1, 93207],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1782580, 1280, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 384, 2970966, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 240, 1, 9507090],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([3, 1431655766],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([128, 120, 148549, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([3565159, 640, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 128, 1, 65537],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([285213, 200, 40],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([33554433, 128, 1, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 768, 1485483, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([17895698, 240, 1, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 768, 1, 10923],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([256, 1280, 1, 13108],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([142606337, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 240, 1, 9285],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1140850690, 2],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 256, 1, 16385],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 144, 29128, 1],"float16"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 96, 5592406, 1],"float16"), )
paddle.nn.functional.hardsigmoid(Tensor([1024, 288, 1, 14564],"float16"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 256, 1, 262145],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([8, 536870913, 1, 1],"float16"), )
paddle.nn.functional.hardsigmoid(Tensor([512, 512, 1, 16385],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 96, 1, 23767723],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([29826162, 144, 1, 1],"float16"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([9507090, 240, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 1140850690],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([300, 4096],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4753545, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([7456541, 576, 1, 1],"float16"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([23767723, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 72, 1, 31690297],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 232, 1, 36158],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 96, 23211, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 384, 46422, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([37025581, 116, 1, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 60, 139811, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([19014179, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 384, 21846, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 64, 1, 131073],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2376773, 960, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([4, 240, 2376773, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([512, 116, 1, 72316],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([16, 256, 557057, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([512, 176, 47663, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([23767723, 96, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([3355444, 1280, 1, 1],"float16"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([17895698, 240, 1, 1],"float16"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardswish(Tensor([64, 384, 11, 11],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 640, 30, 30],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1024, 240, 14, 1249],"float16"), None, )
paddle.nn.functional.hardswish(Tensor([32, 64, 26, 26],"float32"), )
paddle.nn.functional.hardswish(Tensor([48, 640, 24, 24],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([512, 16, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([256, 240, 4, 50],"float32"), )
paddle.nn.functional.hardswish(Tensor([256, 240, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1073741825, 4],"float16"), None, )
paddle.nn.functional.hardswish(Tensor([32, 48, 192, 192],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 7895161, 17, 17],"float32"), )
paddle.nn.functional.hardswish(Tensor([1024, 256, 2341, 7],"float16"), None, )
paddle.nn.functional.hardswish(Tensor([48, 128, 15, 15],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 128, 80, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 320, 88, 88],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([256, 120, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 256, 84, 84],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([16, 120, 80, 27963],"float16"), )
paddle.nn.functional.hardswish(Tensor([640, 240, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1, 108652447, 21],"float32"), )
paddle.nn.functional.hardswish(Tensor([48, 128, 52, 52],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 256, 44, 44],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([178957, 120, 4, 50],"float16"), )
paddle.nn.functional.hardswish(Tensor([64, 512, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 24, 240, 240],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 320, 120, 120],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([512, 464, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 512, 22, 22],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 320, 44, 44],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 640, 36, 36],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([512, 256, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 160, 72, 72],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 192, 26, 26],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 320, 60, 60],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1024, 32, 56, 2341],"float16"), None, )
paddle.nn.functional.hardswish(Tensor([2, 80, 352, 352],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([256, 48, 56, 56],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 16, 128, 96],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 512, 38, 38],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([256, 128, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 16, 208, 208],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 80, 80],"float32"), )
paddle.nn.functional.hardswish(Tensor([5704254, 1, 20, 20],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 24, 224, 224],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([128, 1200, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 16, 256, 256],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 247581, 72],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 192, 52, 52],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 192, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 128, 84, 84],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 240, 26, 26],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 24, 208, 208],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 160, 88, 88],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 10140896, 15, 15],"float32"), )
paddle.nn.functional.hardswish(Tensor([48, 160, 48, 48],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([90, 128, 28, 28],"float32"), )
paddle.nn.functional.hardswish(Tensor([90, 128, 24, 24],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([24, 256, 52, 40],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 160, 176, 176],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([512, 116, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 160, 56, 56],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 40, 192, 192],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([22817014, 1, 10, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([512, 576, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([256, 432, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([128, 240, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([24, 16, 384, 288],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 256, 42, 42],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 336, 7, 7],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 24, 240, 240],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 384, 15, 15],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 192, 22, 22],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 64, 144, 144],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 336, 30, 30],"float32"), )
paddle.nn.functional.hardswish(Tensor([64, 96, 36, 36],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([512, 116, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 128, 101283, 176],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([128, 240, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1, 87757746, 26],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 320, 72, 72],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 40, 384, 384],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 128, 112, 112],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 320, 96, 96],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([24, 64, 192, 144],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 48, 224, 224],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([90, 512, 12, 12],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 384, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([128, 136, 14, 14],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([48, 160, 96, 96],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 48, 48, 48],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 128, 84, 84],"float32"), )
paddle.nn.functional.hardswish(Tensor([4, 64, 72, 72],"float32"), )
paddle.nn.functional.hardswish(Tensor([90, 512, 11, 11],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 240, 16, 80],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([64, 16, 192, 192],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([8, 16, 208, 208],"float32"), )
paddle.nn.functional.hardswish(Tensor([8, 64, 288, 288],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([4, 80, 640, 640],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([32, 128, 28, 28],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([640, 200, 14, 14],"float32"), None, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=0, min=-3.4, )
paddle.nn.functional.hardtanh(Tensor([10, 228170138, 1],"float32"), -1.0, 1.0, )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=-3.2, min=-3.2, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), -3.4, 0, None, )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=1.3, min=0, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), 2.3, 3.5, None, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), 0, 1.3, None, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=-3.2, min=-3.2, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=1, min=1, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), 0, 0, None, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=1.3, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=-3.2, min=-3.2, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=3.5, min=2.3, )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=3.5, min=2.3, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), 2.3, 3.5, None, )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=0, min=-3.4, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), 3.3, -3.3, None, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=1.3, min=0, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), 0, 0, None, )
paddle.nn.functional.hardtanh(Tensor([10, 20, 11408507],"float32"), -1.0, 1.0, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), 0, 1.3, None, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=-3.3, min=3.3, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), 0, 1.3, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), 3.3, -3.3, None, )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=-3.3, min=3.3, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), 0, 0, None, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), 1, 1, None, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), -3.2, -3.2, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), -3.2, -3.2, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), 2.3, 3.5, None, )
paddle.nn.functional.hardtanh(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=1, min=1, )
paddle.nn.functional.hardtanh(x=Tensor([477218589, 3, 3],"float16"), max=0, min=0, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), -3.4, 0, None, )
paddle.nn.functional.hardtanh(Tensor([4294967297],"float16"), -1.0, 1.0, None, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), 3.3, -3.3, None, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=1, min=1, )
paddle.nn.functional.hardtanh(Tensor([114085069, 20, 1],"float32"), -1.0, 1.0, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), -3.2, -3.2, None, )
paddle.nn.functional.hardtanh(Tensor([2281701379],"float32"), -1.0, 1.0, None, )
paddle.nn.functional.hardtanh(Tensor([3, 477218589, 3],"float16"), -3.4, 0, None, )
paddle.nn.functional.hardtanh(Tensor([477218589, 3, 3],"float16"), 1, 1, None, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=-3.3, min=3.3, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 477218589],"float16"), max=0, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=3.5, min=2.3, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 477218589],"float16"), 1, 1, None, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=0, min=-3.4, )
paddle.nn.functional.hardtanh(x=Tensor([3, 477218589, 3],"float16"), max=0, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 89478486, 4],"float16"), Tensor([4, 3, 89478486, 4],"float16"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([85899346, 10, 5],"float16"), Tensor([85899346, 10, 5],"float16"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 42949673],"float16"), Tensor([10, 10, 42949673],"float16"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 89478486, 3, 4],"float16"), Tensor([4, 89478486, 3, 4],"float16"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([85899346, 10, 5],"float16"), Tensor([85899346, 10, 5],"float16"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 42949673],"float16"), Tensor([10, 10, 42949673],"float16"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), reduction="mean", margin=4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 85899346, 5],"float16"), Tensor([10, 85899346, 5],"float16"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 42949673],"float16"), Tensor([10, 10, 42949673],"float16"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([85899346, 10, 5],"float16"), Tensor([85899346, 10, 5],"float16"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 357913942, 3],"float16"), Tensor([4, 357913942, 3],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 119304648],"float16"), Tensor([4, 3, 3, 119304648],"float16"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 10, 42949673],"float16"), Tensor([10, 10, 42949673],"float16"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 89478486, 4],"float16"), Tensor([4, 3, 89478486, 4],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([119304648, 3, 3, 4],"float16"), Tensor([119304648, 3, 3, 4],"float16"), reduction="sum", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([85899346, 10, 5],"float16"), Tensor([85899346, 10, 5],"float16"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([119304648, 3, 3, 4],"float16"), Tensor([119304648, 3, 3, 4],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 89478486, 3, 4],"float16"), Tensor([4, 89478486, 3, 4],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 85899346, 5],"float16"), Tensor([10, 85899346, 5],"float16"), reduction="sum", )
paddle.nn.functional.hinge_embedding_loss(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), reduction="mean", margin=1.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 85899346, 5],"float16"), Tensor([10, 85899346, 5],"float16"), )
paddle.nn.functional.hinge_embedding_loss(Tensor([4, 3, 3, 119304648],"float16"), Tensor([4, 3, 3, 119304648],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([477218589, 3, 3],"float16"), Tensor([477218589, 3, 3],"float16"), reduction="mean", margin=-4.0, name=None, )
paddle.nn.functional.hinge_embedding_loss(Tensor([10, 85899346, 5],"float16"), Tensor([10, 85899346, 5],"float16"), reduction="sum", margin=1.0, name=None, )
paddle.nn.functional.instance_norm(Tensor([5704254, 100, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([4, 100, 1426064, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([2, 357913942, 2, 3],"float16"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 357913942, 3],"float16"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 357913942, 3],"float16"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 536870913],"float16"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 2684355],"float16"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([4, 67108865, 4, 4],"float16"), None, None, Tensor([67108865],"float32"), Tensor([67108865],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 190141782, 3],"float32"), )
paddle.nn.functional.instance_norm(Tensor([2, 100, 2281702, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([4, 100, 2684355, 4],"float16"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([1431655766, 1, 3],"float16"), )
paddle.nn.functional.instance_norm(Tensor([34817, 32, 32, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([1426064, 100, 16],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 3802836],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([1140851, 100, 4, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(x=Tensor([2, 190141782, 2, 3],"float32"), )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 524289],"float16"), None, None, Tensor([32],"float16"), Tensor([32],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 2852127],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(x=Tensor([2, 715827883, 3],"float16"), )
paddle.nn.functional.instance_norm(Tensor([2, 100, 11408507],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4, 5368710],"float16"), None, None, Tensor([100],"float16"), Tensor([100],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 285212673],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([190141782, 2, 2, 3],"float32"), )
paddle.nn.functional.instance_norm(Tensor([8, 32, 262145, 64],"float16"), None, None, Tensor([32],"float16"), Tensor([32],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([2, 32, 35651585],"float32"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 536870913],"float16"), )
paddle.nn.functional.instance_norm(x=Tensor([357913942, 2, 2, 3],"float16"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(Tensor([2147484, 100, 4, 5],"float16"), None, None, Tensor([100],"float16"), Tensor([100],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([65537, 32, 32, 64],"float16"), None, None, Tensor([32],"float16"), Tensor([32],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(x=Tensor([357913942, 2, 2, 3],"float16"), )
paddle.nn.functional.instance_norm(Tensor([2863312, 100, 3, 5],"float16"), None, None, Tensor([100],"float16"), Tensor([100],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([4, 100, 4, 1426064],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 2, 536870913],"float16"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(Tensor([2, 100, 3, 7158279],"float16"), None, None, Tensor([100],"float16"), Tensor([100],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(x=Tensor([2, 1, 2147483649],"float16"), )
paddle.nn.functional.instance_norm(x=Tensor([2, 2, 357913942, 3],"float16"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(Tensor([2, 100, 4294968, 5],"float16"), None, None, Tensor([100],"float16"), Tensor([100],"float16"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([4, 100, 5704254],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([1426064, 100, 4, 4],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(Tensor([2, 8912897, 128],"float32"), )
paddle.nn.functional.instance_norm(Tensor([8, 32, 139265, 64],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(x=Tensor([2, 357913942, 2, 3],"float16"), weight=None, bias=None, data_format="NCHW", use_input_stats=True, )
paddle.nn.functional.instance_norm(Tensor([557057, 32, 128],"float32"), )
paddle.nn.functional.instance_norm(Tensor([2684355, 100, 4, 4],"float16"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, "NCHW", )
paddle.nn.functional.instance_norm(x=Tensor([2, 357913942, 2, 3],"float16"), )
paddle.nn.functional.instance_norm(x=Tensor([357913942, 2, 2, 3],"float16"), weight=None, bias=None, data_format="NCHW", )
paddle.nn.functional.instance_norm(Tensor([1521135, 100, 3, 5],"float32"), None, None, Tensor([100],"float32"), Tensor([100],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.instance_norm(Tensor([8, 32, 32, 278529],"float32"), None, None, Tensor([32],"float32"), Tensor([32],"float32"), True, 0.9, 1e-05, )
paddle.nn.functional.interpolate(Tensor([1, 4965, 576, 798],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([8, 256, 70, 64],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 140, 152],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(380,285,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 152, 112],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 262145],"float16"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 128, 164, 148],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 104, 152],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([8, 256, 72, 68],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 192],"float32"), size=tuple(392,294,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 148, 136],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([12, 256, 20, 20],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 246724],"float16"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 258, 52, 76],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([8, 256, 108, 164],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([8, 256, 72, 64],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 42, 36],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 256, 72, 82],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 44565, 256, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 37, 32],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(376,282,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 156, 168],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([3, 9462, 256, 314],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 209716, 20],"float16"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 304, 280],"float16"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([8, 256, 56, 72],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 256, 336, 320],"float16"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 233017, 18],"float16"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 209716],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 322639],"float16"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 312, 296],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 28, 41],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 128, 152, 136],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 258, 42, 38],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([8, 256, 100, 144],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 8, 302774, 314],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 164, 148],"float16"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 156, 120],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 258, 152, 152],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([3549, 8, 256, 314],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([90, 128, 24, 24],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 33, 39],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 258, 152, 148],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 50, 72],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 116, 152],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 40, 40],"float16"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 6544, 256, 454],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 92, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 256, 256],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 255567, 372],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 258, 100, 168],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 314],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 101283, 88],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 280, 272],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([3, 8, 279621, 340],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2852127, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(361,271,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 371371],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([8, 256, 33, 35],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([4, 258, 152, 144],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([3, 7987, 256, 372],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 314],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 64, 64],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([2902, 8, 256, 384],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 314],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([512, 40, 16, 12],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 60, 68],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 314],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 66, 54],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 63380594],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([5603, 1, 707, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([8, 256, 120, 148],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.l1_loss(Tensor([64, 3, 128, 128],"float32"), Tensor([64, 3, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([20, 500, 228171],"float32"), Tensor([20, 500, 228171],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([64, 12, 170, 17477],"float32"), Tensor([64, 12, 170, 17477],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([3548, 12, 170, 316],"float32"), Tensor([3548, 12, 170, 316],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([1118482, 12, 170, 1],"float32"), Tensor([1118482, 12, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([64, 3, 92843, 128],"float32"), Tensor([64, 3, 92843, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([187679, 12158],"float32"), Tensor([187679, 12158],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([28, 12, 170, 1],"float32"), Tensor([28, 12, 170, 39946],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([570426, 500, 8],"float32"), Tensor([570426, 500, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([16, 139129, 1025],"float32"), Tensor([16, 139129, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([2147483649, 2],"float16"), label=Tensor([2147483649, 2],"float16"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([3548, 12, 53592, 1],"float32"), Tensor([3548, 12, 53592, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 256],"float32"), Tensor([11606, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([16, 213, 669514],"float32"), Tensor([16, 213, 669514],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([20805, 107, 1025],"float32"), Tensor([20805, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([4, 71303169, 8],"float32"), Tensor([4, 71303169, 8],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([1, 34817, 256, 256],"float32"), Tensor([1, 34817, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([28, 479350, 170, 1],"float32"), Tensor([28, 479350, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([8, 2049, 512, 512],"float16"), Tensor([8, 1, 512, 512],"float32"), "mean", )
paddle.nn.functional.l1_loss(Tensor([16, 107, 1332770],"float32"), Tensor([16, 107, 1332770],"float32"), )
paddle.nn.functional.l1_loss(Tensor([3548, 3783, 170, 1],"float32"), Tensor([3548, 3783, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([64, 12, 170, 17477],"float32"), Tensor([64, 12, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([101, 22591103],"float32"), Tensor([101, 22591103],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([64, 209716, 170, 1],"float32"), Tensor([64, 209716, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([4, 57042535, 10],"float32"), Tensor([4, 57042535, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([20882, 213, 513],"float32"), Tensor([20882, 213, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([187679, 1],"float32"), Tensor([187679, 12158],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([8, 1, 512, 512],"float16"), Tensor([8, 1, 512, 512],"float32"), "mean", )
paddle.nn.functional.l1_loss(Tensor([11606, 3, 256, 256],"float32"), Tensor([11606, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([570425345, 4],"float32"), Tensor([1, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([11606, 3, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([3548, 12, 170, 1],"float32"), Tensor([3548, 12, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([64, 12, 2970966, 1],"float32"), Tensor([64, 12, 2970966, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([570425345, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 114085069, 2],"float32"), Tensor([10, 114085069, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([16, 277986, 513],"float32"), Tensor([16, 277986, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([28, 12, 170, 39946],"float32"), Tensor([28, 12, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 2970966, 256],"float32"), Tensor([1, 3, 2970966, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 499, 457255],"float32"), Tensor([10, 499, 457255],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([2281702, 500, 2],"float32"), Tensor([2281702, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 1114113, 32, 32],"float32"), Tensor([2, 1114113, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 2970966],"float32"), Tensor([1, 3, 256, 2970966],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([46422, 3, 128, 128],"float32"), Tensor([46422, 3, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), )
paddle.nn.functional.l1_loss(Tensor([570425345, 4],"float32"), Tensor([1, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 511, 257],"float32"), Tensor([16, 511, 257],"float32"), )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 11883862],"float32"), Tensor([2, 3, 32, 11883862],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([4, 500, 1140851],"float32"), Tensor([4, 500, 1140851],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([28, 12, 6790778, 1],"float32"), Tensor([28, 12, 6790778, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([456340276, 5],"float32"), Tensor([456340276, 5],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([187679, 12158],"float32"), Tensor([187679, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([64, 2177, 128, 128],"float32"), Tensor([64, 2177, 128, 128],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([3, 760567127],"float32"), Tensor([3, 760567127],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([3548, 12, 170, 316],"float32"), Tensor([3548, 12, 170, 1],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([456341, 500, 10],"float32"), Tensor([456341, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([8, 1, 512, 512],"float16"), Tensor([8, 1089, 512, 512],"float32"), "mean", )
paddle.nn.functional.l1_loss(Tensor([2, 3, 11883862, 32],"float32"), Tensor([2, 3, 11883862, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([16, 107, 1025],"float32"), Tensor([16, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([28, 12, 170, 39946],"float32"), Tensor([28, 12, 170, 39946],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([10, 45634028, 5],"float32"), Tensor([10, 45634028, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 22817014],"float32"), Tensor([10, 10, 22817014],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([187679, 3],"float32"), Tensor([187679, 3],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([64, 3, 128, 92843],"float32"), Tensor([64, 3, 128, 92843],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([570425345, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([64, 12, 170, 1],"float32"), Tensor([64, 12, 170, 17477],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([3548, 12, 170, 1],"float32"), Tensor([3548, 12, 170, 316],"float32"), "none", )
paddle.nn.functional.l1_loss(Tensor([2, 2147483649],"float16"), label=Tensor([2, 2147483649],"float16"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([742742, 3, 32, 32],"float32"), Tensor([742742, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([16, 213, 513],"float32"), Tensor([16, 213, 513],"float32"), )
paddle.nn.functional.l1_loss(Tensor([45634028, 10, 5],"float32"), Tensor([45634028, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), "mean", name=None, )
paddle.nn.functional.label_smooth(label=Tensor([128, 40, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([288, 11, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([88, 43, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([120, 29, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([240, 19, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 45, 487544],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([72, 70, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([96, 48, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([160, 30, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([56, 63, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([168, 19, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([208, 22, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([24, 137, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1693, 40, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([80, 45, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([144, 22, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([16, 264, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([4, 570425345],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([848, 6, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([2281701379, 1],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([96, 31, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([56, 80, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([224, 16, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([208, 16, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([72, 48, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([312, 12, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([120, 25, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([184, 22, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([214748365, 2, 2, 5],"float16"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(label=Tensor([48, 72, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([48, 68, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([32, 154, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([3, 143165577, 2, 5],"float16"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(label=Tensor([120, 27, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([88, 47, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([136, 32, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 29, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([72, 46, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([232, 22, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 42, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([568, 9, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([176, 18, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([80, 50, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1736, 39, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([56, 81, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([8, 57042535, 5],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([128, 32, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([16, 109, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([40, 89, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([24, 205, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([176, 26, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([40, 87, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([336, 12, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([424, 9, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([96, 33, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([80, 37, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([144, 25, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([56, 70, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([136, 23, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([64, 58, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([272, 13, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 35, 626842],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([32, 108, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([48, 105, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([56, 67, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([392, 11, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([64, 50, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 36, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([160, 23, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([32, 92, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([48, 85, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([272, 14, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([32, 115, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([32, 153, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 190141782],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([114085069, 2, 2, 5],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(label=Tensor([296, 14, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([112, 38, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([240, 17, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([4, 570425345],"float32"), epsilon=0.5436483450993637, )
paddle.nn.functional.label_smooth(label=Tensor([96, 35, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([1505, 45, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([256, 12, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([96, 32, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([136, 29, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([24, 122, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 32, 685608],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([96, 38, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([40, 104, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([32, 127, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([64, 54, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([24, 141, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([16, 227, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 37, 592958],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([32, 1, 71303169],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([320, 12, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 49, 447744],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([24, 133, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([176, 27, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([56, 76, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([357913942, 2, 2, 3],"float16"), )
paddle.nn.functional.layer_norm(Tensor([21126865, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([357913942, 2, 2, 3],"float16"), epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(Tensor([14260634, 10, 4, 4],"float32"), list[10,4,4,], )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([357913942, 2, 2, 3],"float16"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([21126865, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([4, 35651585, 4, 4],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([278529, 64, 128],"float32"), list[64,128,], None, None, )
paddle.nn.functional.layer_norm(Tensor([2970966, 768],"float32"), list[768,], None, None, )
paddle.nn.functional.layer_norm(Tensor([570425345, 2, 2],"float32"), 2, epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(Tensor([21126865, 6, 6, 3],"float32"), list[6,6,3,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([126762, 10, 60, 30],"float32"), list[10,60,30,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([14, 209, 384],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7605672, 3, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([214748365, 20],"float16"), list[20,], Tensor([20],"float32"), Tensor([20],"float32"), )
paddle.nn.functional.layer_norm(Tensor([14, 424424, 384],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([13505, 165, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([10817, 206, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([69633, 128, 256],"float32"), list[256,], weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([10129, 220, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([39768216, 6, 6, 3],"float16"), list[6,6,3,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([39768216, 6, 6, 3],"float16"), list[6,6,3,], weight=None, bias=Tensor([108],"float16"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([557057, 64, 64],"float32"), list[64,], Tensor([64],"float32"), Tensor([64],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([380283564, 2, 3],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([715827883, 2, 3],"float16"), )
paddle.nn.functional.layer_norm(Tensor([54327, 10, 60, 70],"float32"), list[10,60,70,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([14260634, 10, 4, 4],"float32"), tuple(10,4,4,), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([190141782, 2, 2, 3],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([1, 1140850690, 2],"float32"), 2, epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(Tensor([278529, 64, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([7, 318318, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 206, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7791, 286, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([22817014, 100],"float32"), list[100,], weight=Tensor([100],"float32"), bias=Tensor([100],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([8, 1114113, 256],"float32"), list[256,], weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([214748365, 20],"float16"), list[20,], Tensor([20],"float16"), Tensor([20],"float16"), )
paddle.nn.functional.layer_norm(Tensor([39768216, 6, 6, 3],"float16"), list[6,6,3,], weight=Tensor([108],"float16"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([1, 1140850690, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([760567127, 3],"float32"), )
paddle.nn.functional.layer_norm(Tensor([570425345, 2, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([190141782, 2, 2, 3],"float32"), )
paddle.nn.functional.layer_norm(Tensor([4456449, 512],"float32"), list[512,], None, None, )
paddle.nn.functional.layer_norm(Tensor([7, 220, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([17687608, 129],"float32"), list[129,], Tensor([129],"float32"), None, )
paddle.nn.functional.layer_norm(Tensor([14260634, 10, 4, 4],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([7, 435, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([126762, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([5123, 435, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([190141782, 2, 2, 3],"float32"), epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(Tensor([128, 278529, 64],"float32"), list[64,], Tensor([64],"float32"), Tensor([64],"float32"), )
paddle.nn.functional.layer_norm(Tensor([28431, 209, 384],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([1431655766, 3],"float16"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([760567127, 3],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([557057, 64, 64],"float32"), list[64,], None, None, )
paddle.nn.functional.layer_norm(Tensor([7, 209, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 286, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([10662, 209, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([715827883, 2, 3],"float16"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([570425345, 4],"float32"), list[4,], None, None, )
paddle.nn.functional.layer_norm(Tensor([4, 10, 14260634, 4],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([21126865, 6, 6, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([557057, 32, 128],"float32"), list[32,128,], )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([380283564, 2, 3],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 165, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([570425345, 4],"float32"), list[4,], Tensor([4],"float32"), Tensor([4],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([1431655766, 3],"float16"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([128, 278529, 64],"float32"), list[64,], None, None, )
paddle.nn.functional.layer_norm(Tensor([54327, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 27164, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([11980, 186, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 186, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([39768216, 6, 6, 3],"float16"), list[6,6,3,], weight=Tensor([108],"float16"), bias=Tensor([108],"float16"), epsilon=1e-05, )
paddle.nn.functional.leaky_relu(Tensor([10700, 512, 28, 28],"float16"), )
paddle.nn.functional.leaky_relu(Tensor([28, 64, 170, 12],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 5093084, 448],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 256, 38, 36793],"float16"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([28, 39946, 170, 12],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 35651585, 8, 8],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 1048577, 64, 64],"float16"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 160, 160],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 32, 608, 1088],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([128, 128, 4974, 28],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 1024, 1244, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([4, 32, 64, 278529],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([69633, 2048, 4, 4],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 34, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 240, 240],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([128, 512, 14, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([4456449, 16, 32],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 131073, 128, 128],"float16"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([524289, 32, 16, 16],"float16"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 32, 262145, 128],"float16"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([16, 256, 28, 28],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 304, 304],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 128, 69633],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([64, 64, 4353, 128],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 80, 80],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 32, 320, 320],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([30422686, 75],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 17, 17],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 16, 278529],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([8705, 64, 64, 64],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 144, 144],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 144, 144],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 278529, 64],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 20, 20],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 24, 24],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 79580, 28],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 76, 76],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8193, 32, 128, 128],"float16"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 32, 224, 224],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 112, 112],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 32, 160, 160],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([64, 64, 56, 56],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 30, 30],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(x=Tensor([4294967297],"float16"), negative_slope=0, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 112, 112],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 139265, 64, 64],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4456449, 512],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([8, 5685, 224, 224],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([13798, 256, 19, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4353, 128, 64, 64],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 64, 288, 288],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 104, 104],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 32, 256, 256],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([128, 128, 56, 56],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([8, 512, 14, 39790],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([12, 256, 5462, 136],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 120, 120],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 128, 152, 9773],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4, 128, 152, 152],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 144, 144],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4638, 512, 31, 31],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 136, 136],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 2, 2228225],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([64, 64, 128, 128],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([2, 32, 320, 320],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 224, 224],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([128, 2048, 2341, 7],"float16"), )
paddle.nn.functional.leaky_relu(Tensor([12, 128, 76, 36793],"float16"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([320, 64, 32, 6554],"float16"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([12, 128, 20561, 136],"float16"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([3, 253522376, 3],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([128, 256, 56, 2341],"float16"), )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 152, 152],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([17409, 512, 16, 16],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([56, 16, 32, 149797],"float16"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([16, 64, 112, 112],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([8, 32, 80, 80],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([90948, 512, 7, 7],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 40, 40],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 300, 2048],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([64, 32, 34817, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([128, 1024, 2341, 14],"float16"), )
paddle.nn.functional.leaky_relu(Tensor([8705, 256, 32, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 512, 278529, 16],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([16, 64, 56, 56],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([2, 64, 128, 262145],"float16"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 1, 71303169, 32],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([8, 64, 256, 256],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 128, 104, 104],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 32, 544, 544],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([253522376, 3, 3],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 2228225, 32, 32],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([12, 1024, 10281, 34],"float16"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([128, 128, 9363, 28],"float16"), )
paddle.nn.functional.leaky_relu(Tensor([12, 4600, 152, 272],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([4097, 64, 128, 128],"float16"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 256, 64, 64],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([2, 32, 576, 576],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([108, 32, 608, 1088],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([128, 512, 14, 2487],"float32"), )
paddle.nn.functional.linear(x=Tensor([104, 35, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([32, 96, 512],"float32"), weight=Tensor([512, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(Tensor([14123, 396, 768],"float16"), Tensor([768, 384],"float16"), None, name=None, )
paddle.nn.functional.linear(x=Tensor([288, 11, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([24, 99, 2048],"float32"), weight=Tensor([2048, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([28, 144, 1536],"float32"), weight=Tensor([1536, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 87, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(Tensor([6000, 512],"float32"), Tensor([512, 512],"float32"), Tensor([512],"float32"), )
paddle.nn.functional.linear(x=Tensor([176, 20, 2048],"float32"), weight=Tensor([2048, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 2304, 256],"float32"), weight=Tensor([256, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 32, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([32, 115, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 8, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 53, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 68, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([40, 86, 512],"float32"), weight=Tensor([512, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 128, 256],"float32"), weight=Tensor([256, 512],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([30, 61, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([32, 110, 2048],"float32"), weight=Tensor([2048, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 169, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 28, 30, 384],"float32"), weight=Tensor([384, 192],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([30, 65, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 248, 256],"float32"), weight=Tensor([256, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([112, 34, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4936, 384],"float32"), weight=Tensor([384, 128],"float32"), bias=Tensor([128],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([72, 42, 2048],"float32"), weight=Tensor([2048, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([56, 52, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9, 108, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([336, 12, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([9, 53, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 78, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([64, 41, 512],"float32"), weight=Tensor([512, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([14, 209, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 148, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 216, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([48, 67, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 111, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 7, 7, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([24, 87, 2048],"float32"), weight=Tensor([2048, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([104, 48, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([64, 54, 512],"float32"), weight=Tensor([512, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([192, 19, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([136, 21, 2048],"float32"), weight=Tensor([2048, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([208, 14, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10, 119, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 300, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([144, 21, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 130, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 156, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6684, 256],"float32"), weight=Tensor([256, 128],"float32"), bias=Tensor([128],"float32"), name=None, )
paddle.nn.functional.linear(Tensor([3795, 1280],"bfloat16"), Tensor([1280, 7168],"bfloat16"), Tensor([7168],"bfloat16"), )
paddle.nn.functional.linear(x=Tensor([50, 1501, 100],"float32"), weight=Tensor([100, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 218, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([112, 36, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([5, 84, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([3, 1, 512],"float32"), weight=Tensor([512, 3072],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 179, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([96, 39, 512],"float32"), weight=Tensor([512, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 34, 4096],"float32"), weight=Tensor([4096, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 28, 28, 192],"float32"), weight=Tensor([192, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([48, 51, 512],"float32"), weight=Tensor([512, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([40, 77, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([24, 173, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 76, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([64, 60, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([256, 25, 192],"float32"), weight=Tensor([192, 37],"float32"), bias=Tensor([37],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([48, 84, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([32, 106, 2048],"float32"), weight=Tensor([2048, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([80, 23, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([88, 20, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 111, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([16, 174, 512],"float32"), weight=Tensor([512, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([16, 171, 2048],"float32"), weight=Tensor([2048, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([30, 173, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([72, 50, 512],"float32"), weight=Tensor([512, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2331, 512],"float32"), weight=Tensor([512, 212],"float32"), bias=Tensor([212],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([272, 11, 2048],"float32"), weight=Tensor([2048, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 114, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([56, 66, 1024],"float32"), weight=Tensor([1024, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([192, 20, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([448, 7, 512],"float32"), weight=Tensor([512, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 18, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([8, 123, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 576, 3072],"float32"), weight=Tensor([3072, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([24, 141, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 132, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 225, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([4, 160, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([2, 112, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([176, 19, 512],"float32"), weight=Tensor([512, 2048],"float32"), bias=Tensor([2048],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 199, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 94, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 34, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([16, 264, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([7, 785, 768],"float32"), weight=Tensor([768, 3072],"float32"), bias=Tensor([3072],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([8, 241, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 59, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([56, 38, 512],"float32"), weight=Tensor([512, 512],"float32"), bias=Tensor([512],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([6, 184, 256],"float32"), weight=Tensor([256, 8000],"float32"), bias=Tensor([8000],"float32"), name=None, )
paddle.nn.functional.log_sigmoid(Tensor([3, 253522376, 3],"float32"), None, )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 10, 22817014],"float32"), )
paddle.nn.functional.log_sigmoid(Tensor([10, 10, 22817014],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([3, 3, 477218589],"float16"), None, )
paddle.nn.functional.log_sigmoid(Tensor([4294967297, 1],"float16"), )
paddle.nn.functional.log_sigmoid(Tensor([10, 42949673, 10],"float16"), None, )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 42949673, 10],"float16"), )
paddle.nn.functional.log_sigmoid(Tensor([2281701379],"float32"), )
paddle.nn.functional.log_sigmoid(Tensor([10, 22817014, 10],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([858993460, 5],"float16"), )
paddle.nn.functional.log_sigmoid(Tensor([253522376, 3, 3],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([477218589, 3, 3],"float16"), None, )
paddle.nn.functional.log_sigmoid(Tensor([2, 2147483649],"float16"), )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 22817014, 10],"float32"), )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 10, 42949673],"float16"), )
paddle.nn.functional.log_sigmoid(x=Tensor([42949673, 10, 10],"float16"), )
paddle.nn.functional.log_sigmoid(Tensor([10, 10, 42949673],"float16"), None, )
paddle.nn.functional.log_sigmoid(Tensor([3, 477218589, 3],"float16"), None, )
paddle.nn.functional.log_sigmoid(Tensor([42949673, 10, 10],"float16"), None, )
paddle.nn.functional.log_sigmoid(Tensor([22817014, 10, 10],"float32"), None, )
paddle.nn.functional.log_sigmoid(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.log_sigmoid(Tensor([5, 858993460],"float16"), )
paddle.nn.functional.log_sigmoid(Tensor([4294967297],"float16"), )
paddle.nn.functional.log_sigmoid(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.log_sigmoid(Tensor([3, 3, 253522376],"float32"), None, )
paddle.nn.functional.log_sigmoid(x=Tensor([22817014, 10, 10],"float32"), )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), axis=2, dtype="float32", )
paddle.nn.functional.log_softmax(Tensor([38028357, 3, 4, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([1024, 4194305],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([357913942, 3, 4],"float16"), -1, )
paddle.nn.functional.log_softmax(Tensor([357913942, 3, 4],"float16"), 2, )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), )
paddle.nn.functional.log_softmax(Tensor([12, 190141782],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([100000, 2, 11409],"float32"), )
paddle.nn.functional.log_softmax(Tensor([134218, 32000],"float16"), )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([77, 29632486],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([60, 38028357],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([30, 76056713],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([5, 456340276],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([456340276, 5],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([5, 456340276],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([2944, 775035],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([2112, 6629],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([64, 35651585],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 715827883],"float16"), axis=2, )
paddle.nn.functional.log_softmax(Tensor([154, 14816243],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([128, 33554433],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([43994, 51865],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.log_softmax(Tensor([128, 192612],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([1140850690, 2],"float32"), )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 715827883],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([2, 57042535, 4, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 715827883],"float16"), )
paddle.nn.functional.log_softmax(Tensor([16, 268435457],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([1, 557057, 4096],"float32"), )
paddle.nn.functional.log_softmax(Tensor([38028357, 3, 4, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([144, 15845149],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([2, 536870913, 4],"float16"), 2, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 76056713, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 95070891],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([1024, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 715827883],"float16"), -1, )
paddle.nn.functional.log_softmax(Tensor([2944, 6629],"float32"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.log_softmax(Tensor([28, 81489335],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([1857, 300, 4096],"float32"), )
paddle.nn.functional.log_softmax(Tensor([2, 3, 715827883],"float16"), 2, )
paddle.nn.functional.log_softmax(Tensor([128, 17825793],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([1, 300, 4096],"float32"), )
paddle.nn.functional.log_softmax(Tensor([4224, 540176],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([640, 6710887],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([8, 285212673],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([2281702, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([4224, 6629],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 76056713, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([1, 4294967297],"float16"), )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), axis=2, dtype="float32", )
paddle.nn.functional.log_softmax(Tensor([2, 57042535, 4, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([11847, 192612],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([570425345, 4],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([285212673, 8],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([4294968, 1000],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([2, 57042535, 4, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([380283564, 6],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([4, 570425345],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([100000, 22818],"float32"), )
paddle.nn.functional.log_softmax(Tensor([4, 570425345],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([32, 71303169],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([154, 27889399],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), axis=2, )
paddle.nn.functional.log_softmax(Tensor([1024, 2228225],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([8, 285212673],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 76056713, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([16, 142606337],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([14350324, 159],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([380283564, 2, 3],"float32"), )
paddle.nn.functional.log_softmax(Tensor([124, 18400818],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([256, 8912897],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([80, 28521268],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([1140850690, 2],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([20, 114085069],"float32"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 715827883],"float16"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.log_softmax(Tensor([640, 3565159],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([5, 456340276],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.log_softmax(Tensor([512, 8388609],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([22299, 192612],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([2, 536870913, 4],"float16"), -1, )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.log_softmax(Tensor([100000, 7606, 3],"float32"), )
paddle.nn.functional.log_softmax(Tensor([2112, 1080352],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([570425345, 4],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([64, 67108865],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([760567127, 3],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([38, 60044774],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([256, 16777217],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([128, 17825793],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 95070891],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([38028357, 3, 4, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([1, 300, 7605672],"float32"), )
paddle.nn.functional.log_softmax(Tensor([52, 43878873],"float32"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), )
paddle.nn.functional.log_softmax(Tensor([344200, 6629],"float32"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), axis=2, )
paddle.nn.functional.log_softmax(Tensor([22369622, 102],"float32"), axis=-1, )
paddle.nn.functional.lp_pool1d(Tensor([2, 35651585, 32],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 380283564],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108865, 32],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([23767723, 3, 32],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([23767723, 32, 3],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 35651585, 32],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 32, 35651585],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108865, 32],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 35651585, 32],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([23767723, 32, 3],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool1d(Tensor([23767723, 3, 32],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 32, 35651585],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 380283564],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([23767723, 3, 32],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 380283564, 3],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 35651585, 32],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([23767723, 3, 32],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 380283564],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 380283564],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 380283564, 3],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool2d(Tensor([742742, 32, 32, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 1114113, 32, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([742742, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([742742, 32, 32, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 1114113],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([742742, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 11883862, 32, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097153, 32, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 11883862, 32, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 11883862, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([742742, 3, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11883862, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 1114113, 32, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 1114113],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 1114113, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11883862, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11883862],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11883862, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097153, 32, 32],"float16"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float16"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11883862],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 1114113, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11883862, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float16"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097153, 32, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float16"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 11883862, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float16"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097153, 32, 32],"float16"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11883862],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float16"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([742742, 3, 32, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float16"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11883862],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2147483649],"float16"), other=Tensor([2, 2147483649],"float16"), label=Tensor([2, 2147483649],"float16"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2147483649, 2],"float16"), other=Tensor([2147483649, 2],"float16"), label=Tensor([2147483649, 2],"float16"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), 0.0, "mean", None, )
paddle.nn.functional.max_pool2d(Tensor([64, 232211, 17, 17],"float16"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 400, 626],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([64, 728, 38, 38],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 576, 496],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 624, 608],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 491, 532],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 32, 39],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 512, 336],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([3, 2347430, 18, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 1114113, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 504, 667],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 448, 640],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 528, 512],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 33, 39],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 52, 114268],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 37, 37],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([64, 32, 43, 25910],"float32"), 2, 2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 11883862, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([8, 384, 19, 19],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 481, 667],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 6, 126761188],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 400, 511],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([16, 32, 222823, 20],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([403, 64, 336, 496],"float16"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([8, 256, 38, 38],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([16, 64, 128, 128],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([128, 20, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 33, 41],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([96, 64, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 592, 592],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 28, 36],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 256, 38, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 36, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 496, 528],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 560, 528],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 595, 491],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 74275, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 400, 656],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1114113, 2, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 480, 672],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 2, 32, 35651585],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 448, 560],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 512, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 384, 577],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([2675, 128, 112, 112],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 36, 31],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 33, 337],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 553, 368],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 400, 532],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 336, 512],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 598, 598],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([8, 256, 38, 35],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([64, 32, 112, 112],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 400, 544],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 42, 39],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 400, 576],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 33, 38],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([64, 512, 2, 160],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 54, 54],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 504, 470],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 544, 656],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 34, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 464, 608],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 368, 640],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 505, 504],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([30, 64, 33, 337],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 529, 352],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 448, 480],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 13, 13],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([30, 64, 33, 97],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 400, 656],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([10, 64, 33, 97],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 16506, 320, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([64, 96, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 512, 704],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 55, 162053],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 560, 624],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 30, 37],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 384, 579],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 592, 528],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 34, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 580, 534],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 576, 640],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([8, 256, 35, 38],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 256, 36, 32],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([30, 64, 49, 225],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([8, 256, 37, 42],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 448, 544],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 592, 576],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 109, 109],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([30, 64, 33, 209],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 448, 534],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([64, 32, 123791, 9],"float32"), 2, 2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 560, 576],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 400, 454],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 400, 642],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 592, 624],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([14514, 1024, 17, 17],"float16"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 64, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 445645, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([8, 1422, 16, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5941931],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([14913081, 3, 4, 4, 6],"float16"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 4, 56, 3979],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 32, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 32, 9948, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 4, 112, 9948],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 4, 89478486],"float16"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(x=Tensor([711, 32, 32, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 21126865, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 44739243, 4, 4],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 2843, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(Tensor([174603, 2, 6, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 33554433, 4, 4, 4],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 2, 1047614, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 371371, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 32, 56, 4974],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2012083, 6, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 4, 9948, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 4, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([711, 8, 32, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([8, 22737, 4, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([569, 320, 4, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 371371, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 6, 10563433],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 6, 25352238, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 59652324, 4, 6],"float16"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([8, 2843, 32, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1485483, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 15845149, 6, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 34817, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5941931, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 8, 8, 4194305],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([23211, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2347430, 6, 9, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 371371],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5941931],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 59652324, 4, 6],"float16"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"float32"), Tensor([1, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"int64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float32"), Tensor([1, 3, 760567127],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"int64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"float32"), Tensor([1, 3, 760567127],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"int64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float32"), Tensor([95070891, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"float32"), Tensor([1, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"float32"), Tensor([1, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"int64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"int64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 760567127],"int64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"float32"), Tensor([95070891, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([95070891, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float32"), Tensor([1, 285212673, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([95070891, 3, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 285212673, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 285212673, 8],"float32"), Tensor([1, 285212673, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 3, 760567127],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 278529, 4],"float32"), Tensor([64, 32, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([45634028, 2, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 253522376, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 43, 19],"float32"), Tensor([64, 16, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 253522376, 3, 3],"float32"), Tensor([1, 253522376, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 30422686, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 253522376],"float32"), Tensor([1, 3, 3, 253522376],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float32"), Tensor([4714260, 4, 11, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float32"), Tensor([2, 4, 25928425, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float64"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 570425345, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 14260634],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 570425345, 2, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 43, 19],"float32"), Tensor([64, 16, 43, 51820],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 8, 86, 39],"float32"), Tensor([64, 8, 86, 51820],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 30422686, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([64, 8, 114268, 39],"float32"), Tensor([64, 8, 114268, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 253522376, 3],"float32"), Tensor([1, 3, 253522376, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([10186167, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 2852127, 20, 20],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 43, 19],"float32"), Tensor([64, 43638, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 14260634, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([570425345, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"float32"), Tensor([1, 1, 2, 1140850690],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 3, 253522376],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 253522376],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([1426064, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 35651585, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([64, 8, 86, 39],"float32"), Tensor([64, 8, 114268, 39],"int32"), 2, 2, output_size=list[64,8,172,79,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float32"), Tensor([2, 4, 21, 13581556],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1426064, 4, 20, 20],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([1426064, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 21, 9],"float32"), Tensor([64, 32, 21, 53053],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 2852127, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 21, 9],"float32"), Tensor([377266, 32, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float64"), Tensor([2, 4, 11, 25928425],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([174549, 16, 43, 19],"float32"), Tensor([174549, 16, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float32"), Tensor([2, 4, 28521268, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1, 2, 1140850690],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 117275, 19],"float32"), Tensor([64, 16, 117275, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 570425345, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"int64"), Tensor([1, 1, 1140850690, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 7, 40744668],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([570425345, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 21, 53053],"float32"), Tensor([64, 32, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 20372334, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([570425345, 1, 2, 2],"int64"), Tensor([570425345, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 2, 5, 76056713],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 1140850690],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float64"), Tensor([2852127, 4, 20, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 253522376, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1, 1140850690, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 1140850690],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 570425345, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([570425345, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([1426064, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1140850690, 2],"float32"), Tensor([1, 1, 1140850690, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([377266, 32, 21, 9],"float32"), Tensor([64, 32, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 2, 5, 76056713],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([570425345, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float32"), Tensor([2, 2586964, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1782580, 32, 10, 4],"float32"), Tensor([64, 32, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 570425345, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([1426064, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"float32"), Tensor([1, 1, 2, 1140850690],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float32"), Tensor([2, 4, 20, 14260634],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 253522376, 3],"float32"), Tensor([1, 3, 253522376, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float64"), Tensor([2, 2586964, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([570425345, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([10186167, 4, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([570425345, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 14260634, 20],"float32"), Tensor([2, 4, 20, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float64"), Tensor([2, 4, 14260634, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 20],"float32"), Tensor([2, 4, 14260634, 20],"int32"), kernel_size=2, stride=None, padding=0, data_format="NCHW", output_size=tuple(2,4,40,40,), name=None, )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 10, 4],"float32"), Tensor([64, 32, 10, 111412],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float64"), Tensor([2, 4, 28521268, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([84507459, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 253522376, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 1140850690, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 20, 10],"float64"), Tensor([2, 5704254, 20, 10],"int32"), kernel_size=tuple(2,4,), stride=None, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([64, 188633, 21, 9],"float32"), Tensor([64, 188633, 21, 9],"int32"), 2, 2, output_size=list[64,32,43,19,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 891290, 10, 4],"float32"), Tensor([64, 891290, 10, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 253522376],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 32, 10, 4],"float32"), Tensor([64, 32, 278529, 4],"int32"), 2, 2, output_size=list[64,32,21,9,], )
paddle.nn.functional.max_unpool2d(Tensor([64, 43638, 43, 19],"float32"), Tensor([64, 43638, 43, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 11, 11],"float64"), Tensor([2, 4, 25928425, 11],"int32"), kernel_size=4, stride=None, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([64, 16, 43, 19],"float32"), Tensor([64, 16, 117275, 19],"int32"), 2, 2, output_size=list[64,16,86,39,], )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float64"), Tensor([1293482, 4, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 21, 21],"float32"), Tensor([1293482, 4, 21, 21],"int32"), kernel_size=4, stride=2, padding=2, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1140850690],"float32"), Tensor([1, 1, 2, 1140850690],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 31690297, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 190141782],"int64"), Tensor([1, 3, 2, 2, 190141782],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 114085069],"float64"), Tensor([1, 1, 4, 5, 114085069],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 95070891, 6],"float64"), Tensor([1, 1, 4, 95070891, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 114085069],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 76056713, 5, 6],"float64"), Tensor([1, 1, 76056713, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 190141782, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 31690297, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 126761188, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 190141782, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([6338060, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 25352238, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 190141782, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 190141782, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([19014179, 1, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 38028357],"float64"), Tensor([1, 3, 4, 5, 38028357],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 126761188, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 190141782, 2, 2, 3],"float32"), Tensor([1, 190141782, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 190141782],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 190141782],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 31690297, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 95070891, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 126761188, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([6338060, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 190141782, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 126761188, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 114085069],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 190141782],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 95070891, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 126761188, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 38028357],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([63380594, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([63380594, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([19014179, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 114085069],"float64"), Tensor([1, 1, 4, 5, 114085069],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 38028357],"float64"), Tensor([1, 3, 4, 5, 38028357],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 190141782],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 126761188, 2, 3],"int64"), Tensor([1, 3, 126761188, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([63380594, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 25352238, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([6338060, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 126761188, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 190141782, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 190141782],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([6338060, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 126761188, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 126761188, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 38028357],"float64"), Tensor([1, 3, 4, 5, 38028357],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 38028357],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 126761188, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 190141782, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 31690297, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([63380594, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 76056713, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 126761188, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 38028357],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 126761188, 3],"int64"), Tensor([1, 3, 2, 126761188, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([63380594, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 126761188, 3],"float32"), Tensor([1, 3, 2, 126761188, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 25352238, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 126761188, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([63380594, 3, 2, 2, 3],"float32"), Tensor([63380594, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 126761188, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 190141782, 2, 2, 3],"int64"), Tensor([1, 190141782, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([63380594, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 126761188, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 126761188, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 95070891, 6],"float64"), Tensor([1, 1, 4, 95070891, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 126761188, 2, 3],"float32"), Tensor([1, 3, 126761188, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 190141782],"float32"), Tensor([1, 3, 2, 2, 190141782],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 38028357],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 76056713, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 190141782],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 31690297, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 190141782],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([63380594, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 19014179, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 25352238, 5, 6],"float64"), Tensor([1, 3, 25352238, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([63380594, 3, 2, 2, 3],"int64"), Tensor([63380594, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 38028357],"float64"), Tensor([1, 3, 4, 5, 38028357],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 76056713, 5, 6],"float64"), Tensor([1, 1, 76056713, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.maxout(Tensor([119304648, 4, 3, 3],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4772186, 3, 3],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(x=Tensor([63380594, 4, 3, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(Tensor([100, 4, 1901418, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 3, 3579140],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3, 1901418],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([10, 9, 3, 15907287],"float16"), groups=3, )
paddle.nn.functional.maxout(Tensor([53024288, 9, 3, 3],"float16"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([63380594, 4, 3, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(x=Tensor([119304648, 4, 3, 3],"float16"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([10, 9, 15907287, 3],"float16"), groups=3, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3, 3579140],"float16"), groups=2, )
paddle.nn.functional.maxout(Tensor([2, 6, 89478486, 4],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([9, 39768216, 2, 6],"float16"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([9, 2, 39768216, 6],"float16"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([100, 2535224, 3, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(x=Tensor([100, 2535224, 3, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(Tensor([100, 4, 3, 1901418],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(x=Tensor([9, 2, 39768216, 6],"float16"), groups=2, axis=3, )
paddle.nn.functional.maxout(x=Tensor([53024288, 9, 3, 3],"float16"), groups=3, )
paddle.nn.functional.maxout(Tensor([9, 2, 2, 119304648],"float16"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([2, 6, 89478486, 4],"float16"), 2, 1, )
paddle.nn.functional.maxout(Tensor([178956971, 2, 2, 6],"float16"), 2, 3, None, )
paddle.nn.functional.maxout(x=Tensor([178956971, 2, 2, 6],"float16"), groups=2, axis=3, )
paddle.nn.functional.maxout(Tensor([10, 9, 3, 15907287],"float16"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([10, 9, 15907287, 3],"float16"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([35791395, 6, 5, 4],"float16"), 2, -1, )
paddle.nn.functional.maxout(Tensor([100, 4, 3579140, 3],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([2, 6, 5, 71582789],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([2, 6, 89478486, 4],"float16"), 2, -1, )
paddle.nn.functional.maxout(Tensor([2, 6, 5, 71582789],"float16"), 2, 1, )
paddle.nn.functional.maxout(x=Tensor([100, 4772186, 3, 3],"float16"), groups=2, )
paddle.nn.functional.maxout(Tensor([2, 107374183, 5, 4],"float16"), 2, -1, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3579140, 3],"float16"), groups=2, )
paddle.nn.functional.maxout(Tensor([35791395, 6, 5, 4],"float16"), 2, 1, )
paddle.nn.functional.maxout(Tensor([35791395, 6, 5, 4],"float16"), 2, 1, None, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 1901418, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([9, 2, 2, 119304648],"float16"), groups=2, axis=3, )
paddle.nn.functional.maxout(x=Tensor([9, 39768216, 2, 6],"float16"), groups=2, axis=3, )
paddle.nn.functional.mish(Tensor([12, 1024, 10, 18569],"float32"), )
paddle.nn.functional.mish(Tensor([22283, 256, 20, 20],"float32"), )
paddle.nn.functional.mish(Tensor([12, 512, 10, 37138],"float32"), )
paddle.nn.functional.mish(Tensor([12, 128, 40, 69906],"float16"), )
paddle.nn.functional.mish(Tensor([12, 118839, 40, 40],"float32"), )
paddle.nn.functional.mish(Tensor([11142, 128, 40, 40],"float32"), )
paddle.nn.functional.mish(Tensor([12, 1024, 34953, 10],"float16"), )
paddle.nn.functional.mish(Tensor([12, 1901418, 10, 10],"float32"), )
paddle.nn.functional.mish(Tensor([12, 223697, 40, 40],"float16"), )
paddle.nn.functional.mish(Tensor([12, 512, 20, 34953],"float16"), )
paddle.nn.functional.mish(Tensor([12, 256, 20, 37138],"float32"), )
paddle.nn.functional.mish(Tensor([12, 1024, 10, 34953],"float16"), )
paddle.nn.functional.mish(Tensor([12, 256, 18569, 40],"float32"), )
paddle.nn.functional.mish(Tensor([12, 512, 37138, 10],"float32"), )
paddle.nn.functional.mish(Tensor([22283, 1024, 10, 10],"float32"), )
paddle.nn.functional.mish(Tensor([12, 512, 10, 69906],"float16"), )
paddle.nn.functional.mish(Tensor([12, 512, 20, 20],"float32"), )
paddle.nn.functional.mish(Tensor([12, 256, 40, 34953],"float16"), )
paddle.nn.functional.mish(Tensor([12, 256, 40, 40],"float32"), )
paddle.nn.functional.mish(Tensor([12, 1024, 10, 10],"float32"), )
paddle.nn.functional.mish(Tensor([12, 512, 69906, 10],"float16"), )
paddle.nn.functional.mish(Tensor([12, 894785, 20, 20],"float16"), )
paddle.nn.functional.mish(Tensor([12, 3579140, 10, 10],"float16"), )
paddle.nn.functional.mish(Tensor([2, 1140850690],"float32"), name="mish", )
paddle.nn.functional.mish(Tensor([20972, 128, 40, 40],"float16"), )
paddle.nn.functional.mish(Tensor([12, 128, 40, 40],"float32"), )
paddle.nn.functional.mish(Tensor([142606337, 16],"float32"), name="mish", )
paddle.nn.functional.mish(Tensor([12, 475355, 20, 20],"float32"), )
paddle.nn.functional.mish(Tensor([41944, 1024, 10, 10],"float16"), )
paddle.nn.functional.mish(Tensor([12, 128, 69906, 40],"float16"), )
paddle.nn.functional.mish(Tensor([12, 512, 20, 18569],"float32"), )
paddle.nn.functional.mish(Tensor([12, 1024, 18569, 10],"float32"), )
paddle.nn.functional.mish(Tensor([5571, 256, 40, 40],"float32"), )
paddle.nn.functional.mish(Tensor([11142, 512, 20, 20],"float32"), )
paddle.nn.functional.mish(Tensor([83887, 512, 10, 10],"float16"), )
paddle.nn.functional.mish(Tensor([12, 128, 40, 37138],"float32"), )
paddle.nn.functional.mish(Tensor([12, 256, 20, 20],"float32"), )
paddle.nn.functional.mish(Tensor([41944, 256, 20, 20],"float16"), )
paddle.nn.functional.mish(Tensor([20972, 512, 20, 20],"float16"), )
paddle.nn.functional.mish(Tensor([12, 256, 69906, 20],"float16"), )
paddle.nn.functional.mish(Tensor([12, 512, 34953, 20],"float16"), )
paddle.nn.functional.mish(Tensor([10486, 256, 40, 40],"float16"), )
paddle.nn.functional.mish(Tensor([12, 256, 20, 69906],"float16"), )
paddle.nn.functional.mish(Tensor([12, 256, 37138, 20],"float32"), )
paddle.nn.functional.mish(Tensor([12, 512, 18569, 20],"float32"), )
paddle.nn.functional.mish(Tensor([12, 128, 37138, 40],"float32"), )
paddle.nn.functional.mish(Tensor([12, 256, 34953, 40],"float16"), )
paddle.nn.functional.mish(Tensor([44565, 512, 10, 10],"float32"), )
paddle.nn.functional.mish(Tensor([12, 256, 40, 18569],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 114085069, 10],"float32"), Tensor([2, 114085069, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 25352238, 10],"float32"), Tensor([3, 3, 25352238, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([8193, 128, 64, 64],"float16"), Tensor([8193, 128, 64, 64],"float16"), reduction="sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 25352238],"float32"), Tensor([3, 3, 10, 25352238],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([22817014, 10, 10],"float32"), Tensor([22817014, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 7605672, 10, 10],"float32"), Tensor([3, 7605672, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([10000, 228171],"float32"), Tensor([10000, 228171],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1485483],"float32"), Tensor([16, 96, 1485483],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 114085069, 10],"float32"), Tensor([2, 114085069, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3548, 12, 53592, 1],"float32"), Tensor([3548, 12, 53592, 1],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3548, 12, 170, 1],"float32"), Tensor([3548, 12, 170, 316],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([100, 376, 1],"float32"), Tensor([100, 376, 60684],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 570425345, 2],"float32"), Tensor([2, 570425345, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([101, 1],"float32"), Tensor([101, 22591103],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([256, 128, 1],"float32"), Tensor([256, 128, 69633],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([8, 256, 64, 32769],"float16"), Tensor([8, 256, 64, 32769],"float16"), reduction="sum", )
paddle.nn.functional.mse_loss(input=Tensor([2281701379, 1],"float32"), label=Tensor([2281701379, 1],"float32"), )
paddle.nn.functional.mse_loss(input=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2, 10, 114085069],"float32"), Tensor([2, 10, 114085069],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([8, 128, 64, 65537],"float16"), Tensor([8, 128, 64, 65537],"float16"), reduction="sum", )
paddle.nn.functional.mse_loss(Tensor([17825793, 128, 1],"float32"), Tensor([17825793, 128, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([50704476, 15, 3],"float32"), Tensor([50704476, 15, 3],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([100, 376, 60684],"float32"), Tensor([100, 376, 60684],"float32"), )
paddle.nn.functional.mse_loss(Tensor([8, 131073, 64, 64],"float16"), Tensor([8, 131073, 64, 64],"float16"), reduction="sum", )
paddle.nn.functional.mse_loss(Tensor([16, 71303169, 2],"float32"), Tensor([16, 71303169, 2],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([3548, 3783, 170, 1],"float32"), Tensor([3548, 3783, 170, 1],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([64, 3, 3, 30948, 128],"float32"), Tensor([64, 3, 3, 30948, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([8, 8193, 256, 256],"float16"), Tensor([8, 8193, 256, 256],"float16"), reduction="sum", )
paddle.nn.functional.mse_loss(Tensor([22817014, 10, 10],"float32"), Tensor([22817014, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([256, 8912897, 1],"float32"), Tensor([256, 8912897, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([5, 858993460],"float16"), label=Tensor([5, 858993460],"float16"), reduction="mean", name=None, )
paddle.nn.functional.mse_loss(Tensor([256, 2970966, 3],"float32"), Tensor([256, 2970966, 3],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([256, 128, 69633],"float32"), Tensor([256, 128, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([22817014, 10, 10],"float32"), Tensor([22817014, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([8, 128, 65537, 64],"float16"), Tensor([8, 128, 65537, 64],"float16"), reduction="sum", )
paddle.nn.functional.mse_loss(Tensor([256, 128, 69633],"float32"), Tensor([256, 128, 69633],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([64, 4, 3, 23211, 128],"float32"), Tensor([64, 4, 3, 23211, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 25352238, 10],"float32"), Tensor([3, 3, 25352238, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([30948, 3, 3, 64, 128],"float32"), Tensor([30948, 3, 3, 64, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.nn.functional.mse_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([64, 4, 3, 64, 128],"float32"), Tensor([64, 4, 3, 64, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([7605672, 3, 10, 10],"float32"), Tensor([7605672, 3, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([15548, 146753],"float32"), Tensor([15548, 146753],"float32"), )
paddle.nn.functional.mse_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([26736, 85342],"float32"), Tensor([26736, 85342],"float32"), )
paddle.nn.functional.mse_loss(Tensor([11883862, 96, 2],"float32"), Tensor([11883862, 96, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([8, 1089, 512, 512],"float16"), Tensor([8, 1089, 512, 512],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1],"float32"), Tensor([16, 96, 1485483],"float32"), )
paddle.nn.functional.mse_loss(Tensor([3548, 12, 170, 316],"float32"), Tensor([3548, 12, 170, 1],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 7605672, 10, 10],"float32"), Tensor([3, 7605672, 10, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([8, 256, 32769, 64],"float16"), Tensor([8, 256, 32769, 64],"float16"), reduction="sum", )
paddle.nn.functional.mse_loss(Tensor([3548, 12, 170, 316],"float32"), Tensor([3548, 12, 170, 316],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([16, 71303169, 2],"float32"), Tensor([16, 71303169, 2],"float32"), )
paddle.nn.functional.mse_loss(Tensor([64, 1451, 3, 64, 128],"float32"), Tensor([64, 1451, 3, 64, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([1],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.nn.functional.mse_loss(Tensor([2049, 32, 256, 256],"float16"), Tensor([2049, 32, 256, 256],"float16"), reduction="sum", )
paddle.nn.functional.mse_loss(Tensor([7605672, 3, 10, 10],"float32"), Tensor([7605672, 3, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([256, 15, 594194],"float32"), Tensor([256, 15, 594194],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([8, 2049, 512, 512],"float16"), Tensor([8, 1, 512, 512],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 25352238, 10],"float32"), Tensor([3, 3, 25352238, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([6068355, 376, 1],"float32"), Tensor([6068355, 376, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2, 10, 114085069],"float32"), Tensor([2, 10, 114085069],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([23767723, 96, 1],"float32"), Tensor([23767723, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([4097, 256, 64, 64],"float16"), Tensor([4097, 256, 64, 64],"float16"), reduction="sum", )
paddle.nn.functional.mse_loss(Tensor([64, 4, 3, 64, 46422],"float32"), Tensor([64, 4, 3, 64, 46422],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([228170138, 10],"float32"), Tensor([228170138, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([228170138, 10],"float32"), Tensor([228170138, 10],"float32"), "mean", )
paddle.nn.functional.mse_loss(Tensor([8, 32, 65537, 256],"float16"), Tensor([8, 32, 65537, 256],"float16"), reduction="sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 25352238],"float32"), Tensor([3, 3, 10, 25352238],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([3, 7605672, 10, 10],"float32"), Tensor([3, 7605672, 10, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([10000, 1],"float32"), Tensor([10000, 228171],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1485483],"float32"), Tensor([16, 96, 1485483],"float32"), reduction="none", )
paddle.nn.functional.mse_loss(Tensor([2962708, 1],"float32"), Tensor([2962708, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2147483649, 2],"float16"), label=Tensor([2147483649, 2],"float16"), reduction="mean", name=None, )
paddle.nn.functional.mse_loss(Tensor([23211, 4, 3, 64, 128],"float32"), Tensor([23211, 4, 3, 64, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([101, 22591103],"float32"), Tensor([101, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([2, 114085069, 10],"float32"), Tensor([2, 114085069, 10],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([64, 3, 3, 64, 128],"float32"), Tensor([64, 3, 3, 64, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([64, 3, 1451, 64, 128],"float32"), Tensor([64, 3, 1451, 64, 128],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([64, 3, 3, 64, 61896],"float32"), Tensor([64, 3, 3, 64, 61896],"float32"), "none", )
paddle.nn.functional.mse_loss(Tensor([228170138, 10],"float32"), Tensor([228170138, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([3, 3, 10, 25352238],"float32"), Tensor([3, 3, 10, 25352238],"float32"), "sum", )
paddle.nn.functional.mse_loss(input=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([101, 22591103],"float32"), Tensor([101, 22591103],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([100, 22817014, 1],"float32"), Tensor([100, 22817014, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([8, 32, 256, 65537],"float16"), Tensor([8, 32, 256, 65537],"float16"), reduction="sum", )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1485483],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), )
paddle.nn.functional.mse_loss(Tensor([7605672, 3, 10, 10],"float32"), Tensor([7605672, 3, 10, 10],"float32"), "sum", )
paddle.nn.functional.mse_loss(Tensor([16, 142606337, 1],"float32"), Tensor([16, 142606337, 1],"float32"), )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), weight=None, reduction="sum", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), reduction="sum", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), reduction="none", weight=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), weight=None, reduction="none", name=None, )
paddle.nn.functional.multi_label_soft_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), reduction="mean", weight=None, )
paddle.nn.functional.nll_loss(Tensor([4, 570425345],"float32"), Tensor([4],"int64"), )
paddle.nn.functional.nll_loss(Tensor([95070891, 3, 2, 4],"float32"), Tensor([95070891, 2, 4],"int64"), )
paddle.nn.functional.nll_loss(Tensor([5, 456340276],"float32"), Tensor([5],"int64"), )
paddle.nn.functional.nll_loss(Tensor([5, 3, 2, 76056713],"float32"), Tensor([5, 2, 76056713],"int64"), )
paddle.nn.functional.nll_loss(Tensor([5, 3, 38028357, 4],"float32"), Tensor([5, 38028357, 4],"int64"), )
paddle.nn.functional.nll_loss(Tensor([5, 57042535, 2, 4],"float32"), Tensor([5, 2, 4],"int64"), )
paddle.nn.functional.nll_loss(Tensor([760567127, 3],"float32"), Tensor([760567127],"int64"), )
paddle.nn.functional.normalize(Tensor([1453, 2955931],"float16"), )
paddle.nn.functional.normalize(Tensor([1878, 1214964],"float32"), )
paddle.nn.functional.normalize(Tensor([1378, 1655807],"float32"), )
paddle.nn.functional.normalize(Tensor([1401, 1628624],"float32"), )
paddle.nn.functional.normalize(Tensor([34817, 256, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1317, 1732500],"float32"), )
paddle.nn.functional.normalize(Tensor([114085069, 20],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([178, 24129030],"float16"), )
paddle.nn.functional.normalize(Tensor([1219, 1871782],"float32"), )
paddle.nn.functional.normalize(Tensor([1363, 3151114],"float16"), )
paddle.nn.functional.normalize(Tensor([1761, 1295686],"float32"), )
paddle.nn.functional.normalize(Tensor([119, 19173962],"float32"), )
paddle.nn.functional.normalize(Tensor([1536, 2796203],"float16"), )
paddle.nn.functional.normalize(Tensor([1233, 3483348],"float16"), )
paddle.nn.functional.normalize(Tensor([1623, 2646314],"float16"), )
paddle.nn.functional.normalize(Tensor([139, 16415118],"float32"), )
paddle.nn.functional.normalize(Tensor([1796, 1270436],"float32"), )
paddle.nn.functional.normalize(Tensor([101, 22591103],"float32"), )
paddle.nn.functional.normalize(Tensor([4194305, 1024],"float16"), p=2, axis=-1, )
paddle.nn.functional.normalize(Tensor([1259, 1812313],"float32"), )
paddle.nn.functional.normalize(Tensor([110, 39045158],"float16"), )
paddle.nn.functional.normalize(Tensor([1895, 2266474],"float16"), )
paddle.nn.functional.normalize(Tensor([1429, 1596712],"float32"), )
paddle.nn.functional.normalize(Tensor([1352, 3176751],"float16"), )
paddle.nn.functional.normalize(Tensor([22, 103713700],"float32"), )
paddle.nn.functional.normalize(x=Tensor([2147483649, 2],"float16"), p=1.2, )
paddle.nn.functional.normalize(Tensor([1938, 1177349],"float32"), )
paddle.nn.functional.normalize(Tensor([102, 42107523],"float16"), )
paddle.nn.functional.normalize(Tensor([1223, 3511830],"float16"), )
paddle.nn.functional.normalize(Tensor([1661, 1373692],"float32"), )
paddle.nn.functional.normalize(Tensor([1435, 2993009],"float16"), )
paddle.nn.functional.normalize(Tensor([1603, 1423395],"float32"), )
paddle.nn.functional.normalize(Tensor([1704, 1339027],"float32"), )
paddle.nn.functional.normalize(Tensor([211, 10813751],"float32"), )
paddle.nn.functional.normalize(Tensor([12, 357913942],"float16"), )
paddle.nn.functional.normalize(Tensor([1292, 1766023],"float32"), )
paddle.nn.functional.normalize(Tensor([1315, 3266135],"float16"), )
paddle.nn.functional.normalize(Tensor([1031, 4165827],"float16"), )
paddle.nn.functional.normalize(Tensor([29, 148102321],"float16"), )
paddle.nn.functional.normalize(Tensor([2970966, 768],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([228170138, 10],"float32"), )
paddle.nn.functional.normalize(Tensor([1270, 1796616],"float32"), )
paddle.nn.functional.normalize(Tensor([1015, 2247982],"float32"), )
paddle.nn.functional.normalize(Tensor([1312, 1739102],"float32"), )
paddle.nn.functional.normalize(Tensor([1128, 3807596],"float16"), )
paddle.nn.functional.normalize(Tensor([1607, 1419852],"float32"), )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), p=4, )
paddle.nn.functional.normalize(Tensor([1408, 3050403],"float16"), )
paddle.nn.functional.normalize(Tensor([1230, 3491844],"float16"), )
paddle.nn.functional.normalize(Tensor([1497, 2869050],"float16"), )
paddle.nn.functional.normalize(Tensor([191, 11946081],"float32"), )
paddle.nn.functional.normalize(Tensor([1, 8912897, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([254, 16909321],"float16"), )
paddle.nn.functional.normalize(x=Tensor([1073741825, 4],"float16"), )
paddle.nn.functional.normalize(Tensor([224, 10186167],"float32"), )
paddle.nn.functional.normalize(Tensor([143, 15955954],"float32"), )
paddle.nn.functional.normalize(Tensor([1588, 2704640],"float16"), )
paddle.nn.functional.normalize(Tensor([128, 17825793],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1920, 2236963],"float16"), )
paddle.nn.functional.normalize(Tensor([1123, 2031792],"float32"), )
paddle.nn.functional.normalize(Tensor([1040, 4129777],"float16"), )
paddle.nn.functional.normalize(Tensor([1546, 2778116],"float16"), )
paddle.nn.functional.normalize(Tensor([1188, 3615293],"float16"), )
paddle.nn.functional.normalize(Tensor([1270, 3381865],"float16"), )
paddle.nn.functional.normalize(Tensor([128, 17825793],"float32"), )
paddle.nn.functional.normalize(Tensor([1295, 3316578],"float16"), )
paddle.nn.functional.normalize(Tensor([1066, 2140433],"float32"), )
paddle.nn.functional.normalize(Tensor([1494, 1527244],"float32"), )
paddle.nn.functional.normalize(Tensor([33554433, 128],"float16"), )
paddle.nn.functional.normalize(Tensor([11883862, 192],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1532, 2803504],"float16"), )
paddle.nn.functional.normalize(Tensor([1, 2281701379],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1755, 2447275],"float16"), )
paddle.nn.functional.normalize(Tensor([1527, 2812684],"float16"), )
paddle.nn.functional.normalize(x=Tensor([2970966, 768],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([104, 21939437],"float32"), )
paddle.nn.functional.normalize(x=Tensor([3, 1431655766],"float16"), )
paddle.nn.functional.normalize(Tensor([1367, 1669131],"float32"), )
paddle.nn.functional.normalize(Tensor([1389, 3092130],"float16"), )
paddle.nn.functional.normalize(Tensor([1671, 2570298],"float16"), )
paddle.nn.functional.normalize(Tensor([1093, 2087559],"float32"), )
paddle.nn.functional.normalize(Tensor([1030, 4169872],"float16"), )
paddle.nn.functional.normalize(Tensor([2081, 512],"float32"), )
paddle.nn.functional.normalize(Tensor([1429, 3005576],"float16"), )
paddle.nn.functional.normalize(Tensor([1053, 2166858],"float32"), )
paddle.nn.functional.normalize(Tensor([1297, 1759215],"float32"), )
paddle.nn.functional.normalize(x=Tensor([2, 2147483649],"float16"), )
paddle.nn.functional.normalize(Tensor([1310, 3278601],"float16"), )
paddle.nn.functional.normalize(Tensor([1006, 2268093],"float32"), )
paddle.nn.functional.normalize(Tensor([2081, 1096445],"float32"), )
paddle.nn.functional.normalize(Tensor([111, 20555869],"float32"), )
paddle.nn.functional.normalize(Tensor([1290, 1768761],"float32"), )
paddle.nn.functional.normalize(Tensor([105, 40904451],"float16"), )
paddle.nn.functional.normalize(Tensor([220, 19522579],"float16"), )
paddle.nn.functional.normalize(Tensor([1213, 3540781],"float16"), )
paddle.nn.functional.normalize(Tensor([50704476, 45],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1541, 1480663],"float32"), )
paddle.nn.functional.normalize(Tensor([1697, 1344551],"float32"), )
paddle.nn.functional.normalize(Tensor([10, 228170138],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([1895, 1204065],"float32"), )
paddle.nn.functional.npair_loss(Tensor([18, 126761188],"float32"), positive=Tensor([18, 126761188],"float32"), labels=Tensor([18],"float32"), l2_reg=0.002, )
paddle.nn.functional.pad(Tensor([1, 16, 31, 28, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([6117, 8, 1280],"bfloat16"), list[0,3,0,0,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([1, 22071, 103381],"float32"), list[1,0,], value=7, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1895, 16, 14, 14, 384],"float32"), tuple(0,0,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 22339, 14, 19, 384],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([30, 256, 8, 76],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([30, 64, 16, 144],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 16, 56, 71, 96],"float32"), tuple(0,6,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 2, 1140850690],"float32"), pad=list[1,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([30, 64, 32, 64],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 16, 56, 65, 96],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([8162, 8, 1280],"bfloat16"), list[0,6,0,0,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([1, 16, 56, 75, 96],"float32"), tuple(0,2,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([30, 128, 16, 128],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([2, 56, 42, 384],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 2, 1140850690],"float32"), pad=list[1,2,], mode="constant", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([38452, 19780, 3],"float32"), list[1,0,], value=2, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 16, 30, 28, 192],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([30, 128, 8, 48],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 3, 13859, 245, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 1, 22817014, 100],"int32"), tuple(0,0,0,0,), value=False, )
paddle.nn.functional.pad(Tensor([1, 16, 14, 49933, 384],"float16"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 26527, 14, 16, 384],"float32"), tuple(0,5,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 3, 14031, 242, 224],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 60, 96],"float32"), tuple(0,3,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([10, 64, 16, 128],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([4096, 1, 17, 17],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([4, 32, 32, 768],"float32"), tuple(0,0,0,10,0,10,0,0,), )
paddle.nn.functional.pad(Tensor([1, 17980, 126903],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([1, 16, 56, 67, 96],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([435, 16, 61, 56, 96],"float32"), tuple(0,0,0,2,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([7, 64, 32, 96],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([4, 64, 16, 304],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 128, 16, 48],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 1431655766, 3],"float16"), pad=list[0,0,1,1,0,0,], mode="constant", value=0, data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([5, 128, 16, 144],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([8, 5078, 237, 237],"float32"), list[2,2,2,2,], "constant", 0, )
paddle.nn.functional.pad(Tensor([17040384, 1, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([7, 15158, 84, 256],"float32"), tuple(0,0,0,1,0,1,0,0,), )
paddle.nn.functional.pad(Tensor([1, 16, 21846, 17, 384],"float32"), tuple(0,4,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([30, 128, 8, 56],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([3702, 8, 1280],"bfloat16"), list[0,2,0,0,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([10, 64, 32, 272],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 26527, 16, 14, 384],"float32"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 31, 28, 164294],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 28, 33, 192],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 16, 15, 14, 679078],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([30, 256, 4, 64],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([30, 128, 8, 80],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 16, 14, 19, 384],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([10, 64, 32, 176],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 256, 4, 40],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([856, 16, 31, 28, 192],"float32"), tuple(0,0,0,4,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 192, 61896, 192],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([1, 1, 17, 134217729],"float32"), pad=list[1,1,1,1,], mode="constant", value=0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([256, 16, 32, 64],"float32"), list[1,1,1,1,], mode="replicate", data_format="NCHW", )
paddle.nn.functional.pad(Tensor([6, 64, 16, 224],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 3, 32, 242, 98214],"float32"), tuple(0,0,0,2,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([30, 128, 8, 128],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 16, 26527, 14, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([30, 64, 16, 192],"float32"), list[0,1,0,1,], value=-math.inf, )
paddle.nn.functional.pad(Tensor([1, 16, 14, 15, 679078],"float32"), tuple(0,1,0,0,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([1, 10, 429496730],"float16"), pad=list[0,0,0,1,0,0,], )
paddle.nn.functional.pad(Tensor([42301, 17980, 3],"float32"), list[1,0,], value=3, mode="constant", data_format="NCL", )
paddle.nn.functional.pad(Tensor([4458, 8, 1280],"bfloat16"), list[0,6,0,0,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([30, 128, 8, 120],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 16, 15, 24759, 384],"float32"), tuple(0,0,0,6,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([6351, 8, 1280],"bfloat16"), list[0,1,0,0,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([3658, 8, 1280],"bfloat16"), list[0,6,0,0,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float16"), tuple(0,0,0,3,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([10, 64, 32, 64],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([7, 15158, 168, 128],"float32"), tuple(0,0,0,2,0,2,0,0,), )
paddle.nn.functional.pad(Tensor([10, 128, 16, 96],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([10, 64, 32, 192],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 128, 8, 136],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([30, 256, 8, 32],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 256, 64, 64],"float32"), pad=list[1,1,1,1,], mode="reflect", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([30, 128, 16, 144],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([10, 128, 16, 88],"float32"), Tensor([4],"int32"), value=0, )
paddle.nn.functional.pad(Tensor([1, 96, 72, 384],"float32"), list[0,0,0,0,0,0,0,0,], data_format="NHWC", )
paddle.nn.functional.pad(Tensor([2, 64, 48, 240],"float32"), Tensor([4],"int32"), value=-math.inf, )
paddle.nn.functional.pad(Tensor([30, 256, 8, 56],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 3, 32, 102891, 231],"float32"), tuple(0,1,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([1, 16, 49933, 14, 384],"float16"), tuple(0,0,0,5,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([5, 12380, 48, 768],"float32"), tuple(0,0,0,8,0,8,0,0,), )
paddle.nn.functional.pad(Tensor([33817088, 1, 1, 1],"float32"), list[0,0,0,0,], )
paddle.nn.functional.pad(Tensor([3699, 8, 1280],"bfloat16"), list[0,5,0,0,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([4294967297],"float16"), list[0,1,], value=1, )
paddle.nn.functional.pad(Tensor([1, 2, 1140850690],"float32"), pad=list[2,2,], mode="replicate", value=0.0, data_format="NCL", name=None, )
paddle.nn.functional.pad(Tensor([1, 3, 32, 224, 238],"float32"), tuple(0,2,0,0,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([30, 128, 16, 40],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([1, 16, 57, 56, 96],"float32"), tuple(0,0,0,1,0,0,), data_format="NDHWC", )
paddle.nn.functional.pad(Tensor([30, 128, 16, 168],"float32"), list[0,1,0,1,], value=0, )
paddle.nn.functional.pad(Tensor([4096, 1, 32, 32],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([512, 1, 257, 257],"float32"), list[1,1,1,1,], )
paddle.nn.functional.pad(Tensor([7, 6, 21, 2586964],"float32"), tuple(0,0,0,4,0,4,0,0,), )
paddle.nn.functional.pad(Tensor([1, 3, 32, 106106, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pad(Tensor([16, 64, 16, 139265],"float32"), list[0,3,0,3,], mode="constant", )
paddle.nn.functional.pad(Tensor([5548, 8, 1280],"bfloat16"), list[0,4,0,0,0,0,], mode="constant", value=0, )
paddle.nn.functional.pad(Tensor([1, 1300, 32, 245, 224],"float32"), tuple(0,0,0,3,0,0,), data_format="NCDHW", )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(x=Tensor([22817014, 100],"float32"), y=Tensor([22817014, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 22817014],"float32"), y=Tensor([100, 22817014],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(x=Tensor([22817014, 100],"float32"), y=Tensor([100],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([100],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 22817014],"float32"), y=Tensor([100, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 65537, 128],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([3314018, 81, 4, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([29826162, 9, 4, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2177, 256, 64, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 69633, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 64, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 128, 1089],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 128, 2049],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 64, 69633],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4353, 128, 64, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 64, 4097],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 64, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([545, 256, 128, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 9, 4, 59652324],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([29826162, 9, 4, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(x=Tensor([29826162, 4, 4, 9],"float16"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([4, 9, 4, 29826162],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 81, 4, 3314018],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 64, 2177],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 59652324, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 64, 131073],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 134217729, 4, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([2049, 128, 128, 128],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 81, 3314018, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 128, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 134217729, 4, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 2049, 128],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 17409, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 177179, 274, 47],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 128, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 128, 34817],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 4, 134217729],"float16"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([29826162, 4, 4, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 4, 59652324, 9],"float16"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([1636802, 1, 17, 82],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 128, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 4097, 64],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 4, 134217729],"float16"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([29826162, 9, 4, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([8193, 128, 64, 64],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1089, 128, 128, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1, 27825627, 82],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 59652324, 4, 9],"float16"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 128, 65537],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 131073, 64],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 59652324, 4, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 9, 59652324, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 64, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 128, 17409],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4097, 256, 64, 64],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([2, 4, 4, 134217729],"float16"), upscale_factor=3, data_format="NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([4, 81, 4, 3314018],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 31690297, 4],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(x=Tensor([3314018, 81, 4, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([177179, 1, 274, 47],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1636802, 17, 82],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1, 17, 134217729],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1, 48546838, 47],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 9, 4, 29826162],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 2177, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1, 1, 274, 8327378],"float32"), 1, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 9, 29826162, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 81, 3314018, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 31690297],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 64, 34817],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 59652324],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 134217729, 4, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([15845149, 9, 4, 4],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 59652324, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(x=Tensor([4, 9, 29826162, 4],"float16"), upscale_factor=3, data_format="NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([29826162, 4, 4, 9],"float16"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 59652324],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 256, 34817, 64],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 59652324, 4],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([1025, 256, 128, 128],"float16"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([4, 128, 34817, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 59652324, 4, 9],"float16"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 59652324, 4],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([64, 256, 1089, 128],"float32"), 2, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 1, 12, 12],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 14913081, 12, 12],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 12, 14913081],"float16"), 3, "NHWC", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 14913081, 12, 12],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 95070891, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 7922575, 12, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 12, 12, 1],"float16"), 3, "NHWC", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([15845149, 1, 12, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 95070891],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 1, 12, 12],"float16"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 12, 12, 1],"float16"), 3, "NHWC", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 12, 14913081],"float16"), 3, "NHWC", )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 285212673, 2],"bfloat16"), Tensor([4, 285212673, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"bfloat16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="sum", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.nn.functional.poisson_nll_loss(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), log_input=False, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.poisson_nll_loss(Tensor([380283564, 3, 2],"bfloat16"), Tensor([380283564, 3, 2],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([4, 3, 190141782],"bfloat16"), Tensor([4, 3, 190141782],"float32"), )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.prelu(Tensor([11369, 64, 56, 56],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 128, 28, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(x=Tensor([1, 2, 285212673, 4],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.prelu(x=Tensor([178956971, 2, 3, 4],"float16"), weight=Tensor([1],"float16"), )
paddle.nn.functional.prelu(Tensor([159072863, 3, 3, 3],"float16"), Tensor([1],"float16"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 380283564],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 285212673, 4],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 28, 28],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 6122, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 64, 56, 56],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([95070891, 2, 3, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([128, 256, 28, 2487],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([11369, 256, 28, 28],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 512, 2487, 14],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 4974, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 7, 7],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 512, 14, 2487],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 512, 14, 3061],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 285212673, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([104, 256, 12243, 7],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(x=Tensor([1, 357913942, 3, 4],"float16"), weight=Tensor([1],"float16"), )
paddle.nn.functional.prelu(Tensor([104, 256, 14, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 64, 56, 4974],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 7, 9948],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 14, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 190141782, 3, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([95070891, 2, 3, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 285212673, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 14, 4974],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 56, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([22737, 512, 14, 14],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 128, 56, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5, 20, 2281702, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(x=Tensor([1, 2, 3, 715827883],"float16"), weight=Tensor([1],"float16"), )
paddle.nn.functional.prelu(Tensor([104, 256, 7, 12243],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 380283564],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 64, 4974, 56],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(x=Tensor([1, 190141782, 3, 4],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([2, 3, 238609295, 3],"float16"), Tensor([1],"float16"), data_format="NCHW", )
paddle.nn.functional.prelu(x=Tensor([1, 2, 536870913, 4],"float16"), weight=Tensor([1],"float16"), )
paddle.nn.functional.prelu(Tensor([104, 512, 7, 7],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2, 3, 126761188, 3],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 285212673, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([95070891, 2, 3, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([128, 128, 2487, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 14, 6122],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 3061, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 512, 6122, 7],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 256, 9948, 7],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 6122, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 512, 3061, 14],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 512, 7, 4974],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 6996, 56, 56],"float32"), Tensor([6996],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 128, 4974, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 190141782, 3, 4],"float32"), Tensor([190141782],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 64, 6122, 56],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 90948, 14, 14],"float32"), Tensor([90948],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 380283564],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([5685, 128, 56, 56],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 447744, 7, 7],"float32"), Tensor([447744],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 28, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 190141782, 3, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([1140851, 20, 10, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 128, 28, 4974],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 28, 28],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2, 3, 3, 126761188],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2, 126761188, 3, 3],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 111936, 14, 14],"float32"), Tensor([111936],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 64, 56, 56],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(x=Tensor([95070891, 2, 3, 4],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([128, 22737, 28, 28],"float32"), Tensor([22737],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 56, 3061],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([45474, 256, 14, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5, 4563403, 10, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 512, 7, 7],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 3061, 28],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([181896, 256, 7, 7],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([95070891, 2, 3, 4],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 512, 4974, 7],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 512, 7, 6122],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5, 20, 10, 2281702],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 27984, 28, 28],"float32"), Tensor([27984],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 64, 56, 6122],"float32"), Tensor([64],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([84507459, 3, 3, 3],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 512, 14, 14],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([22737, 128, 28, 28],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(x=Tensor([1, 2, 3, 380283564],"float32"), weight=Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([128, 363792, 7, 7],"float32"), Tensor([363792],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 5685, 56, 56],"float32"), Tensor([5685],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([90948, 512, 7, 7],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([128, 128, 56, 2487],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 512, 14, 14],"float32"), Tensor([512],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 128, 28, 6122],"float32"), Tensor([128],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([104, 256, 7, 7],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2, 238609295, 3, 3],"float16"), Tensor([1],"float16"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 190141782, 3, 4],"float32"), Tensor([190141782],"float32"), )
paddle.nn.functional.prelu(Tensor([104, 256, 28, 3061],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 380283564],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([128, 256, 2487, 28],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2, 3, 3, 238609295],"float16"), Tensor([1],"float16"), data_format="NCHW", )
paddle.nn.functional.relu(Tensor([4, 256, 32, 36],"float32"), )
paddle.nn.functional.relu(Tensor([64, 24, 112, 112],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 1024, 66, 84],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 92, 139],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 272, 248],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 72, 66],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 70, 72],"float32"), )
paddle.nn.functional.relu(Tensor([4, 64, 264, 272],"float32"), )
paddle.nn.functional.relu(Tensor([4, 2048, 42, 35],"float32"), )
paddle.nn.functional.relu(Tensor([88, 44, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 136, 168],"float32"), )
paddle.nn.functional.relu(Tensor([48, 69, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 70, 60],"float32"), )
paddle.nn.functional.relu(Tensor([40, 114, 4096],"float32"), )
paddle.nn.functional.relu(Tensor([369, 256, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 112, 160],"float32"), )
paddle.nn.functional.relu(Tensor([20, 128, 76, 136],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 512, 34, 32],"float32"), )
paddle.nn.functional.relu(Tensor([4, 2048, 24, 31],"float32"), )
paddle.nn.functional.relu(Tensor([1, 256, 152, 100],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 39, 35],"float32"), )
paddle.nn.functional.relu(Tensor([8, 2048, 25, 34],"float32"), )
paddle.nn.functional.relu(Tensor([1, 512, 84, 128],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 40, 28],"float32"), )
paddle.nn.functional.relu(Tensor([23, 512, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 256, 313],"float32"), )
paddle.nn.functional.relu(Tensor([428, 256, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 108, 128],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 134, 144],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 224, 252],"float32"), )
paddle.nn.functional.relu(Tensor([8, 256, 144, 128],"float32"), )
paddle.nn.functional.relu(Tensor([12, 2048, 10, 17477],"float16"), )
paddle.nn.functional.relu(Tensor([200, 18, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([221, 256, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 64, 224, 252],"float32"), )
paddle.nn.functional.relu(Tensor([8, 512, 64, 82],"float32"), )
paddle.nn.functional.relu(Tensor([48, 34, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([8, 512, 140, 164],"float32"), )
paddle.nn.functional.relu(Tensor([8, 64, 608, 496],"float32"), )
paddle.nn.functional.relu(Tensor([64, 640, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 56, 78],"float32"), )
paddle.nn.functional.relu(Tensor([128, 36, 4096],"float32"), )
paddle.nn.functional.relu(Tensor([10, 256, 16, 56],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 128, 252, 334],"float32"), )
paddle.nn.functional.relu(Tensor([128, 49, 2048],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 96, 160, 160],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 64, 276, 334],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 30, 39],"float32"), )
paddle.nn.functional.relu(Tensor([48, 65, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([227, 256, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([72, 71, 4096],"float32"), )
paddle.nn.functional.relu(Tensor([16, 40, 160, 160],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 41, 42],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 72, 48],"float32"), )
paddle.nn.functional.relu(Tensor([369, 256, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 1024, 54, 66],"float32"), )
paddle.nn.functional.relu(Tensor([4, 64, 464, 512],"float32"), )
paddle.nn.functional.relu(Tensor([1, 128, 84, 132],"float32"), )
paddle.nn.functional.relu(Tensor([4, 64, 479, 600],"float32"), )
paddle.nn.functional.relu(Tensor([2, 1024, 136, 100],"float32"), )
paddle.nn.functional.relu(Tensor([8, 512, 31, 41],"float32"), )
paddle.nn.functional.relu(Tensor([303, 256, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 129, 150],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 96, 137],"float32"), )
paddle.nn.functional.relu(Tensor([128, 26215, 1280],"float16"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 72, 84],"float32"), )
paddle.nn.functional.relu(Tensor([72, 10, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 128, 148],"float32"), )
paddle.nn.functional.relu(Tensor([40, 55, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([24, 119, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 257, 307],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 70, 74],"float32"), )
paddle.nn.functional.relu(Tensor([4, 64, 214, 241],"float32"), )
paddle.nn.functional.relu(Tensor([251, 256, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 512, 60, 74],"float32"), )
paddle.nn.functional.relu(Tensor([203, 256, 28, 28],"float32"), None, )
paddle.nn.functional.relu(Tensor([2, 1024, 64, 128],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 1024, 44, 66],"float32"), )
paddle.nn.functional.relu(Tensor([72, 48, 4096],"float32"), )
paddle.nn.functional.relu(Tensor([64, 64, 224, 224],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 512, 30, 37],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 80, 80],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 102, 163],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 80, 80],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 38, 40],"float32"), )
paddle.nn.functional.relu(Tensor([4, 64, 284, 256],"float32"), )
paddle.nn.functional.relu(Tensor([4, 128, 184, 277],"float32"), )
paddle.nn.functional.relu(Tensor([120, 16, 4096],"float32"), )
paddle.nn.functional.relu(Tensor([64, 32, 149, 149],"float32"), None, )
paddle.nn.functional.relu(Tensor([48, 85, 2048],"float32"), )
paddle.nn.functional.relu(Tensor([64, 36, 4096],"float32"), )
paddle.nn.functional.relu(Tensor([4, 64, 496, 528],"float32"), )
paddle.nn.functional.relu(Tensor([4, 256, 107, 126],"float32"), )
paddle.nn.functional.relu(Tensor([56, 53, 4096],"float32"), )
paddle.nn.functional.relu(Tensor([8, 512, 124, 168],"float32"), )
paddle.nn.functional.relu(Tensor([4, 512, 39, 38],"float32"), )
paddle.nn.functional.relu(Tensor([2, 1024, 40, 40],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 32, 256, 512],"float32"), None, )
paddle.nn.functional.relu(Tensor([4, 256, 306, 246],"float32"), )
paddle.nn.functional.relu(Tensor([4, 64, 496, 448],"float32"), )
paddle.nn.functional.relu6(Tensor([48506, 960, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([256, 384, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 96, 112, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([128, 192, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 192, 848848, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([40422, 1152, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 46565335, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([256, 72, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([4, 256, 131073, 32],"float16"), None, )
paddle.nn.functional.relu6(Tensor([1, 144, 28, 565899],"float32"), )
paddle.nn.functional.relu6(Tensor([124, 32, 112, 5135],"float32"), None, )
paddle.nn.functional.relu6(Tensor([128, 384, 6242, 14],"float16"), )
paddle.nn.functional.relu6(Tensor([1, 727584, 56, 56],"float32"), )
paddle.nn.functional.relu6(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.relu6(Tensor([4, 256, 262145, 16],"float16"), None, )
paddle.nn.functional.relu6(Tensor([256, 288, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 32, 9363, 112],"float16"), )
paddle.nn.functional.relu6(Tensor([128, 1280, 1990, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([1264, 144, 112, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 11641334, 14, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([64, 432, 14, 11097],"float16"), None, )
paddle.nn.functional.relu6(Tensor([256, 342393, 7, 7],"float16"), )
paddle.nn.functional.relu6(Tensor([5053, 144, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 144, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([20211, 144, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([2, 557057, 2048],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 22737, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 171197, 14, 14],"float16"), )
paddle.nn.functional.relu6(Tensor([256, 32, 4682, 112],"float16"), )
paddle.nn.functional.relu6(Tensor([124, 128, 56, 2568],"float32"), None, )
paddle.nn.functional.relu6(Tensor([128, 192, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([64, 162, 56, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([256, 192, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([1048577, 256, 16, 1],"float16"), None, )
paddle.nn.functional.relu6(Tensor([5685, 32, 112, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([256, 576, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([60632, 192, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 144, 112, 1106],"float32"), )
paddle.nn.functional.relu6(Tensor([256, 36, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 42800, 28, 28],"float16"), )
paddle.nn.functional.relu6(Tensor([256, 96, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 1920, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([4, 384, 349526, 8],"float16"), None, )
paddle.nn.functional.relu6(Tensor([1, 960, 339539, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 96, 212212, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([256, 384, 14, 3121],"float16"), )
paddle.nn.functional.relu6(Tensor([128, 96, 56, 6242],"float16"), )
paddle.nn.functional.relu6(Tensor([124, 32, 112, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([124, 256, 28, 2568],"float32"), None, )
paddle.nn.functional.relu6(Tensor([256, 1338, 112, 112],"float16"), )
paddle.nn.functional.relu6(Tensor([128, 1280, 7, 1990],"float32"), )
paddle.nn.functional.relu6(Tensor([4294967297],"float16"), None, )
paddle.nn.functional.relu6(Tensor([128, 192, 6242, 28],"float16"), )
paddle.nn.functional.relu6(Tensor([128, 144, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([2281701379],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 67108865, 1, 16],"float16"), None, )
paddle.nn.functional.relu6(Tensor([64, 228, 28, 10513],"float16"), None, )
paddle.nn.functional.relu6(Tensor([1, 192, 28, 424424],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 1152, 1106, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([4, 96, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 384, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([64, 32, 18725, 112],"float16"), None, )
paddle.nn.functional.relu6(Tensor([128, 32, 112, 9363],"float16"), )
paddle.nn.functional.relu6(Tensor([128, 128, 56, 56],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 46565335, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 576, 282950, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([36380, 1280, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 144, 56, 282950],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 1048577, 32, 32],"float16"), None, )
paddle.nn.functional.relu6(Tensor([1, 576, 7, 565899],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 144, 112, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 2560, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([10700, 32, 112, 112],"float16"), )
paddle.nn.functional.relu6(Tensor([124, 1467, 112, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([3567, 96, 112, 112],"float16"), )
paddle.nn.functional.relu6(Tensor([256, 144, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([256, 8, 112, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([87382, 768, 8, 8],"float16"), None, )
paddle.nn.functional.relu6(Tensor([114131, 192, 14, 14],"float16"), )
paddle.nn.functional.relu6(Tensor([128, 5685, 56, 56],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 960, 7, 4994],"float16"), )
paddle.nn.functional.relu6(Tensor([1, 384, 424424, 14],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 2910334, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([10700, 32, 112, 112],"float16"), None, )
paddle.nn.functional.relu6(Tensor([256, 48, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([1895, 96, 112, 112],"float32"), None, )
paddle.nn.functional.relu6(Tensor([128, 10700, 56, 56],"float16"), )
paddle.nn.functional.relu6(Tensor([124, 192, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([128, 1152, 14, 1106],"float32"), )
paddle.nn.functional.relu6(Tensor([256, 192, 28, 3121],"float16"), )
paddle.nn.functional.relu6(Tensor([1, 1280, 7, 254655],"float32"), None, )
paddle.nn.functional.relu6(x=Tensor([3, 3, 477218589],"float16"), )
paddle.nn.functional.relu6(Tensor([256, 576, 14, 14],"float32"), )
paddle.nn.functional.relu6(Tensor([256, 240, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([128, 96, 6242, 56],"float16"), )
paddle.nn.functional.relu6(Tensor([4, 512, 16, 131073],"float16"), None, )
paddle.nn.functional.relu6(Tensor([124, 192, 28, 3423],"float32"), None, )
paddle.nn.functional.relu6(Tensor([4, 96, 112, 112],"float32"), )
paddle.nn.functional.relu6(Tensor([68479, 1280, 7, 7],"float16"), )
paddle.nn.functional.relu6(Tensor([1, 384, 424424, 14],"float32"), )
paddle.nn.functional.rrelu(Tensor([1, 2, 536870913, 4],"float16"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([71582789, 3, 4, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 143165577, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 107374183, 4, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 536870913, 4],"float16"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([178956971, 2, 3, 4],"float16"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 3, 715827883],"float16"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 107374183, 4, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([1, 357913942, 3, 4],"float16"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([178956971, 2, 3, 4],"float16"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 178956971],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 76056713, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 3, 715827883],"float16"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 95070891],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([38028357, 3, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 178956971],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([38028357, 3, 4, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([1, 357913942, 3, 4],"float16"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 57042535, 4, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 76056713, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 143165577, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 95070891],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([71582789, 3, 4, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 57042535, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.selu(Tensor([17179870, 5, 5, 10],"float16"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([1140850690, 2],"float32"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([2, 2147483649],"float16"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([3, 5, 5, 57266231],"float16"), 1.5, 2.0, None, )
paddle.nn.functional.selu(x=Tensor([477218589, 3, 3],"float16"), )
paddle.nn.functional.selu(Tensor([3, 28633116, 5, 10],"float16"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([477218589, 3, 3],"float16"), 1.0507009873554805, 0, None, )
paddle.nn.functional.selu(x=Tensor([3, 3, 477218589],"float16"), alpha=0, scale=1.0507009873554805, )
paddle.nn.functional.selu(x=Tensor([477218589, 3, 3],"float16"), alpha=0, scale=1.0507009873554805, )
paddle.nn.functional.selu(Tensor([477218589, 3, 3],"float16"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([3, 477218589, 3],"float16"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(x=Tensor([2, 2147483649],"float16"), )
paddle.nn.functional.selu(Tensor([3, 3, 477218589],"float16"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(Tensor([3, 5, 28633116, 10],"float16"), 1.5, 2.0, None, )
paddle.nn.functional.selu(Tensor([2, 1140850690],"float32"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(x=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.selu(Tensor([17179870, 5, 5, 10],"float16"), 1.5, 2.0, None, )
paddle.nn.functional.selu(x=Tensor([1140850690, 2],"float32"), )
paddle.nn.functional.selu(Tensor([2147483649, 2],"float16"), 1.0507009873554805, 1.6732632423543772, None, )
paddle.nn.functional.selu(x=Tensor([3, 477218589, 3],"float16"), )
paddle.nn.functional.selu(x=Tensor([3, 477218589, 3],"float16"), alpha=0, scale=1.0507009873554805, )
paddle.nn.functional.selu(Tensor([3, 5, 5, 57266231],"float16"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([3, 3, 477218589],"float16"), 1.0507009873554805, 0, None, )
paddle.nn.functional.selu(x=Tensor([3, 3, 477218589],"float16"), )
paddle.nn.functional.selu(x=Tensor([2147483649, 2],"float16"), )
paddle.nn.functional.selu(Tensor([3, 5, 28633116, 10],"float16"), 1.5, 2.0, )
paddle.nn.functional.selu(Tensor([3, 477218589, 3],"float16"), 1.0507009873554805, 0, None, )
paddle.nn.functional.selu(Tensor([3, 28633116, 5, 10],"float16"), 1.5, 2.0, None, )
paddle.nn.functional.sequence_mask(Tensor([2, 1140850690],"int64"), maxlen=-1, dtype=VarType(int64), )
paddle.nn.functional.sequence_mask(Tensor([760567127, 3],"int64"), maxlen=-1, dtype=VarType(int64), )
paddle.nn.functional.sigmoid(Tensor([32, 272, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([164, 216, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([20, 272, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([51200, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 114085069, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([72, 272, 312],"float32"), )
paddle.nn.functional.sigmoid(Tensor([7605672, 3, 10, 10, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([20, 9, 152, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 13, 175515491],"float32"), )
paddle.nn.functional.sigmoid(Tensor([108, 200, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([68, 272, 200],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([256, 9, 990322],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10, 499, 457255],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([12, 304, 328],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 1, 3565159, 40],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([1114113, 2048],"float32"), )
paddle.nn.functional.sigmoid(Tensor([68, 336, 200],"float32"), )
paddle.nn.functional.sigmoid(Tensor([64, 256, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([152, 200, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([48384, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([92, 200, 288],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 48, 48],"float32"), )
paddle.nn.functional.sigmoid(Tensor([24, 272, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 88, 88],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 3, 12, 12, 2640859],"float32"), )
paddle.nn.functional.sigmoid(Tensor([40, 304, 200],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 4456449, 16, 16, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([48, 336, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([48, 232, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([176, 304, 328],"float32"), )
paddle.nn.functional.sigmoid(Tensor([40, 336, 200],"float32"), )
paddle.nn.functional.sigmoid(Tensor([60, 312, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([180, 248, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 512, 72, 72],"float32"), )
paddle.nn.functional.sigmoid(Tensor([4, 1073741825, 1, 1],"float16"), None, )
paddle.nn.functional.sigmoid(Tensor([56, 216, 296],"float32"), )
paddle.nn.functional.sigmoid(Tensor([31690297, 18, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([44, 272, 296],"float32"), )
paddle.nn.functional.sigmoid(Tensor([22817014, 1, 10, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([32, 304, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([68, 304, 328],"float32"), )
paddle.nn.functional.sigmoid(Tensor([36, 264, 320],"float32"), )
paddle.nn.functional.sigmoid(Tensor([36, 304, 200],"float32"), )
paddle.nn.functional.sigmoid(Tensor([5704254, 1, 20, 20],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 3169030, 20, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([32, 320, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([48, 312, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2, 256, 80, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 120089547, 19],"float32"), )
paddle.nn.functional.sigmoid(Tensor([232, 296, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 80, 60, 60],"float32"), )
paddle.nn.functional.sigmoid(Tensor([154, 384, 38584, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([60, 328, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([92, 200, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([44739243, 96, 1, 1],"float16"), )
paddle.nn.functional.sigmoid(Tensor([144, 272, 328],"float32"), )
paddle.nn.functional.sigmoid(Tensor([60, 272, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([100, 208, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([60840, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([192, 200, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 671089, 20, 20],"float16"), )
paddle.nn.functional.sigmoid(Tensor([4, 128, 64, 64],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12, 3, 1584515, 40, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([28, 288, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([174240, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([124, 272, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([84, 336, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([60, 296, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 1, 40, 3565159],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([112, 216, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 64, 25500],"float32"), )
paddle.nn.functional.sigmoid(Tensor([280, 200, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10752, 399458],"float16"), )
paddle.nn.functional.sigmoid(Tensor([1, 61667605, 37],"float32"), )
paddle.nn.functional.sigmoid(Tensor([188, 272, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([48, 328, 296],"float32"), )
paddle.nn.functional.sigmoid(Tensor([52, 304, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([40, 232, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([92, 304, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([2970966, 3, 16, 16, 1],"float32"), )
paddle.nn.functional.sigmoid(Tensor([44, 312, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([54963, 264, 296],"float16"), )
paddle.nn.functional.sigmoid(Tensor([212, 200, 288],"float32"), )
paddle.nn.functional.sigmoid(Tensor([12800, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 3, 95070891, 2, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 80, 52, 52],"float32"), )
paddle.nn.functional.sigmoid(Tensor([128, 1024, 32769, 1],"float16"), None, )
paddle.nn.functional.sigmoid(Tensor([72, 304, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([8, 48, 80, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([60, 216, 296],"float32"), )
paddle.nn.functional.sigmoid(Tensor([24, 200, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([16, 296, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([308, 304, 304],"float32"), )
paddle.nn.functional.sigmoid(Tensor([52, 304, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([244, 200, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([320, 272, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([88, 248, 336],"float32"), )
paddle.nn.functional.sigmoid(Tensor([96, 288, 272],"float32"), )
paddle.nn.functional.sigmoid(Tensor([37632, 80],"float32"), )
paddle.nn.functional.sigmoid(Tensor([148, 304, 272],"float32"), )
paddle.nn.functional.silu(Tensor([12, 190141782],"float32"), )
paddle.nn.functional.silu(Tensor([128, 256, 4097, 32],"float16"), None, )
paddle.nn.functional.silu(Tensor([2622, 256, 80, 80],"float16"), None, )
paddle.nn.functional.silu(Tensor([16, 1024, 6964, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([1054, 256, 92, 92],"float32"), )
paddle.nn.functional.silu(Tensor([1, 256, 387518, 23],"float32"), )
paddle.nn.functional.silu(Tensor([16, 256, 6964, 80],"float32"), None, )
paddle.nn.functional.silu(Tensor([43691, 384, 16, 16],"float16"), None, )
paddle.nn.functional.silu(Tensor([128, 96, 32, 5803],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 512, 123791, 36],"float32"), )
paddle.nn.functional.silu(Tensor([512, 16, 524289],"float16"), None, )
paddle.nn.functional.silu(Tensor([16, 128, 26215, 80],"float16"), None, )
paddle.nn.functional.silu(Tensor([1089, 128, 128, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 16, 128, 8705],"float32"), None, )
paddle.nn.functional.silu(Tensor([41944, 256, 20, 20],"float16"), )
paddle.nn.functional.silu(Tensor([4, 512, 80, 80],"float32"), )
paddle.nn.functional.silu(Tensor([166597, 1, 13696],"float32"), )
paddle.nn.functional.silu(Tensor([16, 128, 13927, 80],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 512, 4097, 16],"float16"), None, )
paddle.nn.functional.silu(Tensor([3439, 512, 36, 36],"float32"), )
paddle.nn.functional.silu(Tensor([33554433, 128],"float16"), )
paddle.nn.functional.silu(Tensor([1, 128, 92, 92],"float32"), )
paddle.nn.functional.silu(Tensor([1024, 2228225],"float32"), None, )
paddle.nn.functional.silu(Tensor([4213, 256, 46, 46],"float32"), )
paddle.nn.functional.silu(Tensor([10, 228170138],"float32"), )
paddle.nn.functional.silu(Tensor([297097, 16, 480],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 64, 128, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([512, 29128, 288],"float16"), None, )
paddle.nn.functional.silu(Tensor([1, 2281701379],"float32"), None, )
paddle.nn.functional.silu(Tensor([8, 32, 160, 160],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 4456449, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 128, 128, 1089],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 256, 64, 2049],"float16"), None, )
paddle.nn.functional.silu(Tensor([128, 96, 10923, 32],"float16"), None, )
paddle.nn.functional.silu(Tensor([2, 256, 80, 80],"float32"), )
paddle.nn.functional.silu(Tensor([2, 384, 40, 40],"float32"), )
paddle.nn.functional.silu(Tensor([17341, 257, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([3355444, 4, 320],"float16"), )
paddle.nn.functional.silu(Tensor([8425, 128, 46, 46],"float32"), )
paddle.nn.functional.silu(Tensor([39992, 57054],"float32"), None, )
paddle.nn.functional.silu(Tensor([41, 2, 52377650],"float16"), )
paddle.nn.functional.silu(Tensor([39, 344149, 320],"float16"), )
paddle.nn.functional.silu(Tensor([1, 285212673, 8],"float32"), )
paddle.nn.functional.silu(Tensor([128, 640, 8, 6554],"float16"), None, )
paddle.nn.functional.silu(Tensor([128, 64, 2177, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 512, 72, 72],"float32"), )
paddle.nn.functional.silu(Tensor([57, 2, 37675152],"float16"), )
paddle.nn.functional.silu(Tensor([2048, 1114113],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 512, 55706, 80],"float32"), )
paddle.nn.functional.silu(Tensor([2, 4, 89478486, 6],"float16"), )
paddle.nn.functional.silu(Tensor([1, 4456449, 512],"float32"), )
paddle.nn.functional.silu(Tensor([8, 285212673],"float32"), )
paddle.nn.functional.silu(Tensor([51, 2, 42107523],"float16"), )
paddle.nn.functional.silu(Tensor([8193, 128, 64, 64],"float16"), None, )
paddle.nn.functional.silu(Tensor([10486, 256, 40, 40],"float16"), None, )
paddle.nn.functional.silu(Tensor([16, 41944, 80, 80],"float16"), )
paddle.nn.functional.silu(Tensor([1, 128, 96, 96],"float32"), )
paddle.nn.functional.silu(Tensor([128, 512, 8, 8],"float32"), None, )
paddle.nn.functional.silu(Tensor([5200, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 247581, 96, 96],"float32"), )
paddle.nn.functional.silu(x=Tensor([47721859, 10, 3, 3],"float16"), )
paddle.nn.functional.silu(Tensor([4, 1, 570425345],"float32"), )
paddle.nn.functional.silu(Tensor([1, 256, 92, 96880],"float32"), )
paddle.nn.functional.silu(Tensor([4, 39790, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 22, 202566],"float32"), )
paddle.nn.functional.silu(Tensor([4, 570425345],"float32"), )
paddle.nn.functional.silu(Tensor([16, 512, 13927, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([43691, 96, 32, 32],"float16"), None, )
paddle.nn.functional.silu(Tensor([16, 512, 20, 20],"float32"), None, )
paddle.nn.functional.silu(Tensor([419431, 160, 8, 8],"float16"), None, )
paddle.nn.functional.silu(Tensor([860, 512, 72, 72],"float32"), )
paddle.nn.functional.silu(Tensor([128, 8193, 64, 64],"float16"), None, )
paddle.nn.functional.silu(Tensor([8, 32, 640, 640],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 1426064, 40, 40],"float32"), )
paddle.nn.functional.silu(Tensor([13, 868889, 202],"float32"), )
paddle.nn.functional.silu(Tensor([16, 256, 80, 6964],"float32"), None, )
paddle.nn.functional.silu(Tensor([8, 256, 80, 80],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 835789, 2730],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 512, 247581, 18],"float32"), )
paddle.nn.functional.silu(Tensor([16, 128, 80, 80],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 1089, 128, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([11142, 512, 20, 20],"float32"), )
paddle.nn.functional.silu(Tensor([6851957, 9, 37],"float32"), )
paddle.nn.functional.silu(Tensor([128, 16, 16385, 128],"float16"), None, )
paddle.nn.functional.silu(Tensor([1, 512, 36, 123791],"float32"), )
paddle.nn.functional.silu(Tensor([1, 512, 80, 55706],"float32"), )
paddle.nn.functional.silu(Tensor([128, 128, 8705, 16],"float32"), None, )
paddle.nn.functional.silu(Tensor([32, 32, 58081],"float32"), )
paddle.nn.functional.silu(Tensor([512, 64, 131073],"float16"), None, )
paddle.nn.functional.silu(Tensor([16, 512, 40, 40],"float32"), None, )
paddle.nn.functional.silu(Tensor([2, 4, 2, 268435457],"float16"), )
paddle.nn.functional.silu(Tensor([3714, 300, 2048],"float32"), )
paddle.nn.functional.silu(Tensor([14, 64, 2546542],"float32"), )
paddle.nn.functional.silu(Tensor([128, 384, 16, 2902],"float32"), None, )
paddle.nn.functional.silu(Tensor([2, 1, 1140850690],"float32"), )
paddle.nn.functional.silu(Tensor([2, 300, 2048],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 92, 193759],"float32"), )
paddle.nn.functional.silu(Tensor([16, 1024, 20, 6964],"float32"), None, )
paddle.nn.functional.silu(Tensor([16, 5571, 160, 160],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 512, 202566, 22],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5820667, 7, 7],"float32"), Tensor([8, 5820667, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1025, 2226051],"float16"), Tensor([1025, 2226051],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 228170138],"float16"), Tensor([10, 228170138],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([11408507, 200],"float32"), Tensor([11408507, 200],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([2769056, 103, 8],"float32"), Tensor([2769056, 103, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1914, 1192112],"float32"), Tensor([1914, 1192112],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 187, 190651],"float32"), Tensor([64, 187, 190651],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1028, 2219554],"float16"), Tensor([1028, 2219554],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 158, 601715],"float32"), Tensor([24, 158, 601715],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2716312, 105, 8],"float32"), Tensor([2716312, 105, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2796203, 102, 8],"float32"), Tensor([2796203, 102, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 7, 8148934],"float32"), Tensor([8, 5, 7, 8148934],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 35651585, 8],"float32"), Tensor([8, 35651585, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([1024, 2228225],"float16"), Tensor([1024, 2228225],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 190141782],"bfloat16"), Tensor([4, 3, 190141782],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([11408507, 200],"float32"), Tensor([11408507, 200],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([7, 325957340],"float32"), Tensor([7, 325957340],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([380283564, 3, 2],"bfloat16"), Tensor([380283564, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([1014, 2250199],"float16"), Tensor([1014, 2250199],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([1028, 2219554],"float32"), Tensor([1028, 2219554],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1024, 2228225],"float32"), Tensor([1024, 2228225],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 105, 2716312],"float32"), Tensor([8, 105, 2716312],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([45634028, 50],"float32"), Tensor([45634028, 50],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([11408507, 200],"float32"), Tensor([11408507, 200],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"bfloat16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([9313067, 5, 7, 7],"float32"), Tensor([9313067, 5, 7, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1525202, 187, 8],"float32"), Tensor([1525202, 187, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 858993460],"float16"), label=Tensor([5, 858993460],"float16"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 103, 2769056],"float32"), Tensor([8, 103, 2769056],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 102, 2796203],"float32"), Tensor([8, 102, 2796203],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([1014, 2250199],"float32"), Tensor([1014, 2250199],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([64, 4456449, 8],"float32"), Tensor([64, 4456449, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 285212673, 2],"bfloat16"), Tensor([4, 285212673, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.nn.functional.smooth_l1_loss(Tensor([24, 11883862, 8],"float32"), Tensor([24, 11883862, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([2640859, 108, 8],"float32"), Tensor([2640859, 108, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([200, 11408507],"float32"), Tensor([200, 11408507],"float32"), reduction="none", )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 5, 8148934, 7],"float32"), Tensor([8, 5, 8148934, 7],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1025, 2226051],"float32"), Tensor([1025, 2226051],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="mean", delta=0.03007869737980573, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([570425345, 4],"float16"), Tensor([570425345, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="sum", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([2147483649, 2],"float16"), label=Tensor([2147483649, 2],"float16"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([8, 108, 2640859],"float32"), Tensor([8, 108, 2640859],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([11408507, 200],"float32"), Tensor([11408507, 200],"float32"), reduction="none", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([1805144, 158, 8],"float32"), Tensor([1805144, 158, 8],"float32"), reduction="sum", )
paddle.nn.functional.smooth_l1_loss(Tensor([45635, 50000],"float32"), Tensor([45635, 50000],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.smooth_l1_loss(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.nn.functional.smooth_l1_loss(Tensor([100, 22817014],"float16"), Tensor([100, 22817014],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), reduction="mean", delta=1.0, )
paddle.nn.functional.smooth_l1_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), reduction="mean", delta=1.0, name=None, )
paddle.nn.functional.softmax(Tensor([30, 8, 138, 65],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 15375, 153, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([112, 186, 186],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([7, 8, 120, 153],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([208, 16, 24, 20],"float32"), )
paddle.nn.functional.softmax(Tensor([80, 8, 47, 45],"float32"), )
paddle.nn.functional.softmax(Tensor([8, 8, 139, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 107590, 499],"float16"), axis=-1, )
paddle.nn.functional.softmax(Tensor([152, 16, 29, 29],"float32"), )
paddle.nn.functional.softmax(Tensor([160, 16, 32, 28],"float32"), )
paddle.nn.functional.softmax(Tensor([7, 8, 140, 140],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([232, 16, 20, 20],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 48, 36],"float32"), )
paddle.nn.functional.softmax(Tensor([56, 16, 91, 52],"float32"), )
paddle.nn.functional.softmax(Tensor([96, 8, 37, 41],"float32"), )
paddle.nn.functional.softmax(Tensor([56, 8, 71, 64],"float32"), )
paddle.nn.functional.softmax(Tensor([64, 16, 35, 35],"float32"), )
paddle.nn.functional.softmax(Tensor([24, 8, 135, 115],"float32"), )
paddle.nn.functional.softmax(Tensor([48, 16, 100, 100],"float32"), )
paddle.nn.functional.softmax(Tensor([134218, 32000],"float16"), )
paddle.nn.functional.softmax(Tensor([40, 16, 53, 53],"float32"), )
paddle.nn.functional.softmax(Tensor([112, 16, 44, 39],"float32"), )
paddle.nn.functional.softmax(Tensor([32, 16, 159, 126],"float32"), )
paddle.nn.functional.softmax(Tensor([48, 16, 105, 89],"float32"), )
paddle.nn.functional.softmax(Tensor([200, 16, 25, 25],"float32"), )
paddle.nn.functional.softmax(Tensor([8, 8, 237, 237],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([864, 196, 196],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([104, 8, 39, 31],"float32"), )
paddle.nn.functional.softmax(Tensor([48, 16, 92, 82],"float32"), )
paddle.nn.functional.softmax(Tensor([24, 8, 159, 159],"float32"), )
paddle.nn.functional.softmax(Tensor([32, 8, 102, 102],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 164, 164],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([4, 12096, 4, 17],"float32"), )
paddle.nn.functional.softmax(Tensor([88, 16, 53, 55],"float32"), )
paddle.nn.functional.softmax(Tensor([144, 16, 25, 34],"float32"), )
paddle.nn.functional.softmax(Tensor([24, 8, 151, 151],"float32"), )
paddle.nn.functional.softmax(Tensor([30, 8, 135, 135],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([96, 16, 49, 50],"float32"), )
paddle.nn.functional.softmax(Tensor([40, 16, 111, 85],"float32"), )
paddle.nn.functional.softmax(Tensor([64, 16, 36, 36],"float32"), )
paddle.nn.functional.softmax(Tensor([48, 16, 98, 59],"float32"), )
paddle.nn.functional.softmax(Tensor([88, 8, 41, 45],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 2, 16384, 1024],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 287, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([80, 8, 49, 45],"float32"), )
paddle.nn.functional.softmax(Tensor([64, 16, 72, 65],"float32"), )
paddle.nn.functional.softmax(Tensor([48, 8, 75, 70],"float32"), )
paddle.nn.functional.softmax(Tensor([56, 8, 62, 72],"float32"), )
paddle.nn.functional.softmax(Tensor([64, 8, 60, 62],"float32"), )
paddle.nn.functional.softmax(Tensor([40, 8, 92, 84],"float32"), )
paddle.nn.functional.softmax(Tensor([30, 8, 117, 73],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([40, 8, 102, 100],"float32"), )
paddle.nn.functional.softmax(Tensor([136, 16, 33, 37],"float32"), )
paddle.nn.functional.softmax(Tensor([32, 8, 112, 99],"float32"), )
paddle.nn.functional.softmax(Tensor([32, 16, 159, 159],"float32"), )
paddle.nn.functional.softmax(Tensor([48, 8, 85, 85],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 11408507, 100],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([48, 8, 62, 62],"float32"), )
paddle.nn.functional.softmax(Tensor([6, 8, 184, 184],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([88, 8, 35, 44],"float32"), )
paddle.nn.functional.softmax(Tensor([56, 16, 83, 83],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 46, 43],"float32"), )
paddle.nn.functional.softmax(Tensor([64, 8, 55, 59],"float32"), )
paddle.nn.functional.softmax(Tensor([8, 8, 272, 272],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([104, 16, 46, 46],"float32"), )
paddle.nn.functional.softmax(Tensor([40, 8, 94, 87],"float32"), )
paddle.nn.functional.softmax(Tensor([48, 8, 76, 79],"float32"), )
paddle.nn.functional.softmax(Tensor([7, 8, 141, 141],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([240, 16, 18, 18],"float32"), )
paddle.nn.functional.softmax(Tensor([8, 8, 279, 279],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([8, 8, 211, 211],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([19218, 8, 153, 97],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([48, 8, 77, 63],"float32"), )
paddle.nn.functional.softmax(Tensor([128, 16, 38, 33],"float32"), )
paddle.nn.functional.softmax(Tensor([10, 8, 156, 129],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([40, 16, 114, 114],"float32"), )
paddle.nn.functional.softmax(Tensor([56, 16, 81, 81],"float32"), )
paddle.nn.functional.softmax(Tensor([168, 16, 30, 28],"float32"), )
paddle.nn.functional.softmax(Tensor([30, 8, 192, 137],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([144, 1, 24, 49, 49],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([80, 8, 50, 47],"float32"), )
paddle.nn.functional.softmax(Tensor([128, 16, 30, 40],"float32"), )
paddle.nn.functional.softmax(Tensor([40, 16, 114, 103],"float32"), )
paddle.nn.functional.softmax(Tensor([8, 8, 250, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([371712, 8],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([48, 8, 81, 66],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 8, 37, 36],"float32"), )
paddle.nn.functional.softmax(Tensor([8, 8, 235, 235],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([48, 12, 144, 144],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([88, 16, 58, 55],"float32"), )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([16, 2097153, 128],"float16"), 2, )
paddle.nn.functional.softmax(Tensor([32, 16, 142, 117],"float32"), )
paddle.nn.functional.softmax(Tensor([6, 8, 175, 175],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([357913942, 3, 4],"float16"), )
paddle.nn.functional.softmax(Tensor([128, 16, 33, 33],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 11408507, 50],"float32"), )
paddle.nn.functional.softmax(Tensor([88, 8, 38, 45],"float32"), )
paddle.nn.functional.softmax(Tensor([8, 8, 228, 113],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([55901, 4, 8, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([69633, 16, 32, 64],"float32"), Tensor([69633, 16, 32, 1],"int64"), axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 557057, 32, 64],"float32"), Tensor([2, 557057, 32, 1],"int64"), axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 557057, 32, 64],"float32"), Tensor([2, 557057, 32, 1],"int64"), axis=3, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([228170138, 10],"float32"), label=Tensor([228170138, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([142606337, 16],"float32"), Tensor([142606337, 1],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 1140850690],"float32"), Tensor([2, 1],"int64"), return_softmax=True, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 1114113, 64],"float32"), Tensor([2, 16, 1, 64],"int64"), axis=2, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([12, 190141782],"float32"), label=Tensor([12, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([12, 357913942],"float16"), label=Tensor([12, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([100, 22817014],"float32"), Tensor([100, 1],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([69633, 16, 32, 64],"float32"), Tensor([69633, 16, 1, 64],"int64"), axis=2, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 1114113, 64],"float32"), Tensor([2, 16, 1114113, 1],"int64"), axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 2228225],"float32"), Tensor([2, 16, 32, 1],"int64"), axis=3, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([17825793, 128],"float32"), label=Tensor([17825793, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([5, 456340276],"float32"), label=Tensor([5, 1],"int64"), soft_label=False, ignore_index=-100, numeric_stable_mode=True, return_softmax=False, axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([142606337, 16],"float32"), Tensor([142606337, 1],"int64"), return_softmax=True, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([69633, 16, 32, 64],"float32"), Tensor([69633, 16, 32, 1],"int64"), axis=3, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 2228225],"float32"), Tensor([2, 16, 1, 2228225],"int64"), axis=2, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 1114113, 64],"float32"), Tensor([2, 16, 1114113, 1],"int64"), axis=3, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([228170138, 10],"float32"), Tensor([228170138, 1],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([2281702, 1000],"float32"), label=Tensor([2281702, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 557057, 32, 64],"float32"), Tensor([2, 557057, 1, 64],"int64"), axis=2, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 2228225],"float32"), Tensor([2, 16, 32, 1],"int64"), axis=-1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 1140850690],"float32"), Tensor([2, 1],"int64"), )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([16, 142606337],"float32"), label=Tensor([16, 1],"int64"), soft_label=False, )
paddle.nn.functional.softmax_with_cross_entropy(logits=Tensor([4294968, 1000],"float16"), label=Tensor([4294968, 1],"int64"), soft_label=False, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=2, threshold=20, )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), -3, 20, None, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=3, threshold=5, )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), -1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([13, 2742430, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([760567127, 3],"float32"), )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), -3, 20, None, )
paddle.nn.functional.softplus(Tensor([2281701379],"float32"), )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), 1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), 1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.softplus(Tensor([2, 2147483649],"float16"), )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), 3, 5, None, )
paddle.nn.functional.softplus(Tensor([715827883, 2, 3],"float16"), )
paddle.nn.functional.softplus(Tensor([1, 2, 1140850690],"float32"), )
paddle.nn.functional.softplus(Tensor([2, 3, 715827883],"float16"), )
paddle.nn.functional.softplus(Tensor([1, 760567127, 3],"float32"), )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), -1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([1, 1431655766, 3],"float16"), )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=-1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=3, threshold=-5, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=-3, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=-1e-06, threshold=20, )
paddle.nn.functional.softplus(Tensor([2281701379, 1],"float32"), )
paddle.nn.functional.softplus(Tensor([2, 1073741825, 2],"float16"), )
paddle.nn.functional.softplus(Tensor([4294967297],"float16"), 1, 15, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), 3, -5, None, )
paddle.nn.functional.softplus(Tensor([2281701379],"float32"), 1, 15, None, )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), 3, 5, None, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=1e-06, threshold=20, )
paddle.nn.functional.softplus(Tensor([5093084, 7, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), 2, 20, None, )
paddle.nn.functional.softplus(Tensor([13, 10, 17551550],"float32"), )
paddle.nn.functional.softplus(Tensor([4294967297],"float16"), )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), 3, 5, None, )
paddle.nn.functional.softplus(Tensor([13, 7, 25073642],"float32"), )
paddle.nn.functional.softplus(Tensor([1431655766, 3],"float16"), )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), 2, 20, None, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=3, threshold=-5, )
paddle.nn.functional.softplus(Tensor([8, 285212673],"float32"), )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=2, threshold=20, )
paddle.nn.functional.softplus(Tensor([14, 7, 23282668],"float32"), )
paddle.nn.functional.softplus(x=Tensor([2281701379],"float32"), beta=1, threshold=15, )
paddle.nn.functional.softplus(Tensor([35404, 1007, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), 3, -5, None, )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), -1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([13, 3, 58505164],"float32"), )
paddle.nn.functional.softplus(Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=3, threshold=5, )
paddle.nn.functional.softplus(Tensor([3565159, 10, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), 3, -5, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 477218589],"float16"), -3, 20, None, )
paddle.nn.functional.softplus(Tensor([380283564, 2, 3],"float32"), )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=-3, threshold=20, )
paddle.nn.functional.softplus(Tensor([3, 477218589, 3],"float16"), 2, 20, None, )
paddle.nn.functional.softplus(Tensor([1, 2, 2147483649],"float16"), )
paddle.nn.functional.softplus(Tensor([477218589, 3, 3],"float16"), 1e-06, 20, None, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=3, threshold=5, )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=2, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([477218589, 3, 3],"float16"), beta=-1e-06, threshold=20, )
paddle.nn.functional.softplus(Tensor([14, 2546542, 64],"float32"), )
paddle.nn.functional.softplus(x=Tensor([4294967297],"float16"), beta=1, threshold=15, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 477218589],"float16"), beta=-3, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 477218589, 3],"float16"), beta=3, threshold=-5, )
paddle.nn.functional.softshrink(Tensor([32, 17409, 8, 8, 32, 2],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(Tensor([32, 15, 8, 8, 37138, 2],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(Tensor([4294967297],"float16"), 0.5, None, )
paddle.nn.functional.softshrink(Tensor([37138, 15, 8, 8, 32, 2],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(Tensor([2281701379],"float32"), 0.5, None, )
paddle.nn.functional.softshrink(x=Tensor([3, 3, 477218589],"float16"), threshold=5, )
paddle.nn.functional.softshrink(Tensor([32, 15, 8, 9285, 32, 2],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(x=Tensor([477218589, 3, 3],"float16"), threshold=0, )
paddle.nn.functional.softshrink(x=Tensor([2281701379],"float32"), threshold=0.5, )
paddle.nn.functional.softshrink(Tensor([3, 3, 477218589],"float16"), 5, None, )
paddle.nn.functional.softshrink(x=Tensor([3, 477218589, 3],"float16"), threshold=0, )
paddle.nn.functional.softshrink(Tensor([477218589, 3, 3],"float16"), 0, None, )
paddle.nn.functional.softshrink(Tensor([32, 15, 8, 8, 32, 2],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(Tensor([32, 15, 9285, 8, 32, 2],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(Tensor([477218589, 3, 3],"float16"), 5, None, )
paddle.nn.functional.softshrink(Tensor([3, 477218589, 3],"float16"), 5, None, )
paddle.nn.functional.softshrink(x=Tensor([4294967297],"float16"), threshold=0.5, )
paddle.nn.functional.softshrink(x=Tensor([3, 477218589, 3],"float16"), threshold=5, )
paddle.nn.functional.softshrink(Tensor([32, 15, 8, 8, 32, 2322],"float32"), threshold=0.01, )
paddle.nn.functional.softshrink(x=Tensor([477218589, 3, 3],"float16"), threshold=5, )
paddle.nn.functional.softshrink(Tensor([3, 3, 477218589],"float16"), 0, None, )
paddle.nn.functional.softshrink(x=Tensor([3, 3, 477218589],"float16"), threshold=0, )
paddle.nn.functional.softshrink(Tensor([3, 477218589, 3],"float16"), 0, None, )
paddle.nn.functional.softsign(Tensor([3, 3, 477218589],"float16"), None, )
paddle.nn.functional.softsign(x=Tensor([3, 3, 477218589],"float16"), )
paddle.nn.functional.softsign(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.softsign(x=Tensor([477218589, 3, 3],"float16"), )
paddle.nn.functional.softsign(Tensor([2281701379],"float32"), None, )
paddle.nn.functional.softsign(Tensor([3, 477218589, 3],"float16"), None, )
paddle.nn.functional.softsign(Tensor([4294967297],"float16"), None, )
paddle.nn.functional.softsign(Tensor([300, 4096],"float32"), )
paddle.nn.functional.softsign(Tensor([557057, 4096],"float32"), )
paddle.nn.functional.softsign(Tensor([32, 71303169],"float32"), )
paddle.nn.functional.softsign(Tensor([17825793, 128],"float32"), )
paddle.nn.functional.softsign(Tensor([477218589, 3, 3],"float16"), None, )
paddle.nn.functional.softsign(Tensor([300, 7605672],"float32"), )
paddle.nn.functional.softsign(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.softsign(x=Tensor([3, 477218589, 3],"float16"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 357913942, 2],"float16"), label=Tensor([3, 2, 357913942, 2],"float16"), )
paddle.nn.functional.square_error_cost(Tensor([3, 715827883, 1, 2],"float16"), label=Tensor([3, 715827883, 1, 2],"float16"), )
paddle.nn.functional.square_error_cost(Tensor([1073741825, 2, 1, 2],"float16"), label=Tensor([1073741825, 2, 1, 2],"float16"), )
paddle.nn.functional.square_error_cost(input=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1],"float32"), )
paddle.nn.functional.square_error_cost(input=Tensor([2, 1],"float32"), label=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 715827883],"float16"), label=Tensor([3, 2, 1, 715827883],"float16"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 1, 2],"float16"), label=Tensor([3, 2, 357913942, 2],"float16"), )
paddle.nn.functional.square_error_cost(input=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([228171, 100, 100],"float16"), Tensor([228171, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 100, 2852127],"float32"), Tensor([8, 100, 2852127],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([228171, 100, 100],"float32"), Tensor([228171, 100, 100],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([8, 2852127, 100],"float32"), Tensor([8, 2852127, 100],"float32"), )
paddle.nn.functional.square_error_cost(input=Tensor([2281701379, 1],"float32"), label=Tensor([2281701379, 1],"float32"), )
paddle.nn.functional.square_error_cost(Tensor([3, 2, 357913942, 2],"float16"), label=Tensor([3, 2, 1, 2],"float16"), )
paddle.nn.functional.swish(Tensor([64, 132, 1, 508401],"float16"), None, )
paddle.nn.functional.swish(Tensor([1, 128, 368, 368],"float32"), )
paddle.nn.functional.swish(Tensor([2, 232, 351248, 14],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 1152, 7, 4162],"float16"), )
paddle.nn.functional.swish(Tensor([16, 256, 52, 52],"float32"), )
paddle.nn.functional.swish(Tensor([4, 640, 42, 42],"float32"), )
paddle.nn.functional.swish(Tensor([1, 512, 84, 84],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 19, 19],"float32"), )
paddle.nn.functional.swish(Tensor([64, 14, 1, 4793491],"float16"), None, )
paddle.nn.functional.swish(Tensor([4, 256, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 32, 69633],"float32"), )
paddle.nn.functional.swish(Tensor([8, 16, 304, 304],"float32"), )
paddle.nn.functional.swish(Tensor([4, 480, 48, 48],"float32"), )
paddle.nn.functional.swish(Tensor([8, 48, 56, 56],"float32"), )
paddle.nn.functional.swish(Tensor([8, 288, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 28, 28],"float32"), )
paddle.nn.functional.swish(Tensor([1, 32, 768, 768],"float32"), )
paddle.nn.functional.swish(Tensor([8, 768, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 23, 23],"float32"), )
paddle.nn.functional.swish(Tensor([16, 48, 168, 168],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 48440, 46],"float32"), )
paddle.nn.functional.swish(Tensor([8, 288, 22, 22],"float32"), )
paddle.nn.functional.swish(Tensor([16, 128, 104, 104],"float32"), )
paddle.nn.functional.swish(Tensor([5707, 240, 56, 56],"float16"), None, )
paddle.nn.functional.swish(Tensor([2, 116, 28, 351248],"float32"), None, )
paddle.nn.functional.swish(Tensor([4, 32, 352, 352],"float32"), )
paddle.nn.functional.swish(Tensor([4, 320, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1178565, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([128, 144, 4162, 56],"float16"), )
paddle.nn.functional.swish(Tensor([4, 128, 84, 84],"float32"), )
paddle.nn.functional.swish(Tensor([663, 1024, 58, 58],"float32"), )
paddle.nn.functional.swish(Tensor([4, 96, 88, 88],"float32"), )
paddle.nn.functional.swish(Tensor([8, 128, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([2, 1455167, 28, 28],"float32"), None, )
paddle.nn.functional.swish(Tensor([91305, 240, 14, 14],"float16"), )
paddle.nn.functional.swish(Tensor([16, 384, 21, 21],"float32"), )
paddle.nn.functional.swish(Tensor([1, 96, 152, 152],"float32"), )
paddle.nn.functional.swish(x=Tensor([3, 84507459, 3, 3],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 448, 448],"float32"), )
paddle.nn.functional.swish(Tensor([1, 1024, 54, 41264],"float32"), )
paddle.nn.functional.swish(Tensor([16, 32, 160, 160],"float32"), )
paddle.nn.functional.swish(Tensor([16, 512, 42, 42],"float32"), )
paddle.nn.functional.swish(Tensor([1, 64, 864, 864],"float32"), )
paddle.nn.functional.swish(Tensor([128, 48, 699051, 1],"float16"), )
paddle.nn.functional.swish(Tensor([8, 512, 46, 46],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 80, 80],"float32"), )
paddle.nn.functional.swish(Tensor([25090, 116, 28, 28],"float32"), None, )
paddle.nn.functional.swish(Tensor([8, 24, 88, 88],"float32"), )
paddle.nn.functional.swish(Tensor([128, 6, 1, 5592406],"float16"), )
paddle.nn.functional.swish(Tensor([1, 32, 896, 896],"float32"), )
paddle.nn.functional.swish(Tensor([10700, 32, 112, 112],"float16"), )
paddle.nn.functional.swish(Tensor([4, 16, 288, 288],"float32"), )
paddle.nn.functional.swish(Tensor([8, 48, 320, 320],"float32"), )
paddle.nn.functional.swish(Tensor([4, 24, 192, 192],"float32"), )
paddle.nn.functional.swish(Tensor([16, 32, 368, 368],"float32"), )
paddle.nn.functional.swish(Tensor([64, 5350, 112, 112],"float16"), None, )
paddle.nn.functional.swish(Tensor([8, 288, 40, 40],"float32"), )
paddle.nn.functional.swish(Tensor([4, 64, 168, 168],"float32"), )
paddle.nn.functional.swish(Tensor([16, 48, 128, 128],"float32"), )
paddle.nn.functional.swish(Tensor([16, 384, 36, 36],"float32"), )
paddle.nn.functional.swish(Tensor([16, 32, 224, 224],"float32"), )
paddle.nn.functional.swish(Tensor([1, 27509, 288, 288],"float32"), )
paddle.nn.functional.swish(Tensor([8, 192, 42, 42],"float32"), )
paddle.nn.functional.swish(Tensor([1, 782477, 54, 54],"float32"), )
paddle.nn.functional.swish(Tensor([3, 10, 47721859, 3],"float16"), None, )
paddle.nn.functional.swish(Tensor([4, 60, 144, 144],"float32"), )
paddle.nn.functional.swish(Tensor([16, 384, 34, 34],"float32"), )
paddle.nn.functional.swish(Tensor([8, 256, 48, 48],"float32"), )
paddle.nn.functional.swish(Tensor([16, 768, 14, 14],"float32"), )
paddle.nn.functional.swish(Tensor([16, 384, 20, 20],"float32"), )
paddle.nn.functional.swish(Tensor([8, 384, 38, 38],"float32"), )
paddle.nn.functional.swish(Tensor([1, 128, 288, 288],"float32"), )
paddle.nn.functional.swish(Tensor([16, 384, 46, 46],"float32"), )
paddle.nn.functional.swish(Tensor([8, 48, 64, 64],"float32"), )
paddle.nn.functional.swish(Tensor([237678, 40, 240],"float32"), None, )
paddle.nn.functional.swish(Tensor([1, 128, 65537, 272],"float32"), )
paddle.nn.functional.swish(Tensor([16, 48, 112, 112],"float32"), )
paddle.nn.functional.swish(Tensor([4, 1024, 13927, 40],"float32"), None, )
paddle.nn.functional.swish(Tensor([64, 96, 112, 112],"float32"), None, )
paddle.nn.functional.swish(Tensor([1, 96, 232, 232],"float32"), )
paddle.nn.functional.swish(Tensor([2, 192, 92, 92],"float32"), )
paddle.nn.functional.swish(Tensor([1544, 1024, 38, 38],"float32"), )
paddle.nn.functional.swish(Tensor([1, 96, 352, 352],"float32"), )
paddle.nn.functional.swish(Tensor([2, 96, 104, 104],"float32"), )
paddle.nn.functional.swish(Tensor([2, 128, 96, 96],"float32"), )
paddle.nn.functional.swish(Tensor([1, 24690, 304, 304],"float32"), )
paddle.nn.functional.swish(Tensor([4, 48, 88, 88],"float32"), )
paddle.nn.functional.swish(Tensor([8, 64, 272, 272],"float32"), )
paddle.nn.functional.swish(Tensor([96, 40, 594194],"float32"), None, )
paddle.nn.functional.swish(Tensor([128, 4, 1, 8388609],"float16"), )
paddle.nn.functional.swish(Tensor([16, 96, 104, 104],"float32"), )
paddle.nn.functional.swish(Tensor([128, 20, 1, 1677722],"float16"), )
paddle.nn.functional.swish(Tensor([1, 1024, 46422, 48],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 152, 152],"float32"), )
paddle.nn.functional.swish(Tensor([16, 384, 44, 44],"float32"), )
paddle.nn.functional.swish(Tensor([4, 640, 30, 30],"float32"), )
paddle.nn.functional.swish(Tensor([2, 48, 176, 176],"float32"), )
paddle.nn.functional.swish(Tensor([64, 1044, 7, 7],"float32"), None, )
paddle.nn.functional.swish(Tensor([2, 16, 368, 368],"float32"), )
paddle.nn.functional.swish(Tensor([128, 672, 14, 14],"float32"), )
paddle.nn.functional.tanh(Tensor([1485, 1536500],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 175515491],"float32"), )
paddle.nn.functional.tanh(Tensor([14, 162978670],"float32"), None, )
paddle.nn.functional.tanh(Tensor([114085069, 20],"float32"), )
paddle.nn.functional.tanh(Tensor([8912897, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 85701, 2048],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 256, 685608],"float32"), None, )
paddle.nn.functional.tanh(Tensor([38028357, 60],"float32"), None, )
paddle.nn.functional.tanh(Tensor([35651585, 64],"float32"), )
paddle.nn.functional.tanh(Tensor([4194305, 1024],"float16"), None, )
paddle.nn.functional.tanh(Tensor([99, 23047489],"float32"), None, )
paddle.nn.functional.tanh(Tensor([12, 190141782],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2430, 938972],"float32"), None, )
paddle.nn.functional.tanh(Tensor([20000, 64],"float32"), None, )
paddle.nn.functional.tanh(Tensor([11, 207427399],"float32"), None, )
paddle.nn.functional.tanh(Tensor([95070891, 24],"float32"), )
paddle.nn.functional.tanh(Tensor([8490, 268752],"float32"), None, )
paddle.nn.functional.tanh(Tensor([69278, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1609, 1418087],"float32"), None, )
paddle.nn.functional.tanh(Tensor([282600, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2228225, 1024],"float32"), None, )
paddle.nn.functional.tanh(Tensor([128, 17825793],"float32"), None, )
paddle.nn.functional.tanh(Tensor([114085069, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([147015, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([63380594, 36],"float32"), None, )
paddle.nn.functional.tanh(Tensor([600, 3802836],"float32"), None, )
paddle.nn.functional.tanh(Tensor([5, 456340276],"float32"), None, )
paddle.nn.functional.tanh(Tensor([282600, 8074],"float32"), None, )
paddle.nn.functional.tanh(Tensor([64, 35651585],"float32"), )
paddle.nn.functional.tanh(Tensor([1, 3, 256, 2970966],"float32"), None, )
paddle.nn.functional.tanh(Tensor([35651585, 64],"float32"), None, )
paddle.nn.functional.tanh(Tensor([128, 33554433],"float16"), None, )
paddle.nn.functional.tanh(Tensor([32, 134217729],"float16"), None, )
paddle.nn.functional.tanh(Tensor([39, 58505164],"float32"), None, )
paddle.nn.functional.tanh(Tensor([147015, 15521],"float32"), None, )
paddle.nn.functional.tanh(Tensor([69278, 32936],"float32"), None, )
paddle.nn.functional.tanh(Tensor([142606337, 16],"float32"), )
paddle.nn.functional.tanh(Tensor([2, 1140850690],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1000, 2281702],"float32"), None, )
paddle.nn.functional.tanh(Tensor([5592406, 768],"float16"), None, )
paddle.nn.functional.tanh(Tensor([2601, 877241],"float32"), None, )
paddle.nn.functional.tanh(Tensor([20600, 110763],"float32"), None, )
paddle.nn.functional.tanh(Tensor([45634028, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 3, 2970966, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([52, 82595525],"float16"), None, )
paddle.nn.functional.tanh(Tensor([2419, 943242],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4830, 472402],"float32"), None, )
paddle.nn.functional.tanh(Tensor([36, 63380594],"float32"), None, )
paddle.nn.functional.tanh(Tensor([48, 47535446],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4096, 557057],"float32"), None, )
paddle.nn.functional.tanh(Tensor([134217729, 32],"float16"), None, )
paddle.nn.functional.tanh(Tensor([25, 91268056],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4800, 475355],"float32"), None, )
paddle.nn.functional.tanh(Tensor([10000, 228171],"float32"), None, )
paddle.nn.functional.tanh(Tensor([8192, 278529],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 34817, 256, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4, 570425345],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1515, 1506074],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2, 2147483649],"float16"), None, )
paddle.nn.functional.tanh(Tensor([16, 142606337],"float32"), None, )
paddle.nn.functional.tanh(Tensor([9420, 242219],"float32"), None, )
paddle.nn.functional.tanh(Tensor([96, 44739243],"float16"), None, )
paddle.nn.functional.tanh(Tensor([76056713, 30],"float32"), None, )
paddle.nn.functional.tanh(Tensor([40, 57042535],"float32"), None, )
paddle.nn.functional.tanh(Tensor([285212673, 8],"float32"), None, )
paddle.nn.functional.tanh(Tensor([15, 152113426],"float32"), None, )
paddle.nn.functional.tanh(Tensor([93401, 24430],"float32"), None, )
paddle.nn.functional.tanh(Tensor([64, 67108865],"float16"), None, )
paddle.nn.functional.tanh(Tensor([95070891, 24],"float32"), None, )
paddle.nn.functional.tanh(Tensor([11606, 3, 256, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([22120, 48],"float32"), None, )
paddle.nn.functional.tanh(Tensor([8192, 278529],"float32"), )
paddle.nn.functional.tanh(Tensor([64, 35651585],"float32"), None, )
paddle.nn.functional.tanh(Tensor([96, 23767723],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4353, 256, 2048],"float32"), None, )
paddle.nn.functional.tanh(Tensor([32, 71303169],"float32"), None, )
paddle.nn.functional.tanh(Tensor([6, 380283564],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 2281701379],"float32"), )
paddle.nn.functional.tanh(Tensor([125, 18253612],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 330382100],"float16"), None, )
paddle.nn.functional.tanh(Tensor([25352238, 90],"float32"), None, )
paddle.nn.functional.tanh(Tensor([56, 40744668],"float32"), None, )
paddle.nn.functional.tanh(Tensor([100, 22817014],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4096, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([400, 5704254],"float32"), )
paddle.nn.functional.tanh(Tensor([13, 175515491],"float32"), None, )
paddle.nn.functional.tanh(Tensor([93401, 90],"float32"), None, )
paddle.nn.functional.tanh(Tensor([3488, 654158],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 256, 2048],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4, 1073741825],"float16"), None, )
paddle.nn.functional.tanh(Tensor([22120, 103152],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1609, 1418087],"float32"), )
paddle.nn.functional.tanh(Tensor([25, 91268056],"float32"), )
paddle.nn.functional.tanh(Tensor([1, 2281701379],"float32"), None, )
paddle.nn.functional.tanh(Tensor([16800, 135816],"float32"), None, )
paddle.nn.functional.tanh(Tensor([228595, 30],"float32"), None, )
paddle.nn.functional.tanh(Tensor([20600, 64],"float32"), None, )
paddle.nn.functional.tanh(Tensor([512, 4456449],"float32"), None, )
paddle.nn.functional.tanh(Tensor([101, 22591103],"float32"), None, )
paddle.nn.functional.tanh(Tensor([142606337, 16],"float32"), None, )
paddle.nn.functional.tanhshrink(x=Tensor([3, 3, 477218589],"float16"), )
paddle.nn.functional.tanhshrink(x=Tensor([2281701379],"float32"), )
paddle.nn.functional.tanhshrink(Tensor([2281701379],"float32"), None, )
paddle.nn.functional.tanhshrink(Tensor([4294967297],"float16"), None, )
paddle.nn.functional.tanhshrink(x=Tensor([3, 477218589, 3],"float16"), )
paddle.nn.functional.tanhshrink(x=Tensor([477218589, 3, 3],"float16"), )
paddle.nn.functional.tanhshrink(Tensor([3, 477218589, 3],"float16"), None, )
paddle.nn.functional.tanhshrink(Tensor([3, 3, 477218589],"float16"), None, )
paddle.nn.functional.tanhshrink(Tensor([477218589, 3, 3],"float16"), None, )
paddle.nn.functional.tanhshrink(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.temporal_shift(x=Tensor([119304648, 4, 3, 3],"float16"), seg_num=4, )
paddle.nn.functional.temporal_shift(Tensor([128, 1024, 14, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 5685, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 2048, 2341, 7],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 2487, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([128, 64, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 512, 28, 2487],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 1024, 14, 14],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 5707, 56, 56],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([16, 256, 56, 9948],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 2048, 664, 7],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([16, 181896, 28, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 64, 56, 39790],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 2048, 9948, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 2048, 1249, 7],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 28, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([240, 48506, 14, 14],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([64, 1024, 2487, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 64, 4974, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([21400, 1024, 14, 14],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 256, 9948, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 256, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 512, 28, 2341],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([42800, 2048, 7, 7],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 2048, 7, 7],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 2048, 7, 664],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([42800, 2048, 7, 7],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 512, 9948, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 2910334, 7, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 512, 1244, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 512, 664, 28],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([16, 2048, 7, 9948],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 256, 2487, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 2048, 7, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 1024, 2341, 14],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 2048, 2487, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 22737, 28, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 22737, 28, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(x=Tensor([4, 4, 89478486, 3],"float16"), seg_num=4, )
paddle.nn.functional.temporal_shift(Tensor([240, 1024, 1249, 14],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([16, 64, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 11369, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 727584, 14, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 64, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 1244, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 1024, 14, 664],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([16, 512, 28, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 256, 28, 4974],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([32, 256, 9948, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([128, 64, 56, 4974],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 684785, 7, 7],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 512, 28, 664],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([64, 1024, 14, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 1024, 14, 2341],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 2048, 7, 1244],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 22827, 28, 28],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 56, 1244],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 256, 28, 19895],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 12127, 28, 28],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([21400, 64, 56, 56],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 2048, 7, 1249],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([64, 727584, 7, 7],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([32, 256, 28, 9948],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([32, 90948, 28, 28],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([128, 2048, 7, 2341],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 64, 2653, 56],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([21400, 1024, 14, 14],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([16, 256, 28, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 256, 56, 2487],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(x=Tensor([4, 119304648, 3, 3],"float16"), seg_num=4, )
paddle.nn.functional.temporal_shift(Tensor([240, 512, 28, 28],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 194023, 7, 7],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([128, 512, 28, 1244],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 45474, 28, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 512, 1249, 28],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([64, 256, 4974, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 64, 56, 9363],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 256, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([16, 64, 39790, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 64, 56, 2653],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([128, 42800, 28, 28],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 64, 9948, 56],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 512, 28, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 91305, 14, 14],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([64, 181896, 14, 14],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 256, 1249, 56],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 64, 56, 56],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 256, 56, 1249],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([240, 256, 664, 56],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([128, 10700, 56, 56],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 365219, 7, 7],"float16"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([128, 171197, 14, 14],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 64, 9363, 56],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([240, 1024, 664, 14],"float32"), 8, 0.125, data_format="NCHW", )
paddle.nn.functional.temporal_shift(Tensor([128, 512, 28, 28],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 56, 2341],"float16"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([64, 2048, 7, 2487],"float32"), 8, 0.125, )
paddle.nn.functional.temporal_shift(Tensor([128, 256, 28, 2487],"float32"), 16, 0.0625, )
paddle.nn.functional.temporal_shift(Tensor([16, 45474, 56, 56],"float32"), 8, 0.125, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4772186, 3, 3],"float16"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 4, 107374183],"float16"), threshold=0, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3579140, 3],"float16"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 1901418, 3],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 2535224, 3, 3],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3, 1901418],"float32"), )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3, 1901418],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 35791395, 4, 3],"float16"), threshold=-1, )
paddle.nn.functional.thresholded_relu(Tensor([10, 228170138, 1],"float32"), 1.0, )
paddle.nn.functional.thresholded_relu(Tensor([114085069, 20, 1],"float32"), 1.0, )
paddle.nn.functional.thresholded_relu(Tensor([357913942, 1, 4, 3],"float16"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(x=Tensor([357913942, 1, 4, 3],"float16"), threshold=-1, )
paddle.nn.functional.thresholded_relu(Tensor([119304648, 4, 3, 3],"float16"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 143165577, 3],"float16"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 20, 11408507],"float32"), 1.0, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 4, 107374183],"float16"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 143165577, 3],"float16"), threshold=0, )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4772186, 3, 3],"float16"), )
paddle.nn.functional.thresholded_relu(Tensor([10, 35791395, 4, 3],"float16"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3, 3579140],"float16"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 35791395, 4, 3],"float16"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(x=Tensor([357913942, 1, 4, 3],"float16"), threshold=0, )
paddle.nn.functional.thresholded_relu(Tensor([357913942, 1, 4, 3],"float16"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 2535224, 3, 3],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([63380594, 4, 3, 3],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3579140, 3],"float16"), )
paddle.nn.functional.thresholded_relu(x=Tensor([119304648, 4, 3, 3],"float16"), )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 143165577, 3],"float16"), threshold=-1, )
paddle.nn.functional.thresholded_relu(x=Tensor([63380594, 4, 3, 3],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 35791395, 4, 3],"float16"), threshold=0, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 143165577, 3],"float16"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 4, 107374183],"float16"), threshold=-1, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 1901418, 3],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3, 3579140],"float16"), )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 4, 107374183],"float16"), 0, 0.0, None, )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=False, reduction="none", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=True, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([858993460, 5],"float16"), positive=Tensor([858993460, 5],"float16"), negative=Tensor([858993460, 5],"float16"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=False, reduction="none", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=True, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([858993460, 5],"float16"), positive=Tensor([858993460, 5],"float16"), negative=Tensor([858993460, 5],"float16"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.nn.functional.unfold(x=Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=list[3,3,], )
paddle.nn.functional.unfold(Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=list[3,3,], strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(x=Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=list[2,4,], paddings=1, strides=2, )
paddle.nn.functional.unfold(x=Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=3, )
paddle.nn.functional.unfold(Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=list[2,4,], strides=2, paddings=1, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([7605672, 3, 10, 10],"float32"), kernel_sizes=3, strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([15158, 3, 224, 224],"float32"), 16, 16, )
paddle.nn.functional.unfold(Tensor([64, 711, 224, 224],"float32"), 16, 16, )
paddle.nn.functional.unfold(x=Tensor([7605672, 3, 10, 10],"float32"), kernel_sizes=3, )
paddle.nn.functional.unfold(Tensor([14316558, 3, 10, 10],"float16"), kernel_sizes=3, strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([64, 3, 53053, 224],"float32"), 16, 16, )
paddle.nn.functional.unfold(Tensor([64, 3, 224, 53053],"float32"), 16, 16, )
paddle.nn.functional.unfold(Tensor([64, 3, 224, 224],"float32"), 16, 16, )
paddle.nn.functional.zeropad2d(Tensor([15158, 3, 224, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 11369, 224, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 848848, 224],"int32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([15158, 3, 224, 224],"int32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 11369, 224, 224],"int32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 848848, 224],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 848848],"float32"), list[2,2,2,2,], )
paddle.nn.functional.zeropad2d(Tensor([4, 3, 224, 848848],"int32"), list[2,2,2,2,], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([10, 15],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([2, 2],"float32"),Tensor([2],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([3, 2, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([3, 2, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([3, 2, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([10, 3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nonzero(Tensor([1049712],"bool"), )
paddle.nonzero(Tensor([357, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([1342272],"bool"), )
paddle.nonzero(Tensor([1031184],"bool"), )
paddle.nonzero(Tensor([353, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([418, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([294, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([169, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([1078344],"bool"), )
paddle.nonzero(Tensor([1048576, 1],"bool"), )
paddle.nonzero(Tensor([1460844],"bool"), )
paddle.nonzero(Tensor([302, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([444, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([344, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([1554960],"bool"), )
paddle.nonzero(Tensor([212, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([355, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([167, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([3523464],"bool"), )
paddle.nonzero(Tensor([144, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([423, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([409, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([2578176],"bool"), )
paddle.nonzero(Tensor([482, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([94, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([376, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([279, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([319, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([3265416],"bool"), )
paddle.nonzero(Tensor([206, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([2422656],"bool"), )
paddle.nonzero(Tensor([306, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([347, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([178, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([450, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([371, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([1110156],"bool"), )
paddle.nonzero(Tensor([406, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([5820667, 2, 14, 14],"float32"), )
paddle.nonzero(x=Tensor([3, 4, 190141782],"float32"), )
paddle.nonzero(Tensor([200, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([340, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([2506776],"bool"), )
paddle.nonzero(Tensor([364, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([136, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([130, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([362, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([1014912],"bool"), )
paddle.nonzero(Tensor([1166220],"bool"), )
paddle.nonzero(Tensor([301, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([402, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([394, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([2713200],"bool"), )
paddle.nonzero(Tensor([124, 23471, 28, 28],"float32"), )
paddle.nonzero(Tensor([124, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([216, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([116, 80, 14, 17563],"float32"), )
paddle.nonzero(Tensor([388, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([3104256],"bool"), )
paddle.nonzero(Tensor([348, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([130, 22388, 28, 28],"float32"), )
paddle.nonzero(Tensor([2410416],"bool"), )
paddle.nonzero(Tensor([1237020],"bool"), )
paddle.nonzero(Tensor([348, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([1761732],"bool"), )
paddle.nonzero(Tensor([223, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([403, 80, 28, 28],"float32"), )
paddle.nonzero(x=Tensor([3, 760567127],"float32"), as_tuple=False, )
paddle.nonzero(Tensor([405, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([383, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([281, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([1077420],"bool"), )
paddle.nonzero(Tensor([1173588],"bool"), )
paddle.nonzero(Tensor([269, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([123, 80, 8282, 28],"float32"), )
paddle.nonzero(Tensor([1253388],"bool"), )
paddle.nonzero(Tensor([464, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([422, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([310, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([2156688],"bool"), )
paddle.nonzero(Tensor([2005248],"bool"), )
paddle.nonzero(Tensor([1145856],"bool"), )
paddle.nonzero(Tensor([81489335, 28],"float32"), )
paddle.nonzero(Tensor([1739304],"bool"), )
paddle.nonzero(Tensor([239, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([2271240],"bool"), )
paddle.nonzero(Tensor([11, 2, 28, 3704061],"float32"), )
paddle.nonzero(Tensor([247, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([177, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([474, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([148, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([226, 80, 14, 14],"float32"), )
paddle.nonzero(x=Tensor([81489335, 4, 7],"float32"), )
paddle.nonzero(Tensor([269, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([124, 93882, 14, 14],"float32"), )
paddle.nonzero(Tensor([1215432],"bool"), )
paddle.nonzero(Tensor([312, 80, 28, 28],"float32"), )
paddle.nonzero(Tensor([319, 80, 14, 14],"float32"), )
paddle.nonzero(Tensor([1181772],"bool"), )
paddle.nonzero(Tensor([110, 80, 28, 9261],"float32"), )
paddle.not_equal(x=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), y=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.not_equal(Tensor([325957340, 7],"int32"), Tensor([325957340, 7],"int32"), )
paddle.not_equal(x=Tensor([1, 3],"float16"), y=Tensor([477218589, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.not_equal(x=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), y=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 1, 477218589, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1431655766, 3],"float16"), y=Tensor([1431655766, 3],"float16"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1],"int64"), Tensor([13, 2, 16, 1, 5484860],"int64"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float32"), Tensor([4, 3, 357913942],"float16"), )
paddle.not_equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float32"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([715827883, 2, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.not_equal(x=Tensor([1431655766, 3],"float16"), y=Tensor([3],"float16"), )
paddle.not_equal(Tensor([4, 285212673, 2],"float32"), Tensor([4, 285212673, 2],"float16"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float32"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float32"), Tensor([715827883, 3, 2],"float16"), )
paddle.not_equal(x=Tensor([3, 760567127],"float32"), y=Tensor([3, 760567127],"float32"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 1431655766],"float16"), y=Tensor([1, 1, 1, 1, 3, 1431655766],"float16"), )
paddle.not_equal(Tensor([8912897, 2, 16, 4, 1],"int64"), Tensor([8912897, 2, 16, 1, 8],"int64"), )
paddle.not_equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 477218589, 1, 3, 3],"float16"), )
paddle.not_equal(Tensor([4, 536870913, 2],"float32"), Tensor([4, 536870913, 2],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 1431655766, 3],"float16"), y=Tensor([1, 1, 1, 1, 1431655766, 3],"float16"), )
paddle.not_equal(Tensor([325957340, 7],"int64"), Tensor([325957340, 7],"int64"), )
paddle.not_equal(Tensor([13, 2, 16, 5484860, 1],"int64"), Tensor([13, 2, 16, 1, 8],"int64"), )
paddle.not_equal(Tensor([10, 20, 1],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.not_equal(x=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), y=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.not_equal(Tensor([4, 3, 190141782],"float16"), Tensor([4, 3, 190141782],"float32"), )
paddle.not_equal(Tensor([4, 285212673, 2],"float16"), Tensor([4, 285212673, 2],"float32"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float32"), )
paddle.not_equal(x=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([3, 1431655766],"float16"), y=Tensor([3, 1431655766],"float16"), )
paddle.not_equal(Tensor([4, 3, 357913942],"float16"), Tensor([4, 3, 357913942],"float64"), )
paddle.not_equal(x=Tensor([760567127, 3],"float32"), y=Tensor([760567127, 3],"float32"), )
paddle.not_equal(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.not_equal(Tensor([4, 3, 190141782],"float32"), Tensor([4, 3, 190141782],"float16"), )
paddle.not_equal(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.not_equal(Tensor([13, 2, 10969719, 4, 1],"int64"), Tensor([13, 2, 10969719, 1, 8],"int64"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float64"), )
paddle.not_equal(x=Tensor([1, 2, 1, 2147483649],"float16"), y=Tensor([1, 2, 2147483649],"float16"), )
paddle.not_equal(Tensor([2281701379],"int64"), Tensor([2281701379],"int64"), )
paddle.not_equal(x=Tensor([1431655766, 3],"float16"), y=Tensor([1, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(Tensor([13, 2, 16, 4, 1371215],"int64"), Tensor([13, 2, 16, 1, 1371215],"int64"), )
paddle.not_equal(x=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.not_equal(Tensor([13, 175515491],"int64"), Tensor([13, 175515491],"int64"), )
paddle.not_equal(Tensor([114085069, 20, 1],"float32"), Tensor([114085069, 20, 1],"float32"), )
paddle.not_equal(x=Tensor([1],"float16"), y=Tensor([4294967297],"float16"), )
paddle.not_equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float16"), )
paddle.not_equal(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 11408507],"float32"), )
paddle.not_equal(Tensor([14, 162978670],"int32"), Tensor([14, 162978670],"int32"), )
paddle.not_equal(x=Tensor([1, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), )
paddle.not_equal(Tensor([10, 20, 11408507],"float32"), Tensor([10, 20, 1],"float32"), )
paddle.not_equal(x=Tensor([3, 1431655766],"float16"), y=Tensor([1, 1431655766],"float16"), )
paddle.not_equal(x=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(Tensor([380283564, 3, 2],"float32"), Tensor([380283564, 3, 2],"float16"), )
paddle.not_equal(Tensor([13, 1371215, 16, 4, 1],"int64"), Tensor([13, 1371215, 16, 1, 8],"int64"), )
paddle.not_equal(x=Tensor([1, 3],"float16"), y=Tensor([1, 1, 1, 1431655766, 3],"float16"), )
paddle.not_equal(Tensor([10, 228170138, 1],"float32"), Tensor([10, 228170138, 1],"float32"), )
paddle.not_equal(x=Tensor([1, 2, 1, 3],"float16"), y=Tensor([1, 1431655766, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1431655766, 1, 3],"float16"), y=Tensor([1, 2, 3],"float16"), )
paddle.not_equal(Tensor([715827883, 3, 2],"float16"), Tensor([715827883, 3, 2],"float16"), )
paddle.not_equal(x=Tensor([477218589, 1, 1, 1, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 1, 477218589, 3, 3],"float16"), y=Tensor([1, 1, 1, 1, 3, 3],"float16"), )
paddle.not_equal(x=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), y=Tensor([1, 1, 477218589, 1, 3, 3],"float16"), )
paddle.not_equal(Tensor([4, 536870913, 2],"float16"), Tensor([4, 536870913, 2],"float64"), )
paddle.not_equal(x=Tensor([1, 477218589, 1, 1, 3, 3],"float16"), y=Tensor([3, 3],"float16"), )
paddle.not_equal(Tensor([380283564, 3, 2],"float16"), Tensor([380283564, 3, 2],"float32"), )
paddle.numel(Tensor([24, 1, 1, 95070891],"float32"), )
paddle.numel(Tensor([1, 13, 175515491],"float32"), )
paddle.numel(Tensor([2, 1140850690],"float32"), )
paddle.numel(Tensor([1, 10, 228170138],"float32"), )
paddle.numel(Tensor([1048576],"float32"), )
paddle.numel(Tensor([64, 35651585, 1, 1],"float32"), )
paddle.numel(Tensor([1444, 1580126],"float32"), )
paddle.numel(x=Tensor([456340276, 5],"int32"), )
paddle.numel(Tensor([4, 2, 1, 17825793, 4, 4],"float32"), )
paddle.numel(Tensor([192, 1, 1, 11883862],"float32"), )
paddle.numel(Tensor([4294967297, 1],"float16"), )
paddle.numel(Tensor([3961288, 16, 36],"float32"), )
paddle.numel(Tensor([1, 107374183, 4, 10],"float16"), )
paddle.numel(Tensor([5281717, 12, 36],"float32"), )
paddle.numel(Tensor([1, 2, 1140850690],"float32"), )
paddle.numel(Tensor([384, 192, 30948, 1],"float32"), )
paddle.numel(Tensor([2281701379, 1, 1],"float32"), )
paddle.numel(Tensor([1, 3, 76056713, 10],"float32"), )
paddle.numel(Tensor([32, 71303169, 1, 1],"float32"), )
paddle.numel(Tensor([228170138, 10, 1],"float32"), )
paddle.numel(Tensor([1140850690, 2],"float32"), )
paddle.numel(Tensor([1, 12, 190141782],"float32"), )
paddle.numel(Tensor([1, 429496730, 10],"float16"), )
paddle.numel(Tensor([4, 2, 34817, 512, 4, 4],"float32"), )
paddle.numel(Tensor([192, 48, 1, 247581],"float32"), )
paddle.numel(x=Tensor([4, 570425345],"float32"), )
paddle.numel(Tensor([429496730, 10],"float16"), )
paddle.numel(Tensor([384, 5941931, 1, 1],"float32"), )
paddle.numel(Tensor([1000, 2281702],"float32"), )
paddle.numel(x=Tensor([858993460, 5],"float16"), )
paddle.numel(x=Tensor([4, 1073741825],"float16"), )
paddle.numel(Tensor([1, 4, 570425345],"int32"), )
paddle.numel(Tensor([4527186, 14, 36],"float32"), )
paddle.numel(Tensor([1, 456340276, 5],"int32"), )
paddle.numel(Tensor([1, 3, 1431655766],"float16"), )
paddle.numel(Tensor([1, 50704476, 45],"float32"), )
paddle.numel(Tensor([10563433, 24, 3, 3],"float32"), )
paddle.numel(Tensor([65536000],"float32"), )
paddle.numel(Tensor([48, 96, 495161, 1],"float32"), )
paddle.numel(Tensor([192, 1, 11883862, 1],"float32"), )
paddle.numel(Tensor([2, 1140850690],"bool"), )
paddle.numel(Tensor([2281701379],"float32"), )
paddle.numel(Tensor([990322, 2304],"float32"), )
paddle.numel(Tensor([4, 570425345],"float32"), )
paddle.numel(Tensor([48, 192, 247581, 1],"float32"), )
paddle.numel(Tensor([16, 16, 3, 2970966],"float32"), )
paddle.numel(Tensor([143165577, 3, 10],"float16"), )
paddle.numel(Tensor([16, 15845149, 3, 3],"float32"), )
paddle.numel(Tensor([456340276, 5],"float32"), )
paddle.numel(x=Tensor([4, 570425345],"int32"), )
paddle.numel(Tensor([1, 14, 162978670],"float32"), )
paddle.numel(Tensor([2281701379, 1],"float32"), )
paddle.numel(Tensor([2, 57042535, 4, 5],"int32"), )
paddle.numel(Tensor([1, 4294967297],"float16"), )
paddle.numel(Tensor([192, 11883862, 1, 1],"float32"), )
paddle.numel(Tensor([1073741825, 4],"float16"), )
paddle.numel(Tensor([1, 16, 142606337],"float32"), )
paddle.numel(Tensor([1, 1431655766, 3],"float16"), )
paddle.numel(Tensor([64225280],"float32"), )
paddle.numel(x=Tensor([4, 570425345],"int64"), )
paddle.numel(Tensor([48, 1, 1, 47535446],"float32"), )
paddle.numel(Tensor([4, 69633, 1, 512, 4, 4],"float32"), )
paddle.numel(Tensor([24, 10563433, 3, 3],"float32"), )
paddle.numel(Tensor([21126865, 3, 36],"float32"), )
paddle.numel(Tensor([2, 1, 512, 4, 557057],"float32"), )
paddle.numel(Tensor([48, 5281717, 3, 3],"float32"), )
paddle.numel(Tensor([1, 57042535, 4, 10],"float32"), )
paddle.numel(Tensor([24, 24, 1320430, 3],"float32"), )
paddle.numel(Tensor([24, 1, 95070891, 1],"float32"), )
paddle.numel(Tensor([38895616],"float32"), )
paddle.numel(Tensor([32, 8, 8912897, 1],"float32"), )
paddle.numel(Tensor([2910334, 784],"float32"), )
paddle.numel(Tensor([48, 48, 3, 330108],"float32"), )
paddle.numel(Tensor([1431655766, 3],"float16"), )
paddle.numel(Tensor([16, 32, 4456449, 1],"float32"), )
paddle.numel(Tensor([190141782, 12, 1],"float32"), )
paddle.numel(Tensor([1, 42253730, 54],"float32"), )
paddle.numel(Tensor([16, 268435457],"float16"), )
paddle.numel(Tensor([64, 16, 1, 2228225],"float32"), )
paddle.numel(Tensor([24, 95070891, 1, 1],"float32"), )
paddle.numel(Tensor([24, 64, 1, 1485483],"float32"), )
paddle.numel(Tensor([100000, 42950],"float16"), )
paddle.numel(Tensor([384, 96, 61896, 1],"float32"), )
paddle.numel(Tensor([16, 8, 1, 17825793],"float32"), )
paddle.numel(Tensor([32, 16, 1, 4456449],"float32"), )
paddle.numel(Tensor([4, 2, 1, 512, 4, 139265],"float32"), )
paddle.numel(Tensor([1024, 1024, 8],"float32"), )
paddle.numel(Tensor([1024, 1024, 8],"float64"), )
paddle.numel(Tensor([16, 16, 2970966, 3],"float32"), )
paddle.numel(Tensor([48, 96, 1, 495161],"float32"), )
paddle.numel(Tensor([4, 2, 1, 512, 139265, 4],"float32"), )
paddle.numel(Tensor([24, 24, 3, 1320430],"float32"), )
paddle.numel(Tensor([11883862, 192, 1, 1],"float32"), )
paddle.numel(Tensor([64, 1, 35651585, 1],"float32"), )
paddle.numel(Tensor([36, 63380594],"float32"), )
paddle.numel(Tensor([16, 1, 1, 142606337],"float32"), )
paddle.numel(Tensor([2228225, 1024],"float32"), )
paddle.numel(Tensor([32, 8, 1, 8912897],"float32"), )
paddle.numel(Tensor([35651585, 64, 1, 1],"float32"), )
paddle.numel(Tensor([48, 1, 47535446, 1],"float32"), )
paddle.ones_like(Tensor([2, 2147483649],"float16"), dtype="float64", )
paddle.ones_like(Tensor([338688, 4],"float32"), )
paddle.ones_like(Tensor([2, 1, 570425345, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([1, 17, 67108865, 2],"float32"), )
paddle.ones_like(Tensor([13, 175515491],"int32"), dtype="int64", )
paddle.ones_like(Tensor([1, 57042535, 20, 2],"float32"), )
paddle.ones_like(Tensor([12, 485056, 392],"float32"), )
paddle.ones_like(Tensor([2261350, 1009],"int32"), )
paddle.ones_like(Tensor([284544, 4],"float32"), )
paddle.ones_like(Tensor([108, 49, 431161],"float32"), )
paddle.ones_like(Tensor([330624, 4],"float32"), )
paddle.ones_like(Tensor([13, 175515491, 1],"float32"), )
paddle.ones_like(Tensor([1, 192, 5941931, 2],"float32"), )
paddle.ones_like(Tensor([261120, 4],"float32"), )
paddle.ones_like(Tensor([325957340, 7, 1],"float32"), )
paddle.ones_like(Tensor([32, 392, 392],"float32"), )
paddle.ones_like(Tensor([2, 228170138, 5],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 2, 570425345],"float32"), dtype="float32", )
paddle.ones_like(Tensor([144, 40422, 392],"float32"), )
paddle.ones_like(Tensor([1, 18, 25, 5070448],"float32"), )
paddle.ones_like(Tensor([13, 175515491],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([1, 7922575, 144, 2],"float32"), )
paddle.ones_like(Tensor([1, 3, 190141782, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([1, 58, 39339679],"float32"), )
paddle.ones_like(Tensor([262848, 4],"float32"), )
paddle.ones_like(Tensor([1, 192, 144, 82527],"float32"), )
paddle.ones_like(Tensor([1, 16, 16, 8912897],"float32"), )
paddle.ones_like(Tensor([1, 12, 95070891, 2],"float32"), )
paddle.ones_like(Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.ones_like(Tensor([259200, 4],"float32"), )
paddle.ones_like(Tensor([380283564, 2, 3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 1140850690],"int32"), dtype="bool", )
paddle.ones_like(Tensor([291840, 4],"float32"), )
paddle.ones_like(Tensor([2, 429496730, 5],"float16"), dtype="float16", )
paddle.ones_like(Tensor([14, 162978670],"int64"), dtype="int64", )
paddle.ones_like(Tensor([2, 114085069, 5, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([110036, 144, 144],"float32"), )
paddle.ones_like(Tensor([456340276, 5],"int64"), dtype="bool", )
paddle.ones_like(Tensor([160, 392, 392],"float32"), )
paddle.ones_like(Tensor([1, 144, 200, 79226],"float32"), )
paddle.ones_like(Tensor([2, 536870913, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 1140850690],"bool"), dtype="bool", )
paddle.ones_like(Tensor([128, 17825793],"int64"), dtype="int64", )
paddle.ones_like(Tensor([48, 392, 392],"float32"), )
paddle.ones_like(Tensor([275520, 4],"float32"), )
paddle.ones_like(Tensor([1, 142606337, 8, 2],"float32"), )
paddle.ones_like(Tensor([12, 392, 485056],"float32"), )
paddle.ones_like(Tensor([274176, 4],"float32"), )
paddle.ones_like(Tensor([2, 3, 5, 76056713],"float32"), dtype="float32", )
paddle.ones_like(Tensor([276480, 4],"float32"), )
paddle.ones_like(Tensor([1, 2147483649, 2],"float16"), dtype="float64", )
paddle.ones_like(Tensor([1, 15, 76056713, 2],"float32"), )
paddle.ones_like(Tensor([1, 67108865, 17, 2],"float32"), )
paddle.ones_like(Tensor([1, 20, 15, 7605672],"float32"), )
paddle.ones_like(Tensor([13, 7, 25073642],"float32"), )
paddle.ones_like(Tensor([2, 1140850690],"int64"), dtype="bool", )
paddle.ones_like(Tensor([2, 1140850690],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([2, 107374183, 5, 4],"float16"), dtype="float64", )
paddle.ones_like(Tensor([253440, 4],"float32"), )
paddle.ones_like(Tensor([108, 431161, 49],"float32"), )
paddle.ones_like(Tensor([139265, 128, 128],"float32"), )
paddle.ones_like(Tensor([1, 144, 7922575, 2],"float32"), )
paddle.ones_like(Tensor([2, 380283564, 3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 1140850690],"float32"), dtype="bool", )
paddle.ones_like(Tensor([277056, 4],"float32"), )
paddle.ones_like(Tensor([1, 128, 17825793],"float32"), )
paddle.ones_like(Tensor([322560, 4],"float32"), )
paddle.ones_like(Tensor([1, 20, 20, 5704254],"float32"), )
paddle.ones_like(Tensor([40, 392, 392],"float32"), )
paddle.ones_like(Tensor([152113426, 3, 5],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2256876, 1011],"int32"), )
paddle.ones_like(Tensor([2, 1140850690],"int64"), dtype="int64", )
paddle.ones_like(Tensor([2, 1073741825, 2],"float16"), dtype="float64", )
paddle.ones_like(Tensor([1, 3, 2, 380283564],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 715827883],"float16"), dtype="float16", )
paddle.ones_like(Tensor([128, 45474, 392],"float32"), )
paddle.ones_like(Tensor([768, 49, 49],"float32"), )
paddle.ones_like(Tensor([1, 12, 9, 21126865],"float32"), )
paddle.ones_like(Tensor([1, 2281701379],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([299136, 4],"float32"), )
paddle.ones_like(Tensor([128, 392, 45474],"float32"), )
paddle.ones_like(Tensor([284160, 4],"float32"), )
paddle.ones_like(Tensor([1, 285212673, 2, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([144, 392, 392],"float32"), )
paddle.ones_like(Tensor([2, 2147483649],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([266112, 4],"float32"), )
paddle.ones_like(Tensor([114085069, 20],"int64"), dtype="int64", )
paddle.ones_like(Tensor([5070448, 15, 15, 2],"float32"), )
paddle.ones_like(Tensor([12, 1320430, 144],"float32"), )
paddle.ones_like(Tensor([1, 18, 18, 7042289],"float32"), )
paddle.ones_like(Tensor([4294967297],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 2, 1073741825],"float16"), dtype="float16", )
paddle.ones_like(Tensor([114085069, 20],"int64"), dtype=Dtype(int64), )
paddle.ones_like(Tensor([267648, 4],"float32"), )
paddle.ones_like(Tensor([1, 128, 8, 2228225],"float32"), )
paddle.ones_like(Tensor([12, 144, 1320430],"float32"), )
paddle.ones_like(Tensor([2, 512, 1024],"int64"), )
paddle.ones_like(Tensor([144, 392, 40422],"float32"), )
paddle.ones_like(Tensor([1, 71303169, 16, 2],"float32"), )
paddle.ones_like(Tensor([1, 15, 15, 10140896],"float32"), )
paddle.polar(Tensor([1, 8192, 64],"float32"), Tensor([1, 8192, 64],"float32"), )
paddle.polygamma(Tensor([2281701379],"float32"), 3, )
paddle.polygamma(Tensor([2281701379],"float32"), 1, )
paddle.positive(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.positive(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.positive(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.positive(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.positive(Tensor([10, 228170138],"float32"), )
paddle.pow(Tensor([4294967297],"float16"), 8.902181874411676, )
paddle.pow(Tensor([3, 1431655766],"float16"), 2, )
paddle.pow(Tensor([1, 107374183, 4, 10],"float16"), 2, )
paddle.pow(Tensor([2, 107136, 7],"float32"), 2, )
paddle.pow(Tensor([1, 3, 4, 357913942],"float16"), 2, )
paddle.pow(Tensor([1, 3, 76056713, 10],"float32"), 2, )
paddle.pow(x=Tensor([2, 1073741825, 2],"float16"), y=0, )
paddle.pow(Tensor([4, 1073741825],"float16"), 2, )
paddle.pow(Tensor([1, 3, 143165577, 10],"float16"), 2, )
paddle.pow(Tensor([103884, 1, 152, 272],"float16"), 2.0, )
paddle.pow(Tensor([1431655766, 3],"float16"), 2, )
paddle.pow(Tensor([20, 1, 789517, 272],"float16"), 2.0, )
paddle.pow(Tensor([4, 81, 94, 311],"float32"), 2.0, )
paddle.pow(Tensor([613566757, 7],"float16"), 2, )
paddle.pow(Tensor([2, 2147483649],"float16"), 2, )
paddle.pow(Tensor([4, 157920, 3],"float32"), 2.0, )
paddle.pow(Tensor([20, 1, 152, 1412819],"float16"), 2.0, )
paddle.pow(x=Tensor([2, 2, 1073741825],"float16"), y=0, )
paddle.pow(Tensor([1073741825, 4],"float16"), 2, )
paddle.pow(Tensor([5, 858993460],"float16"), 1, )
paddle.pow(x=Tensor([1073741825, 2, 2],"float16"), y=Tensor([2],"float16"), )
paddle.pow(Tensor([4294967297],"float16"), 2, )
paddle.pow(Tensor([1024, 1024, 8],"float64"), 2, )
paddle.pow(Tensor([2228225, 1024],"float32"), 2, )
paddle.pow(Tensor([2147483649, 2],"float16"), 1, )
paddle.pow(Tensor([7, 613566757],"float16"), 2, )
paddle.pow(Tensor([5, 9, 95443718],"float16"), Tensor([95443718],"float16"), )
paddle.pow(Tensor([35791395, 3, 4, 10],"float16"), 2, )
paddle.pow(x=Tensor([1073741825, 2, 2],"float16"), y=0, )
paddle.pow(Tensor([1, 17825793, 128],"float32"), 3.0, )
paddle.pow(Tensor([4294967297],"float16"), 3, )
paddle.pow(Tensor([1024, 1024, 8],"float32"), 2, )
paddle.pow(Tensor([50704476, 1, 45],"float32"), 2, )
paddle.pow(Tensor([2147483649, 2],"float16"), 2, )
paddle.pow(x=Tensor([2, 1073741825, 2],"float16"), y=Tensor([2],"float16"), )
paddle.pow(Tensor([5, 122713352, 7],"float16"), Tensor([7],"float16"), )
paddle.pow(Tensor([1444, 1024],"float32"), 2, )
paddle.pow(Tensor([1000000, 4],"float64"), 2, )
paddle.pow(Tensor([20, 5195, 152, 272],"float16"), 2.0, )
paddle.pow(Tensor([68174085, 9, 7],"float16"), Tensor([7],"float16"), )
paddle.prod(Tensor([71582789, 6, 10],"float16"), list[0,], False, )
paddle.prod(Tensor([10, 10, 22817014],"float32"), )
paddle.prod(Tensor([10, 10, 22817014],"float32"), axis=1, )
paddle.put_along_axis(Tensor([3, 1140850690],"float32"), Tensor([1, 4],"int64"), Tensor([2, 1140850690],"float32"), 0, "add", True, False, )
paddle.put_along_axis(Tensor([3, 5],"float32"), Tensor([760567127, 3],"int64"), Tensor([760567127, 5],"float32"), 1, "add", True, False, )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([2, 3],"int64"), Tensor([2, 5],"float32"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([3, 5],"float32"), Tensor([456340276, 3],"int64"), Tensor([456340276, 5],"float32"), 1, "add", True, False, )
paddle.put_along_axis(Tensor([3, 760567127],"float32"), Tensor([2, 3],"int64"), Tensor([2, 760567127],"float32"), 1, "add", True, False, )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([2, 456340276],"int64"), Tensor([2, 5],"float32"), 1, "add", True, False, )
paddle.put_along_axis(Tensor([4],"float32"), Tensor([1],"int64"), Tensor([2281701379],"float32"), 0, "assign", )
paddle.put_along_axis(Tensor([3, 760567127],"float32"), Tensor([1, 4],"int64"), Tensor([2, 760567127],"float32"), 0, "mul", True, False, )
paddle.put_along_axis(Tensor([4294967297],"float16"), Tensor([1],"int64"), Tensor([1],"float16"), 0, "assign", )
paddle.put_along_axis(Tensor([4],"float16"), Tensor([1],"int64"), Tensor([4294967297],"float16"), 0, "assign", )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([1, 4],"int64"), Tensor([2, 5],"float32"), 0, "assign", True, False, )
paddle.put_along_axis(Tensor([3, 1140850690],"float32"), Tensor([2, 3],"int64"), Tensor([2, 1140850690],"float32"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([3, 760567127],"float32"), Tensor([2, 3],"int64"), Tensor([2, 760567127],"float32"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([1, 4],"int64"), Tensor([2, 5],"float32"), 0, "mul", True, False, )
paddle.put_along_axis(Tensor([3, 5],"float32"), Tensor([456340276, 3],"int64"), Tensor([456340276, 5],"float32"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([3, 760567127],"float32"), Tensor([1, 4],"int64"), Tensor([2, 760567127],"float32"), 0, "add", True, False, )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([1, 4],"int64"), Tensor([2, 5],"float32"), 0, "add", True, False, )
paddle.put_along_axis(Tensor([3, 1140850690],"float32"), Tensor([2, 3],"int64"), Tensor([2, 1140850690],"float32"), 1, "add", True, False, )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([2, 3],"int64"), Tensor([2, 5],"float32"), 1, "add", True, False, )
paddle.put_along_axis(Tensor([2281701379],"float32"), Tensor([1],"int64"), Tensor([1],"float32"), 0, "assign", )
paddle.put_along_axis(Tensor([3, 1140850690],"float32"), Tensor([1, 4],"int64"), Tensor([2, 1140850690],"float32"), 0, "mul", True, False, )
paddle.put_along_axis(Tensor([3, 5],"float32"), Tensor([760567127, 3],"int64"), Tensor([760567127, 5],"float32"), 1, "mul", True, False, )
paddle.put_along_axis(Tensor([456340276, 5],"float32"), Tensor([2, 456340276],"int64"), Tensor([2, 5],"float32"), 1, "mul", True, False, )
paddle.real(x=Tensor([50, 8, 39, 14, 14],"complex64"), )
paddle.real(Tensor([50, 8, 39, 14, 14],"complex64"), )
paddle.reciprocal(Tensor([16, 1, 640, 640],"float32"), )
paddle.reciprocal(Tensor([8, 1, 960, 960],"float32"), )
paddle.reciprocal(Tensor([4, 1, 960, 960],"float32"), )
paddle.reciprocal(Tensor([2, 300, 2048],"float32"), )
paddle.reciprocal(Tensor([4, 1, 640, 640],"float32"), )
paddle.reciprocal(Tensor([8, 1, 640, 640],"float32"), )
paddle.reduce_as(Tensor([30, 200, 380284],"float32"), Tensor([200, 380284],"float32"), )
paddle.reduce_as(Tensor([30, 1901418, 40],"float32"), Tensor([1901418, 40],"float32"), )
paddle.remainder(Tensor([1, 3, 286331154, 5],"float16"), Tensor([2, 1, 286331154, 1],"float16"), )
paddle.remainder(Tensor([1, 1, 95070891],"float32"), Tensor([2, 3, 4, 95070891],"float32"), )
paddle.remainder(Tensor([2, 3, 4, 95070891],"float32"), Tensor([1, 1, 95070891],"float32"), )
paddle.remainder(Tensor([1, 1, 95070891],"int64"), Tensor([2, 3, 4, 95070891],"int64"), )
paddle.remainder(Tensor([2, 3, 143165577, 5],"float16"), Tensor([1, 1, 5],"float16"), )
paddle.remainder(Tensor([2, 3, 4, 95070891],"int32"), Tensor([1, 1, 95070891],"int32"), )
paddle.remainder(Tensor([2, 3, 4, 95070891],"int64"), Tensor([1, 1, 95070891],"int64"), )
paddle.remainder(Tensor([2, 3, 4, 178956971],"float16"), Tensor([1, 1, 178956971],"float16"), )
paddle.remainder(Tensor([1, 1, 178956971],"float16"), Tensor([2, 3, 4, 178956971],"float16"), )
paddle.remainder(Tensor([1, 2, 3, 143165577, 5],"float16"), Tensor([1, 2, 3, 143165577, 5],"float16"), )
paddle.remainder(Tensor([1, 1, 95070891],"int32"), Tensor([2, 3, 4, 95070891],"int32"), )
paddle.repeat_interleave(Tensor([14, 1, 384, 384],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([1, 1500, 1024],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([1, 1500, 768],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([1, 1500, 1280],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([5, 1, 768, 768],"float32"), repeats=3, axis=1, )
paddle.roll(Tensor([1, 16, 49933, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 35, 28, 192],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([124, 28, 28, 384],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 7, 7, 5478275],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([60, 28, 28, 192],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([2378, 16, 14, 21, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 48, 36, 768],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 56, 4682, 128],"float16"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([64, 24, 24, 512],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 28, 28, 192],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 6242, 7, 768],"float16"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([60, 28, 28, 192],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 21, 33289, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 28, 28, 192],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([4, 48, 48, 256],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 28, 42, 228262],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([7, 50, 170, 128],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 14, 7, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([7, 50, 170, 128],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([4, 48, 48, 384],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 36315, 77, 96],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([2, 56, 42, 384],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 70, 56, 96],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([64, 48, 48, 256],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([793, 16, 56, 63, 96],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 28, 49933, 192],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([28, 48, 48, 384],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 144, 192],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([7, 10, 25, 1024],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 7, 7, 1536],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([64, 7, 7, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 28, 4682, 256],"float16"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 4682, 56, 128],"float16"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 33289, 42, 192],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 63, 44385, 96],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([128, 28, 4682, 256],"float16"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 14, 14, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([60, 24, 24, 512],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 28, 35, 273914],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 2739138],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([2, 112, 84, 192],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([64, 28, 28, 192],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 21, 14, 913046],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 56, 77, 62254],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([28533, 28, 28, 192],"float16"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 28, 6242, 192],"float16"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 63, 56, 76088],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([2378, 16, 21, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([124, 28, 28, 192],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([3567, 16, 7, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([4, 56, 56, 192],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 7, 7, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 49933, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([124, 14, 14, 384],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 57066, 14, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 56, 56, 96],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 56, 63, 76088],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([12, 28, 28, 256],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 14, 6242, 384],"float16"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 56, 70, 68479],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1427, 16, 28, 35, 192],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([60, 12, 12, 1024],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 28, 49933, 192],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([128, 4682, 28, 256],"float16"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 4682, 7, 1024],"float16"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([28, 96, 96, 192],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([85599, 7, 7, 1024],"float16"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1189, 16, 28, 42, 192],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 49933, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([3567, 16, 14, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([4, 48, 48, 384],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 12682, 56, 63, 96],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 70, 56, 68479],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([16, 56, 56, 128],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 56, 56, 96],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 28, 28, 342393],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 28, 28, 192],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([4, 96, 96, 128],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 33289, 42, 192],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 21, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([2, 224, 168, 96],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 7, 49933, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([64, 12, 12, 1024],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([3567, 16, 14, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 1369569],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([3567, 16, 14, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([128, 7, 6242, 768],"float16"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([128, 14, 14, 171197],"float16"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([57066, 14, 14, 384],"float16"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([60, 56, 56, 96],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1427, 16, 35, 28, 192],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([64, 28, 28, 256],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 16, 56, 77, 96],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([124, 56, 56, 96],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1784, 16, 28, 28, 192],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 1369569],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 56, 56, 85599],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 49933, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.round(Tensor([2, 2147483649],"float16"), )
paddle.round(Tensor([8388609, 512],"float16"), )
paddle.row_stack(list[Tensor([4294967297],"float16"),Tensor([1, 4294967297],"float16"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.rsqrt(x=Tensor([2, 1073741825, 2],"float16"), )
paddle.rsqrt(Tensor([12, 190141782, 1],"float32"), )
paddle.rsqrt(Tensor([456340276, 5, 1],"float32"), )
paddle.rsqrt(Tensor([16, 142606337],"float32"), )
paddle.rsqrt(Tensor([13, 2, 21939437, 4, 1],"float32"), )
paddle.rsqrt(Tensor([4456449, 512],"float32"), )
paddle.rsqrt(Tensor([207427399, 11, 1],"float32"), )
paddle.rsqrt(Tensor([32, 134217729],"float16"), )
paddle.rsqrt(Tensor([4294967297, 1],"float16"), )
paddle.rsqrt(Tensor([13, 2, 16, 4, 1371215],"float32"), )
paddle.rsqrt(Tensor([2228225, 1024, 1],"float32"), )
paddle.rsqrt(Tensor([95070891, 24, 1],"float32"), )
paddle.rsqrt(Tensor([2265841, 1007, 1],"float32"), )
paddle.rsqrt(Tensor([13, 1007, 174296],"float32"), )
paddle.rsqrt(x=Tensor([380283564, 3, 2],"float32"), )
paddle.rsqrt(x=Tensor([477218589, 3, 3],"float16"), )
paddle.rsqrt(Tensor([134, 17027623, 1],"float32"), )
paddle.rsqrt(Tensor([557057, 1, 4096],"float32"), )
paddle.rsqrt(Tensor([17825793, 128],"float32"), )
paddle.rsqrt(Tensor([14, 7, 23282668],"float32"), )
paddle.rsqrt(Tensor([13, 2, 16, 5484860, 1],"float32"), )
paddle.rsqrt(Tensor([8912897, 256],"float32"), )
paddle.rsqrt(Tensor([1431655766, 3],"float16"), )
paddle.rsqrt(Tensor([13, 3, 58505164],"float32"), )
paddle.rsqrt(Tensor([12, 9, 21126865],"float32"), )
paddle.rsqrt(Tensor([570425345, 4, 1],"float32"), )
paddle.rsqrt(Tensor([114085069, 20, 1],"float32"), )
paddle.rsqrt(Tensor([557057, 4096, 1],"float32"), )
paddle.rsqrt(Tensor([8, 285212673],"float32"), )
paddle.rsqrt(Tensor([1140850690, 2, 1],"float32"), )
paddle.rsqrt(Tensor([134, 4, 4256906],"float32"), )
paddle.rsqrt(Tensor([13, 10, 17551550],"float32"), )
paddle.rsqrt(Tensor([13, 9, 19501722],"float32"), )
paddle.rsqrt(x=Tensor([2, 570425345, 2],"float32"), )
paddle.rsqrt(Tensor([10000, 2, 214749],"float16"), )
paddle.rsqrt(Tensor([32, 71303169],"float32"), )
paddle.rsqrt(Tensor([380283564, 2, 3],"float32"), )
paddle.rsqrt(Tensor([10, 228170138, 1],"float32"), )
paddle.rsqrt(Tensor([1114113, 2048, 1],"float32"), )
paddle.rsqrt(Tensor([7605672, 300, 1],"float32"), )
paddle.rsqrt(Tensor([10000, 76057, 3],"float32"), )
paddle.rsqrt(Tensor([760567127, 3, 1],"float32"), )
paddle.rsqrt(Tensor([13, 175515491, 1],"float32"), )
paddle.rsqrt(Tensor([12, 17, 11184811],"float32"), )
paddle.rsqrt(x=Tensor([715827883, 3, 2],"float16"), )
paddle.rsqrt(Tensor([14, 162978670, 1],"float32"), )
paddle.rsqrt(Tensor([134217729, 17, 1],"float32"), )
paddle.rsqrt(Tensor([12, 24, 7922575],"float32"), )
paddle.rsqrt(Tensor([2281701379, 1],"float32"), )
paddle.rsqrt(x=Tensor([2, 715827883, 3],"float16"), )
paddle.rsqrt(Tensor([13, 7, 25073642],"float32"), )
paddle.rsqrt(Tensor([17825793, 2, 16, 4, 1],"float32"), )
paddle.rsqrt(Tensor([10000, 2, 114086],"float32"), )
paddle.rsqrt(Tensor([253522376, 9, 1],"float32"), )
paddle.rsqrt(Tensor([760567127, 3],"float32"), )
paddle.rsqrt(Tensor([13, 8, 21939437],"float32"), )
paddle.rsqrt(Tensor([10000, 143166, 3],"float16"), )
paddle.rsqrt(Tensor([13, 1, 175515491],"float32"), )
paddle.rsqrt(Tensor([228170138, 10, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2742430, 16, 4, 1],"float32"), )
paddle.rsqrt(Tensor([325957340, 7, 1],"float32"), )
paddle.rsqrt(Tensor([1, 7, 325957340],"float32"), )
paddle.rsqrt(Tensor([2, 1140850690],"float32"), )
paddle.rsqrt(x=Tensor([2, 3, 380283564],"float32"), )
paddle.rsqrt(Tensor([2281701379],"float32"), )
paddle.rsqrt(Tensor([2281701379, 1, 1],"float32"), )
paddle.rsqrt(Tensor([380283564, 6, 1],"float32"), )
paddle.rsqrt(Tensor([2, 2147483649],"float16"), )
paddle.rsqrt(Tensor([715827883, 2, 3],"float16"), )
paddle.rsqrt(Tensor([285212673, 8, 1],"float32"), )
paddle.rsqrt(Tensor([4, 570425345],"float32"), )
paddle.rsqrt(Tensor([39339679, 58, 1],"float32"), )
paddle.rsqrt(Tensor([16, 268435457],"float16"), )
paddle.rsqrt(x=Tensor([2, 3, 715827883],"float16"), )
paddle.scale(Tensor([380283564, 1, 1, 2, 3],"float32"), scale=2.0, )
paddle.scale(x=Tensor([3, 253522376, 3],"float32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(Tensor([1, 4194305, 32, 32],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([8, 16, 128, 139265],"float32"), scale=0.125, )
paddle.scale(Tensor([3, 40, 40, 475355],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([8, 16, 128, 128],"float16"), scale=0.125, )
paddle.scale(Tensor([8, 32769, 128, 128],"float16"), scale=0.125, )
paddle.scale(Tensor([3, 3, 6338060, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([760567127, 3],"float32"), scale=1.0, )
paddle.scale(Tensor([17825793, 8, 4, 4],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([40, 107374183],"bfloat16"), scale=-1.7580993408473766, )
paddle.scale(Tensor([58, 2, 140, 140],"float32"), scale=0.7071067811865476, )
paddle.scale(Tensor([2, 190141782, 1, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 256, 278529, 16],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([760567127, 3],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([2, 1140850690],"float32"), 2.0, 3.0, )
paddle.scale(Tensor([158452, 3, 40, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([57042535, 40],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([3, 3, 2112687, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([35651585, 8, 8],"float32"), scale=0.25, )
paddle.scale(Tensor([2, 357913942, 2, 3],"float16"), scale=2.0, )
paddle.scale(Tensor([8705, 16, 128, 128],"float32"), scale=0.125, )
paddle.scale(Tensor([137, 256, 256, 256],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([58, 2, 140, 140499],"float32"), scale=0.7071067811865476, )
paddle.scale(Tensor([8, 2210951, 1, 129],"float32"), scale=0.125, )
paddle.scale(Tensor([17409, 128, 32, 32],"float32"), 0.17677669529663687, )
paddle.scale(Tensor([178258, 32, 20, 20],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([8, 16, 138185, 129],"float32"), scale=0.125, )
paddle.scale(Tensor([40, 57042535],"float32"), scale=1.0, )
paddle.scale(Tensor([475355, 3, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([3, 40, 6338060, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([1, 128, 32, 1048577],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([16, 128, 32, 32],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([32769, 128, 32, 32],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([8, 16, 1, 17825793],"float32"), scale=0.125, )
paddle.scale(Tensor([2, 256, 256, 17409],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([1, 2228225, 32, 32],"float32"), 0.35355339059327373, )
paddle.scale(x=Tensor([3, 3, 477218589],"float16"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(Tensor([1, 128, 1048577, 32],"float16"), 0.08838834764831843, )
paddle.scale(Tensor([1, 16, 32, 4456449],"float32"), 0.25, )
paddle.scale(Tensor([760567127, 3],"float32"), scale=0.0, )
paddle.scale(Tensor([2281701379],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([2, 256, 128, 128],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([380283564, 1, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([40, 107374183],"bfloat16"), scale=1.0, )
paddle.scale(x=Tensor([253522376, 3, 3],"float32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([3, 3, 477218589],"float16"), scale=2.0, bias=4.0, bias_after_scale=True, act=None, )
paddle.scale(x=Tensor([253522376, 3, 3],"int32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(Tensor([2, 256, 256, 256],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([107374183, 40],"bfloat16"), scale=-1.7580993408473766, )
paddle.scale(Tensor([32, 4456449, 4, 4],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([3, 3, 3, 40, 2112687],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([2, 1, 1, 715827883, 3],"float16"), scale=2.0, )
paddle.scale(Tensor([278529, 8, 32, 32],"float32"), 0.35355339059327373, )
paddle.scale(Tensor([4, 256, 256, 256],"float32"), scale=1.1111111111111112, )
paddle.scale(x=Tensor([3, 477218589, 3],"float16"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(Tensor([2, 256, 17409, 256],"float32"), scale=1.1111111111111112, )
paddle.scale(x=Tensor([477218589, 3, 3],"float16"), scale=2.0, bias=4.0, bias_after_scale=True, act=None, )
paddle.scale(Tensor([1105476, 16, 1, 129],"float32"), scale=0.125, )
paddle.scale(Tensor([4, 256, 64, 64],"float16"), scale=1.1111111111111112, )
paddle.scale(Tensor([2, 1, 190141782, 2, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([2, 256, 128, 34817],"float32"), scale=1.1111111111111112, )
paddle.scale(x=Tensor([3, 477218589, 3],"float16"), scale=2.0, bias=4.0, bias_after_scale=True, act=None, )
paddle.scale(Tensor([1, 128, 32, 557057],"float32"), 0.17677669529663687, )
paddle.scale(Tensor([1, 128, 32, 557057],"float32"), 0.08838834764831843, )
paddle.scale(Tensor([715827883, 1, 2, 3],"float16"), scale=2.0, )
paddle.scale(x=Tensor([32, 139265, 512],"float32"), scale=22.627416997969522, )
paddle.scale(x=Tensor([477218589, 3, 3],"float16"), scale=2.0, bias=4.0, bias_after_scale=False, act=None, )
paddle.scale(Tensor([4, 512, 47, 156],"float32"), scale=1.1111111111111112, )
paddle.scale(x=Tensor([116414, 140, 140],"float32"), scale=10000.0, bias=-1.0, bias_after_scale=False, )
paddle.scale(Tensor([2281701379, 1],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([3, 3, 40, 2112687, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([4294967297],"float16"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([3, 760567127],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([13, 8, 4, 5484860],"float32"), scale=1.1111111111111112, )
paddle.scale(Tensor([3, 3, 40, 40, 158452],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([2, 1140850690],"float32"), scale=-1.0, name="Categorical_entropy", )
paddle.scale(Tensor([3, 3, 158452, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([139265, 16, 32, 32],"float32"), 0.25, )
paddle.scale(Tensor([760568, 10, 15, 20],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([158452, 3, 3, 40, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([475355, 40, 40, 3],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(x=Tensor([3, 3, 253522376],"float32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scale(Tensor([3, 3, 40, 6338060],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([2, 8, 142606337],"float32"), scale=0.25, )
paddle.scale(Tensor([57042535, 40],"float32"), scale=1.0, )
paddle.scale(Tensor([107374183, 40],"bfloat16"), scale=0.0, )
paddle.scale(Tensor([3, 19014179, 40],"float32"), scale=0.0001, bias=1.0, )
paddle.scale(Tensor([8, 17409, 128, 128],"float32"), scale=0.125, )
paddle.scale(Tensor([760568, 10, 15, 20],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([16385, 16, 128, 128],"float16"), scale=0.125, )
paddle.scale(Tensor([2, 1140850690],"float32"), scale=0.886404894665932, )
paddle.scale(Tensor([2, 1, 380283564, 3],"float32"), scale=2.0, )
paddle.scale(Tensor([4294967297],"float16"), 0.25, )
paddle.scale(Tensor([2, 1140850690],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([5, 1521135, 15, 20],"float32"), scale=-1.7580993408473766, )
paddle.scale(Tensor([32, 8, 2228225, 4],"float32"), scale=0.04419417382415922, )
paddle.scale(Tensor([91268056, 25],"float32"), 2.0, 3.0, )
paddle.scale(Tensor([40, 57042535],"float32"), scale=0.0, )
paddle.scale(x=Tensor([3, 3, 253522376],"int32"), scale=1.0, bias=0.0, bias_after_scale=True, act=None, )
paddle.scatter(Tensor([198],"float16"), Tensor([8],"int64"), Tensor([4294967297],"float16"), )
paddle.scatter(Tensor([214272, 20045],"float16"), Tensor([5633],"int32"), Tensor([5633, 20045],"float16"), overwrite=True, )
paddle.scatter(Tensor([1664],"int64"), Tensor([1664],"int64"), Tensor([2281701379],"int64"), overwrite=True, )
paddle.scatter(Tensor([17825793, 128],"float32"), Tensor([58584],"int64"), Tensor([58584, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([3029, 128],"float32"), Tensor([5168],"int64"), Tensor([5168, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([214272, 64],"float16"), Tensor([7355],"int32"), Tensor([67108865, 64],"float16"), overwrite=True, )
paddle.scatter(Tensor([11661, 38948],"float32"), Tensor([58584],"int64"), Tensor([58584, 38948],"float32"), overwrite=False, )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([5551],"int32"), Tensor([5551, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([6684, 128],"float32"), Tensor([26336],"int64"), Tensor([26336, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([5551],"int32"), Tensor([5551, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([17825793, 128],"float32"), Tensor([78112],"int64"), Tensor([78112, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([2281701379],"int32"), Tensor([10],"int64"), Tensor([10],"int32"), overwrite=True, )
paddle.scatter(Tensor([1536000],"float32"), Tensor([30],"int64"), Tensor([30],"float32"), )
paddle.scatter(Tensor([2281701379],"float32"), Tensor([28],"int64"), Tensor([28],"float32"), )
paddle.scatter(Tensor([2281701379, 1],"float32"), Tensor([4],"int64"), Tensor([4, 1],"float32"), )
paddle.scatter(Tensor([2281701379],"float32"), Tensor([20],"int64"), Tensor([20],"float32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52388],"int32"), updates=Tensor([2281701379],"int32"), )
paddle.scatter(Tensor([11661, 128],"float32"), Tensor([58584],"int64"), Tensor([17825793, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([2281701379],"int32"), index=Tensor([52376],"int32"), updates=Tensor([52376],"int32"), )
paddle.scatter(Tensor([100, 1],"float32"), Tensor([100],"int64"), Tensor([2281701379, 1],"float32"), )
paddle.scatter(Tensor([262144, 64],"float32"), Tensor([20524],"int32"), Tensor([20524, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([2281701379],"float32"), Tensor([1024],"int64"), Tensor([1024],"float32"), )
paddle.scatter(Tensor([1024000],"float32"), Tensor([28],"int64"), Tensor([2281701379],"float32"), )
paddle.scatter(Tensor([4294967297],"float16"), Tensor([8],"int64"), Tensor([8],"float16"), )
paddle.scatter(Tensor([1024000],"float32"), Tensor([20],"int64"), Tensor([20],"float32"), )
paddle.scatter(Tensor([26736, 128],"float32"), Tensor([105344],"int64"), Tensor([105344, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([3, 3],"float16"), Tensor([2],"int32"), Tensor([1431655766, 3],"float16"), )
paddle.scatter(Tensor([1024000],"float32"), Tensor([20],"int64"), Tensor([2281701379],"float32"), )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([16, 1],"int64"), Tensor([16, 64],"float32"), )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([8141],"int32"), Tensor([8141, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([17825793, 128],"float32"), Tensor([105344],"int64"), Tensor([105344, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([31, 64],"float32"), Tensor([16, 1],"int64"), Tensor([35651585, 64],"float32"), )
paddle.scatter(Tensor([3887, 128],"float32"), Tensor([19528],"int64"), Tensor([19528, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([1200, 1],"int64"), Tensor([4],"int64"), Tensor([2281701379, 1],"int64"), )
paddle.scatter(Tensor([760567127, 3],"float32"), index=Tensor([2],"int32"), updates=Tensor([2, 3],"float32"), )
paddle.scatter(Tensor([214272, 20045],"float16"), Tensor([7355],"int32"), Tensor([7355, 20045],"float16"), overwrite=True, )
paddle.scatter(Tensor([214272, 10649],"float32"), Tensor([7355],"int32"), Tensor([7355, 10649],"float32"), overwrite=True, )
paddle.scatter(Tensor([26736, 128],"float32"), Tensor([105344],"int64"), Tensor([17825793, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([11661, 128],"float32"), Tensor([58584],"int64"), Tensor([58584, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([26736, 21660],"float32"), Tensor([105344],"int64"), Tensor([105344, 21660],"float32"), overwrite=False, )
paddle.scatter(Tensor([1024000],"float32"), Tensor([28],"int64"), Tensor([28],"float32"), )
paddle.scatter(Tensor([67108865, 64],"float16"), Tensor([7355],"int32"), Tensor([7355, 64],"float16"), overwrite=True, )
paddle.scatter(Tensor([15548, 128],"float32"), Tensor([78112],"int64"), Tensor([17825793, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([2281701379],"int32"), index=Tensor([52388],"int32"), updates=Tensor([52388],"int32"), )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([7485],"int32"), Tensor([35651585, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([4294967297],"float16"), Tensor([10],"int64"), Tensor([10],"float16"), )
paddle.scatter(Tensor([2281701379],"int32"), index=Tensor([52367],"int32"), updates=Tensor([52367],"int32"), )
paddle.scatter(Tensor([1536000],"float32"), Tensor([36],"int64"), Tensor([36],"float32"), )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([7355],"int32"), Tensor([7355, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([2281701379],"float32"), Tensor([24],"int64"), Tensor([24],"float32"), )
paddle.scatter(Tensor([15548, 128],"float32"), Tensor([78112],"int64"), Tensor([78112, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([214272, 10649],"float32"), Tensor([7485],"int32"), Tensor([7485, 10649],"float32"), overwrite=True, )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([5551],"int32"), Tensor([35651585, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([1358, 462258],"float32"), Tensor([4936],"int64"), Tensor([4936, 462258],"float32"), overwrite=False, )
paddle.scatter(Tensor([67108865, 64],"float16"), Tensor([5551],"int32"), Tensor([5551, 64],"float16"), overwrite=True, )
paddle.scatter(Tensor([198],"float16"), Tensor([10],"int64"), Tensor([4294967297],"float16"), )
paddle.scatter(Tensor([4294967297],"float16"), Tensor([6],"int64"), Tensor([6],"float16"), )
paddle.scatter(Tensor([4294967297],"float16"), Tensor([18],"int64"), Tensor([18],"float16"), )
paddle.scatter(Tensor([2281701379, 1],"float32"), Tensor([100],"int64"), Tensor([100, 1],"float32"), )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([7355],"int32"), Tensor([35651585, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([214272, 10649],"float32"), Tensor([5551],"int32"), Tensor([5551, 10649],"float32"), overwrite=True, )
paddle.scatter(Tensor([3, 3],"float32"), index=Tensor([2],"int32"), updates=Tensor([760567127, 3],"float32"), )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([7485],"int32"), Tensor([7485, 64],"float32"), overwrite=True, )
paddle.scatter(x=Tensor([100, 3],"float32"), index=Tensor([3],"int64"), updates=Tensor([760567127, 3],"float32"), overwrite=False, )
paddle.scatter(Tensor([1358, 128],"float32"), Tensor([4936],"int64"), Tensor([17825793, 128],"float32"), overwrite=False, )
paddle.scatter(Tensor([594],"float16"), Tensor([18],"int64"), Tensor([4294967297],"float16"), )
paddle.scatter(Tensor([64],"int32"), Tensor([12],"int64"), Tensor([2281701379],"int32"), overwrite=True, )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([7485],"int32"), Tensor([7485, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([262144, 64],"float32"), Tensor([19780],"int32"), Tensor([19780, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([2281701379],"int32"), index=Tensor([52397],"int32"), updates=Tensor([52397],"int32"), )
paddle.scatter(Tensor([214272, 64],"float16"), Tensor([5551],"int32"), Tensor([67108865, 64],"float16"), overwrite=True, )
paddle.scatter(Tensor([100, 1],"int64"), Tensor([100],"int64"), Tensor([2281701379, 1],"int64"), )
paddle.scatter(Tensor([1200, 1],"float32"), Tensor([4],"int64"), Tensor([2281701379, 1],"float32"), )
paddle.scatter(Tensor([262144, 64],"float32"), Tensor([21955],"int32"), Tensor([21955, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([214272, 64],"float16"), Tensor([7485],"int32"), Tensor([67108865, 64],"float16"), overwrite=True, )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([35651585, 1],"int64"), Tensor([35651585, 64],"float32"), )
paddle.scatter(Tensor([1200, 1901418],"float32"), Tensor([4],"int64"), Tensor([4, 1901418],"float32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52367],"int32"), updates=Tensor([2281701379],"int32"), )
paddle.scatter(Tensor([198],"float16"), Tensor([6],"int64"), Tensor([4294967297],"float16"), )
paddle.scatter(Tensor([67108865, 64],"float16"), Tensor([5633],"int32"), Tensor([5633, 64],"float16"), overwrite=True, )
paddle.scatter(Tensor([2281701379],"int32"), Tensor([13],"int64"), Tensor([13],"int32"), overwrite=True, )
paddle.scatter(x=Tensor([760567127, 3],"float32"), index=Tensor([3],"int64"), updates=Tensor([3, 3],"float32"), overwrite=False, )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([7974],"int32"), Tensor([7974, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([1536000],"float32"), Tensor([42],"int64"), Tensor([42],"float32"), )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52397],"int32"), updates=Tensor([2281701379],"int32"), )
paddle.scatter(Tensor([64],"int32"), Tensor([10],"int64"), Tensor([2281701379],"int32"), overwrite=True, )
paddle.scatter(Tensor([1024000],"float32"), Tensor([24],"int64"), Tensor([2281701379],"float32"), )
paddle.scatter(Tensor([214272, 20045],"float16"), Tensor([5551],"int32"), Tensor([5551, 20045],"float16"), overwrite=True, )
paddle.scatter(Tensor([214272, 64],"float32"), Tensor([7355],"int32"), Tensor([7355, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([64],"int32"), Tensor([13],"int64"), Tensor([2281701379],"int32"), overwrite=True, )
paddle.scatter(Tensor([31, 73603271],"float32"), Tensor([16, 1],"int64"), Tensor([16, 73603271],"float32"), )
paddle.scatter(Tensor([214272, 20045],"float16"), Tensor([7485],"int32"), Tensor([7485, 20045],"float16"), overwrite=True, )
paddle.scatter(Tensor([214272, 64],"float16"), Tensor([5633],"int32"), Tensor([67108865, 64],"float16"), overwrite=True, )
paddle.scatter(Tensor([52640],"int32"), index=Tensor([52376],"int32"), updates=Tensor([2281701379],"int32"), )
paddle.scatter(Tensor([1024000],"float32"), Tensor([24],"int64"), Tensor([24],"float32"), )
paddle.scatter(Tensor([67108865, 64],"float16"), Tensor([7485],"int32"), Tensor([7485, 64],"float16"), overwrite=True, )
paddle.scatter(Tensor([1431655766, 3],"float16"), Tensor([2],"int32"), Tensor([2, 3],"float16"), )
paddle.scatter(Tensor([35651585, 64],"float32"), Tensor([5633],"int32"), Tensor([5633, 64],"float32"), overwrite=True, )
paddle.scatter(Tensor([2281701379],"int32"), Tensor([12],"int64"), Tensor([12],"int32"), overwrite=True, )
paddle.scatter(Tensor([214272, 10649],"float32"), Tensor([5633],"int32"), Tensor([5633, 10649],"float32"), overwrite=True, )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5849, 2],"int64"), Tensor([5849, 7168],"bfloat16"), )
paddle.scatter_nd_add(x=Tensor([2, 1140850690, 4],"float64"), index=Tensor([2, 1140850690],"int64"), updates=Tensor([2],"float64"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5670, 2],"int64"), Tensor([5670, 7168],"bfloat16"), )
paddle.scatter_nd_add(x=Tensor([2, 1140850690, 4],"int64"), index=Tensor([2, 1140850690],"int64"), updates=Tensor([2],"int64"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5619, 2],"int64"), Tensor([5619, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5488, 2],"int64"), Tensor([5488, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([5070448, 5, 9, 10],"float32"), Tensor([5070448, 2],"int64"), Tensor([5070448, 9, 10],"float32"), )
paddle.scatter_nd_add(Tensor([2, 1140850690, 4],"int64"), Tensor([2, 1140850690],"int64"), Tensor([2],"int64"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5741, 2],"int64"), Tensor([5741, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5788, 2],"int64"), Tensor([5788, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5583, 2],"int64"), Tensor([5583, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5824, 2],"int64"), Tensor([5824, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5514, 2],"int64"), Tensor([5514, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5831, 2],"int64"), Tensor([5831, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5585, 2],"int64"), Tensor([5585, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5572, 2],"int64"), Tensor([5572, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5761, 2],"int64"), Tensor([5761, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([3, 5, 9, 16901492],"float32"), Tensor([3, 2],"int64"), Tensor([3, 9, 16901492],"float32"), )
paddle.scatter_nd_add(x=Tensor([2, 285212673, 4],"float32"), index=Tensor([2, 285212673],"int64"), updates=Tensor([2],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5876, 2],"int64"), Tensor([5876, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([2, 285212673, 4],"int64"), Tensor([2, 285212673],"int64"), Tensor([2],"int64"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5837, 2],"int64"), Tensor([5837, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 1140850690, 2],"float32"), Tensor([1, 3],"int64"), Tensor([1],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5953, 2],"int64"), Tensor([5953, 7168],"bfloat16"), )
paddle.scatter_nd_add(x=Tensor([2, 67108865, 4, 2, 4],"float16"), index=Tensor([2, 67108865],"int64"), updates=Tensor([2, 2, 4],"float16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5800, 2],"int64"), Tensor([5800, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5657, 2],"int64"), Tensor([5657, 7168],"bfloat16"), )
paddle.scatter_nd_add(x=Tensor([2, 285212673, 4],"int64"), index=Tensor([2, 285212673],"int64"), updates=Tensor([2],"int64"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5807, 2],"int64"), Tensor([5807, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5544, 2],"int64"), Tensor([5544, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([3, 5, 15211343, 10],"float32"), Tensor([3, 2],"int64"), Tensor([3, 15211343, 10],"float32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5814, 2],"int64"), Tensor([5814, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5840, 2],"int64"), Tensor([5840, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5801, 2],"int64"), Tensor([5801, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5833, 2],"int64"), Tensor([5833, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5555, 2],"int64"), Tensor([5555, 7168],"bfloat16"), )
paddle.scatter_nd_add(x=Tensor([2, 285212673, 4],"int32"), index=Tensor([2, 285212673],"int64"), updates=Tensor([2],"int32"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5835, 2],"int64"), Tensor([5835, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5825, 2],"int64"), Tensor([5825, 7168],"bfloat16"), )
paddle.scatter_nd_add(x=Tensor([2, 536870913, 4],"float16"), index=Tensor([2, 536870913],"int64"), updates=Tensor([2],"float16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([1, 2],"int64"), Tensor([1, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5818, 2],"int64"), Tensor([5818, 7168],"bfloat16"), )
paddle.scatter_nd_add(Tensor([1, 8192, 7168],"bfloat16"), Tensor([5859, 2],"int64"), Tensor([5859, 7168],"bfloat16"), )
paddle.searchsorted(sorted_sequence=Tensor([760567127, 5],"float32"), values=Tensor([760567127, 3],"float32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"int32"), values=Tensor([760567127, 3],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([760567127, 5],"int32"), values=Tensor([760567127, 3],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([5],"int32"), values=Tensor([2281701379],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([7],"int64"), values=Tensor([2, 570425345, 2],"int64"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([5],"int64"), values=Tensor([1140850690, 2],"int64"), )
paddle.searchsorted(Tensor([1024],"bfloat16"), Tensor([4294967297],"bfloat16"), )
paddle.searchsorted(sorted_sequence=Tensor([7],"int32"), values=Tensor([2, 2, 570425345],"int32"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([760567127, 5],"int64"), values=Tensor([760567127, 3],"int64"), )
paddle.searchsorted(sorted_sequence=Tensor([7],"int32"), values=Tensor([2, 570425345, 2],"int32"), right=True, )
paddle.searchsorted(Tensor([4294967297],"bfloat16"), Tensor([512],"bfloat16"), )
paddle.searchsorted(sorted_sequence=Tensor([7],"int64"), values=Tensor([2, 2, 570425345],"int64"), right=True, )
paddle.searchsorted(sorted_sequence=Tensor([5],"int32"), values=Tensor([4, 570425345],"int32"), )
paddle.searchsorted(sorted_sequence=Tensor([7],"int32"), values=Tensor([570425345, 2, 2],"int32"), right=True, )
paddle.select_scatter(Tensor([2, 3, 12676119, 5, 6],"int32"), Tensor([2, 3, 5, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([6338060, 3, 4, 5, 6],"int32"), Tensor([6338060, 3, 5, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 178956971],"float16"), Tensor([2, 3, 178956971],"float16"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 5, 19014179],"int32"), Tensor([2, 3, 5, 19014179],"int32"), 2, 1, )
paddle.select_scatter(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 4],"float32"), 1, 1, )
paddle.select_scatter(Tensor([71582789, 3, 4, 5],"float16"), Tensor([71582789, 3, 5],"float16"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 380283564],"float32"), Tensor([2, 380283564],"float32"), 1, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 15845149, 6],"int32"), Tensor([2, 3, 15845149, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 9507090, 4, 5, 6],"int32"), Tensor([2, 9507090, 5, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 107374183, 4, 5],"float16"), Tensor([2, 107374183, 5],"float16"), 2, 1, )
paddle.shape(Tensor([3400, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([4, 280, 376, 25, 3],"float32"), )
paddle.shape(Tensor([4536, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([5568, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([4848, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([8, 271, 512],"float32"), )
paddle.shape(Tensor([15488, 80],"float32"), )
paddle.shape(Tensor([4, 128, 52, 52],"float32"), )
paddle.shape(Tensor([6376, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([8, 292, 512],"float32"), )
paddle.shape(Tensor([5552, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([8, 160, 36, 36],"float32"), )
paddle.shape(Tensor([220968, 80],"float16"), )
paddle.shape(Tensor([8, 293, 512],"float32"), )
paddle.shape(Tensor([4, 512, 47, 156],"float32"), )
paddle.shape(Tensor([4360, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([7, 206, 1024],"float32"), )
paddle.shape(Tensor([8, 3549, 68],"float32"), )
paddle.shape(Tensor([8, 264, 512],"float32"), )
paddle.shape(Tensor([2, 9261, 68],"float32"), )
paddle.shape(Tensor([272800, 80],"float32"), )
paddle.shape(Tensor([8, 160, 88, 88],"float32"), )
paddle.shape(Tensor([8, 279, 512],"float32"), )
paddle.shape(Tensor([4, 1600, 376, 280],"float32"), )
paddle.shape(Tensor([5552, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([8, 277, 512],"float32"), )
paddle.shape(Tensor([4296, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([8, 160, 76, 76],"float32"), )
paddle.shape(Tensor([218240, 80],"float32"), )
paddle.shape(Tensor([5088, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([1, 2281701379],"int64"), )
paddle.shape(Tensor([8, 8400, 68],"float32"), )
paddle.shape(Tensor([8, 265, 512],"float32"), )
paddle.shape(Tensor([4, 128, 60, 60],"float32"), )
paddle.shape(Tensor([2, 160, 76, 76],"float32"), )
paddle.shape(Tensor([3800, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([300080, 80],"float32"), )
paddle.shape(Tensor([4560, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([4, 128, 256, 256],"float16"), )
paddle.shape(Tensor([1, 37044, 88],"float32"), )
paddle.shape(Tensor([6392, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([8, 263, 512],"float32"), )
paddle.shape(Tensor([8, 2541, 68],"float32"), )
paddle.shape(Tensor([8, 4725, 68],"float32"), )
paddle.shape(Tensor([4, 128, 128, 128],"float32"), )
paddle.shape(Tensor([2280, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([6128, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([8, 4116, 68],"float16"), )
paddle.shape(Tensor([16, 11109, 68],"float32"), )
paddle.shape(Tensor([1, 21504, 88],"float32"), )
paddle.shape(Tensor([5736, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([6296, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([6248, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([6504, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([6760, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([64, 96, 36, 36],"float32"), )
paddle.shape(Tensor([7, 435, 1024],"float32"), )
paddle.shape(Tensor([8, 272, 512],"float32"), )
paddle.shape(Tensor([1, 256, 192, 144],"float32"), )
paddle.shape(Tensor([3416, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([1, 52500, 88],"float32"), )
paddle.shape(Tensor([8, 285, 512],"float32"), )
paddle.shape(Tensor([4848, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([8, 266, 512],"float32"), )
paddle.shape(Tensor([16, 2541, 68],"float32"), )
paddle.shape(Tensor([6544, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([2816, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([8, 248, 512],"float32"), )
paddle.shape(Tensor([2280, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([6912, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([8, 287, 512],"float32"), )
paddle.shape(Tensor([16, 2100, 68],"float32"), )
paddle.shape(Tensor([8, 3549, 68],"float16"), )
paddle.shape(Tensor([3416, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([8, 291, 512],"float32"), )
paddle.shape(Tensor([8, 6069, 68],"float16"), )
paddle.shape(Tensor([8, 252, 512],"float32"), )
paddle.shape(Tensor([300080, 80],"float16"), )
paddle.shape(Tensor([8, 268, 512],"float32"), )
paddle.shape(Tensor([1, 33600, 88],"float32"), )
paddle.shape(Tensor([4296, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([64, 96, 24, 24],"float16"), )
paddle.shape(Tensor([8, 245, 512],"float32"), )
paddle.shape(Tensor([5976, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([272800, 80],"float16"), )
paddle.shape(Tensor([8, 251, 512],"float32"), )
paddle.shape(Tensor([12, 24, 76, 136],"float32"), )
paddle.shape(Tensor([4, 12096, 68],"float32"), )
paddle.shape(Tensor([64, 96, 24, 24],"float32"), )
paddle.shape(Tensor([7576, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([3784, 8, 2, 80],"bfloat16"), )
paddle.shape(Tensor([64, 96, 22, 22],"float16"), )
paddle.shape(Tensor([1, 160, 84, 84],"float32"), )
paddle.shape(Tensor([8, 250, 512],"float32"), )
paddle.shape(Tensor([7168, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([8, 282, 512],"float32"), )
paddle.shape(Tensor([218240, 80],"float16"), )
paddle.shape(Tensor([3352, 8, 1, 80],"bfloat16"), )
paddle.shape(Tensor([8, 9261, 68],"float32"), )
paddle.shape(Tensor([1, 24276, 88],"float32"), )
paddle.shard_index(input=Tensor([1140850690, 2, 1],"int64"), index_num=20, nshards=4, shard_id=1, )
paddle.sign(Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.sign(Tensor([12, 20, 9507090],"int32"), )
paddle.sign(Tensor([11, 20742740, 10],"int32"), )
paddle.sign(Tensor([8, 17, 5, 902305, 7],"float16"), )
paddle.sign(Tensor([11, 207427399],"float32"), )
paddle.sign(Tensor([57042535, 20, 2],"int32"), )
paddle.sign(Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.sign(Tensor([11, 17, 12201612],"int32"), )
paddle.sign(Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.sign(Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.sign(Tensor([12, 95070891, 2],"float32"), )
paddle.sign(Tensor([12, 95070891, 2],"int32"), )
paddle.sign(Tensor([134217729, 17],"float32"), )
paddle.signbit(Tensor([8, 17, 5, 902305, 7],"float16"), )
paddle.signbit(Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.signbit(Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.signbit(Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.signbit(Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.sin(Tensor([67108865, 64],"float16"), )
paddle.sin(Tensor([20000, 50],"float32"), )
paddle.sin(Tensor([64, 67108865],"float16"), )
paddle.sin(Tensor([68608, 50],"float32"), )
paddle.sin(Tensor([10000, 200],"float32"), )
paddle.sin(Tensor([68608, 100],"float32"), )
paddle.sin(Tensor([34304, 100],"float32"), )
paddle.sin(Tensor([34304, 50],"float32"), )
paddle.sin(Tensor([20000, 100],"float32"), )
paddle.sin(Tensor([8192, 128],"float32"), )
paddle.sin(Tensor([5000, 256],"float32"), )
paddle.sin(Tensor([32812, 100],"float32"), )
paddle.sin(Tensor([50000, 200],"float32"), )
paddle.sin(Tensor([128512, 50],"float32"), )
paddle.sin(Tensor([8810, 200],"float32"), )
paddle.sin(Tensor([134217729, 32],"float16"), )
paddle.sin(Tensor([400, 10737419],"float16"), )
paddle.sin(Tensor([65, 66076420],"float16"), )
paddle.sin(Tensor([128512, 100],"float32"), )
paddle.sin(Tensor([17152, 100],"float32"), )
paddle.sin(Tensor([32812, 200],"float32"), )
paddle.sin(Tensor([50000, 100],"float32"), )
paddle.sin(Tensor([10000, 100],"float32"), )
paddle.sin(Tensor([32768, 32],"float32"), )
paddle.slice(Tensor([61696, 1280],"bfloat16"), axes=list[0,], starts=list[30848,], ends=list[38560,], )
paddle.slice(Tensor([5757, 7168],"float32"), axes=list[-1,], starts=list[896,], ends=list[1792,], )
paddle.slice(Tensor([5975, 7168],"float32"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([57344, 1280],"bfloat16"), axes=list[0,], starts=list[0,], ends=list[7168,], )
paddle.slice(Tensor([36480, 1280],"bfloat16"), axes=list[0,], starts=list[18240,], ends=list[22800,], )
paddle.slice(Tensor([5555, 7168],"bfloat16"), axes=list[-1,], starts=list[5376,], ends=list[6272,], )
paddle.slice(Tensor([5953, 7168],"float32"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([5996, 7168],"float32"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([52032, 1280],"bfloat16"), axes=list[0,], starts=list[32520,], ends=list[39024,], )
paddle.slice(Tensor([5780, 7168],"float32"), axes=list[-1,], starts=list[4480,], ends=list[5376,], )
paddle.slice(Tensor([5761, 7168],"bfloat16"), axes=list[-1,], starts=list[896,], ends=list[1792,], )
paddle.slice(Tensor([5670, 7168],"float32"), axes=list[-1,], starts=list[896,], ends=list[1792,], )
paddle.slice(Tensor([5619, 7168],"bfloat16"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([5801, 7168],"float32"), axes=list[-1,], starts=list[3584,], ends=list[4480,], )
paddle.slice(Tensor([5644, 7168],"float32"), axes=list[-1,], starts=list[3584,], ends=list[4480,], )
paddle.slice(Tensor([27520, 1280],"bfloat16"), axes=list[0,], starts=list[13760,], ends=list[17200,], )
paddle.slice(Tensor([6017, 7168],"float32"), axes=list[-1,], starts=list[4480,], ends=list[5376,], )
paddle.slice(Tensor([5825, 7168],"bfloat16"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([52352, 1280],"bfloat16"), axes=list[0,], starts=list[19632,], ends=list[26176,], )
paddle.slice(Tensor([5578, 7168],"float32"), axes=list[-1,], starts=list[4480,], ends=list[5376,], )
paddle.slice(Tensor([5837, 7168],"float32"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([51008, 1280],"bfloat16"), axes=list[0,], starts=list[31880,], ends=list[38256,], )
paddle.slice(Tensor([51840, 1280],"bfloat16"), axes=list[0,], starts=list[38880,], ends=list[45360,], )
paddle.slice(Tensor([5825, 7168],"float32"), axes=list[-1,], starts=list[0,], ends=list[896,], )
paddle.slice(Tensor([3924, 7168],"float32"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([30272, 1280],"bfloat16"), axes=list[0,], starts=list[11352,], ends=list[15136,], )
paddle.slice(Tensor([24320, 1280],"bfloat16"), axes=list[0,], starts=list[9120,], ends=list[12160,], )
paddle.slice(Tensor([5644, 7168],"float32"), axes=list[-1,], starts=list[896,], ends=list[1792,], )
paddle.slice(Tensor([27520, 1280],"bfloat16"), axes=list[0,], starts=list[0,], ends=list[3440,], )
paddle.slice(Tensor([5578, 7168],"float32"), axes=list[-1,], starts=list[5376,], ends=list[6272,], )
paddle.slice(Tensor([5544, 7168],"bfloat16"), axes=list[-1,], starts=list[3584,], ends=list[4480,], )
paddle.slice(Tensor([35712, 1280],"bfloat16"), axes=list[0,], starts=list[26784,], ends=list[31248,], )
paddle.slice(Tensor([5761, 7168],"float32"), axes=list[-1,], starts=list[0,], ends=list[896,], )
paddle.slice(Tensor([5670, 7168],"bfloat16"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([6017, 7168],"float32"), axes=list[-1,], starts=list[5376,], ends=list[6272,], )
paddle.slice(Tensor([35712, 1280],"bfloat16"), axes=list[0,], starts=list[0,], ends=list[4464,], )
paddle.slice(Tensor([5807, 7168],"float32"), axes=list[-1,], starts=list[896,], ends=list[1792,], )
paddle.slice(Tensor([6010, 7168],"float32"), axes=list[-1,], starts=list[896,], ends=list[1792,], )
paddle.slice(Tensor([5837, 7168],"bfloat16"), axes=list[-1,], starts=list[4480,], ends=list[5376,], )
paddle.slice(Tensor([5830, 7168],"float32"), axes=list[-1,], starts=list[6272,], ends=list[7168,], )
paddle.slice(Tensor([5840, 7168],"float32"), axes=list[-1,], starts=list[6272,], ends=list[7168,], )
paddle.slice(Tensor([34880, 1280],"bfloat16"), axes=list[0,], starts=list[0,], ends=list[4360,], )
paddle.slice(Tensor([3924, 7168],"float32"), axes=list[-1,], starts=list[3584,], ends=list[4480,], )
paddle.slice(Tensor([5744, 7168],"float32"), axes=list[-1,], starts=list[5376,], ends=list[6272,], )
paddle.slice(Tensor([5833, 7168],"float32"), axes=list[-1,], starts=list[6272,], ends=list[7168,], )
paddle.slice(Tensor([52352, 1280],"bfloat16"), axes=list[0,], starts=list[26176,], ends=list[32720,], )
paddle.slice(Tensor([5814, 7168],"float32"), axes=list[-1,], starts=list[3584,], ends=list[4480,], )
paddle.slice(Tensor([50816, 1280],"bfloat16"), axes=list[0,], starts=list[12704,], ends=list[19056,], )
paddle.slice(Tensor([23616, 1280],"bfloat16"), axes=list[0,], starts=list[0,], ends=list[2952,], )
paddle.slice(Tensor([5572, 7168],"bfloat16"), axes=list[-1,], starts=list[3584,], ends=list[4480,], )
paddle.slice(Tensor([5488, 7168],"bfloat16"), axes=list[-1,], starts=list[0,], ends=list[896,], )
paddle.slice(Tensor([22528, 1280],"bfloat16"), axes=list[0,], starts=list[0,], ends=list[2816,], )
paddle.slice(Tensor([5824, 7168],"float32"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([6078, 7168],"float32"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([5578, 7168],"float32"), axes=list[-1,], starts=list[3584,], ends=list[4480,], )
paddle.slice(Tensor([5859, 7168],"float32"), axes=list[-1,], starts=list[6272,], ends=list[7168,], )
paddle.slice(Tensor([5840, 7168],"bfloat16"), axes=list[-1,], starts=list[896,], ends=list[1792,], )
paddle.slice(Tensor([26816, 1280],"bfloat16"), axes=list[0,], starts=list[3352,], ends=list[6704,], )
paddle.slice(Tensor([5818, 7168],"bfloat16"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([49024, 1280],"bfloat16"), axes=list[0,], starts=list[36768,], ends=list[42896,], )
paddle.slice(Tensor([44416, 1280],"bfloat16"), axes=list[0,], starts=list[38864,], ends=list[44416,], )
paddle.slice(Tensor([35712, 1280],"bfloat16"), axes=list[0,], starts=list[8928,], ends=list[13392,], )
paddle.slice(Tensor([5824, 7168],"float32"), axes=list[-1,], starts=list[896,], ends=list[1792,], )
paddle.slice(Tensor([5801, 7168],"float32"), axes=list[-1,], starts=list[5376,], ends=list[6272,], )
paddle.slice(Tensor([5544, 7168],"float32"), axes=list[-1,], starts=list[4480,], ends=list[5376,], )
paddle.slice(Tensor([27200, 1280],"bfloat16"), axes=list[0,], starts=list[10200,], ends=list[13600,], )
paddle.slice(Tensor([24576, 1280],"bfloat16"), axes=list[0,], starts=list[15360,], ends=list[18432,], )
paddle.slice(Tensor([22528, 1280],"bfloat16"), axes=list[0,], starts=list[2816,], ends=list[5632,], )
paddle.slice(Tensor([40512, 1280],"bfloat16"), axes=list[0,], starts=list[5064,], ends=list[10128,], )
paddle.slice(Tensor([57344, 1280],"bfloat16"), axes=list[0,], starts=list[14336,], ends=list[21504,], )
paddle.slice(Tensor([27328, 1280],"bfloat16"), axes=list[0,], starts=list[17080,], ends=list[20496,], )
paddle.slice(Tensor([44544, 1280],"bfloat16"), axes=list[0,], starts=list[11136,], ends=list[16704,], )
paddle.slice(Tensor([5833, 7168],"bfloat16"), axes=list[-1,], starts=list[6272,], ends=list[7168,], )
paddle.slice(Tensor([5996, 7168],"float32"), axes=list[-1,], starts=list[0,], ends=list[896,], )
paddle.slice(Tensor([5876, 7168],"bfloat16"), axes=list[-1,], starts=list[2688,], ends=list[3584,], )
paddle.slice(Tensor([5619, 7168],"float32"), axes=list[-1,], starts=list[4480,], ends=list[5376,], )
paddle.slice(Tensor([5849, 7168],"float32"), axes=list[-1,], starts=list[6272,], ends=list[7168,], )
paddle.slice(Tensor([48832, 1280],"bfloat16"), axes=list[0,], starts=list[30520,], ends=list[36624,], )
paddle.slice(Tensor([5555, 7168],"float32"), axes=list[-1,], starts=list[3584,], ends=list[4480,], )
paddle.slice(Tensor([3924, 7168],"float32"), axes=list[-1,], starts=list[4480,], ends=list[5376,], )
paddle.slice(Tensor([30656, 1280],"bfloat16"), axes=list[0,], starts=list[0,], ends=list[3832,], )
paddle.slice(Tensor([5800, 7168],"bfloat16"), axes=list[-1,], starts=list[4480,], ends=list[5376,], )
paddle.slice(Tensor([5787, 7168],"float32"), axes=list[-1,], starts=list[4480,], ends=list[5376,], )
paddle.slice(Tensor([44416, 1280],"bfloat16"), axes=list[0,], starts=list[22208,], ends=list[27760,], )
paddle.slice(Tensor([23616, 1280],"bfloat16"), axes=list[0,], starts=list[8856,], ends=list[11808,], )
paddle.slice(Tensor([5741, 7168],"float32"), axes=list[-1,], starts=list[5376,], ends=list[6272,], )
paddle.slice(Tensor([5969, 7168],"float32"), axes=list[-1,], starts=list[3584,], ends=list[4480,], )
paddle.slice(Tensor([5788, 7168],"bfloat16"), axes=list[-1,], starts=list[6272,], ends=list[7168,], )
paddle.slice(Tensor([5488, 7168],"float32"), axes=list[-1,], starts=list[3584,], ends=list[4480,], )
paddle.slice(Tensor([48832, 1280],"bfloat16"), axes=list[0,], starts=list[6104,], ends=list[12208,], )
paddle.slice(Tensor([15296, 1280],"bfloat16"), axes=list[0,], starts=list[7648,], ends=list[9560,], )
paddle.slice(Tensor([5807, 7168],"bfloat16"), axes=list[-1,], starts=list[3584,], ends=list[4480,], )
paddle.slice(Tensor([5814, 7168],"bfloat16"), axes=list[-1,], starts=list[0,], ends=list[896,], )
paddle.slice(Tensor([51840, 1280],"bfloat16"), axes=list[0,], starts=list[25920,], ends=list[32400,], )
paddle.slice(Tensor([5761, 7168],"float32"), axes=list[-1,], starts=list[5376,], ends=list[6272,], )
paddle.slice(Tensor([5833, 7168],"float32"), axes=list[-1,], starts=list[2688,], ends=list[3584,], )
paddle.slice(Tensor([5876, 7168],"float32"), axes=list[-1,], starts=list[1792,], ends=list[2688,], )
paddle.slice(Tensor([5807, 7168],"float32"), axes=list[-1,], starts=list[5376,], ends=list[6272,], )
paddle.slice(Tensor([50368, 1280],"bfloat16"), axes=list[0,], starts=list[37776,], ends=list[44072,], )
paddle.slice(Tensor([5801, 7168],"float32"), axes=list[-1,], starts=list[896,], ends=list[1792,], )
paddle.slice_scatter(Tensor([380283564, 6],"int32"), Tensor([380283564, 2],"int32"), axes=list[1,], starts=list[2,], ends=list[6,], strides=list[2,], )
paddle.slice_scatter(Tensor([8, 9, 59652324],"float16"), Tensor([1, 9, 1],"float16"), axes=list[0,2,], starts=list[2,3,], ends=list[7,5,], strides=list[3,2,], )
paddle.split(Tensor([7168, 3584],"float8_e4m3fn"), num_or_sections=list[512,0,0,1536,0,1536,], axis=-1, )
paddle.split(Tensor([7168, 14336],"float8_e4m3fn"), num_or_sections=list[4096,3072,1536,512,512,4608,], axis=-1, )
paddle.split(Tensor([7168, 18944],"float8_e4m3fn"), num_or_sections=list[512,7680,512,5632,4096,512,], axis=-1, )
paddle.split(Tensor([7168, 14336],"float8_e4m3fn"), num_or_sections=list[2048,512,512,3072,7168,1024,], axis=-1, )
paddle.split(Tensor([3584, 18432],"float8_e4m3fn"), num_or_sections=list[6656,1536,0,4608,512,5120,], axis=-1, )
paddle.split(Tensor([7168, 12800],"float8_e4m3fn"), num_or_sections=list[512,3072,6144,2048,512,512,], axis=-1, )
paddle.split(Tensor([7168, 8192],"float8_e4m3fn"), num_or_sections=list[0,4608,512,0,2560,512,], axis=-1, )
paddle.split(Tensor([7168, 26624],"float8_e4m3fn"), num_or_sections=list[1536,1536,14336,512,512,8192,], axis=-1, )
paddle.split(Tensor([3584, 36864],"float8_e4m3fn"), num_or_sections=list[0,0,512,0,12800,23552,], axis=-1, )
paddle.split(Tensor([7168, 29696],"float8_e4m3fn"), num_or_sections=list[8192,18944,1024,1024,512,0,], axis=-1, )
paddle.split(Tensor([164, 7168],"float32"), num_or_sections=list[4,0,4,12,8,136,], axis=0, )
paddle.split(Tensor([3584, 23552],"float8_e4m3fn"), num_or_sections=list[1024,512,14336,0,6144,1536,], axis=-1, )
paddle.split(Tensor([192, 7168],"float32"), num_or_sections=list[12,88,4,4,4,80,], axis=0, )
paddle.split(Tensor([7168, 33792],"float8_e4m3fn"), num_or_sections=list[512,512,28160,0,4096,512,], axis=-1, )
paddle.split(Tensor([3584, 15872],"float8_e4m3fn"), num_or_sections=list[1024,14336,0,512,0,0,], axis=-1, )
paddle.split(Tensor([7168, 7168],"float8_e4m3fn"), num_or_sections=list[1024,512,4608,512,0,512,], axis=-1, )
paddle.split(Tensor([7168, 17920],"float8_e4m3fn"), num_or_sections=list[4096,512,512,1024,512,11264,], axis=-1, )
paddle.split(Tensor([220, 7168],"float32"), num_or_sections=list[4,8,120,4,8,76,], axis=0, )
paddle.split(Tensor([144, 7168],"float32"), num_or_sections=list[4,28,44,4,0,64,], axis=0, )
paddle.split(Tensor([3584, 12800],"float8_e4m3fn"), num_or_sections=list[512,512,1024,4096,512,6144,], axis=-1, )
paddle.split(Tensor([3584, 21504],"float8_e4m3fn"), num_or_sections=list[1024,0,3584,16384,0,512,], axis=-1, )
paddle.split(Tensor([252, 7168],"float32"), num_or_sections=list[0,4,8,24,104,112,], axis=0, )
paddle.split(Tensor([3584, 11776],"float8_e4m3fn"), num_or_sections=list[2560,3584,1536,3072,512,512,], axis=-1, )
paddle.split(Tensor([7168, 14336],"float8_e4m3fn"), num_or_sections=list[2560,2048,7168,512,0,2048,], axis=-1, )
paddle.split(Tensor([3584, 19456],"float8_e4m3fn"), num_or_sections=list[0,12288,5120,512,512,1024,], axis=-1, )
paddle.split(Tensor([7168, 14336],"float8_e4m3fn"), num_or_sections=list[3072,512,512,512,512,9216,], axis=-1, )
paddle.split(Tensor([3584, 15360],"float8_e4m3fn"), num_or_sections=list[4608,2560,512,0,7168,512,], axis=-1, )
paddle.split(Tensor([184, 7168],"float32"), num_or_sections=list[4,0,152,20,4,4,], axis=0, )
paddle.split(Tensor([7168, 18944],"float8_e4m3fn"), num_or_sections=list[1024,7168,1024,512,8704,512,], axis=-1, )
paddle.split(Tensor([7168, 13312],"float8_e4m3fn"), num_or_sections=list[4096,0,1536,512,7168,0,], axis=-1, )
paddle.split(Tensor([7168, 15360],"float8_e4m3fn"), num_or_sections=list[512,9216,0,0,5120,512,], axis=-1, )
paddle.split(Tensor([7168, 15360],"float8_e4m3fn"), num_or_sections=list[512,5120,512,512,8704,0,], axis=-1, )
paddle.split(Tensor([3584, 25600],"float8_e4m3fn"), num_or_sections=list[9216,3584,6144,3584,512,2560,], axis=-1, )
paddle.split(Tensor([7168, 16384],"float8_e4m3fn"), num_or_sections=list[8192,4608,512,512,512,2048,], axis=-1, )
paddle.split(Tensor([140, 7168],"float32"), num_or_sections=list[8,8,72,12,4,36,], axis=0, )
paddle.split(Tensor([3584, 14848],"float8_e4m3fn"), num_or_sections=list[512,0,0,2048,1024,11264,], axis=-1, )
paddle.split(Tensor([7168, 10240],"float8_e4m3fn"), num_or_sections=list[2048,1024,4096,2048,512,512,], axis=-1, )
paddle.split(Tensor([7168, 19968],"float8_e4m3fn"), num_or_sections=list[8704,512,2048,2560,512,5632,], axis=-1, )
paddle.split(Tensor([7168, 10240],"float8_e4m3fn"), num_or_sections=list[2560,1024,512,512,5120,512,], axis=-1, )
paddle.split(Tensor([156, 7168],"float32"), num_or_sections=list[4,4,4,140,0,4,], axis=0, )
paddle.split(Tensor([7168, 14336],"float8_e4m3fn"), num_or_sections=list[512,1024,512,7168,3584,1536,], axis=-1, )
paddle.split(Tensor([152, 7168],"float32"), num_or_sections=list[8,56,8,4,4,72,], axis=0, )
paddle.split(Tensor([236, 7168],"float32"), num_or_sections=list[220,4,12,0,0,0,], axis=0, )
paddle.split(Tensor([3584, 11264],"float8_e4m3fn"), num_or_sections=list[2560,1024,2048,0,2560,3072,], axis=-1, )
paddle.split(Tensor([3584, 13824],"float8_e4m3fn"), num_or_sections=list[0,1024,512,2560,512,9216,], axis=-1, )
paddle.split(Tensor([7168, 52736],"float8_e4m3fn"), num_or_sections=list[512,512,50176,512,1024,0,], axis=-1, )
paddle.split(Tensor([7168, 8192],"float8_e4m3fn"), num_or_sections=list[2560,512,0,3584,1024,512,], axis=-1, )
paddle.split(Tensor([188, 7168],"float32"), num_or_sections=list[84,20,4,4,20,56,], axis=0, )
paddle.split(Tensor([164, 7168],"float32"), num_or_sections=list[52,60,12,4,4,32,], axis=0, )
paddle.split(Tensor([7168, 15360],"float8_e4m3fn"), num_or_sections=list[2048,0,8704,4096,512,0,], axis=-1, )
paddle.split(Tensor([7168, 9216],"float8_e4m3fn"), num_or_sections=list[2560,3072,512,1024,1536,512,], axis=-1, )
paddle.split(Tensor([7168, 8704],"float8_e4m3fn"), num_or_sections=list[3584,0,4096,0,512,512,], axis=-1, )
paddle.split(Tensor([7168, 8704],"float8_e4m3fn"), num_or_sections=list[2560,512,5120,512,0,0,], axis=-1, )
paddle.split(Tensor([3584, 15360],"float8_e4m3fn"), num_or_sections=list[0,5632,0,8192,512,1024,], axis=-1, )
paddle.split(Tensor([7168, 16384],"float8_e4m3fn"), num_or_sections=list[512,1024,512,1024,5120,8192,], axis=-1, )
paddle.split(Tensor([3584, 17408],"float8_e4m3fn"), num_or_sections=list[1024,5120,2560,1024,1536,6144,], axis=-1, )
paddle.split(Tensor([228, 7168],"float32"), num_or_sections=list[4,4,16,172,32,0,], axis=0, )
paddle.split(Tensor([7168, 7168],"float8_e4m3fn"), num_or_sections=list[512,0,4096,2560,0,0,], axis=-1, )
paddle.split(Tensor([7168, 20480],"float8_e4m3fn"), num_or_sections=list[512,7680,512,512,11264,0,], axis=-1, )
paddle.split(Tensor([7168, 14848],"float8_e4m3fn"), num_or_sections=list[4096,3072,512,512,6656,0,], axis=-1, )
paddle.split(Tensor([7168, 22016],"float8_e4m3fn"), num_or_sections=list[2048,1024,7168,4608,512,6656,], axis=-1, )
paddle.split(Tensor([3584, 21504],"float8_e4m3fn"), num_or_sections=list[0,0,1536,1024,5120,13824,], axis=-1, )
paddle.split(Tensor([3584, 17408],"float8_e4m3fn"), num_or_sections=list[512,512,512,0,11776,4096,], axis=-1, )
paddle.split(Tensor([148, 7168],"float32"), num_or_sections=list[60,36,0,0,16,36,], axis=0, )
paddle.split(Tensor([3584, 11264],"float8_e4m3fn"), num_or_sections=list[7168,1024,1024,512,512,1024,], axis=-1, )
paddle.split(Tensor([3584, 12800],"float8_e4m3fn"), num_or_sections=list[2048,7168,0,0,2048,1536,], axis=-1, )
paddle.split(Tensor([3584, 10752],"float8_e4m3fn"), num_or_sections=list[512,7168,0,1024,1536,512,], axis=-1, )
paddle.split(Tensor([3584, 29696],"float8_e4m3fn"), num_or_sections=list[7168,20480,512,512,512,512,], axis=-1, )
paddle.split(Tensor([244, 7168],"float32"), num_or_sections=list[8,4,96,116,4,16,], axis=0, )
paddle.split(Tensor([296, 3584],"float32"), num_or_sections=list[4,220,4,60,4,4,], axis=0, )
paddle.split(Tensor([3584, 6144],"float8_e4m3fn"), num_or_sections=list[0,0,3072,512,1536,1024,], axis=-1, )
paddle.split(Tensor([7168, 14848],"float8_e4m3fn"), num_or_sections=list[9216,1024,3072,1536,0,0,], axis=-1, )
paddle.split(Tensor([7168, 20480],"float8_e4m3fn"), num_or_sections=list[512,0,512,17920,512,1024,], axis=-1, )
paddle.split(Tensor([3584, 22528],"float8_e4m3fn"), num_or_sections=list[1024,9728,1536,0,10240,0,], axis=-1, )
paddle.split(Tensor([7168, 12288],"float8_e4m3fn"), num_or_sections=list[0,0,0,12288,0,0,], axis=-1, )
paddle.split(Tensor([324, 3584],"float32"), num_or_sections=list[0,136,0,4,184,0,], axis=0, )
paddle.split(Tensor([156, 7168],"float32"), num_or_sections=list[60,44,4,8,4,36,], axis=0, )
paddle.split(Tensor([7168, 10240],"float8_e4m3fn"), num_or_sections=list[6144,3072,0,512,0,512,], axis=-1, )
paddle.split(Tensor([3584, 18432],"float8_e4m3fn"), num_or_sections=list[4096,0,6656,512,1536,5632,], axis=-1, )
paddle.split(Tensor([7168, 15872],"float8_e4m3fn"), num_or_sections=list[3072,1024,8192,512,0,3072,], axis=-1, )
paddle.split(Tensor([7168, 18944],"float8_e4m3fn"), num_or_sections=list[1536,1536,6656,1536,6656,1024,], axis=-1, )
paddle.split(Tensor([3584, 7168],"float8_e4m3fn"), num_or_sections=list[0,512,2560,4096,0,0,], axis=-1, )
paddle.split(Tensor([3584, 23040],"float8_e4m3fn"), num_or_sections=list[0,512,0,21504,512,512,], axis=-1, )
paddle.split(Tensor([7168, 9216],"float8_e4m3fn"), num_or_sections=list[512,512,0,3072,4096,1024,], axis=-1, )
paddle.split(Tensor([3584, 20992],"float8_e4m3fn"), num_or_sections=list[512,2048,512,9216,512,8192,], axis=-1, )
paddle.split(Tensor([7168, 9216],"float8_e4m3fn"), num_or_sections=list[1024,1024,512,512,2560,3584,], axis=-1, )
paddle.split(Tensor([7168, 32768],"float8_e4m3fn"), num_or_sections=list[9728,4096,7680,512,512,10240,], axis=-1, )
paddle.split(Tensor([7168, 27648],"float8_e4m3fn"), num_or_sections=list[2048,512,9728,10240,5120,0,], axis=-1, )
paddle.split(Tensor([7168, 4608],"float8_e4m3fn"), num_or_sections=list[0,3072,0,0,1024,512,], axis=-1, )
paddle.split(Tensor([3584, 20480],"float8_e4m3fn"), num_or_sections=list[0,14336,5120,512,512,0,], axis=-1, )
paddle.split(Tensor([7168, 13312],"float8_e4m3fn"), num_or_sections=list[3072,5120,512,512,0,4096,], axis=-1, )
paddle.split(Tensor([3584, 18432],"float8_e4m3fn"), num_or_sections=list[512,512,512,16896,0,0,], axis=-1, )
paddle.split(Tensor([3584, 15360],"float8_e4m3fn"), num_or_sections=list[512,1024,512,512,4608,8192,], axis=-1, )
paddle.split(Tensor([236, 7168],"float32"), num_or_sections=list[24,4,4,152,44,8,], axis=0, )
paddle.split(Tensor([3584, 29696],"float8_e4m3fn"), num_or_sections=list[512,6656,0,6656,7680,8192,], axis=-1, )
paddle.split(Tensor([196, 7168],"float32"), num_or_sections=list[84,16,20,12,60,4,], axis=0, )
paddle.split(Tensor([3584, 13824],"float8_e4m3fn"), num_or_sections=list[512,4096,7680,1536,0,0,], axis=-1, )
paddle.split(Tensor([3584, 14848],"float8_e4m3fn"), num_or_sections=list[1536,0,512,11776,512,512,], axis=-1, )
paddle.split(Tensor([7168, 24064],"float8_e4m3fn"), num_or_sections=list[0,512,21504,512,512,1024,], axis=-1, )
paddle.split(Tensor([3584, 13824],"float8_e4m3fn"), num_or_sections=list[512,9216,512,3072,0,512,], axis=-1, )
paddle.sqrt(Tensor([124, 1, 1314345, 14],"float32"), )
paddle.sqrt(x=Tensor([13, 175515491, 1],"float32"), )
paddle.sqrt(Tensor([128, 1, 28, 636636],"float32"), )
paddle.sqrt(Tensor([128, 1, 56, 318318],"float32"), )
paddle.sqrt(Tensor([128, 1, 96, 185686],"float32"), )
paddle.sqrt(Tensor([128, 1, 96, 96],"float32"), )
paddle.sqrt(Tensor([1, 13, 175515491],"float32"), )
paddle.sqrt(Tensor([124, 1, 48, 383351],"float32"), )
paddle.sqrt(Tensor([247581, 1, 96, 96],"float32"), )
paddle.sqrt(Tensor([128, 1, 24, 742742],"float32"), )
paddle.sqrt(Tensor([1, 14, 162978670],"float32"), )
paddle.sqrt(Tensor([124, 1, 56, 328587],"float32"), )
paddle.sqrt(Tensor([1, 3, 1431655766],"float16"), )
paddle.sqrt(Tensor([1, 3, 760567127],"float32"), )
paddle.sqrt(Tensor([16, 727584, 14, 14],"float32"), )
paddle.sqrt(x=Tensor([13, 1, 175515491],"float32"), )
paddle.sqrt(Tensor([128, 30948, 24, 24],"float32"), )
paddle.sqrt(Tensor([124, 1, 96, 191676],"float32"), )
paddle.sqrt(Tensor([124, 1, 328587, 56],"float32"), )
paddle.sqrt(Tensor([760567127, 3, 1],"float32"), )
paddle.sqrt(Tensor([456340276, 5, 1],"float32"), )
paddle.sqrt(Tensor([21913099, 1, 14, 14],"float16"), )
paddle.sqrt(Tensor([3961288, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([103, 22152441],"float32"), )
paddle.sqrt(Tensor([64, 3, 256, 256],"float32"), )
paddle.sqrt(Tensor([16, 1, 10186167, 14],"float32"), )
paddle.sqrt(Tensor([124, 93882, 14, 14],"float32"), )
paddle.sqrt(Tensor([128, 1, 48, 371371],"float32"), )
paddle.sqrt(Tensor([429496730, 10],"float16"), )
paddle.sqrt(Tensor([4, 15, 3, 256, 49517],"float32"), )
paddle.sqrt(Tensor([124, 31946, 24, 24],"float32"), )
paddle.sqrt(x=Tensor([16, 142606337, 1],"float32"), )
paddle.sqrt(Tensor([2910334, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([16, 513, 213],"float32"), )
paddle.sqrt(Tensor([1, 11, 207427399],"float32"), )
paddle.sqrt(Tensor([128, 1, 2396746, 14],"float16"), )
paddle.sqrt(Tensor([1, 4, 570425345],"float32"), )
paddle.sqrt(Tensor([128, 90948, 14, 14],"float32"), )
paddle.sqrt(Tensor([128, 1, 14, 1273271],"float32"), )
paddle.sqrt(Tensor([128, 1, 371371, 48],"float32"), )
paddle.sqrt(Tensor([128, 1, 56, 599187],"float16"), )
paddle.sqrt(Tensor([114085069, 20, 1],"float32"), )
paddle.sqrt(Tensor([4, 15, 3, 49517, 256],"float32"), )
paddle.sqrt(Tensor([1, 10, 228170138],"float32"), )
paddle.sqrt(Tensor([2, 139265, 512, 4, 4],"float32"), )
paddle.sqrt(Tensor([124, 1, 191676, 96],"float32"), )
paddle.sqrt(Tensor([128, 1, 742742, 24],"float32"), )
paddle.sqrt(Tensor([1, 16, 142606337],"float32"), )
paddle.sqrt(Tensor([128, 1, 185686, 96],"float32"), )
paddle.sqrt(Tensor([4, 2902, 3, 256, 256],"float32"), )
paddle.sqrt(Tensor([16, 1, 142606337, 1],"float32"), )
paddle.sqrt(Tensor([1, 2281701379, 1],"float32"), )
paddle.sqrt(Tensor([2281701379],"float32"), )
paddle.sqrt(x=Tensor([3, 760567127, 1],"float32"), )
paddle.sqrt(Tensor([162978670, 14, 1],"float32"), )
paddle.sqrt(Tensor([100, 22817014],"float32"), )
paddle.sqrt(Tensor([4294967297],"float16"), )
paddle.sqrt(Tensor([128, 5685, 56, 56],"float32"), )
paddle.sqrt(Tensor([24422, 93431],"float32"), )
paddle.sqrt(Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.sqrt(Tensor([1140850690, 2, 1],"float32"), )
paddle.sqrt(Tensor([124, 23471, 28, 28],"float32"), )
paddle.sqrt(Tensor([2, 1, 512, 4, 557057],"float32"), )
paddle.sqrt(x=Tensor([1140850690, 1, 2],"float32"), )
paddle.sqrt(Tensor([16, 1025, 107],"float32"), )
paddle.sqrt(Tensor([124, 1, 24, 766701],"float32"), )
paddle.sqrt(Tensor([1, 1140850690, 2],"float32"), )
paddle.sqrt(Tensor([124, 1, 383351, 48],"float32"), )
paddle.sqrt(Tensor([142606337, 16, 1],"float32"), )
paddle.sqrt(Tensor([111, 20555869],"float32"), )
paddle.sqrt(Tensor([1, 12, 190141782],"float32"), )
paddle.sqrt(Tensor([2, 1, 71303169, 4, 4],"float32"), )
paddle.sqrt(Tensor([175515491, 13, 1],"float32"), )
paddle.sqrt(Tensor([1, 1, 4294967297],"float16"), )
paddle.sqrt(Tensor([124, 7987, 48, 48],"float32"), )
paddle.sqrt(Tensor([1, 1, 2281701379],"float32"), )
paddle.sqrt(Tensor([124, 1, 96, 96],"float32"), )
paddle.sqrt(Tensor([124, 1, 657173, 28],"float32"), )
paddle.sqrt(Tensor([104, 21939437],"float32"), )
paddle.sqrt(x=Tensor([1431655766, 3],"float16"), )
paddle.sqrt(Tensor([228170138, 10, 1],"float32"), )
paddle.sqrt(Tensor([2293168, 995],"float32"), )
paddle.sqrt(Tensor([727584, 1, 56, 56],"float32"), )
paddle.sqrt(x=Tensor([4294967297],"float16"), name=None, )
paddle.sqrt(Tensor([124, 1997, 96, 96],"float32"), )
paddle.sqrt(Tensor([2, 1, 512, 557057, 4],"float32"), )
paddle.sqrt(x=Tensor([2, 570425345, 2],"float32"), )
paddle.sqrt(x=Tensor([16, 1, 142606337],"float32"), )
paddle.sqrt(Tensor([143165577, 3, 10],"float16"), )
paddle.sqrt(Tensor([11641334, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([570425345, 2, 2],"float32"), )
paddle.sqrt(Tensor([124, 1, 766701, 24],"float32"), )
paddle.sqrt(Tensor([128, 1, 1273271, 14],"float32"), )
paddle.sqrt(Tensor([1, 4294967297],"float16"), )
paddle.sqrt(Tensor([570425345, 4],"float32"), )
paddle.sqrt(x=Tensor([16, 71303169, 2],"float32"), )
paddle.sqrt(Tensor([128, 1935, 96, 96],"float32"), )
paddle.sqrt(Tensor([16, 142606337, 1, 1],"float32"), )
paddle.sqrt(Tensor([1, 2, 1140850690],"float32"), )
paddle.sqrt(Tensor([2281701379, 1],"float32"), )
paddle.square(Tensor([8, 16, 33554433],"float16"), )
paddle.square(Tensor([1168, 1953512],"float32"), name=None, )
paddle.square(Tensor([2147483649, 2],"float16"), )
paddle.square(Tensor([64, 64, 1048577, 1],"float16"), name=None, )
paddle.square(Tensor([16, 71303169, 2],"float32"), )
paddle.square(Tensor([2, 96, 11883862],"float32"), name=None, )
paddle.square(Tensor([2281701379, 1],"float32"), name=None, )
paddle.square(Tensor([3548, 12, 170, 1],"float32"), )
paddle.square(Tensor([17152, 133029],"float32"), )
paddle.square(Tensor([3548, 12, 53592, 1],"float32"), )
paddle.square(Tensor([8, 128, 64, 65537],"float16"), )
paddle.square(Tensor([128, 17825793],"float32"), name=None, )
paddle.square(Tensor([10201, 223675],"float32"), name=None, )
paddle.square(Tensor([64, 1451, 3, 64, 128],"float32"), name=None, )
paddle.square(Tensor([8, 16777217, 32],"float16"), )
paddle.square(Tensor([3, 7605672, 10, 10],"float32"), name=None, )
paddle.square(Tensor([3548, 3783, 170, 1],"float32"), )
paddle.square(Tensor([512, 1485483, 3],"float32"), name=None, )
paddle.square(Tensor([1000, 1000],"float32"), )
paddle.square(Tensor([100, 22817014],"float32"), name=None, )
paddle.square(Tensor([15548, 146753],"float32"), )
paddle.square(Tensor([1291, 1767391],"float32"), )
paddle.square(Tensor([256, 2970966, 3],"float32"), name=None, )
paddle.square(Tensor([1138574, 501, 4],"float32"), )
paddle.square(Tensor([4456449, 512],"float32"), )
paddle.square(Tensor([8, 8193, 256, 256],"float16"), )
paddle.square(Tensor([2281701379],"float32"), )
paddle.square(Tensor([104, 21939437],"float32"), )
paddle.square(Tensor([1024, 4194305],"float16"), )
paddle.square(Tensor([7605672, 3, 10, 10],"float32"), )
paddle.square(Tensor([1, 2281701379],"float32"), name=None, )
paddle.square(Tensor([16, 96, 1485483],"float32"), )
paddle.square(Tensor([32, 501, 142322],"float32"), )
paddle.square(Tensor([14350324, 159],"float32"), )
paddle.square(Tensor([2049, 32, 256, 256],"float16"), )
paddle.square(Tensor([2962708, 1],"float32"), name=None, )
paddle.square(Tensor([1609, 1418087],"float32"), name=None, )
paddle.square(Tensor([64, 3, 3, 30948, 128],"float32"), name=None, )
paddle.square(Tensor([64, 1048577, 64, 1],"float16"), name=None, )
paddle.square(Tensor([64, 4, 3, 23211, 128],"float32"), name=None, )
paddle.square(Tensor([26, 2742430, 32],"float32"), )
paddle.square(Tensor([64, 557057, 64, 1],"float32"), name=None, )
paddle.square(Tensor([67108865, 1, 64, 1],"float16"), name=None, )
paddle.square(Tensor([2, 1501, 760061],"float32"), )
paddle.square(Tensor([64, 3, 3, 64, 61896],"float32"), name=None, )
paddle.square(Tensor([380283564, 2, 3],"float32"), )
paddle.square(Tensor([10, 76056713, 3],"float32"), )
paddle.square(Tensor([2, 114085069, 10],"float32"), name=None, )
paddle.square(Tensor([13, 7, 25073642],"float32"), )
paddle.square(Tensor([23767723, 96, 1],"float32"), )
paddle.square(Tensor([64, 1, 67108865, 1],"float16"), name=None, )
paddle.square(Tensor([8388609, 16, 32],"float16"), )
paddle.square(Tensor([429496730, 10],"float16"), )
paddle.square(Tensor([10, 228170138],"float32"), name=None, )
paddle.square(Tensor([10186167, 7, 32],"float32"), )
paddle.square(Tensor([1300, 1755155],"float32"), name=None, )
paddle.square(Tensor([68, 33554433, 1],"float32"), )
paddle.square(Tensor([32, 17825793, 4],"float32"), )
paddle.square(Tensor([2281702, 1000],"float32"), )
paddle.square(Tensor([1024, 1024],"float32"), )
paddle.square(Tensor([228170138, 10],"float32"), )
paddle.square(Tensor([64, 64, 1, 1048577],"float16"), name=None, )
paddle.square(Tensor([6068355, 376, 1],"float32"), )
paddle.square(Tensor([2, 10, 114085069],"float32"), name=None, )
paddle.square(Tensor([64, 3, 1451, 64, 128],"float32"), name=None, )
paddle.square(Tensor([104, 93431],"float32"), )
paddle.square(Tensor([20, 114085069],"float32"), name=None, )
paddle.square(Tensor([256, 128, 69633],"float32"), name=None, )
paddle.square(Tensor([64, 4, 3, 64, 128],"float32"), name=None, )
paddle.square(Tensor([3, 2, 3, 126761188],"float32"), )
paddle.square(Tensor([8, 256, 64, 32769],"float16"), )
paddle.square(Tensor([16, 142606337],"float32"), )
paddle.square(Tensor([10240, 222823],"float32"), name=None, )
paddle.square(Tensor([512, 16, 278529],"float32"), name=None, )
paddle.square(Tensor([2, 114085069, 10],"float32"), )
paddle.square(Tensor([100, 376, 60684],"float32"), )
paddle.square(Tensor([26, 7, 12536821],"float32"), )
paddle.square(Tensor([52, 1371215, 32],"float32"), )
paddle.square(Tensor([24422, 93431],"float32"), )
paddle.square(Tensor([1, 1, 2281701379],"float32"), )
paddle.square(Tensor([100, 22817014, 1],"float32"), )
paddle.square(Tensor([1024, 2228225],"float32"), )
paddle.square(x=Tensor([4294967297],"float16"), )
paddle.square(Tensor([17825793, 128],"float32"), )
paddle.square(Tensor([4294968, 1000],"float16"), )
paddle.square(Tensor([47535446, 16, 3],"float32"), name=None, )
paddle.square(Tensor([64, 4, 1089, 64, 128],"float32"), name=None, )
paddle.square(Tensor([1024, 2228225],"float32"), name=None, )
paddle.square(Tensor([4, 536870913, 2],"float16"), )
paddle.square(Tensor([1209, 1887264],"float32"), name=None, )
paddle.square(Tensor([8, 256, 32769, 64],"float16"), )
paddle.square(Tensor([1200, 1901418],"float32"), )
paddle.square(Tensor([128, 17825793],"float32"), )
paddle.square(Tensor([1520121, 1501, 1],"float32"), )
paddle.square(Tensor([2281701379, 1],"float32"), )
paddle.square(Tensor([17825793, 128, 1],"float32"), name=None, )
paddle.square(Tensor([256, 8912897, 1],"float32"), name=None, )
paddle.square(Tensor([50, 1501, 30403],"float32"), )
paddle.square(Tensor([2281701379, 1, 1],"float32"), )
paddle.square(Tensor([4294967297],"float16"), )
paddle.squeeze(Tensor([8, 512, 56, 100, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([80, 28521268],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([4294967297, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([1914, 2048, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([1, 2, 380283564, 3],"float32"), )
paddle.squeeze(Tensor([2023, 2048, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([4, 1024, 557057, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 1140850690],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([3, 1, 3, 1600, 158452],"float32"), axis=1, )
paddle.squeeze(Tensor([64, 699051, 96],"float16"), axis=1, )
paddle.squeeze(Tensor([4294967297],"float16"), axis=0, )
paddle.squeeze(Tensor([2048, 2048, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1, 3, 760567127],"float32"), axis=0, )
paddle.squeeze(Tensor([4, 570425345],"float32"), list[-1,], )
paddle.squeeze(Tensor([4, 125, 8589935, 1],"float16"), -1, )
paddle.squeeze(Tensor([2659, 1, 800, 1073],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 8, 16, 278529, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([1024, 2228225, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1914, 2048, 1, 1096],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([65191468, 35, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([4053, 187679, 3],"float32"), axis=0, )
paddle.squeeze(x=Tensor([715827883, 2, 1, 3],"float16"), axis=Tensor([2],"int64"), )
paddle.squeeze(Tensor([1, 2281701379],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([936, 187679, 13],"float32"), axis=0, )
paddle.squeeze(Tensor([429497, 1, 100, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 536870913],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([4, 512, 512, 4097],"float16"), -1, )
paddle.squeeze(Tensor([1, 1, 800, 1426],"int64"), axis=1, )
paddle.squeeze(x=Tensor([1, 2, 380283564, 3],"int32"), )
paddle.squeeze(Tensor([2, 1140850690, 1],"float32"), )
paddle.squeeze(Tensor([22817014, 1, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([1000, 2281702],"float32"), axis=-1, )
paddle.squeeze(Tensor([3, 1, 3, 3, 84507459],"float32"), axis=1, )
paddle.squeeze(Tensor([1, 2, 380283564, 3],"float32"), axis=Tensor([2],"int64"), )
paddle.squeeze(x=Tensor([715827883, 2, 1, 3],"float16"), axis=-4, )
paddle.squeeze(Tensor([2025, 2048, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 1280, 1, 13927],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([4, 1024, 1024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([285212673, 1, 8],"float32"), list[1,], )
paddle.squeeze(Tensor([1, 2, 1, 1140850690],"float32"), axis=Tensor([2],"int64"), )
paddle.squeeze(x=Tensor([1, 2, 1, 2147483649],"int8"), )
paddle.squeeze(Tensor([1, 1, 800, 1376],"int32"), axis=1, )
paddle.squeeze(Tensor([10, 42949673, 10],"float16"), )
paddle.squeeze(Tensor([2003, 2048, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([858993460, 5],"float16"), )
paddle.squeeze(Tensor([2036, 2048, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([104, 1, 93431],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([1431655766, 3],"float16"), axis=0, )
paddle.squeeze(Tensor([8, 1, 2852127, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([1024, 2048, 1, 1089],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 1280, 26215, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([3, 6, 3, 1, 15907287, 5],"float16"), axis=3, )
paddle.squeeze(Tensor([1024, 2048, 1089, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1, 1, 800, 1423],"int64"), axis=1, )
paddle.squeeze(Tensor([477218589, 3, 3],"float16"), axis=0, )
paddle.squeeze(Tensor([2, 214748365, 2, 5],"float16"), axis=-1, )
paddle.squeeze(Tensor([3, 1, 40, 6338060, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([2, 1024, 1114113, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2281701379, 1],"float32"), axis=1, )
paddle.squeeze(Tensor([78679358, 29, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([19669840, 2, 1, 58],"float32"), )
paddle.squeeze(Tensor([8, 28522, 100, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([103, 22152441, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1950, 2048, 1, 572],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([421120, 25, 4],"float32"), axis=-1, )
paddle.squeeze(Tensor([128, 1, 17825793],"float32"), )
paddle.squeeze(Tensor([325957340, 7, 1],"float32"), -1, )
paddle.squeeze(Tensor([4, 557057, 1024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2177, 1024, 1024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([3, 52818, 3, 3, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([8, 2048, 2843, 7, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([5, 858993460],"float16"), -1, )
paddle.squeeze(Tensor([5, 214748365, 4],"float16"), axis=1, )
paddle.squeeze(Tensor([2, 1140850690],"float32"), axis=1, )
paddle.squeeze(Tensor([100, 42949673],"float16"), -1, )
paddle.squeeze(Tensor([32, 1, 71303169],"float32"), axis=1, )
paddle.squeeze(Tensor([380283564, 2, 1, 3],"float32"), axis=Tensor([2],"int64"), )
paddle.squeeze(Tensor([1, 2, 19669840, 58],"float32"), )
paddle.squeeze(Tensor([10, 228170138],"int32"), axis=-1, )
paddle.squeeze(Tensor([512, 4456449],"float32"), list[-1,], )
paddle.squeeze(Tensor([128, 1280, 1, 26215],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 17825793],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([1914, 2243975, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1921, 2048, 1, 1092],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([1, 2, 1, 1140850690],"float32"), )
paddle.squeeze(x=Tensor([380283564, 2, 1, 3],"float32"), )
paddle.squeeze(Tensor([2022, 2048, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([4, 512, 512, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([26336, 86639],"float32"), )
paddle.squeeze(Tensor([16, 356516, 400],"float32"), axis=1, )
paddle.squeeze(x=Tensor([715827883, 2, 1, 3],"int8"), )
paddle.squeeze(Tensor([3, 6, 3, 4, 19884108, 1],"float16"), axis=5, )
paddle.squeeze(Tensor([100, 4, 5704254],"float32"), axis=-1, )
paddle.squeeze(Tensor([101, 42524429, 1],"float16"), axis=-1, )
paddle.squeeze(Tensor([10, 4, 57042535],"float32"), axis=-1, )
paddle.squeeze(Tensor([512, 2048, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1, 1, 800, 1424],"int32"), axis=1, )
paddle.squeeze(x=Tensor([1, 1431655766, 1, 3],"float16"), axis=tuple(-4,-3,), )
paddle.squeeze(Tensor([1140850690, 2, 1],"float32"), axis=2, )
paddle.squeeze(Tensor([1, 1, 800, 1261],"int32"), axis=1, )
paddle.stack(tuple(Tensor([346086],"float32"),Tensor([346086],"float32"),Tensor([346086],"float32"),Tensor([346086],"float32"),), axis=1, )
paddle.stack(list[Tensor([1140851, 500, 4],"float32"),Tensor([1140851, 500, 4],"float32"),Tensor([1140851, 500, 4],"float32"),], )
paddle.stack(list[Tensor([36858, 61906],"float32"),], 0, )
paddle.stack(tuple(Tensor([268560],"float32"),Tensor([268560],"float32"),Tensor([268560],"float32"),Tensor([268560],"float32"),), axis=1, )
paddle.stack(list[Tensor([6128, 8, 2, 40],"bfloat16"),Tensor([6128, 8, 2, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([3072, 8, 2, 40],"bfloat16"),Tensor([3072, 8, 2, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([1912, 8, 2, 40],"bfloat16"),Tensor([1912, 8, 2, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([10, 2, 28521268, 4],"float32"),Tensor([10, 2, 28521268, 4],"float32"),], axis=0, )
paddle.stack(tuple(Tensor([250656],"float32"),Tensor([250656],"float32"),Tensor([250656],"float32"),Tensor([250656],"float32"),), axis=1, )
paddle.stack(list[Tensor([16660, 27],"float32"),Tensor([16660, 27],"float32"),Tensor([16660, 27],"float32"),Tensor([16660, 27],"float32"),], axis=1, )
paddle.stack(list[Tensor([35651585, 8, 8],"float32"),Tensor([35651585, 8, 8],"float32"),Tensor([35651585, 8, 8],"float32"),], axis=-3, )
paddle.stack(tuple(Tensor([1, 192, 144, 64],"float32"),Tensor([1, 192, 144, 64],"float32"),), axis=4, )
paddle.stack(list[Tensor([6, 28, 13581556],"float32"),Tensor([6, 28, 13581556],"float32"),Tensor([6, 28, 13581556],"float32"),], axis=-4, )
paddle.stack(list[Tensor([19125, 89],"float32"),Tensor([19125, 89],"float32"),Tensor([19125, 89],"float32"),Tensor([19125, 89],"float32"),], axis=1, )
paddle.stack(list[Tensor([2816, 8, 1, 40],"bfloat16"),Tensor([2816, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(tuple(Tensor([286464],"float32"),Tensor([286464],"float32"),Tensor([286464],"float32"),Tensor([286464],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([264978],"float32"),Tensor([264978],"float32"),Tensor([264978],"float32"),Tensor([264978],"float32"),), axis=1, )
paddle.stack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], 0, )
paddle.stack(list[Tensor([1, 570425345, 2, 2],"float32"),Tensor([1, 570425345, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([16660, 135],"float32"),Tensor([16660, 135],"float32"),Tensor([16660, 135],"float32"),Tensor([16660, 135],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 19],"float32"),Tensor([27540, 19],"float32"),Tensor([27540, 19],"float32"),Tensor([27540, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 35],"float32"),Tensor([34000, 35],"float32"),Tensor([34000, 35],"float32"),Tensor([34000, 35],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([286440],"float32"),Tensor([286440],"float32"),Tensor([286440],"float32"),Tensor([286440],"float32"),), axis=1, )
paddle.stack(list[Tensor([37450, 32, 476, 4],"float32"),Tensor([37450, 32, 476, 4],"float32"),Tensor([37450, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 25, 91268056],"float32"),Tensor([1, 25, 91268056],"float32"),], axis=-2, )
paddle.stack(list[Tensor([24565, 29],"float32"),Tensor([24565, 29],"float32"),Tensor([24565, 29],"float32"),Tensor([24565, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([32, 15, 8, 18569, 32],"float32"),Tensor([32, 15, 8, 18569, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([27540, 420],"float32"),Tensor([27540, 420],"float32"),Tensor([27540, 420],"float32"),Tensor([27540, 420],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([309255],"float32"),Tensor([309255],"float32"),Tensor([309255],"float32"),Tensor([309255],"float32"),), axis=1, )
paddle.stack(list[Tensor([6128, 8, 1, 40],"bfloat16"),Tensor([6128, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([16, 32, 400, 4],"float32"),Tensor([16, 32, 400, 4],"float32"),Tensor([16, 32, 400, 4],"float32"),], axis=-2, )
paddle.stack(tuple(Tensor([139265, 32, 32, 16],"float32"),Tensor([139265, 32, 32, 16],"float32"),), -1, )
paddle.stack(list[Tensor([4, 142606337, 4],"float32"),Tensor([4, 142606337, 4],"float32"),Tensor([4, 142606337, 4],"float32"),], )
paddle.stack(list[Tensor([27540, 405],"float32"),Tensor([27540, 405],"float32"),Tensor([27540, 405],"float32"),Tensor([27540, 405],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 83],"float32"),Tensor([19125, 83],"float32"),Tensor([19125, 83],"float32"),Tensor([19125, 83],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 15],"float32"),Tensor([24565, 15],"float32"),Tensor([24565, 15],"float32"),Tensor([24565, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 97],"float32"),Tensor([24565, 97],"float32"),Tensor([24565, 97],"float32"),Tensor([24565, 97],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 77],"float32"),Tensor([3598, 77],"float32"),Tensor([3598, 77],"float32"),Tensor([3598, 77],"float32"),], axis=1, )
paddle.stack(list[Tensor([5736, 8, 2, 40],"bfloat16"),Tensor([5736, 8, 2, 40],"bfloat16"),], axis=-1, )
paddle.stack(x=tuple(Tensor([128, 3, 576, 32],"float32"),Tensor([128, 3, 576, 32],"float32"),), axis=-1, )
paddle.stack(list[Tensor([7168, 8, 1, 40],"bfloat16"),Tensor([7168, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([3664, 8, 1, 40],"bfloat16"),Tensor([3664, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([34000, 215],"float32"),Tensor([34000, 215],"float32"),Tensor([34000, 215],"float32"),Tensor([34000, 215],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 640, 3565159],"float32"),], )
paddle.stack(list[Tensor([2280, 8, 2, 40],"bfloat16"),Tensor([2280, 8, 2, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([10285, 25],"float32"),Tensor([10285, 25],"float32"),Tensor([10285, 25],"float32"),Tensor([10285, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([3800, 8, 1, 40],"bfloat16"),Tensor([3800, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([23860930, 6, 3, 2, 5],"float16"),Tensor([23860930, 6, 3, 2, 5],"float16"),Tensor([23860930, 6, 3, 2, 5],"float16"),], 0, )
paddle.stack(tuple(Tensor([306900],"float32"),Tensor([306900],"float32"),Tensor([306900],"float32"),Tensor([306900],"float32"),), axis=1, )
paddle.stack(list[Tensor([16, 476, 80],"float32"),Tensor([16, 476, 80],"float32"),Tensor([16, 476, 80],"float32"),Tensor([16, 476, 80],"float32"),Tensor([16, 476, 80],"float32"),Tensor([16, 476, 80],"float32"),], )
paddle.stack(tuple(Tensor([340686],"float32"),Tensor([340686],"float32"),Tensor([340686],"float32"),Tensor([340686],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([388740],"float32"),Tensor([388740],"float32"),Tensor([388740],"float32"),Tensor([388740],"float32"),), axis=1, )
paddle.stack(list[Tensor([16660, 20],"float32"),Tensor([16660, 20],"float32"),Tensor([16660, 20],"float32"),Tensor([16660, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 99],"float32"),Tensor([10285, 99],"float32"),Tensor([10285, 99],"float32"),Tensor([10285, 99],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([45474, 224, 224],"float32"),Tensor([45474, 224, 224],"float32"),), axis=0, )
paddle.stack(list[Tensor([19125, 18],"float32"),Tensor([19125, 18],"float32"),Tensor([19125, 18],"float32"),Tensor([19125, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 26],"float32"),Tensor([10285, 26],"float32"),Tensor([10285, 26],"float32"),Tensor([10285, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 300, 4096],"float32"),Tensor([1, 300, 4096],"float32"),], axis=0, )
paddle.stack(tuple(Tensor([322245],"float32"),Tensor([322245],"float32"),Tensor([322245],"float32"),Tensor([322245],"float32"),), axis=1, )
paddle.stack(list[Tensor([12240, 32],"float32"),Tensor([12240, 32],"float32"),Tensor([12240, 32],"float32"),Tensor([12240, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([6352, 8, 1, 40],"bfloat16"),Tensor([6352, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(tuple(Tensor([251676],"float32"),Tensor([251676],"float32"),Tensor([251676],"float32"),Tensor([251676],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([319200],"float32"),Tensor([319200],"float32"),Tensor([319200],"float32"),Tensor([319200],"float32"),), axis=1, )
paddle.stack(list[Tensor([4464, 8, 1, 40],"bfloat16"),Tensor([4464, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),Tensor([2281701379],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 22],"float32"),Tensor([24565, 22],"float32"),Tensor([24565, 22],"float32"),Tensor([24565, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 1140850690, 2],"float32"),Tensor([1, 1140850690, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([6760, 8, 1, 40],"bfloat16"),Tensor([6760, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([3584, 8, 1, 40],"bfloat16"),Tensor([3584, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([24565, 811],"float32"),Tensor([24565, 811],"float32"),Tensor([24565, 811],"float32"),Tensor([24565, 811],"float32"),], axis=1, )
paddle.stack(x=list[Tensor([116414, 140, 140],"float32"),Tensor([116414, 140, 140],"float32"),], axis=1, )
paddle.stack(list[Tensor([32, 15, 8, 8, 32],"float32"),Tensor([32, 15, 8, 8, 32],"float32"),], axis=-1, )
paddle.stack(tuple(Tensor([293622],"float32"),Tensor([293622],"float32"),Tensor([293622],"float32"),Tensor([293622],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([300762],"float32"),Tensor([300762],"float32"),Tensor([300762],"float32"),Tensor([300762],"float32"),), axis=1, )
paddle.stack(list[Tensor([8, 32, 500, 4],"float32"),Tensor([8, 32, 500, 4],"float32"),Tensor([8, 32, 500, 4],"float32"),], axis=-2, )
paddle.stack(x=tuple(Tensor([1, 16, 256, 557057],"float32"),Tensor([1, 16, 256, 557057],"float32"),), axis=-1, )
paddle.stack(list[Tensor([1, 1, 1140850690, 2],"float32"),Tensor([1, 1, 1140850690, 2],"float32"),], -1, )
paddle.stack(list[Tensor([6248, 8, 2, 40],"bfloat16"),Tensor([6248, 8, 2, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([27540, 65],"float32"),Tensor([27540, 65],"float32"),Tensor([27540, 65],"float32"),Tensor([27540, 65],"float32"),], axis=1, )
paddle.stack(tuple(Tensor([1, 2281701379],"float32"),Tensor([1, 2281701379],"float32"),), axis=-1, )
paddle.stack(list[Tensor([6480, 8, 1, 40],"bfloat16"),Tensor([6480, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([5848, 8, 1, 40],"bfloat16"),Tensor([5848, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([6248, 8, 1, 40],"bfloat16"),Tensor([6248, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(tuple(Tensor([286977],"float32"),Tensor([286977],"float32"),Tensor([286977],"float32"),Tensor([286977],"float32"),), axis=1, )
paddle.stack(list[Tensor([19125, 43],"float32"),Tensor([19125, 43],"float32"),Tensor([19125, 43],"float32"),Tensor([19125, 43],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 25],"float32"),Tensor([27540, 25],"float32"),Tensor([27540, 25],"float32"),Tensor([27540, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 14],"float32"),Tensor([24565, 14],"float32"),Tensor([24565, 14],"float32"),Tensor([24565, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([28, 81489335],"float32"),Tensor([28, 81489335],"float32"),Tensor([28, 81489335],"float32"),], axis=-3, )
paddle.stack(list[Tensor([34000, 42],"float32"),Tensor([34000, 42],"float32"),Tensor([34000, 42],"float32"),Tensor([34000, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([16, 32, 492, 4],"float32"),Tensor([16, 32, 492, 4],"float32"),Tensor([16, 32, 492, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([24565, 71],"float32"),Tensor([24565, 71],"float32"),Tensor([24565, 71],"float32"),Tensor([24565, 71],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 81],"float32"),Tensor([24565, 81],"float32"),Tensor([24565, 81],"float32"),Tensor([24565, 81],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 238],"float32"),Tensor([10285, 238],"float32"),Tensor([10285, 238],"float32"),Tensor([10285, 238],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 58],"float32"),Tensor([16660, 58],"float32"),Tensor([16660, 58],"float32"),Tensor([16660, 58],"float32"),], axis=1, )
paddle.stack(list[Tensor([4360, 8, 1, 40],"bfloat16"),Tensor([4360, 8, 1, 40],"bfloat16"),], axis=-1, )
paddle.stack(list[Tensor([3, 6, 3, 15907287, 5],"float16"),Tensor([3, 6, 3, 15907287, 5],"float16"),Tensor([3, 6, 3, 15907287, 5],"float16"),], 0, )
paddle.stack(tuple(Tensor([1, 35651585, 64],"float32"),Tensor([1, 35651585, 64],"float32"),), axis=3, )
paddle.stack(list[Tensor([106106, 21504],"float32"),], axis=0, )
paddle.stack(list[Tensor([6760, 8, 2, 40],"bfloat16"),Tensor([6760, 8, 2, 40],"bfloat16"),], axis=-1, )
paddle.stanh(x=Tensor([2147483649, 2],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2147483649, 2],"float16"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([2, 536870913, 2, 2],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([4294967297],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([357913942, 3, 2, 2],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2281701379],"float32"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([1140850690, 2],"float32"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2, 1140850690],"float32"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([1, 2281701379],"float32"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([2147483649, 2],"float16"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([1, 2281701379],"float32"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([2, 2147483649],"float16"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([2, 3, 357913942, 2],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([1140850690, 2],"float32"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([1, 4294967297],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.stanh(x=Tensor([1140850690, 2],"float32"), scale_a=6.42, scale_b=3.58, )
paddle.stanh(x=Tensor([1, 4294967297],"float16"), scale_a=1.43, scale_b=4.56, )
paddle.stanh(x=Tensor([2, 3, 2, 357913942],"float16"), scale_a=0.67, scale_b=1.72, )
paddle.std(Tensor([6, 380283564],"float32"), axis=1, )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=tuple(0,1,), )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), 2, True, False, )
paddle.std(Tensor([1, 3, 143165577, 10],"float16"), tuple(1,3,), True, False, )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=list[0,1,], )
paddle.std(x=Tensor([2, 2147483649],"float16"), )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), )
paddle.std(Tensor([1, 3, 76056713, 10],"float32"), list[1,3,], True, False, )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), axis=tuple(0,1,), )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), tuple(1,3,), True, False, )
paddle.std(Tensor([1, 107374183, 4, 10],"float16"), 2, True, False, )
paddle.std(Tensor([71303169, 32],"float32"), )
paddle.std(Tensor([1, 3, 143165577, 10],"float16"), list[1,2,], True, False, )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), list[1,2,], True, False, )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), list[1,2,], True, False, )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=tuple(0,1,), )
paddle.std(Tensor([1, 107374183, 4, 10],"float16"), tuple(1,3,), True, False, )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.std(Tensor([1, 3, 143165577, 10],"float16"), 2, True, False, )
paddle.std(Tensor([1, 107374183, 4, 10],"float16"), list[1,3,], True, False, )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=0, )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), list[1,3,], False, False, )
paddle.std(Tensor([2281701379],"float32"), )
paddle.std(x=Tensor([760567127, 3],"float32"), )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), axis=0, unbiased=False, )
paddle.std(Tensor([19014179, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=0, unbiased=False, )
paddle.std(Tensor([1, 3, 143165577, 10],"float16"), list[1,3,], True, False, )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), list[1,3,], True, False, )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=0, unbiased=False, )
paddle.std(Tensor([253522376, 9],"float32"), axis=1, )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), axis=0, )
paddle.std(Tensor([3, 760567127],"float32"), )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), tuple(1,3,), True, False, )
paddle.std(Tensor([1, 3, 143165577, 10],"float16"), list[1,3,], False, False, )
paddle.std(x=Tensor([2, 1140850690],"float32"), )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), 2, True, False, )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), list[1,3,], False, False, )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,1,], )
paddle.std(Tensor([32, 71303169],"float32"), )
paddle.std(Tensor([1, 107374183, 4, 10],"float16"), list[1,3,], False, False, )
paddle.std(x=Tensor([477218589, 3, 3],"float16"), )
paddle.std(Tensor([456340276, 5],"float32"), )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), )
paddle.std(Tensor([1, 107374183, 4, 10],"float16"), list[1,2,], True, False, )
paddle.std(x=Tensor([1431655766, 3],"float16"), )
paddle.std(Tensor([1, 3, 4, 190141782],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([1, 57042535, 4, 10],"float32"), list[1,3,], True, False, )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=0, )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=list[0,1,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 4, 745655, 6],"float16"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.strided_slice(Tensor([40744668, 7, 8],"int64"), axes=list[0,2,], starts=list[7,-1,], ends=list[2,-5,], strides=list[-2,-3,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 4, 2, 2236963],"float16"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 4, 745655, 6],"float16"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(Tensor([6, 7, 54326224],"int64"), axes=list[0,2,], starts=list[7,-1,], ends=list[2,-5,], strides=list[-2,-3,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 1491309, 2, 6],"float16"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(x=Tensor([1864136, 8, 6, 4, 2, 6],"float16"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(x=Tensor([1864136, 8, 6, 4, 2, 6],"float16"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.strided_slice(x=Tensor([35791395, 4, 5, 6],"float16"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(Tensor([6, 380283564],"int64"), axes=list[0,1,], starts=list[8,-1,], ends=list[1,-5,], strides=list[-2,-3,], )
paddle.strided_slice(x=Tensor([380283564, 6],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[1,-2,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 4, 2, 2236963],"float16"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(x=Tensor([19014179, 4, 5, 6],"int32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 59652324, 6],"float16"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([2281701379],"float32"), axes=list[0,], starts=list[3,], ends=list[1,], strides=list[-2,], )
paddle.strided_slice(x=Tensor([5, 2982617, 6, 4, 2, 6],"float16"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.strided_slice(Tensor([380283564, 6],"int64"), axes=list[0,1,], starts=list[8,-1,], ends=list[1,-5,], strides=list[-2,-3,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 38028357],"int32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(Tensor([2281701379],"int64"), axes=list[0,], starts=list[3,], ends=list[1,], strides=list[-2,], )
paddle.strided_slice(Tensor([6, 47535446, 8],"int64"), axes=list[0,2,], starts=list[7,-1,], ends=list[2,-5,], strides=list[-2,-3,], )
paddle.strided_slice(x=Tensor([3, 4, 31690297, 6],"int32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 31690297, 6],"float32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([6, 380283564],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[4,-2,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 38028357],"int64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([19014179, 4, 5, 6],"float32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([3, 4, 31690297, 6],"int64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([5, 8, 2236963, 4, 2, 6],"float16"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(x=Tensor([19014179, 4, 5, 6],"int64"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([5, 8, 2236963, 4, 2, 6],"float16"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.strided_slice(x=Tensor([380283564, 6],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[4,-2,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 38028357],"float32"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 1491309, 2, 6],"float16"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.strided_slice(x=Tensor([3, 4, 5, 71582789],"float16"), axes=list[1,2,3,], starts=list[-3,0,2,], ends=list[3,2,4,], strides=list[1,1,1,], )
paddle.strided_slice(x=Tensor([6, 380283564],"float32"), axes=list[0,1,], starts=list[3,4,], ends=list[5,2,], strides=list[1,-2,], )
paddle.strided_slice(x=Tensor([5, 2982617, 6, 4, 2, 6],"float16"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.subtract(Tensor([2, 10, 114085069],"float32"), Tensor([2, 10, 114085069],"float32"), )
paddle.subtract(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 95070891, 1],"float32"), )
paddle.subtract(Tensor([17, 134217729, 1],"float32"), Tensor([17, 134217729, 1],"float32"), )
paddle.subtract(Tensor([6068355, 376, 1],"float32"), Tensor([6068355, 376, 1],"float32"), )
paddle.subtract(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), name="Normal_log_prob", )
paddle.subtract(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), )
paddle.subtract(Tensor([1, 1, 30, 30],"float32"), Tensor([2535224, 1, 30, 30],"float32"), )
paddle.subtract(Tensor([100, 376, 60684],"float32"), Tensor([100, 376, 1],"float32"), )
paddle.subtract(Tensor([8, 256, 32769, 64],"float16"), Tensor([8, 256, 32769, 64],"float16"), )
paddle.subtract(Tensor([1, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.subtract(Tensor([742742, 3, 32, 32],"float32"), Tensor([742742, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([1],"float32"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([10, 228170138],"float32"), Tensor([228170138],"float32"), )
paddle.subtract(Tensor([1, 2281701379],"float32"), Tensor([4, 1],"float32"), )
paddle.subtract(Tensor([8, 64, 65537, 128],"float16"), Tensor([8, 64, 65537, 128],"float16"), )
paddle.subtract(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), )
paddle.subtract(Tensor([63380594, 3, 3, 4],"float32"), Tensor([63380594, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([63380594, 3, 3, 4],"float32"), Tensor([3, 1, 4],"float32"), )
paddle.subtract(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.subtract(Tensor([1, 3, 256, 2970966],"float32"), Tensor([1, 3, 256, 2970966],"float32"), )
paddle.subtract(Tensor([1],"float16"), Tensor([4294967297],"float16"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([64, 4, 1089, 64, 128],"float32"), Tensor([64, 4, 1089, 64, 128],"float32"), )
paddle.subtract(Tensor([23211, 4, 3, 64, 128],"float32"), Tensor([23211, 4, 3, 64, 128],"float32"), )
paddle.subtract(Tensor([100, 376, 60684],"float32"), Tensor([100, 376, 60684],"float32"), )
paddle.subtract(Tensor([64, 512, 1, 80],"float32"), Tensor([64, 512, 1, 80],"float32"), )
paddle.subtract(Tensor([8, 1, 512, 512],"float16"), Tensor([8, 1, 512, 512],"float32"), )
paddle.subtract(Tensor([1, 2228225, 32, 32],"float32"), Tensor([1, 2228225, 32, 32],"float32"), )
paddle.subtract(Tensor([3548, 12, 170, 1],"float32"), Tensor([3548, 12, 170, 1],"float32"), )
paddle.subtract(Tensor([30948, 3, 3, 64, 128],"float32"), Tensor([30948, 3, 3, 64, 128],"float32"), )
paddle.subtract(Tensor([8, 32, 256, 65537],"float16"), Tensor([8, 32, 256, 65537],"float16"), )
paddle.subtract(Tensor([16, 96, 1485483],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.subtract(Tensor([1, 3, 32, 32],"float32"), Tensor([742742, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([11606, 3, 256, 256],"float32"), Tensor([11606, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([1, 3, 23767723, 32],"float32"), Tensor([1, 3, 23767723, 32],"float32"), )
paddle.subtract(Tensor([1, 1, 76056713, 30],"float32"), Tensor([1, 1, 76056713, 30],"float32"), )
paddle.subtract(Tensor([100, 376, 1],"float32"), Tensor([100, 376, 60684],"float32"), )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([557057, 64, 64, 1],"float32"), Tensor([1, 64, 64, 1],"float64"), )
paddle.subtract(Tensor([2, 3, 3, 126761188],"float32"), Tensor([2, 3, 1, 126761188],"float32"), )
paddle.subtract(Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.subtract(Tensor([16, 71303169, 2],"float32"), Tensor([16, 71303169, 2],"float32"), )
paddle.subtract(Tensor([64, 4, 3, 64, 128],"float32"), Tensor([64, 4, 3, 64, 128],"float32"), )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([1],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([64, 512, 1, 40],"float32"), Tensor([64, 512, 1, 40],"float32"), )
paddle.subtract(Tensor([2, 3, 95070891, 4],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([4],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.subtract(Tensor([1, 1],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.subtract(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.subtract(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.subtract(Tensor([2962708, 1],"float32"), Tensor([2962708, 1],"float32"), )
paddle.subtract(Tensor([10, 228170138],"float32"), Tensor([10, 1],"float32"), )
paddle.subtract(Tensor([10, 1],"float32"), Tensor([10, 228170138],"float32"), )
paddle.subtract(Tensor([64, 4, 3, 64, 46422],"float32"), Tensor([64, 4, 3, 64, 46422],"float32"), )
paddle.subtract(x=Tensor([1140850690, 2],"float32"), y=Tensor([1140850690, 2],"float32"), )
paddle.subtract(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), name="Normal_log_prob", )
paddle.subtract(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), name="Normal_log_prob", )
paddle.subtract(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), name="Cauchy_log_prob", )
paddle.subtract(x=Tensor([2, 1140850690],"int32"), y=Tensor([2, 1140850690],"int32"), )
paddle.subtract(Tensor([17, 376, 356963],"float32"), Tensor([17, 376, 1],"float32"), )
paddle.subtract(Tensor([64, 3, 3, 30948, 128],"float32"), Tensor([64, 3, 3, 30948, 128],"float32"), )
paddle.subtract(Tensor([8, 128, 65537, 64],"float16"), Tensor([8, 128, 65537, 64],"float16"), )
paddle.subtract(Tensor([2281701379, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.subtract(Tensor([1],"float32"), Tensor([2281701379],"float32"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([64, 3, 3, 64, 128],"float32"), Tensor([64, 3, 3, 64, 128],"float32"), )
paddle.subtract(Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.subtract(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.subtract(Tensor([152113426, 15],"float32"), Tensor([15],"float32"), )
paddle.subtract(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), name="Normal_log_prob", )
paddle.subtract(Tensor([64, 1451, 3, 64, 128],"float32"), Tensor([64, 1451, 3, 64, 128],"float32"), )
paddle.subtract(Tensor([1, 2535224, 30, 30],"float32"), Tensor([1, 2535224, 30, 30],"float32"), )
paddle.subtract(Tensor([16, 96, 1],"float32"), Tensor([16, 96, 1485483],"float32"), )
paddle.subtract(Tensor([11606, 3, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), )
paddle.subtract(Tensor([1, 1, 30, 76056713],"float32"), Tensor([1, 1, 30, 76056713],"float32"), )
paddle.subtract(Tensor([16, 96, 1485483],"float32"), Tensor([16, 96, 1485483],"float32"), )
paddle.subtract(Tensor([742742, 3, 32, 32],"float32"), Tensor([1, 3, 32, 32],"float32"), )
paddle.subtract(Tensor([2, 95070891, 3, 4],"float32"), Tensor([2, 95070891, 1, 1],"float32"), )
paddle.subtract(Tensor([8, 32, 65537, 256],"float16"), Tensor([8, 32, 65537, 256],"float16"), )
paddle.subtract(Tensor([8, 32769, 128, 128],"float16"), Tensor([8, 32769, 128, 128],"float16"), )
paddle.subtract(Tensor([1, 64, 64, 1],"float32"), Tensor([1, 64, 64, 1048577],"float16"), )
paddle.subtract(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), )
paddle.subtract(Tensor([4294967297],"float16"), Tensor([1],"float16"), name="Cauchy_log_prob", )
paddle.subtract(Tensor([1, 3, 32, 23767723],"float32"), Tensor([1, 3, 32, 23767723],"float32"), )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), name="Cauchy_kl_divergence", )
paddle.subtract(Tensor([2, 3, 3, 126761188],"float32"), Tensor([2, 3, 1, 1],"float32"), )
paddle.subtract(Tensor([228170138, 10],"float32"), Tensor([228170138, 10],"float32"), )
paddle.subtract(Tensor([2, 3, 3, 126761188],"float32"), Tensor([3, 1, 126761188],"float32"), )
paddle.subtract(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), name="Normal_log_prob", )
paddle.subtract(Tensor([16, 142606337, 1],"float32"), Tensor([16, 142606337, 1],"float32"), )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.subtract(Tensor([2281701379],"float32"), Tensor([1, 1],"float32"), )
paddle.subtract(Tensor([1, 3, 2970966, 256],"float32"), Tensor([1, 3, 2970966, 256],"float32"), )
paddle.subtract(x=Tensor([2, 1140850690],"float32"), y=Tensor([2, 1140850690],"float32"), )
paddle.subtract(Tensor([11883862, 96, 2],"float32"), Tensor([11883862, 96, 2],"float32"), )
paddle.subtract(Tensor([1, 64, 64, 1],"float32"), Tensor([1048577, 64, 64, 1],"float16"), )
paddle.subtract(Tensor([17, 376, 1],"float32"), Tensor([17, 376, 356963],"float32"), )
paddle.subtract(Tensor([22817014, 10, 10],"float32"), Tensor([22817014, 10, 10],"float32"), )
paddle.subtract(Tensor([23767723, 96, 1],"float32"), Tensor([23767723, 96, 1],"float32"), )
paddle.subtract(Tensor([1, 1],"float32"), Tensor([4, 570425345],"float32"), )
paddle.subtract(Tensor([8, 256, 64, 32769],"float16"), Tensor([8, 256, 64, 32769],"float16"), )
paddle.subtract(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), name="Normal_log_prob", )
paddle.sum(Tensor([64, 1741, 512, 1, 40],"float32"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([280, 60800],"float32"), axis=1, )
paddle.sum(Tensor([224, 200, 328],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([60, 94848],"float32"), axis=1, )
paddle.sum(Tensor([10, 228170138],"float32"), name=None, )
paddle.sum(Tensor([88, 54400],"float32"), axis=1, )
paddle.sum(Tensor([477218589, 3, 3],"float16"), None, keepdim=False, name=None, )
paddle.sum(Tensor([116, 97280],"float32"), axis=1, )
paddle.sum(Tensor([192, 200, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=None, keepdim=True, )
paddle.sum(Tensor([1, 4294967297],"float16"), axis=list[1,], )
paddle.sum(Tensor([24, 89984],"float32"), axis=1, )
paddle.sum(Tensor([188, 60800],"float32"), axis=1, )
paddle.sum(Tensor([1, 800, 1424],"int64"), )
paddle.sum(Tensor([8, 64, 128, 65537],"float16"), name=None, )
paddle.sum(Tensor([76, 272, 328],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([96, 304, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([96, 200, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([52, 272, 328],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([64, 304, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([92, 76160],"float32"), axis=1, )
paddle.sum(Tensor([16, 15845149, 3, 3],"float32"), list[1,2,3,], keepdim=True, name=None, )
paddle.sum(Tensor([36, 86016],"float32"), axis=1, )
paddle.sum(Tensor([8, 3, 4, 2982617, 5, 3],"float16"), 0, keepdim=True, dtype=None, )
paddle.sum(Tensor([10, 429496730],"float16"), axis=-1, keepdim=True, )
paddle.sum(Tensor([116, 200, 272],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([108, 304, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([32, 336, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([36, 272, 216],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([10000, 2, 114086],"float32"), 0, keepdim=False, name=None, )
paddle.sum(Tensor([172, 82688],"float32"), axis=1, )
paddle.sum(Tensor([68, 328, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([292, 200, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([3, 4, 190141782],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float16"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([56, 304, 264],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([104, 54400],"float32"), axis=1, )
paddle.sum(Tensor([40, 256, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([120, 77824],"float32"), axis=1, )
paddle.sum(Tensor([80, 304, 280],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([32, 94080],"float32"), axis=1, )
paddle.sum(Tensor([84, 69888],"float32"), axis=1, )
paddle.sum(Tensor([188, 67200],"float32"), axis=1, )
paddle.sum(Tensor([180, 60800],"float32"), axis=1, )
paddle.sum(Tensor([88, 77824],"float32"), axis=1, )
paddle.sum(Tensor([20, 67200],"float32"), axis=1, )
paddle.sum(Tensor([48, 92416],"float32"), axis=1, )
paddle.sum(Tensor([132, 69632],"float32"), axis=1, )
paddle.sum(Tensor([136, 62400],"float32"), axis=1, )
paddle.sum(Tensor([88, 216, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([60, 200, 312],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([8, 2236963, 4, 4, 5, 3],"float16"), 1, keepdim=True, dtype=None, )
paddle.sum(Tensor([40, 67392],"float32"), axis=1, )
paddle.sum(Tensor([132, 76032],"float32"), axis=1, )
paddle.sum(Tensor([8, 3, 4, 4, 1980644, 3],"float32"), 3, keepdim=False, dtype=None, )
paddle.sum(Tensor([160, 304, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([232, 67200],"float32"), axis=1, )
paddle.sum(Tensor([156, 200, 312],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([64, 336, 280],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([136, 272, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([56, 84480],"float32"), axis=1, )
paddle.sum(Tensor([48, 87040],"float32"), axis=1, )
paddle.sum(Tensor([56, 304, 320],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([330108, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), 5, keepdim=False, dtype=None, )
paddle.sum(Tensor([44, 272, 296],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([188, 102144],"float32"), axis=1, )
paddle.sum(Tensor([184, 272, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([20, 312, 296],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([16, 208, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([120, 67392],"float32"), axis=1, )
paddle.sum(Tensor([456340276, 5],"bool"), axis=None, keepdim=False, )
paddle.sum(Tensor([1, 11, 207427399],"float32"), -1, keepdim=True, name=None, )
paddle.sum(Tensor([100, 76032],"float32"), axis=1, )
paddle.sum(Tensor([128, 104832],"float32"), axis=1, )
paddle.sum(Tensor([132, 256, 272],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([52, 200, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([2281701379],"float32"), axis=-1, keepdim=True, )
paddle.sum(Tensor([512, 22737, 14, 14],"float32"), axis=tuple(0,2,3,), )
paddle.sum(Tensor([168, 60800],"float32"), axis=1, )
paddle.sum(Tensor([2328267, 14, 5, 14],"int64"), axis=list[1,3,], keepdim=False, name=None, )
paddle.sum(Tensor([52, 82688],"float32"), axis=1, )
paddle.sum(Tensor([48, 224, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([38028357, 3, 4, 5],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.sum(Tensor([1140850690, 2],"float32"), axis=list[1,], )
paddle.sum(Tensor([160, 89984],"float32"), axis=1, )
paddle.sum(Tensor([128, 60800],"float32"), axis=1, )
paddle.sum(Tensor([40, 336, 200],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([2, 3, 4, 2, 3, 1242757, 2, 3, 4],"float16"), 1, keepdim=False, dtype=None, )
paddle.sum(Tensor([332, 304, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([32, 200, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([24, 288, 272],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([1000, 2281702],"float32"), axis=1, keepdim=True, )
paddle.sum(Tensor([88, 200, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([212, 73984],"float32"), axis=1, )
paddle.sum(Tensor([760567127, 3],"bool"), axis=0, keepdim=True, )
paddle.sum(Tensor([20, 232, 304],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([52, 102400],"float32"), axis=1, )
paddle.sum(Tensor([220, 200, 336],"float32"), axis=list[1,2,], )
paddle.sum(Tensor([136, 54400],"float32"), axis=1, )
paddle.sum(Tensor([2, 3, 4, 2, 495161, 4, 2, 3, 4],"float32"), )
paddle.t(Tensor([1, 4294967297],"float16"), )
paddle.t(Tensor([4294967297],"float16"), )
paddle.t(Tensor([512, 4456449],"int64"), )
paddle.t(Tensor([114085069, 20],"float32"), )
paddle.t(Tensor([10, 429496730],"float16"), )
paddle.t(Tensor([228170138, 10],"float32"), )
paddle.t(Tensor([20, 114085069],"float32"), )
paddle.t(Tensor([4456449, 512],"int64"), )
paddle.t(Tensor([10, 228170138],"float32"), )
paddle.t(Tensor([858993460, 5],"float16"), )
paddle.take(Tensor([3, 1431655766],"float16"), Tensor([5, 8],"int64"), mode="clip", )
paddle.take(Tensor([3, 760567127],"int64"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([570425345, 4],"int64"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([1073741825, 4],"float16"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([3, 1431655766],"float16"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([1073741825, 4],"float16"), Tensor([5, 8],"int64"), mode="wrap", )
paddle.take(Tensor([570425345, 4],"float32"), Tensor([2, 570425345],"int64"), mode="raise", )
paddle.take(Tensor([570425345, 4],"int32"), Tensor([2, 570425345],"int64"), mode="raise", )
paddle.take(Tensor([570425345, 4],"int32"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([3, 1431655766],"float16"), Tensor([5, 8],"int64"), mode="wrap", )
paddle.take(Tensor([3, 760567127],"float32"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([570425345, 4],"float32"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take(Tensor([1073741825, 4],"float16"), Tensor([5, 8],"int64"), mode="clip", )
paddle.take(Tensor([3, 760567127],"int32"), Tensor([2, 3],"int64"), mode="raise", )
paddle.take_along_axis(Tensor([858993460, 5],"float16"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 760567127],"float32"), Tensor([1, 760567127],"float32"), 0, )
paddle.take_along_axis(Tensor([30, 5],"float32"), Tensor([30, 76056713],"int64"), axis=1, )
paddle.take_along_axis(Tensor([2, 302, 768],"bfloat16"), axis=1, indices=Tensor([2, 1485483, 768],"int64"), )
paddle.take_along_axis(Tensor([477218589, 3, 3],"float16"), Tensor([1, 3, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), Tensor([3, 6, 3, 1, 3976822, 5],"int32"), axis=3, )
paddle.take_along_axis(Tensor([1, 6380, 4],"float32"), Tensor([1, 570425345, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([66717, 8550, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([2281701379],"float32"), Tensor([2281701379],"int32"), axis=0, )
paddle.take_along_axis(Tensor([13, 4, 3134206, 14],"float32"), axis=-1, indices=Tensor([13, 4, 3134206, 7],"int64"), )
paddle.take_along_axis(Tensor([3, 3],"float32"), Tensor([760567127, 3],"int64"), 0, )
paddle.take_along_axis(Tensor([456340276, 5],"float32"), Tensor([456340276, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([15489, 36828, 4],"float32"), Tensor([15489, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([268435457, 4, 4],"float16"), Tensor([142606337, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([3, 760567127],"float32"), Tensor([3, 2],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([28, 5],"float32"), Tensor([28, 81489335],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 4, 134217729, 2],"float16"), Tensor([1, 1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([1073741825, 4],"float16"), Tensor([1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([1431655766, 3],"float16"), Tensor([1, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([4, 3, 190141782],"float32"), Tensor([1, 3, 190141782],"int64"), axis=1, )
paddle.take_along_axis(Tensor([3, 152113426, 5],"float32"), Tensor([1, 152113426, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([2281701379],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([2, 2],"float32"), Tensor([1140850690, 2],"float32"), 0, )
paddle.take_along_axis(Tensor([4, 1073741825],"float16"), Tensor([1, 570425345],"int64"), 1, )
paddle.take_along_axis(Tensor([14868, 38367, 4],"float32"), Tensor([14868, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([4, 268435457, 4],"float16"), Tensor([1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([15489, 36828, 4],"float32"), Tensor([1, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([1184],"float32"), Tensor([2281701379],"int32"), axis=0, )
paddle.take_along_axis(Tensor([8, 371371, 768],"float32"), axis=1, indices=Tensor([8, 7, 768],"int64"), )
paddle.take_along_axis(Tensor([3, 152113426, 5],"float32"), Tensor([1, 1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([1, 570425345, 4],"float32"), Tensor([1, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([2, 302, 7110874],"bfloat16"), axis=1, indices=Tensor([2, 14, 7110874],"int64"), )
paddle.take_along_axis(Tensor([4, 134217729, 4, 2],"float16"), Tensor([1, 1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([2, 114, 18837576],"bfloat16"), axis=1, indices=Tensor([2, 14, 18837576],"int64"), )
paddle.take_along_axis(Tensor([3, 6, 3, 7953644, 2, 5],"float16"), Tensor([3, 6, 3, 1, 2, 5],"int32"), axis=3, )
paddle.take_along_axis(Tensor([4],"float32"), Tensor([2281701379],"int64"), 0, )
paddle.take_along_axis(Tensor([30, 76056713],"float32"), Tensor([30, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([13, 4, 7, 6268411],"float32"), axis=-1, indices=Tensor([13, 4, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([4, 178956971, 6],"float16"), Tensor([4, 178956971, 1],"int32"), axis=2, )
paddle.take_along_axis(Tensor([1, 36828, 61956],"float32"), Tensor([1, 900, 61956],"int64"), 1, )
paddle.take_along_axis(Tensor([4, 4, 268435457],"float16"), Tensor([1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([13, 4, 7, 14],"float32"), axis=-1, indices=Tensor([13, 4, 7, 6268411],"int64"), )
paddle.take_along_axis(Tensor([760567127, 3],"float32"), Tensor([760567127, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([1, 36828, 4],"float32"), Tensor([1, 570425345, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([1, 38367, 4],"float32"), Tensor([1, 570425345, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([228170138, 2, 5],"float32"), Tensor([228170138, 1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([285212673, 8],"float32"), Tensor([285212673, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([1024],"float32"), Tensor([2281701379],"int32"), axis=0, )
paddle.take_along_axis(Tensor([2, 3],"float32"), Tensor([2, 1140850690],"int32"), axis=1, )
paddle.take_along_axis(Tensor([8, 63, 768],"float32"), axis=1, indices=Tensor([8, 371371, 768],"int64"), )
paddle.take_along_axis(Tensor([3, 1431655766],"float16"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([102261127, 7, 6],"float16"), Tensor([102261127, 7, 1],"int32"), axis=2, )
paddle.take_along_axis(Tensor([128, 17825793],"float32"), Tensor([128, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([3, 2, 380283564],"float32"), Tensor([1, 1, 380283564],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), Tensor([3, 6, 3, 4, 1, 9942054],"int32"), axis=4, )
paddle.take_along_axis(Tensor([4, 7, 153391690],"float16"), Tensor([4, 1, 153391690],"int32"), axis=1, )
paddle.take_along_axis(Tensor([4294967297],"float16"), Tensor([1],"int64"), 0, )
paddle.take_along_axis(Tensor([102261127, 7, 6],"float16"), Tensor([102261127, 1, 6],"int32"), axis=1, )
paddle.take_along_axis(Tensor([268435457, 4, 4],"float16"), Tensor([1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 285212673, 2],"float32"), Tensor([1, 3, 2],"int64"), axis=1, )
paddle.take_along_axis(Tensor([52, 4, 783552, 14],"float32"), axis=-1, indices=Tensor([52, 4, 783552, 7],"int64"), )
paddle.take_along_axis(Tensor([3, 3],"float32"), Tensor([760567127, 3],"float32"), 0, )
paddle.take_along_axis(Tensor([3, 3, 3],"float32"), Tensor([253522376, 3, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([2, 114, 64],"bfloat16"), axis=1, indices=Tensor([2, 17825793, 64],"int64"), )
paddle.take_along_axis(Tensor([38, 60044774],"float32"), Tensor([38, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([357913942, 3, 4],"float16"), Tensor([1, 3, 4],"int32"), axis=0, )
paddle.take_along_axis(Tensor([3, 253522376, 3],"float32"), Tensor([1, 253522376, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([1, 570425345, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([66717, 8550, 4],"float32"), Tensor([66717, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([3, 3],"float32"), Tensor([760567127, 3],"int64"), 0, False, )
paddle.take_along_axis(Tensor([1, 8550, 4],"float32"), Tensor([1, 570425345, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([1140850690, 2],"float32"), Tensor([4, 2],"float32"), 0, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), Tensor([3, 6, 3, 4, 1, 5],"int32"), axis=4, )
paddle.take_along_axis(Tensor([3, 1431655766],"float16"), Tensor([1, 760567127],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([4, 285212673, 2],"float32"), Tensor([1, 285212673, 2],"int64"), axis=1, )
paddle.take_along_axis(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"int64"), 0, False, )
paddle.take_along_axis(Tensor([3, 760567127],"float32"), Tensor([1, 760567127],"int64"), 0, )
paddle.take_along_axis(Tensor([456340276, 5],"float32"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([134217729, 4, 4, 2],"float16"), Tensor([1, 1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([1, 6380, 357634],"float32"), Tensor([1, 300, 357634],"int64"), axis=1, )
paddle.take_along_axis(Tensor([2, 1140850690],"float32"), Tensor([2, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([13, 1790975, 7, 14],"float32"), axis=-1, indices=Tensor([13, 1790975, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([228170138, 2, 5],"float32"), Tensor([1, 1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([8, 63, 4527186],"float32"), axis=1, indices=Tensor([8, 7, 4527186],"int64"), )
paddle.take_along_axis(Tensor([760567127, 3],"float32"), Tensor([1, 3],"float32"), 0, )
paddle.take_along_axis(Tensor([4, 7, 153391690],"float16"), Tensor([4, 7, 1],"int32"), axis=2, )
paddle.take_along_axis(Tensor([4, 1073741825],"float16"), Tensor([1, 1],"int64"), 1, )
paddle.take_along_axis(Tensor([4294967297],"float16"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([4, 178956971, 6],"float16"), Tensor([4, 1, 6],"int32"), axis=1, )
paddle.take_along_axis(Tensor([3, 760567127],"float32"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 760567127],"float32"), Tensor([1, 760567127],"int64"), 0, False, )
paddle.take_along_axis(Tensor([5820667, 4, 7, 14],"float32"), axis=-1, indices=Tensor([5820667, 4, 7, 7],"int64"), )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 9942054],"float16"), Tensor([3, 6, 3, 1, 2, 9942054],"int32"), axis=3, )
paddle.take_along_axis(Tensor([588675, 114, 64],"bfloat16"), axis=1, indices=Tensor([588675, 14, 64],"int64"), )
paddle.take_along_axis(Tensor([89409, 6380, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 3976822, 5],"float16"), Tensor([3, 6, 3, 4, 3976822, 1],"int32"), axis=5, )
paddle.take_along_axis(Tensor([456340276, 5],"float32"), Tensor([456340276, 2],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 5],"float32"), Tensor([3, 760567127],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([456340276, 5],"float32"), Tensor([456340276, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 4, 4, 67108865],"float16"), Tensor([1, 1, 1, 1],"int64"), 0, )
paddle.tan(Tensor([100, 1, 11408507, 2],"float32"), )
paddle.tan(Tensor([8, 16, 17825793],"float32"), )
paddle.tan(Tensor([100, 1, 22817014],"float32"), )
paddle.tan(Tensor([10, 20, 11408507],"float32"), )
paddle.tan(Tensor([100, 42949673],"float16"), )
paddle.tan(Tensor([100, 22817014, 1],"float32"), )
paddle.tan(Tensor([100, 22817014],"float32"), )
paddle.tan(Tensor([100, 11408507, 2],"float32"), )
paddle.tan(Tensor([570425345, 1, 2, 2],"float32"), )
paddle.tan(Tensor([4294967297, 1],"float16"), )
paddle.tan(Tensor([1140850690, 2, 1],"float32"), )
paddle.tan(Tensor([100, 2, 11408507, 1],"float32"), )
paddle.tan(x=Tensor([3, 477218589, 3],"float16"), )
paddle.tan(Tensor([2281701379],"float32"), )
paddle.tan(Tensor([2281701379, 1],"float32"), )
paddle.tan(Tensor([114085069, 20, 1],"float32"), )
paddle.tan(x=Tensor([477218589, 3, 3],"float16"), )
paddle.tan(Tensor([1140850690, 2],"float32"), )
paddle.tan(Tensor([10, 228170138, 1],"float32"), )
paddle.tan(x=Tensor([3, 253522376, 3],"float32"), )
paddle.tan(Tensor([100, 2, 3, 3802836],"float32"), )
paddle.tan(Tensor([100, 2, 11408507],"float32"), )
paddle.tan(Tensor([380283564, 2, 3],"float32"), )
paddle.tan(Tensor([1140850690, 1, 2],"float32"), )
paddle.tan(x=Tensor([253522376, 3, 3],"float32"), )
paddle.tan(Tensor([8, 16777217, 32],"float16"), )
paddle.tan(Tensor([8388609, 16, 32],"float16"), )
paddle.tan(x=Tensor([3, 3, 477218589],"float16"), )
paddle.tan(Tensor([8, 8912897, 32],"float32"), )
paddle.tan(x=Tensor([3, 3, 253522376],"float32"), )
paddle.tan(Tensor([100, 7605672, 3],"float32"), )
paddle.tan(Tensor([100, 7605672, 3, 1],"float32"), )
paddle.tan(Tensor([8, 16, 33554433],"float16"), )
paddle.tan(Tensor([380283564, 2, 3, 1],"float32"), )
paddle.tan(Tensor([4456449, 16, 32],"float32"), )
paddle.tan(Tensor([100, 1, 2, 11408507],"float32"), )
paddle.tan(Tensor([100, 5704254, 2, 2],"float32"), )
paddle.tanh(Tensor([65537, 256, 256],"float16"), )
paddle.tanh(Tensor([10, 228170138],"float32"), )
paddle.tanh(Tensor([8912897, 4, 8, 8],"float32"), )
paddle.tanh(Tensor([570425345, 4],"float32"), )
paddle.tanh(Tensor([4, 144, 64, 64],"float32"), )
paddle.tanh(Tensor([17825793, 4, 32],"float32"), )
paddle.tanh(x=Tensor([3, 3, 477218589],"float16"), )
paddle.tanh(Tensor([2281701379],"float32"), )
paddle.tanh(Tensor([1, 35651585, 64],"float32"), )
paddle.tanh(x=Tensor([2281701379],"float32"), )
paddle.tanh(Tensor([6166761, 10, 37],"float32"), )
paddle.tanh(Tensor([2, 36, 59652324],"float16"), )
paddle.tanh(Tensor([14, 10, 16297867],"float32"), )
paddle.tanh(Tensor([328966, 51, 256],"float16"), )
paddle.tanh(Tensor([2, 95070891, 3, 4],"float32"), )
paddle.tanh(Tensor([1, 3, 2970966, 256],"float32"), )
paddle.tanh(Tensor([356963, 47, 256],"float16"), )
paddle.tanh(Tensor([1, 61667605, 37],"float32"), )
paddle.tanh(Tensor([10186167, 7, 32],"float32"), )
paddle.tanh(Tensor([7737, 72, 64, 64],"float32"), )
paddle.tanh(Tensor([8, 4911, 241, 241],"float32"), )
paddle.tanh(Tensor([16777217, 256],"float16"), )
paddle.tanh(Tensor([14564, 72, 64, 64],"float16"), )
paddle.tanh(Tensor([335545, 50, 256],"float16"), )
paddle.tanh(Tensor([430186, 39, 256],"float16"), )
paddle.tanh(Tensor([2, 17825793, 8, 8],"float32"), )
paddle.tanh(x=Tensor([2, 536870913, 4],"float16"), )
paddle.tanh(Tensor([64, 26, 512, 67, 40],"float32"), )
paddle.tanh(Tensor([8388609, 16, 32],"float16"), )
paddle.tanh(x=Tensor([3, 477218589, 3],"float16"), )
paddle.tanh(x=Tensor([2, 536870913, 4],"float16"), name="test name", )
paddle.tanh(Tensor([8, 26, 274243, 1, 40],"float32"), )
paddle.tanh(Tensor([142606337, 16],"float32"), )
paddle.tanh(Tensor([2281701379, 1],"float32"), )
paddle.tanh(Tensor([2, 3, 11883862, 32],"float32"), )
paddle.tanh(Tensor([13, 10, 17551550],"float32"), )
paddle.tanh(Tensor([8, 32, 36983, 241],"float32"), )
paddle.tanh(Tensor([1, 4294967297],"float16"), )
paddle.tanh(Tensor([2, 1114113, 32, 32],"float32"), )
paddle.tanh(Tensor([466034, 36, 256],"float16"), )
paddle.tanh(Tensor([35651585, 2, 32],"float32"), )
paddle.tanh(Tensor([2, 3, 3, 126761188],"float32"), )
paddle.tanh(Tensor([228170138, 10],"float32"), )
paddle.tanh(Tensor([18211, 125293],"float32"), )
paddle.tanh(Tensor([4, 72, 64, 233017],"float16"), )
paddle.tanh(Tensor([64, 1741, 512, 1, 40],"float32"), )
paddle.tanh(Tensor([8, 32, 241, 36983],"float32"), )
paddle.tanh(Tensor([1242, 1837119],"float32"), )
paddle.tanh(Tensor([13, 2, 87757746],"float32"), )
paddle.tanh(Tensor([13, 7, 25073642],"float32"), )
paddle.tanh(x=Tensor([4294967297],"float16"), )
paddle.tanh(Tensor([2, 38, 56512728],"float16"), )
paddle.tanh(Tensor([1, 20, 114085069],"float32"), )
paddle.tanh(Tensor([76056713, 30],"float32"), )
paddle.tanh(Tensor([2, 4, 8, 35651585],"float32"), )
paddle.tanh(Tensor([1, 34817, 256, 256],"float32"), )
paddle.tanh(Tensor([8, 32, 241, 241],"float32"), )
paddle.tanh(Tensor([1, 58, 39339679],"float32"), )
paddle.tanh(Tensor([17825793, 1, 128],"float32"), )
paddle.tanh(Tensor([4286, 26, 512, 1, 40],"float32"), )
paddle.tanh(Tensor([6851957, 9, 37],"float32"), )
paddle.tanh(Tensor([4, 72, 123791, 64],"float32"), )
paddle.tanh(Tensor([891290, 20, 128],"float32"), )
paddle.tanh(Tensor([15, 152113426],"float32"), )
paddle.tanh(Tensor([742742, 3, 32, 32],"float32"), )
paddle.tanh(Tensor([760567127, 3],"float32"), )
paddle.tanh(Tensor([61667605, 1, 37],"float32"), )
paddle.tanh(Tensor([1228, 32, 241, 241],"float32"), )
paddle.tanh(Tensor([13, 5484860, 32],"float32"), )
paddle.tanh(Tensor([64, 256, 262145],"float16"), )
paddle.tanh(Tensor([2, 8388609, 256],"float16"), )
paddle.tanh(Tensor([64, 26, 512, 1, 40],"float32"), )
paddle.tanh(x=Tensor([35651585, 8, 8],"float32"), )
paddle.tanh(Tensor([8, 256, 512],"float32"), )
paddle.tanh(Tensor([613566757, 7],"float16"), )
paddle.tanh(Tensor([100, 22817014],"float32"), )
paddle.tanh(Tensor([4294967297],"float16"), )
paddle.tanh(Tensor([10, 20, 11408507],"float32"), )
paddle.tanh(Tensor([325957340, 7],"float32"), )
paddle.tanh(Tensor([8912897, 8, 32],"float32"), )
paddle.tanh(Tensor([11606, 3, 256, 256],"float32"), )
paddle.tanh(Tensor([64, 67108865],"float16"), )
paddle.tanh(Tensor([13, 4, 43878873],"float32"), )
paddle.tanh(Tensor([7282, 144, 64, 64],"float16"), )
paddle.tanh(Tensor([2, 1, 2147483649],"float16"), )
paddle.tanh(Tensor([284360, 59, 256],"float16"), )
paddle.tanh(Tensor([8, 26, 512, 1, 21426],"float32"), )
paddle.tanh(Tensor([64, 26, 512, 1, 2679],"float32"), )
paddle.tanh(x=Tensor([858993460, 5],"float16"), )
paddle.tanh(Tensor([8, 16, 33554433],"float16"), )
paddle.tanh(Tensor([16777217, 1, 256],"float16"), )
paddle.tanh(Tensor([1, 17825793, 128],"float32"), )
paddle.tanh(Tensor([24, 256, 256],"float32"), )
paddle.tanh(Tensor([1, 2281701379],"float32"), )
paddle.tanh(Tensor([8809658, 7, 37],"float32"), )
paddle.tanh(Tensor([134217729, 32],"float16"), )
paddle.tanh(Tensor([71303169, 32],"float32"), )
paddle.tanh(Tensor([13, 3, 58505164],"float32"), )
paddle.tanh(Tensor([3869, 144, 64, 64],"float32"), )
paddle.tanh(x=Tensor([2, 142606337, 8],"float32"), )
paddle.tensor_split(Tensor([4, 570425345],"float32"), 3, axis=1, )
paddle.tensor_split(Tensor([20372334, 4, 4, 7],"int64"), tuple(2,6,), axis=3, )
paddle.tensor_split(Tensor([7, 108652447, 3],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([7, 325957340],"int64"), 2, )
paddle.tensor_split(Tensor([325957340, 7],"int64"), list[2,4,6,], axis=1, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[3,-1,5,2,16,], axis=0, )
paddle.tensor_split(Tensor([2281701379],"int64"), 3, axis=0, )
paddle.tensor_split(Tensor([4, 4, 20372334, 7],"int64"), list[2,3,], axis=3, )
paddle.tensor_split(Tensor([190141782, 4, 3],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([190141782, 4, 3],"int64"), 2, )
paddle.tensor_split(Tensor([4, 1073741825],"uint8"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 20372334, 4, 7],"int64"), 3, axis=3, )
paddle.tensor_split(Tensor([7, 4, 81489335],"int64"), 2, )
paddle.tensor_split(Tensor([20372334, 4, 7, 4],"int64"), list[2,3,], axis=-2, )
paddle.tensor_split(Tensor([380283564, 6],"bool"), 3, axis=1, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([190141782, 4, 3],"int64"), 3, )
paddle.tensor_split(Tensor([20372334, 4, 4, 7],"int64"), list[2,4,6,], axis=3, )
paddle.tensor_split(Tensor([4, 4, 4, 35651585],"int64"), tuple(2,6,), axis=3, )
paddle.tensor_split(Tensor([4, 4, 7, 20372334],"int64"), list[2,4,6,], axis=-2, )
paddle.tensor_split(Tensor([4, 20372334, 7, 4],"int64"), 3, axis=-2, )
paddle.tensor_split(Tensor([178956971, 4, 6],"uint8"), 3, axis=2, )
paddle.tensor_split(Tensor([95070891, 4, 6],"int32"), 3, axis=2, )
paddle.tensor_split(Tensor([570425345, 4],"int64"), 2, )
paddle.tensor_split(Tensor([570425345, 4],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([4, 4, 7, 20372334],"int64"), tuple(2,6,), axis=-2, )
paddle.tensor_split(Tensor([20372334, 4, 4, 7],"int64"), list[2,3,], axis=3, )
paddle.tensor_split(Tensor([325957340, 7],"int64"), 3, axis=1, )
paddle.tensor_split(Tensor([7, 325957340],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([4294967297],"uint8"), 3, axis=0, )
paddle.tensor_split(Tensor([4, 4, 142606337],"int64"), 2, axis=2, )
paddle.tensor_split(Tensor([4, 4, 35651585, 4],"int64"), tuple(2,6,), axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7, 20372334],"int64"), 2, axis=-2, )
paddle.tensor_split(Tensor([7, 325957340],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([4, 81489335, 7],"int64"), tuple(2,6,), axis=2, )
paddle.tensor_split(Tensor([20372334, 4, 7, 4],"int64"), 3, axis=-2, )
paddle.tensor_split(Tensor([4, 4, 142606337],"int64"), 3, axis=2, )
paddle.tensor_split(Tensor([7, 4, 81489335],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([325957340, 7],"int64"), list[2,3,], axis=1, )
paddle.tensor_split(Tensor([4, 20372334, 7, 4],"int64"), list[2,4,6,], axis=-2, )
paddle.tensor_split(Tensor([4, 4, 4, 35651585],"int64"), list[2,4,6,], axis=3, )
paddle.tensor_split(Tensor([4, 20372334, 4, 7],"int64"), list[2,4,6,], axis=3, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,3,], axis=0, )
paddle.tensor_split(Tensor([715827883, 6],"float16"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 570425345],"int64"), 2, axis=1, )
paddle.tensor_split(Tensor([4, 570425345],"int64"), list[2,4,6,], axis=1, )
paddle.tensor_split(Tensor([4, 570425345],"int64"), list[2,3,], axis=1, )
paddle.tensor_split(Tensor([178956971, 4, 6],"float16"), 3, axis=2, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,4,5,], )
paddle.tensor_split(Tensor([2281701379],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([2281701379],"int64"), tuple(2,5,), )
paddle.tensor_split(Tensor([4, 95070891, 6],"int64"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 20372334, 7],"int64"), list[2,4,6,], axis=3, )
paddle.tensor_split(Tensor([4, 570425345],"bool"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 81489335, 7],"int64"), 2, axis=2, )
paddle.tensor_split(Tensor([4, 4, 4, 35651585],"int64"), 2, axis=3, )
paddle.tensor_split(Tensor([4, 4, 35651585, 4],"int64"), list[2,4,6,], axis=-2, )
paddle.tensor_split(Tensor([7, 108652447, 3],"int64"), 3, )
paddle.tensor_split(Tensor([81489335, 4, 7],"int64"), 2, axis=2, )
paddle.tensor_split(Tensor([190141782, 4, 3],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([7, 108652447, 3],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([4, 570425345],"int64"), tuple(2,6,), axis=1, )
paddle.tensor_split(Tensor([4, 81489335, 7],"int64"), list[2,3,], axis=2, )
paddle.tensor_split(Tensor([81489335, 4, 7],"int64"), list[2,3,], axis=2, )
paddle.tensor_split(Tensor([715827883, 6],"uint8"), 3, axis=1, )
paddle.tensor_split(Tensor([95070891, 4, 6],"float32"), 3, axis=2, )
paddle.tensor_split(Tensor([325957340, 7],"int64"), tuple(2,6,), axis=1, )
paddle.tensor_split(Tensor([570425345, 4],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([380283564, 6],"int32"), 3, axis=1, )
paddle.tensor_split(Tensor([2281701379],"int64"), 3, )
paddle.tensor_split(Tensor([2281701379],"int64"), 2, )
paddle.tensor_split(Tensor([4, 4, 20372334, 7],"int64"), tuple(2,6,), axis=3, )
paddle.tensor_split(Tensor([7, 4, 81489335],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([7, 325957340],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([4294967297],"float16"), 3, axis=0, )
paddle.tensor_split(Tensor([2281701379],"int64"), 2, axis=0, )
paddle.tensor_split(Tensor([7, 4, 81489335],"int64"), 3, )
paddle.tensor_split(Tensor([4, 4, 7, 20372334],"int64"), 3, axis=-2, )
paddle.tensor_split(Tensor([20372334, 4, 4, 7],"int64"), 3, axis=3, )
paddle.tensor_split(Tensor([20372334, 4, 7, 4],"int64"), 2, axis=-2, )
paddle.tensor_split(Tensor([4, 4, 142606337],"int64"), tuple(2,6,), axis=2, )
paddle.tensor_split(Tensor([2281701379],"float32"), 3, axis=0, )
paddle.tensor_split(Tensor([570425345, 4],"int64"), 3, )
paddle.tensor_split(Tensor([4, 20372334, 4, 7],"int64"), tuple(2,6,), axis=3, )
paddle.tensor_split(Tensor([4, 4, 268435457],"float16"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 20372334, 4, 7],"int64"), list[2,3,], axis=3, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,3,16,], axis=0, )
paddle.tensor_split(Tensor([4, 4, 20372334, 7],"int64"), 3, axis=3, )
paddle.tensor_split(Tensor([4, 4, 35651585, 4],"int64"), 2, axis=-2, )
paddle.tensor_split(Tensor([2281701379],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([570425345, 4],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([4, 4, 35651585, 4],"int64"), list[2,3,], axis=-2, )
paddle.tensor_split(Tensor([190141782, 4, 3],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([7, 108652447, 3],"int64"), 2, )
paddle.tensor_split(Tensor([20372334, 4, 4, 7],"int64"), 2, axis=3, )
paddle.tensor_split(Tensor([4, 20372334, 4, 7],"int64"), 2, axis=3, )
paddle.tensor_split(Tensor([7, 325957340],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([4, 95070891, 6],"bool"), 3, axis=2, )
paddle.tensor_split(Tensor([7, 108652447, 3],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([380283564, 6],"int64"), 3, axis=1, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([3, 4, 190141782],"float32"), Tensor([4, 4, 5],"float32"), tuple(1,), )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[3,1,2,], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([114085069, 4, 5],"float32"), tuple(1,), )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[0,], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(x=Tensor([76695845, 7, 4, 2],"float16"), y=Tensor([8, 7, 4, 2],"float16"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(x=Tensor([76695845, 7, 4, 2],"float16"), y=Tensor([7, 7, 4, 2],"float16"), axes=list[tuple(1,2,3,),tuple(0,2,3,),], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 858993460, 1, 1],"float16"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(Tensor([2],"int64"),Tensor([2],"int64"),), )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(x=Tensor([2, 3, 4, 2],"float16"), y=Tensor([2, 3, 102261127, 7],"float16"), axes=list[0,1,], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), list[list[1,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[3,0,], )
paddle.tensordot(Tensor([1, 858993460, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(x=Tensor([4, 3, 357913942],"float16"), y=Tensor([4, 1, 8],"float16"), axes=list[0,1,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), tuple(tuple(1,2,),tuple(0,1,),), )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 1, 858993460],"float16"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 858993460, 5],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 4294967297, 1, 1],"float16"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(x=Tensor([2, 4, 107374183, 5],"float16"), y=Tensor([2, 4, 107374183, 5],"float16"), axes=list[0,2,], )
paddle.tile(Tensor([1, 91268056, 5, 5],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([13501192, 1, 13, 13],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([216, 248, 1, 21298, 2],"float32"), list[1,1,1,1,1,], )
paddle.tile(Tensor([8, 142606337, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([2, 1140850690],"int64"), list[1,2,], )
paddle.tile(Tensor([1, 1, 456340276, 5],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([5820667, 196, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 2713082, 29, 29],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1140850690, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 196, 11641334],"float32"), list[1,1,2,], )
paddle.tile(Tensor([8, 200, 1426064],"float32"), list[1,1,2,], )
paddle.tile(Tensor([4, 570425345, 1],"bool"), list[1,1,4,], )
paddle.tile(Tensor([1960, 1164134],"bool"), list[1,24,], )
paddle.tile(Tensor([2, 570425345, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([364, 6268411, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([1, 192, 11883862],"float32"), list[1,1,2,], )
paddle.tile(Tensor([216, 5281717, 1, 1, 2],"float32"), list[1,1,1,1,1,], )
paddle.tile(Tensor([2, 200, 5704254],"float32"), list[1,1,2,], )
paddle.tile(Tensor([2, 8, 1, 1, 268435457],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([1, 1, 2281701379],"int64"), list[1,1,1,], )
paddle.tile(Tensor([364, 7, 895488],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([4, 285212673, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([728, 3134206, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([13, 1, 175515491],"float32"), list[1,1,4,], )
paddle.tile(Tensor([2, 8, 1, 4194305, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([2, 33554433, 1, 1, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([1, 1, 175515491, 13],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([5941931, 192, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([2, 192, 5941931],"float32"), list[1,1,2,], )
paddle.tile(Tensor([2, 8, 4194305, 1, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([1, 1, 78679358, 29],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([4, 200, 2852127],"float32"), list[1,1,2,], )
paddle.tile(Tensor([71303169, 1, 32],"float32"), list[1,1,4,], )
paddle.tile(Tensor([4600205, 248, 1, 1, 2],"float32"), list[1,1,1,1,1,], )
paddle.tile(Tensor([8388609, 8, 1, 1, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([216, 248, 1, 1, 42595],"float32"), list[1,1,1,1,1,], )
paddle.tile(Tensor([1, 1, 13, 175515491],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([5704254, 200, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 200, 11408507],"float32"), list[1,1,2,], )
paddle.tile(Tensor([6482107, 176, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([101862, 22400, 1],"bool"), list[1,1,4,], )
paddle.tile(Tensor([2713082, 1, 29, 29],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([5761873, 198, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([325957340, 7, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([2281701379],"int64"), repeat_times=list[1,1,], )
paddle.tile(Tensor([2, 198, 5761873],"float32"), list[1,1,2,], )
paddle.tile(Tensor([4, 22400, 25466],"bool"), list[1,1,4,], )
paddle.tile(Tensor([16, 176, 810264],"float32"), list[1,1,2,], )
paddle.tile(Tensor([2281701379, 1, 1],"int64"), list[1,1,1,], )
paddle.tile(Tensor([91268056, 1, 5, 5],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([162978670, 14, 1],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([1, 1, 29, 78679358],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 2281701379, 1],"int64"), list[1,1,1,], )
paddle.tile(Tensor([5, 456340276],"float32"), list[1,5,], )
paddle.tile(Tensor([2, 8, 1, 64, 4194305],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([1, 1, 5, 456340276],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 13501192, 13, 13],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([13, 5484860, 32],"float32"), list[1,1,4,], )
paddle.tile(Tensor([2, 8, 65537, 64, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([728, 14, 223872],"int64"), repeat_times=list[1,1,2,], )
paddle.tile(Tensor([216, 248, 21298, 1, 2],"float32"), list[1,1,1,1,1,], )
paddle.tile(Tensor([2, 524289, 1, 64, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([131073, 8, 1, 64, 64],"float16"), list[1,1,1,1,1,], )
paddle.tile(Tensor([16, 71303169, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([4, 570425345],"float32"), repeat_times=list[1,4,], )
paddle.tolist(Tensor([2, 1140850690],"int64"), )
paddle.tolist(Tensor([2, 1140850690],"float32"), )
paddle.topk(Tensor([13, 79380],"float32"), k=1, axis=0, )
paddle.topk(Tensor([64, 39, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 182391],"float32"), k=1, axis=0, )
paddle.topk(Tensor([6, 245520],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 69300],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 129, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([10, 286464],"float32"), k=1, axis=0, )
paddle.topk(Tensor([29, 349866],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 64, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([29, 359100],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 359100],"float32"), k=1, axis=0, )
paddle.topk(Tensor([35, 285444],"float32"), k=1, axis=0, )
paddle.topk(Tensor([7, 369105],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 26, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 38, 3600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 303858],"float32"), k=1, axis=0, )
paddle.topk(Tensor([3029, 458],"float32"), k=3, largest=True, )
paddle.topk(Tensor([4, 142606337, 4],"float32"), 3, axis=1, largest=False, )
paddle.topk(Tensor([2, 189, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 82, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([64, 35, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([20, 294624],"float32"), k=1, axis=0, )
paddle.topk(Tensor([5, 234804],"float32"), k=1, axis=0, )
paddle.topk(Tensor([27, 223827],"float32"), k=1, axis=0, )
paddle.topk(Tensor([22, 356541],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 57, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([4, 36, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([20, 193368],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 60, 9261],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 21, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 354501],"float32"), k=1, axis=0, )
paddle.topk(Tensor([29, 72360],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 43, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 49, 8464],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([14, 369303],"float32"), k=1, axis=0, )
paddle.topk(Tensor([18, 245823],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 67, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 29, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 130, 3600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([7, 270096],"float32"), k=1, axis=0, )
paddle.topk(Tensor([12, 285444],"float32"), k=1, axis=0, )
paddle.topk(Tensor([15, 300762],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4, 377514],"float32"), k=1, axis=0, )
paddle.topk(Tensor([5, 236616],"float32"), k=1, axis=0, )
paddle.topk(Tensor([5633831, 405],"float32"), 10, axis=0, )
paddle.topk(Tensor([17, 257796],"float32"), k=1, axis=0, )
paddle.topk(Tensor([64, 53, 324],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 177, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([16, 28, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 322245],"float32"), k=1, axis=0, )
paddle.topk(Tensor([6, 188256],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 48, 61236],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([15, 330429],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 19, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([14, 194157],"float32"), k=1, axis=0, )
paddle.topk(Tensor([21, 369303],"float32"), k=1, axis=0, )
paddle.topk(Tensor([15, 277539],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 217689],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4, 58, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 17, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 2281701379],"float32"), 799, )
paddle.topk(Tensor([2, 84, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([8, 365211],"float32"), k=1, axis=0, )
paddle.topk(Tensor([13, 200022],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 86940],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4, 260865],"float32"), k=1, axis=0, )
paddle.topk(Tensor([8, 43, 5184],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([17, 80640],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 49, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([5, 230202],"float32"), k=1, axis=0, )
paddle.topk(Tensor([10, 346086],"float32"), k=1, axis=0, )
paddle.topk(Tensor([6, 196416],"float32"), k=1, axis=0, )
paddle.topk(Tensor([9, 375984],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 18, 5184],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([5, 291555],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4981881, 458],"float32"), k=3, largest=True, )
paddle.topk(Tensor([16, 16, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([29, 57000],"float32"), k=1, axis=0, )
paddle.topk(Tensor([1, 41, 52500],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([19, 56250],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 105, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([20, 269586],"float32"), k=1, axis=0, )
paddle.topk(Tensor([15, 223827],"float32"), k=1, axis=0, )
paddle.topk(Tensor([28, 69750],"float32"), k=1, axis=0, )
paddle.topk(Tensor([11, 283905],"float32"), k=1, axis=0, )
paddle.topk(Tensor([6, 277539],"float32"), k=1, axis=0, )
paddle.topk(Tensor([2, 70, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([25, 277539],"float32"), k=1, axis=0, )
paddle.topk(Tensor([13, 295443],"float32"), k=1, axis=0, )
paddle.topk(Tensor([27, 86940],"float32"), k=1, axis=0, )
paddle.topk(Tensor([11, 408177],"float32"), k=1, axis=0, )
paddle.topk(Tensor([11, 268560],"float32"), k=1, axis=0, )
paddle.topk(Tensor([64, 31, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([11, 317160],"float32"), k=1, axis=0, )
paddle.topk(Tensor([30, 257796],"float32"), k=1, axis=0, )
paddle.topk(Tensor([4, 278256],"float32"), k=1, axis=0, )
paddle.topk(Tensor([6, 354501],"float32"), k=1, axis=0, )
paddle.topk(Tensor([16, 20, 3136],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([18550418, 123],"float32"), 2, axis=1, )
paddle.topk(Tensor([16, 74100],"float32"), k=1, axis=0, )
paddle.trace(x=Tensor([1073741825, 4],"float16"), offset=-1, axis1=0, axis2=1, )
paddle.trace(x=Tensor([3, 1431655766],"float16"), offset=-1, axis1=0, axis2=1, )
paddle.trace(Tensor([1140850690, 2],"float32"), )
paddle.trace(x=Tensor([1073741825, 4],"float16"), offset=1, axis1=0, axis2=1, )
paddle.trace(x=Tensor([715827883, 3, 2],"float16"), offset=1, axis1=0, axis2=2, )
paddle.trace(x=Tensor([3, 1431655766],"float16"), offset=0, axis1=0, axis2=1, )
paddle.trace(x=Tensor([3, 1431655766],"float16"), offset=1, axis1=0, axis2=1, )
paddle.trace(x=Tensor([2, 1073741825, 2],"float16"), offset=1, axis1=0, axis2=2, )
paddle.trace(Tensor([2, 1140850690],"float32"), )
paddle.trace(x=Tensor([715827883, 3, 2],"float16"), offset=0, axis1=-3, axis2=-2, )
paddle.trace(x=Tensor([2, 3, 715827883],"float16"), offset=0, axis1=-3, axis2=-2, )
paddle.trace(x=Tensor([1073741825, 4],"float16"), offset=0, axis1=0, axis2=1, )
paddle.trace(x=Tensor([2, 3, 715827883],"float16"), offset=1, axis1=0, axis2=2, )
paddle.trace(x=Tensor([2, 1073741825, 2],"float16"), offset=0, axis1=-3, axis2=-2, )
paddle.transpose(Tensor([4, 12, 264, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 35200],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([64, 64768],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 64, 66944],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 164, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([48896, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([26752, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 176, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2193944, 26, 1, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([8, 12, 304, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 64, 68480],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([8, 3, 256, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([55552, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([33664, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 60, 67, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([63616, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 56, 75136],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([1, 64, 29952],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 200, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 43008],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 56, 32896],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([1, 2228225, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([64, 54016],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 12, 1500, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([64, 26, 512, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([1, 64, 36864],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([1, 28, 68608],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([82048, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 12, 320, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 26, 274243, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([1, 56, 44032],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([8, 12, 148, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 83],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([64, 68864],"float32"), list[1,0,], )
paddle.transpose(Tensor([48768, 28],"float32"), list[1,0,], )
paddle.transpose(x=Tensor([512, 2, 20, 32, 24],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([64, 26, 34281, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([4, 3, 304, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([64, 19200],"float32"), list[1,0,], )
paddle.transpose(Tensor([64, 72192],"float32"), list[1,0,], )
paddle.transpose(Tensor([28, 52480],"float32"), list[1,0,], )
paddle.transpose(Tensor([22912, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([64, 23168],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 12, 304, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 64, 85888],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 184, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([38784, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([2, 11883862, 96],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 12, 256, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 28, 46592],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([64, 46336],"float32"), list[1,0,], )
paddle.transpose(Tensor([64, 48896],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 56, 35072],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([17792, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 56, 75520],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([64, 17920],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 56, 54656],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([50560, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 12, 144, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 64, 34688],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([1, 64, 28288],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([21376, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 56, 54272],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([45568, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([28, 55424],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 1114113, 128, 16],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 56, 70144],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([67712, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([37248, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([17920, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 12, 160, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 56, 63744],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([28, 41216],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 64, 73088],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([1, 56, 61824],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([64, 29440],"float32"), list[1,0,], )
paddle.transpose(Tensor([28, 40064],"float32"), list[1,0,], )
paddle.transpose(Tensor([64, 66944],"float32"), list[1,0,], )
paddle.transpose(Tensor([52736, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([52224, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([2, 5093084, 7, 8, 4],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([81536, 28],"float32"), list[1,0,], )
paddle.transpose(Tensor([72320, 64],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 12, 248, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1486, 1024, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([28, 36352],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 64, 37888],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([64, 50432],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 3, 336, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 65920],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 64, 24832],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([8, 80, 112, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([28, 52096],"float32"), list[1,0,], )
paddle.transpose(Tensor([1, 64, 59264],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([4, 60, 73, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 4, 3600, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 56, 34944],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([1, 64, 44416],"float32"), perm=list[0,2,1,], )
paddle.trapezoid(y=Tensor([2, 1140850690],"float32"), x=None, dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([190141782, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.trapezoid(y=Tensor([1431655766, 3],"float16"), x=Tensor([1431655766, 3],"float16"), dx=None, axis=-1, )
paddle.trapezoid(Tensor([2281701379],"float32"), dx=2.0, )
paddle.trapezoid(y=Tensor([760567127, 3],"float32"), x=Tensor([760567127, 3],"float32"), dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([1073741825, 4],"float16"), x=Tensor([1073741825, 4],"float16"), )
paddle.trapezoid(y=Tensor([1431655766, 3],"float16"), x=None, dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 1140850690],"float32"), x=Tensor([2, 1140850690],"float32"), dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([4, 1073741825],"float16"), x=Tensor([4, 1073741825],"float16"), )
paddle.trapezoid(y=Tensor([760567127, 3],"float32"), x=None, dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([3, 3, 253522376],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.tril(Tensor([843825, 1, 52, 52],"bool"), )
paddle.tril(Tensor([2, 1140850690, 1, 1],"bool"), )
paddle.tril(Tensor([1, 1, 2048, 2048],"float32"), )
paddle.tril(Tensor([2, 1, 22369622, 51],"bool"), )
paddle.tril(Tensor([2, 1, 20014925, 57],"bool"), )
paddle.tril(Tensor([2048, 2048],"bool"), )
paddle.tril(x=Tensor([3, 380283564, 2],"float32"), diagonal=0, )
paddle.tril(Tensor([2, 972152, 47, 47],"float16"), )
paddle.tril(Tensor([147, 15521779],"bool"), )
paddle.tril(Tensor([1126767, 1, 45, 45],"bool"), )
paddle.tril(Tensor([153391690, 28],"float16"), )
paddle.tril(Tensor([5704254, 20, 20],"int32"), )
paddle.tril(Tensor([2, 1, 22817014, 50],"bool"), )
paddle.tril(Tensor([112, 20372334],"bool"), )
paddle.tril(Tensor([15011194, 152],"bool"), )
paddle.tril(Tensor([2, 1, 45, 25352238],"bool"), )
paddle.tril(Tensor([2, 1, 114085069, 10],"float32"), )
paddle.tril(Tensor([2, 57042535, 20],"int32"), )
paddle.tril(Tensor([6, 380283564],"float32"), diagonal=0, )
paddle.tril(Tensor([1, 1, 39339679, 58],"float32"), )
paddle.tril(Tensor([20555869, 111],"bool"), )
paddle.tril(Tensor([5704254, 1, 20, 20],"float32"), )
paddle.tril(Tensor([114, 20014925],"bool"), )
paddle.tril(Tensor([2, 1, 30833803, 37],"bool"), )
paddle.tril(Tensor([2, 1487178, 38, 38],"float16"), )
paddle.tril(Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.tril(Tensor([23, 186737709],"float16"), )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=5, )
paddle.tril(Tensor([2, 1, 30022387, 38],"bool"), )
paddle.tril(Tensor([13265706, 172],"bool"), )
paddle.tril(Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.tril(Tensor([1, 1, 39339679, 58],"bool"), )
paddle.tril(Tensor([204522253, 21],"float16"), )
paddle.tril(Tensor([1651276, 1, 51, 51],"float16"), )
paddle.tril(Tensor([10, 228170138, 1],"float32"), 0, )
paddle.tril(Tensor([112, 38347923],"float16"), )
paddle.tril(Tensor([1321936, 1, 57, 57],"float16"), )
paddle.tril(Tensor([4, 1, 570425345, 1],"float32"), )
paddle.tril(Tensor([22817014, 1, 10, 10],"float32"), )
paddle.tril(Tensor([2, 1, 35, 32595734],"bool"), )
paddle.tril(Tensor([152, 15011194],"bool"), )
paddle.tril(Tensor([7555303, 302],"bool"), )
paddle.tril(Tensor([2555008, 1, 41, 41],"float16"), )
paddle.tril(Tensor([2, 1, 50, 22817014],"bool"), )
paddle.tril(Tensor([2, 1, 41, 52377650],"float16"), )
paddle.tril(Tensor([20742740, 110],"bool"), )
paddle.tril(Tensor([2048, 1114113],"bool"), )
paddle.tril(Tensor([3, 760567127],"bool"), )
paddle.tril(x=Tensor([3, 2, 715827883],"float16"), diagonal=-5, )
paddle.tril(Tensor([4, 32738, 132, 132],"bool"), )
paddle.tril(Tensor([39403370, 109],"float16"), )
paddle.tril(Tensor([1, 1, 1114113, 2048],"float32"), )
paddle.tril(Tensor([2, 1, 42107523, 51],"float16"), )
paddle.tril(Tensor([1, 1, 58, 39339679],"bool"), )
paddle.tril(Tensor([1, 2281701379],"float32"), diagonal=0, )
paddle.tril(Tensor([28, 153391690],"float16"), )
paddle.tril(Tensor([148, 15416902],"bool"), )
paddle.tril(Tensor([2, 45634028, 5, 5],"float32"), )
paddle.tril(Tensor([2, 1, 1, 1140850690],"float32"), )
paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-1, )
paddle.tril(Tensor([2281701379, 1],"float32"), diagonal=0, )
paddle.tril(Tensor([18512791, 232],"float16"), )
paddle.tril(Tensor([2, 1, 1140850690, 1],"bool"), )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=-1, )
paddle.tril(Tensor([2, 1, 47, 45691142],"float16"), )
paddle.tril(Tensor([4, 1, 4321405, 132],"bool"), )
paddle.tril(Tensor([2, 1, 5, 228170138],"float32"), )
paddle.tril(Tensor([2, 20, 57042535],"int32"), )
paddle.tril(Tensor([2, 1, 39, 55063684],"float16"), )
paddle.tril(Tensor([20014925, 114],"bool"), )
paddle.tril(Tensor([2, 1, 10, 114085069],"float32"), )
paddle.tril(Tensor([164, 13912814],"bool"), )
paddle.tril(Tensor([1, 1, 2048, 2048],"bool"), )
paddle.tril(Tensor([1, 20, 114085069],"float32"), )
paddle.tril(Tensor([912681, 1, 50, 50],"bool"), )
paddle.tril(Tensor([148102321, 29],"float16"), )
paddle.tril(Tensor([26, 165191050],"float16"), )
paddle.tril(Tensor([288, 7922575],"bool"), )
paddle.tril(Tensor([1007, 1007],"bool"), )
paddle.tril(Tensor([1114113, 2048],"bool"), )
paddle.tril(Tensor([30, 143165577],"float16"), )
paddle.tril(Tensor([2, 563384, 45, 45],"bool"), )
paddle.tril(Tensor([2, 1, 29252582, 39],"bool"), )
paddle.tril(Tensor([1, 5704254, 20, 20],"float32"), )
paddle.tril(Tensor([1580126, 1, 38, 38],"bool"), )
paddle.tril(Tensor([107, 21324312],"bool"), )
paddle.tril(Tensor([4, 570425345, 1, 1],"float32"), )
paddle.tril(Tensor([1, 1, 1024, 1024],"int64"), )
paddle.tril(Tensor([2, 1, 228170138, 5],"float32"), )
paddle.tril(Tensor([32, 71303169],"float32"), -1, )
paddle.tril(Tensor([2281701379, 1, 1, 1],"bool"), )
paddle.tril(Tensor([13, 175515491],"float32"), )
paddle.tril(Tensor([91268056, 1, 5, 5],"float32"), )
paddle.tril(Tensor([186737709, 23],"float16"), )
paddle.tril(Tensor([11523745, 198],"bool"), )
paddle.tril(Tensor([1666693, 1, 37, 37],"bool"), )
paddle.tril(Tensor([38693400, 111],"float16"), )
paddle.tril(Tensor([7922575, 288],"bool"), )
paddle.tril(x=Tensor([3, 2, 715827883],"float16"), diagonal=-1, )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=1, )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-1, )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=1, )
paddle.triu(Tensor([2, 21262215, 1, 101],"float16"), )
paddle.triu(Tensor([1, 78679358, 1, 29],"float32"), diagonal=1, )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=-5, )
paddle.triu(Tensor([2, 21053762, 1, 102],"float16"), )
paddle.triu(Tensor([1, 162978670, 1, 14],"float32"), diagonal=1, )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=-1, )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=0, )
paddle.triu(Tensor([39045158, 1, 1, 110],"float16"), )
paddle.triu(Tensor([2, 1, 19004281, 113],"float16"), )
paddle.triu(Tensor([1, 1, 126761188, 18],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 2048, 2048],"float16"), )
paddle.triu(Tensor([1, 1, 429496730, 10],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 190141782, 12],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 2281701379],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 18512791, 116],"float16"), )
paddle.triu(Tensor([1, 1, 2097153, 2048],"float16"), )
paddle.triu(Tensor([37025581, 1, 1, 116],"float16"), )
paddle.triu(Tensor([1, 1, 4096, 4096],"float32"), diagonal=1, )
paddle.triu(Tensor([11, 207427399],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 20259280, 1, 106],"float16"), )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=0, )
paddle.triu(Tensor([39403370, 1, 1, 109],"float16"), )
paddle.triu(Tensor([1, 1, 286331154, 15],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 99204408, 23],"float32"), diagonal=1, )
paddle.triu(Tensor([175515491, 13],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 21474837, 100],"float16"), )
paddle.triu(Tensor([5941931, 384],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 20452226, 1, 105],"float16"), )
paddle.triu(Tensor([128, 17825793],"float32"), 1, )
paddle.triu(Tensor([1, 1, 142606337, 16],"float32"), )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=0, )
paddle.triu(Tensor([2, 19346700, 1, 111],"float16"), )
paddle.triu(Tensor([1, 330382100, 1, 13],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 91268056, 25],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 19522579, 110],"float16"), )
paddle.triu(Tensor([78679358, 1, 1, 29],"float32"), diagonal=1, )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=1, )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=5, )
paddle.triu(Tensor([40139882, 1, 1, 107],"float16"), )
paddle.triu(Tensor([77, 29632486],"float32"), 1, )
paddle.triu(Tensor([108652447, 1, 1, 21],"float32"), diagonal=1, )
paddle.triu(Tensor([175515491, 1, 1, 13],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 21262215, 101],"float16"), )
paddle.triu(Tensor([38347923, 1, 1, 112],"float16"), )
paddle.triu(Tensor([2, 18354562, 1, 117],"float16"), )
paddle.triu(Tensor([126761188, 1, 1, 18],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 21474837, 1, 100],"float16"), )
paddle.triu(Tensor([36092163, 1, 1, 119],"float16"), )
paddle.triu(Tensor([1, 1, 95070891, 24],"float32"), diagonal=1, )
paddle.triu(Tensor([357913942, 1, 1, 12],"float16"), diagonal=1, )
paddle.triu(Tensor([41698712, 1, 1, 103],"float16"), )
paddle.triu(Tensor([17825793, 128],"float32"), 1, )
paddle.triu(Tensor([456340276, 5],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 126761188, 1, 18],"float32"), diagonal=1, )
paddle.triu(Tensor([7130317, 2, 10, 16],"bool"), )
paddle.triu(Tensor([87757746, 1, 1, 26],"float32"), diagonal=1, )
paddle.triu(x=Tensor([570425345, 2, 2],"int32"), diagonal=0, )
paddle.triu(Tensor([30, 76056713],"float32"), diagonal=1, )
paddle.triu(Tensor([12, 27163112, 7],"float32"), diagonal=1, )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=5, )
paddle.triu(Tensor([39768216, 1, 1, 108],"float16"), )
paddle.triu(Tensor([2, 18512791, 1, 116],"float16"), )
paddle.triu(Tensor([190141782, 1, 1, 12],"float32"), diagonal=1, )
paddle.triu(x=Tensor([570425345, 2, 2],"float32"), diagonal=0, )
paddle.triu(Tensor([22, 103713700],"float32"), diagonal=1, )
paddle.triu(Tensor([42524429, 1, 1, 101],"float16"), )
paddle.triu(Tensor([2, 19004281, 1, 113],"float16"), )
paddle.triu(Tensor([1140850690, 1, 1, 2],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1140850690, 1, 2],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 17895698, 120],"float16"), )
paddle.triu(Tensor([6, 380283564],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 120089547, 19],"float32"), diagonal=1, )
paddle.triu(Tensor([103713700, 22],"float32"), diagonal=1, )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=5, )
paddle.triu(Tensor([207427399, 1, 1, 11],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 20648882, 1, 104],"float16"), )
paddle.triu(Tensor([2, 1, 18354562, 117],"float16"), )
paddle.triu(Tensor([23, 99204408],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 390451573, 1, 11],"float16"), diagonal=1, )
paddle.triu(Tensor([1782580, 1280],"float32"), diagonal=1, )
paddle.triu(Tensor([37347542, 1, 1, 115],"float16"), )
paddle.triu(Tensor([1, 14260634, 10, 16],"bool"), )
paddle.triu(Tensor([42107523, 1, 1, 102],"float16"), )
paddle.triu(Tensor([1, 1, 1140850690, 2],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 20452226, 105],"float16"), )
paddle.triu(Tensor([2, 1, 20648882, 104],"float16"), )
paddle.triu(Tensor([1, 1, 175515491, 13],"float32"), diagonal=1, )
paddle.triu(Tensor([142606337, 16],"float32"), diagonal=1, )
paddle.triu(Tensor([2281701379, 1, 1, 1],"float32"), diagonal=1, )
paddle.triu(Tensor([5, 456340276],"float32"), diagonal=1, )
paddle.triu(Tensor([114085069, 20, 1],"float32"), 0, )
paddle.triu(Tensor([1, 228170138, 1, 10],"float32"), diagonal=1, )
paddle.triu(Tensor([570425345, 4],"float32"), diagonal=1, )
paddle.triu(Tensor([40904451, 1, 1, 105],"float16"), )
paddle.triu(Tensor([1, 14260634, 10, 16],"float32"), )
paddle.triu(Tensor([2, 19522579, 1, 110],"float16"), )
paddle.triu(Tensor([2, 1, 18837576, 114],"float16"), )
paddle.triu(Tensor([1, 120089547, 1, 19],"float32"), diagonal=1, )
paddle.trunc(input=Tensor([6, 19884108, 6, 6],"float16"), )
paddle.trunc(input=Tensor([3, 6, 6, 6628036, 6],"float16"), )
paddle.trunc(Tensor([10, 228170138, 1],"float32"), )
paddle.trunc(Tensor([114085069, 20],"float32"), )
paddle.trunc(input=Tensor([3, 6, 6, 6, 6628036],"float16"), )
paddle.trunc(input=Tensor([6, 6, 19884108, 6],"float16"), )
paddle.trunc(input=Tensor([6, 6, 119304648],"float16"), )
paddle.trunc(input=Tensor([19884108, 6, 6, 6],"float16"), )
paddle.trunc(input=Tensor([6, 119304648, 6],"float16"), )
paddle.trunc(input=Tensor([380283564, 6],"int32"), )
paddle.trunc(input=Tensor([6, 6, 6, 19884108],"float16"), )
paddle.trunc(input=Tensor([3, 6628036, 6, 6, 6],"float16"), )
paddle.trunc(input=Tensor([3314018, 6, 6, 6, 6],"float16"), )
paddle.trunc(Tensor([114085069, 20, 1],"float32"), )
paddle.trunc(input=Tensor([119304648, 6, 6],"float16"), )
paddle.trunc(input=Tensor([6, 380283564],"int32"), )
paddle.trunc(Tensor([20, 114085069],"float32"), )
paddle.trunc(Tensor([10, 20, 11408507],"float32"), )
paddle.trunc(input=Tensor([3, 6, 6628036, 6, 6],"float16"), )
paddle.unbind(Tensor([2, 1140850690],"bool"), axis=0, )
paddle.unbind(Tensor([4, 2, 285212673],"float32"), axis=2, )
paddle.unbind(Tensor([3, 2, 380283564],"int32"), axis=0, )
paddle.unbind(Tensor([4, 190141782, 3],"float32"), axis=-1, )
paddle.unbind(Tensor([2, 1140850690],"float32"), 0, )
paddle.unbind(Tensor([2, 3, 47535446, 8],"float32"), axis=0, )
paddle.unbind(Tensor([380283564, 2, 3],"float32"), axis=2, )
paddle.unbind(Tensor([4, 2, 285212673],"float32"), axis=-1, )
paddle.unbind(Tensor([3, 152113426, 5],"float32"), axis=0, )
paddle.unbind(Tensor([4, 3, 2, 178956971],"float16"), axis=1, )
paddle.unbind(Tensor([3, 380283564, 2],"int32"), axis=0, )
paddle.unbind(Tensor([3, 9, 84507459],"float32"), axis=0, )
paddle.unbind(Tensor([380283564, 2, 3],"float32"), axis=-1, )
paddle.unbind(Tensor([2, 17825793, 8, 8],"float32"), axis=0, )
paddle.unbind(Tensor([357913942, 3, 2, 2],"float16"), axis=1, )
paddle.unbind(Tensor([4, 190141782, 3],"float32"), axis=2, )
paddle.unbind(Tensor([4, 3, 178956971, 2],"float16"), axis=1, )
paddle.unbind(Tensor([2, 3, 8, 47535446],"float32"), axis=0, )
paddle.unflatten(x=Tensor([4, 35651585, 16],"float32"), axis=0, shape=Tensor([2],"int64"), )
paddle.unflatten(x=Tensor([4, 6, 178956971],"float16"), axis=0, shape=tuple(2,2,), )
paddle.unflatten(x=Tensor([4, 6, 95070891],"float32"), axis=0, shape=Tensor([2],"int64"), )
paddle.unflatten(x=Tensor([4, 67108865, 16],"float16"), axis=0, shape=tuple(2,2,), )
paddle.unfold(Tensor([4294967297],"float16"), -1, 2, 5, )
paddle.unfold(Tensor([5, 858993460],"float16"), 0, 5, 1, )
paddle.unique_consecutive(x=Tensor([6, 380283564],"float32"), return_inverse=True, return_counts=True, axis=0, )
paddle.unique_consecutive(x=Tensor([570425345, 4],"float32"), return_inverse=True, return_counts=True, axis=0, )
paddle.unsqueeze(Tensor([52, 5, 1755155, 5],"float32"), 1, )
paddle.unsqueeze(Tensor([570425345, 2, 2],"int64"), axis=1, )
paddle.unsqueeze(Tensor([2281701379],"int64"), 1, )
paddle.unsqueeze(Tensor([8, 285212673],"float32"), axis=1, )
paddle.unsqueeze(Tensor([325957340, 7, 1],"float32"), 1, )
paddle.unsqueeze(Tensor([23767723, 4, 3, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([27531842, 156],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([2281701379, 1],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([570425345, 4],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([107, 21324312],"float32"), 1, )
paddle.unsqueeze(Tensor([52, 5, 1, 8775775],"float32"), 1, )
paddle.unsqueeze(Tensor([16777217, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([14626291, 156],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([570425345, 4],"float32"), 1, )
paddle.unsqueeze(Tensor([107, 21324312],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4, 512, 1024],"int64"), 1, )
paddle.unsqueeze(Tensor([14260634, 160],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([152113426, 5, 3],"float32"), axis=2, )
paddle.unsqueeze(x=Tensor([2, 2147483649],"int8"), axis=1, )
paddle.unsqueeze(Tensor([71303169, 32],"float32"), axis=0, )
paddle.unsqueeze(Tensor([146029, 125, 125],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([52, 4, 5, 1, 2193944],"float32"), axis=2, )
paddle.unsqueeze(Tensor([1901418, 30, 40],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([570425345, 2, 2],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([2, 1114113, 1024],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([52, 4, 3, 457072, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([13, 4, 3, 1, 14626291],"float32"), axis=3, )
paddle.unsqueeze(Tensor([13581556, 168],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([3, 3, 6338060, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([52, 4, 1, 1371215, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([1069, 2134426],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([7, 325957340],"float32"), axis=0, )
paddle.unsqueeze(Tensor([13, 175515491, 1],"float32"), 1, )
paddle.unsqueeze(x=Tensor([1431655766, 3],"float16"), axis=list[0,1,], )
paddle.unsqueeze(Tensor([3656573, 624],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([23282668, 7, 14],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([114085069, 20],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([20, 30, 3802836],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([52, 43878873, 1],"float32"), 1, )
paddle.unsqueeze(Tensor([3, 3, 2112687, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([2, 2228225, 512],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([46684428, 92],"float16"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([13, 5, 1, 35103099],"float32"), 1, )
paddle.unsqueeze(Tensor([114085069, 20],"int64"), axis=2, )
paddle.unsqueeze(Tensor([81489335, 28],"float32"), axis=0, )
paddle.unsqueeze(Tensor([4, 1024, 557057],"int64"), 1, )
paddle.unsqueeze(Tensor([52, 3, 14626291],"float32"), 1, )
paddle.unsqueeze(Tensor([2, 2, 570425345],"int64"), axis=1, )
paddle.unsqueeze(Tensor([1, 162978670, 14],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([8912897, 256],"float32"), 0, )
paddle.unsqueeze(x=Tensor([1431655766, 3],"float16"), axis=tuple(0,1,), )
paddle.unsqueeze(Tensor([13, 7313146, 3, 1, 8],"float32"), axis=3, )
paddle.unsqueeze(Tensor([3, 6338060, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([108, 21126865],"float32"), 1, )
paddle.unsqueeze(Tensor([50704476, 45],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([1073741825, 4],"float16"), -1, )
paddle.unsqueeze(Tensor([1, 71303169, 32],"float32"), 2, )
paddle.unsqueeze(Tensor([52, 5484860, 1, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([134217729, 17],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([3, 158452, 3, 40, 40],"float32"), axis=1, )
paddle.unsqueeze(Tensor([416, 50, 256],"float32"), axis=2, )
paddle.unsqueeze(Tensor([152113426, 15],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([13, 21939437, 1, 1, 8],"float32"), axis=2, )
paddle.unsqueeze(x=Tensor([760567127, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([52, 171402, 256],"float32"), axis=2, )
paddle.unsqueeze(Tensor([102, 22369622],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4, 7042289, 81],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([4, 512, 512],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([4, 512, 1114113],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([16, 142606337],"float32"), axis=1, )
paddle.unsqueeze(Tensor([2228225, 32, 32],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([13, 4, 1, 5484860, 8],"float32"), axis=2, )
paddle.unsqueeze(Tensor([51856850, 44],"float32"), axis=0, )
paddle.unsqueeze(Tensor([100, 22817014],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([1, 7, 325957340],"float32"), axis=-1, )
paddle.unsqueeze(Tensor([2, 512, 1024],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([3, 40, 40, 475355],"float32"), axis=1, )
paddle.unsqueeze(Tensor([71303169, 32],"float32"), axis=1, )
paddle.unsqueeze(Tensor([3, 3, 3, 40, 2112687],"float32"), axis=1, )
paddle.unsqueeze(Tensor([14626291, 156],"float32"), axis=list[2,3,], )
paddle.unsqueeze(Tensor([3, 158452, 40, 40, 3],"float32"), axis=1, )
paddle.unsqueeze(Tensor([4, 1114113, 512],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([52, 43878873],"float32"), axis=list[1,3,], )
paddle.unsqueeze(Tensor([8, 26, 10969719],"float32"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([2, 2147483649],"float16"), axis=2, )
paddle.unsqueeze(Tensor([4, 570425345],"float32"), list[2,], )
paddle.unsqueeze(x=Tensor([760567127, 3],"int64"), axis=1, )
paddle.unsqueeze(Tensor([1, 2281701379],"float32"), 1, )
paddle.unsqueeze(Tensor([1, 4294967297],"float16"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([4, 570425345],"float32"), list[1,], )
paddle.unsqueeze(Tensor([2281701379, 1],"int64"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([13, 7, 25073642],"int32"), axis=0, )
paddle.unsqueeze(Tensor([104, 21939437],"int64"), axis=-1, )
paddle.unsqueeze(x=Tensor([1431655766, 3],"float16"), axis=Tensor([3],"int64"), )
paddle.unsqueeze(Tensor([52, 4, 1, 1, 10969719],"float32"), axis=2, )
paddle.unsqueeze(x=Tensor([1431655766, 3],"int8"), axis=1, )
paddle.unsqueeze(Tensor([36, 63380594],"float32"), axis=0, )
paddle.unsqueeze(Tensor([52, 4, 3, 1, 3656573],"float32"), axis=3, )
paddle.unsqueeze(Tensor([1, 2281701379],"int64"), axis=-1, )
paddle.unsqueeze(Tensor([34817, 256, 256],"float32"), 0, )
paddle.unstack(Tensor([5, 30422686, 15],"float32"), axis=-1, )
paddle.unstack(Tensor([162978670, 7, 2],"float32"), axis=-1, )
paddle.unstack(x=Tensor([2, 1, 1140850690],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 51856850, 22],"float32"), axis=0, )
paddle.unstack(Tensor([13, 87757746, 2],"float32"), axis=-1, )
paddle.unstack(x=Tensor([2, 57042535, 20],"float32"), axis=0, )
paddle.unstack(x=Tensor([162978670, 7, 2],"float32"), axis=-1, )
paddle.unstack(Tensor([5, 10, 45634028],"float32"), axis=-3, )
paddle.unstack(x=Tensor([2, 162978670, 7],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 142606337, 8],"float32"), axis=0, )
paddle.unstack(x=Tensor([2, 2, 570425345],"float32"), axis=0, )
paddle.unstack(Tensor([380283564, 2, 3],"float32"), axis=-1, )
paddle.unstack(Tensor([1, 4294967297],"float16"), 0, )
paddle.unstack(x=Tensor([2, 570425345, 2],"float32"), axis=-1, )
paddle.unstack(Tensor([5, 30422686, 15],"float32"), axis=-3, )
paddle.unstack(Tensor([4, 190141782, 3],"float32"), axis=-1, )
paddle.unstack(Tensor([15211343, 10, 15],"float32"), axis=-1, )
paddle.unstack(Tensor([5, 30422686, 15],"float32"), axis=2, )
paddle.unstack(Tensor([2147483649, 2],"float16"), 1, )
paddle.unstack(Tensor([15211343, 10, 15],"float32"), axis=2, )
paddle.unstack(Tensor([3, 380283564, 2],"int32"), axis=0, )
paddle.unstack(x=Tensor([2, 14, 81489335],"float32"), axis=0, )
paddle.unstack(Tensor([1140850690, 2],"float32"), 1, )
paddle.unstack(Tensor([5, 30422686, 15],"float32"), axis=0, )
paddle.unstack(Tensor([5, 10, 45634028],"float32"), axis=-2, )
paddle.unstack(Tensor([134217729, 4, 8],"float16"), )
paddle.unstack(Tensor([3, 2, 380283564],"int32"), axis=0, )
paddle.unstack(x=Tensor([13, 165191050, 2],"float16"), axis=-1, )
paddle.unstack(x=Tensor([2, 13, 87757746],"float32"), axis=0, )
paddle.unstack(x=Tensor([139265, 32, 512],"float32"), axis=0, )
paddle.unstack(Tensor([3, 760567127],"float32"), 1, )
paddle.unstack(Tensor([4, 190141782, 3],"float32"), axis=2, )
paddle.unstack(x=Tensor([306783379, 7, 2],"float16"), axis=-1, )
paddle.unstack(Tensor([5, 10, 45634028],"float32"), axis=1, )
paddle.unstack(x=Tensor([2, 32, 35651585],"float32"), axis=0, )
paddle.unstack(Tensor([5, 10, 45634028],"float32"), axis=0, )
paddle.unstack(x=Tensor([13, 87757746, 2],"float32"), axis=-1, )
paddle.unstack(Tensor([380283564, 2, 3],"float32"), axis=2, )
paddle.unstack(Tensor([15211343, 10, 15],"float32"), axis=1, )
paddle.unstack(Tensor([15211343, 10, 15],"float32"), axis=-2, )
paddle.unstack(x=Tensor([2, 2228225, 512],"float32"), axis=0, )
paddle.vander(Tensor([2281701379],"float32"), 1, False, )
paddle.vander(Tensor([2281701379],"float32"), 1, True, )
paddle.vander(Tensor([2281701379],"float32"), 2, True, )
paddle.vander(Tensor([2281701379],"float32"), 0, False, )
paddle.vander(Tensor([2281701379],"float32"), 0, True, )
paddle.var(Tensor([16777217, 256],"float16"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 268435457],"float16"), axis=-1, keepdim=True, )
paddle.var(x=Tensor([760567127, 3],"float32"), )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), axis=list[0,1,], )
paddle.var(Tensor([1, 107374183, 4, 10],"float16"), list[1,2,], True, False, )
paddle.var(x=Tensor([1431655766, 3],"float16"), )
paddle.var(x=Tensor([13, 96, 1828287],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 760567127, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([16, 96, 1485483],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([13, 175515491, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(Tensor([71303169, 32, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([23767723, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([35791395, 3, 4, 10],"float16"), list[1,2,], True, False, )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.var(Tensor([1, 57042535, 4, 10],"float32"), list[1,3,], True, False, )
paddle.var(x=Tensor([16, 71303169, 2],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(Tensor([384, 96, 1, 61896],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([1, 3, 4, 357913942],"float16"), list[1,2,], True, False, )
paddle.var(Tensor([1, 3, 143165577, 10],"float16"), list[1,3,], True, False, )
paddle.var(x=Tensor([3, 96, 7922575],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,1,], )
paddle.var(x=Tensor([2, 1140850690],"float32"), )
paddle.var(Tensor([192, 96, 1, 123791],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([47535446, 48, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 64, 1, 1485483],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([192, 96, 123791, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([1, 3, 4, 190141782],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 143165577, 10],"float16"), list[1,2,], True, False, )
paddle.var(Tensor([384, 192, 1, 30948],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.var(Tensor([1, 3, 4, 357913942],"float16"), list[1,3,], False, False, )
paddle.var(Tensor([24, 96, 990322, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 95070891, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([1, 107374183, 4, 10],"float16"), 2, True, False, )
paddle.var(Tensor([192, 48, 1, 247581],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([8912897, 256],"float32"), axis=-1, keepdim=True, )
paddle.var(x=Tensor([23767723, 96, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(Tensor([32, 16, 1, 4456449],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 142606337, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([35791395, 3, 4, 10],"float16"), 2, True, False, )
paddle.var(Tensor([24, 10563433, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 8, 17825793, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), axis=0, unbiased=False, )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), axis=list[0,1,], )
paddle.var(x=Tensor([11883862, 96, 2],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(Tensor([35791395, 3, 4, 10],"float16"), list[1,3,], False, False, )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), axis=tuple(0,1,), )
paddle.var(Tensor([1, 3, 4, 357913942],"float16"), tuple(1,3,), True, False, )
paddle.var(x=Tensor([16, 142606337, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(Tensor([2281701379],"float32"), )
paddle.var(Tensor([24, 24, 3, 1320430],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([35791395, 3, 4, 10],"float16"), list[1,3,], True, False, )
paddle.var(Tensor([192, 11883862, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([142606337, 16, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), axis=tuple(0,1,), )
paddle.var(x=Tensor([2, 570425345, 2],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(Tensor([19014179, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 107374183, 4, 10],"float16"), list[1,3,], False, False, )
paddle.var(Tensor([1, 107374183, 4, 10],"float16"), list[1,3,], True, False, )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), )
paddle.var(Tensor([384, 192, 30948, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([1, 3, 4, 357913942],"float16"), list[1,3,], True, False, )
paddle.var(Tensor([285212673, 8, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), )
paddle.var(Tensor([10563433, 24, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), axis=0, )
paddle.var(Tensor([11883862, 192, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 24, 1320430, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([1, 3, 4, 357913942],"float16"), 2, True, False, )
paddle.var(Tensor([32, 8, 1, 8912897],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([32, 71303169, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), axis=tuple(0,1,), keepdim=True, )
paddle.var(Tensor([32, 8, 8912897, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([1, 3, 76056713, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([48, 47535446, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([384, 5941931, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 96, 1, 990322],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([32, 16, 4456449, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([1, 107374183, 4, 10],"float16"), tuple(1,3,), True, False, )
paddle.var(Tensor([48, 192, 247581, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), axis=0, )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), axis=0, unbiased=False, )
paddle.var(Tensor([24, 64, 1485483, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([15845149, 16, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), )
paddle.var(Tensor([16, 16, 3, 2970966],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 142606337],"float32"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 32, 1, 4456449],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([1, 3, 143165577, 10],"float16"), tuple(1,3,), True, False, )
paddle.var(x=Tensor([2, 2147483649],"float16"), )
paddle.var(Tensor([16, 8, 1, 17825793],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 477218589, 3],"float16"), axis=0, unbiased=False, )
paddle.var(Tensor([1, 3, 143165577, 10],"float16"), list[1,3,], False, False, )
paddle.var(Tensor([192, 48, 247581, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([2, 96, 11883862],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 16, 2970966, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([384, 96, 61896, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 3, 477218589],"float16"), axis=tuple(0,1,), )
paddle.var(Tensor([16, 32, 4456449, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([48, 192, 1, 247581],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.vecdot(Tensor([3, 760567127],"float32"), Tensor([3, 760567127],"float32"), axis=-1, )
paddle.vecdot(Tensor([2, 3, 715827883],"float16"), Tensor([2, 3, 715827883],"float16"), axis=-1, )
paddle.vecdot(Tensor([357913942, 3, 4],"float16"), Tensor([357913942, 3, 4],"float16"), axis=-1, )
paddle.vecdot(Tensor([3, 286331154, 5],"float16"), Tensor([3, 286331154, 5],"float16"), axis=1, )
paddle.vecdot(Tensor([1073741825, 4],"float16"), Tensor([1073741825, 4],"float16"), axis=-1, )
paddle.vecdot(Tensor([3, 1431655766],"float16"), Tensor([3, 1431655766],"float16"), axis=-1, )
paddle.vecdot(Tensor([3, 4, 357913942],"float16"), Tensor([3, 4, 357913942],"float16"), axis=1, )
paddle.vecdot(Tensor([2, 536870913, 4],"float16"), Tensor([2, 536870913, 4],"float16"), axis=-1, )
paddle.vecdot(Tensor([1140850690, 2],"float32"), Tensor([2],"float32"), axis=-1, )
paddle.vecdot(Tensor([2],"float32"), Tensor([1140850690, 2],"float32"), axis=-1, )
paddle.vecdot(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), axis=-1, )
paddle.vecdot(Tensor([214748365, 4, 5],"float16"), Tensor([214748365, 4, 5],"float16"), axis=1, )
paddle.view(Tensor([10, 10, 1140851, 20],"float32"), list[10,100,-1,], )
paddle.view(Tensor([10, 1140851, 10, 20],"float32"), list[-1,], )
paddle.view(Tensor([10, 1140851, 10, 20],"float32"), list[10,100,-1,], )
paddle.view(Tensor([10, 10, 1140851, 20],"float32"), list[1000,-1,], )
paddle.view(Tensor([10, 10, 10, 2281702],"float32"), list[1000,-1,], )
paddle.view(Tensor([10, 10, 10, 2281702],"float32"), list[10,100,-1,], )
paddle.view(Tensor([10, 10, 10, 2281702],"float32"), list[-1,], )
paddle.view(Tensor([10, 10, 1140851, 20],"float32"), list[-1,], )
paddle.view(Tensor([10, 1140851, 10, 20],"float32"), list[1000,-1,], )
paddle.view(Tensor([1140851, 10, 10, 20],"float32"), list[10,100,-1,], )
paddle.view(Tensor([1140851, 10, 10, 20],"float32"), list[-1,], )
paddle.view(Tensor([1140851, 10, 10, 20],"float32"), list[1000,-1,], )
paddle.view_as(Tensor([10, 10, 10, 2281702],"float32"), Tensor([10, 100, 2281702],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 64, 128, 128],"float32"), offset=Tensor([4, 18, 128, 128],"float32"), weight=Tensor([64, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 128, 128],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([5070448, 5, 5, 5],"float32"), offset=Tensor([5070448, 18, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, mask=Tensor([5070448, 9, 5, 5],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([30422686, 3, 5, 5],"float32"), offset=Tensor([30422686, 18, 1, 1],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[3,3,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([30422686, 3, 5, 5],"float32"), offset=Tensor([30422686, 18, 1, 1],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[3,3,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([126761188, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([3869, 32, 64, 64],"float32"), offset=Tensor([3869, 144, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float32"), bias=Tensor([32],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=8, groups=1, mask=Tensor([3869, 72, 64, 64],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([8, 512, 18, 18],"float32"), offset=Tensor([8, 18, 18, 18],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([8, 9, 18, 18],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([30422686, 3, 5, 5],"float32"), offset=Tensor([30422686, 18, 1, 1],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[3,3,], deformable_groups=1, groups=1, mask=Tensor([30422686, 9, 1, 1],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([8, 512, 16, 16],"float32"), offset=Tensor([8, 18, 16, 16],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([8, 9, 16, 16],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 512, 32, 32],"float32"), offset=Tensor([4, 18, 16, 16],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 16, 16],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([2, 57042535, 5, 5],"float32"), Tensor([2, 2, 5, 5],"float32"), Tensor([40, 57042535, 1, 1],"float32"), None, list[1,1,], list[0,0,], list[1,1,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(Tensor([2, 45634028, 5, 5],"float32"), Tensor([2, 2, 5, 5],"float32"), Tensor([40, 45634028, 1, 1],"float32"), None, list[1,1,], list[0,0,], list[1,1,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(x=Tensor([11142, 512, 20, 20],"float32"), offset=Tensor([11142, 18, 10, 10],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([11142, 9, 10, 10],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 512, 50, 50],"float32"), offset=Tensor([6, 36, 25, 25],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 25, 25],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 256, 100, 100],"float32"), offset=Tensor([6, 36, 50, 50],"float32"), weight=Tensor([256, 256, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 50, 50],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([8, 512, 30, 30],"float32"), offset=Tensor([8, 18, 15, 15],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([8, 9, 15, 15],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([8, 512, 13, 13],"float32"), offset=Tensor([8, 18, 13, 13],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([8, 9, 13, 13],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([2586964, 3, 5, 5],"float32"), offset=Tensor([2586964, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([2586964, 3, 5, 5],"float32"), offset=Tensor([2586964, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(Tensor([5070448, 3, 5, 5],"float32"), Tensor([5070448, 18, 5, 5],"float32"), Tensor([6, 3, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 1, Tensor([5070448, 9, 5, 5],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([2586964, 3, 5, 5],"float32"), offset=Tensor([2586964, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([2586964, 9, 7, 7],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([5070448, 3, 5, 5],"float32"), Tensor([5070448, 18, 5, 5],"float32"), Tensor([6, 3, 3, 3],"float32"), None, list[2,2,], list[3,3,], list[1,1,], 1, 1, Tensor([5070448, 9, 5, 5],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([5070448, 5, 5, 5],"float32"), offset=Tensor([5070448, 18, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 32, 64, 64],"float32"), offset=Tensor([4, 72, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float32"), bias=Tensor([32],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=4, groups=1, mask=Tensor([4, 36, 64, 64],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 128, 76, 136],"float32"), offset=Tensor([20, 18, 76, 136],"float32"), weight=Tensor([128, 128, 3, 3],"float32"), bias=Tensor([128],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 76, 136],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([2, 4, 4, 4],"float32"), Tensor([2, 18, 4, 4],"float32"), Tensor([63380594, 4, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 22817014, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([5, 22817014, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 3, 3],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([2, 3, 5, 5],"float32"), Tensor([2, 18, 5, 5],"float32"), Tensor([84507459, 3, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 1, Tensor([2, 9, 5, 5],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([3621749, 3, 5, 5],"float32"), offset=Tensor([3621749, 18, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([3621749, 9, 5, 7],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 128, 64, 64],"float32"), offset=Tensor([4, 18, 64, 64],"float32"), weight=Tensor([128, 128, 3, 3],"float32"), bias=Tensor([128],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 64, 64],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([8, 512, 34, 34],"float32"), offset=Tensor([8, 18, 17, 17],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([8, 9, 17, 17],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([1014090, 5, 5, 5],"float32"), offset=Tensor([1014090, 90, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, mask=Tensor([1014090, 45, 5, 5],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 128, 76, 136],"float32"), offset=Tensor([20, 18, 76, 136],"float32"), weight=Tensor([64, 128, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 76, 136],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([8, 512, 17, 17],"float32"), offset=Tensor([8, 18, 17, 17],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([8, 9, 17, 17],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([2586964, 3, 5, 5],"float32"), offset=Tensor([2586964, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([1783, 128, 100, 100],"float32"), offset=Tensor([1783, 36, 100, 100],"float32"), weight=Tensor([128, 128, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([1783, 18, 100, 100],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([12, 512, 20, 20],"float32"), offset=Tensor([12, 18, 10, 10],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([12, 9, 10, 10],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float32"), weight=Tensor([128, 256, 3, 3],"float32"), bias=Tensor([128],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([44565, 512, 10, 10],"float32"), offset=Tensor([44565, 18, 10, 10],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([44565, 9, 10, 10],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([12, 512, 10, 10],"float32"), offset=Tensor([12, 18, 10, 10],"float32"), weight=Tensor([495161, 512, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([12, 9, 10, 10],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 32, 64, 64],"float32"), offset=Tensor([4, 144, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float32"), bias=Tensor([32],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=8, groups=1, mask=Tensor([4, 72, 64, 64],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([8, 512, 32, 32],"float32"), offset=Tensor([8, 18, 16, 16],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([8, 9, 16, 16],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([446, 128, 200, 200],"float32"), offset=Tensor([446, 36, 100, 100],"float32"), weight=Tensor([446, 128, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([446, 18, 100, 100],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([14084577, 2, 5, 5],"float32"), offset=Tensor([14084577, 18, 3, 3],"float32"), weight=Tensor([5, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([8, 512, 15, 15],"float32"), offset=Tensor([8, 18, 15, 15],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([8, 9, 15, 15],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([8, 512, 26, 26],"float32"), offset=Tensor([8, 18, 13, 13],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([8, 9, 13, 13],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([126761188, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([64, 64, 32, 32],"float32"), offset=Tensor([64, 144, 32, 32],"float32"), weight=Tensor([64, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=8, groups=1, mask=Tensor([64, 72, 32, 32],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([14084577, 3, 5, 5],"float32"), offset=Tensor([14084577, 18, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([446, 128, 200, 200],"float32"), offset=Tensor([446, 36, 100, 100],"float32"), weight=Tensor([128, 128, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([446, 18, 100, 100],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([7737, 32, 64, 64],"float32"), offset=Tensor([7737, 72, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float32"), bias=Tensor([32],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=4, groups=1, mask=Tensor([7737, 36, 64, 64],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([2, 8, 4, 4],"float32"), Tensor([2, 18, 4, 4],"float32"), Tensor([63380594, 4, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 2, Tensor([2, 9, 4, 4],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([1014090, 5, 5, 5],"float32"), offset=Tensor([1014090, 90, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(Tensor([7922575, 8, 4, 4],"float32"), Tensor([7922575, 18, 4, 4],"float32"), Tensor([4, 4, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 2, None, )
paddle.vision.ops.deform_conv2d(x=Tensor([14084577, 2, 5, 5],"float32"), offset=Tensor([14084577, 18, 3, 3],"float32"), weight=Tensor([5, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([14084577, 9, 3, 3],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 256, 32, 32],"float32"), offset=Tensor([4, 18, 32, 32],"float32"), weight=Tensor([128, 256, 3, 3],"float32"), bias=Tensor([128],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 32, 32],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 128, 64, 64],"float32"), offset=Tensor([4, 18, 64, 64],"float32"), weight=Tensor([64, 128, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 64, 64],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 512, 19, 34],"float32"), offset=Tensor([20, 18, 19, 34],"float32"), weight=Tensor([256, 512, 3, 3],"float32"), bias=Tensor([256],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 19, 34],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 22817014, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([5, 22817014, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 128, 100, 100],"float32"), offset=Tensor([6, 36, 100, 100],"float32"), weight=Tensor([128, 128, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 100, 100],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([7922575, 4, 4, 4],"float32"), Tensor([7922575, 18, 4, 4],"float32"), Tensor([4, 4, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(Tensor([2, 45634028, 5, 5],"float32"), Tensor([2, 45634028, 5, 5],"float32"), Tensor([40, 45634028, 1, 1],"float32"), None, list[1,1,], list[0,0,], list[1,1,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 512, 25, 25],"float32"), offset=Tensor([6, 36, 25, 25],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 25, 25],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([12, 512, 10, 10],"float32"), offset=Tensor([12, 18, 10, 10],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([12, 9, 10, 10],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([7922575, 8, 4, 4],"float32"), Tensor([7922575, 18, 4, 4],"float32"), Tensor([4, 4, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 2, Tensor([7922575, 9, 4, 4],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([126761188, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 3, 3],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([7922575, 3, 4, 4],"float32"), Tensor([7922575, 18, 4, 4],"float32"), Tensor([6, 3, 3, 3],"float32"), None, list[1,1,], list[2,2,], list[2,2,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(Tensor([2, 8, 4, 4],"float32"), Tensor([2, 18, 4, 4],"float32"), Tensor([63380594, 4, 3, 3],"float32"), None, list[1,1,], list[1,1,], list[1,1,], 1, 2, None, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 512, 16, 16],"float32"), offset=Tensor([4, 18, 16, 16],"float32"), weight=Tensor([256, 512, 3, 3],"float32"), bias=Tensor([256],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 16, 16],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([1014090, 5, 5, 5],"float32"), offset=Tensor([1014090, 90, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, )
paddle.vision.ops.deform_conv2d(Tensor([5070448, 3, 5, 5],"float32"), Tensor([5070448, 18, 5, 5],"float32"), Tensor([6, 3, 3, 3],"float32"), None, list[2,2,], list[3,3,], list[1,1,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(Tensor([4, 3, 4, 4],"float32"), Tensor([4, 18, 4, 4],"float32"), Tensor([84507459, 3, 3, 3],"float32"), None, list[1,1,], list[2,2,], list[2,2,], 1, 1, Tensor([4, 9, 4, 4],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([8, 512, 36, 36],"float32"), offset=Tensor([8, 18, 18, 18],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([8, 9, 18, 18],"float32"), )
paddle.vision.ops.deform_conv2d(Tensor([2, 3, 5, 5],"float32"), Tensor([2, 18, 5, 5],"float32"), Tensor([84507459, 3, 3, 3],"float32"), None, list[2,2,], list[3,3,], list[1,1,], 1, 1, None, )
paddle.vision.ops.deform_conv2d(x=Tensor([14084577, 2, 5, 5],"float32"), offset=Tensor([14084577, 18, 3, 3],"float32"), weight=Tensor([5, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([14084577, 3, 5, 5],"float32"), offset=Tensor([14084577, 18, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([14084577, 9, 3, 3],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 256, 32, 32],"float32"), offset=Tensor([4, 18, 32, 32],"float32"), weight=Tensor([256, 256, 3, 3],"float32"), bias=Tensor([256],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 32, 32],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 256, 50, 50],"float32"), offset=Tensor([6, 36, 50, 50],"float32"), weight=Tensor([256, 256, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 50, 50],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 512, 16, 16],"float32"), offset=Tensor([4, 18, 16, 16],"float32"), weight=Tensor([512, 512, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 16, 16],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 128, 200, 200],"float32"), offset=Tensor([6, 36, 100, 100],"float32"), weight=Tensor([128, 128, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 100, 100],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([64, 64, 16, 16],"float32"), offset=Tensor([64, 144, 16, 16],"float32"), weight=Tensor([64, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=8, groups=1, mask=Tensor([64, 72, 16, 16],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([2586964, 3, 5, 5],"float32"), offset=Tensor([2586964, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float32"), weight=Tensor([64, 256, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([1725, 128, 76, 136],"float32"), offset=Tensor([1725, 18, 76, 136],"float32"), weight=Tensor([128, 128, 3, 3],"float32"), bias=Tensor([128],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([1725, 9, 76, 136],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([12, 512, 20, 20],"float32"), offset=Tensor([12, 18, 10, 10],"float32"), weight=Tensor([495161, 512, 3, 3],"float32"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([12, 9, 10, 10],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 256, 32, 32],"float32"), offset=Tensor([4, 18, 32, 32],"float32"), weight=Tensor([64, 256, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([4, 9, 32, 32],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([3621749, 3, 5, 5],"float32"), offset=Tensor([3621749, 18, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=None, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 22817014, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), weight=Tensor([5, 22817014, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([14084577, 3, 5, 5],"float32"), offset=Tensor([14084577, 18, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float32"), weight=Tensor([256, 256, 3, 3],"float32"), bias=Tensor([256],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([2586964, 3, 5, 5],"float32"), offset=Tensor([2586964, 18, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([2586964, 9, 7, 7],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([3621749, 3, 5, 5],"float32"), offset=Tensor([3621749, 18, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([5070448, 5, 5, 5],"float32"), offset=Tensor([5070448, 18, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, mask=None, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 76],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([3714, 256, 40, 60],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([279, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 144],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 128],"float32"), boxes=Tensor([888, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 64],"float32"), boxes=Tensor([217, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 72],"float32"), boxes=Tensor([727, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 240],"float32"), boxes=Tensor([1710, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([16506, 256, 20, 27],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 256],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 140],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 320],"float32"), boxes=Tensor([2637, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 272],"float32"), boxes=Tensor([1411, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 280],"float32"), boxes=Tensor([2666, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([1448, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 27, 38],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([203, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 56, 74],"float32"), boxes=Tensor([480, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1043, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 168],"float32"), boxes=Tensor([264, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 152],"float32"), boxes=Tensor([726, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 184],"float32"), boxes=Tensor([1524, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 40, 34],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 136],"float32"), boxes=Tensor([464, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 84],"float32"), boxes=Tensor([650, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 248],"float32"), boxes=Tensor([1210, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 280],"float32"), boxes=Tensor([204, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 76],"float32"), boxes=Tensor([467, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 232, 264],"float32"), boxes=Tensor([1605, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 41],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 328],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 156],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([428, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([486, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 168],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 248],"float32"), boxes=Tensor([159, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([598, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([356, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([1366, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 240],"float32"), boxes=Tensor([1210, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 56, 72],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 56, 42],"float32"), boxes=Tensor([132, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 96, 72],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 46],"float32"), boxes=Tensor([341, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 224],"float32"), boxes=Tensor([1339, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 148],"float32"), boxes=Tensor([304, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 80, 64],"float32"), boxes=Tensor([298, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 264],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 76],"float32"), boxes=Tensor([733, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([435, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 60],"float32"), boxes=Tensor([296, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 144],"float32"), boxes=Tensor([401, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 124],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 37],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 328],"float32"), boxes=Tensor([2477, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([313, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 74],"float32"), boxes=Tensor([297, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 304],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 148],"float32"), boxes=Tensor([910, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 76, 76],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 168],"float32"), boxes=Tensor([412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([1062, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([479, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 84],"float32"), boxes=Tensor([622, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 148],"float32"), boxes=Tensor([706, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 42],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 42],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 224],"float32"), boxes=Tensor([229, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 58, 68],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 82, 84],"float32"), boxes=Tensor([2045, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 38],"float32"), boxes=Tensor([154, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 132],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 37],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 58, 62],"float32"), boxes=Tensor([778, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 320],"float32"), boxes=Tensor([1413, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([143, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([587, 256, 100, 152],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 132],"float32"), boxes=Tensor([326, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 128],"float32"), boxes=Tensor([1035, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 76],"float32"), boxes=Tensor([354, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 62],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 140],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 132],"float32"), boxes=Tensor([426, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 52, 72],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 144],"float32"), boxes=Tensor([138, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 140],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_pool(Tensor([1, 256, 278529, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=3, )
paddle.vision.ops.roi_pool(Tensor([1, 256, 278529, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(3,4,), )
paddle.vision.ops.roi_pool(x=Tensor([142606337, 1, 4, 4],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=1, spatial_scale=1.0, )
paddle.vision.ops.roi_pool(Tensor([8705, 256, 32, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(3,4,), )
paddle.vision.ops.roi_pool(Tensor([1, 256, 32, 278529],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(3,4,), )
paddle.vision.ops.roi_pool(Tensor([8705, 256, 32, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=3, )
paddle.vision.ops.roi_pool(x=Tensor([1, 256, 278529, 32],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(4,3,), spatial_scale=1.0, )
paddle.vision.ops.roi_pool(Tensor([1, 256, 32, 278529],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=3, )
paddle.vision.ops.roi_pool(x=Tensor([1, 256, 32, 278529],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(4,3,), spatial_scale=1.0, )
paddle.vision.ops.roi_pool(x=Tensor([8705, 256, 32, 32],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(4,3,), spatial_scale=1.0, )
paddle.vision.ops.roi_pool(x=Tensor([1, 1, 570425345, 4],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=1, spatial_scale=1.0, )
paddle.vision.ops.roi_pool(x=Tensor([1, 1, 4, 570425345],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=1, spatial_scale=1.0, )
paddle.vsplit(Tensor([6, 126761188, 3],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 126761188, 3],"int64"), list[2,4,], )
paddle.vsplit(Tensor([570425345, 4],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 4, 95070891],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 380283564],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 380283564],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 715827883],"float16"), 3, )
paddle.vsplit(Tensor([6, 380283564],"float32"), 3, )
paddle.vsplit(Tensor([6, 4, 95070891],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 380283564],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 4, 95070891],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([570425345, 4],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 380283564],"bool"), 3, )
paddle.vsplit(Tensor([570425345, 4],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([190141782, 4, 3],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 126761188, 3],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([6, 4, 95070891],"int64"), 2, )
paddle.vsplit(Tensor([6, 380283564],"int32"), 3, )
paddle.vsplit(Tensor([190141782, 4, 3],"int64"), list[-1,], )
paddle.vsplit(Tensor([190141782, 4, 3],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([6, 380283564],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([6, 126761188, 3],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 715827883],"uint8"), 3, )
paddle.vsplit(Tensor([6, 126761188, 3],"int64"), 3, )
paddle.vsplit(Tensor([6, 126761188, 3],"int64"), 2, )
paddle.vsplit(Tensor([6, 4, 95070891],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([570425345, 4],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 4, 95070891],"int64"), 3, )
paddle.vsplit(Tensor([6, 380283564],"int64"), 2, )
paddle.vsplit(Tensor([190141782, 4, 3],"int64"), 3, )
paddle.vsplit(Tensor([190141782, 4, 3],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 380283564],"int64"), 3, )
paddle.vsplit(Tensor([190141782, 4, 3],"int64"), 2, )
paddle.vstack(list[Tensor([1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 178956971],"float16"),], )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),], )
paddle.vstack(list[Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),Tensor([3, 1431655766],"float16"),], )
paddle.vstack(list[Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),Tensor([2147483649, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),], )
paddle.vstack(list[Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),], )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([4294967297],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 2, 178956971],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297],"float16"),Tensor([1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),Tensor([3, 4, 71582789, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 1431655766],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 71582789, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 357913942],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 1431655766],"float16"),], )
paddle.vstack(list[Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),Tensor([1, 4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),Tensor([3, 143165577, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([3, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([3, 2],"float16"),], )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),], )
paddle.vstack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([536870913, 4, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 715827883, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 357913942],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float16"),Tensor([1, 1, 1, 1],"float16"),Tensor([4294967297, 1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),Tensor([3, 4, 357913942],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),Tensor([1, 1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([4294967297],"float16"),Tensor([1, 4294967297],"float16"),], name=None, )
paddle.vstack(list[Tensor([2],"float16"),Tensor([2147483649, 2],"float16"),], )
paddle.vstack(list[Tensor([3, 715827883, 2],"float16"),], )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 143165577, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),Tensor([1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),], )
paddle.vstack(list[Tensor([536870913, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),Tensor([3, 4, 2],"float16"),], )
paddle.vstack(list[Tensor([1, 1],"float16"),Tensor([4294967297, 1],"float16"),Tensor([1, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),Tensor([4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([4294967297, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([4294967297, 1],"float16"),Tensor([1, 1],"float16"),Tensor([1, 1],"float16"),], )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),Tensor([3, 2],"float16"),Tensor([3, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),Tensor([1, 4294967297, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 4294967297, 1],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 4294967297],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),Tensor([1, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([3, 2],"float16"),Tensor([2147483649, 2],"float16"),Tensor([3, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),Tensor([3, 715827883, 2],"float16"),], name=None, )
paddle.vstack(list[Tensor([2147483649, 2],"float16"),], )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float16"),Tensor([107374183, 4, 2, 5],"float16"),Tensor([3, 4, 2, 5],"float16"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),Tensor([1, 1, 4294967297, 1],"float16"),], )
paddle.vstack(list[Tensor([4294967297, 1, 1],"float16"),], )
paddle.vstack(list[Tensor([2],"float16"),Tensor([2147483649, 2],"float16"),], name=None, )
paddle.where(Tensor([22, 331251],"bool"), Tensor([22, 331251],"float32"), Tensor([22, 331251],"float32"), )
paddle.where(Tensor([9, 73365],"bool"), Tensor([9, 73365],"float32"), Tensor([9, 73365],"float32"), )
paddle.where(Tensor([19, 283905],"bool"), Tensor([19, 283905],"float32"), Tensor([19, 283905],"float32"), )
paddle.where(Tensor([2, 138, 1],"bool"), Tensor([2, 138, 6069],"float32"), Tensor([2, 138, 6069],"float32"), )
paddle.where(Tensor([8, 32, 4725],"bool"), Tensor([8, 32, 4725],"float32"), Tensor([8, 32, 4725],"float32"), )
paddle.where(Tensor([11, 386694],"bool"), Tensor([11, 386694],"float32"), Tensor([11, 386694],"float32"), )
paddle.where(Tensor([13, 349866],"bool"), Tensor([13, 349866],"float32"), Tensor([13, 349866],"float32"), )
paddle.where(Tensor([2, 95, 1],"bool"), Tensor([2, 95, 7581],"float32"), Tensor([2, 95, 7581],"float32"), )
paddle.where(Tensor([2, 233244],"bool"), Tensor([2, 233244],"float32"), Tensor([2, 233244],"float32"), )
paddle.where(Tensor([7, 48300],"bool"), Tensor([7, 48300],"float32"), Tensor([7, 48300],"float32"), )
paddle.where(Tensor([13, 248616],"bool"), Tensor([13, 248616],"float32"), Tensor([13, 248616],"float32"), )
paddle.where(Tensor([1, 65, 1],"bool"), Tensor([1, 65, 21504],"float32"), Tensor([1, 65, 21504],"float32"), )
paddle.where(Tensor([2, 44, 1],"bool"), Tensor([2, 44, 12096],"float32"), Tensor([2, 44, 12096],"float32"), )
paddle.where(Tensor([8, 15, 8400],"bool"), Tensor([8, 15, 8400],"float32"), Tensor([8, 15, 8400],"float32"), )
paddle.where(Tensor([2, 84, 7581],"bool"), Tensor([2, 84, 7581],"float32"), Tensor([2, 84, 7581],"float32"), )
paddle.where(Tensor([2, 246051],"bool"), Tensor([2, 246051],"float32"), Tensor([2, 246051],"float32"), )
paddle.where(Tensor([2, 150, 9261],"bool"), Tensor([2, 150, 9261],"float32"), Tensor([2, 150, 9261],"float32"), )
paddle.where(Tensor([24, 220968],"bool"), Tensor([24, 220968],"float32"), Tensor([24, 220968],"float32"), )
paddle.where(Tensor([16, 8, 6069],"bool"), Tensor([16, 8, 6069],"float32"), Tensor([16, 8, 6069],"float32"), )
paddle.where(Tensor([1, 44, 48384],"bool"), Tensor([1, 44, 48384],"float32"), Tensor([1, 44, 48384],"float32"), )
paddle.where(Tensor([2, 66, 3549],"bool"), Tensor([2, 66, 3549],"float32"), Tensor([2, 66, 3549],"float32"), )
paddle.where(Tensor([16, 19, 2541],"bool"), Tensor([16, 19, 2541],"float32"), Tensor([16, 19, 2541],"float32"), )
paddle.where(Tensor([1, 58, 37044],"bool"), Tensor([1, 58, 37044],"float32"), Tensor([1, 58, 37044],"float32"), )
paddle.where(Tensor([34, 51750],"bool"), Tensor([34, 51750],"float32"), Tensor([34, 51750],"float32"), )
paddle.where(Tensor([9, 369303],"bool"), Tensor([9, 369303],"float32"), Tensor([9, 369303],"float32"), )
paddle.where(Tensor([6, 56730],"bool"), Tensor([6, 56730],"float32"), Tensor([6, 56730],"float32"), )
paddle.where(Tensor([4, 193368],"bool"), Tensor([4, 193368],"float32"), Tensor([4, 193368],"float32"), )
paddle.where(Tensor([1, 15, 1],"bool"), Tensor([1, 15, 33600],"float32"), Tensor([1, 15, 33600],"float32"), )
paddle.where(Tensor([14, 68040],"bool"), Tensor([14, 68040],"float32"), Tensor([14, 68040],"float32"), )
paddle.where(Tensor([12, 322272],"bool"), Tensor([12, 322272],"float32"), Tensor([12, 322272],"float32"), )
paddle.where(Tensor([16, 27, 4116],"bool"), Tensor([16, 27, 4116],"float32"), Tensor([16, 27, 4116],"float32"), )
paddle.where(Tensor([2, 158, 1],"bool"), Tensor([2, 158, 3549],"float32"), Tensor([2, 158, 3549],"float32"), )
paddle.where(Tensor([20, 241221],"bool"), Tensor([20, 241221],"float32"), Tensor([20, 241221],"float32"), )
paddle.where(Tensor([8, 255780],"bool"), Tensor([8, 255780],"float32"), Tensor([8, 255780],"float32"), )
paddle.where(Tensor([13, 72000],"bool"), Tensor([13, 72000],"float32"), Tensor([13, 72000],"float32"), )
paddle.where(Tensor([25, 277539],"bool"), Tensor([25, 277539],"float32"), Tensor([25, 277539],"float32"), )
paddle.where(Tensor([2, 82, 3549],"bool"), Tensor([2, 82, 3549],"float32"), Tensor([2, 82, 3549],"float32"), )
paddle.where(Tensor([10, 331251],"bool"), Tensor([10, 331251],"float32"), Tensor([10, 331251],"float32"), )
paddle.where(Tensor([2, 110, 1],"bool"), Tensor([2, 110, 5376],"float32"), Tensor([2, 110, 5376],"float32"), )
paddle.where(Tensor([1, 29, 1],"bool"), Tensor([1, 29, 61236],"float32"), Tensor([1, 29, 61236],"float32"), )
paddle.where(Tensor([2, 116, 6069],"bool"), Tensor([2, 116, 6069],"float32"), Tensor([2, 116, 6069],"float32"), )
paddle.where(Tensor([8, 309255],"bool"), Tensor([8, 309255],"float32"), Tensor([8, 309255],"float32"), )
paddle.where(Tensor([7, 278256],"bool"), Tensor([7, 278256],"float32"), Tensor([7, 278256],"float32"), )
paddle.where(Tensor([2, 31, 1],"bool"), Tensor([2, 31, 8400],"float32"), Tensor([2, 31, 8400],"float32"), )
paddle.where(Tensor([12, 58320],"bool"), Tensor([12, 58320],"float32"), Tensor([12, 58320],"float32"), )
paddle.where(Tensor([8, 20, 12096],"bool"), Tensor([8, 20, 12096],"float32"), Tensor([8, 20, 12096],"float32"), )
paddle.where(Tensor([30, 257796],"bool"), Tensor([30, 257796],"float32"), Tensor([30, 257796],"float32"), )
paddle.where(Tensor([3, 168795],"bool"), Tensor([3, 168795],"float32"), Tensor([3, 168795],"float32"), )
paddle.where(Tensor([2, 150, 1],"bool"), Tensor([2, 150, 9261],"float32"), Tensor([2, 150, 9261],"float32"), )
paddle.where(Tensor([4, 280, 376, 25, 1],"bool"), Tensor([4, 280, 376, 25, 217],"float32"), Tensor([4, 280, 376, 25, 1],"float32"), )
paddle.where(Tensor([9, 214848],"bool"), Tensor([9, 214848],"float32"), Tensor([9, 214848],"float32"), )
paddle.where(Tensor([2, 48, 6804],"bool"), Tensor([2, 48, 6804],"float32"), Tensor([2, 48, 6804],"float32"), )
paddle.where(Tensor([1, 21, 1],"bool"), Tensor([1, 21, 24276],"float32"), Tensor([1, 21, 24276],"float32"), )
paddle.where(Tensor([2, 98, 1],"bool"), Tensor([2, 98, 7581],"float32"), Tensor([2, 98, 7581],"float32"), )
paddle.where(Tensor([1, 55, 30324],"bool"), Tensor([1, 55, 30324],"float32"), Tensor([1, 55, 30324],"float32"), )
paddle.where(Tensor([13, 310992],"bool"), Tensor([13, 310992],"float32"), Tensor([13, 310992],"float32"), )
paddle.where(Tensor([1, 17, 40656],"bool"), Tensor([1, 17, 40656],"float32"), Tensor([1, 17, 40656],"float32"), )
paddle.where(Tensor([1, 49, 40656],"bool"), Tensor([1, 49, 40656],"float32"), Tensor([1, 49, 40656],"float32"), )
paddle.where(Tensor([13, 262194],"bool"), Tensor([13, 262194],"float32"), Tensor([13, 262194],"float32"), )
paddle.where(Tensor([32, 343728],"bool"), Tensor([32, 343728],"float32"), Tensor([32, 343728],"float32"), )
paddle.where(Tensor([16, 24, 4725],"bool"), Tensor([16, 24, 4725],"float32"), Tensor([16, 24, 4725],"float32"), )
paddle.where(Tensor([2, 113, 11109],"bool"), Tensor([2, 113, 11109],"float32"), Tensor([2, 113, 11109],"float32"), )
paddle.where(Tensor([2, 124, 1],"bool"), Tensor([2, 124, 4725],"float32"), Tensor([2, 124, 4725],"float32"), )
paddle.where(Tensor([4, 301302],"bool"), Tensor([4, 301302],"float32"), Tensor([4, 301302],"float32"), )
paddle.where(Tensor([4, 35, 10164],"bool"), Tensor([4, 35, 10164],"float32"), Tensor([4, 35, 10164],"float32"), )
paddle.where(Tensor([2, 114, 1],"bool"), Tensor([2, 114, 4725],"float32"), Tensor([2, 114, 4725],"float32"), )
paddle.where(Tensor([6, 291555],"bool"), Tensor([6, 291555],"float32"), Tensor([6, 291555],"float32"), )
paddle.where(Tensor([1, 40, 24276],"bool"), Tensor([1, 40, 24276],"float32"), Tensor([1, 40, 24276],"float32"), )
paddle.where(Tensor([8, 35, 8400],"bool"), Tensor([8, 35, 8400],"float32"), Tensor([8, 35, 8400],"float32"), )
paddle.where(Tensor([14, 320739],"bool"), Tensor([14, 320739],"float32"), Tensor([14, 320739],"float32"), )
paddle.where(Tensor([2, 40, 5376],"bool"), Tensor([2, 40, 5376],"float32"), Tensor([2, 40, 5376],"float32"), )
paddle.where(Tensor([28, 321759],"bool"), Tensor([28, 321759],"float32"), Tensor([28, 321759],"float32"), )
paddle.where(Tensor([20, 257796],"bool"), Tensor([20, 257796],"float32"), Tensor([20, 257796],"float32"), )
paddle.where(Tensor([1, 10, 1],"bool"), Tensor([1, 10, 75600],"float32"), Tensor([1, 10, 75600],"float32"), )
paddle.where(Tensor([2, 26, 10164],"bool"), Tensor([2, 26, 10164],"float32"), Tensor([2, 26, 10164],"float32"), )
paddle.where(Tensor([4, 95, 9261],"bool"), Tensor([4, 95, 9261],"float32"), Tensor([4, 95, 9261],"float32"), )
paddle.where(Tensor([17, 50250],"bool"), Tensor([17, 50250],"float32"), Tensor([17, 50250],"float32"), )
paddle.where(Tensor([1, 65, 21504],"bool"), Tensor([1, 65, 21504],"float32"), Tensor([1, 65, 21504],"float32"), )
paddle.where(Tensor([3, 346086],"bool"), Tensor([3, 346086],"float32"), Tensor([3, 346086],"float32"), )
paddle.where(Tensor([20, 301302],"bool"), Tensor([20, 301302],"float32"), Tensor([20, 301302],"float32"), )
paddle.where(Tensor([1, 29, 1],"bool"), Tensor([1, 29, 48384],"float32"), Tensor([1, 29, 48384],"float32"), )
paddle.where(Tensor([20, 347820],"bool"), Tensor([20, 347820],"float32"), Tensor([20, 347820],"float32"), )
paddle.where(Tensor([10, 369303],"bool"), Tensor([10, 369303],"float32"), Tensor([10, 369303],"float32"), )
paddle.where(Tensor([2, 132, 1],"bool"), Tensor([2, 132, 12096],"float32"), Tensor([2, 132, 12096],"float32"), )
paddle.where(Tensor([31, 230202],"bool"), Tensor([31, 230202],"float32"), Tensor([31, 230202],"float32"), )
paddle.where(Tensor([2, 153, 2541],"bool"), Tensor([2, 153, 2541],"float32"), Tensor([2, 153, 2541],"float32"), )
paddle.where(Tensor([5, 320739],"bool"), Tensor([5, 320739],"float32"), Tensor([5, 320739],"float32"), )
paddle.where(Tensor([1, 63, 1],"bool"), Tensor([1, 63, 44436],"float32"), Tensor([1, 63, 44436],"float32"), )
paddle.where(Tensor([2, 37, 9261],"bool"), Tensor([2, 37, 9261],"float32"), Tensor([2, 37, 9261],"float32"), )
paddle.where(Tensor([1, 16, 1],"bool"), Tensor([1, 16, 44436],"float32"), Tensor([1, 16, 44436],"float32"), )
paddle.where(Tensor([16, 222012],"bool"), Tensor([16, 222012],"float32"), Tensor([16, 222012],"float32"), )
paddle.where(Tensor([11, 62730],"bool"), Tensor([11, 62730],"float32"), Tensor([11, 62730],"float32"), )
paddle.where(Tensor([2, 152, 1],"bool"), Tensor([2, 152, 12096],"float32"), Tensor([2, 152, 12096],"float32"), )
paddle.where(Tensor([2, 78, 11109],"bool"), Tensor([2, 78, 11109],"float32"), Tensor([2, 78, 11109],"float32"), )
paddle.where(Tensor([2, 22, 11109],"bool"), Tensor([2, 22, 11109],"float32"), Tensor([2, 22, 11109],"float32"), )
paddle.where(Tensor([1, 25, 21504],"bool"), Tensor([1, 25, 21504],"float32"), Tensor([1, 25, 21504],"float32"), )
paddle.where(Tensor([6, 188256],"bool"), Tensor([6, 188256],"float32"), Tensor([6, 188256],"float32"), )
paddle.where(Tensor([2, 37, 10164],"bool"), Tensor([2, 37, 10164],"float32"), Tensor([2, 37, 10164],"float32"), )
paddle.where(Tensor([23, 205923],"bool"), Tensor([23, 205923],"float32"), Tensor([23, 205923],"float32"), )
paddle.where(Tensor([1, 32, 65856],"bool"), Tensor([1, 32, 65856],"float32"), Tensor([1, 32, 65856],"float32"), )
paddle.zeros_like(Tensor([17, 349155],"float32"), )
paddle.zeros_like(Tensor([1, 356516, 6400],"float32"), )
paddle.zeros_like(Tensor([5, 237360],"float32"), )
paddle.zeros_like(Tensor([17, 214107],"float32"), )
paddle.zeros_like(Tensor([3, 2, 3, 4, 5, 1, 11930465],"float16"), )
paddle.zeros_like(Tensor([17, 354501],"float32"), )
paddle.zeros_like(Tensor([16, 8, 12096],"float32"), )
paddle.zeros_like(Tensor([7, 220968],"float32"), )
paddle.zeros_like(Tensor([17, 257796],"float32"), )
paddle.zeros_like(Tensor([5, 349866],"float32"), )
paddle.zeros_like(Tensor([23, 50250],"float32"), )
paddle.zeros_like(Tensor([14, 80640],"float32"), )
paddle.zeros_like(Tensor([13, 277539],"float32"), )
paddle.zeros_like(Tensor([11, 272649],"float32"), )
paddle.zeros_like(Tensor([12, 331251],"float32"), )
paddle.zeros_like(Tensor([8, 171888],"float32"), )
paddle.zeros_like(Tensor([10, 294624],"float32"), )
paddle.zeros_like(Tensor([7, 204624],"float32"), )
paddle.zeros_like(Tensor([3, 337620],"float32"), )
paddle.zeros_like(Tensor([16, 27, 10164],"float32"), )
paddle.zeros_like(Tensor([16, 30, 9261],"float32"), )
paddle.zeros_like(Tensor([16, 268569],"float32"), )
paddle.zeros_like(Tensor([16, 312324],"float32"), )
paddle.zeros_like(Tensor([34, 368280],"float32"), )
paddle.zeros_like(Tensor([16, 214107],"float32"), )
paddle.zeros_like(Tensor([16, 40, 6804],"float32"), )
paddle.zeros_like(Tensor([23, 294624],"float32"), )
paddle.zeros_like(Tensor([64, 29, 3060],"float32"), )
paddle.zeros_like(Tensor([12, 171888],"float32"), )
paddle.zeros_like(Tensor([11, 220968],"float32"), )
paddle.zeros_like(Tensor([26, 340176],"float32"), )
paddle.zeros_like(Tensor([28, 188256],"float32"), )
paddle.zeros_like(Tensor([30, 386694],"float32"), )
paddle.zeros_like(Tensor([1024, 2228225, 1, 1],"float32"), )
paddle.zeros_like(Tensor([35, 272118],"float32"), )
paddle.zeros_like(Tensor([3, 378540],"float32"), )
paddle.zeros_like(Tensor([4, 335568],"float32"), )
paddle.zeros_like(Tensor([8, 33, 4116],"float32"), )
paddle.zeros_like(Tensor([7, 190296],"float32"), )
paddle.zeros_like(Tensor([23, 350178],"float32"), )
paddle.zeros_like(Tensor([8, 182391],"float32"), )
paddle.zeros_like(Tensor([19, 369303],"float32"), )
paddle.zeros_like(Tensor([11, 340176],"float32"), )
paddle.zeros_like(Tensor([13, 286977],"float32"), )
paddle.zeros_like(Tensor([14, 261681],"float32"), )
paddle.zeros_like(Tensor([8, 53, 4725],"float32"), )
paddle.zeros_like(Tensor([8, 29, 10164],"float32"), )
paddle.zeros_like(Tensor([12, 217413],"float32"), )
paddle.zeros_like(Tensor([31, 229152],"float32"), )
paddle.zeros_like(Tensor([16, 29, 10164],"float32"), )
paddle.zeros_like(Tensor([8, 43, 4116],"float32"), )
paddle.zeros_like(Tensor([5, 250656],"float32"), )
paddle.zeros_like(Tensor([16, 22, 10164],"float32"), )
paddle.zeros_like(Tensor([8, 24, 160, 160],"float32"), )
paddle.zeros_like(Tensor([4456449, 512, 1, 1],"float32"), )
paddle.zeros_like(Tensor([4, 47, 10164],"float32"), )
paddle.zeros_like(Tensor([12, 388740],"float32"), )
paddle.zeros_like(Tensor([29151, 100, 2],"float32"), )
paddle.zeros_like(Tensor([18, 242991],"float32"), )
paddle.zeros_like(Tensor([10, 283905],"float32"), )
paddle.zeros_like(Tensor([11, 270096],"float32"), )
paddle.zeros_like(Tensor([27, 223827],"float32"), )
paddle.zeros_like(Tensor([10, 168795],"float32"), )
paddle.zeros_like(Tensor([8, 21, 7581],"float32"), )
paddle.zeros_like(Tensor([5, 220968],"float32"), )
paddle.zeros_like(Tensor([18, 261681],"float32"), )
paddle.zeros_like(Tensor([13, 340686],"float32"), )
paddle.zeros_like(Tensor([16, 86940],"float32"), )
paddle.zeros_like(Tensor([12, 330429],"float32"), )
paddle.zeros_like(Tensor([15, 230202],"float32"), )
paddle.zeros_like(Tensor([22, 56250],"float32"), )
paddle.zeros_like(Tensor([7, 303858],"float32"), )
paddle.zeros_like(Tensor([37, 268569],"float32"), )
paddle.zeros_like(Tensor([8, 440433],"float32"), )
paddle.zeros_like(Tensor([16, 50, 3024],"float32"), )
paddle.zeros_like(Tensor([2048, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([9, 260865],"float32"), )
paddle.zeros_like(x=Tensor([253522376, 3, 3],"int32"), )
paddle.zeros_like(Tensor([14, 286464],"float32"), )
paddle.zeros_like(Tensor([16, 272649],"float32"), )
paddle.zeros_like(Tensor([15, 171888],"float32"), )
paddle.zeros_like(Tensor([29, 359100],"float32"), )
paddle.zeros_like(Tensor([13, 310992],"float32"), )
paddle.zeros_like(Tensor([16, 24, 11109],"float32"), )
paddle.zeros_like(Tensor([25, 44640],"float32"), )
paddle.zeros_like(Tensor([16, 32, 5376],"float32"), )
paddle.zeros_like(Tensor([64, 22, 1726],"float32"), )
paddle.zeros_like(Tensor([16, 27, 11109],"float32"), )
paddle.zeros_like(Tensor([7, 193368],"float32"), )
paddle.zeros_like(Tensor([10, 257796],"float32"), )
paddle.zeros_like(Tensor([4, 386694],"float32"), )
paddle.zeros_like(Tensor([8, 17, 9261],"float32"), )
paddle.zeros_like(Tensor([17, 368280],"float32"), )
paddle.zeros_like(Tensor([24, 365211],"float32"), )
paddle.zeros_like(Tensor([6, 208197],"float32"), )
paddle.zeros_like(Tensor([55, 302832],"float32"), )
paddle.zeros_like(Tensor([2048, 2048, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([16, 50, 7581],"float32"), )
paddle.zeros_like(Tensor([6, 379050],"float32"), )
paddle.zeros_like(Tensor([8, 276210],"float32"), )
paddle.rank(input=Tensor([1, 1, 1, 2281701379],"float32"), )
paddle.rank(input=Tensor([1, 1, 4294967297, 1],"float16"), )
paddle.rank(input=Tensor([1, 2281701379, 1, 1],"int64"), )
paddle.rank(input=Tensor([1, 4294967297, 1, 1],"float16"), )
paddle.rank(input=Tensor([1, 1, 2281701379, 1],"bool"), )
paddle.rank(input=Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.rank(input=Tensor([1, 2281701379, 1, 1],"bool"), )
paddle.rank(input=Tensor([2281701379, 1, 1, 1],"bool"), )
paddle.rank(input=Tensor([4, 1073741825],"float16"), )
paddle.rank(input=Tensor([2147483649, 2],"float16"), )
paddle.rank(input=Tensor([1, 1, 1, 2281701379],"int64"), )
paddle.rank(input=Tensor([1, 1, 1, 2281701379],"int32"), )
paddle.rank(Tensor([3, 760567127],"float32"), )
paddle.rank(input=Tensor([4294967297],"float16"), )
paddle.rank(input=Tensor([1, 2281701379, 1, 1],"int32"), )
paddle.rank(input=Tensor([2281701379, 1, 1, 1],"int32"), )
paddle.rank(input=Tensor([2281701379, 1, 1, 1],"int64"), )
paddle.rank(input=Tensor([4294967297, 1],"float16"), )
paddle.rank(input=Tensor([1, 1, 1, 2281701379],"bool"), )
paddle.rank(input=Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.rank(input=Tensor([2, 2147483649],"float16"), )
paddle.rank(input=Tensor([4294967297, 1, 1, 1],"float16"), )
paddle.rank(input=Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.rank(input=Tensor([1, 1, 1, 4294967297],"float16"), )
paddle.rank(input=Tensor([1, 1, 2281701379, 1],"int64"), )
paddle.rank(input=Tensor([1, 1, 2281701379, 1],"int32"), )
paddle.rank(Tensor([456340276, 5],"float32"), )
paddle.Tensor.slice(Tensor([570425345, 4],"float32"), list[1,], list[0,], list[1,], )
paddle.Tensor.slice(Tensor([4, 570425345],"float32"), list[1,], list[0,], list[1,], )
paddle.Tensor.take_along_axis(Tensor([128, 1000],"float32"), indices=Tensor([128, 17825793],"int32"), axis=-1, )
paddle.Tensor.take_along_axis(Tensor([80, 1000],"float32"), indices=Tensor([80, 28521268],"int32"), axis=-1, )
paddle.Tensor.take_along_axis(Tensor([128, 17825793],"float32"), indices=Tensor([128, 1],"int32"), axis=-1, )
paddle.Tensor.take_along_axis(Tensor([80, 28521268],"float32"), indices=Tensor([80, 1],"int32"), axis=-1, )
paddle.Tensor.take_along_axis(Tensor([2281702, 1000],"float32"), indices=Tensor([2281702, 1],"int32"), axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([760567127, 3],"float32"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([1431655766, 3],"float16"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([3, 3, 253522376],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.cumulative_trapezoid(y=Tensor([190141782, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.cumulative_trapezoid(y=Tensor([1431655766, 3],"float16"), x=Tensor([1431655766, 3],"float16"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([1073741825, 4],"float16"), x=Tensor([1073741825, 4],"float16"), )
paddle.cumulative_trapezoid(y=Tensor([760567127, 3],"float32"), x=Tensor([760567127, 3],"float32"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 1140850690],"float32"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 2147483649],"float16"), x=None, dx=None, axis=-1, )
paddle.Tensor.rank(Tensor([256, 2048, 1, 4353],"float32"), )
paddle.Tensor.rank(Tensor([256, 1536, 5803, 1],"float32"), )
paddle.Tensor.rank(Tensor([2048, 1114113],"float32"), )
paddle.Tensor.rank(Tensor([256, 2048, 4353, 1],"float32"), )
paddle.Tensor.rank(Tensor([256, 192, 46422, 1],"float32"), )
paddle.Tensor.rank(Tensor([2228225, 1024, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([165054, 1536, 3, 3],"float32"), )
paddle.Tensor.rank(Tensor([256, 1536, 1935, 3],"float32"), )
paddle.Tensor.rank(Tensor([256, 2048, 3, 3],"float32"), )
paddle.Tensor.rank(Tensor([256, 192, 1, 46422],"float32"), )
paddle.Tensor.rank(Tensor([256, 1536, 3, 3],"float32"), )
paddle.Tensor.rank(Tensor([256, 8912897],"float32"), )
paddle.Tensor.rank(Tensor([256, 1536, 3, 1935],"float32"), )
paddle.Tensor.rank(Tensor([2, 1140850690],"float32"), )
paddle.Tensor.rank(Tensor([1114113, 2048, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([16, 142606337],"float32"), )
paddle.Tensor.rank(Tensor([256, 1024, 1, 8705],"float32"), )
paddle.Tensor.rank(Tensor([256, 1024, 8705, 1],"float32"), )
paddle.Tensor.rank(Tensor([142606337, 16],"float32"), )
paddle.Tensor.rank(Tensor([256, 8912897, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([2281701379, 1],"float32"), )
paddle.Tensor.rank(Tensor([256, 990322, 3, 3],"float32"), )
paddle.Tensor.rank(Tensor([1485483, 1536, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([256, 768, 3, 3],"float32"), )
paddle.Tensor.rank(Tensor([11883862, 192, 1, 1],"float32"), )
paddle.Tensor.rank(Tensor([24, 95070891],"float32"), )
paddle.Tensor.rank(Tensor([8912897, 256],"float32"), )
paddle.Tensor.rank(Tensor([2281701379],"float32"), )
paddle.Tensor.rank(Tensor([256, 1536, 1, 5803],"float32"), )
paddle.Tensor.rank(Tensor([17825793, 128],"float32"), )
paddle.unique(Tensor([91268056, 5, 5],"float32"), return_index=True, return_inverse=True, return_counts=True, axis=0, )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 2, 1024, 1048577],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 17825793, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([7, 318318, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 16, 262145, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 16, 1024, 262145],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([7, 11, 32, 926016],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([7, 11, 926016, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([3, 15158, 224, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 2228225, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 1, 2097153, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 32, 134217729],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 32, 33554433],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([557057, 4, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([4194305, 1, 32, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1048577, 4, 32, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([5, 7, 224, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 2, 1048577, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([4097, 1, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([16, 2, 131073, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 33554433, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 134217729, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 2228225, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 71303169, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 4194305, 32, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([1, 1, 32, 71303169],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([3, 1, 224, 3395389],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([3, 1, 3395389, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([2228225, 1, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 2049, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4194305, 32, 32],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([6497, 7, 224, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4097, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([202566, 11, 32, 32],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([5, 7, 291034, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([5, 7, 224, 291034],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([1, 4, 32, 17825793],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2, 1, 1024, 2097153],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([2049, 2, 1024, 1024],"float16"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([5, 9095, 224, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(x=Tensor([45474, 1, 224, 224],"float32"), )
paddle.incubate.softmax_mask_fuse_upper_triangle(Tensor([16, 2, 1024, 131073],"float16"), )
paddle.nn.functional.margin_cross_entropy(Tensor([116080198, 37],"float16"), Tensor([116080198],"int64"), return_softmax=False, margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 858993460],"float16"), Tensor([5],"int64"), margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, return_softmax=True, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 858993460],"float16"), Tensor([5],"int64"), margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, return_softmax=True, reduction="mean", )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 858993460],"float16"), Tensor([5],"int64"), return_softmax=False, margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([116080198, 37],"float16"), Tensor([116080198],"int64"), margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, return_softmax=True, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 456340276],"float32"), Tensor([5],"int64"), return_softmax=False, margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([116080198, 37],"float16"), Tensor([116080198],"int64"), margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, return_softmax=True, reduction="sum", )
paddle.nn.functional.margin_cross_entropy(Tensor([1073741825, 4],"float16"), label=Tensor([1073741825],"int64"), margin1=1.0, margin2=0.7, margin3=0.2, scale=32.0, group=None, return_softmax=False, reduction="mean", )
paddle.nn.functional.margin_cross_entropy(Tensor([116080198, 37],"float16"), Tensor([116080198],"int64"), return_softmax=False, margin1=1.0, margin2=0.0, margin3=0.35, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([1073741825, 4],"float16"), label=Tensor([1073741825],"int64"), margin1=1.0, margin2=0.5, margin3=0.0, scale=64.0, group=None, return_softmax=False, reduction="mean", )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 858993460],"float16"), Tensor([5],"int64"), margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, return_softmax=True, reduction="sum", )
paddle.nn.functional.margin_cross_entropy(Tensor([1073741825, 4],"float16"), label=Tensor([1073741825],"int64"), margin1=0.8, margin2=0.0, margin3=0.15, scale=40.0, group=None, return_softmax=False, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 858993460],"float16"), Tensor([5],"int64"), return_softmax=False, margin1=1.0, margin2=0.0, margin3=0.35, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([61667605, 37],"float32"), Tensor([61667605],"int64"), return_softmax=False, margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([5, 858993460],"float16"), Tensor([5],"int64"), return_softmax=False, margin1=1.35, margin2=0.0, margin3=0.0, scale=2.0, group=None, reduction=None, )
paddle.nn.functional.margin_cross_entropy(Tensor([116080198, 37],"float16"), Tensor([116080198],"int64"), margin1=1.0, margin2=0.5, margin3=0.0, scale=2.0, return_softmax=True, reduction="mean", )
paddle.nn.functional.margin_cross_entropy(Tensor([116080198, 37],"float16"), Tensor([116080198],"int64"), return_softmax=False, margin1=1.35, margin2=0.0, margin3=0.0, scale=2.0, group=None, reduction=None, )
paddle.reshape(Tensor([4, 18, 336, 304],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([8, 148, 148, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 47, 91392],"float16"), shape=tuple(-1,272,336,), )
paddle.reshape(x=Tensor([4, 80640, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 40, 72960],"float32"), shape=tuple(-1,240,304,), )
paddle.reshape(Tensor([4, 14, 76032],"float16"), shape=tuple(-1,264,288,), )
paddle.reshape(Tensor([16, 304, 280],"float16"), shape=tuple(16,-1,), )
paddle.reshape(Tensor([5552, 8, 2, 40, 2],"bfloat16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([8, 296, 336, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([64, 336, 272],"float32"), shape=tuple(64,-1,), )
paddle.reshape(x=Tensor([64, 96, 44, 44],"float16"), shape=list[64,2,48,44,44,], )
paddle.reshape(Tensor([8, 120, 144, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 224, 272, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([7576, 8, 2, 80],"bfloat16"), list[7576,8,160,], )
paddle.reshape(Tensor([8, 168, 144, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 51, 272, 304],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([8, 108, 152, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 26, 86016],"float32"), shape=tuple(-1,256,336,), )
paddle.reshape(Tensor([4, 4, 91392],"float16"), shape=tuple(-1,272,336,), )
paddle.reshape(Tensor([6544, 8, 1, 40, 2],"bfloat16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([4, 14, 80256],"float16"), shape=tuple(-1,304,264,), )
paddle.reshape(Tensor([4, 256, 264, 288],"float16"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([8, 132, 164, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(x=Tensor([4, 69930, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 208, 296, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([6352, 8, 2, 80],"bfloat16"), list[6352,8,160,], )
paddle.reshape(x=Tensor([8, 242991, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([264, 280, 336],"float32"), shape=tuple(264,-1,), )
paddle.reshape(Tensor([4, 13, 296, 304],"float32"), shape=list[-1,296,304,], )
paddle.reshape(Tensor([108, 336, 304],"float32"), shape=tuple(108,-1,), )
paddle.reshape(Tensor([12, 336, 336],"float16"), shape=tuple(12,-1,), )
paddle.reshape(x=Tensor([4, 277539, 1],"float16"), shape=tuple(-1,), )
paddle.reshape(Tensor([112, 216, 304],"float16"), shape=tuple(112,-1,), )
paddle.reshape(Tensor([8, 128, 320000],"float32"), shape=list[0,0,-1,100,100,], )
paddle.reshape(Tensor([128, 304, 272],"float16"), shape=tuple(128,-1,), )
paddle.reshape(Tensor([4, 12, 76160],"float32"), shape=tuple(-1,280,272,), )
paddle.reshape(x=Tensor([8, 302832, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([4, 46, 99456],"float16"), shape=tuple(-1,296,336,), )
paddle.reshape(x=Tensor([8, 279300, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 55, 60800],"float16"), shape=tuple(-1,200,304,), )
paddle.reshape(Tensor([4, 304, 240, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([160, 272, 336],"float32"), shape=tuple(160,-1,), )
paddle.reshape(Tensor([20, 152, 272, 2],"float16"), shape=list[20,-1,2,], )
paddle.reshape(x=Tensor([8, 378540, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([6120, 8, 2, 80],"bfloat16"), list[6120,8,160,], )
paddle.reshape(Tensor([4059, 4, 1536],"bfloat16"), list[-1,], )
paddle.reshape(Tensor([4, 56, 304, 336],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([4, 32, 336, 272],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([116, 272, 272],"float32"), shape=tuple(116,-1,), )
paddle.reshape(Tensor([4, 23, 59200],"float16"), shape=tuple(-1,200,296,), )
paddle.reshape(Tensor([8, 224, 304, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([4, 240, 248, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 21, 200, 288],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([4, 280, 336, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 19, 82688],"float16"), shape=tuple(-1,304,272,), )
paddle.reshape(Tensor([4, 256, 248, 304],"float32"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([44789760],"bfloat16"), list[7290,4,1536,], )
paddle.reshape(Tensor([22726656],"bfloat16"), list[3699,4,1536,], )
paddle.reshape(Tensor([4, 15, 272, 312],"float32"), shape=list[-1,272,312,], )
paddle.reshape(x=Tensor([14336, 7168],"bfloat16"), shape=list[102760448,], )
paddle.reshape(Tensor([4, 256, 272, 312],"float32"), shape=tuple(4,256,-1,), )
paddle.reshape(x=Tensor([4, 377514, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([8, 253728, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([4, 293397, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([252, 272, 304],"float32"), shape=tuple(252,-1,), )
paddle.reshape(Tensor([8, 224, 296, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 140, 156, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([48, 272, 304],"float32"), shape=tuple(48,-1,), )
paddle.reshape(Tensor([4, 66, 76, 60],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([116, 304, 320],"float32"), shape=tuple(116,-1,), )
paddle.reshape(Tensor([4, 18, 272, 336],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([140, 208, 328],"float16"), shape=tuple(140,-1,), )
paddle.reshape(Tensor([8, 248, 328, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 336, 288, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([20, 304, 296],"float32"), shape=tuple(20,-1,), )
paddle.reshape(Tensor([4, 15, 99712],"float16"), shape=tuple(-1,328,304,), )
paddle.reshape(Tensor([8, 216, 272, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([4, 24, 89984],"float16"), shape=tuple(-1,296,304,), )
paddle.reshape(Tensor([4, 256, 272, 336],"float16"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([292, 200, 304],"float16"), shape=tuple(292,-1,), )
paddle.reshape(Tensor([4, 6, 280, 328],"float32"), shape=list[-1,280,328,], )
paddle.reshape(x=Tensor([4, 171888, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([6760, 8, 2, 80],"bfloat16"), list[6760,8,160,], )
paddle.reshape(Tensor([20, 304, 336],"float16"), shape=tuple(20,-1,), )
paddle.reshape(Tensor([4, 312, 248, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 10, 86016],"float32"), shape=tuple(-1,256,336,), )
paddle.reshape(x=Tensor([64, 384, 12, 12],"float32"), shape=list[64,2,192,12,12,], )
paddle.reshape(x=Tensor([4, 369303, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(Tensor([212, 304, 336],"float32"), shape=tuple(212,-1,), )
paddle.reshape(Tensor([4, 34, 200, 304],"float32"), shape=list[-1,200,304,], )
paddle.reshape(Tensor([4, 7, 288, 336],"float32"), shape=list[-1,288,336,], )
paddle.reshape(Tensor([248, 200, 272],"float16"), shape=tuple(248,-1,), )
paddle.reshape(Tensor([128, 128, 768],"float16"), list[-1,768,], )
paddle.reshape(x=Tensor([4, 220968, 4],"float16"), shape=tuple(-1,4,), )
paddle.reshape(Tensor([4, 14, 60800],"float32"), shape=tuple(-1,200,304,), )
paddle.reshape(Tensor([8, 272, 336, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([30, 84, 8000],"float32"), list[-1,8000,], )
paddle.reshape(Tensor([4, 43, 200, 272],"float32"), shape=list[-1,200,272,], )
paddle.reshape(Tensor([8, 312, 296, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([80, 272, 336],"float32"), shape=tuple(80,-1,), )
paddle.nn.functional.max_pool1d(Tensor([126761188, 3, 6],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 380283564],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([23767723, 3, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([2, 35651585, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 760567127],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 142606337, 16],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 380283564, 6],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 760567127],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([47535446, 3, 16],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.Tensor.__getitem__(Tensor([1, 8193, 7168],"bfloat16"), tuple(slice(None,None,None),slice(None,-1,None),), )
paddle.Tensor.__getitem__(Tensor([1, 44800, 64],"float32"), tuple(slice(None,None,None),slice(None,44800,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 38912, 64],"float32"), tuple(slice(None,None,None),slice(None,38912,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([3399, 4, 1536],"bfloat16"), slice(None,3399,None), )
paddle.Tensor.__getitem__(Tensor([3800, 8, 1, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(0,None,2),), )
paddle.Tensor.__getitem__(Tensor([6088, 8, 1280],"bfloat16"), slice(None,-4,None), )
paddle.Tensor.__getitem__(Tensor([1, 52864, 64],"float32"), tuple(slice(None,None,None),slice(None,52864,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 25088, 56],"float32"), tuple(slice(None,None,None),slice(None,25088,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 49920, 56],"float32"), tuple(slice(None,None,None),slice(None,49920,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 37888, 64],"float32"), tuple(slice(None,None,None),slice(None,37888,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 37376, 56],"float32"), tuple(slice(None,None,None),slice(None,37376,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([2811, 4, 1536],"bfloat16"), tuple(Ellipsis,slice(None,256,None),), )
paddle.Tensor.__getitem__(Tensor([1, 69120, 56],"float32"), tuple(slice(None,None,None),slice(None,69120,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([3534, 4, 1536],"bfloat16"), slice(None,3534,None), )
paddle.Tensor.__getitem__(Tensor([1, 41472, 28],"float32"), tuple(slice(None,None,None),slice(None,41472,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([3072, 4, 1536],"bfloat16"), tuple(Ellipsis,slice(None,256,None),), )
paddle.Tensor.__getitem__(Tensor([1, 48640, 28],"float32"), tuple(slice(None,None,None),slice(None,48640,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 73088, 64],"float32"), tuple(slice(None,None,None),slice(None,73088,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 41728, 56],"float32"), tuple(slice(None,None,None),slice(None,41728,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 50688, 56],"float32"), tuple(slice(None,None,None),slice(None,50688,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([4554, 4, 1536],"bfloat16"), slice(None,4554,None), )
paddle.Tensor.__getitem__(Tensor([1, 75264, 56],"float32"), tuple(slice(None,None,None),slice(None,75264,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 63360, 56],"float32"), tuple(slice(None,None,None),slice(None,63360,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 47104, 64],"float32"), tuple(slice(None,None,None),slice(None,47104,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 52096, 64],"float32"), tuple(slice(None,None,None),slice(None,52096,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 23680, 64],"float32"), tuple(slice(None,None,None),slice(None,23680,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([8168, 8, 1, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(1,None,2),), )
paddle.Tensor.__getitem__(Tensor([1, 24064, 56],"float32"), tuple(slice(None,None,None),slice(None,24064,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 49920, 64],"float32"), tuple(slice(None,None,None),slice(None,49920,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 35072, 56],"float32"), tuple(slice(None,None,None),slice(None,35072,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 111616, 56],"float32"), tuple(slice(None,None,None),slice(None,111616,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 18688, 56],"float32"), tuple(slice(None,None,None),slice(None,18688,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([8192, 192],"float32"), slice(None,16,None), )
paddle.Tensor.__getitem__(Tensor([6088, 8, 2, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(1,None,2),), )
paddle.Tensor.__getitem__(Tensor([1, 26112, 56],"float32"), tuple(slice(None,None,None),slice(None,26112,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 56832, 28],"float32"), tuple(slice(None,None,None),slice(None,56832,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([3416, 8, 1280],"bfloat16"), slice(None,-5,None), )
paddle.Tensor.__getitem__(Tensor([1, 55296, 56],"float32"), tuple(slice(None,None,None),slice(None,55296,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 43648, 56],"float32"), tuple(slice(None,None,None),slice(None,43648,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 20736, 56],"float32"), tuple(slice(None,None,None),slice(None,20736,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 45824, 64],"float32"), tuple(slice(None,None,None),slice(None,45824,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([3658, 4, 1536],"bfloat16"), tuple(Ellipsis,slice(256,None,None),), )
paddle.Tensor.__getitem__(Tensor([3702, 4, 1536],"bfloat16"), slice(None,3702,None), )
paddle.Tensor.__getitem__(Tensor([1, 23680, 56],"float32"), tuple(slice(None,None,None),slice(None,23680,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 47360, 56],"float32"), tuple(slice(None,None,None),slice(None,47360,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([6088, 8, 1, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(0,None,2),), )
paddle.Tensor.__getitem__(Tensor([1, 73600, 56],"float32"), tuple(slice(None,None,None),slice(None,73600,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5566, 4, 1536],"bfloat16"), slice(None,5566,None), )
paddle.Tensor.__getitem__(Tensor([1, 74880, 56],"float32"), tuple(slice(None,None,None),slice(None,74880,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 75648, 56],"float32"), tuple(slice(None,None,None),slice(None,75648,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 61568, 56],"float32"), tuple(slice(None,None,None),slice(None,61568,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 53248, 56],"float32"), tuple(slice(None,None,None),slice(None,53248,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 89216, 64],"float32"), tuple(slice(None,None,None),slice(None,89216,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([4536, 8, 2, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(1,None,2),), )
paddle.Tensor.__getitem__(Tensor([1, 68736, 64],"float32"), tuple(slice(None,None,None),slice(None,68736,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([383, 4, 1536],"bfloat16"), tuple(Ellipsis,slice(256,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 32384, 56],"float32"), tuple(slice(None,None,None),slice(None,32384,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([4464, 8, 1280],"bfloat16"), slice(None,-6,None), )
paddle.Tensor.__getitem__(Tensor([1, 41728, 64],"float32"), tuple(slice(None,None,None),slice(None,41728,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([6104, 8, 2, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(0,None,2),), )
paddle.Tensor.__getitem__(Tensor([1, 34944, 56],"float32"), tuple(slice(None,None,None),slice(None,34944,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 51328, 64],"float32"), tuple(slice(None,None,None),slice(None,51328,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 37632, 64],"float32"), tuple(slice(None,None,None),slice(None,37632,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([3800, 8, 2, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(0,None,2),), )
paddle.Tensor.__getitem__(Tensor([1, 16512, 64],"float32"), tuple(slice(None,None,None),slice(None,16512,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 73344, 64],"float32"), tuple(slice(None,None,None),slice(None,73344,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 66560, 56],"float32"), tuple(slice(None,None,None),slice(None,66560,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([6391, 4, 1536],"bfloat16"), slice(None,6391,None), )
paddle.Tensor.__getitem__(Tensor([1, 20480, 56],"float32"), tuple(slice(None,None,None),slice(None,20480,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([6912, 8, 2, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(1,None,2),), )
paddle.Tensor.__getitem__(Tensor([1, 96256, 28],"float32"), tuple(slice(None,None,None),slice(None,96256,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 54272, 64],"float32"), tuple(slice(None,None,None),slice(None,54272,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 82048, 56],"float32"), tuple(slice(None,None,None),slice(None,82048,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 69632, 64],"float32"), tuple(slice(None,None,None),slice(None,69632,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 54784, 64],"float32"), tuple(slice(None,None,None),slice(None,54784,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 55808, 64],"float32"), tuple(slice(None,None,None),slice(None,55808,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 33920, 56],"float32"), tuple(slice(None,None,None),slice(None,33920,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([4560, 8, 1, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(0,None,2),), )
paddle.Tensor.__getitem__(Tensor([1, 19584, 64],"float32"), tuple(slice(None,None,None),slice(None,19584,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 59264, 56],"float32"), tuple(slice(None,None,None),slice(None,59264,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 36352, 56],"float32"), tuple(slice(None,None,None),slice(None,36352,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 23552, 56],"float32"), tuple(slice(None,None,None),slice(None,23552,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 50176, 28],"float32"), tuple(slice(None,None,None),slice(None,50176,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 56448, 64],"float32"), tuple(slice(None,None,None),slice(None,56448,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 22016, 56],"float32"), tuple(slice(None,None,None),slice(None,22016,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([3579, 4, 1536],"bfloat16"), slice(None,3579,None), )
paddle.Tensor.__getitem__(Tensor([1, 43520, 56],"float32"), tuple(slice(None,None,None),slice(None,43520,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([6480, 8, 2, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(1,None,2),), )
paddle.Tensor.__getitem__(Tensor([5552, 8, 1280],"bfloat16"), slice(None,-4,None), )
paddle.Tensor.__getitem__(Tensor([6392, 8, 1, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(1,None,2),), )
paddle.Tensor.__getitem__(Tensor([1, 37120, 64],"float32"), tuple(slice(None,None,None),slice(None,37120,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 46848, 64],"float32"), tuple(slice(None,None,None),slice(None,46848,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 47616, 64],"float32"), tuple(slice(None,None,None),slice(None,47616,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 27264, 64],"float32"), tuple(slice(None,None,None),slice(None,27264,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 21248, 56],"float32"), tuple(slice(None,None,None),slice(None,21248,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 61824, 64],"float32"), tuple(slice(None,None,None),slice(None,61824,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 54784, 56],"float32"), tuple(slice(None,None,None),slice(None,54784,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([6832, 8, 1, 80],"bfloat16"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,None),slice(0,None,2),), )
paddle.Tensor.__getitem__(Tensor([1, 59904, 64],"float32"), tuple(slice(None,None,None),slice(None,59904,None),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([1, 30080, 64],"float32"), tuple(slice(None,None,None),slice(None,30080,None),slice(None,None,None),), )
paddle.Tensor.__setitem__(Tensor([1, 9728, 56],"float32"), tuple(slice(None,None,None),slice(None,9728,None),slice(None,None,None),), Tensor([1, 9728, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 44032, 56],"float32"), tuple(slice(None,None,None),slice(None,44032,None),slice(None,None,None),), Tensor([1, 44032, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 74240, 56],"float32"), tuple(slice(None,None,None),slice(None,74240,None),slice(None,None,None),), Tensor([1, 74240, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 15616, 64],"float32"), tuple(slice(None,None,None),slice(None,15616,None),slice(None,None,None),), Tensor([1, 15616, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 20864, 64],"float32"), tuple(slice(None,None,None),slice(None,20864,None),slice(None,None,None),), Tensor([1, 20864, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 38912, 56],"float32"), tuple(slice(None,None,None),slice(None,38912,None),slice(None,None,None),), Tensor([1, 38912, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 37248, 56],"float32"), tuple(slice(None,None,None),slice(None,37248,None),slice(None,None,None),), Tensor([1, 37248, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 17408, 56],"float32"), tuple(slice(None,None,None),slice(None,17408,None),slice(None,None,None),), Tensor([1, 17408, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 92672, 28],"float32"), tuple(slice(None,None,None),slice(None,92672,None),slice(None,None,None),), Tensor([1, 92672, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 93184, 28],"float32"), tuple(slice(None,None,None),slice(None,93184,None),slice(None,None,None),), Tensor([1, 93184, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 47360, 56],"float32"), tuple(slice(None,None,None),slice(None,47360,None),slice(None,None,None),), Tensor([1, 47360, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 24832, 64],"float32"), tuple(slice(None,None,None),slice(None,24832,None),slice(None,None,None),), Tensor([1, 24832, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 48128, 64],"float32"), tuple(slice(None,None,None),slice(None,48128,None),slice(None,None,None),), Tensor([1, 48128, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 32384, 64],"float32"), tuple(slice(None,None,None),slice(None,32384,None),slice(None,None,None),), Tensor([1, 32384, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 7168],"float32"), Tensor([1, 8192],"bool"), Tensor([4458, 7168],"bfloat16"), )
paddle.Tensor.__setitem__(Tensor([1, 29056, 64],"float32"), tuple(slice(None,None,None),slice(None,29056,None),slice(None,None,None),), Tensor([1, 29056, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 61952, 28],"float32"), tuple(slice(None,None,None),slice(None,61952,None),slice(None,None,None),), Tensor([1, 61952, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 79488, 64],"float32"), tuple(slice(None,None,None),slice(None,79488,None),slice(None,None,None),), Tensor([1, 79488, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 60032, 64],"float32"), tuple(slice(None,None,None),slice(None,60032,None),slice(None,None,None),), Tensor([1, 60032, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 36608, 56],"float32"), tuple(slice(None,None,None),slice(None,36608,None),slice(None,None,None),), Tensor([1, 36608, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 41344, 56],"float32"), tuple(slice(None,None,None),slice(None,41344,None),slice(None,None,None),), Tensor([1, 41344, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 39936, 64],"float32"), tuple(slice(None,None,None),slice(None,39936,None),slice(None,None,None),), Tensor([1, 39936, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 7168],"float32"), Tensor([1, 8192],"bool"), Tensor([6084, 7168],"bfloat16"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 7168],"float32"), Tensor([1, 8192],"bool"), Tensor([5976, 7168],"bfloat16"), )
paddle.Tensor.__setitem__(Tensor([1, 41728, 56],"float32"), tuple(slice(None,None,None),slice(None,41728,None),slice(None,None,None),), Tensor([1, 41728, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 30336, 56],"float32"), tuple(slice(None,None,None),slice(None,30336,None),slice(None,None,None),), Tensor([1, 30336, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 15360, 64],"float32"), tuple(slice(None,None,None),slice(None,15360,None),slice(None,None,None),), Tensor([1, 15360, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 55936, 56],"float32"), tuple(slice(None,None,None),slice(None,55936,None),slice(None,None,None),), Tensor([1, 55936, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 25600, 56],"float32"), tuple(slice(None,None,None),slice(None,25600,None),slice(None,None,None),), Tensor([1, 25600, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 58496, 56],"float32"), tuple(slice(None,None,None),slice(None,58496,None),slice(None,None,None),), Tensor([1, 58496, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 76416, 64],"float32"), tuple(slice(None,None,None),slice(None,76416,None),slice(None,None,None),), Tensor([1, 76416, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 23168, 56],"float32"), tuple(slice(None,None,None),slice(None,23168,None),slice(None,None,None),), Tensor([1, 23168, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 29952, 64],"float32"), tuple(slice(None,None,None),slice(None,29952,None),slice(None,None,None),), Tensor([1, 29952, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 44544, 56],"float32"), tuple(slice(None,None,None),slice(None,44544,None),slice(None,None,None),), Tensor([1, 44544, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 40064, 64],"float32"), tuple(slice(None,None,None),slice(None,40064,None),slice(None,None,None),), Tensor([1, 40064, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 90880, 64],"float32"), tuple(slice(None,None,None),slice(None,90880,None),slice(None,None,None),), Tensor([1, 90880, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 39040, 56],"float32"), tuple(slice(None,None,None),slice(None,39040,None),slice(None,None,None),), Tensor([1, 39040, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 18688, 64],"float32"), tuple(slice(None,None,None),slice(None,18688,None),slice(None,None,None),), Tensor([1, 18688, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 15872, 56],"float32"), tuple(slice(None,None,None),slice(None,15872,None),slice(None,None,None),), Tensor([1, 15872, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 41472, 28],"float32"), tuple(slice(None,None,None),slice(None,41472,None),slice(None,None,None),), Tensor([1, 41472, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 67072, 64],"float32"), tuple(slice(None,None,None),slice(None,67072,None),slice(None,None,None),), Tensor([1, 67072, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 57344, 28],"float32"), tuple(slice(None,None,None),slice(None,57344,None),slice(None,None,None),), Tensor([1, 57344, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 16128, 56],"float32"), tuple(slice(None,None,None),slice(None,16128,None),slice(None,None,None),), Tensor([1, 16128, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 58624, 64],"float32"), tuple(slice(None,None,None),slice(None,58624,None),slice(None,None,None),), Tensor([1, 58624, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 63104, 64],"float32"), tuple(slice(None,None,None),slice(None,63104,None),slice(None,None,None),), Tensor([1, 63104, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 7168],"float32"), Tensor([1, 8192],"bool"), Tensor([35, 7168],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 7168],"float32"), Tensor([1, 8192],"bool"), Tensor([383, 7168],"bfloat16"), )
paddle.Tensor.__setitem__(Tensor([1, 57216, 56],"float32"), tuple(slice(None,None,None),slice(None,57216,None),slice(None,None,None),), Tensor([1, 57216, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 9088, 56],"float32"), tuple(slice(None,None,None),slice(None,9088,None),slice(None,None,None),), Tensor([1, 9088, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 33280, 56],"float32"), tuple(slice(None,None,None),slice(None,33280,None),slice(None,None,None),), Tensor([1, 33280, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 67712, 64],"float32"), tuple(slice(None,None,None),slice(None,67712,None),slice(None,None,None),), Tensor([1, 67712, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 36352, 28],"float32"), tuple(slice(None,None,None),slice(None,36352,None),slice(None,None,None),), Tensor([1, 36352, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 86528, 28],"float32"), tuple(slice(None,None,None),slice(None,86528,None),slice(None,None,None),), Tensor([1, 86528, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 98304, 56],"float32"), tuple(slice(None,None,None),slice(None,98304,None),slice(None,None,None),), Tensor([1, 98304, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 19072, 56],"float32"), tuple(slice(None,None,None),slice(None,19072,None),slice(None,None,None),), Tensor([1, 19072, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 17024, 56],"float32"), tuple(slice(None,None,None),slice(None,17024,None),slice(None,None,None),), Tensor([1, 17024, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 59008, 64],"float32"), tuple(slice(None,None,None),slice(None,59008,None),slice(None,None,None),), Tensor([1, 59008, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 7168],"float32"), Tensor([1, 8192],"bool"), Tensor([8162, 7168],"bfloat16"), )
paddle.Tensor.__setitem__(Tensor([1, 77824, 64],"float32"), tuple(slice(None,None,None),slice(None,77824,None),slice(None,None,None),), Tensor([1, 77824, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 10624, 56],"float32"), tuple(slice(None,None,None),slice(None,10624,None),slice(None,None,None),), Tensor([1, 10624, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 21248, 64],"float32"), tuple(slice(None,None,None),slice(None,21248,None),slice(None,None,None),), Tensor([1, 21248, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 39808, 64],"float32"), tuple(slice(None,None,None),slice(None,39808,None),slice(None,None,None),), Tensor([1, 39808, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 9728, 56],"float32"), tuple(slice(None,None,None),slice(None,9728,None),slice(None,None,None),), Tensor([1, 9728, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 15104, 64],"float32"), tuple(slice(None,None,None),slice(None,15104,None),slice(None,None,None),), Tensor([1, 15104, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 30976, 56],"float32"), tuple(slice(None,None,None),slice(None,30976,None),slice(None,None,None),), Tensor([1, 30976, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 77696, 64],"float32"), tuple(slice(None,None,None),slice(None,77696,None),slice(None,None,None),), Tensor([1, 77696, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 42752, 64],"float32"), tuple(slice(None,None,None),slice(None,42752,None),slice(None,None,None),), Tensor([1, 42752, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 7168],"float32"), Tensor([1, 8192],"bool"), Tensor([3438, 7168],"bfloat16"), )
paddle.Tensor.__setitem__(Tensor([1, 25216, 64],"float32"), tuple(slice(None,None,None),slice(None,25216,None),slice(None,None,None),), Tensor([1, 25216, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 89088, 28],"float32"), tuple(slice(None,None,None),slice(None,89088,None),slice(None,None,None),), Tensor([1, 89088, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 87552, 28],"float32"), tuple(slice(None,None,None),slice(None,87552,None),slice(None,None,None),), Tensor([1, 87552, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 7168],"float32"), Tensor([1, 8192],"bool"), Tensor([6753, 7168],"bfloat16"), )
paddle.Tensor.__setitem__(Tensor([1, 23936, 64],"float32"), tuple(slice(None,None,None),slice(None,23936,None),slice(None,None,None),), Tensor([1, 23936, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 8192, 7168],"float32"), Tensor([1, 8192],"bool"), Tensor([5801, 7168],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 33408, 64],"float32"), tuple(slice(None,None,None),slice(None,33408,None),slice(None,None,None),), Tensor([1, 33408, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 24576, 64],"float32"), tuple(slice(None,None,None),slice(None,24576,None),slice(None,None,None),), Tensor([1, 24576, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 29056, 56],"float32"), tuple(slice(None,None,None),slice(None,29056,None),slice(None,None,None),), Tensor([1, 29056, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 49408, 56],"float32"), tuple(slice(None,None,None),slice(None,49408,None),slice(None,None,None),), Tensor([1, 49408, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 65408, 64],"float32"), tuple(slice(None,None,None),slice(None,65408,None),slice(None,None,None),), Tensor([1, 65408, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 11520, 64],"float32"), tuple(slice(None,None,None),slice(None,11520,None),slice(None,None,None),), Tensor([1, 11520, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 23424, 56],"float32"), tuple(slice(None,None,None),slice(None,23424,None),slice(None,None,None),), Tensor([1, 23424, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 17664, 56],"float32"), tuple(slice(None,None,None),slice(None,17664,None),slice(None,None,None),), Tensor([1, 17664, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 54912, 64],"float32"), tuple(slice(None,None,None),slice(None,54912,None),slice(None,None,None),), Tensor([1, 54912, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 22144, 64],"float32"), tuple(slice(None,None,None),slice(None,22144,None),slice(None,None,None),), Tensor([1, 22144, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 47616, 56],"float32"), tuple(slice(None,None,None),slice(None,47616,None),slice(None,None,None),), Tensor([1, 47616, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 64000, 64],"float32"), tuple(slice(None,None,None),slice(None,64000,None),slice(None,None,None),), Tensor([1, 64000, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 14848, 56],"float32"), tuple(slice(None,None,None),slice(None,14848,None),slice(None,None,None),), Tensor([1, 14848, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 32512, 56],"float32"), tuple(slice(None,None,None),slice(None,32512,None),slice(None,None,None),), Tensor([1, 32512, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 47232, 64],"float32"), tuple(slice(None,None,None),slice(None,47232,None),slice(None,None,None),), Tensor([1, 47232, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 56960, 56],"float32"), tuple(slice(None,None,None),slice(None,56960,None),slice(None,None,None),), Tensor([1, 56960, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 44032, 28],"float32"), tuple(slice(None,None,None),slice(None,44032,None),slice(None,None,None),), Tensor([1, 44032, 28],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 57088, 56],"float32"), tuple(slice(None,None,None),slice(None,57088,None),slice(None,None,None),), Tensor([1, 57088, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 72704, 56],"float32"), tuple(slice(None,None,None),slice(None,72704,None),slice(None,None,None),), Tensor([1, 72704, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 18432, 64],"float32"), tuple(slice(None,None,None),slice(None,18432,None),slice(None,None,None),), Tensor([1, 18432, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 50816, 64],"float32"), tuple(slice(None,None,None),slice(None,50816,None),slice(None,None,None),), Tensor([1, 50816, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 26496, 56],"float32"), tuple(slice(None,None,None),slice(None,26496,None),slice(None,None,None),), Tensor([1, 26496, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 63360, 64],"float32"), tuple(slice(None,None,None),slice(None,63360,None),slice(None,None,None),), Tensor([1, 63360, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 14336, 56],"float32"), tuple(slice(None,None,None),slice(None,14336,None),slice(None,None,None),), Tensor([1, 14336, 56],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 23168, 64],"float32"), tuple(slice(None,None,None),slice(None,23168,None),slice(None,None,None),), Tensor([1, 23168, 64],"float32"), )
paddle.Tensor.__setitem__(Tensor([1, 25600, 28],"float32"), tuple(slice(None,None,None),slice(None,25600,None),slice(None,None,None),), Tensor([1, 25600, 28],"float32"), )
paddle.Tensor.put_along_axis(Tensor([2, 60],"float32"), Tensor([2, 4],"int64"), Tensor([2, 1140850690],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([2, 60],"float32"), Tensor([570425345, 4],"int64"), Tensor([2, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([2, 1140850690],"float32"), Tensor([2, 4],"int64"), Tensor([2, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([2, 60],"float32"), Tensor([2, 1140850690],"int64"), Tensor([2, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([6, 380283564],"float32"), Tensor([6, 4],"int64"), Tensor([6, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([2, 60],"float32"), Tensor([2, 4],"int64"), Tensor([570425345, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([6, 60],"float32"), Tensor([6, 4],"int64"), Tensor([6, 380283564],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([38028357, 60],"float32"), Tensor([38028357, 4],"int64"), Tensor([38028357, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([6, 60],"float32"), Tensor([6, 4],"int64"), Tensor([570425345, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([6, 60],"float32"), Tensor([570425345, 4],"int64"), Tensor([6, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([6, 60],"float32"), Tensor([6, 380283564],"int64"), Tensor([6, 4],"float32"), axis=1, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3040, 1280],"bfloat16"), Tensor([3040, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([7184, 1280],"bfloat16"), Tensor([7184, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([5848, 1280],"bfloat16"), Tensor([5848, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([4536, 1280],"bfloat16"), Tensor([4536, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3064, 1280],"bfloat16"), Tensor([3064, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([2952, 1280],"bfloat16"), Tensor([2952, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([5736, 1280],"bfloat16"), Tensor([5736, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([5976, 1280],"bfloat16"), Tensor([5976, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([4848, 1280],"bfloat16"), Tensor([4848, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([1912, 1280],"bfloat16"), Tensor([1912, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([5088, 1280],"bfloat16"), Tensor([5088, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3536, 1280],"bfloat16"), Tensor([3536, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3784, 1280],"bfloat16"), Tensor([3784, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([4064, 1280],"bfloat16"), Tensor([4064, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3584, 1280],"bfloat16"), Tensor([3584, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([4560, 1280],"bfloat16"), Tensor([4560, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([5552, 1280],"bfloat16"), Tensor([5552, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3664, 1280],"bfloat16"), Tensor([3664, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6088, 1280],"bfloat16"), Tensor([6088, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([7168, 1280],"bfloat16"), Tensor([7168, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([4816, 1280],"bfloat16"), Tensor([4816, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6480, 1280],"bfloat16"), Tensor([6480, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6120, 1280],"bfloat16"), Tensor([6120, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6808, 1280],"bfloat16"), Tensor([6808, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([5064, 1280],"bfloat16"), Tensor([5064, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([7296, 1280],"bfloat16"), Tensor([7296, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([2816, 1280],"bfloat16"), Tensor([2816, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6248, 1280],"bfloat16"), Tensor([6248, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6104, 1280],"bfloat16"), Tensor([6104, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6352, 1280],"bfloat16"), Tensor([6352, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3832, 1280],"bfloat16"), Tensor([3832, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3416, 1280],"bfloat16"), Tensor([3416, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6296, 1280],"bfloat16"), Tensor([6296, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6544, 1280],"bfloat16"), Tensor([6544, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6128, 1280],"bfloat16"), Tensor([6128, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6392, 1280],"bfloat16"), Tensor([6392, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([7576, 1280],"bfloat16"), Tensor([7576, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6760, 1280],"bfloat16"), Tensor([6760, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3400, 1280],"bfloat16"), Tensor([3400, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6912, 1280],"bfloat16"), Tensor([6912, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3072, 1280],"bfloat16"), Tensor([3072, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([2280, 1280],"bfloat16"), Tensor([2280, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3440, 1280],"bfloat16"), Tensor([3440, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([4296, 1280],"bfloat16"), Tensor([4296, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6504, 1280],"bfloat16"), Tensor([6504, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([5568, 1280],"bfloat16"), Tensor([5568, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([4360, 1280],"bfloat16"), Tensor([4360, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([7712, 1280],"bfloat16"), Tensor([7712, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3800, 1280],"bfloat16"), Tensor([3800, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6376, 1280],"bfloat16"), Tensor([6376, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3352, 1280],"bfloat16"), Tensor([3352, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6832, 1280],"bfloat16"), Tensor([6832, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([8168, 1280],"bfloat16"), Tensor([8168, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([3704, 1280],"bfloat16"), Tensor([3704, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6288, 1280],"bfloat16"), Tensor([6288, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6416, 1280],"bfloat16"), Tensor([6416, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([6256, 1280],"bfloat16"), Tensor([6256, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_dropout_add(Tensor([4464, 1280],"bfloat16"), Tensor([4464, 1280],"bfloat16"), p=0.0, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([5488, 1, 7168],"bfloat16"), Tensor([7168, 257],"bfloat16"), Tensor([257],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([6805, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([8162, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([30272, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([23616, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([57042535, 40],"float32"), Tensor([57042535],"float32"), True, )
paddle.incubate.nn.functional.fused_linear(Tensor([2097153, 2, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([45888, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([6502, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([6255, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([7165, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([4194305, 1024],"float16"), Tensor([1024, 1000],"float16"), Tensor([1000],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([48704, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([28288, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([3438, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([38528, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([55296, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([40, 57042535],"float32"), Tensor([57042535],"float32"), False, )
paddle.incubate.nn.functional.fused_linear(Tensor([50304, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1906, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 1024],"float16"), Tensor([1024, 4194305],"float16"), Tensor([4194305],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([50304, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([50048, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 132, 8134408],"float16"), Tensor([8134408, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([35712, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([44544, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([5084, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([61696, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 40],"float32"), Tensor([57042535, 40],"float32"), Tensor([57042535],"float32"), True, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4843, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 4194305, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([5801, 1, 7168],"bfloat16"), Tensor([7168, 257],"bfloat16"), Tensor([257],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 45634028],"float32"), Tensor([50, 45634028],"float32"), Tensor([50],"float32"), True, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([5741, 1, 7168],"bfloat16"), Tensor([7168, 257],"bfloat16"), Tensor([257],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 45634028],"float32"), Tensor([45634028, 50],"float32"), Tensor([50],"float32"), False, )
paddle.incubate.nn.functional.fused_linear(Tensor([508401, 132, 64],"float16"), Tensor([64, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([45888, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 4194305, 1024],"float16"), Tensor([1024, 3072],"float16"), Tensor([3072],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 8193, 4096],"float16"), Tensor([4096, 1024],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([8192, 448],"bfloat16"), Tensor([448, 7168],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([27328, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 49, 684785],"float16"), Tensor([684785, 1024],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 32769, 1024],"float16"), Tensor([1024, 4096],"float16"), Tensor([4096],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([7573, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([3036, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([52352, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([26816, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30656, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 76056713],"float32"), Tensor([76056713, 50],"float32"), Tensor([50],"float32"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([57042535, 40],"float32"), Tensor([40, 50],"float32"), Tensor([50],"float32"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([29312, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([7710, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([24512, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([5544, 1, 7168],"bfloat16"), Tensor([7168, 257],"bfloat16"), Tensor([257],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([48960, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([6410, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([6351, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([5761, 1, 7168],"bfloat16"), Tensor([7168, 257],"bfloat16"), Tensor([257],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([5514, 1, 7168],"bfloat16"), Tensor([7168, 257],"bfloat16"), Tensor([257],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([30400, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([85599, 49, 1024],"float16"), Tensor([1024, 4096],"float16"), Tensor([4096],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([7065, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([57042535, 40],"float32"), Tensor([50, 40],"float32"), Tensor([50],"float32"), True, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([30, 76056713],"float32"), Tensor([50, 76056713],"float32"), Tensor([50],"float32"), True, )
paddle.incubate.nn.functional.fused_linear(Tensor([5788, 1, 7168],"bfloat16"), Tensor([7168, 257],"bfloat16"), Tensor([257],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([7290, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([48832, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([5876, 1, 7168],"bfloat16"), Tensor([7168, 257],"bfloat16"), Tensor([257],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4, 148, 7255013],"float16"), Tensor([7255013, 192],"float16"), Tensor([192],"float16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([51328, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([28288, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([32512, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([57472, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([5566, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([2811, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([52032, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([47808, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([1016801, 132, 32],"float16"), Tensor([32, 64],"float16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4458, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([22528, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([3534, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([6753, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([51008, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([28672, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([6122, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([5814, 1, 7168],"bfloat16"), Tensor([7168, 257],"bfloat16"), Tensor([257],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([3702, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 14336],"bfloat16"), Tensor([14336, 7168],"bfloat16"), Tensor([7168],"bfloat16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([54080, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([4097, 1024, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([34880, 1280],"bfloat16"), Tensor([1280, 320],"bfloat16"), Tensor([320],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([44544, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([15296, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 32769, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 4097, 1024],"float16"), Tensor([1024, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1, 8192, 7168],"bfloat16"), Tensor([7168, 12800],"bfloat16"), Tensor([12800],"bfloat16"), )
paddle.incubate.nn.functional.fused_linear(Tensor([6544, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([3783, 1, 7168],"bfloat16"), Tensor([7168, 64],"bfloat16"), Tensor([64],"bfloat16"), transpose_weight=False, )
paddle.incubate.nn.functional.fused_linear(Tensor([27200, 160],"bfloat16"), Tensor([160, 1280],"bfloat16"), None, )
paddle.incubate.nn.functional.fused_linear(Tensor([5555, 1, 7168],"bfloat16"), Tensor([7168, 257],"bfloat16"), Tensor([257],"bfloat16"), )
paddle.nn.functional.dropout(Tensor([5568, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6352, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([5552, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3040, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([7168, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4064, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4360, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6104, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([8168, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2280, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([5848, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6392, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3440, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6248, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6128, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3352, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6480, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3064, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3800, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([5064, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6376, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3400, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2952, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4848, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4560, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3536, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4536, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4296, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1912, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3784, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3416, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([5736, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6088, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3584, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3704, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6544, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6296, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([7184, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([5976, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6256, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4816, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3072, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3832, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2816, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6912, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6288, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4464, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6120, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([7576, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6808, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6832, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([7296, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([7712, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6416, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6760, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([5088, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([6504, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3664, 1280],"bfloat16"), 0.0, training=True, mode="upscale_in_train", )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 4096, 64, 128],"bfloat16"), None, None, rotary_emb_base=10000, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 4096, 8, 128],"bfloat16"), None, None, rotary_emb_base=10000, )
paddle.Tensor.frexp(Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.frexp(Tensor([4, 5, 214748365],"float16"), )
paddle.Tensor.frexp(Tensor([357913942, 12],"float16"), )
paddle.Tensor.frexp(Tensor([429496730, 5, 2],"float16"), )
paddle.Tensor.frexp(Tensor([10, 429496730],"float16"), )
paddle.incubate.nn.functional.blha_get_max_len(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), Tensor([2281701379],"float32"), )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194305, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"float16"), bias=Tensor([107374183],"float16"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 57042535],"float32"), bias=None, act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194305, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"float16"), bias=Tensor([107374183],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 2147483649],"float16"), Tensor([2147483649],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194305, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([11408507, 20, 10],"int32"), bias=Tensor([10],"float32"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([195084, 22016],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([101, 42524429],"float16"), Tensor([42524429],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194305, 512],"float16"), bias=Tensor([512],"float16"), act_method="geglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([6710887, 640],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 2228225, 512],"float32"), bias=Tensor([512],"float32"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 57042535],"float32"), bias=Tensor([57042535],"float32"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float16"), bias=Tensor([512],"float16"), act_method="geglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([33554433, 128],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([59, 72796056],"float16"), Tensor([72796056],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 2228225, 512],"float32"), bias=None, act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([222823, 20, 512],"float32"), bias=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 107374183],"float16"), bias=Tensor([107374183],"float16"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([58, 74051161],"float16"), Tensor([74051161],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float16"), bias=Tensor([512],"float16"), act_method="swiglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([222823, 20, 512],"float32"), bias=None, act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 4194305, 512],"float16"), bias=Tensor([512],"float16"), act_method="swiglu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([222823, 20, 512],"float32"), bias=Tensor([512],"float32"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([60, 71582789],"float16"), Tensor([71582789],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 57042535],"float32"), bias=Tensor([57042535],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([67108865, 64],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 57042535],"int32"), bias=Tensor([57042535],"float32"), dequant_scales=Tensor([57042535],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([16777217, 256],"float16"), Tensor([256],"float16"), act_method="gelu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 114085069, 10],"int32"), bias=Tensor([10],"float32"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 2228225, 512],"float32"), bias=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", )
paddle.incubate.nn.functional.fused_bias_act(Tensor([123, 34918434],"float16"), None, act_method="swiglu", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([419431, 20, 512],"float16"), bias=Tensor([512],"float16"), act_method="gelu", compute_dtype="default", )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(x=Tensor([1, 2, 4],"float32"), residual=Tensor([285212673, 2, 4],"float32"), bias=None, ln_scale=Tensor([4],"float32"), ln_bias=None, dropout_rate=0.0, ln_epsilon=1e-05, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(Tensor([8, 278529, 1024],"float32"), Tensor([8, 278529, 1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 0.0, 1e-05, )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(Tensor([17409, 128, 1024],"float32"), Tensor([17409, 128, 1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 0.0, 1e-05, )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(x=Tensor([285212673, 2, 4],"float32"), residual=Tensor([1, 2, 4],"float32"), bias=Tensor([4],"float32"), ln_scale=Tensor([4],"float32"), ln_bias=Tensor([4],"float32"), dropout_rate=0.0, ln_epsilon=1e-05, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(x=Tensor([285212673, 2, 4],"float32"), residual=Tensor([1, 2, 4],"float32"), bias=None, ln_scale=Tensor([4],"float32"), ln_bias=None, dropout_rate=0.0, ln_epsilon=1e-05, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(x=Tensor([1, 2, 4],"float32"), residual=Tensor([285212673, 2, 4],"float32"), bias=Tensor([4],"float32"), ln_scale=Tensor([4],"float32"), ln_bias=Tensor([4],"float32"), dropout_rate=0.0, ln_epsilon=1e-05, training=True, mode="upscale_in_train", name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 751054],"float32"), Tensor([751054, 130],"float32"), Tensor([130, 751054],"float32"), Tensor([130],"float32"), Tensor([751054],"float32"), Tensor([751054],"float32"), Tensor([751054],"float32"), Tensor([751054],"float32"), Tensor([751054],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 1413749],"float16"), Tensor([1413749, 130],"float16"), Tensor([130, 1413749],"float16"), Tensor([130],"float16"), Tensor([1413749],"float16"), Tensor([1413749],"float16"), Tensor([1413749],"float16"), Tensor([1413749],"float16"), Tensor([1413749],"float16"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([2281701379],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float16"), Tensor([508, 130],"float16"), Tensor([130, 508],"float16"), Tensor([130],"float16"), Tensor([508],"float16"), Tensor([4294967297],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 1140850690, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([2281701379],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([285212673, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([285212673, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 570425345, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 144889, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 1140850690, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([2281701379],"float32"), Tensor([8],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 570425345, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, Tensor([4],"float32"), Tensor([4],"float32"), dropout1_rate=0, dropout2_rate=0, activation="relu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([86273, 98, 508],"float16"), Tensor([508, 130],"float16"), Tensor([130, 508],"float16"), Tensor([130],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 144889, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([570425345, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 751054],"float32"), Tensor([751054, 130],"float32"), Tensor([130, 751054],"float32"), Tensor([130],"float32"), Tensor([751054],"float32"), Tensor([751054],"float32"), Tensor([751054],"float32"), Tensor([751054],"float32"), Tensor([751054],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([45833, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([2281701379],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([285212673, 2, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([570425345, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([570425345, 2, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), activation="gelu", dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(x=Tensor([1, 1140850690, 2],"float32"), linear1_weight=Tensor([2, 2],"float32"), linear2_weight=Tensor([2, 2],"float32"), dropout1_rate=0, dropout2_rate=0, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([2281701379],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 98, 508],"float16"), Tensor([508, 130],"float16"), Tensor([130, 508],"float16"), Tensor([130],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), Tensor([4294967297],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([45833, 98, 508],"float32"), Tensor([508, 130],"float32"), Tensor([130, 508],"float32"), Tensor([130],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), Tensor([508],"float32"), 0.0, 0.0, activation="relu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([31, 272731, 508],"float16"), Tensor([508, 130],"float16"), Tensor([130, 508],"float16"), Tensor([130],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), Tensor([508],"float16"), 0.0, 0.0, activation="gelu", pre_layer_norm=False, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 1, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8, 8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([8],"float32"), Tensor([2281701379],"float32"), 0.0, 0.0, activation="gelu", pre_layer_norm=True, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([1, 570425345, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4, 4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), Tensor([4],"float32"), None, None, dropout1_rate=0, dropout2_rate=0, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=True, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 142606337],"float32"), Tensor([142606337],"float32"), Tensor([142606337],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([142606337],"float32"), residual=Tensor([16, 142606337],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8912897, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([8912897, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 33554433],"float16"), Tensor([33554433, 128],"float16"), Tensor([128],"float16"), False, False, "none", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float16"), Tensor([4, 1073741825],"float16"), Tensor([1073741825],"float16"), False, False, "none", )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([1024, 3072],"float32"), Tensor([1024, 1024],"float32"), False, Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, None, None, None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=True, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float16"), Tensor([3, 16, 64, 1024],"float16"), Tensor([1024, 1024],"float16"), False, Tensor([1024],"float32"), Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float16"), Tensor([1024],"float16"), None, Tensor([8, 16, 128, 128],"float16"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), False, Tensor([1024],"float32"), Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), False, Tensor([1024],"float32"), Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float16"), Tensor([3, 16, 64, 1024],"float16"), Tensor([1024, 1024],"float16"), False, Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float16"), Tensor([1024],"float16"), None, Tensor([8, 16, 128, 128],"float16"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), False, Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([1024, 3072],"float32"), Tensor([1024, 1024],"float32"), False, Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3072],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=True, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), False, Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), False, Tensor([1024],"float32"), Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, None, None, None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([1024, 3072],"float32"), Tensor([1024, 1024],"float32"), False, Tensor([1024],"float32"), Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3072],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=True, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), False, Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, None, None, None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([1024, 3072],"float32"), Tensor([1024, 1024],"float32"), False, Tensor([1024],"float32"), Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, None, None, None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=True, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([1, 67108865, 64],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([101, 42524429],"float16"), Tensor([42524429],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([8912897, 256],"float32"), Tensor([256],"float32"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([64, 67108865],"float16"), Tensor([67108865],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([8388609, 1, 512],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([100, 42949673],"float16"), Tensor([42949673],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 1, 2147483649],"float16"), Tensor([2147483649],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([123, 34918434],"float16"), Tensor([34918434],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 33554433, 64],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([104, 41297763],"float16"), Tensor([41297763],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 4194305, 512],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 1140850690],"float32"), Tensor([1140850690],"float32"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([136, 31580642],"float16"), Tensor([31580642],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([8388609, 512],"float16"), Tensor([512],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 2147483649],"float16"), Tensor([2147483649],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([67108865, 64],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([67108865, 1, 64],"float16"), Tensor([64],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([2, 1, 2147483649],"float16"), Tensor([2147483649],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([16777217, 256],"float16"), Tensor([256],"float16"), None, 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([5592406, 768],"float16"), Tensor([768],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_rms_norm(Tensor([131, 32786010],"float16"), Tensor([32786010],"float16"), None, 1e-06, begin_norm_axis=1, )
paddle.linalg.eigh(Tensor([4, 1073741825],"float16"), "U", )
paddle.linalg.eigh(Tensor([4, 570425345],"float32"), "U", )
paddle.linalg.eigh(Tensor([1073741825, 4],"float16"), "U", )
paddle.linalg.eigh(Tensor([32, 71303169],"float32"), "L", )
paddle.linalg.eigh(Tensor([456340276, 5],"float32"), )
paddle.linalg.eigh(Tensor([71303169, 32],"float32"), "L", )
paddle.linalg.eigh(Tensor([570425345, 4],"float32"), "U", )
paddle.linalg.eigh(Tensor([5, 456340276],"float32"), )
paddle.linalg.lstsq(Tensor([2, 114085069, 10],"float32"), Tensor([2, 114085069, 4],"float32"), rcond=1e-15, driver="gelss", )
paddle.linalg.lstsq(Tensor([3, 50704476, 8],"float32"), Tensor([3, 50704476, 15],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([253522376, 9],"float32"), Tensor([253522376, 5],"float32"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([228170138, 2],"float32"), Tensor([228170138, 10],"float32"), rcond=1e-15, driver="gelsy", )
paddle.nn.functional.one_hot(Tensor([7, 23282668, 14],"int64"), num_classes=2, )
paddle.nn.functional.one_hot(Tensor([2281701379, 1],"int64"), 2, )
paddle.nn.functional.one_hot(Tensor([7605672, 300],"int64"), 2, )
paddle.nn.functional.one_hot(Tensor([39, 58505164],"int64"), num_classes=2, )
paddle.nn.functional.one_hot(Tensor([11523745, 198],"int64"), 2, )
paddle.nn.functional.one_hot(Tensor([7, 7, 46565335],"int64"), num_classes=2, )
paddle.nn.functional.one_hot(Tensor([14, 20372334, 4, 2],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([2, 1140850690],"int64"), 2, )
paddle.nn.functional.one_hot(Tensor([14, 2, 81489335],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([14, 40744668, 4],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([456341, 5000],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([14, 2, 40744668, 2],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([7605672, 300],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([285212673, 2, 4],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([1, 2281701379],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([2281701379],"int64"), num_classes=3, )
paddle.nn.functional.one_hot(Tensor([130, 17551550],"int64"), num_classes=2, )
paddle.nn.functional.one_hot(Tensor([2281701379],"int64"), 2, )
paddle.nn.functional.one_hot(Tensor([91, 25073642],"int64"), num_classes=2, )
paddle.nn.functional.one_hot(Tensor([23282668, 7, 14],"int64"), num_classes=2, )
paddle.nn.functional.one_hot(Tensor([2281701379],"int64"), num_classes=2, )
paddle.nn.functional.one_hot(Tensor([14, 2, 4, 20372334],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([142606337, 2, 4, 2],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([11883862, 192],"int64"), 2, )
paddle.nn.functional.one_hot(Tensor([380283564, 6],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([2281701379],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([22817014, 100],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([128, 17825793],"int64"), 2, )
paddle.nn.functional.one_hot(Tensor([10, 228170138],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([1140850690, 2],"int64"), 3, )
paddle.nn.functional.one_hot(Tensor([1140850690, 2],"int64"), num_classes=2, )
paddle.nn.utils.parameters_to_vector(list[Tensor([285212673, 2, 4],"float32"),Tensor([285212673],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([142606337, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 228170138],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([2, 1140850690],"float32"),Tensor([2],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 228170138],"float32"),Tensor([20],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([71303169, 2, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 20],"float32"),Tensor([2281701379],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([2281701379],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([71303169, 2, 4, 4],"float32"),Tensor([71303169],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 4, 23767723],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([17825793, 2, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 23767723, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([285212673, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([142606337, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([142606337, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([142606337, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 142606337],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([2281701379],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([64, 35651585],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 35651585],"float32"),Tensor([64, 35651585],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([2281701379],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 11883862, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([2, 2],"float32"),Tensor([2281701379],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 380283564],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 47535446, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 47535446],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([2281701379],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 47535446],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([760567127, 3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([17825793, 2, 4, 4, 4],"float32"),Tensor([17825793],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([142606337, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 35651585],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 47535446],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 95070891],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([2281701379],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 47535446],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 47535446],"float32"),Tensor([48, 47535446],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([114085069, 20],"float32"),Tensor([20],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([2281701379],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([142606337, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([142606337, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 47535446],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 4, 4],"float32"),Tensor([2281701379],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 142606337],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([285212673, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 15],"float32"),Tensor([2281701379],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([1140850690, 2],"float32"),Tensor([2],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 95070891, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([285212673, 2, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 228170138],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 190141782, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 4],"float32"),Tensor([2281701379],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 23767723, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 35651585],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([2281701379],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 228170138],"float32"),Tensor([228170138],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([2281701379],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 142606337],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 35651585],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([285212673, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([142606337, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([2281701379],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([142606337, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4],"float32"),Tensor([2281701379],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 142606337],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([2281701379],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([152113426, 15],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([64, 35651585],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.sort(Tensor([5, 456340276],"float32"), descending=True, )
paddle.sort(Tensor([3, 760567127],"float32"), descending=True, )
